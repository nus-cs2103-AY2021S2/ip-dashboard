[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"    enableAssertions \u003d true"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":45,"austenjs":17}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"T|1|minuman"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"T|1|ayah"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"T|1|abcde"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"T|1|meki"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"T|0|ayam"}],"authorContributionMap":{"austenjs":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"### Interactive GUI"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"The textbox has green background and unique user image for the Duke to increase UI/UX of the application."},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"![Image of Duke](Ui.png)"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"### `list` - List all tasks in the TaskList"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"Example of usage: `list`"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"### `delete` - Delete a task in the TaskList"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"Example of usage: `delete (indexOfTask)`"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"### `done` - Finish a task in the TaskList"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"Example of usage: `done (indexOfTask)`"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"### `sort` - Sort the TaskList alphabetically"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"Example of usage: `sort`"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"### `statistics` - Give statistics of finished tasks in the TaskList"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"Example of usage: `statistics`"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"### `find` - Find tasks with specified keywords in the TaskList"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"Example of usage: `find (keyword)`"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"### `help` - Give list of commands for Duke"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"Example of usage: `help`"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"### `contact` - Get contact related to a task"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"Example of usage: `contact (indexOfTask)`"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"### `addContact` - Add contact details to a task"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"Example of usage: `addContact (indexOfTask) (contactName) (contactNumber)`"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"### `allContacts` - List all contacts (if any) from each task in the TaskList"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"Example of usage: `allContacts`"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"### `todo` - Add a Todo task into the TaskList"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"Example of usage: `todo (description)`"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"### `deadline` - Add a Deadline task into the TaskList"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"Example of usage: `deadline (description) \\by (yyyy-mm-dd)`"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"### `event` - Add an Event task into the TaskList"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"Example of usage: `event (description) \\at (timeDescription)`"}],"authorContributionMap":{"-":17,"austenjs":45}},{"path":"src/main/java/ContactDetail.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * Class that takes care of contact details of a Task."},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"public class ContactDetail {"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    private String contactName;"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    private int contactNumber;"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"     * Constructor for ContactDetail"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    public ContactDetail() {"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"        this.contactName \u003d \"\";"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"        this.contactNumber \u003d 000;"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"     * Adds contact details to a Task"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"     * @param contactName Name of the contact"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"     * @param contactNumber Number of the contact"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"    public void addContactDetails(String contactName, int contactNumber) {"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"        this.contactName \u003d contactName;"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"        this.contactNumber \u003d contactNumber;"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"     * Get contact details of a Task"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"     * @return String representation of contact details"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"    public String getContactDetails() {"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"        if (!hasContactDetails()) {"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"            return \"No details of the contact\";"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"        return this.contactName + \" (\" + this.contactNumber + \")\";"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"     * Check whether the task has contact details"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"     * @return Boolean regarding the existence of contactdetails"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"    public boolean hasContactDetails() {"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"        return !this.contactName.isEmpty();"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":46}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":" * Represents a Deadline task. Represented by the task, the LocalDate object of the deadline,"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":" * and a boolean state denoting whether the task has been done or not."},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"public class Deadline extends Task {"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    private static final String OUTPUT_DATE_FORMAT \u003d \"MMM dd yyyy\";"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"    private final LocalDate deadline;"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"     * Constructor of a Deadline object"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"     * @param task Task need to be done"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"     * @param deadline Date when the task need to be done"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"     * @throws DukeExceptionDeadline The date format is not in \"yyyy-MM-dd\""},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"    Deadline(String task, String deadline) throws DukeExceptionDeadline {"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"        super(task);"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE;"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"            this.deadline \u003d LocalDate.parse(deadline, formatter);"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"            throw new DukeExceptionDeadline(\"Wrong format of date.\" +"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"                    \" The format should be yyyy-MM-dd\");"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"     * Constructor of a deadline object"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"     * @param task Task need to be done"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"     * @param deadline Date when the task need to be done"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"     * @param done A boolean representing the state of the task (done or not)"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"     * @throws DukeExceptionDeadline The date format is not in \"yyyy-MM-dd\""},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"    Deadline(String task, String deadline, boolean done) throws DukeExceptionDeadline {"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"        super(task, done);"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE;"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"            this.deadline \u003d LocalDate.parse(deadline, formatter);"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"            throw new DukeExceptionDeadline(\"Wrong format of date. \" +"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"                    \"The format should be yyyy-mm-dd\");"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"     * Constructor of a deadline Object"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"     * @param task Task need to be done"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"     * @param deadline Date when the task need to be done"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"     * @param done A boolean representing the state of the task (done or not)"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"    Deadline(String task, LocalDate deadline, boolean done) {"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"        super(task, done);"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"     * Overriden method from the parent class Task. The purpose is to"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"     * return a new done Task."},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"     * @return a Task that has been done."},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"    public Task finishTask() throws DukeException{"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"        if (this.isDone) {"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"Task has been done before!\");"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"        return new Deadline(this.task, this.deadline,true);"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"     * An overriden method from the parent class Task. The purpose is to"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"     * return a string representation for txt files."},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"     * @return String representation for txt files."},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"    public String saveString() {"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"        return \"D|\" + super.saveString() + \"|\" + this.deadline;"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"     * Overriden method from the object class."},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"     * @return String representation of Deadline."},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"    public String toString() {"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"        String date \u003d this.deadline.format(DateTimeFormatter.ofPattern(OUTPUT_DATE_FORMAT));"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":93}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader("},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"                    MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"            fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"        dialog.setText(text);"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"        displayPicture.setImage(img);"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"    private void flip() {"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"        Collections.reverse(tmp);"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"     * Create a dialog box for user"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"     * @param text Text to be shown"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"     * @param img Image to be shown"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"     * @return A dialog box with text and image"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"        return new DialogBox(text, img);"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"     * Create a dialog box for Duke"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"     * @param text Text to be shown"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"     * @param img Image to be shown"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"     * @return A dialog box with text and image"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"        db.flip();"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"        return db;"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":72}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * An app that interacts with the users and help them list down tasks"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" * they need to do."},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    private Storage storage;"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    private TaskList taskList;"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"    private Parser parser;"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"    public String getResponse(String command) {"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"        String output \u003d \"\";"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"        if (command.equals(\"bye\")) {"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"            return Ui.doBye();"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"            this.parser \u003d new Parser(command);"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"            String parsedCommand \u003d this.parser.getCommand();"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"            String description \u003d this.parser.getDescription();"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"            String deadline \u003d this.parser.getDeadLine();"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"            output \u003d processCommand(parsedCommand, description);"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"            if (output.equals(\"\")){"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"                Task task \u003d processTask(parsedCommand, description, deadline);"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"                output \u003d taskList.addTask(task);"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"        } catch (DukeException e) {"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"            output \u003d Ui.showMessage(e.getMessage());"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"        } catch (DukeExceptionDeadline e) {"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"            output \u003d Ui.showMessage(e.getMessage());"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"            storage.writeFile(taskList);"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"        } catch (DukeException e) {"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"            output \u003d Ui.showMessage(e.getMessage());"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"        assert(!output.equals(\"\"));"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"        return output;"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"     * Constructor of the Duke app"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"     * @param filepath A string showing the path of the txt file"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"     * @throws DukeExceptionCorruptedData The txt file format is corrupted"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"    public Duke(String filepath, String fileName) throws DukeExceptionCorruptedData {"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"        this.storage \u003d new Storage(filepath, fileName);"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"        this.taskList \u003d this.storage.load();"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"     * A function that process the command from the users and create a new Task"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"     * @param command The type of task given"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"     * @param description The description of the task need to be done"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"     * @param deadline The deadline of the task (if any)"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"     * @return Task object based on the command"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"     * @throws DukeException Command is not valid"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"     * @throws DukeExceptionDeadline Deadline given is not in \"yyyy-MM-dd\""},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"    public static Task processTask(String command, String description, String deadline)"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"            throws DukeException, DukeExceptionDeadline {"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        switch (command){"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"        case \"todo\":"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"            return new Todo(description);"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"        case \"deadline\":"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"            return new Deadline(description, deadline);"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"        case \"event\":"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"            return new Event(description, deadline);"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"        throw new DukeException(\"Invalid Command\");"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"     * A function that process the command from the users and do the command (if it is valid)"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"     * @param command The command given"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"     * @param description The description of the command"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"     * @return String from the processed command"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"     * @throws DukeException Invalid command"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"    public String processCommand(String command, String description) throws DukeException {"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"        switch (command){"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"        case \"list\":"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"            assert (description.equals(\"\"));"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"            return taskList.iterateList();"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"        case \"done\":"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"            return taskList.finishATask(description);"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"        case \"delete\":"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"            return taskList.deleteATask(description);"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"        case \"find\":"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"            return taskList.findTasks(description);"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"        case \"undo\":"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"            return taskList.undo(description);"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"        case \"sort\":"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"            return taskList.sort();"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"        case \"statistics\":"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"            return taskList.statistics();"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"        case \"help\":"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"            return Ui.showHelpMessage();"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"        case \"contact\":"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"            return taskList.getContact(description);"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"        case \"addContact\":"},{"lineNumber":100,"author":{"gitId":"austenjs"},"content":"            return taskList.addContactDetails(description);"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"        case \"allContacts\":"},{"lineNumber":102,"author":{"gitId":"austenjs"},"content":"            return taskList.getAllContactDetails();"},{"lineNumber":103,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"        return \"\";"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"austenjs":102,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * A class that represents common error in Duke application."},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"public class DukeException extends Exception {"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"    DukeException(String e) {"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"        super(e);"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":8}},{"path":"src/main/java/DukeExceptionCorruptedData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * A class that represents corrupted data error in Duke Application."},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"public class DukeExceptionCorruptedData extends Exception {"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"    DukeExceptionCorruptedData(String e) {"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"        super(e);"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":8}},{"path":"src/main/java/DukeExceptionDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * A class that represents Dateline format error in Duke Application."},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"public class DukeExceptionDeadline extends Exception {"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    DukeExceptionDeadline(String e) {"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"        super(e);"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"}"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":""}],"authorContributionMap":{"austenjs":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * Represents an Event task. Consists of task to do, as well as"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" * deadline of the task."},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"public class Event extends Task{"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    private final String deadline;"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"     * Constructor of an Event object"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"     * @param task Task need to be done"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"     * @param deadline Deadline when to be done"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"    Event(String task, String deadline) {"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"        super(task);"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"     * Constructor of an Event object"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"     * @param task Task need to be done"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"     * @param deadline Deadline when to be done"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"     * @param done Boolean representing whether the task has been done or not"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"    Event(String task, String deadline, boolean done) {"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"        super(task, done);"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"     * An overriden method from parent class Task. The purpose is to marked the"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"     * current Event as done."},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"     * @return A new Event that has been done"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"    public Task finishTask() throws DukeException{"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"        if (this.isDone) {"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"Task has been done before!\");"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"        return new Event(this.task, this.deadline, true);"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"     * An overriden method from parent class Task. The purpose is to represents"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"     * a String for later saved in txt files"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"     * @return String representation in txt files"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"    public String saveString() {"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"        return \"E|\" + super.saveString() + \"|\" + this.deadline;"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"     * String representation of an Event class"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"     * @return String representation of an Event class."},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"    public String toString() {"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.deadline + \")\";"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":60}},{"path":"src/main/java/History.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"import java.util.LinkedList;"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":" * A class that represents history of item type T after every change"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":" * @param \u003cT\u003e"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"public class History\u003cT\u003e {"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"    private final LinkedList\u003cT\u003e histories;"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"     * Constructor of history"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"    public History() {"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"        this.histories \u003d new LinkedList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"     * Add an item into the history"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"     * @param item The item wanted to be added"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"    public void add(T item) {"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"        this.histories.add(item);"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"     * Get the last added item of the history"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"     * @return The last item from the history"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"     * @throws DukeException If the history is empty"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"    public T getLast() throws DukeException {"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"        if (this.histories.size() \u003d\u003d 0) {"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"Sorry!!! There are no histories!\");"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        return histories.pollLast();"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"     * Get the min(n-item, historySize) from the history"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"     * @param numberOfItems The index"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"     * @return The N-th position item from the back"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"     * @throws DukeException If the history is empty"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"    public T getMultipleItems(int numberOfItems) throws DukeException {"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"        if (this.histories.size() \u003d\u003d 0) {"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"Sorry!!! There are no histories!\");"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"        int numberOfUndos \u003d compareNumberOfHistoriesWithInput(numberOfItems);"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"        T current \u003d this.histories.peekLast();"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"        while (numberOfUndos \u003e 0) {"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"            current \u003d this.histories.pollLast();"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"            numberOfUndos--;"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"        return current;"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"     * Compare index"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"     * @param numberOfUndos Number given by the user"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"     * @return minimum of (numberOfUndos, histories.size())"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"    public int compareNumberOfHistoriesWithInput(int numberOfUndos) {"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"        return Math.min(this.histories.size(), numberOfUndos);"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"     * Check whether histories is empty or not"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"     * @return Boolean representing whether the histories is empty or not"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"    public boolean isEmpty() {"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"        return this.histories.isEmpty();"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":72}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"    private Duke duke;"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"            duke \u003d new Duke(\"./data/\", \"duke.txt\");"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"            stage.setTitle(\"Fayola\");"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"        } catch (DukeExceptionCorruptedData e) {"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"            Ui.showMessage(e.getMessage());"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":33}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"import javafx.application.Platform;"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"import java.util.Timer;"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"import java.util.TimerTask;"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"    private static int millisecondsToExit \u003d 1500; //delay before closing"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Austen.png\"));"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Fayola.png\"));"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"        assert(userImage !\u003d null);"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"        assert(dukeImage !\u003d null);"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.getWelcomeMessage(),dukeImage));"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"        duke \u003d d;"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"    private void handleUserInput() {"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"        String response \u003d getResponse(input);"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"        );"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"            userInput.clear();"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"            new Timer().schedule("},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"                    new TimerTask() {"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"                        @Override"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"                        public void run() {"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"                            Platform.exit();"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"                            System.exit(0);"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"                        }"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"                    }, millisecondsToExit);"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"        userInput.clear();"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"     * Gives a response based on input"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"    private String getResponse(String input) {"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"        assert(duke !\u003d null);"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"        return duke.getResponse(input);"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":74}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * A class that intended to parse the command from the users in DUke application."},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"    private String command;"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    private String description;"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"     * Constructor"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"     * @param input String given by the user"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    Parser(String input) {"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"        String cleanedInput \u003d input.trim();"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"        String[] tokens \u003d cleanedInput.split(\" \");"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"        this.command \u003d tokens[0];"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"        this.description \u003d cleanedInput;"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"     * Get the type of command from the user"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"     * @return Type of command from the user"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"    public String getCommand() {"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"        return this.command;"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"     * Get the description of the task"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"     * @return String representing the description of the task"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"     * @throws DukeException Empty description or unknown command"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"    public String getDescription() throws DukeException{"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"            switch (command){"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"            case \"list\":"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"            case \"help\":"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"            case \"sort\":"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"                if (this.description.length() !\u003d 4) {"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but list shouldn\u0027t have any additional arguments\");"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"                }"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"                return \"\";"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"            case \"statistics\":"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"                if (this.description.length() !\u003d 10) {"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but statistics shouldn\u0027t have any additional arguments\");"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"                return \"\";"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"            case \"allContacts\":"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"                if (this.description.length() !\u003d 11) {"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but allContacts shouldn\u0027t have any additional arguments\");"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"                return \"\";"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"            case \"undo\":"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"                return this.description.length() \u003e 4 ? this.description.substring(5) : \"\";"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"            case \"done\":"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"            case \"todo\":"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"            case \"find\":"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"                return this.description.substring(5);"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"            case \"delete\":"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"                return this.description.substring(7);"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"            case \"contact\":"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"                return this.description.substring(8);"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"            case \"addContact\":"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"                return this.description.substring(11);"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"            case \"deadline\":"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"                String[] phrasesFromDeadline \u003d this.description.split(\" /by \");"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"                return phrasesFromDeadline[0].substring(this.command.length() + 1);"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"            case \"event\":"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"                String[] phrasesFromEvent \u003d this.description.split(\" /at \");"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"                return phrasesFromEvent[0].substring(this.command.length() + 1);"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but the \""},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"                    + this.command +\" must have description :-(\");"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but the input is kinda faulty :-(\");"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I cannot understand the input :-(\");"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"     * Get the deadline of the task (if any)"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"     * @return String representing the deadline of the task"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"     * @throws DukeException Empty description or unknown command"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"    public String getDeadLine() throws DukeException {"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"            switch (command){"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"            case \"list\":"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"            case \"help\":"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"            case \"sort\":"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"            case \"done\":"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"            case \"delete\":"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"            case \"todo\":"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"            case \"find\":"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"            case \"addContact\":"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"            case \"allContacts\":"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"            case \"undo\":"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"            case \"statistics\":"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"            case \"contact\":"},{"lineNumber":100,"author":{"gitId":"austenjs"},"content":"                return \"\";"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"            case \"deadline\":"},{"lineNumber":102,"author":{"gitId":"austenjs"},"content":"                String[] phrasesFromDeadline \u003d this.description.split(\" /by \");"},{"lineNumber":103,"author":{"gitId":"austenjs"},"content":"                return phrasesFromDeadline[1];"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":"            case \"event\":"},{"lineNumber":105,"author":{"gitId":"austenjs"},"content":"                String[] phrasesFromEvent \u003d this.description.split(\" /at \");"},{"lineNumber":106,"author":{"gitId":"austenjs"},"content":"                return phrasesFromEvent[1];"},{"lineNumber":107,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"austenjs"},"content":"        catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":110,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but the \""},{"lineNumber":111,"author":{"gitId":"austenjs"},"content":"                    + this.command +\" must have description :-(\");"},{"lineNumber":112,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"austenjs"},"content":"        catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":114,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but the input is kinda faulty :-(\");"},{"lineNumber":115,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"austenjs"},"content":"        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I cannot understand the input :-(\");"},{"lineNumber":117,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":118}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":" * A class that control the data saving and loading in Duke Application."},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"    private final String filePath;"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    private final String fileName;"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"     * Constructor for Storage object"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"     * @param filePath String representing relative path of the txt file"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"    Storage(String filePath, String fileName) {"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"        this.fileName \u003d fileName;"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"     * Load the data from a line of text to be a Task object"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"     * @param type String representing type of Task"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"     * @param bool String representing the state of the Task"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"     * @param commands Description of the task"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"     * @return Task corresponding to the type, bool, abd commands"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"     * @throws DukeExceptionCorruptedData The data format is incompatible"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"    private Task processData(String type, String bool, String[] commands)"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"            throws DukeExceptionCorruptedData {"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"        switch (type){"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"        case \"T\":"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"            return bool.equals(\"1\") ? new Todo(commands[0], true) : new Todo(commands[0]);"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"        case \"D\":"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"            try {"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"                return bool.equals(\"1\") ? new Deadline(commands[0], commands[1], true)"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"                        : new Deadline(commands[0], commands[1]);"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"            } catch (DukeExceptionDeadline e) {"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"                throw new DukeExceptionCorruptedData(\"The deadline task in the txt file corrupted\");"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"        case \"E\":"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"            return bool.equals(\"1\") ? new Event(commands[0], commands[1], true)"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"                    : new Event(commands[0], commands[1]);"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"        throw new DukeExceptionCorruptedData(\"The txt file is corrupted\");"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"     * Load data from the txt file, If no txt file, create new file. If"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"     * no folder, create new folder."},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"     * @return List of Task object"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"     * @throws DukeExceptionCorruptedData The data format is incompatible"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"    public TaskList load() throws DukeExceptionCorruptedData {"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"        File file \u003d new File(this.filePath + this.fileName);"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"            Scanner scanner \u003d new Scanner(file);"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"            while(scanner.hasNextLine()) {"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"                String line \u003d scanner.nextLine();"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"                String[] commands \u003d line.split(\"\\\\|\");"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"                tasks.add(processData(commands[0], commands[1], Arrays.copyOfRange(commands, 2, 5)));"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"            return new TaskList(tasks);"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"            try {"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"                file.createNewFile();"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"            } catch(IOException error) {"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"                new File(this.filePath).mkdir();"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        return new TaskList();"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"     * Write file to the existing file (if doesn\u0027t exist, create a new one)"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"     * @param tasks TaskList wanted to be written"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"     * @throws DukeException Wrong path"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"    public void writeFile(TaskList tasks) throws DukeException {"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"            FileWriter file \u003d new FileWriter(this.filePath + this.fileName, false);"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"            for (Task task: tasks.getTasks()) {"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"                file.write(String.format(task.saveString() + \"%n\"));"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"            file.close();"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"        } catch(IOException e) {"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"Wrong path\");"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":97}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * A class representing a common Task object. Consists of the description"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" * of the task as well as the state."},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    protected final String task;"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"    protected final boolean isDone;"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"    private ContactDetail contactDetail;"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"     * Constructor of a Task object"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"     * @param task Task need to be done"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    Task(String task) {"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"        this.task \u003d task;"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"        this.contactDetail \u003d new ContactDetail();"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"    Task(String task, boolean isDone) {"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"        this.task \u003d task;"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"        this.contactDetail \u003d new ContactDetail();"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"     * Finish the current Task and return a new Task"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"     * @return New Task object that has been done"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"    public Task finishTask() throws DukeException {"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"        if (this.isDone) {"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"Task has been done before!\");"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"        return new Task(this.task, true);"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"    public boolean hasDone() {"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"        return this.isDone;"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"     * Return a String representation for saving in txt files"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"     * @return String representation in txt files"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"    public String saveString() {"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"        if (this.isDone) {"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"            return \"1|\" + this.task;"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"        return \"0|\" + this.task;"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"    public boolean hasContactDetails() {"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"        return this.contactDetail.hasContactDetails();"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"    public void addContactDetails(String contactName, String contactNumber)"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"            throws DukeException {"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"            this.contactDetail.addContactDetails(contactName, Integer.parseInt(contactNumber));"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"Contact Number is not a number\");"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"    public String getContactDetails() {"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"        return this.contactDetail.getContactDetails();"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"     * Returns a String representation of Task object"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"     * @return String representation of Task object"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"    public String toString() {"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"        String tick \u003d \" \";"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"        if (this.isDone){"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"            tick \u003d \"X\";"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"        return \"[\" + tick + \"]\" + \" \" + this.task;"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"    public boolean equals(Object o) {"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"        if (this \u003d\u003d o) {"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"            return true;"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"        else if (o instanceof Task) {"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"            Task otherTask \u003d (Task) o;"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"            return this.equals(otherTask);"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"        return false;"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"    public boolean equals(Task otherTask) {"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"        return this.task.equals(otherTask.task);"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":98}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"import java.util.Comparator;"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"import java.util.stream.Collectors;"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":" * Class that encapsulate, control, and evaluate a list of task."},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    private History\u003cList\u003cTask\u003e\u003e histories;"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"     * Constructor of TaskList object"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    TaskList() {"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"        this.histories \u003d new History\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"     * Constructor of TaskList object"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"     * @param tasks List of Task"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"    TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"        this.tasks \u003d tasks.stream().collect(Collectors.toList()); //deep-copy"},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"        this.histories \u003d new History\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"     * Iterate Task object in list and ask Ui to print them"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"    public String iterateList() {"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"        if (this.tasks.size() \u003d\u003d 0) {"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"            return Ui.showMessage(\"There are no task in your list\");"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"        String output \u003d Ui.showMessage(\"Here are the tasks in your list:\");"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"            output +\u003d Ui.showMessage((i + 1) + \".\" + this.tasks.get(i));"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"        return output;"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"     * Set a task to be done and ask Ui to print the completion"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"     * @param input The String representation of the index of the task"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"     * @throws DukeException Index out of bound"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"    public String finishATask(String input) throws DukeException {"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"            int index \u003d Integer.parseInt(input) - 1;"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"            this.histories.add(this.tasks.stream().collect(Collectors.toList()));"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"            this.tasks.set(index, this.tasks.get(index).finishTask());"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"            return Ui.finishTaskMessage(this.tasks.get(index).toString());"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"        catch(NumberFormatException e) {"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"OOPS!!! The index must be an integer\");"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"OOPS!!! The index of done cannot be empty.\");"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":"        catch(IndexOutOfBoundsException e) {"},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"OOPS!!! The index of done exceed the tasks\u0027 list.\");"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"     * Delete a task and ask Ui to print the completion"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"     * @param input The String representation of the index of the task"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"     * @throws DukeException Index out of bound"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"    public String deleteATask(String input) throws DukeException {"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"austenjs"},"content":"            int index \u003d Integer.parseInt(input) - 1;"},{"lineNumber":76,"author":{"gitId":"austenjs"},"content":"            Task deleted \u003d this.tasks.get(index);"},{"lineNumber":77,"author":{"gitId":"austenjs"},"content":"            this.histories.add(this.tasks.stream().collect(Collectors.toList()));"},{"lineNumber":78,"author":{"gitId":"austenjs"},"content":"            this.tasks.remove(index);"},{"lineNumber":79,"author":{"gitId":"austenjs"},"content":"            return Ui.deleteTaskMessage(deleted.toString(), this.tasks.size());"},{"lineNumber":80,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"austenjs"},"content":"        catch(NumberFormatException e) {"},{"lineNumber":82,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"OOPS!!! The index must be an integer\");"},{"lineNumber":83,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"austenjs"},"content":"        catch(ArrayIndexOutOfBoundsException e) {"},{"lineNumber":85,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"OOPS!!! The index of delete cannot be empty.\");"},{"lineNumber":86,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"austenjs"},"content":"        catch(IndexOutOfBoundsException e) {"},{"lineNumber":88,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"OOPS!!! The index of delete exceed the tasks\u0027 list.\");"},{"lineNumber":89,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":92,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"austenjs"},"content":"     * Add task to the current TaskList and ask Ui to print the completion"},{"lineNumber":94,"author":{"gitId":"austenjs"},"content":"     * @param task Task that is going to be added"},{"lineNumber":95,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"austenjs"},"content":"    public String addTask(Task task) throws DukeException {"},{"lineNumber":97,"author":{"gitId":"austenjs"},"content":"        if (this.tasks.stream().filter(item -\u003e item.equals(task)).collect(Collectors.toList()).size() !\u003d 0) {"},{"lineNumber":98,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"Same task has been added before !!!\"); //duplicated items are not allowed"},{"lineNumber":99,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"austenjs"},"content":"        this.histories.add(this.tasks.stream().collect(Collectors.toList()));"},{"lineNumber":101,"author":{"gitId":"austenjs"},"content":"        this.tasks.add(task);"},{"lineNumber":102,"author":{"gitId":"austenjs"},"content":"        return Ui.addTaskMessage(task.toString(), this.tasks.size());"},{"lineNumber":103,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":105,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"austenjs"},"content":"     * Finding Tasks that match the keyword and ask Ui to print them"},{"lineNumber":107,"author":{"gitId":"austenjs"},"content":"     * @param keyword Keyword to find in list of Tasks"},{"lineNumber":108,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"austenjs"},"content":"    public String findTasks(String keyword) {"},{"lineNumber":110,"author":{"gitId":"austenjs"},"content":"        List\u003cTask\u003e temp;"},{"lineNumber":111,"author":{"gitId":"austenjs"},"content":"        Predicate\u003cTask\u003e findKeywordFromTask \u003d task -\u003e task.toString().contains(keyword);"},{"lineNumber":112,"author":{"gitId":"austenjs"},"content":"        temp \u003d this.tasks.stream().filter(findKeywordFromTask).collect(Collectors.toList());"},{"lineNumber":113,"author":{"gitId":"austenjs"},"content":"        if (temp.size() \u003d\u003d 0) {"},{"lineNumber":114,"author":{"gitId":"austenjs"},"content":"            return Ui.showMessage(\"No matching task\");"},{"lineNumber":115,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"austenjs"},"content":"        String output \u003d Ui.showMessage(\"Here are the matching tasks in your list:\");"},{"lineNumber":117,"author":{"gitId":"austenjs"},"content":"        for (int i \u003d 0; i \u003c temp.size(); i++) {"},{"lineNumber":118,"author":{"gitId":"austenjs"},"content":"            output +\u003d Ui.showMessage(String.valueOf(i + 1) + \".\" + temp.get(i));"},{"lineNumber":119,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"austenjs"},"content":"        return output;"},{"lineNumber":121,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":122,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":124,"author":{"gitId":"austenjs"},"content":"    public String undo(String description) throws DukeException{"},{"lineNumber":125,"author":{"gitId":"austenjs"},"content":"        if (this.histories.isEmpty()) {"},{"lineNumber":126,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"Sorry, the history of TaskList is empty!!!\");"},{"lineNumber":127,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"austenjs"},"content":"        if (description.equals(\"\") || description.equals(\"1\")) {"},{"lineNumber":129,"author":{"gitId":"austenjs"},"content":"            this.tasks \u003d this.histories.getLast();"},{"lineNumber":130,"author":{"gitId":"austenjs"},"content":"            return \"Successfully undo to the previous state!\";"},{"lineNumber":131,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"austenjs"},"content":"        int numberOfUndo;"},{"lineNumber":133,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":134,"author":{"gitId":"austenjs"},"content":"            numberOfUndo \u003d Integer.parseInt(description);"},{"lineNumber":135,"author":{"gitId":"austenjs"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":136,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"Sorry!!! Undo takes an integer as an argument\");"},{"lineNumber":137,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"austenjs"},"content":"        int totalReset \u003d this.histories.compareNumberOfHistoriesWithInput(numberOfUndo);"},{"lineNumber":139,"author":{"gitId":"austenjs"},"content":"        this.tasks \u003d this.histories.getMultipleItems(numberOfUndo);"},{"lineNumber":140,"author":{"gitId":"austenjs"},"content":"        return totalReset \u003e\u003d numberOfUndo"},{"lineNumber":141,"author":{"gitId":"austenjs"},"content":"                ? \"Successfully undo \" + totalReset + \" previous states!\""},{"lineNumber":142,"author":{"gitId":"austenjs"},"content":"                : \"only Successfully undo \" + totalReset + \" previous states!\";"},{"lineNumber":143,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":144,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":146,"author":{"gitId":"austenjs"},"content":"    public String sort() throws DukeException{"},{"lineNumber":147,"author":{"gitId":"austenjs"},"content":"        if (this.tasks.isEmpty()) {"},{"lineNumber":148,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"Sorry, the TaskList is empty!!!\");"},{"lineNumber":149,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"austenjs"},"content":"        this.histories.add(this.tasks.stream().collect(Collectors.toList()));"},{"lineNumber":151,"author":{"gitId":"austenjs"},"content":"        this.tasks.sort(Comparator.comparing(a -\u003e a.task));"},{"lineNumber":152,"author":{"gitId":"austenjs"},"content":"        return \"TaskList successfully sorted alphabetically\";"},{"lineNumber":153,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":155,"author":{"gitId":"austenjs"},"content":"    public String statistics() throws DukeException {"},{"lineNumber":156,"author":{"gitId":"austenjs"},"content":"        if (this.tasks.isEmpty()) {"},{"lineNumber":157,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"Sorry, the TaskList is empty\");"},{"lineNumber":158,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"austenjs"},"content":"        int doneTasks \u003d this.tasks.stream().filter(task -\u003e task.hasDone())."},{"lineNumber":160,"author":{"gitId":"austenjs"},"content":"                collect(Collectors.toList()).size();"},{"lineNumber":161,"author":{"gitId":"austenjs"},"content":"        return \"Task done: \" + doneTasks * 100 / this.tasks.size() + \"% from \" + this.tasks.size();"},{"lineNumber":162,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":164,"author":{"gitId":"austenjs"},"content":"    public String getContact(String description) throws DukeException {"},{"lineNumber":165,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":166,"author":{"gitId":"austenjs"},"content":"            int index \u003d Integer.parseInt(description) - 1;"},{"lineNumber":167,"author":{"gitId":"austenjs"},"content":"            return Ui.showMessage(\"Task \" + description +\": \" + this.tasks.get(index).getContactDetails());"},{"lineNumber":168,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"austenjs"},"content":"        catch(NumberFormatException e) {"},{"lineNumber":170,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"The command \u0027contact\u0027 must have first argument an index\");"},{"lineNumber":171,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"austenjs"},"content":"        catch(ArrayIndexOutOfBoundsException e) {"},{"lineNumber":173,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"OOPS!!! The index of contact cannot be empty.\");"},{"lineNumber":174,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"austenjs"},"content":"        catch(IndexOutOfBoundsException e) {"},{"lineNumber":176,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"OOPS!!! The index of contact exceed the tasks\u0027 list.\");"},{"lineNumber":177,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":180,"author":{"gitId":"austenjs"},"content":"    public String addContactDetails(String description) throws DukeException {"},{"lineNumber":181,"author":{"gitId":"austenjs"},"content":"        if (description.isEmpty()) {"},{"lineNumber":182,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"No contact details given!!\");"},{"lineNumber":183,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"austenjs"},"content":"        String[] inputs \u003d description.split(\" \");"},{"lineNumber":185,"author":{"gitId":"austenjs"},"content":"        int index;"},{"lineNumber":186,"author":{"gitId":"austenjs"},"content":"        try {"},{"lineNumber":187,"author":{"gitId":"austenjs"},"content":"            index \u003d Integer.parseInt(inputs[0]) - 1;"},{"lineNumber":188,"author":{"gitId":"austenjs"},"content":"            this.histories.add(this.tasks.stream().collect(Collectors.toList()));"},{"lineNumber":189,"author":{"gitId":"austenjs"},"content":"            this.tasks.get(index).addContactDetails(inputs[1], inputs[2]);"},{"lineNumber":190,"author":{"gitId":"austenjs"},"content":"            return Ui.showMessage(\"Succesfully add contacts to task number \" + (index + 1));"},{"lineNumber":191,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":192,"author":{"gitId":"austenjs"},"content":"        catch(NumberFormatException e) {"},{"lineNumber":193,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"contact must have first argument an index\");"},{"lineNumber":194,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":195,"author":{"gitId":"austenjs"},"content":"        catch(ArrayIndexOutOfBoundsException e) {"},{"lineNumber":196,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"OOPS!!! The arguments of addContact cannot be empty.\");"},{"lineNumber":197,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":198,"author":{"gitId":"austenjs"},"content":"        catch(IndexOutOfBoundsException e) {"},{"lineNumber":199,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"OOPS!!! The index of addContact exceed the tasks\u0027 list.\");"},{"lineNumber":200,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":203,"author":{"gitId":"austenjs"},"content":"    public String getAllContactDetails() throws DukeException {"},{"lineNumber":204,"author":{"gitId":"austenjs"},"content":"        if (this.tasks.isEmpty()) {"},{"lineNumber":205,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"Sorry, the TaskList is empty\");"},{"lineNumber":206,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"austenjs"},"content":"        if (this.tasks.stream().filter(task -\u003e task.hasContactDetails())"},{"lineNumber":208,"author":{"gitId":"austenjs"},"content":"                .collect(Collectors.toList()).isEmpty()) {"},{"lineNumber":209,"author":{"gitId":"austenjs"},"content":"            return Ui.showMessage(\"No contact details for all tasks\");"},{"lineNumber":210,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"austenjs"},"content":"        String output \u003d Ui.showMessage(\"Here are the contact details available in your list:\");"},{"lineNumber":212,"author":{"gitId":"austenjs"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"},{"lineNumber":213,"author":{"gitId":"austenjs"},"content":"            if (this.tasks.get(i).hasContactDetails()) {"},{"lineNumber":214,"author":{"gitId":"austenjs"},"content":"                output +\u003d Ui.showMessage(\"Task \" + (i + 1) + \": \" + this.tasks.get(i).getContactDetails());"},{"lineNumber":215,"author":{"gitId":"austenjs"},"content":"            }"},{"lineNumber":216,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"austenjs"},"content":"        return output;"},{"lineNumber":218,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":220,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":221,"author":{"gitId":"austenjs"},"content":"     * Get List of Task"},{"lineNumber":222,"author":{"gitId":"austenjs"},"content":"     * @return List of Task"},{"lineNumber":223,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":224,"author":{"gitId":"austenjs"},"content":"    public List\u003cTask\u003e getTasks() {"},{"lineNumber":225,"author":{"gitId":"austenjs"},"content":"        return this.tasks;"},{"lineNumber":226,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"austenjs"},"content":"}"},{"lineNumber":228,"author":{"gitId":"austenjs"},"content":""}],"authorContributionMap":{"austenjs":228}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * A class represents a Todo event. Consists of task description and state"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" * of the task"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"     * Constructor of Todo object"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"     * @param task Description of the task"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    Todo (String task) {"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"        super(task);"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"     * Constructor of Todo object"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"     * @param task Description of the task"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"     * @param done State of the task"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"    Todo (String task, boolean done) {"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"        super(task, done);"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"     * An overridden method from the parent class Task. The purpose is to"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"     * return a new finished Task."},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":"     * @return Finished Todo object."},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"    public Task finishTask() throws DukeException {"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"        if (this.isDone) {"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"            throw new DukeException(\"Task has been done before!\");"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":"        return new Todo(this.task, true);"},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"     * An overridden method from the parent class Task. The purpose is to"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"     * return a String representation for txt files"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"     * @return String for txt files"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":"    public String saveString() {"},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"        return \"T|\" + super.saveString();"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"     * Return a string representation of Todo object"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"     * @return String representation of Todo object"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":55}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":" * A class that control how Duke interacts with user."},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":" */"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"     * Return a message with an additional newline"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"     * @param message Message wanted to be shown"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"    public static String showMessage(String message) {"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"        return message + \"\\n\";"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"     * Returns a welcome message when starting Duke. The text intended is \"YOLA\""},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    public static String getWelcomeMessage() {"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"        String logo \u003d \"00_____00___0000000_____00______________0_____\\n\""},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"                    + \"_00___00____00____00_____00_____________0_0____\\n\""},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"                    + \"__00_00_____00____00_____00____________0000___\\n\""},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"                    + \"____00_______00____00_____00__________0_____0__\\n\""},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"                    + \"____00_______0000000_____0000000__0________0_\";"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"        return \"Hello from\\n\" + logo + \"\\nHello! I\u0027m Fayola\\n\" +"},{"lineNumber":25,"author":{"gitId":"austenjs"},"content":"                \"What can I do for you?\\n\";"},{"lineNumber":26,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":28,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"austenjs"},"content":"     * Returns a closing message when closing Duke"},{"lineNumber":30,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"austenjs"},"content":"    public static String doBye() {"},{"lineNumber":32,"author":{"gitId":"austenjs"},"content":"        return \"Bye. Hope to see you again soon!\\n\";"},{"lineNumber":33,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":35,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":36,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"austenjs"},"content":"     * Returns a message when finishing a Task"},{"lineNumber":38,"author":{"gitId":"austenjs"},"content":"     * @param message message of finishing a task"},{"lineNumber":39,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"austenjs"},"content":"    public static String finishTaskMessage(String message) {"},{"lineNumber":41,"author":{"gitId":"austenjs"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" + \" \" + message + \"\\n\";"},{"lineNumber":42,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":44,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"austenjs"},"content":"     * Returns a message when deleting a Task"},{"lineNumber":46,"author":{"gitId":"austenjs"},"content":"     * @param message message of deleting a task"},{"lineNumber":47,"author":{"gitId":"austenjs"},"content":"     * @param newSize new size of the TaskList"},{"lineNumber":48,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"austenjs"},"content":"    public static String deleteTaskMessage(String message, int newSize) {"},{"lineNumber":50,"author":{"gitId":"austenjs"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"  + \"  \" + message + \"\\nNow you have \" + newSize"},{"lineNumber":51,"author":{"gitId":"austenjs"},"content":"                + \" tasks in the list.\\n\";"},{"lineNumber":52,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":54,"author":{"gitId":"austenjs"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"austenjs"},"content":"     * Returns a message when adding a Task"},{"lineNumber":56,"author":{"gitId":"austenjs"},"content":"     * @param message messsage of adding a task"},{"lineNumber":57,"author":{"gitId":"austenjs"},"content":"     * @param newSize new size of the TaskList"},{"lineNumber":58,"author":{"gitId":"austenjs"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"austenjs"},"content":"    public static String addTaskMessage(String message, int newSize) {"},{"lineNumber":60,"author":{"gitId":"austenjs"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"  \" + message + \"\\nNow you have \""},{"lineNumber":61,"author":{"gitId":"austenjs"},"content":"                + newSize + \" tasks in the list.\";"},{"lineNumber":62,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":64,"author":{"gitId":"austenjs"},"content":"    public static String showHelpMessage() {"},{"lineNumber":65,"author":{"gitId":"austenjs"},"content":"        String[] argumentsAvailable \u003d {\"list\", \"sort\", \"done\", \"delete\", \"todo\""},{"lineNumber":66,"author":{"gitId":"austenjs"},"content":"                , \"find\", \"undo\", \"statistics\",\"deadline\",\"event\", \"help\", \"contact\""},{"lineNumber":67,"author":{"gitId":"austenjs"},"content":"                ,\"addContact\",\"allContacts\"};"},{"lineNumber":68,"author":{"gitId":"austenjs"},"content":"        String ans \u003d \"Here are the available arguments :\";"},{"lineNumber":69,"author":{"gitId":"austenjs"},"content":"        for (String arg: argumentsAvailable) {"},{"lineNumber":70,"author":{"gitId":"austenjs"},"content":"            ans +\u003d arg + \"\\n\";"},{"lineNumber":71,"author":{"gitId":"austenjs"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"austenjs"},"content":"        return ans;"},{"lineNumber":73,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":74}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\""},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"         prefWidth\u003d\"400.0\"  type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"\u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #bfff00;\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"        \u003cpadding\u003e"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"            \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\"/\u003e"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"        \u003c/padding\u003e"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"        \u003cHBox.margin\u003e"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"20.0\"/\u003e"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"        \u003c/HBox.margin\u003e"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"    \u003c/Label\u003e"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":20,"author":{"gitId":"austenjs"},"content":"\u003c/children\u003e"},{"lineNumber":21,"author":{"gitId":"austenjs"},"content":"\u003cpadding\u003e"},{"lineNumber":22,"author":{"gitId":"austenjs"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":23,"author":{"gitId":"austenjs"},"content":"\u003c/padding\u003e"},{"lineNumber":24,"author":{"gitId":"austenjs"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"austenjs":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"\u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" promptText\u003d\"Enter your command\"/\u003e"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"        \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"austenjs"},"content":"        \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"austenjs"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"austenjs"},"content":"\u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"austenjs"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"austenjs":19}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"public class EventTest {"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    public void EventTesting() {"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"        Event event \u003d new Event(\"marriage\", \"June 2020\", false);"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"        assertEquals(event.toString(), \"[E][ ] marriage (at: June 2020)\");"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"        assertEquals(event.saveString(), \"E|0|marriage|June 2020\");"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"        assertEquals(event.finishTask().toString(), \"[E][X] marriage (at: June 2020)\");"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":12}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"austenjs"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"austenjs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"austenjs"},"content":""},{"lineNumber":4,"author":{"gitId":"austenjs"},"content":"public class TodoTest {"},{"lineNumber":5,"author":{"gitId":"austenjs"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"austenjs"},"content":"    public void TodoTesting() {"},{"lineNumber":7,"author":{"gitId":"austenjs"},"content":"        Todo task \u003d new Todo(\"eating\", false);"},{"lineNumber":8,"author":{"gitId":"austenjs"},"content":"        String expected \u003d \"[T][ ] eating\";"},{"lineNumber":9,"author":{"gitId":"austenjs"},"content":"        assertEquals(expected,task.toString());"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"        String expected2 \u003d \"[T][X] eating\";"},{"lineNumber":11,"author":{"gitId":"austenjs"},"content":"        assertEquals(task.finishTask().toString(), expected2);"},{"lineNumber":12,"author":{"gitId":"austenjs"},"content":"        String expected3 \u003d \"T|1|eating\";"},{"lineNumber":13,"author":{"gitId":"austenjs"},"content":"        assertEquals(task.finishTask().saveString(), expected3.toString());"},{"lineNumber":14,"author":{"gitId":"austenjs"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"austenjs"},"content":"}"}],"authorContributionMap":{"austenjs":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"austenjs"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":20,"austenjs":1}}]
