[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"### Feature 1 (Add a ToDo)"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"##### adds a todo task"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"##### Example of usage:"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"##### todo have fun"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"##### Expected outcome:"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"##### added: [T][] todo have fun"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"### Feature 2 (Add an Event)"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"##### adds an event task"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"##### Example of usage:"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"##### event have fun/at 2"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"##### Expected outcome:"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"##### added: [E][] event have fun/at 2"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"### Feature 3 (Add a Deadline)"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"##### adds a deadline task"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"##### Example of usage:"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"##### deadline have fun/by 2"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":"##### Expected outcome:"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"##### added: [D][] event have fun/by 2"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":"### Feature 4 (Mark a task as done)"},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"##### marks task as done"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"##### Example of usage:"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":"##### done 1"},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"##### Expected outcome:"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":"##### Nice! I have marked this task as done:"},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"##### [D][X] have fun"},{"lineNumber":33,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":"### Feature 5 (Delete a task)"},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":"##### deletes a task"},{"lineNumber":36,"author":{"gitId":"KevinLohJunYong"},"content":"##### Example of usage:"},{"lineNumber":37,"author":{"gitId":"KevinLohJunYong"},"content":"##### delete 1"},{"lineNumber":38,"author":{"gitId":"KevinLohJunYong"},"content":"##### Expected outcome:"},{"lineNumber":39,"author":{"gitId":"KevinLohJunYong"},"content":"##### Noted i have removed this task"},{"lineNumber":40,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":41,"author":{"gitId":"KevinLohJunYong"},"content":"### Feature 6 (list tasks)"},{"lineNumber":42,"author":{"gitId":"KevinLohJunYong"},"content":"##### list all tasks in task list"},{"lineNumber":43,"author":{"gitId":"KevinLohJunYong"},"content":"##### Example of usage:"},{"lineNumber":44,"author":{"gitId":"KevinLohJunYong"},"content":"##### list"},{"lineNumber":45,"author":{"gitId":"KevinLohJunYong"},"content":"##### Expected outcome:"},{"lineNumber":46,"author":{"gitId":"KevinLohJunYong"},"content":"##### here are your tasks"},{"lineNumber":47,"author":{"gitId":"KevinLohJunYong"},"content":"##### 1. [T][] have fun"},{"lineNumber":48,"author":{"gitId":"KevinLohJunYong"},"content":"##### 2 [D][X] swim/by 2"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"`outcome`"}],"authorContributionMap":{"-":7,"KevinLohJunYong":44}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"KevinLohJunYong"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"KevinLohJunYong"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":38,"author":{"gitId":"KevinLohJunYong"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"KevinLohJunYong"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":41,"author":{"gitId":"KevinLohJunYong"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"KevinLohJunYong"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"KevinLohJunYong"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":45,"author":{"gitId":"KevinLohJunYong"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"KevinLohJunYong"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"KevinLohJunYong"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"KevinLohJunYong"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"KevinLohJunYong"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":51,"author":{"gitId":"KevinLohJunYong"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":53,"author":{"gitId":"KevinLohJunYong"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"KevinLohJunYong"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"KevinLohJunYong"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":57,"author":{"gitId":"KevinLohJunYong"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":59,"author":{"gitId":"KevinLohJunYong"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"KevinLohJunYong"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"KevinLohJunYong"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"KevinLohJunYong"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"KevinLohJunYong"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":65,"author":{"gitId":"KevinLohJunYong"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":67,"author":{"gitId":"KevinLohJunYong"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"KevinLohJunYong"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":70,"author":{"gitId":"KevinLohJunYong"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":72,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":73,"author":{"gitId":"KevinLohJunYong"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"KevinLohJunYong"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":76,"author":{"gitId":"KevinLohJunYong"},"content":":end"},{"lineNumber":77,"author":{"gitId":"KevinLohJunYong"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"KevinLohJunYong"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":80,"author":{"gitId":"KevinLohJunYong"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"KevinLohJunYong"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"KevinLohJunYong"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"KevinLohJunYong"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"KevinLohJunYong"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":86,"author":{"gitId":"KevinLohJunYong"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"KevinLohJunYong"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":89,"author":{"gitId":"KevinLohJunYong"},"content":":omega"}],"authorContributionMap":{"KevinLohJunYong":89}},{"path":"src/main/java/BadDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":" * An exception class used when the user inputs an invalid date or a date with improper format"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"public class BadDateException extends Exception {"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return the exception message to ask user to format his input date correctly"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getMessage() {"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"        return \"Please format your dead as yyyy-mm-dd\";"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":12}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":" * Command class which is a parent class for different types of commands"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"public abstract class Command {"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"    protected String line;"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"    int itemNo \u003d -1;"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param line the input line that the user keyed in"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"     *  initialises a new command object"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"    public Command(String line) {"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"        this.line \u003d line;"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"    public Command() {"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"    public abstract boolean isExit();"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"    public abstract String getType();"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"    public abstract String getDescription();"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":25}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":" * represents a task to be completed by a certain time or the deadline of the task"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"    LocalDate localDate;"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"    String formattedDescription;"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"    String dateString;"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param description the description of the deadline tasl"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws EmptyArgumentException empty argument exception"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws BadDateException       bad date exception"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"    Deadline(String description) throws EmptyArgumentException, BadDateException {"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"        int indexOfDate \u003d description.indexOf(\"/\") + 4;"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"            localDate \u003d LocalDate.parse(description.substring(indexOfDate));"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"            dateString \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":"            formattedDescription \u003d description.substring(0, indexOfDate) + dateString;"},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"            throw new BadDateException();"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getDateString() {"},{"lineNumber":33,"author":{"gitId":"KevinLohJunYong"},"content":"        return dateString;"},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":36,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"KevinLohJunYong"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"KevinLohJunYong"},"content":"        return \"[D]\" + \"[\" + (isCompleted ? \"X\" : \" \") + \"] \" + dateString;"},{"lineNumber":39,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":40}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":" * a deadline command object"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param line the description of the deadline command"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"    DeadlineCommand(String line) {"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"        super(line);"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return its not bye so it returns false"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"    public boolean isExit() {"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"        return false;"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return deadline"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getType() {"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"        return \"deadline\";"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return the description"},{"lineNumber":33,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getDescription() {"},{"lineNumber":36,"author":{"gitId":"KevinLohJunYong"},"content":"        return line;"},{"lineNumber":37,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":38}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":" * delete command class"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param itemNo the item number to be deleted"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"    DeleteCommand(int itemNo) {"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"        super();"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"        super.itemNo \u003d itemNo;"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"    public boolean isExit() {"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"        return false;"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return delete"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getType() {"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"        return \"delete\";"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return null since it has no descriptiom"},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getDescription() {"},{"lineNumber":33,"author":{"gitId":"KevinLohJunYong"},"content":"        return null;"},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":35}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":"import java.util.Collections;"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.geometry.Pos;"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.Node;"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.control.Label;"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":" * An example of a custom control using FXML."},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":"    private Label dialog;"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"    private ImageView displayPicture;"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"            System.out.println(getClass().getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"KevinLohJunYong"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":38,"author":{"gitId":"KevinLohJunYong"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"KevinLohJunYong"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":42,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"KevinLohJunYong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"KevinLohJunYong"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"KevinLohJunYong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"KevinLohJunYong"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"KevinLohJunYong"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"KevinLohJunYong"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":52,"author":{"gitId":"KevinLohJunYong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"KevinLohJunYong"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":56,"author":{"gitId":"KevinLohJunYong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"KevinLohJunYong"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"KevinLohJunYong"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"KevinLohJunYong"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":61}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":" * done command class"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"public class DoneCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param itemNo item number that is done"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"    DoneCommand(int itemNo) {"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"        super();"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"        super.itemNo \u003d itemNo;"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return false since its not bye"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"    public boolean isExit() {"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"        return false;"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return done"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getType() {"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":"        return \"done\";"},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return null since it does not need a description"},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getDescription() {"},{"lineNumber":38,"author":{"gitId":"KevinLohJunYong"},"content":"        return null;"},{"lineNumber":39,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"KevinLohJunYong"},"content":"}"},{"lineNumber":41,"author":{"gitId":"KevinLohJunYong"},"content":""}],"authorContributionMap":{"KevinLohJunYong":41}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.Scene;"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"import java.io.*;"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":" * class for duke"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke  {"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"    private Storage storage \u003d new Storage();"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"    private TaskList tasks \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"    private Ui ui;"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"    private Parser parser \u003d new Parser();"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/img.png\"));"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/img_1.png\"));"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"    private VBox dialogContainer;"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":"    private TextField userInput;"},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"    private Button sendButton;"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"    private Scene scene;"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"    public Duke() {"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":"        ui \u003d  new Ui();"},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"        assert ui !\u003d null : \"error initializing ui\";"},{"lineNumber":33,"author":{"gitId":"KevinLohJunYong"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":"            assert tasks !\u003d null : \"error initializing tasks\";"},{"lineNumber":36,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"KevinLohJunYong"},"content":"        catch(IOException | EmptyArgumentException e) {"},{"lineNumber":38,"author":{"gitId":"KevinLohJunYong"},"content":"            ui.showLoadingError();"},{"lineNumber":39,"author":{"gitId":"KevinLohJunYong"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":40,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":43,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws EmptyArgumentException empty argument exception"},{"lineNumber":46,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws BadDateException bad date exception"},{"lineNumber":47,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws InvalidCommandException invalid command exception"},{"lineNumber":48,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws IOException ioexception"},{"lineNumber":49,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":51,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getResponse(String line) {"},{"lineNumber":52,"author":{"gitId":"KevinLohJunYong"},"content":"        Command command \u003d parser.parseCommand(line);"},{"lineNumber":53,"author":{"gitId":"KevinLohJunYong"},"content":"        if(command.isExit()) return \"Bye bye\";"},{"lineNumber":54,"author":{"gitId":"KevinLohJunYong"},"content":"        return tasks.run(command,storage);"},{"lineNumber":55,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"KevinLohJunYong"},"content":"    public String welcome() {"},{"lineNumber":57,"author":{"gitId":"KevinLohJunYong"},"content":"        ui.sendWelcomeMessage();"},{"lineNumber":58,"author":{"gitId":"KevinLohJunYong"},"content":"        return \"Hi Im Duke, how may I help you?\";"},{"lineNumber":59,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":3,"KevinLohJunYong":57}},{"path":"src/main/java/EmptyArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":" * empty argument exception class when the user doesnt provide a description of the task"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"public class EmptyArgumentException extends Exception {"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":" * event class"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param description event description"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws EmptyArgumentException empty argument exception"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"    Event(String description) throws EmptyArgumentException {"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return string representation of the event object"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"        return \"[E]\" + super.toString();"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":22}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":" * event command class"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"public class EventCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param line the description of the event"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"    EventCommand(String line) {"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"        super(line);"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return false since its not bye"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"    public boolean isExit() {"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"        return false;"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return event"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getType() {"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"        return \"event\";"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return event description"},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getDescription() {"},{"lineNumber":37,"author":{"gitId":"KevinLohJunYong"},"content":"        return line;"},{"lineNumber":38,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":39}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":" * exit command class"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"public class ExitCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"    public boolean isExit() {"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"        return true;"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getType() {"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"        return \"exit\";"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"        return null;"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":19}},{"path":"src/main/java/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"public class InvalidCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":"    public boolean isExit() {"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"        return false;"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getType() {"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"        return \"invalid\";"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getDescription() {"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"        return null;"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":16}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":" * Invalid Command Exception class thrown when the user types in an invalid command"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return the invalid command message"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getMessage() {"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"        return \"Command is not recognized\";"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":13}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":9}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":" * list command when the user types in list"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"public class ListCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"     * creates a list command object"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"    public ListCommand() {"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"        super();"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return false it is not a terminating command"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"    public boolean isExit() {"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"        return false;"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return list"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getType() {"},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"        return \"list\";"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return null because it has no description"},{"lineNumber":33,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getDescription() {"},{"lineNumber":36,"author":{"gitId":"KevinLohJunYong"},"content":"        return null;"},{"lineNumber":37,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"KevinLohJunYong"},"content":"}"},{"lineNumber":39,"author":{"gitId":"KevinLohJunYong"},"content":""}],"authorContributionMap":{"KevinLohJunYong":39}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":"            stage.setTitle(\"Duke Task Manager\");"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().welcome();"},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":31}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"    @FXML"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"    private VBox dialogContainer;"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"    private TextField userInput;"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"    private Button sendButton;"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"    private Duke duke;"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/img.png\"));"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/img_1.png\"));"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"    public void initialize() {"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":33,"author":{"gitId":"KevinLohJunYong"},"content":"        duke \u003d d;"},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":36,"author":{"gitId":"KevinLohJunYong"},"content":"    public void welcome() {"},{"lineNumber":37,"author":{"gitId":"KevinLohJunYong"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":38,"author":{"gitId":"KevinLohJunYong"},"content":"                DialogBox.getDukeDialog(duke.welcome(), dukeImage)"},{"lineNumber":39,"author":{"gitId":"KevinLohJunYong"},"content":"        );"},{"lineNumber":40,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":42,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"KevinLohJunYong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":44,"author":{"gitId":"KevinLohJunYong"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":45,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"KevinLohJunYong"},"content":"    @FXML"},{"lineNumber":47,"author":{"gitId":"KevinLohJunYong"},"content":"    private void handleUserInput() {"},{"lineNumber":48,"author":{"gitId":"KevinLohJunYong"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":49,"author":{"gitId":"KevinLohJunYong"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":50,"author":{"gitId":"KevinLohJunYong"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":51,"author":{"gitId":"KevinLohJunYong"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":52,"author":{"gitId":"KevinLohJunYong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":53,"author":{"gitId":"KevinLohJunYong"},"content":"        );"},{"lineNumber":54,"author":{"gitId":"KevinLohJunYong"},"content":"        userInput.clear();"},{"lineNumber":55,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":56}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":" * Parser class to parse user input"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param line the command"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return a command"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws InvalidCommandException when the command is not recognized"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"    public static Command parseCommand(String line) {"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"        String[] inputs \u003d line.split(\" \");"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"        if(line.equals(\"list\")) {"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"            return new ListCommand();"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"        else if(inputs[0].equals(\"delete\")) {"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"            return new DeleteCommand(Integer.parseInt(inputs[1]));"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"        else if(inputs[0].equals(\"done\")) {"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"            return new DoneCommand(Integer.parseInt(inputs[1]));"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"        else if(inputs[0].equals(\"bye\")) {"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":"            return new ExitCommand();"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"        else if(inputs[0].equals(\"deadline\")) {"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":"            return new DeadlineCommand(line);"},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"        else if(inputs[0].equals(\"todo\")) {"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":"            return new ToDoCommand(line);"},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":"        else if(inputs[0].equals(\"event\")) {"},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"            return new EventCommand(line);"},{"lineNumber":33,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":"        else return new InvalidCommand();"},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":36}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"import java.util.regex.Pattern;"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":" * Storage class stores user data"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"    String filePath \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param tasks the user tasks"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws IOException ioexception"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":"        FileWriter writer \u003d new FileWriter(filePath);"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"        for(Task task : tasks) {"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"            writer.write(convertToFileFormat(task)+\u0027\\n\u0027);"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"        writer.close();"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param line the string representation of the file"},{"lineNumber":33,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return the task"},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws EmptyArgumentException if the file has not enough lines"},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws BadDateException if the file writes in the date wrongly"},{"lineNumber":36,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"KevinLohJunYong"},"content":"    private Task convertToTaskFormat(String line) throws EmptyArgumentException, BadDateException {"},{"lineNumber":38,"author":{"gitId":"KevinLohJunYong"},"content":"        String[] arr \u003d line.split(Pattern.quote(\" | \"));"},{"lineNumber":39,"author":{"gitId":"KevinLohJunYong"},"content":"        Task task;"},{"lineNumber":40,"author":{"gitId":"KevinLohJunYong"},"content":"        if(arr[0].charAt(0) \u003d\u003d \u0027T\u0027) task \u003d new ToDos(arr[2].trim());"},{"lineNumber":41,"author":{"gitId":"KevinLohJunYong"},"content":"        else if(arr[0].charAt(0) \u003d\u003d \u0027E\u0027) task \u003d new Event(arr[2].trim());"},{"lineNumber":42,"author":{"gitId":"KevinLohJunYong"},"content":"        else task \u003d new Deadline(arr[2]);"},{"lineNumber":43,"author":{"gitId":"KevinLohJunYong"},"content":"        if(arr[1].trim().charAt(0) \u003d\u003d \u00271\u0027) task.isCompleted \u003d true;"},{"lineNumber":44,"author":{"gitId":"KevinLohJunYong"},"content":"        else task.isCompleted \u003d false;"},{"lineNumber":45,"author":{"gitId":"KevinLohJunYong"},"content":"        return task;"},{"lineNumber":46,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":48,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param task the task information to be encoded into the file"},{"lineNumber":51,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return a line in the file"},{"lineNumber":52,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"KevinLohJunYong"},"content":"    private String convertToFileFormat(Task task) {"},{"lineNumber":54,"author":{"gitId":"KevinLohJunYong"},"content":"        String fileString \u003d \"\";"},{"lineNumber":55,"author":{"gitId":"KevinLohJunYong"},"content":"        if(task instanceof ToDos) fileString +\u003d \"T | \";"},{"lineNumber":56,"author":{"gitId":"KevinLohJunYong"},"content":"        else if(task instanceof Deadline) fileString +\u003d \"D | \";"},{"lineNumber":57,"author":{"gitId":"KevinLohJunYong"},"content":"        else if(task instanceof Event) fileString +\u003d \"E | \";"},{"lineNumber":58,"author":{"gitId":"KevinLohJunYong"},"content":"        if(task.isCompleted) fileString +\u003d \"1 | \";"},{"lineNumber":59,"author":{"gitId":"KevinLohJunYong"},"content":"        else fileString +\u003d \"0 | \";"},{"lineNumber":60,"author":{"gitId":"KevinLohJunYong"},"content":"        fileString +\u003d task.description;"},{"lineNumber":61,"author":{"gitId":"KevinLohJunYong"},"content":"        return fileString;"},{"lineNumber":62,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":64,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return all the user tasks"},{"lineNumber":67,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws IOException ioexception"},{"lineNumber":68,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws EmptyArgumentException empty argument exception"},{"lineNumber":69,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"KevinLohJunYong"},"content":"    public List\u003cTask\u003e load() throws IOException, EmptyArgumentException {"},{"lineNumber":71,"author":{"gitId":"KevinLohJunYong"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":72,"author":{"gitId":"KevinLohJunYong"},"content":"        try {"},{"lineNumber":73,"author":{"gitId":"KevinLohJunYong"},"content":"            File file \u003d new File(filePath);"},{"lineNumber":74,"author":{"gitId":"KevinLohJunYong"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":75,"author":{"gitId":"KevinLohJunYong"},"content":"            while(sc.hasNext()) {"},{"lineNumber":76,"author":{"gitId":"KevinLohJunYong"},"content":"                String line \u003d sc.nextLine();"},{"lineNumber":77,"author":{"gitId":"KevinLohJunYong"},"content":"                Task task \u003d convertToTaskFormat(line);"},{"lineNumber":78,"author":{"gitId":"KevinLohJunYong"},"content":"                tasks.add(task);"},{"lineNumber":79,"author":{"gitId":"KevinLohJunYong"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"KevinLohJunYong"},"content":"        catch(FileNotFoundException | BadDateException e) {"},{"lineNumber":82,"author":{"gitId":"KevinLohJunYong"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":83,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"KevinLohJunYong"},"content":"        return tasks;"},{"lineNumber":85,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":86}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":" * Task class there are different kinds of tasks"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"public abstract class Task {"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"    protected boolean isCompleted;"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param description the task description"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws EmptyArgumentException thrown if task description is empty"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"    Task(String description) throws EmptyArgumentException {"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"        if(description.isEmpty()) throw new EmptyArgumentException();"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return string representation of the task"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":"        return \"[\" + (isCompleted ? \"X\" : \" \") + \"] \" + description;"},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":28}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":" * Task list class stores user tasks"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"    List\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"     * creates a task list object"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"    TaskList() {"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param tasks the user tasks"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"    TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return num of items in the task"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"    public int numOfItems() {"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":"        return tasks.size();"},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param command the type of command needed to be executed according to user input"},{"lineNumber":37,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param storage the storage object"},{"lineNumber":38,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws EmptyArgumentException empty argument exception"},{"lineNumber":39,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws BadDateException bad date exception"},{"lineNumber":40,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws InvalidCommandException invalid command exception"},{"lineNumber":41,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws IOException ioexception"},{"lineNumber":42,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"KevinLohJunYong"},"content":"    public String run(Command command, Storage storage)  {"},{"lineNumber":44,"author":{"gitId":"KevinLohJunYong"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"KevinLohJunYong"},"content":"        switch(command.getType()) {"},{"lineNumber":46,"author":{"gitId":"KevinLohJunYong"},"content":"            case \"deadline\":"},{"lineNumber":47,"author":{"gitId":"KevinLohJunYong"},"content":"                tasks.add(new Deadline(command.getDescription()));"},{"lineNumber":48,"author":{"gitId":"KevinLohJunYong"},"content":"                return \"added: \" + tasks.get(tasks.size()-1) + \"\\n\" + \"Now you have \" + numOfItems() + \" tasks in the list\";"},{"lineNumber":49,"author":{"gitId":"KevinLohJunYong"},"content":"            case \"todo\":"},{"lineNumber":50,"author":{"gitId":"KevinLohJunYong"},"content":"                tasks.add(new ToDos(command.getDescription()));"},{"lineNumber":51,"author":{"gitId":"KevinLohJunYong"},"content":"                return \"added: \" + tasks.get(tasks.size()-1) + \"\\n\" + \"Now you have \" + numOfItems() + \" tasks in the list\";"},{"lineNumber":52,"author":{"gitId":"KevinLohJunYong"},"content":"            case \"event\":"},{"lineNumber":53,"author":{"gitId":"KevinLohJunYong"},"content":"                tasks.add(new Event(command.getDescription()));"},{"lineNumber":54,"author":{"gitId":"KevinLohJunYong"},"content":"                return \"added: \" + tasks.get(tasks.size()-1) + \"\\n\" + \"Now you have \" + numOfItems() + \" tasks in the list\";"},{"lineNumber":55,"author":{"gitId":"KevinLohJunYong"},"content":"            case \"delete\" :"},{"lineNumber":56,"author":{"gitId":"KevinLohJunYong"},"content":"                Task toBeDeleted \u003d tasks.get(command.itemNo-1);"},{"lineNumber":57,"author":{"gitId":"KevinLohJunYong"},"content":"                tasks.remove(command.itemNo-1);"},{"lineNumber":58,"author":{"gitId":"KevinLohJunYong"},"content":"                return \"Noted. I have removed this task: \" + toBeDeleted + \"\\n\" + \"Now you have \" + numOfItems() + \" tasks in the list\";"},{"lineNumber":59,"author":{"gitId":"KevinLohJunYong"},"content":"            case \"done\" :"},{"lineNumber":60,"author":{"gitId":"KevinLohJunYong"},"content":"                tasks.get(command.itemNo-1).isCompleted \u003d true;"},{"lineNumber":61,"author":{"gitId":"KevinLohJunYong"},"content":"                return \"Nice, I have marked this task as done!\\n\" + tasks.get(command.itemNo-1);"},{"lineNumber":62,"author":{"gitId":"KevinLohJunYong"},"content":"            case \"list\" :"},{"lineNumber":63,"author":{"gitId":"KevinLohJunYong"},"content":"                String res \u003d \"here are your tasks:\\n\";"},{"lineNumber":64,"author":{"gitId":"KevinLohJunYong"},"content":"                for(int itemNo \u003d 1;itemNo \u003c\u003d tasks.size();itemNo++) {"},{"lineNumber":65,"author":{"gitId":"KevinLohJunYong"},"content":"                    res +\u003d \" \";"},{"lineNumber":66,"author":{"gitId":"KevinLohJunYong"},"content":"                    res +\u003d \"\" + itemNo + \". \" + tasks.get(itemNo-1) + \"\\n\";"},{"lineNumber":67,"author":{"gitId":"KevinLohJunYong"},"content":"                }"},{"lineNumber":68,"author":{"gitId":"KevinLohJunYong"},"content":"                return res;"},{"lineNumber":69,"author":{"gitId":"KevinLohJunYong"},"content":"            default : return \"Sorry, invalid command!\";"},{"lineNumber":70,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"KevinLohJunYong"},"content":"        catch(EmptyArgumentException | BadDateException e) {"},{"lineNumber":73,"author":{"gitId":"KevinLohJunYong"},"content":"            return e.getMessage();"},{"lineNumber":74,"author":{"gitId":"KevinLohJunYong"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":76}},{"path":"src/main/java/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":" * to do command class"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"public class ToDoCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param line the description of the task to do"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"    public ToDoCommand(String line) {"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"        super(line);"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return false since its not terminating"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"    public boolean isExit() {"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"        return false;"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return todo"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getType() {"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"        return \"todo\";"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return the description"},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"KevinLohJunYong"},"content":"    public String getDescription() {"},{"lineNumber":37,"author":{"gitId":"KevinLohJunYong"},"content":"        return line;"},{"lineNumber":38,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":39}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":" * todos class"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"public class ToDos extends Task {"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"     * @param description the todo task description"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws EmptyArgumentException if the description is empty"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"    ToDos(String description) throws EmptyArgumentException {"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"     * @return string representation of the todo task"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":22}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":" * ui class to print ai input to user"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":" */"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"    Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"    String logo \u003d"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"            \" __        _        \\n\""},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"                    + \"|  _ \\\\ _   | | __ \\n\""},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"                    + \"| || | || |   \u003c  __/\\n\""},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"                    + \"|_/ \\\\,||\\\\\\\\___|\\n\";"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"    public void sendWelcomeMessage() {"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"        System.out.println(\"Hi Im Duke, how may I help you?\");"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"    public void byeUser() {"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"        System.out.println(\"Bye bye, have a nice day! Thanks for using \" + logo);"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"    public String listenToInput() {"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"        return sc.nextLine();"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"    public void showLoadingError() {"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":"        System.out.println(\"loading failed\");"},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":"}"},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":""}],"authorContributionMap":{"KevinLohJunYong":32}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"KevinLohJunYong":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"KevinLohJunYong":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"import org.junit.Test;"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"    public void getFormattedDescription() throws EmptyArgumentException, BadDateException {"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"        Deadline deadline \u003d new Deadline(\"return book/by 2021-02-05\");"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"        assertEquals(\"Feb 05 2021\", deadline.getDateString());"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":13}},{"path":"src/test/java/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"import org.junit.Test;"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":""},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"public class DoneCommandTest {"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"    public void getTypeCheck() {"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"        assertEquals(\"done\", new DoneCommand(1).getType());"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"}"}],"authorContributionMap":{"KevinLohJunYong":10}}]
