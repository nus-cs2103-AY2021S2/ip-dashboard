{"authorDailyContributionsMap":{"douglaswja":[{"date":"2021-01-20","commitResults":[{"hash":"184b8b09db504175c4e69858fc1fac7ce415ff4d","messageTitle":"Completes Level-1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":10},"bat":{"insertions":21,"deletions":21},"sh":{"insertions":37,"deletions":37},"md":{"insertions":52,"deletions":52}}},{"hash":"f3e2f156f1ab71515e13947956d8831c8db8a392","messageTitle":"Make the termination string a final variable","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2021-01-21","commitResults":[{"hash":"186b28853f635e5d3cba5c894f95f33aba6f383b","messageTitle":"Completes Level-2","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":134,"deletions":18}}},{"hash":"7583ce0ed23c73e5bf479bf5add183e51967670d","messageTitle":"Include javadoc comments and some minor edits","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":3}}},{"hash":"2925a4eaa728f30fda0bd6e73b6b7d0cb18baf66","messageTitle":"Completes Level-3","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":42}}},{"hash":"05f452eb9759b76f583c93aade5ae1f44b3f245d","messageTitle":"Completes Level-4","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":3}}},{"hash":"7d05fd57e8d01b163042bfb759c00a9a7f1471c3","messageTitle":"Level-4","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":0}}},{"hash":"1e4e16e9df05ccd66d7577d1c4b7d2a3a75afffc","messageTitle":"Updates the runtest.sh file to remove windows white spaces","messageBody":"","fileTypesAndContributionMap":{"sh":{"insertions":38,"deletions":38}}},{"hash":"777bfccbd9acb4f64d1f4a906ea863009e486acb","messageTitle":"Include automated testing","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0}}},{"hash":"f465935e559f1cc946d83a8f26eef07ab632ce40","messageTitle":"Corrects automated testing input file","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0}}},{"hash":"9177431d90ecde8b2f0a6f46b60ebb6a18b1417e","messageTitle":"Level-5","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":8}}},{"hash":"fac83defa1f801e22d5a5988f1ffd2398fb4d5a1","messageTitle":"Level-6","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":1}}}]},{"date":"2021-01-22","commitResults":[{"hash":"f2f714d948be933ef496052501765d15eb33d97e","messageTitle":"Updates the Command.java Enum to include all possible commands","messageBody":"The previous version separated commands and adding new tasks, this\nversion includes all possible DukeBot functionality as commands.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":3}}},{"hash":"2b7dab704f01b247020add550fbd0917225fbdc1","messageTitle":"Improves the code design and structure","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":266,"deletions":177}}},{"hash":"7fdd2e93e932e0a99d2d21efcbfe392dfd8469e3","messageTitle":"Include Javadoc comments for all relevant code","messageBody":"Additionally, this commit allows the TaskManager to be re-activated\nafter it has been deactivated.\n","fileTypesAndContributionMap":{"java":{"insertions":89,"deletions":4}}},{"hash":"f95104e8b4d0933df73c07a2f490898c80b90b57","messageTitle":"Updates javadoc comments","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":4}}}]},{"date":"2021-01-23","commitResults":[{"hash":"e2dd10f17dd7b51597201f03d42a88b09d5c6c06","messageTitle":"Includes javadoc comment for TaskManager\u0027s listAll method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"0b5d0d824e9b1659f54d6457826c8c2619cc8672","messageTitle":"Fixes automated CLI Text testing","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":14,"deletions":0},"bat":{"insertions":0,"deletions":21},"sh":{"insertions":1,"deletions":1}}},{"hash":"b853f8c35c8567d94187fe071549d04f6bfdfb4b","messageTitle":"Includes comment on directory path finding for runtest.sh","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"sh":{"insertions":4,"deletions":0}}}]},{"date":"2021-01-26","commitResults":[{"hash":"e246737e43da7342accaf92c3afcb3d00a7218ef","messageTitle":"Change code style of Java Switch statements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":41}}},{"hash":"1b9e7e22941fade74715b5bf710a3a7e8eff20de","messageTitle":"Include java package structure into Duke","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":116,"deletions":82},"md":{"insertions":1,"deletions":1}}},{"hash":"6bf13949233ba2c9bd49b9240bd7fd9b8bc0c012","messageTitle":"Implement download data but not save data","messageBody":"DukeBot CLI does not read or store data locally, persisting data for\nonly as long as it the program is running.\n\nBy not saving data, the DukeBot cannot be used across different\nsessions.\n\nAdd a way to read data in from a text file.\n\nThis commit is incomplete in that it does not include a way to write\ndata to a text file.\n\nThe ability to write to a file requires us to store the Tasks completion\nstatus, something that needs to be further planned out to utilise\nexisting code.\n","fileTypesAndContributionMap":{"java":{"insertions":106,"deletions":3}}}]},{"date":"2021-01-27","commitResults":[{"hash":"7ab6ff6975aba77fb8e91b1ecdfc7c8d49853484","messageTitle":"Persist the task list in memory and load from memory on start-up","messageBody":"DukeBot runs with the Task List in RAM and does not persist it beyond\neach session.\n\nTemporary memory prevents the task list from being useful to a user\nbeyond a single session, requiring the user to keep DukeBot running.\n\nUpdates DukeBot to store the contents of its taskList to a file in\nmemory, allowing information to be persisted across multiple sessions.\n\nThere are some remaining To Do\u0027s involving refactoring the IO code into\nseparate functions and updating the Java Docs.\n","fileTypesAndContributionMap":{"java":{"insertions":128,"deletions":37}}},{"hash":"b47ec488c2643e120a8a38cf5477c888a2aa5778","messageTitle":"Use LocalDate objects to store the /at and /by string","messageBody":"Task subclasses Event and Deadline treat the /at and /by, respectively,\nas Strings only, preventing any datetime manipulation or behaviour.\n\nThe /at and /by inputs are likely to be dates and by treating them as\nsuch future functionality such as reminders or listing all tasks for a\nspecific day or showing overdue tasks can be incorporated.\n\nThis commit updates the /at and /by instance variables to be stored as\nLocalDate objects rather than String objects.\n\nBy using LocalDate objects we are able to perform many useful date\noperations on the /at and /by instance variables.\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":6}}}]},{"date":"2021-02-01","commitResults":[{"hash":"e39019cbfc3832da26b603c7d53fd3caccbb8af8","messageTitle":"Refactor the code into OOP classes for UI, Parser, etc.","messageBody":"Each class in DukeBot handles its own IO and Parsing causing code to be\nharder to maintain in the long run.\n\nSpreading the IO and Parsing across many different classes makes DukeBot more\ndifficult to maintain in the long run.\n\nIncludes dedicated classes to handle these responsibilities.\n\nAll classes are now self-contained and hence any future changes to the\ncodebase can be targeted at whichever class is solely responsible for\nthe feature.\n\nThe Exception handling functionality, including the use of try-catch\nblocks is not very elegant.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":662,"deletions":631},"md":{"insertions":1,"deletions":1}}},{"hash":"a54b9ab32d358ea7dac1aff6dc74145ca5d9b71a","messageTitle":"Refactor Parser package to its parent directory","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2021-02-02","commitResults":[{"hash":"a5535134f6dc80c67a22116c238a32ede8547af4","messageTitle":"Identify error in automated CLI test","messageBody":"","fileTypesAndContributionMap":{"sh":{"insertions":4,"deletions":4}}},{"hash":"2f642fb76f0bcc04cbdc9b5503cb130fc84372bb","messageTitle":"Import single classes instead of wildcard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":2}}}]},{"date":"2021-02-03","commitResults":[{"hash":"06fd69344b3cfcb45a48ae1b7e355e9597484ac8","messageTitle":"TaskList: Is-a relationship with ArrayList instead of Has-A","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":42}}},{"hash":"cd014cb22a63a1e9f2c0219fd587c3cd157d5402","messageTitle":"Include JUnit tests for Storage and Parser","messageBody":"DBot does not have any JUnit unit tests for any classes or scenarios.\n\nThe lack of unit testing allows for potential regressions in any future\nedits to the code base.\n\nIncludes JUnit tests for Storage initialisation on invalid file paths\nand Parser.parse on a valid Todo command.\n\nThese tests are not comprehensive and more test cases are needed to\nprevent regressions.\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":0}}},{"hash":"23d72159f7038a87e2c847ec5d5db0713d8dc789","messageTitle":"JAR: .gitignore META-INF directory","messageBody":"STORAGE: Include directory existence and file existence checks that will\ncreate the necessary directories and file if missing.\n","tags":["v0.1","A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}}]},{"date":"2021-02-04","commitResults":[{"hash":"41162d4f504e95b95a954812e773a6118b7bb75b","messageTitle":"Ui: Improve Help message and include Ui JavaDoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":1}}},{"hash":"f011c1c69e6c2990633363360c62660e6f225b4b","messageTitle":"Include JavaDoc for all of DBot\u0027s Classes and Methods","messageBody":"DBot\u0027s implementation does not have many JavaDoc comments to explain\nwhat each class or method is responsible for, how they are to be used,\nor what the arguments they take represent.\n\nThis lack of JavaDoc comments can make it difficult for future\ndevelopers to use the DBot package.\n\nLet\u0027s include JavaDoc comments for every Class or Method to assist\nfuture developers.\n\nJavaDoc comments can also be used by IDE\u0027s to quickly supply developers\nwith the information they need when dealing with a class or method.\n","tags":["A-JavaDoc","A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":377,"deletions":96}}}]},{"date":"2021-02-05","commitResults":[{"hash":"9cefafbc946ce1c7bd538d47642232e4ef5b7a13","messageTitle":"Command: Implement Find Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":0}}},{"hash":"bf92ec64a06a8ec2c21118011b45d81887a38e9e","messageTitle":"FindCommand: Update quietExecute","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"401b729a75115cce1be9c263fc154408acbe2c76","messageTitle":"Ui: Update Help message","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":3}}},{"hash":"1924bab9c2f03c8b5b09cf41d53d3a46019cd8dd","messageTitle":"FindCommand: Include JavaDoc comment for class initializer","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}}]}]},"authorFileTypeContributionMap":{"douglaswja":{"java":1290,"md":1,"fxml":0,"sh":8,"bat":0,"gradle":0,"txt":19}},"authorContributionVariance":{"douglaswja":86990.766},"authorDisplayNameMap":{"douglaswja":"CS2103-W17-1 DOUG..WOOD"}}
