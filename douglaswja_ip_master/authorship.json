[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaswja"},"content":"import java.util.HashMap;"},{"lineNumber":2,"author":{"gitId":"douglaswja"},"content":"import java.util.Map;"},{"lineNumber":3,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":4,"author":{"gitId":"douglaswja"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"douglaswja"},"content":" * Command is an Enum class that handles valid commands to the DukeBot chat-bot."},{"lineNumber":6,"author":{"gitId":"douglaswja"},"content":" *"},{"lineNumber":7,"author":{"gitId":"douglaswja"},"content":" * The possible valid commands are:"},{"lineNumber":8,"author":{"gitId":"douglaswja"},"content":" *   LIST"},{"lineNumber":9,"author":{"gitId":"douglaswja"},"content":" *"},{"lineNumber":10,"author":{"gitId":"douglaswja"},"content":" * @author Douglas Wei Jing Allwood"},{"lineNumber":11,"author":{"gitId":"douglaswja"},"content":" * @author douglas_allwood@u.nus.edu"},{"lineNumber":12,"author":{"gitId":"douglaswja"},"content":" */"},{"lineNumber":13,"author":{"gitId":"douglaswja"},"content":"public enum Command {"},{"lineNumber":14,"author":{"gitId":"douglaswja"},"content":"    LIST(\"list\"),"},{"lineNumber":15,"author":{"gitId":"douglaswja"},"content":"    END(\"bye\");"},{"lineNumber":16,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":17,"author":{"gitId":"douglaswja"},"content":"    private final String command;"},{"lineNumber":18,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":19,"author":{"gitId":"douglaswja"},"content":"    Command(String command) {"},{"lineNumber":20,"author":{"gitId":"douglaswja"},"content":"        this.command \u003d command;"},{"lineNumber":21,"author":{"gitId":"douglaswja"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":23,"author":{"gitId":"douglaswja"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"douglaswja"},"content":"     * Returns the command string relevant to the given Enum."},{"lineNumber":25,"author":{"gitId":"douglaswja"},"content":"     * @return String representing the command for the given Enum"},{"lineNumber":26,"author":{"gitId":"douglaswja"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"douglaswja"},"content":"    public String getCommand() {"},{"lineNumber":28,"author":{"gitId":"douglaswja"},"content":"        return String.valueOf(this.command);"},{"lineNumber":29,"author":{"gitId":"douglaswja"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    //@@author Lokesh Gupta"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    //Reused from https://howtodoinjava.com/java/enum/java-enum-string-example/"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Map\u003cString, Command\u003e lookup \u003d new HashMap\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Populate the lookup table with all possible Command Enums"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    static {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        for (Command cmd : Command.values()) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            lookup.put(cmd.getCommand(), cmd);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Searches for the relevant Enum that matches the String command."},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param command The String command whose Enum is to be returned"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return Command Enum that matches the given String command or null"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Command get(String command) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return lookup.get(command);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //@@author"},{"lineNumber":51,"author":{"gitId":"douglaswja"},"content":"}"}],"authorContributionMap":{"douglaswja":31,"-":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaswja"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaswja"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"douglaswja"},"content":" * Duke is the controller for the CLI chat-bot DukeBot that handles task tracking."},{"lineNumber":5,"author":{"gitId":"douglaswja"},"content":" * @author Douglas Wei Jing Allwood"},{"lineNumber":6,"author":{"gitId":"douglaswja"},"content":" * @author douglas_allwood@u.nus.edu"},{"lineNumber":7,"author":{"gitId":"douglaswja"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"douglaswja"},"content":"        // Greet the user"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":17,"author":{"gitId":"douglaswja"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"},{"lineNumber":18,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":19,"author":{"gitId":"douglaswja"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":20,"author":{"gitId":"douglaswja"},"content":"        DukeBot dukeBot \u003d new DukeBot(scanner);"},{"lineNumber":21,"author":{"gitId":"douglaswja"},"content":"        dukeBot.run();"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"douglaswja":13,"-":10}},{"path":"src/main/java/DukeBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaswja"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"douglaswja"},"content":"import java.util.LinkedList;"},{"lineNumber":3,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":4,"author":{"gitId":"douglaswja"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"douglaswja"},"content":" * Duke is a CLI chat-bot that handles task tracking."},{"lineNumber":6,"author":{"gitId":"douglaswja"},"content":" *"},{"lineNumber":7,"author":{"gitId":"douglaswja"},"content":" * @author Douglas Wei Jing Allwood"},{"lineNumber":8,"author":{"gitId":"douglaswja"},"content":" * @author douglas_allwood@u.nus.edu"},{"lineNumber":9,"author":{"gitId":"douglaswja"},"content":" */"},{"lineNumber":10,"author":{"gitId":"douglaswja"},"content":"public class DukeBot {"},{"lineNumber":11,"author":{"gitId":"douglaswja"},"content":"    private Scanner scanner;"},{"lineNumber":12,"author":{"gitId":"douglaswja"},"content":"    private LinkedList\u003cString\u003e list;"},{"lineNumber":13,"author":{"gitId":"douglaswja"},"content":"    private static final String UNDERLINES \u003d \"____________________________________________________________\";"},{"lineNumber":14,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":15,"author":{"gitId":"douglaswja"},"content":"    public DukeBot(Scanner scanner) {"},{"lineNumber":16,"author":{"gitId":"douglaswja"},"content":"        this.scanner \u003d scanner;"},{"lineNumber":17,"author":{"gitId":"douglaswja"},"content":"        this.list \u003d new LinkedList\u003cString\u003e();"},{"lineNumber":18,"author":{"gitId":"douglaswja"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":20,"author":{"gitId":"douglaswja"},"content":"    // Static methods"},{"lineNumber":21,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":22,"author":{"gitId":"douglaswja"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"douglaswja"},"content":"     * Returns the first word present in a given line of input text."},{"lineNumber":24,"author":{"gitId":"douglaswja"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"douglaswja"},"content":"     * @param input The user input text of String type"},{"lineNumber":26,"author":{"gitId":"douglaswja"},"content":"     * @return A lowercase String"},{"lineNumber":27,"author":{"gitId":"douglaswja"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"douglaswja"},"content":"    public static String getFirstWord(String input) {"},{"lineNumber":29,"author":{"gitId":"douglaswja"},"content":"        return String.valueOf(input).split(\"\\\\\\\\s\", 2)[0].toLowerCase();"},{"lineNumber":30,"author":{"gitId":"douglaswja"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":32,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":33,"author":{"gitId":"douglaswja"},"content":"    // Instance methods"},{"lineNumber":34,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":35,"author":{"gitId":"douglaswja"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"douglaswja"},"content":"     * Activates the chat-bot so that it keeps taking inputs from the user via System.in"},{"lineNumber":37,"author":{"gitId":"douglaswja"},"content":"     * until the \"bye\" input is given."},{"lineNumber":38,"author":{"gitId":"douglaswja"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"douglaswja"},"content":"    public void run() {"},{"lineNumber":40,"author":{"gitId":"douglaswja"},"content":"        while (true) {"},{"lineNumber":41,"author":{"gitId":"douglaswja"},"content":"            String input \u003d scanner.nextLine();"},{"lineNumber":42,"author":{"gitId":"douglaswja"},"content":"            boolean endFlag \u003d this.processInput(input);"},{"lineNumber":43,"author":{"gitId":"douglaswja"},"content":"            if (endFlag) {"},{"lineNumber":44,"author":{"gitId":"douglaswja"},"content":"                System.out.println(UNDERLINES);"},{"lineNumber":45,"author":{"gitId":"douglaswja"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":46,"author":{"gitId":"douglaswja"},"content":"                System.out.println(UNDERLINES);"},{"lineNumber":47,"author":{"gitId":"douglaswja"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"douglaswja"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"douglaswja"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"douglaswja"},"content":"        this.scanner.close();"},{"lineNumber":51,"author":{"gitId":"douglaswja"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":53,"author":{"gitId":"douglaswja"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"douglaswja"},"content":"     * Parses user input and returns a boolean flag indicating whether to terminate."},{"lineNumber":55,"author":{"gitId":"douglaswja"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"douglaswja"},"content":"     * @param input The user input string"},{"lineNumber":57,"author":{"gitId":"douglaswja"},"content":"     * @return true if the programme should end and false otherwise"},{"lineNumber":58,"author":{"gitId":"douglaswja"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"douglaswja"},"content":"    public boolean processInput(String input) {"},{"lineNumber":60,"author":{"gitId":"douglaswja"},"content":"        String first \u003d DukeBot.getFirstWord(input);"},{"lineNumber":61,"author":{"gitId":"douglaswja"},"content":"        Command command \u003d Command.get(first);"},{"lineNumber":62,"author":{"gitId":"douglaswja"},"content":"        if (command \u003d\u003d null) {"},{"lineNumber":63,"author":{"gitId":"douglaswja"},"content":"            this.add(input);"},{"lineNumber":64,"author":{"gitId":"douglaswja"},"content":"        } else {"},{"lineNumber":65,"author":{"gitId":"douglaswja"},"content":"            switch (command) {"},{"lineNumber":66,"author":{"gitId":"douglaswja"},"content":"                case LIST:"},{"lineNumber":67,"author":{"gitId":"douglaswja"},"content":"                    this.printList();"},{"lineNumber":68,"author":{"gitId":"douglaswja"},"content":"                    break;"},{"lineNumber":69,"author":{"gitId":"douglaswja"},"content":"                case END:"},{"lineNumber":70,"author":{"gitId":"douglaswja"},"content":"                    return true;"},{"lineNumber":71,"author":{"gitId":"douglaswja"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"douglaswja"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"douglaswja"},"content":"        return false;"},{"lineNumber":74,"author":{"gitId":"douglaswja"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":76,"author":{"gitId":"douglaswja"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"douglaswja"},"content":"     * Adds a new item to the chat-bots list."},{"lineNumber":78,"author":{"gitId":"douglaswja"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"douglaswja"},"content":"     * @param input A String of text that should be added as an entry to the list"},{"lineNumber":80,"author":{"gitId":"douglaswja"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"douglaswja"},"content":"    public void add(String input) {"},{"lineNumber":82,"author":{"gitId":"douglaswja"},"content":"        this.list.add(input);"},{"lineNumber":83,"author":{"gitId":"douglaswja"},"content":"        System.out.println(UNDERLINES);"},{"lineNumber":84,"author":{"gitId":"douglaswja"},"content":"        System.out.println(\"added: \" + input);"},{"lineNumber":85,"author":{"gitId":"douglaswja"},"content":"        System.out.println(UNDERLINES);"},{"lineNumber":86,"author":{"gitId":"douglaswja"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"douglaswja"},"content":""},{"lineNumber":88,"author":{"gitId":"douglaswja"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"douglaswja"},"content":"     * Prints all the existing list items that this current chat-bot was made to track."},{"lineNumber":90,"author":{"gitId":"douglaswja"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"douglaswja"},"content":"    public void printList() {"},{"lineNumber":92,"author":{"gitId":"douglaswja"},"content":"        System.out.println(UNDERLINES);"},{"lineNumber":93,"author":{"gitId":"douglaswja"},"content":"        int count \u003d 1;"},{"lineNumber":94,"author":{"gitId":"douglaswja"},"content":"        for (String task : this.list) {"},{"lineNumber":95,"author":{"gitId":"douglaswja"},"content":"            System.out.println(\" \" + count + \": \" + task);"},{"lineNumber":96,"author":{"gitId":"douglaswja"},"content":"            count++;"},{"lineNumber":97,"author":{"gitId":"douglaswja"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"douglaswja"},"content":"        System.out.println(UNDERLINES);"},{"lineNumber":99,"author":{"gitId":"douglaswja"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"douglaswja"},"content":"}"},{"lineNumber":101,"author":{"gitId":"douglaswja"},"content":""}],"authorContributionMap":{"douglaswja":101}}]
