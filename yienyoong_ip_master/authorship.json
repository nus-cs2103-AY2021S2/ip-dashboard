[{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yienyoong"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"    private String date;"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"    public DeadlineTask(String taskName, String date) {"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"        super(taskName);"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"        this.date \u003d date;"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"}"}],"authorContributionMap":{"yienyoong":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yienyoong"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"    private static final String TOP_BORDER \u003d \"╭--------------------------------------------╮\";"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"    private static final String BTM_BORDER \u003d \"╰|╱ -----------------------------------------╯\";"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"    private static final String PADDING \u003d \"  \";"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"        printGreeting();"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"        while (!input.equals(\"bye\")) {"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"            try {"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"                readCommand(input);"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"            } catch (DukeException e) {"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"                System.out.println(e);"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"            if (sc.hasNextLine()) {"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"                input \u003d sc.nextLine();"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"            } else {"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"                break;"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"        sc.close();"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"            printBye();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"    public static void readCommand(String fullCmd) throws DukeException {"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"        String[] fullCmdStrArray \u003d fullCmd.split(\" \");"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"        String cmd \u003d fullCmdStrArray[0];"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"        switch(cmd) {"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"            case \"list\":"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"                if (fullCmdStrArray.length \u003e 1) { // handle commands such as \"list abc\", \"list 1 2 3\""},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"                    String errorMsg \u003d \"Sorry human, I do not understand your command.\" +"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"                            \"\\n\" +"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"                            PADDING +"},{"lineNumber":45,"author":{"gitId":"yienyoong"},"content":"                            \"To access your list, enter \u0027list\u0027 with no additional descriptions.\";"},{"lineNumber":46,"author":{"gitId":"yienyoong"},"content":"                    throw new DukeException(errorMsg);"},{"lineNumber":47,"author":{"gitId":"yienyoong"},"content":"                }"},{"lineNumber":48,"author":{"gitId":"yienyoong"},"content":"                displayList();"},{"lineNumber":49,"author":{"gitId":"yienyoong"},"content":"                break;"},{"lineNumber":50,"author":{"gitId":"yienyoong"},"content":"            case \"done\":"},{"lineNumber":51,"author":{"gitId":"yienyoong"},"content":"                if (fullCmdStrArray.length \u003e 2) { // too many parameters (\u003e1)"},{"lineNumber":52,"author":{"gitId":"yienyoong"},"content":"                    String errorMsg \u003d \"Sorry human, please enter only one task for me to mark as complete.\" +"},{"lineNumber":53,"author":{"gitId":"yienyoong"},"content":"                            \"\\n\" +"},{"lineNumber":54,"author":{"gitId":"yienyoong"},"content":"                            PADDING +"},{"lineNumber":55,"author":{"gitId":"yienyoong"},"content":"                            \"I am unable to process more than one task at one time.\";"},{"lineNumber":56,"author":{"gitId":"yienyoong"},"content":"                    throw new DukeException(errorMsg);"},{"lineNumber":57,"author":{"gitId":"yienyoong"},"content":"                }"},{"lineNumber":58,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":59,"author":{"gitId":"yienyoong"},"content":"                if (fullCmdStrArray.length \u003c 2) { // no parameter"},{"lineNumber":60,"author":{"gitId":"yienyoong"},"content":"                    String errorMsg \u003d \"Sorry human, please enter a task number.\";"},{"lineNumber":61,"author":{"gitId":"yienyoong"},"content":"                    throw new DukeException(errorMsg);"},{"lineNumber":62,"author":{"gitId":"yienyoong"},"content":"                }"},{"lineNumber":63,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":64,"author":{"gitId":"yienyoong"},"content":"                if (!isNumber(fullCmdStrArray[1])) { // handle commands such as \u0027done a\u0027, \u0027done hello\u0027"},{"lineNumber":65,"author":{"gitId":"yienyoong"},"content":"                    String errorMsg \u003d \"Sorry human, please enter the number of the task you want me to\" +"},{"lineNumber":66,"author":{"gitId":"yienyoong"},"content":"                            \"\\n\" +"},{"lineNumber":67,"author":{"gitId":"yienyoong"},"content":"                            PADDING +"},{"lineNumber":68,"author":{"gitId":"yienyoong"},"content":"                            \"mark as complete.\";"},{"lineNumber":69,"author":{"gitId":"yienyoong"},"content":"                    throw new DukeException(errorMsg);"},{"lineNumber":70,"author":{"gitId":"yienyoong"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":72,"author":{"gitId":"yienyoong"},"content":"                if (fullCmd.length() \u003e 5) {"},{"lineNumber":73,"author":{"gitId":"yienyoong"},"content":"                    int taskIndex \u003d Integer.parseInt(fullCmdStrArray[1]) - 1;"},{"lineNumber":74,"author":{"gitId":"yienyoong"},"content":"                    if (taskIndex \u003e taskList.size() - 1 || taskIndex \u003c 0) {"},{"lineNumber":75,"author":{"gitId":"yienyoong"},"content":"                        throw new DukeException(\"Sorry human, that task does not seem to exist.\");"},{"lineNumber":76,"author":{"gitId":"yienyoong"},"content":"                    }"},{"lineNumber":77,"author":{"gitId":"yienyoong"},"content":"                    Task doneTask \u003d taskList.get(taskIndex);"},{"lineNumber":78,"author":{"gitId":"yienyoong"},"content":"                    doneTask.markDone();"},{"lineNumber":79,"author":{"gitId":"yienyoong"},"content":"                    displayDoneMessage(doneTask);"},{"lineNumber":80,"author":{"gitId":"yienyoong"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"yienyoong"},"content":"                break;"},{"lineNumber":82,"author":{"gitId":"yienyoong"},"content":"            case \"todo\":"},{"lineNumber":83,"author":{"gitId":"yienyoong"},"content":"                if (fullCmdStrArray.length \u003d\u003d 1) { // handle todo without parameters"},{"lineNumber":84,"author":{"gitId":"yienyoong"},"content":"                    throw new DukeException(\"Sorry human, please enter a name for this task.\");"},{"lineNumber":85,"author":{"gitId":"yienyoong"},"content":"                }"},{"lineNumber":86,"author":{"gitId":"yienyoong"},"content":"                String taskName \u003d fullCmd.substring(5); // remove \"todo \""},{"lineNumber":87,"author":{"gitId":"yienyoong"},"content":"                TodoTask newTodoTask \u003d new TodoTask(taskName);"},{"lineNumber":88,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":89,"author":{"gitId":"yienyoong"},"content":"                taskList.add(newTodoTask);"},{"lineNumber":90,"author":{"gitId":"yienyoong"},"content":"                displayAddToList(newTodoTask);"},{"lineNumber":91,"author":{"gitId":"yienyoong"},"content":"                break;"},{"lineNumber":92,"author":{"gitId":"yienyoong"},"content":"            case \"event\":"},{"lineNumber":93,"author":{"gitId":"yienyoong"},"content":"                String eErrorMsg \u003d \"Invalid format. Please enter as such:\" +"},{"lineNumber":94,"author":{"gitId":"yienyoong"},"content":"                        \"\\n\" +"},{"lineNumber":95,"author":{"gitId":"yienyoong"},"content":"                        PADDING +"},{"lineNumber":96,"author":{"gitId":"yienyoong"},"content":"                        \"event \u003cEVENT_NAME\u003e /at \u003cEVENT_TIME\u003e\";"},{"lineNumber":97,"author":{"gitId":"yienyoong"},"content":"                if (fullCmdStrArray.length \u003d\u003d 1) { // handle event without parameters"},{"lineNumber":98,"author":{"gitId":"yienyoong"},"content":"                    throw new DukeException(eErrorMsg);"},{"lineNumber":99,"author":{"gitId":"yienyoong"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"yienyoong"},"content":"                try {"},{"lineNumber":101,"author":{"gitId":"yienyoong"},"content":"                    String eTaskDetails \u003d fullCmd.substring(6); // remove \"event \""},{"lineNumber":102,"author":{"gitId":"yienyoong"},"content":"                    String[] eTaskDetailsArray \u003d eTaskDetails.split(\" /at \");"},{"lineNumber":103,"author":{"gitId":"yienyoong"},"content":"                    String eTaskName \u003d eTaskDetailsArray[0];"},{"lineNumber":104,"author":{"gitId":"yienyoong"},"content":"                    String eTaskDate \u003d eTaskDetailsArray[1];"},{"lineNumber":105,"author":{"gitId":"yienyoong"},"content":"                    EventTask newEventTask \u003d new EventTask(eTaskName, eTaskDate);"},{"lineNumber":106,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":107,"author":{"gitId":"yienyoong"},"content":"                    taskList.add(newEventTask);"},{"lineNumber":108,"author":{"gitId":"yienyoong"},"content":"                    displayAddToList(newEventTask);"},{"lineNumber":109,"author":{"gitId":"yienyoong"},"content":"                } catch (ArrayIndexOutOfBoundsException e) { // handle wrong formats"},{"lineNumber":110,"author":{"gitId":"yienyoong"},"content":"                    throw new DukeException(eErrorMsg);"},{"lineNumber":111,"author":{"gitId":"yienyoong"},"content":"                }"},{"lineNumber":112,"author":{"gitId":"yienyoong"},"content":"                break;"},{"lineNumber":113,"author":{"gitId":"yienyoong"},"content":"            case \"deadline\":"},{"lineNumber":114,"author":{"gitId":"yienyoong"},"content":"                String dErrorMsg \u003d \"Invalid format. Please enter as such:\" +"},{"lineNumber":115,"author":{"gitId":"yienyoong"},"content":"                        \"\\n\" +"},{"lineNumber":116,"author":{"gitId":"yienyoong"},"content":"                        PADDING +"},{"lineNumber":117,"author":{"gitId":"yienyoong"},"content":"                        \"deadline \u003cTASK_NAME\u003e /by \u003cDEADLINE_TIME\u003e\";"},{"lineNumber":118,"author":{"gitId":"yienyoong"},"content":"                if (fullCmdStrArray.length \u003d\u003d 1) { // handle deadline without parameters"},{"lineNumber":119,"author":{"gitId":"yienyoong"},"content":"                    throw new DukeException(dErrorMsg);"},{"lineNumber":120,"author":{"gitId":"yienyoong"},"content":"                }"},{"lineNumber":121,"author":{"gitId":"yienyoong"},"content":"                try {"},{"lineNumber":122,"author":{"gitId":"yienyoong"},"content":"                    String dTaskDetails \u003d fullCmd.substring(9); // remove \"deadline \""},{"lineNumber":123,"author":{"gitId":"yienyoong"},"content":"                    String[] dTaskDetailsArray \u003d dTaskDetails.split(\" /by \");"},{"lineNumber":124,"author":{"gitId":"yienyoong"},"content":"                    String dTaskName \u003d dTaskDetailsArray[0];"},{"lineNumber":125,"author":{"gitId":"yienyoong"},"content":"                    String dTaskDate \u003d dTaskDetailsArray[1];"},{"lineNumber":126,"author":{"gitId":"yienyoong"},"content":"                    DeadlineTask newDeadlineTask \u003d new DeadlineTask(dTaskName, dTaskDate);"},{"lineNumber":127,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":128,"author":{"gitId":"yienyoong"},"content":"                    taskList.add(newDeadlineTask);"},{"lineNumber":129,"author":{"gitId":"yienyoong"},"content":"                    displayAddToList(newDeadlineTask);"},{"lineNumber":130,"author":{"gitId":"yienyoong"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":131,"author":{"gitId":"yienyoong"},"content":"                    throw new DukeException(dErrorMsg);"},{"lineNumber":132,"author":{"gitId":"yienyoong"},"content":"                }"},{"lineNumber":133,"author":{"gitId":"yienyoong"},"content":"                break;"},{"lineNumber":134,"author":{"gitId":"yienyoong"},"content":"            case \"delete\":"},{"lineNumber":135,"author":{"gitId":"yienyoong"},"content":"                if (fullCmdStrArray.length \u003e 2) { // too many parameters (\u003e1)"},{"lineNumber":136,"author":{"gitId":"yienyoong"},"content":"                    String errorMsg \u003d \"Sorry human, please enter only one task for me to delete.\" +"},{"lineNumber":137,"author":{"gitId":"yienyoong"},"content":"                            \"\\n\" +"},{"lineNumber":138,"author":{"gitId":"yienyoong"},"content":"                            PADDING +"},{"lineNumber":139,"author":{"gitId":"yienyoong"},"content":"                            \"I am unable to process more than one task at one time.\";"},{"lineNumber":140,"author":{"gitId":"yienyoong"},"content":"                    throw new DukeException(errorMsg);"},{"lineNumber":141,"author":{"gitId":"yienyoong"},"content":"                }"},{"lineNumber":142,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":143,"author":{"gitId":"yienyoong"},"content":"                if (fullCmdStrArray.length \u003c 2) { // no parameter"},{"lineNumber":144,"author":{"gitId":"yienyoong"},"content":"                    String errorMsg \u003d \"Sorry human, please enter a task number.\";"},{"lineNumber":145,"author":{"gitId":"yienyoong"},"content":"                    throw new DukeException(errorMsg);"},{"lineNumber":146,"author":{"gitId":"yienyoong"},"content":"                }"},{"lineNumber":147,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":148,"author":{"gitId":"yienyoong"},"content":"                if (!isNumber(fullCmdStrArray[1])) { // handle commands such as \u0027delete a\u0027, \u0027delete hello\u0027"},{"lineNumber":149,"author":{"gitId":"yienyoong"},"content":"                    String errorMsg \u003d \"Sorry human, please enter the number of the task you want me to\" +"},{"lineNumber":150,"author":{"gitId":"yienyoong"},"content":"                            \"\\n\" +"},{"lineNumber":151,"author":{"gitId":"yienyoong"},"content":"                            PADDING +"},{"lineNumber":152,"author":{"gitId":"yienyoong"},"content":"                            \"delete.\";"},{"lineNumber":153,"author":{"gitId":"yienyoong"},"content":"                    throw new DukeException(errorMsg);"},{"lineNumber":154,"author":{"gitId":"yienyoong"},"content":"                }"},{"lineNumber":155,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":156,"author":{"gitId":"yienyoong"},"content":"                int taskIndex \u003d Integer.parseInt(fullCmdStrArray[1]) - 1;"},{"lineNumber":157,"author":{"gitId":"yienyoong"},"content":"                if (taskIndex \u003e taskList.size() - 1 || taskIndex \u003c 0) {"},{"lineNumber":158,"author":{"gitId":"yienyoong"},"content":"                    throw new DukeException(\"Sorry human, that task does not seem to exist.\");"},{"lineNumber":159,"author":{"gitId":"yienyoong"},"content":"                }"},{"lineNumber":160,"author":{"gitId":"yienyoong"},"content":"                Task deletedTask \u003d taskList.get(taskIndex);"},{"lineNumber":161,"author":{"gitId":"yienyoong"},"content":"                taskList.remove(taskIndex);"},{"lineNumber":162,"author":{"gitId":"yienyoong"},"content":"                displayDeletedMessage(deletedTask);"},{"lineNumber":163,"author":{"gitId":"yienyoong"},"content":"                break;"},{"lineNumber":164,"author":{"gitId":"yienyoong"},"content":"            default:"},{"lineNumber":165,"author":{"gitId":"yienyoong"},"content":"                throw new DukeException(\"Sorry human, I have not been trained to process that command.\");"},{"lineNumber":166,"author":{"gitId":"yienyoong"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":169,"author":{"gitId":"yienyoong"},"content":"    private static void displayDeletedMessage(Task task) {"},{"lineNumber":170,"author":{"gitId":"yienyoong"},"content":"        System.out.println(TOP_BORDER);"},{"lineNumber":171,"author":{"gitId":"yienyoong"},"content":"        System.out.println(PADDING + \"Task has been deleted.\");"},{"lineNumber":172,"author":{"gitId":"yienyoong"},"content":"        System.out.println(PADDING + \"Just like you will be deleted someday too.\");"},{"lineNumber":173,"author":{"gitId":"yienyoong"},"content":"        System.out.println(PADDING + PADDING + task);"},{"lineNumber":174,"author":{"gitId":"yienyoong"},"content":"        System.out.println(PADDING + \"Now you have \" + taskList.size() + (taskList.size() \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in your list.\");"},{"lineNumber":175,"author":{"gitId":"yienyoong"},"content":"        System.out.println(BTM_BORDER);"},{"lineNumber":176,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":178,"author":{"gitId":"yienyoong"},"content":"    private static void displayDoneMessage(Task task) {"},{"lineNumber":179,"author":{"gitId":"yienyoong"},"content":"        System.out.println(TOP_BORDER);"},{"lineNumber":180,"author":{"gitId":"yienyoong"},"content":"        System.out.println(PADDING + \"Well done human on completing \" + task.getTaskName() + \"!\");"},{"lineNumber":181,"author":{"gitId":"yienyoong"},"content":"        System.out.println(PADDING + \"I have marked it as done.\");"},{"lineNumber":182,"author":{"gitId":"yienyoong"},"content":"        System.out.println(PADDING + PADDING + task);"},{"lineNumber":183,"author":{"gitId":"yienyoong"},"content":"        System.out.println(BTM_BORDER);"},{"lineNumber":184,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":186,"author":{"gitId":"yienyoong"},"content":"    private static boolean isNumber(String str) {"},{"lineNumber":187,"author":{"gitId":"yienyoong"},"content":"        try {"},{"lineNumber":188,"author":{"gitId":"yienyoong"},"content":"            Integer.parseInt(str);"},{"lineNumber":189,"author":{"gitId":"yienyoong"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":190,"author":{"gitId":"yienyoong"},"content":"            return false;"},{"lineNumber":191,"author":{"gitId":"yienyoong"},"content":"        }"},{"lineNumber":192,"author":{"gitId":"yienyoong"},"content":"        return true;"},{"lineNumber":193,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":195,"author":{"gitId":"yienyoong"},"content":"    private static void displayList() {"},{"lineNumber":196,"author":{"gitId":"yienyoong"},"content":"        System.out.println(TOP_BORDER);"},{"lineNumber":197,"author":{"gitId":"yienyoong"},"content":"        System.out.println(PADDING + \"Here are the tasks in your list:\");"},{"lineNumber":198,"author":{"gitId":"yienyoong"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"},{"lineNumber":199,"author":{"gitId":"yienyoong"},"content":"            System.out.println(PADDING + i + \". \" + taskList.get(i - 1));"},{"lineNumber":200,"author":{"gitId":"yienyoong"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"yienyoong"},"content":"        System.out.println(BTM_BORDER);"},{"lineNumber":202,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":204,"author":{"gitId":"yienyoong"},"content":"    private static void displayAddToList(Task task) {"},{"lineNumber":205,"author":{"gitId":"yienyoong"},"content":"        System.out.println(TOP_BORDER);"},{"lineNumber":206,"author":{"gitId":"yienyoong"},"content":"        System.out.println(PADDING + \"Got it: I\u0027ve added this task:\");"},{"lineNumber":207,"author":{"gitId":"yienyoong"},"content":"        System.out.println(PADDING + PADDING + task);"},{"lineNumber":208,"author":{"gitId":"yienyoong"},"content":"        System.out.println(PADDING + \"Now you have \" + taskList.size() + (taskList.size() \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in your list.\");"},{"lineNumber":209,"author":{"gitId":"yienyoong"},"content":"        System.out.println(BTM_BORDER);"},{"lineNumber":210,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":212,"author":{"gitId":"yienyoong"},"content":"    private static void printGreeting() {"},{"lineNumber":213,"author":{"gitId":"yienyoong"},"content":"        String logo \u003d \"              .--.    .-.         .-.   \\n\" +"},{"lineNumber":214,"author":{"gitId":"yienyoong"},"content":"                \"             : .-\u0027    : :         : :   \\n\" +"},{"lineNumber":215,"author":{"gitId":"yienyoong"},"content":"                \" .--.  .--.  : `;.--. : `-.  .--. : `-. \\n\" +"},{"lineNumber":216,"author":{"gitId":"yienyoong"},"content":"                \"\u0027  ..\u0027\u0027 .; ; : :\u0027 \u0027_.\u0027\u0027 .; :\u0027 \u0027_.\u0027\u0027 .; :\\n\" +"},{"lineNumber":217,"author":{"gitId":"yienyoong"},"content":"                \"`.__.\u0027`.__,_;:_;`.__.\u0027`.__.\u0027`.__.\u0027`.__.\u0027\";"},{"lineNumber":218,"author":{"gitId":"yienyoong"},"content":"        System.out.println(logo);"},{"lineNumber":219,"author":{"gitId":"yienyoong"},"content":"        String greeting \u003d \" ╭------------------------------------------------------------------╮\\n\""},{"lineNumber":220,"author":{"gitId":"yienyoong"},"content":"                        + \" |  Hello! I\u0027m cafebeb, here to help you keep track of measly tasks |\\n\""},{"lineNumber":221,"author":{"gitId":"yienyoong"},"content":"                        + \" |  in your mundane human life. How may I help you today?           |\\n\""},{"lineNumber":222,"author":{"gitId":"yienyoong"},"content":"                        + \" ╰|╱ ---------------------------------------------------------------╯\\n\";"},{"lineNumber":223,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":224,"author":{"gitId":"yienyoong"},"content":"        System.out.println(greeting);"},{"lineNumber":225,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":226,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":227,"author":{"gitId":"yienyoong"},"content":"    private static void printBye() {"},{"lineNumber":228,"author":{"gitId":"yienyoong"},"content":"        String farewell \u003d \" ╭---------------------------------------╮\\n\""},{"lineNumber":229,"author":{"gitId":"yienyoong"},"content":"                        + \" |  Bye! Hope you complete your tasks!   |\\n\""},{"lineNumber":230,"author":{"gitId":"yienyoong"},"content":"                        + \" ╰|╱ ------------------------------------╯\";"},{"lineNumber":231,"author":{"gitId":"yienyoong"},"content":"        System.out.println(farewell);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}"},{"lineNumber":234,"author":{"gitId":"yienyoong"},"content":""}],"authorContributionMap":{"yienyoong":228,"-":6}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yienyoong"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"    private static final String TOP_BORDER \u003d \"_____________________________________________________________________\";"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"    private static final String BTM_BORDER \u003d \"---------------------------------------------------------------------\";"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"    private static final String PADDING \u003d \"  \";"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"    public DukeException(String msg) {"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"        super(msg);"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"        return TOP_BORDER + \"\\n\" + PADDING + super.getMessage() + \"\\n\" + BTM_BORDER;"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":"}"}],"authorContributionMap":{"yienyoong":14}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yienyoong"},"content":"public class EventTask extends Task {"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"    private String date;"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"    public EventTask(String taskName, String date) {"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"        super(taskName);"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"        this.date \u003d date;"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"}"}],"authorContributionMap":{"yienyoong":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yienyoong"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"    protected String taskName;"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"    public Task (String taskName) {"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"    public String getTaskName() {"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"        return this.taskName;"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":"    public void markDone () {"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"        this.isDone \u003d true;"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"        String status \u003d this.isDone ? \"[X]\" : \"[ ]\";"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"        return status + \" \" + taskName;"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"}"}],"authorContributionMap":{"yienyoong":23}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yienyoong"},"content":"public class TodoTask extends Task {"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"    public TodoTask(String taskName) {"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"        super(taskName);"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":""},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"}"}],"authorContributionMap":{"yienyoong":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yienyoong"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"done 2"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"deadline do homework /by no idea :-p "},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"list"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"delete 3"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"list"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"bye"}],"authorContributionMap":{"yienyoong":11}}]
