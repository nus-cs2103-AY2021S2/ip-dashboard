[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssagit"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"ssagit"},"content":"import java.lang.*;"},{"lineNumber":3,"author":{"gitId":"ssagit"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"ssagit"},"content":""},{"lineNumber":6,"author":{"gitId":"ssagit"},"content":"    enum Type {"},{"lineNumber":7,"author":{"gitId":"ssagit"},"content":"        TODO,"},{"lineNumber":8,"author":{"gitId":"ssagit"},"content":"        DEADLINE,"},{"lineNumber":9,"author":{"gitId":"ssagit"},"content":"        EVENT"},{"lineNumber":10,"author":{"gitId":"ssagit"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ssagit"},"content":""},{"lineNumber":12,"author":{"gitId":"ssagit"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"ssagit"},"content":"     * Task class"},{"lineNumber":14,"author":{"gitId":"ssagit"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"ssagit"},"content":"    static class Task {"},{"lineNumber":16,"author":{"gitId":"ssagit"},"content":""},{"lineNumber":17,"author":{"gitId":"ssagit"},"content":"        String taskName;"},{"lineNumber":18,"author":{"gitId":"ssagit"},"content":"        boolean isDone;"},{"lineNumber":19,"author":{"gitId":"ssagit"},"content":"        Type type;"},{"lineNumber":20,"author":{"gitId":"ssagit"},"content":"        String time;"},{"lineNumber":21,"author":{"gitId":"ssagit"},"content":""},{"lineNumber":22,"author":{"gitId":"ssagit"},"content":"        /**"},{"lineNumber":23,"author":{"gitId":"ssagit"},"content":"         * Task class constructor"},{"lineNumber":24,"author":{"gitId":"ssagit"},"content":"         */"},{"lineNumber":25,"author":{"gitId":"ssagit"},"content":"        public Task(String taskName, boolean isDone, Type type, String time) {"},{"lineNumber":26,"author":{"gitId":"ssagit"},"content":"            this.taskName \u003d taskName;"},{"lineNumber":27,"author":{"gitId":"ssagit"},"content":"            this.isDone \u003d isDone;"},{"lineNumber":28,"author":{"gitId":"ssagit"},"content":"            this.type \u003d type;"},{"lineNumber":29,"author":{"gitId":"ssagit"},"content":"            this.time \u003d time;"},{"lineNumber":30,"author":{"gitId":"ssagit"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"ssagit"},"content":""},{"lineNumber":32,"author":{"gitId":"ssagit"},"content":"        public void markDone() {"},{"lineNumber":33,"author":{"gitId":"ssagit"},"content":"            this.isDone \u003d true;"},{"lineNumber":34,"author":{"gitId":"ssagit"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"ssagit"},"content":""},{"lineNumber":36,"author":{"gitId":"ssagit"},"content":"        public String toString() {"},{"lineNumber":37,"author":{"gitId":"ssagit"},"content":"            if (type \u003d\u003d Type.TODO) {"},{"lineNumber":38,"author":{"gitId":"ssagit"},"content":"                if (isDone) return \"[T][X] \" + taskName;"},{"lineNumber":39,"author":{"gitId":"ssagit"},"content":"                return \"[T][ ] \" + taskName;"},{"lineNumber":40,"author":{"gitId":"ssagit"},"content":"            } else if (type \u003d\u003d Type.DEADLINE) {"},{"lineNumber":41,"author":{"gitId":"ssagit"},"content":"                if (isDone) return \"[D][X] \" + taskName + \" (by: \" + time + \")\";"},{"lineNumber":42,"author":{"gitId":"ssagit"},"content":"                return \"[D][ ] \" + taskName + \" (by: \" + time + \")\";"},{"lineNumber":43,"author":{"gitId":"ssagit"},"content":"            } else if (type \u003d\u003d Type.EVENT) {"},{"lineNumber":44,"author":{"gitId":"ssagit"},"content":"                if (isDone) return \"[E][X] \" + taskName + \" (at: \" + time + \")\";"},{"lineNumber":45,"author":{"gitId":"ssagit"},"content":"                return \"[E][ ] \" + taskName + \" (at: \" + time + \")\";"},{"lineNumber":46,"author":{"gitId":"ssagit"},"content":"            } else return \"O_o How did you input other types?\";"},{"lineNumber":47,"author":{"gitId":"ssagit"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"ssagit"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"ssagit"},"content":""},{"lineNumber":50,"author":{"gitId":"ssagit"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"ssagit"},"content":"     * Exception class for missing todo descriptor"},{"lineNumber":52,"author":{"gitId":"ssagit"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"ssagit"},"content":"    static class MissingTodoDescriptorException extends Exception {"},{"lineNumber":54,"author":{"gitId":"ssagit"},"content":"        public MissingTodoDescriptorException(String errorMessage) {"},{"lineNumber":55,"author":{"gitId":"ssagit"},"content":"            super(errorMessage);"},{"lineNumber":56,"author":{"gitId":"ssagit"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"ssagit"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"ssagit"},"content":""},{"lineNumber":59,"author":{"gitId":"ssagit"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"ssagit"},"content":"     * Exception class for unknown input parameters"},{"lineNumber":61,"author":{"gitId":"ssagit"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"ssagit"},"content":"    static class UnknownInputParamException extends Exception {"},{"lineNumber":63,"author":{"gitId":"ssagit"},"content":"        public UnknownInputParamException(String errorMessage) {"},{"lineNumber":64,"author":{"gitId":"ssagit"},"content":"            super(errorMessage);"},{"lineNumber":65,"author":{"gitId":"ssagit"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"ssagit"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"ssagit"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":69,"author":{"gitId":"ssagit"},"content":"        try {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            String logo \u003d \" ____        _        \\n\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":73,"author":{"gitId":"-"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":74,"author":{"gitId":"-"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":76,"author":{"gitId":"ssagit"},"content":"            String introduction \u003d \"I\u0027m Duke!\\nWhat can I do for ya?\\n\";"},{"lineNumber":77,"author":{"gitId":"ssagit"},"content":"            formatBox(introduction);"},{"lineNumber":78,"author":{"gitId":"ssagit"},"content":""},{"lineNumber":79,"author":{"gitId":"ssagit"},"content":"            // inits"},{"lineNumber":80,"author":{"gitId":"ssagit"},"content":"            Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":81,"author":{"gitId":"ssagit"},"content":"            Task[] taskArr \u003d new Task[100];"},{"lineNumber":82,"author":{"gitId":"ssagit"},"content":"            String input;"},{"lineNumber":83,"author":{"gitId":"ssagit"},"content":"            int j \u003d 0; // task counter"},{"lineNumber":84,"author":{"gitId":"ssagit"},"content":""},{"lineNumber":85,"author":{"gitId":"ssagit"},"content":"            while (true) {"},{"lineNumber":86,"author":{"gitId":"ssagit"},"content":"                input \u003d sc.nextLine();"},{"lineNumber":87,"author":{"gitId":"ssagit"},"content":"                String inputArr[] \u003d input.split(\" \");"},{"lineNumber":88,"author":{"gitId":"ssagit"},"content":"                if (inputArr[0].equals(\"bye\"))"},{"lineNumber":89,"author":{"gitId":"ssagit"},"content":"                    break;"},{"lineNumber":90,"author":{"gitId":"ssagit"},"content":"                else if (inputArr[0].equals(\"list\")) {"},{"lineNumber":91,"author":{"gitId":"ssagit"},"content":"                    System.out.println(\"------------------------------------\");"},{"lineNumber":92,"author":{"gitId":"ssagit"},"content":"                    System.out.println(\"Here are the tasks in your list: \");"},{"lineNumber":93,"author":{"gitId":"ssagit"},"content":"                    for (Task t : taskArr) {"},{"lineNumber":94,"author":{"gitId":"ssagit"},"content":"                        if (t \u003d\u003d null) break;"},{"lineNumber":95,"author":{"gitId":"ssagit"},"content":"                        System.out.println(t.toString());"},{"lineNumber":96,"author":{"gitId":"ssagit"},"content":"                    }"},{"lineNumber":97,"author":{"gitId":"ssagit"},"content":"                    System.out.println(\"------------------------------------\");"},{"lineNumber":98,"author":{"gitId":"ssagit"},"content":"                } else if (inputArr[0].equals(\"done\")) {"},{"lineNumber":99,"author":{"gitId":"ssagit"},"content":"                    int taskNum \u003d Integer.parseInt(inputArr[1]) - 1;"},{"lineNumber":100,"author":{"gitId":"ssagit"},"content":"                    taskArr[taskNum].markDone();"},{"lineNumber":101,"author":{"gitId":"ssagit"},"content":"                    formatBox(\"Nice! I\u0027ve marked this task as done:\\n\" + taskArr[taskNum].toString());"},{"lineNumber":102,"author":{"gitId":"ssagit"},"content":"                } else if (inputArr[0].equals(\"todo\") || inputArr[0].equals(\"event\") ||"},{"lineNumber":103,"author":{"gitId":"ssagit"},"content":"                        inputArr[0].equals(\"deadline\")) {"},{"lineNumber":104,"author":{"gitId":"ssagit"},"content":"                    // add to list"},{"lineNumber":105,"author":{"gitId":"ssagit"},"content":"                    String[] inputArrTasks \u003d input.split(\"/\");"},{"lineNumber":106,"author":{"gitId":"ssagit"},"content":"                    String[] firstHalf \u003d inputArrTasks[0].split(\" \", 2);"},{"lineNumber":107,"author":{"gitId":"ssagit"},"content":""},{"lineNumber":108,"author":{"gitId":"ssagit"},"content":"                    if (inputArrTasks.length !\u003d 1) {"},{"lineNumber":109,"author":{"gitId":"ssagit"},"content":"                        String[] secondHalf \u003d inputArrTasks[1].split(\" \", 2);"},{"lineNumber":110,"author":{"gitId":"ssagit"},"content":"                        taskArr[j] \u003d new Task(firstHalf[1], false,"},{"lineNumber":111,"author":{"gitId":"ssagit"},"content":"                                Type.valueOf(firstHalf[0].toUpperCase()), secondHalf[1]);"},{"lineNumber":112,"author":{"gitId":"ssagit"},"content":"                    } else {"},{"lineNumber":113,"author":{"gitId":"ssagit"},"content":"                        if (firstHalf.length \u003d\u003d 1) {"},{"lineNumber":114,"author":{"gitId":"ssagit"},"content":"                            throw new MissingTodoDescriptorException(\"------------------------------------\\n\" +"},{"lineNumber":115,"author":{"gitId":"ssagit"},"content":"                                    \":( OOPS!!! The description of a todo cannot be empty\\n\" +"},{"lineNumber":116,"author":{"gitId":"ssagit"},"content":"                                    \"------------------------------------\");"},{"lineNumber":117,"author":{"gitId":"ssagit"},"content":"                        } else {"},{"lineNumber":118,"author":{"gitId":"ssagit"},"content":"                            taskArr[j] \u003d new Task(firstHalf[1], false,"},{"lineNumber":119,"author":{"gitId":"ssagit"},"content":"                                    Type.valueOf(firstHalf[0].toUpperCase()), \"\");"},{"lineNumber":120,"author":{"gitId":"ssagit"},"content":"                        }"},{"lineNumber":121,"author":{"gitId":"ssagit"},"content":"                    }"},{"lineNumber":122,"author":{"gitId":"ssagit"},"content":"                    j++; // increase task count in list"},{"lineNumber":123,"author":{"gitId":"ssagit"},"content":"                    // print output"},{"lineNumber":124,"author":{"gitId":"ssagit"},"content":"                    String formattedInput \u003d \"Got it. I\u0027ve added this task:\\n  \";"},{"lineNumber":125,"author":{"gitId":"ssagit"},"content":"                    formattedInput \u003d formattedInput.concat(taskArr[j - 1].toString()).concat(\"\\n\");"},{"lineNumber":126,"author":{"gitId":"ssagit"},"content":"                    formattedInput \u003d formattedInput.concat(\"Now you have \" + Integer.toString(j) + \" tasks in the list.\");"},{"lineNumber":127,"author":{"gitId":"ssagit"},"content":"                    formatBox(formattedInput);"},{"lineNumber":128,"author":{"gitId":"ssagit"},"content":"                } else if (inputArr[0].equals(\"delete\")) {"},{"lineNumber":129,"author":{"gitId":"ssagit"},"content":"                    int removeIndex \u003d Integer.parseInt(inputArr[1]);"},{"lineNumber":130,"author":{"gitId":"ssagit"},"content":"                    j--; // reduce task count in list"},{"lineNumber":131,"author":{"gitId":"ssagit"},"content":"                    String formattedInput \u003d \"Got it. I\u0027ve removed this task:\\n  \";"},{"lineNumber":132,"author":{"gitId":"ssagit"},"content":"                    formattedInput \u003d formattedInput.concat(taskArr[removeIndex - 1].toString()).concat(\"\\n\");"},{"lineNumber":133,"author":{"gitId":"ssagit"},"content":"                    formattedInput \u003d formattedInput.concat(\"Now you have \" + Integer.toString(j) + \" tasks in the list.\");"},{"lineNumber":134,"author":{"gitId":"ssagit"},"content":"                    formatBox(formattedInput);"},{"lineNumber":135,"author":{"gitId":"ssagit"},"content":""},{"lineNumber":136,"author":{"gitId":"ssagit"},"content":"                    // actually delete the task and move all other tasks forward"},{"lineNumber":137,"author":{"gitId":"ssagit"},"content":"                    for (int i \u003d removeIndex - 1; i \u003c taskArr.length - 1; i++) {"},{"lineNumber":138,"author":{"gitId":"ssagit"},"content":"                        taskArr[i] \u003d taskArr[i + 1];"},{"lineNumber":139,"author":{"gitId":"ssagit"},"content":"                    }"},{"lineNumber":140,"author":{"gitId":"ssagit"},"content":"                } else {"},{"lineNumber":141,"author":{"gitId":"ssagit"},"content":"                    throw new UnknownInputParamException(\"------------------------------------\\n\" +"},{"lineNumber":142,"author":{"gitId":"ssagit"},"content":"                            \":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +"},{"lineNumber":143,"author":{"gitId":"ssagit"},"content":"                            \"------------------------------------\");"},{"lineNumber":144,"author":{"gitId":"ssagit"},"content":"                }"},{"lineNumber":145,"author":{"gitId":"ssagit"},"content":"            }"},{"lineNumber":146,"author":{"gitId":"ssagit"},"content":"            String bye \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":147,"author":{"gitId":"ssagit"},"content":"            formatBox(bye);"},{"lineNumber":148,"author":{"gitId":"ssagit"},"content":"        } catch (MissingTodoDescriptorException e) {"},{"lineNumber":149,"author":{"gitId":"ssagit"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":150,"author":{"gitId":"ssagit"},"content":"        } catch (UnknownInputParamException e) {"},{"lineNumber":151,"author":{"gitId":"ssagit"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":152,"author":{"gitId":"ssagit"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"ssagit"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"ssagit"},"content":""},{"lineNumber":155,"author":{"gitId":"ssagit"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"ssagit"},"content":"     * Duke speaks in chat boxes"},{"lineNumber":157,"author":{"gitId":"ssagit"},"content":"     *"},{"lineNumber":158,"author":{"gitId":"ssagit"},"content":"     * @param str input string within chat boxes"},{"lineNumber":159,"author":{"gitId":"ssagit"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"ssagit"},"content":"    public static void formatBox(String str) {"},{"lineNumber":161,"author":{"gitId":"ssagit"},"content":"        System.out.println(\"------------------------------------\");"},{"lineNumber":162,"author":{"gitId":"ssagit"},"content":"        System.out.println(str);"},{"lineNumber":163,"author":{"gitId":"ssagit"},"content":"        System.out.println(\"------------------------------------\");"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":10,"ssagit":155}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ssagit"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"ssagit"},"content":"list"},{"lineNumber":3,"author":{"gitId":"ssagit"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"ssagit"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"ssagit"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":6,"author":{"gitId":"ssagit"},"content":"list"},{"lineNumber":7,"author":{"gitId":"ssagit"},"content":"delete 1"},{"lineNumber":8,"author":{"gitId":"ssagit"},"content":"list"}],"authorContributionMap":{"ssagit":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"ssagit"},"content":"javac  -cp ..\\src\\main\\java\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":20,"ssagit":1}}]
