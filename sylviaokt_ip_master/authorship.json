[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"   "}],"authorContributionMap":{"-":17,"sylviaokt":7}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"    mainClassName \u003d \"bob.gui.Launcher\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"    archiveBaseName \u003d \"Bob\""},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"    archiveClassifier \u003d \"v1.0\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":43,"sylviaokt":22}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"D | 0 | coding assignment | 02 Mar 2021 11:59 PM R: 19 Feb 2021 2:00 AM"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":"D | 0 | submit essay | 21 Feb 2021 11:59 PM"},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"T | 0 | eat"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"E | 1 | eat | 02 Feb 2021 8:00 PM"}],"authorContributionMap":{"sylviaokt":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"# Bob chatbox"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"Bob is a desktop app for **managing a list of tasks, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI)."},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"## Quick Start"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"1. Ensure you have Java `11` and above installed in your Computer."},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"1. Download the latest `Bob.jar` from [here](https://github.com/sylviaokt/ip/releases)."},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"1. Copy the file to the folder you want to use as the home folder for your Bob chatbox."},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds."},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"![StartScreen](/images/Start.PNG)"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"1. The chatbox now has no tasks stored if it is the first time you are running it in your computer."},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"1. All tasks added would be stored in the `/data/tasks.txt` file."},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"1. Type the command in the command box and press `Enter` or `Send` button to execute."},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"Some example commands you can try:"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"   * `list`: List all tasks."},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"   * `todo` eat: Adds a Todo task to the chatbox."},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"   * `delete 2`: Deletes the 2nd task shown from the current list."},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"   * `bye`: Exits the app."},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"1. Refer to the `Feature` section below for details of each command."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"### **Notes about the command format** "},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user."},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"e.g. in `todo NAME`, `NAME` is a parameter which can be used as `todo eat`."},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"* Parameters must follow the order given."},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list` and `bye`) will be ignored."},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"e.g. if the command specifies `list 2`, it will be interpreted as `list`."},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"### Getting a list of commands: `help`"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"List commands that Bob can take in."},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"Format: `help`"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"### Adding a todo task: `todo`"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"Adds a new todo task to the chatbox."},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"Format: `todo NAME_OF_TASK`"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"Examples:"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"* `todo eat`"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"* `todo sleep`"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"Expected Outcome:"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"`Alright, I have added this new todo."},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"[T][ ] eat"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"There are a total of 1 task now`."},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"### Adding an event: `event`"},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"Adds a new event to the chatbox."},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"Format: `event NAME_OF_EVENT /at: YYYY-MM-DD HHMM`"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"* Adds an event occurring at the specified date and time."},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"* The date and time **must follow the specifed format**."},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":"* The time is in a **24-hour format**."},{"lineNumber":60,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":61,"author":{"gitId":"sylviaokt"},"content":"Examples:"},{"lineNumber":62,"author":{"gitId":"sylviaokt"},"content":"* `event eat /at: 2021-02-02 0200`"},{"lineNumber":63,"author":{"gitId":"sylviaokt"},"content":"* `event dinner /at: 2021-02-28 1900`"},{"lineNumber":64,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":65,"author":{"gitId":"sylviaokt"},"content":"Expected Outcome:"},{"lineNumber":66,"author":{"gitId":"sylviaokt"},"content":"`Alright, I have added this new event."},{"lineNumber":67,"author":{"gitId":"sylviaokt"},"content":"[E][ ] eat (by: 02 Feb 2021 2:00 AM)"},{"lineNumber":68,"author":{"gitId":"sylviaokt"},"content":"There are a total of 2 tasks now`."},{"lineNumber":69,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":70,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":71,"author":{"gitId":"sylviaokt"},"content":"### Adding a deadline: `deadline`"},{"lineNumber":72,"author":{"gitId":"sylviaokt"},"content":"Adds a new deadline to the chatbox."},{"lineNumber":73,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":74,"author":{"gitId":"sylviaokt"},"content":"Format: `deadline NAME_OF_DEADLINE /by: YYYY-MM-DD HHMM`"},{"lineNumber":75,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":76,"author":{"gitId":"sylviaokt"},"content":"* Adds a deadline due at the specified date and time."},{"lineNumber":77,"author":{"gitId":"sylviaokt"},"content":"* The date and time **must follow the specifed format**."},{"lineNumber":78,"author":{"gitId":"sylviaokt"},"content":"* The time is in a **24-hour format**."},{"lineNumber":79,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":80,"author":{"gitId":"sylviaokt"},"content":"Examples:"},{"lineNumber":81,"author":{"gitId":"sylviaokt"},"content":"* `deadline essay /by: 2021-03-01 2359`"},{"lineNumber":82,"author":{"gitId":"sylviaokt"},"content":"* `deadline submit assignment /by: 2021-02-28 2359`"},{"lineNumber":83,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":84,"author":{"gitId":"sylviaokt"},"content":"Expected Outcome:"},{"lineNumber":85,"author":{"gitId":"sylviaokt"},"content":"`Alright, I have added this new deadline."},{"lineNumber":86,"author":{"gitId":"sylviaokt"},"content":"[D][ ] essay (by: 01 Mar 2021 11:59 PM)"},{"lineNumber":87,"author":{"gitId":"sylviaokt"},"content":"There are a total of 3 tasks now`."},{"lineNumber":88,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":89,"author":{"gitId":"sylviaokt"},"content":"### Listing all tasks: `list`"},{"lineNumber":90,"author":{"gitId":"sylviaokt"},"content":"Shows a list of all tasks stored."},{"lineNumber":91,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":92,"author":{"gitId":"sylviaokt"},"content":"Format: `list`"},{"lineNumber":93,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":94,"author":{"gitId":"sylviaokt"},"content":"Expected Outcome:"},{"lineNumber":95,"author":{"gitId":"sylviaokt"},"content":"`This is your list of tasks:"},{"lineNumber":96,"author":{"gitId":"sylviaokt"},"content":"1.[T][ ] eat"},{"lineNumber":97,"author":{"gitId":"sylviaokt"},"content":"2.[E][ ] eat (by: 02 Feb 2021 2:00 AM)"},{"lineNumber":98,"author":{"gitId":"sylviaokt"},"content":"3.[D][ ] essay (by: 01 Mar 2021 11:59 PM)"},{"lineNumber":99,"author":{"gitId":"sylviaokt"},"content":"Upcoming reminders: "},{"lineNumber":100,"author":{"gitId":"sylviaokt"},"content":"01 Feb 2021 1:00 PM: [[E][ ] eat (by: 02 Feb 2021 2:00 AM)]`"},{"lineNumber":101,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":102,"author":{"gitId":"sylviaokt"},"content":"### Searching for a specific task by name: `find`"},{"lineNumber":103,"author":{"gitId":"sylviaokt"},"content":"Search for tasks whose names contain any of the given keywords."},{"lineNumber":104,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":105,"author":{"gitId":"sylviaokt"},"content":"Format: `find KEYWORDS`"},{"lineNumber":106,"author":{"gitId":"sylviaokt"},"content":"* The search is case-insensitive. e.g `eat` will match `Eat`"},{"lineNumber":107,"author":{"gitId":"sylviaokt"},"content":"* The order of the keywords matters. e.g. `eat and sleep` will not match `sleep and eat`"},{"lineNumber":108,"author":{"gitId":"sylviaokt"},"content":"* Only the name is searched."},{"lineNumber":109,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":110,"author":{"gitId":"sylviaokt"},"content":"Examples:"},{"lineNumber":111,"author":{"gitId":"sylviaokt"},"content":"* `find eat` will return `Eat` and `eat and sleep`"},{"lineNumber":112,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":113,"author":{"gitId":"sylviaokt"},"content":"Expected Outcome:"},{"lineNumber":114,"author":{"gitId":"sylviaokt"},"content":"`Here are your search results:"},{"lineNumber":115,"author":{"gitId":"sylviaokt"},"content":"1.[T][ ] eat"},{"lineNumber":116,"author":{"gitId":"sylviaokt"},"content":"2.[E][ ] eat (by: 02 Feb 2021 2:00 AM)"},{"lineNumber":117,"author":{"gitId":"sylviaokt"},"content":"Upcoming reminders: `"},{"lineNumber":118,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":119,"author":{"gitId":"sylviaokt"},"content":"### Adding a reminder to a task: `remind`"},{"lineNumber":120,"author":{"gitId":"sylviaokt"},"content":"Adds a reminder to a task that would be given by the chatbox at the specified time."},{"lineNumber":121,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":122,"author":{"gitId":"sylviaokt"},"content":"Format: `remind INDEX /on: YYYY-MM-DD HHMM`"},{"lineNumber":123,"author":{"gitId":"sylviaokt"},"content":"* Adds a reminder to remind about the task at the specified `index`. "},{"lineNumber":124,"author":{"gitId":"sylviaokt"},"content":"* The index refers to the index number shown in the displayed task list. "},{"lineNumber":125,"author":{"gitId":"sylviaokt"},"content":"* The index **must be a positive integer 1, 2, 3, …**"},{"lineNumber":126,"author":{"gitId":"sylviaokt"},"content":"* The date and time **must follow the specifed format**."},{"lineNumber":127,"author":{"gitId":"sylviaokt"},"content":"* The time is in a **24-hour format**."},{"lineNumber":128,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":129,"author":{"gitId":"sylviaokt"},"content":"Examples:"},{"lineNumber":130,"author":{"gitId":"sylviaokt"},"content":"* `remind 2 /on: 2021-02-01 1300` - The bot will give a reminder about the task at 1pm on 1st of February 2021."},{"lineNumber":131,"author":{"gitId":"sylviaokt"},"content":"* `remind 3 /on: 2021-02-28 1900`"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":134,"author":{"gitId":"sylviaokt"},"content":"`A new reminder is added to [E][ ] eat (by: 02 Feb 2021 2:00 AM)"},{"lineNumber":135,"author":{"gitId":"sylviaokt"},"content":"on 2021-02-01T13:00`"},{"lineNumber":136,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":137,"author":{"gitId":"sylviaokt"},"content":"### Mark a task as completed: `done`"},{"lineNumber":138,"author":{"gitId":"sylviaokt"},"content":"Marks the specified task as done in the chatbox."},{"lineNumber":139,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":140,"author":{"gitId":"sylviaokt"},"content":"Format: `done INDEX`"},{"lineNumber":141,"author":{"gitId":"sylviaokt"},"content":"* Marks the task at the specified `INDEX` as completed."},{"lineNumber":142,"author":{"gitId":"sylviaokt"},"content":"* The index refers to the index number shown in the displayed task list. "},{"lineNumber":143,"author":{"gitId":"sylviaokt"},"content":"* The index **must be a positive integer 1, 2, 3, …**"},{"lineNumber":144,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":145,"author":{"gitId":"sylviaokt"},"content":"Examples:"},{"lineNumber":146,"author":{"gitId":"sylviaokt"},"content":"* `done 1`"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"sylviaokt"},"content":"Expected Outcome:"},{"lineNumber":149,"author":{"gitId":"sylviaokt"},"content":"`Good job! This task has been marked as done :)"},{"lineNumber":150,"author":{"gitId":"sylviaokt"},"content":"[T][X] eat`"},{"lineNumber":151,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":152,"author":{"gitId":"sylviaokt"},"content":"### Deleting a task: `delete`"},{"lineNumber":153,"author":{"gitId":"sylviaokt"},"content":"Deletes the specified task from the chatbox."},{"lineNumber":154,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":155,"author":{"gitId":"sylviaokt"},"content":"Format: `delete INDEX`"},{"lineNumber":156,"author":{"gitId":"sylviaokt"},"content":"* Deletes the task at the specified `INDEX`."},{"lineNumber":157,"author":{"gitId":"sylviaokt"},"content":"* The index refers to the index number shown in the displayed task list. "},{"lineNumber":158,"author":{"gitId":"sylviaokt"},"content":"* The index **must be a positive integer 1, 2, 3, …**"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"sylviaokt"},"content":"Examples:"},{"lineNumber":161,"author":{"gitId":"sylviaokt"},"content":"* `delete 1`"},{"lineNumber":162,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":163,"author":{"gitId":"sylviaokt"},"content":"Expected Outcome:"},{"lineNumber":164,"author":{"gitId":"sylviaokt"},"content":"`Alright, this task has been removed."},{"lineNumber":165,"author":{"gitId":"sylviaokt"},"content":"[T][X] eat"},{"lineNumber":166,"author":{"gitId":"sylviaokt"},"content":"There are 2 tasks left`"},{"lineNumber":167,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":168,"author":{"gitId":"sylviaokt"},"content":"### Exiting the chatbox: `bye`"},{"lineNumber":169,"author":{"gitId":"sylviaokt"},"content":"Exits the chatbox."},{"lineNumber":170,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":171,"author":{"gitId":"sylviaokt"},"content":"Format: `bye`"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"sylviaokt"},"content":"### Saving the data"},{"lineNumber":174,"author":{"gitId":"sylviaokt"},"content":"Bob data are saved in the hard disk automatically after any command that changes the data. "},{"lineNumber":175,"author":{"gitId":"sylviaokt"},"content":"There is no need to save manually."},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"sylviaokt"},"content":"### Editing the data file"},{"lineNumber":178,"author":{"gitId":"sylviaokt"},"content":"Bob data are saved as a txt file [TXT file location]/data/tasks.txt. Users are welcome to update data directly by editing that data file."},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"sylviaokt"},"content":"#### Caution: If your changes to the data file makes its format invalid, Bob will run into an issue when running and might not run."},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"sylviaokt"},"content":"## Command summary"},{"lineNumber":183,"author":{"gitId":"sylviaokt"},"content":"Action | Format"},{"lineNumber":184,"author":{"gitId":"sylviaokt"},"content":"-------|---------"},{"lineNumber":185,"author":{"gitId":"sylviaokt"},"content":"todo | `todo NAME_OF_TODO`"},{"lineNumber":186,"author":{"gitId":"sylviaokt"},"content":"event | `event NAME_OF_EVENT /at: YYYY-MM-DD HHMM`"},{"lineNumber":187,"author":{"gitId":"sylviaokt"},"content":"deadline | `deadline NAME_OF_DEADLINE /by: YYYY-MM-DD HHMM`"},{"lineNumber":188,"author":{"gitId":"sylviaokt"},"content":"list | `list`"},{"lineNumber":189,"author":{"gitId":"sylviaokt"},"content":"find | `find KEYWORDS`"},{"lineNumber":190,"author":{"gitId":"sylviaokt"},"content":"remind | `remind INDEX /on: YYYY-MM-DD HHMM`"},{"lineNumber":191,"author":{"gitId":"sylviaokt"},"content":"done | `done INDEX`"},{"lineNumber":192,"author":{"gitId":"sylviaokt"},"content":"delete | `delete INDEX`"},{"lineNumber":193,"author":{"gitId":"sylviaokt"},"content":"bye | `bye`"}],"authorContributionMap":{"-":17,"sylviaokt":176}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":"T | 0 | eat and sleep"},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"E | 0 | eat | 2020-03-02 2pm"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"T | 0 | eat"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"T | 0 | sleep"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"D | 0 | eat | 2020-02-02 2pm"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"T | 0 | eat"}],"authorContributionMap":{"sylviaokt":7}},{"path":"src/main/java/bob/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":" * Thrown to indicate an error in Duke"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"public class BobException extends Exception {"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"    public BobException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"    public BobException(String errorMessage, Throwable error) {"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"        super(errorMessage, error);"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":14}},{"path":"src/main/java/bob/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.command;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"import bob.BobException;"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"import bob.processor.Parser;"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"import bob.processor.Storage;"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Deadline;"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Event;"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Task;"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"import bob.task.TaskList;"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Todo;"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":" * Represents the different types of possible commands."},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"public enum Command {"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"    HELP {"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"            return \"You can add a new task using the following commands: \\n\""},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"                    + \"todo NAME_OF_TASK\\n\""},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"                    + \"event NAME_OF_EVENT /at: YYYY-MM-DD HHMM\\n\""},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"                    + \"deadline NAME_OF_DEADLINE /by: YYYY-MM-DD HHMM\\n\""},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"                    + \"\\nYou can see the whole list of tasks using: list\\n\""},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"                    + \"\\nTo search for a specific task: find KEYWORDS\\n\""},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"                    + \"\\nTo add a reminder for a task:\\n\""},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"                    + \"remind INDEX /on: YYYY-MM-DD HHMM\\n\""},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"                    + \"\\nTo mark a task as done: done INDEX\\n\""},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"                    + \"\\nTo delete a task: delete INDEX\\n\""},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"                    + \"\\nTo exit the app: bye\";"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"    REMIND {"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"            try {"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"                int index \u003d parser.parseNumber(userInput);"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"                Task currentTask \u003d taskList.getTaskList().get(index - 1);"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"                LocalDateTime remindDateTime \u003d parser.parseDateTime(userInput, \"remind\");"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"                System.out.println(remindDateTime.toString() + \" \" + LocalDateTime.now().toString());"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"                if (remindDateTime.isBefore(LocalDateTime.now()) || remindDateTime.isEqual(LocalDateTime.now())) {"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"                    return \"Please enter a valid timing!\";"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"                taskList.addReminder(remindDateTime, currentTask);"},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"                if (currentTask.getReminderDateTime() !\u003d null) {"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"                    taskList.removeReminder(currentTask.getReminderDateTime(), currentTask);"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"                currentTask.addReminder(remindDateTime);"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"                storage.rewrite(taskList);"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"                return \"A new reminder is added to \" + currentTask.toString() + \" on: \" + remindDateTime.toString();"},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"            } catch (BobException e) {"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"                return e.getMessage();"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"    BYE {"},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":60,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":61,"author":{"gitId":"sylviaokt"},"content":"            return \"Bye! See you soon!\";"},{"lineNumber":62,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":64,"author":{"gitId":"sylviaokt"},"content":"    LIST {"},{"lineNumber":65,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":66,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":67,"author":{"gitId":"sylviaokt"},"content":"            String message \u003d \"This is your list of tasks:\\n\";"},{"lineNumber":68,"author":{"gitId":"sylviaokt"},"content":"            message +\u003d taskList.toString();"},{"lineNumber":69,"author":{"gitId":"sylviaokt"},"content":"            return message;"},{"lineNumber":70,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":72,"author":{"gitId":"sylviaokt"},"content":"    FIND {"},{"lineNumber":73,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":74,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":75,"author":{"gitId":"sylviaokt"},"content":"            String message \u003d \"\";"},{"lineNumber":76,"author":{"gitId":"sylviaokt"},"content":"            try {"},{"lineNumber":77,"author":{"gitId":"sylviaokt"},"content":"                String name \u003d parser.parseName(userInput);"},{"lineNumber":78,"author":{"gitId":"sylviaokt"},"content":"                TaskList findTask \u003d new TaskList();"},{"lineNumber":79,"author":{"gitId":"sylviaokt"},"content":"                ArrayList\u003cTask\u003e currTaskList \u003d taskList.getTaskList();"},{"lineNumber":80,"author":{"gitId":"sylviaokt"},"content":"                for (Task task : currTaskList) {"},{"lineNumber":81,"author":{"gitId":"sylviaokt"},"content":"                    String taskName \u003d task.getName().toLowerCase();"},{"lineNumber":82,"author":{"gitId":"sylviaokt"},"content":"                    if (taskName.contains(name.toLowerCase())) {"},{"lineNumber":83,"author":{"gitId":"sylviaokt"},"content":"                        findTask.addTask(task);"},{"lineNumber":84,"author":{"gitId":"sylviaokt"},"content":"                    }"},{"lineNumber":85,"author":{"gitId":"sylviaokt"},"content":"                }"},{"lineNumber":86,"author":{"gitId":"sylviaokt"},"content":"                if (findTask.getSize() !\u003d 0) {"},{"lineNumber":87,"author":{"gitId":"sylviaokt"},"content":"                    message \u003d \"Here are your search results: \\n\""},{"lineNumber":88,"author":{"gitId":"sylviaokt"},"content":"                            + findTask.toString();"},{"lineNumber":89,"author":{"gitId":"sylviaokt"},"content":"                } else {"},{"lineNumber":90,"author":{"gitId":"sylviaokt"},"content":"                    message \u003d \"Oops, there is no matching task!\";"},{"lineNumber":91,"author":{"gitId":"sylviaokt"},"content":"                }"},{"lineNumber":92,"author":{"gitId":"sylviaokt"},"content":"            } catch (BobException e) {"},{"lineNumber":93,"author":{"gitId":"sylviaokt"},"content":"                message \u003d e.getMessage();"},{"lineNumber":94,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"sylviaokt"},"content":"            return message;"},{"lineNumber":96,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":98,"author":{"gitId":"sylviaokt"},"content":"    DONE {"},{"lineNumber":99,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":100,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":101,"author":{"gitId":"sylviaokt"},"content":"            try {"},{"lineNumber":102,"author":{"gitId":"sylviaokt"},"content":"                int index \u003d parser.parseNumber(userInput);"},{"lineNumber":103,"author":{"gitId":"sylviaokt"},"content":"                Task updatedTask \u003d taskList.changeStatus(index - 1, true);"},{"lineNumber":104,"author":{"gitId":"sylviaokt"},"content":"                storage.rewrite(taskList);"},{"lineNumber":105,"author":{"gitId":"sylviaokt"},"content":"                return \"Good job! This task has been marked as done :)\\n\" + updatedTask.toString();"},{"lineNumber":106,"author":{"gitId":"sylviaokt"},"content":"            } catch (BobException e) {"},{"lineNumber":107,"author":{"gitId":"sylviaokt"},"content":"                return e.getMessage();"},{"lineNumber":108,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":109,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":111,"author":{"gitId":"sylviaokt"},"content":"    DELETE {"},{"lineNumber":112,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":113,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":114,"author":{"gitId":"sylviaokt"},"content":"            try {"},{"lineNumber":115,"author":{"gitId":"sylviaokt"},"content":"                int index \u003d parser.parseNumber(userInput);"},{"lineNumber":116,"author":{"gitId":"sylviaokt"},"content":"                Task removedTask \u003d taskList.removeTask(index - 1);"},{"lineNumber":117,"author":{"gitId":"sylviaokt"},"content":"                storage.rewrite(taskList);"},{"lineNumber":118,"author":{"gitId":"sylviaokt"},"content":"                return \"Alright, this task has been removed.\\n\" + removedTask"},{"lineNumber":119,"author":{"gitId":"sylviaokt"},"content":"                        + \"\\nThere are \" + taskList.getSize() + \" tasks left.\";"},{"lineNumber":120,"author":{"gitId":"sylviaokt"},"content":"            } catch (BobException e) {"},{"lineNumber":121,"author":{"gitId":"sylviaokt"},"content":"                return e.getMessage();"},{"lineNumber":122,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":125,"author":{"gitId":"sylviaokt"},"content":"    TODO {"},{"lineNumber":126,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":127,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":128,"author":{"gitId":"sylviaokt"},"content":"            try {"},{"lineNumber":129,"author":{"gitId":"sylviaokt"},"content":"                String taskName \u003d parser.parseName(userInput);"},{"lineNumber":130,"author":{"gitId":"sylviaokt"},"content":"                Todo newTodo \u003d new Todo(taskName);"},{"lineNumber":131,"author":{"gitId":"sylviaokt"},"content":"                taskList.addToDo(newTodo);"},{"lineNumber":132,"author":{"gitId":"sylviaokt"},"content":"                storage.appendTask(newTodo);"},{"lineNumber":133,"author":{"gitId":"sylviaokt"},"content":"                return \"Alright, I have added this new todo.\\n\""},{"lineNumber":134,"author":{"gitId":"sylviaokt"},"content":"                        + newTodo + \"\\n\" + \"There are a total of \""},{"lineNumber":135,"author":{"gitId":"sylviaokt"},"content":"                        + taskList.getSize() + \" tasks now.\";"},{"lineNumber":136,"author":{"gitId":"sylviaokt"},"content":"            } catch (BobException e) {"},{"lineNumber":137,"author":{"gitId":"sylviaokt"},"content":"                return e.getMessage();"},{"lineNumber":138,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":141,"author":{"gitId":"sylviaokt"},"content":"    EVENT {"},{"lineNumber":142,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":143,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":144,"author":{"gitId":"sylviaokt"},"content":"            try {"},{"lineNumber":145,"author":{"gitId":"sylviaokt"},"content":"                int taskIndex \u003d userInput.indexOf(\"/at:\");"},{"lineNumber":146,"author":{"gitId":"sylviaokt"},"content":"                if (taskIndex !\u003d -1) {"},{"lineNumber":147,"author":{"gitId":"sylviaokt"},"content":"                    String name \u003d parser.parseName(userInput);"},{"lineNumber":148,"author":{"gitId":"sylviaokt"},"content":"                    LocalDateTime dateTime \u003d parser.parseDateTime(userInput, \"event\");"},{"lineNumber":149,"author":{"gitId":"sylviaokt"},"content":"                    Event newEvent \u003d new Event(name, dateTime.toLocalDate(), dateTime.toLocalTime());"},{"lineNumber":150,"author":{"gitId":"sylviaokt"},"content":"                    taskList.addEvent(newEvent);"},{"lineNumber":151,"author":{"gitId":"sylviaokt"},"content":"                    storage.appendTask(newEvent);"},{"lineNumber":152,"author":{"gitId":"sylviaokt"},"content":"                    return \"Alright, I have added this new event.\\n\""},{"lineNumber":153,"author":{"gitId":"sylviaokt"},"content":"                            + newEvent + \"\\n\" + \"There is a total of \""},{"lineNumber":154,"author":{"gitId":"sylviaokt"},"content":"                            + taskList.getSize() + \" tasks now.\";"},{"lineNumber":155,"author":{"gitId":"sylviaokt"},"content":"                } else {"},{"lineNumber":156,"author":{"gitId":"sylviaokt"},"content":"                    return \"There is no event timing detected!\\n\""},{"lineNumber":157,"author":{"gitId":"sylviaokt"},"content":"                            + \"Please try again with a correct format\";"},{"lineNumber":158,"author":{"gitId":"sylviaokt"},"content":"                }"},{"lineNumber":159,"author":{"gitId":"sylviaokt"},"content":"            } catch (BobException e) {"},{"lineNumber":160,"author":{"gitId":"sylviaokt"},"content":"                return e.getMessage();"},{"lineNumber":161,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":162,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":164,"author":{"gitId":"sylviaokt"},"content":"    DEADLINE {"},{"lineNumber":165,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":166,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":167,"author":{"gitId":"sylviaokt"},"content":"            try {"},{"lineNumber":168,"author":{"gitId":"sylviaokt"},"content":"                int deadlineIndex \u003d userInput.indexOf(\"/by:\");"},{"lineNumber":169,"author":{"gitId":"sylviaokt"},"content":"                if (deadlineIndex !\u003d -1) {"},{"lineNumber":170,"author":{"gitId":"sylviaokt"},"content":"                    String name \u003d parser.parseName(userInput);"},{"lineNumber":171,"author":{"gitId":"sylviaokt"},"content":"                    LocalDateTime dateTime \u003d parser.parseDateTime(userInput, \"deadline\");"},{"lineNumber":172,"author":{"gitId":"sylviaokt"},"content":"                    Deadline newDeadline \u003d new Deadline(name, dateTime.toLocalDate(), dateTime.toLocalTime());"},{"lineNumber":173,"author":{"gitId":"sylviaokt"},"content":"                    taskList.addDeadline(newDeadline);"},{"lineNumber":174,"author":{"gitId":"sylviaokt"},"content":"                    storage.appendTask(newDeadline);"},{"lineNumber":175,"author":{"gitId":"sylviaokt"},"content":"                    return \"Alright, I have added this new deadline.\\n\""},{"lineNumber":176,"author":{"gitId":"sylviaokt"},"content":"                            + newDeadline + \"\\n\" + \"There is a total of \""},{"lineNumber":177,"author":{"gitId":"sylviaokt"},"content":"                            + taskList.getSize() + \" tasks now.\";"},{"lineNumber":178,"author":{"gitId":"sylviaokt"},"content":"                } else {"},{"lineNumber":179,"author":{"gitId":"sylviaokt"},"content":"                    return \"There is no deadline time and date detected!\\n\""},{"lineNumber":180,"author":{"gitId":"sylviaokt"},"content":"                            + \"Please try again with a correct format\";"},{"lineNumber":181,"author":{"gitId":"sylviaokt"},"content":"                }"},{"lineNumber":182,"author":{"gitId":"sylviaokt"},"content":"            } catch (BobException e) {"},{"lineNumber":183,"author":{"gitId":"sylviaokt"},"content":"                return e.getMessage();"},{"lineNumber":184,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":185,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":187,"author":{"gitId":"sylviaokt"},"content":"    INVALID {"},{"lineNumber":188,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":189,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":190,"author":{"gitId":"sylviaokt"},"content":"            return \"Sorry, I have no idea what that means :( Please try again!\";"},{"lineNumber":191,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":192,"author":{"gitId":"sylviaokt"},"content":"    };"},{"lineNumber":193,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":194,"author":{"gitId":"sylviaokt"},"content":"    private static final Parser parser \u003d new Parser();"},{"lineNumber":195,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":196,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":197,"author":{"gitId":"sylviaokt"},"content":"     * Executes the required actions for each command."},{"lineNumber":198,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":199,"author":{"gitId":"sylviaokt"},"content":"     * @param userInput User\u0027s input."},{"lineNumber":200,"author":{"gitId":"sylviaokt"},"content":"     * @param taskList The list of tasks user has."},{"lineNumber":201,"author":{"gitId":"sylviaokt"},"content":"     * @param storage The storage of the list of tasks in the hard disk."},{"lineNumber":202,"author":{"gitId":"sylviaokt"},"content":"     * @return"},{"lineNumber":203,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":204,"author":{"gitId":"sylviaokt"},"content":"    public abstract String executeCommand(String userInput, TaskList taskList, Storage storage);"},{"lineNumber":205,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":205}},{"path":"src/main/java/bob/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.gui;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":" * An example of a custom control using FXML."},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":" * containing text from the speaker."},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"public class DialogBox extends HBox {"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"    private Label dialog;"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"    private ImageView displayPicture;"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"            fxmlLoader.load();"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"            e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"        dialog.setText(text);"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"        displayPicture.setImage(img);"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"    private void flip() {"},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"        Collections.reverse(tmp);"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"        db.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"        return db;"},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":"    public static DialogBox getBobDialog(String text, Image img) {"},{"lineNumber":60,"author":{"gitId":"sylviaokt"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":61,"author":{"gitId":"sylviaokt"},"content":"        db.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":62,"author":{"gitId":"sylviaokt"},"content":"        db.flip();"},{"lineNumber":63,"author":{"gitId":"sylviaokt"},"content":"        return db;"},{"lineNumber":64,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":65}},{"path":"src/main/java/bob/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.gui;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":12}},{"path":"src/main/java/bob/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.gui;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import bob.processor.Bob;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":" * A GUI for Bob using FXML."},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"    private Bob bob \u003d new Bob(\"data/tasks.txt\");"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBob(bob);"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":32}},{"path":"src/main/java/bob/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.gui;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import java.time.ZoneId;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import java.util.Date;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"import java.util.Timer;"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"import java.util.TimerTask;"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"import bob.BobException;"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"import bob.processor.Bob;"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Task;"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"import javafx.application.Platform;"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"import javafx.fxml.FXML;"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.control.Button;"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.image.Image;"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"    private VBox dialogContainer;"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"    private TextField userInput;"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"    private Button sendButton;"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"    private Bob bob;"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/patrick.png\"));"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"    private Image bobImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bob.png\"));"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"     * Initializes the GUI."},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"    @FXML"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"    public void initialize() {"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"        String greeting \u003d \"Hello! I\u0027m Bob :D\\nWhat can I do for you?\\n\""},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"                + \"Type \u0027help\u0027 for a list of commands.\\n\";"},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"                DialogBox.getBobDialog(greeting, bobImage)"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"        );"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"    public void setBob(Bob d) {"},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"        bob \u003d d;"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"        for (Task task : bob.getTasks().getTaskList()) {"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"            if (task.getReminderDateTime() !\u003d null) {"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"                setReminder(task);"},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":61,"author":{"gitId":"sylviaokt"},"content":"    public void setReminder(Task task) {"},{"lineNumber":62,"author":{"gitId":"sylviaokt"},"content":"        LocalDateTime reminderTime \u003d task.getReminderDateTime();"},{"lineNumber":63,"author":{"gitId":"sylviaokt"},"content":"        Timer timer \u003d new Timer();"},{"lineNumber":64,"author":{"gitId":"sylviaokt"},"content":"        TimerTask newTask \u003d new TimerTask() {"},{"lineNumber":65,"author":{"gitId":"sylviaokt"},"content":"            @Override"},{"lineNumber":66,"author":{"gitId":"sylviaokt"},"content":"            public void run() {"},{"lineNumber":67,"author":{"gitId":"sylviaokt"},"content":"                Platform.runLater(new Runnable() {"},{"lineNumber":68,"author":{"gitId":"sylviaokt"},"content":"                    @Override"},{"lineNumber":69,"author":{"gitId":"sylviaokt"},"content":"                    public void run() {"},{"lineNumber":70,"author":{"gitId":"sylviaokt"},"content":"                        dialogContainer.getChildren().addAll("},{"lineNumber":71,"author":{"gitId":"sylviaokt"},"content":"                                DialogBox.getBobDialog(\"*Reminder: \" + task.toString(), bobImage));"},{"lineNumber":72,"author":{"gitId":"sylviaokt"},"content":"                    }"},{"lineNumber":73,"author":{"gitId":"sylviaokt"},"content":"                });"},{"lineNumber":74,"author":{"gitId":"sylviaokt"},"content":"                task.removeReminder();"},{"lineNumber":75,"author":{"gitId":"sylviaokt"},"content":"                bob.getTasks().removeReminder(reminderTime, task);"},{"lineNumber":76,"author":{"gitId":"sylviaokt"},"content":"                try {"},{"lineNumber":77,"author":{"gitId":"sylviaokt"},"content":"                    bob.getStorage().rewrite(bob.getTasks());"},{"lineNumber":78,"author":{"gitId":"sylviaokt"},"content":"                } catch (BobException e) {"},{"lineNumber":79,"author":{"gitId":"sylviaokt"},"content":"                    System.out.println(e.getMessage());"},{"lineNumber":80,"author":{"gitId":"sylviaokt"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"sylviaokt"},"content":"        };"},{"lineNumber":83,"author":{"gitId":"sylviaokt"},"content":"        Date date \u003d Date.from(reminderTime.atZone(ZoneId.systemDefault()).toInstant());"},{"lineNumber":84,"author":{"gitId":"sylviaokt"},"content":"        timer.schedule(newTask, date);"},{"lineNumber":85,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":87,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"sylviaokt"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":89,"author":{"gitId":"sylviaokt"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":90,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"sylviaokt"},"content":"    @FXML"},{"lineNumber":92,"author":{"gitId":"sylviaokt"},"content":"    private void handleUserInput() {"},{"lineNumber":93,"author":{"gitId":"sylviaokt"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":94,"author":{"gitId":"sylviaokt"},"content":"        String response \u003d bob.getResponse(input);"},{"lineNumber":95,"author":{"gitId":"sylviaokt"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":96,"author":{"gitId":"sylviaokt"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":97,"author":{"gitId":"sylviaokt"},"content":"                DialogBox.getBobDialog(response, bobImage)"},{"lineNumber":98,"author":{"gitId":"sylviaokt"},"content":"        );"},{"lineNumber":99,"author":{"gitId":"sylviaokt"},"content":"        if (response.startsWith(\"A new reminder\")) {"},{"lineNumber":100,"author":{"gitId":"sylviaokt"},"content":"            setReminder(bob.getTasks().getTaskWithReminder());"},{"lineNumber":101,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"sylviaokt"},"content":"        userInput.clear();"},{"lineNumber":103,"author":{"gitId":"sylviaokt"},"content":"        if (response.equals(\"Bye! See you soon!\")) {"},{"lineNumber":104,"author":{"gitId":"sylviaokt"},"content":"            Platform.exit();"},{"lineNumber":105,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":107}},{"path":"src/main/java/bob/processor/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.processor;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import bob.BobException;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import bob.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":" * Bob is a program that helps you keep track of tasks"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":" *"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":" * @author Sylvia"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":" * @version 0.1"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"public class Bob {"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"    private Storage storage;"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"    private TaskList tasks;"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"    private Ui ui;"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"     * Constructor for Bob"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"     * @param filePath This is the path of the file that stores the list"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"     *                 of tasks from the current working directory."},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"    public Bob(String filePath) {"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"        ui \u003d new Ui();"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"            tasks \u003d storage.load();"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"        } catch (BobException e) {"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"            ui.showLoadingError();"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"    public TaskList getTasks() {"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"        return this.tasks;"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"    public Storage getStorage() {"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"        return this.storage;"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"    public String getResponse(String input) {"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"        return ui.respondToCommand(input, tasks, storage);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":2,"sylviaokt":44}},{"path":"src/main/java/bob/processor/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.processor;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"import java.util.regex.PatternSyntaxException;"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"import bob.BobException;"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Deadline;"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Event;"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Task;"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Todo;"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":" * Makes sense of the user command"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"public class Parser {"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"     * Returns a valid integer given a user\u0027s input"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"     * @param userInput User\u0027s full input"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"     * @return An integer that is the index of the tasks which the user is done with or wants to remove"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"     * @throws BobException if no integer was indicated or integer was invalid"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"    public int parseNumber(String userInput) throws BobException {"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"        int number;"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"            String indexString \u003d userInput.split(\" \")[1];"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"            number \u003d Integer.parseInt(indexString);"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"        } catch (PatternSyntaxException e) {"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"            throw new BobException(\"Please try again with a spacing before the number\");"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"            throw new BobException(\"Remember to specify which task you are done with \""},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"                    + \"using a valid number\", e);"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"            throw new BobException(\"Invalid format, please try again using numbers only.\", e);"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"        return number;"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"     * Returns a string representing the task name given the user\u0027s input"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"     * @param userInput User\u0027s full input"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"     * @return A string representing the task name"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"    public String parseName(String userInput) throws BobException {"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"            int startIndex \u003d userInput.indexOf(\" \") + 1;"},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"            int endIndex \u003d userInput.indexOf(\"/\");"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"            String name \u003d \"\";"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"            System.out.println(userInput + \" \" + startIndex + \" \" + endIndex);"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"            if (startIndex \u003d\u003d 0) {"},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"                throw new BobException(\"No name detected. Please try again.\");"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":"            if (endIndex \u003d\u003d -1) {"},{"lineNumber":60,"author":{"gitId":"sylviaokt"},"content":"                name \u003d userInput.substring(startIndex);"},{"lineNumber":61,"author":{"gitId":"sylviaokt"},"content":"            } else {"},{"lineNumber":62,"author":{"gitId":"sylviaokt"},"content":"                name \u003d userInput.substring(startIndex, endIndex - 1);"},{"lineNumber":63,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"sylviaokt"},"content":"            return name;"},{"lineNumber":65,"author":{"gitId":"sylviaokt"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":66,"author":{"gitId":"sylviaokt"},"content":"            throw new BobException(\"No name detected. Please try again.\", e);"},{"lineNumber":67,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":70,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"sylviaokt"},"content":"     * Returns the date and time of the task given the user\u0027s input"},{"lineNumber":72,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"sylviaokt"},"content":"     * @param userInput User\u0027s full input"},{"lineNumber":74,"author":{"gitId":"sylviaokt"},"content":"     * @return A LocalDateTime object that corresponds to the user input"},{"lineNumber":75,"author":{"gitId":"sylviaokt"},"content":"     * @throws BobException if user input do not include date or time, or"},{"lineNumber":76,"author":{"gitId":"sylviaokt"},"content":"     * invalid format of date and time given"},{"lineNumber":77,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"sylviaokt"},"content":"    public LocalDateTime parseDateTime(String userInput, String taskType) throws BobException {"},{"lineNumber":79,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":80,"author":{"gitId":"sylviaokt"},"content":"            String dateTimeIndicator \u003d \"\";"},{"lineNumber":81,"author":{"gitId":"sylviaokt"},"content":"            if (taskType.equals(\"event\")) {"},{"lineNumber":82,"author":{"gitId":"sylviaokt"},"content":"                dateTimeIndicator \u003d \"/at: \";"},{"lineNumber":83,"author":{"gitId":"sylviaokt"},"content":"            } else if (taskType.equals(\"deadline\")) {"},{"lineNumber":84,"author":{"gitId":"sylviaokt"},"content":"                dateTimeIndicator \u003d \"/by: \";"},{"lineNumber":85,"author":{"gitId":"sylviaokt"},"content":"            } else if (taskType.equals(\"remind\")) {"},{"lineNumber":86,"author":{"gitId":"sylviaokt"},"content":"                dateTimeIndicator \u003d \"/on: \";"},{"lineNumber":87,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"sylviaokt"},"content":"            String[] taskDetails \u003d userInput.split(dateTimeIndicator, 2);"},{"lineNumber":89,"author":{"gitId":"sylviaokt"},"content":"            String dateTimeString \u003d taskDetails[1];"},{"lineNumber":90,"author":{"gitId":"sylviaokt"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":91,"author":{"gitId":"sylviaokt"},"content":"            return LocalDateTime.parse(dateTimeString, dateFormatter);"},{"lineNumber":92,"author":{"gitId":"sylviaokt"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":93,"author":{"gitId":"sylviaokt"},"content":"            throw new BobException(\"The description of an event/deadline includes date and time.\", e);"},{"lineNumber":94,"author":{"gitId":"sylviaokt"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":95,"author":{"gitId":"sylviaokt"},"content":"            throw new BobException(\"Please enter the date and time in the proper format: yyyy-mm-dd hhmm\", e);"},{"lineNumber":96,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":99,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"sylviaokt"},"content":"     * Parse a line and returns the LocalDateTime of the reminder."},{"lineNumber":101,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"sylviaokt"},"content":"     * @param fileLine a String from the hard disk."},{"lineNumber":103,"author":{"gitId":"sylviaokt"},"content":"     * @return a LocalDateTime object representing the time of reminder."},{"lineNumber":104,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"sylviaokt"},"content":"    public LocalDateTime parseReminderDateTime(String fileLine) {"},{"lineNumber":106,"author":{"gitId":"sylviaokt"},"content":"        String[] reminderDetails \u003d fileLine.split(\"R: \", 0);"},{"lineNumber":107,"author":{"gitId":"sylviaokt"},"content":"        if (reminderDetails.length \u003e 1) {"},{"lineNumber":108,"author":{"gitId":"sylviaokt"},"content":"            String reminderDateTimeString \u003d reminderDetails[1];"},{"lineNumber":109,"author":{"gitId":"sylviaokt"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\");"},{"lineNumber":110,"author":{"gitId":"sylviaokt"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(reminderDateTimeString, dateFormatter);"},{"lineNumber":111,"author":{"gitId":"sylviaokt"},"content":"            return dateTime;"},{"lineNumber":112,"author":{"gitId":"sylviaokt"},"content":"        } else {"},{"lineNumber":113,"author":{"gitId":"sylviaokt"},"content":"            return null;"},{"lineNumber":114,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":116,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"sylviaokt"},"content":"     * Returns a Task from a file line string."},{"lineNumber":119,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":120,"author":{"gitId":"sylviaokt"},"content":"     * @param fileLine The file line to parse."},{"lineNumber":121,"author":{"gitId":"sylviaokt"},"content":"     * @return The parsed Task."},{"lineNumber":122,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"sylviaokt"},"content":"    public Task parseLine(String fileLine) {"},{"lineNumber":124,"author":{"gitId":"sylviaokt"},"content":"        String[] nextTaskDetails \u003d fileLine.split(\" \\\\| \", 0);"},{"lineNumber":125,"author":{"gitId":"sylviaokt"},"content":"        String taskType \u003d nextTaskDetails[0];"},{"lineNumber":126,"author":{"gitId":"sylviaokt"},"content":"        String status \u003d nextTaskDetails[1];"},{"lineNumber":127,"author":{"gitId":"sylviaokt"},"content":"        String taskName \u003d nextTaskDetails[2];"},{"lineNumber":128,"author":{"gitId":"sylviaokt"},"content":"        boolean done \u003d false;"},{"lineNumber":129,"author":{"gitId":"sylviaokt"},"content":"        if (status.equals(\"1\")) {"},{"lineNumber":130,"author":{"gitId":"sylviaokt"},"content":"            done \u003d true;"},{"lineNumber":131,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"sylviaokt"},"content":"        if (taskType.equals(\"T\")) {"},{"lineNumber":133,"author":{"gitId":"sylviaokt"},"content":"            return new Todo(taskName, done);"},{"lineNumber":134,"author":{"gitId":"sylviaokt"},"content":"        } else {"},{"lineNumber":135,"author":{"gitId":"sylviaokt"},"content":"            String dateTimeString \u003d nextTaskDetails[3].split(\" R: \")[0];"},{"lineNumber":136,"author":{"gitId":"sylviaokt"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\");"},{"lineNumber":137,"author":{"gitId":"sylviaokt"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString, dateFormatter);"},{"lineNumber":138,"author":{"gitId":"sylviaokt"},"content":"            LocalDate date \u003d dateTime.toLocalDate();"},{"lineNumber":139,"author":{"gitId":"sylviaokt"},"content":"            LocalTime time \u003d dateTime.toLocalTime();"},{"lineNumber":140,"author":{"gitId":"sylviaokt"},"content":"            if (taskType.equals(\"E\")) {"},{"lineNumber":141,"author":{"gitId":"sylviaokt"},"content":"                return new Event(taskName, done, date, time);"},{"lineNumber":142,"author":{"gitId":"sylviaokt"},"content":"            } else {"},{"lineNumber":143,"author":{"gitId":"sylviaokt"},"content":"                assert taskType.equals(\"D\");"},{"lineNumber":144,"author":{"gitId":"sylviaokt"},"content":"                return new Deadline(taskName, done, date, time);"},{"lineNumber":145,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":146,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":148}},{"path":"src/main/java/bob/processor/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.processor;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"import bob.BobException;"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Task;"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"import bob.task.TaskList;"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":" * Stores the list of tasks, and is responsible for"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":" * loading and changing the list of tasks in the hard disk"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"public class Storage {"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"    private final String filePath;"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"    public Storage(String filePath) {"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"     * Loads the list of tasks from the hard disk into Bob"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"     * @return An ArrayList containing all the tasks saved in hard disk"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"     * @throws BobException if the file cannot be found in the hard disk"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"    public TaskList load() throws BobException {"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"        File tasksFile \u003d loadFile();"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"        return readFile(tasksFile);"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"     * Returns a File in the specified directory."},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"     * @return The File that stores the list of tasks in the hard disk."},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"     * @throws BobException if the file is unable to be created"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"    public File loadFile() throws BobException {"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"        String currDirectory \u003d System.getProperty(\"user.dir\");"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(currDirectory, \"data\");"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"        File tasksFile \u003d new File(filePath);"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"            if (!java.nio.file.Files.exists(path)) {"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"                java.nio.file.Files.createDirectory(path);"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"            if (!tasksFile.exists()) {"},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"                tasksFile.createNewFile();"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"            return tasksFile;"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"        } catch (IOException e) {"},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"            throw new BobException(\"Unable to create file.\", e);"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":61,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"sylviaokt"},"content":"     * Load the data in the file into an ArrayList."},{"lineNumber":63,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"sylviaokt"},"content":"     * @param tasksFile  The file to be read."},{"lineNumber":65,"author":{"gitId":"sylviaokt"},"content":"     * @return An ArrayList with the tasks loaded inside."},{"lineNumber":66,"author":{"gitId":"sylviaokt"},"content":"     * @throws BobException if no such file is found."},{"lineNumber":67,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"sylviaokt"},"content":"    public TaskList readFile(File tasksFile) throws BobException {"},{"lineNumber":69,"author":{"gitId":"sylviaokt"},"content":"        TaskList listOfTasks \u003d new TaskList();"},{"lineNumber":70,"author":{"gitId":"sylviaokt"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":71,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":72,"author":{"gitId":"sylviaokt"},"content":"            Scanner fileReader \u003d new Scanner(tasksFile);"},{"lineNumber":73,"author":{"gitId":"sylviaokt"},"content":"            while (fileReader.hasNextLine()) {"},{"lineNumber":74,"author":{"gitId":"sylviaokt"},"content":"                String nextLine \u003d fileReader.nextLine();"},{"lineNumber":75,"author":{"gitId":"sylviaokt"},"content":"                Task nextTask \u003d parser.parseLine(nextLine);"},{"lineNumber":76,"author":{"gitId":"sylviaokt"},"content":"                listOfTasks.getTaskList().add(nextTask);"},{"lineNumber":77,"author":{"gitId":"sylviaokt"},"content":"                LocalDateTime reminderDateTime \u003d parser.parseReminderDateTime(nextLine);"},{"lineNumber":78,"author":{"gitId":"sylviaokt"},"content":"                if (reminderDateTime !\u003d null \u0026\u0026 reminderDateTime.isAfter(LocalDateTime.now())) {"},{"lineNumber":79,"author":{"gitId":"sylviaokt"},"content":"                    listOfTasks.addReminder(reminderDateTime, nextTask);"},{"lineNumber":80,"author":{"gitId":"sylviaokt"},"content":"                    nextTask.addReminder(reminderDateTime);"},{"lineNumber":81,"author":{"gitId":"sylviaokt"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"sylviaokt"},"content":"            rewrite(listOfTasks);"},{"lineNumber":84,"author":{"gitId":"sylviaokt"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":85,"author":{"gitId":"sylviaokt"},"content":"            throw new BobException(\"No suitable file found.\", e);"},{"lineNumber":86,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"sylviaokt"},"content":"        return listOfTasks;"},{"lineNumber":88,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":90,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"sylviaokt"},"content":"     * Save the new Task in the hard disk"},{"lineNumber":92,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"sylviaokt"},"content":"     * @param task new Task to be saved"},{"lineNumber":94,"author":{"gitId":"sylviaokt"},"content":"     * @throws BobException if the named file exists but is a directory rather"},{"lineNumber":95,"author":{"gitId":"sylviaokt"},"content":"     * than a regular file, does not exist but cannot be created, or cannot"},{"lineNumber":96,"author":{"gitId":"sylviaokt"},"content":"     * be opened for any other reason"},{"lineNumber":97,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"sylviaokt"},"content":"    public void appendTask(Task task) throws BobException {"},{"lineNumber":99,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":100,"author":{"gitId":"sylviaokt"},"content":"            FileWriter fw \u003d new FileWriter(\"data/tasks.txt\", true);"},{"lineNumber":101,"author":{"gitId":"sylviaokt"},"content":"            String done \u003d task.getDone() ? \"1\" : \"0\";"},{"lineNumber":102,"author":{"gitId":"sylviaokt"},"content":"            String type \u003d task.getType();"},{"lineNumber":103,"author":{"gitId":"sylviaokt"},"content":"            String name \u003d task.getName();"},{"lineNumber":104,"author":{"gitId":"sylviaokt"},"content":"            LocalDateTime reminderDateTime \u003d task.getReminderDateTime();"},{"lineNumber":105,"author":{"gitId":"sylviaokt"},"content":"            LocalDateTime dateTime \u003d task.getDateTime();"},{"lineNumber":106,"author":{"gitId":"sylviaokt"},"content":"            String dateTimeString \u003d \"\";"},{"lineNumber":107,"author":{"gitId":"sylviaokt"},"content":"            String reminderString \u003d \"\";"},{"lineNumber":108,"author":{"gitId":"sylviaokt"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\");"},{"lineNumber":109,"author":{"gitId":"sylviaokt"},"content":"            if (dateTime !\u003d null) {"},{"lineNumber":110,"author":{"gitId":"sylviaokt"},"content":"                dateTimeString \u003d \" | \" + dateTime.format(dateFormatter);"},{"lineNumber":111,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"sylviaokt"},"content":"            if (reminderDateTime !\u003d null) {"},{"lineNumber":113,"author":{"gitId":"sylviaokt"},"content":"                reminderString \u003d \" R: \" + reminderDateTime.format(dateFormatter);"},{"lineNumber":114,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"sylviaokt"},"content":"            fw.write(type + \" | \" + done + \" | \" + name"},{"lineNumber":116,"author":{"gitId":"sylviaokt"},"content":"                    + dateTimeString + reminderString + System.lineSeparator());"},{"lineNumber":117,"author":{"gitId":"sylviaokt"},"content":"            fw.close();"},{"lineNumber":118,"author":{"gitId":"sylviaokt"},"content":"        } catch (IOException e) {"},{"lineNumber":119,"author":{"gitId":"sylviaokt"},"content":"            throw new BobException(\"File cannot be found.\", e);"},{"lineNumber":120,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":123,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"sylviaokt"},"content":"     * Update changes in the hard disk"},{"lineNumber":125,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":126,"author":{"gitId":"sylviaokt"},"content":"     * @param task The TaskList to be updated"},{"lineNumber":127,"author":{"gitId":"sylviaokt"},"content":"     * @throws BobException if the named file exists but is a directory rather"},{"lineNumber":128,"author":{"gitId":"sylviaokt"},"content":"     * than a regular file, does not exist but cannot be created, or cannot"},{"lineNumber":129,"author":{"gitId":"sylviaokt"},"content":"     * be opened for any other reason"},{"lineNumber":130,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"sylviaokt"},"content":"    public void rewrite(TaskList task) throws BobException {"},{"lineNumber":132,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":133,"author":{"gitId":"sylviaokt"},"content":"            FileWriter fw \u003d new FileWriter(\"data/tasks.txt\");"},{"lineNumber":134,"author":{"gitId":"sylviaokt"},"content":"            for (Task nextTask : task.getTaskList()) {"},{"lineNumber":135,"author":{"gitId":"sylviaokt"},"content":"                appendTask(nextTask);"},{"lineNumber":136,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":137,"author":{"gitId":"sylviaokt"},"content":"            fw.close();"},{"lineNumber":138,"author":{"gitId":"sylviaokt"},"content":"        } catch (IOException e) {"},{"lineNumber":139,"author":{"gitId":"sylviaokt"},"content":"            throw new BobException(\"File cannot be opened.\", e);"},{"lineNumber":140,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":142}},{"path":"src/main/java/bob/processor/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.processor;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import bob.command.Command;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import bob.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"     * Returns an error message when the file containing the list of tasks"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"     * cannot be found"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"    public String showLoadingError() {"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"        return \"There was an error in loading the file as it could not be found.\";"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"     * Provide relevant responses to user and accurate actions according to"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"     * user\u0027s command"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"     * @param userInput User\u0027s command"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"     * @param taskList The list of tasks user has"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"     * @param storage The storage containing the saved list of task"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"     * @return A boolean value indicating whether to continue taking in commands or not"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"    public String respondToCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"        String[] wordsInInput \u003d userInput.split(\" \", 2);"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"        String command \u003d wordsInInput[0].toLowerCase();"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"        switch (command) {"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"        case \"help\":"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"            return Command.HELP.executeCommand(userInput, taskList, storage);"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"        case \"remind\":"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"            return Command.REMIND.executeCommand(userInput, taskList, storage);"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"        case \"bye\":"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"            return Command.BYE.executeCommand(userInput, taskList, storage);"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"        case \"list\":"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"            return Command.LIST.executeCommand(userInput, taskList, storage);"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"        case \"find\":"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"            return Command.FIND.executeCommand(userInput, taskList, storage);"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"        case \"done\":"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"            return Command.DONE.executeCommand(userInput, taskList, storage);"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"        case \"delete\":"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"            return Command.DELETE.executeCommand(userInput, taskList, storage);"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"        case \"todo\":"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"            return Command.TODO.executeCommand(userInput, taskList, storage);"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"        case \"event\":"},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"            return Command.EVENT.executeCommand(userInput, taskList, storage);"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"        case \"deadline\":"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"            return Command.DEADLINE.executeCommand(userInput, taskList, storage);"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"        default:"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"            return Command.INVALID.executeCommand(userInput, taskList, storage);"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":54}},{"path":"src/main/java/bob/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.task;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":" * Represents a deadline task"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"public class Deadline extends Task {"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"    private final LocalDate deadline;"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"    private final LocalTime time;"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of a deadline"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"     * @param name Name of the deadline"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"     * @param deadline The deadline of the task"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"     * @param time The due time of the task"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"    public Deadline(String name, LocalDate deadline, LocalTime time) {"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"        super(name);"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"        this.time \u003d time;"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of a deadline"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"     * @param name Name of the deadline"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"     * @param isDone Status of the task"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"     * @param deadline The deadline of the task"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"     * @param time The due time of the task"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"    public Deadline(String name, boolean isDone, LocalDate deadline, LocalTime time) {"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"        super(name, isDone);"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"        this.time \u003d time;"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"    public LocalDate getDeadline() {"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"        return this.deadline;"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"    public LocalTime getTime() {"},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"        return this.time;"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"    public LocalDateTime getDateTime() {"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"        return LocalDateTime.of(deadline, time);"},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"    public String getType() {"},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"        return \"D\";"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":60,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"sylviaokt"},"content":"     * Prints out the details of the Deadline, including the name, the due date, and due time."},{"lineNumber":62,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"sylviaokt"},"content":"     * @return A string representing the deadline"},{"lineNumber":64,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"sylviaokt"},"content":"    public String toString() {"},{"lineNumber":67,"author":{"gitId":"sylviaokt"},"content":"        String head \u003d \"[D][ ] \";"},{"lineNumber":68,"author":{"gitId":"sylviaokt"},"content":"        if (this.isDone) {"},{"lineNumber":69,"author":{"gitId":"sylviaokt"},"content":"            head \u003d \"[D][X] \";"},{"lineNumber":70,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"sylviaokt"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"},{"lineNumber":72,"author":{"gitId":"sylviaokt"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");"},{"lineNumber":73,"author":{"gitId":"sylviaokt"},"content":"        return head + this.name + \" (by: \" + this.deadline.format(dateFormatter)"},{"lineNumber":74,"author":{"gitId":"sylviaokt"},"content":"                + \" \" + this.time.format(timeFormatter) + \")\";"},{"lineNumber":75,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":76}},{"path":"src/main/java/bob/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.task;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":" * Represents an event"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"public class Event extends Task {"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"    private final LocalDate date;"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"    private final LocalTime time;"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of an event"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"     * @param name Name of the event"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"     * @param date Date of the event"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"     * @param time Time of the event"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"    public Event(String name, LocalDate date, LocalTime time) {"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"        super(name);"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"        this.date \u003d date;"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"        this.time \u003d time;"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of an event"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"     * @param name Name of the event"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"     * @param isDone Status of the Event"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"     * @param date Date of the event"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"     * @param time Time of the event"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"    public Event(String name, boolean isDone, LocalDate date, LocalTime time) {"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"        super(name, isDone);"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"        this.date \u003d date;"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"        this.time \u003d time;"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"    public LocalDate getDate() {"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"        return this.date;"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"    public LocalTime getTime() {"},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"        return this.time;"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"    public LocalDateTime getDateTime() {"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"        return LocalDateTime.of(date, time);"},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"    public String getType() {"},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"        return \"E\";"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":60,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"sylviaokt"},"content":"     * Prints the details of the event, including the name, time, and date"},{"lineNumber":62,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"sylviaokt"},"content":"     * @return A string representing the event"},{"lineNumber":64,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"sylviaokt"},"content":"    public String toString() {"},{"lineNumber":67,"author":{"gitId":"sylviaokt"},"content":"        String head \u003d \"[E][ ] \";"},{"lineNumber":68,"author":{"gitId":"sylviaokt"},"content":"        if (this.isDone) {"},{"lineNumber":69,"author":{"gitId":"sylviaokt"},"content":"            head \u003d \"[E][X] \";"},{"lineNumber":70,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"sylviaokt"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"},{"lineNumber":72,"author":{"gitId":"sylviaokt"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");"},{"lineNumber":73,"author":{"gitId":"sylviaokt"},"content":"        return head + this.name + \" (by: \" + this.date.format(dateFormatter)"},{"lineNumber":74,"author":{"gitId":"sylviaokt"},"content":"                + \" \" + this.time.format(timeFormatter) + \")\";"},{"lineNumber":75,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":76}},{"path":"src/main/java/bob/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.task;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":" * Represents a task"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"    protected String name;"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"    protected boolean isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"    protected LocalDateTime reminderDateTime \u003d null;"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of a task"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"     * @param name Name of task"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"    public Task(String name) {"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"        this.name \u003d name;"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of a task"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"     * @param name Name of task"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"     * @param isDone Status of task"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"    public Task(String name, boolean isDone) {"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"        this.name \u003d name;"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"    public String getName() {"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"        return this.name;"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"    public boolean getDone() {"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"        return this.isDone;"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"    public String getType() {"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"        return \"Task\";"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"    public LocalDateTime getDateTime() {"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"        return null;"},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"    public LocalDateTime getReminderDateTime() {"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"        return this.reminderDateTime;"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"    public void addReminder(LocalDateTime reminderDateTime) {"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"        this.reminderDateTime \u003d reminderDateTime;"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"    public void removeReminder() {"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"        this.reminderDateTime \u003d null;"},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":61,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"sylviaokt"},"content":"     * Updates the status of the task"},{"lineNumber":63,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"sylviaokt"},"content":"     * @param isDone The boolean value representing the status of the task"},{"lineNumber":65,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"sylviaokt"},"content":"    public void setStatus(boolean isDone) {"},{"lineNumber":67,"author":{"gitId":"sylviaokt"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":68,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":70,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"sylviaokt"},"content":"     * Prints the details of a task, including the status and name"},{"lineNumber":72,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"sylviaokt"},"content":"     * @return A string representing a task"},{"lineNumber":74,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"sylviaokt"},"content":"    public String toString() {"},{"lineNumber":77,"author":{"gitId":"sylviaokt"},"content":"        if (this.isDone) {"},{"lineNumber":78,"author":{"gitId":"sylviaokt"},"content":"            return \"[X] \" + this.name;"},{"lineNumber":79,"author":{"gitId":"sylviaokt"},"content":"        } else {"},{"lineNumber":80,"author":{"gitId":"sylviaokt"},"content":"            return \"[ ] \" + this.name;"},{"lineNumber":81,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":83}},{"path":"src/main/java/bob/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.task;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"import java.util.Comparator;"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"import java.util.LinkedHashMap;"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"import java.util.Map;"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"import bob.BobException;"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":" * Represents a list of task"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"public class TaskList {"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"    private LinkedHashMap\u003cLocalDateTime, ArrayList\u003cTask\u003e\u003e reminders;"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"    private Task addedReminder;"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of TaskList"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"    public TaskList() {"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"        this.reminders \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"     * Sort reminders according to their time."},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"    public void sortReminders() {"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"        LinkedHashMap\u003cLocalDateTime, ArrayList\u003cTask\u003e\u003e duplicateList \u003d new LinkedHashMap\u003c\u003e(this.reminders);"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"        List\u003cMap.Entry\u003cLocalDateTime, ArrayList\u003cTask\u003e\u003e\u003e tasksToRemind \u003d new ArrayList\u003c\u003e(duplicateList.entrySet());"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"        this.reminders.clear();"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"        tasksToRemind.sort(new Comparator\u003cMap.Entry\u003cLocalDateTime, ArrayList\u003cTask\u003e\u003e\u003e() {"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"            @Override"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"            public int compare(Map.Entry\u003cLocalDateTime, ArrayList\u003cTask\u003e\u003e t1,"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"                               Map.Entry\u003cLocalDateTime, ArrayList\u003cTask\u003e\u003e t2) {"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"                return t1.getKey().compareTo(t2.getKey());"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"        });"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"        for (Map.Entry\u003cLocalDateTime, ArrayList\u003cTask\u003e\u003e entry : tasksToRemind) {"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"            this.reminders.put(entry.getKey(), entry.getValue());"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"     * Add a new reminder to a Task."},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"     * @param remindTime The time of the reminder."},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"     * @param task The task to be reminded."},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"    public void addReminder(LocalDateTime remindTime, Task task) {"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"        if (this.reminders.containsKey(remindTime)) {"},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"            this.reminders.get(remindTime).add(task);"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":"            ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":60,"author":{"gitId":"sylviaokt"},"content":"            listOfTasks.add(task);"},{"lineNumber":61,"author":{"gitId":"sylviaokt"},"content":"            this.reminders.putIfAbsent(remindTime, listOfTasks);"},{"lineNumber":62,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"sylviaokt"},"content":"        this.addedReminder \u003d task;"},{"lineNumber":64,"author":{"gitId":"sylviaokt"},"content":"        sortReminders();"},{"lineNumber":65,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":67,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"sylviaokt"},"content":"     * Returns the latest task with added reminder."},{"lineNumber":69,"author":{"gitId":"sylviaokt"},"content":"     * @return the latest Task object with a reminder added."},{"lineNumber":70,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"sylviaokt"},"content":"    public Task getTaskWithReminder() {"},{"lineNumber":72,"author":{"gitId":"sylviaokt"},"content":"        return this.addedReminder;"},{"lineNumber":73,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":75,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"sylviaokt"},"content":"     * Removes a reminder from a Task."},{"lineNumber":77,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"sylviaokt"},"content":"     * @param taskToBeRemoved The Task whose reminder is to be removed."},{"lineNumber":79,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"sylviaokt"},"content":"    public void removeReminder(Task taskToBeRemoved) {"},{"lineNumber":81,"author":{"gitId":"sylviaokt"},"content":"        for (ArrayList\u003cTask\u003e listOfTasks : this.reminders.values()) {"},{"lineNumber":82,"author":{"gitId":"sylviaokt"},"content":"            listOfTasks.removeIf(task -\u003e task.equals(taskToBeRemoved));"},{"lineNumber":83,"author":{"gitId":"sylviaokt"},"content":"            if (listOfTasks.size() \u003d\u003d 0) {"},{"lineNumber":84,"author":{"gitId":"sylviaokt"},"content":"                this.reminders.remove(taskToBeRemoved.reminderDateTime);"},{"lineNumber":85,"author":{"gitId":"sylviaokt"},"content":"                break;"},{"lineNumber":86,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":90,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"sylviaokt"},"content":"     * Removes a reminder from a Task."},{"lineNumber":92,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"sylviaokt"},"content":"     * @param remindTime The exact date and time of the reminder to be removed."},{"lineNumber":94,"author":{"gitId":"sylviaokt"},"content":"     * @param task The Task whose reminder is to be removed."},{"lineNumber":95,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"sylviaokt"},"content":"    public void removeReminder(LocalDateTime remindTime, Task task) {"},{"lineNumber":97,"author":{"gitId":"sylviaokt"},"content":"        if (this.reminders.containsKey(remindTime)) {"},{"lineNumber":98,"author":{"gitId":"sylviaokt"},"content":"            this.reminders.get(remindTime).remove(task);"},{"lineNumber":99,"author":{"gitId":"sylviaokt"},"content":"            if (this.reminders.get(remindTime).size() \u003d\u003d 0) {"},{"lineNumber":100,"author":{"gitId":"sylviaokt"},"content":"                this.reminders.remove(remindTime);"},{"lineNumber":101,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":105,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"sylviaokt"},"content":"     * Update the status of one of the tasks in the list."},{"lineNumber":107,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"sylviaokt"},"content":"     * @param index The index of the task to be updated."},{"lineNumber":109,"author":{"gitId":"sylviaokt"},"content":"     * @param isDone The status of the task to be updated."},{"lineNumber":110,"author":{"gitId":"sylviaokt"},"content":"     * @return An updated Task object containing the changed task."},{"lineNumber":111,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"sylviaokt"},"content":"    public Task changeStatus(int index, boolean isDone) throws BobException {"},{"lineNumber":113,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":114,"author":{"gitId":"sylviaokt"},"content":"            Task updatedTask \u003d this.taskList.get(index);"},{"lineNumber":115,"author":{"gitId":"sylviaokt"},"content":"            updatedTask.setStatus(isDone);"},{"lineNumber":116,"author":{"gitId":"sylviaokt"},"content":"            if (isDone) {"},{"lineNumber":117,"author":{"gitId":"sylviaokt"},"content":"                removeReminder(updatedTask);"},{"lineNumber":118,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"sylviaokt"},"content":"            return updatedTask;"},{"lineNumber":120,"author":{"gitId":"sylviaokt"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":121,"author":{"gitId":"sylviaokt"},"content":"            throw new BobException(\"Please try again with a valid task index!\", e);"},{"lineNumber":122,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":125,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"sylviaokt"},"content":"     * Returns the list of tasks."},{"lineNumber":127,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":128,"author":{"gitId":"sylviaokt"},"content":"     * @return ArrayList of the tasks."},{"lineNumber":129,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"sylviaokt"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":131,"author":{"gitId":"sylviaokt"},"content":"        return this.taskList;"},{"lineNumber":132,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":134,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"sylviaokt"},"content":"     * Returns the total number of tasks in the list."},{"lineNumber":136,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":137,"author":{"gitId":"sylviaokt"},"content":"     * @return The size of the ArrayList."},{"lineNumber":138,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"sylviaokt"},"content":"    public int getSize() {"},{"lineNumber":140,"author":{"gitId":"sylviaokt"},"content":"        return this.taskList.size();"},{"lineNumber":141,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":143,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"sylviaokt"},"content":"     * Adds a new task."},{"lineNumber":145,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":146,"author":{"gitId":"sylviaokt"},"content":"     * @param task The new task to be added."},{"lineNumber":147,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":148,"author":{"gitId":"sylviaokt"},"content":"    public void addTask(Task task) {"},{"lineNumber":149,"author":{"gitId":"sylviaokt"},"content":"        this.taskList.add(task);"},{"lineNumber":150,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":152,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"sylviaokt"},"content":"     * Adds a todo task to the list."},{"lineNumber":154,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":155,"author":{"gitId":"sylviaokt"},"content":"     * @param task Todo task to be added."},{"lineNumber":156,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"sylviaokt"},"content":"    public void addToDo(Todo task) {"},{"lineNumber":158,"author":{"gitId":"sylviaokt"},"content":"        taskList.add(task);"},{"lineNumber":159,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":161,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":162,"author":{"gitId":"sylviaokt"},"content":"     * Adds an event to the list."},{"lineNumber":163,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":164,"author":{"gitId":"sylviaokt"},"content":"     * @param task Event to be added."},{"lineNumber":165,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":166,"author":{"gitId":"sylviaokt"},"content":"    public void addEvent(Event task) {"},{"lineNumber":167,"author":{"gitId":"sylviaokt"},"content":"        taskList.add(task);"},{"lineNumber":168,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":170,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"sylviaokt"},"content":"     * Add a deadline to the list."},{"lineNumber":172,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":173,"author":{"gitId":"sylviaokt"},"content":"     * @param task The deadline to be added."},{"lineNumber":174,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":175,"author":{"gitId":"sylviaokt"},"content":"    public void addDeadline(Deadline task) {"},{"lineNumber":176,"author":{"gitId":"sylviaokt"},"content":"        taskList.add(task);"},{"lineNumber":177,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":179,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"sylviaokt"},"content":"     * Remove a task from the list."},{"lineNumber":181,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":182,"author":{"gitId":"sylviaokt"},"content":"     * @param index The index of the task to be removed."},{"lineNumber":183,"author":{"gitId":"sylviaokt"},"content":"     * @return The updated Task object with the task removed."},{"lineNumber":184,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"sylviaokt"},"content":"    public Task removeTask(int index) {"},{"lineNumber":186,"author":{"gitId":"sylviaokt"},"content":"        Task task \u003d taskList.remove(index);"},{"lineNumber":187,"author":{"gitId":"sylviaokt"},"content":"        removeReminder(task);"},{"lineNumber":188,"author":{"gitId":"sylviaokt"},"content":"        return task;"},{"lineNumber":189,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":191,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":192,"author":{"gitId":"sylviaokt"},"content":"     * Prints the whole list of tasks."},{"lineNumber":193,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":194,"author":{"gitId":"sylviaokt"},"content":"     * @return A string representing the Task."},{"lineNumber":195,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":196,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":197,"author":{"gitId":"sylviaokt"},"content":"    public String toString() {"},{"lineNumber":198,"author":{"gitId":"sylviaokt"},"content":"        StringBuilder tasks \u003d new StringBuilder();"},{"lineNumber":199,"author":{"gitId":"sylviaokt"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":200,"author":{"gitId":"sylviaokt"},"content":"            int index \u003d i + 1;"},{"lineNumber":201,"author":{"gitId":"sylviaokt"},"content":"            tasks.append(index).append(\".\").append(taskList.get(i)).append(\"\\n\");"},{"lineNumber":202,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":203,"author":{"gitId":"sylviaokt"},"content":"        tasks.append(\"Upcoming reminders: \\n\");"},{"lineNumber":204,"author":{"gitId":"sylviaokt"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\");"},{"lineNumber":205,"author":{"gitId":"sylviaokt"},"content":"        for (Map.Entry\u003cLocalDateTime, ArrayList\u003cTask\u003e\u003e entry : this.reminders.entrySet()) {"},{"lineNumber":206,"author":{"gitId":"sylviaokt"},"content":"            tasks.append(entry.getKey().format(dateFormatter)).append(\": \")"},{"lineNumber":207,"author":{"gitId":"sylviaokt"},"content":"                    .append(entry.getValue()).append(\"\\n\");"},{"lineNumber":208,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":209,"author":{"gitId":"sylviaokt"},"content":"        return tasks.toString();"},{"lineNumber":210,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":211}},{"path":"src/main/java/bob/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.task;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":" * Represents Todo tasks"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of Todo tasks"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"     * @param name Name of the task"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"    public Todo(String name) {"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"        super(name);"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of Todo tasks"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"     * @param name Name of the task"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"     * @param isDone Status of the task"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"    public Todo(String name, boolean isDone) {"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"        super(name, isDone);"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"    public String getType() {"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"        return \"T\";"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"     * Prints out the details of Todo task, including the status and name"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"     * @return A string representing the Todo task"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"        if (this.isDone) {"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"            return \"[T][X] \" + this.name;"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"        } else {"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"            return \"[T][ ] \" + this.name;"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":45}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"sylviaokt":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bob.gui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"sylviaokt":19}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"import bob.BobException;"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"import bob.processor.Parser;"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"public class ParserTest {"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"    public void parseName_validName() throws BobException {"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"        String expected \u003d \"eat and sleep\";"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"        String parsedTodoName \u003d parser.parseName(\"todo eat and sleep\");"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"        assertEquals(expected, parsedTodoName);"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"        String parsedEventName \u003d parser.parseName(\"event eat and sleep /at: 2pm\");"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"        assertEquals(expected, parsedEventName);"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"        String parsedDeadlineName \u003d parser.parseName(\"deadline eat and sleep /by: 9pm\");"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"        assertEquals(expected, parsedDeadlineName);"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"    public void parseDateTime_eventDateTime_validDateTime() throws BobException {"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"        String userInput \u003d \"event eat and sleep /at: 2021-11-02 0200\";"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"        String taskType \u003d \"event\";"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\");"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"        String actualParsedDateTime \u003d parser.parseDateTime(userInput, taskType).format(dateFormatter);"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"        String expectedParsedDateTime \u003d \"02 Nov 2021 2:00 AM\";"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"        assertEquals(actualParsedDateTime, expectedParsedDateTime);"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"    public void parseDateTime_deadlineDateTime_validDateTime() throws BobException {"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"        String userInput \u003d \"deadline eat and sleep /by: 2021-11-02 2359\";"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"        String taskType \u003d \"deadline\";"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\");"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"        String actualParsedDateTime \u003d parser.parseDateTime(userInput, taskType).format(dateFormatter);"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"        String expectedParsedDateTime \u003d \"02 Nov 2021 11:59 PM\";"},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"        assertEquals(actualParsedDateTime, expectedParsedDateTime);"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"    public void parseDateTime_remindDateTime_validDateTime() throws BobException {"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"        String userInput \u003d \"remind 1 /on: 2021-04-13 1400\";"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"        String taskType \u003d \"remind\";"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\");"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"        String actualParsedDateTime \u003d parser.parseDateTime(userInput, taskType).format(dateFormatter);"},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"        String expectedParsedDateTime \u003d \"13 Apr 2021 2:00 PM\";"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"        assertEquals(actualParsedDateTime, expectedParsedDateTime);"},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":61,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":62,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":62}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import bob.BobException;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"import bob.command.Command;"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"import bob.processor.Storage;"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"import bob.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"public class UiTest {"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"    public void respondToCommand_validHelpCommand_correctResponse() throws BobException {"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"        String userInput \u003d \"help\";"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"        Storage storage \u003d new Storage(\"data/tasks.txt\");"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"        TaskList taskList;"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"            taskList \u003d storage.load();"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"        } catch (BobException e) {"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"        String expectedResponse \u003d \"You can add a new task using the following commands: \\n\""},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"                + \"todo NAME_OF_TASK\\n\""},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"                + \"event NAME_OF_EVENT /at: YYYY-MM-DD HHMM\\n\""},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"                + \"deadline NAME_OF_DEADLINE /by: YYYY-MM-DD HHMM\\n\""},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"                + \"\\nYou can see the whole list of tasks using: list\\n\""},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"                + \"\\nTo search for a specific task: find KEYWORDS\\n\""},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"                + \"\\nTo add a reminder for a task:\\n\""},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"                + \"remind INDEX /on: YYYY-MM-DD HHMM\\n\""},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"                + \"\\nTo mark a task as done: done INDEX\\n\""},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"                + \"\\nTo delete a task: delete INDEX\\n\""},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"                + \"\\nTo exit the app: bye\";"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"        String actualResponse \u003d Command.HELP.executeCommand(userInput, taskList, storage);"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"        assertEquals(expectedResponse, actualResponse);"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":37}},{"path":"text-ui-test/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"T | 0 | eat "},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":"T | 1 | at and sleep "},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"E | 1 | sleep [X] sleep (by: JANUARY 20 2021 1600"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"D | 0 | code FEBRUARY 10 2021 2pm"}],"authorContributionMap":{"sylviaokt":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"todo eat"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":"todoeat and sleep"},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"event sleep /at 2021-01-20 1600"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"deadline code /by 2021-02-10 2pm"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"list"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"done 3"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"list"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"bye"}],"authorContributionMap":{"sylviaokt":9}}]
