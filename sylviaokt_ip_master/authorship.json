[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"    mainClassName \u003d \"bob.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":45,"sylviaokt":16}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":"T | 0 | eat and sleep"},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"E | 0 | eat | 2020-03-02 2pm"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"T | 0 | eat"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"T | 0 | sleep"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"D | 0 | eat | 2020-02-02 2pm"}],"authorContributionMap":{"sylviaokt":6}},{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":" * Bob is a program that helps you keep track of tasks."},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":" *"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":" * @author Sylvia"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":" * @version 0.1"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"public class Bob  {"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"    private Storage storage;"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"    private TaskList tasks;"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"    private Ui ui;"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"     * Constructor for Duke."},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"     * @param filePath This is the path of the file that stores the list"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"     *                 of tasks from the current working directory."},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"    public Bob(String filePath) {"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"        ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"        } catch (DukeException e) {"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"            ui.showLoadingError();"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"     * Replace this stub with your completed method."},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"    public String getResponse(String input) {"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"        return ui.respondToCommand(input, tasks, storage);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":2,"sylviaokt":36}},{"path":"src/main/java/bob/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":" * Thrown to indicate an error in Duke"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"    public DukeException(String errorMessage, Throwable error) {"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"        super(errorMessage, error);"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":14}},{"path":"src/main/java/bob/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import bob.command.Command;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Deadline;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Event;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":" * Makes sense of the user command"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"public class Parser {"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"     * Indicate which command the user is giving"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"     * @param userInput User\u0027s input"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"     * @return The command user is giving"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"    public Command parseCommand(String[] userInput) {"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"        String command \u003d userInput[0].toLowerCase();"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"        if (command.equals(\"bye\")) {"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"            return Command.BYE;"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"        } else if (command.equals(\"list\")) {"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"            return Command.LIST;"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"        } else if (command.equals(\"done\")) {"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"            return Command.DONE;"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"        } else if (command.equals(\"todo\")) {"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"            return Command.TODO;"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"        } else if (command.equals(\"event\")) {"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"            return Command.EVENT;"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"        } else if (command.equals(\"deadline\")) {"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"            return Command.DEADLINE;"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"        } else if (command.equals(\"delete\")) {"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"            return Command.DELETE;"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"        } else if (command.equals(\"find\")) {"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"            return Command.FIND;"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"            return Command.INVALID;"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"     * Returns a valid integer given a user\u0027s input."},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"     * @param userInput User\u0027s full input"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"     * @param index The index at which the number is at"},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"     * @return An integer that is the index of the tasks which the user is done with or wants to remove."},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"     * @throws DukeException if no integer was indicated or integer was invalid."},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"    public int parseNumber(String userInput, int index) throws DukeException {"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"        int number;"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"            String indexString \u003d userInput.substring(index).strip();"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"            number \u003d Integer.parseInt(indexString);"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"            throw new DukeException(\"Remember to specify which task you are done with \""},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"                    + \"using a valid number\", e);"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":"            throw new DukeException(\"Invalid format, please try again using numbers only.\", e);"},{"lineNumber":60,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"sylviaokt"},"content":"        return number;"},{"lineNumber":62,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":64,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"sylviaokt"},"content":"     * Returns a string representing the task name given the user\u0027s input."},{"lineNumber":66,"author":{"gitId":"sylviaokt"},"content":"     * @param userInput User\u0027s full input"},{"lineNumber":67,"author":{"gitId":"sylviaokt"},"content":"     * @return A string representing the task name"},{"lineNumber":68,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"sylviaokt"},"content":"    public String parseName(String userInput) throws DukeException {"},{"lineNumber":70,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":71,"author":{"gitId":"sylviaokt"},"content":"            int startIndex \u003d userInput.indexOf(\" \") + 1;"},{"lineNumber":72,"author":{"gitId":"sylviaokt"},"content":"            int endIndex \u003d userInput.indexOf(\"/\");"},{"lineNumber":73,"author":{"gitId":"sylviaokt"},"content":"            String name \u003d \"\";"},{"lineNumber":74,"author":{"gitId":"sylviaokt"},"content":"            if (startIndex \u003d\u003d 0) {"},{"lineNumber":75,"author":{"gitId":"sylviaokt"},"content":"                throw new DukeException(\"No name detected. Please try again.\");"},{"lineNumber":76,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"sylviaokt"},"content":"            if (endIndex \u003d\u003d -1) {"},{"lineNumber":78,"author":{"gitId":"sylviaokt"},"content":"                name \u003d userInput.substring(startIndex);"},{"lineNumber":79,"author":{"gitId":"sylviaokt"},"content":"            } else {"},{"lineNumber":80,"author":{"gitId":"sylviaokt"},"content":"                name \u003d userInput.substring(startIndex, endIndex - 1);"},{"lineNumber":81,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"sylviaokt"},"content":"            return name;"},{"lineNumber":83,"author":{"gitId":"sylviaokt"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":84,"author":{"gitId":"sylviaokt"},"content":"            throw new DukeException(\"No name detected. Please try again.\", e);"},{"lineNumber":85,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":88,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"sylviaokt"},"content":"     * Returns an event given the user\u0027s input"},{"lineNumber":90,"author":{"gitId":"sylviaokt"},"content":"     * @param userInput User\u0027s full input"},{"lineNumber":91,"author":{"gitId":"sylviaokt"},"content":"     * @param timeIndex The index at which /at: starts"},{"lineNumber":92,"author":{"gitId":"sylviaokt"},"content":"     * @return An event that corresponds to the user input"},{"lineNumber":93,"author":{"gitId":"sylviaokt"},"content":"     * @throws DukeException if user input do not include date or time, or"},{"lineNumber":94,"author":{"gitId":"sylviaokt"},"content":"     * invalid format of date and time given"},{"lineNumber":95,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"sylviaokt"},"content":"    public Event parseEvent(String userInput, int timeIndex) throws DukeException {"},{"lineNumber":97,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":98,"author":{"gitId":"sylviaokt"},"content":"            String name \u003d userInput.substring(6, timeIndex - 1);"},{"lineNumber":99,"author":{"gitId":"sylviaokt"},"content":"            String dateTime \u003d userInput.substring(timeIndex + 5);"},{"lineNumber":100,"author":{"gitId":"sylviaokt"},"content":"            String dateString \u003d dateTime.substring(0, 10);"},{"lineNumber":101,"author":{"gitId":"sylviaokt"},"content":"            String timeString \u003d dateTime.substring(11);"},{"lineNumber":102,"author":{"gitId":"sylviaokt"},"content":"            LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":103,"author":{"gitId":"sylviaokt"},"content":"            return new Event(name, date, timeString);"},{"lineNumber":104,"author":{"gitId":"sylviaokt"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":105,"author":{"gitId":"sylviaokt"},"content":"            throw new DukeException(\"The description of an event includes date and time.\", e);"},{"lineNumber":106,"author":{"gitId":"sylviaokt"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":107,"author":{"gitId":"sylviaokt"},"content":"            throw new DukeException(\"Please enter the date in the proper format: yyyy-mm-dd\", e);"},{"lineNumber":108,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":111,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"sylviaokt"},"content":"     * Returns a deadline task given the user\u0027s input."},{"lineNumber":113,"author":{"gitId":"sylviaokt"},"content":"     * @param userInput User\u0027s full input"},{"lineNumber":114,"author":{"gitId":"sylviaokt"},"content":"     * @param timeIndex The index at which /by: starts"},{"lineNumber":115,"author":{"gitId":"sylviaokt"},"content":"     * @return A deadline task that corresponds to the user input"},{"lineNumber":116,"author":{"gitId":"sylviaokt"},"content":"     * @throws DukeException if user input do not include date or time, or"},{"lineNumber":117,"author":{"gitId":"sylviaokt"},"content":"     * invalid format of date and time given"},{"lineNumber":118,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"sylviaokt"},"content":"    public Deadline parseDeadline(String userInput, int timeIndex) throws DukeException {"},{"lineNumber":120,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":121,"author":{"gitId":"sylviaokt"},"content":"            String name \u003d userInput.substring(9, timeIndex - 1);"},{"lineNumber":122,"author":{"gitId":"sylviaokt"},"content":"            String dateTime \u003d userInput.substring(timeIndex + 5);"},{"lineNumber":123,"author":{"gitId":"sylviaokt"},"content":"            String dateString \u003d dateTime.substring(0, 10);"},{"lineNumber":124,"author":{"gitId":"sylviaokt"},"content":"            String timeString \u003d dateTime.substring(11);"},{"lineNumber":125,"author":{"gitId":"sylviaokt"},"content":"            LocalDate deadline \u003d LocalDate.parse(dateString);"},{"lineNumber":126,"author":{"gitId":"sylviaokt"},"content":"            return new Deadline(name, deadline, timeString);"},{"lineNumber":127,"author":{"gitId":"sylviaokt"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":128,"author":{"gitId":"sylviaokt"},"content":"            throw new DukeException(\"The description of a deadline includes date and time.\", e);"},{"lineNumber":129,"author":{"gitId":"sylviaokt"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":130,"author":{"gitId":"sylviaokt"},"content":"            throw new DukeException(\"Please enter the date in the proper format: yyyy-mm-dd\", e);"},{"lineNumber":131,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":133}},{"path":"src/main/java/bob/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Event;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Task;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Todo;"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalDate;"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"import java.util.Scanner;"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":" * Stores the list of tasks, and is responsible for"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":" * loading and changing the list of tasks in the hard disk."},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"public class Storage {"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"    private final String filePath;"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"    public Storage(String filePath) {"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"     * Loads the list of tasks from the hard disk into Duke."},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"     * @return An ArrayList containing all the tasks saved in hard disk"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"     * @throws DukeException if the file cannot be found in the hard disk"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"        String currDirectory \u003d System.getProperty(\"user.dir\");"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(currDirectory, \"data\");"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"        File tasksFile \u003d new File(filePath);"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"            if (!java.nio.file.Files.exists(path)) {"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"                java.nio.file.Files.createDirectory(path);"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"            if (!tasksFile.exists()) {"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"                tasksFile.createNewFile();"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"        } catch (IOException e) {"},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"            throw new DukeException(\"Unable to create file.\", e);"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"            Scanner readFile \u003d new Scanner(tasksFile);"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"            while (readFile.hasNextLine()) {"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"                String taskName;"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"                String nextTask \u003d readFile.nextLine();"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"                boolean done \u003d false;"},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"                if (nextTask.charAt(4) \u003d\u003d \u00271\u0027) {"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"                    done \u003d true;"},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"sylviaokt"},"content":"                if (nextTask.startsWith(\"T\")) {"},{"lineNumber":61,"author":{"gitId":"sylviaokt"},"content":"                    taskName \u003d nextTask.substring(8);"},{"lineNumber":62,"author":{"gitId":"sylviaokt"},"content":"                    taskList.add(new Todo(taskName, done));"},{"lineNumber":63,"author":{"gitId":"sylviaokt"},"content":"                } else {"},{"lineNumber":64,"author":{"gitId":"sylviaokt"},"content":"                    int index \u003d nextTask.lastIndexOf(\"|\");"},{"lineNumber":65,"author":{"gitId":"sylviaokt"},"content":"                    taskName \u003d nextTask.substring(8, index - 1);"},{"lineNumber":66,"author":{"gitId":"sylviaokt"},"content":"                    String dateTime \u003d nextTask.substring(index + 2);"},{"lineNumber":67,"author":{"gitId":"sylviaokt"},"content":"                    String dateString \u003d dateTime.substring(0, 11);"},{"lineNumber":68,"author":{"gitId":"sylviaokt"},"content":"                    DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":69,"author":{"gitId":"sylviaokt"},"content":"                    LocalDate date \u003d LocalDate.parse(dateString, dateFormatter);"},{"lineNumber":70,"author":{"gitId":"sylviaokt"},"content":"                    String time \u003d dateTime.substring(12);"},{"lineNumber":71,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":72,"author":{"gitId":"sylviaokt"},"content":"                    if (nextTask.startsWith(\"E\")) {"},{"lineNumber":73,"author":{"gitId":"sylviaokt"},"content":"                        taskList.add(new Event(taskName, done, date, time));"},{"lineNumber":74,"author":{"gitId":"sylviaokt"},"content":"                    } else if (nextTask.startsWith(\"D\")) {"},{"lineNumber":75,"author":{"gitId":"sylviaokt"},"content":"                        taskList.add(new Deadline(taskName, done, date, time));"},{"lineNumber":76,"author":{"gitId":"sylviaokt"},"content":"                    }"},{"lineNumber":77,"author":{"gitId":"sylviaokt"},"content":"                }"},{"lineNumber":78,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":79,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"sylviaokt"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":81,"author":{"gitId":"sylviaokt"},"content":"            throw new DukeException(\"No suitable file found.\", e);"},{"lineNumber":82,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"sylviaokt"},"content":"        return taskList;"},{"lineNumber":84,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":86,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"sylviaokt"},"content":"     * Save the Todo tasks in the hard disk"},{"lineNumber":88,"author":{"gitId":"sylviaokt"},"content":"     * @param task new Todo task to be saved"},{"lineNumber":89,"author":{"gitId":"sylviaokt"},"content":"     * @throws DukeException if the named file exists but is a directory rather"},{"lineNumber":90,"author":{"gitId":"sylviaokt"},"content":"     * than a regular file, does not exist but cannot be created, or cannot"},{"lineNumber":91,"author":{"gitId":"sylviaokt"},"content":"     * be opened for any other reason"},{"lineNumber":92,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"sylviaokt"},"content":"    public void appendToDo(Todo task) throws DukeException {"},{"lineNumber":94,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"sylviaokt"},"content":"            FileWriter fw \u003d new FileWriter(\"duke.txt\", true);"},{"lineNumber":96,"author":{"gitId":"sylviaokt"},"content":"            fw.write(\"T | 0 | \" + task.getName() + System.lineSeparator());"},{"lineNumber":97,"author":{"gitId":"sylviaokt"},"content":"            fw.close();"},{"lineNumber":98,"author":{"gitId":"sylviaokt"},"content":"        } catch (IOException e) {"},{"lineNumber":99,"author":{"gitId":"sylviaokt"},"content":"            throw new DukeException(\"File cannot be found.\", e);"},{"lineNumber":100,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":103,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"sylviaokt"},"content":"     * Save the Event in the hard disk"},{"lineNumber":105,"author":{"gitId":"sylviaokt"},"content":"     * @param task new Event to be saved"},{"lineNumber":106,"author":{"gitId":"sylviaokt"},"content":"     * @throws DukeException if the named file exists but is a directory rather"},{"lineNumber":107,"author":{"gitId":"sylviaokt"},"content":"     * than a regular file, does not exist but cannot be created, or cannot"},{"lineNumber":108,"author":{"gitId":"sylviaokt"},"content":"     * be opened for any other reason"},{"lineNumber":109,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"sylviaokt"},"content":"    public void appendEvent(Event task) throws DukeException {"},{"lineNumber":111,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":112,"author":{"gitId":"sylviaokt"},"content":"            FileWriter fw \u003d new FileWriter(\"duke.txt\", true);"},{"lineNumber":113,"author":{"gitId":"sylviaokt"},"content":"            fw.write(\"E | 0 | \" + task.getName() + \" | \" + task.getDate() + \" \""},{"lineNumber":114,"author":{"gitId":"sylviaokt"},"content":"                    + task.getTime() + System.lineSeparator());"},{"lineNumber":115,"author":{"gitId":"sylviaokt"},"content":"            fw.close();"},{"lineNumber":116,"author":{"gitId":"sylviaokt"},"content":"        } catch (IOException e) {"},{"lineNumber":117,"author":{"gitId":"sylviaokt"},"content":"            throw new DukeException(\"File cannot be found.\", e);"},{"lineNumber":118,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":121,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"sylviaokt"},"content":"     * Save the new Deadline in the hard disk"},{"lineNumber":123,"author":{"gitId":"sylviaokt"},"content":"     * @param task new Deadline to be saved"},{"lineNumber":124,"author":{"gitId":"sylviaokt"},"content":"     * @throws DukeException if the named file exists but is a directory rather"},{"lineNumber":125,"author":{"gitId":"sylviaokt"},"content":"     * than a regular file, does not exist but cannot be created, or cannot"},{"lineNumber":126,"author":{"gitId":"sylviaokt"},"content":"     * be opened for any other reason"},{"lineNumber":127,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"sylviaokt"},"content":"    public void appendDeadline(Deadline task) throws DukeException {"},{"lineNumber":129,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":130,"author":{"gitId":"sylviaokt"},"content":"            FileWriter fw \u003d new FileWriter(\"duke.txt\", true);"},{"lineNumber":131,"author":{"gitId":"sylviaokt"},"content":"            fw.write(\"D | 0 | \" + task.getName() + \" | \" + task.getDeadline() + \" \""},{"lineNumber":132,"author":{"gitId":"sylviaokt"},"content":"                    + task.getTime() + System.lineSeparator());"},{"lineNumber":133,"author":{"gitId":"sylviaokt"},"content":"            fw.close();"},{"lineNumber":134,"author":{"gitId":"sylviaokt"},"content":"        } catch (IOException e) {"},{"lineNumber":135,"author":{"gitId":"sylviaokt"},"content":"            throw new DukeException(\"File cannot be found.\", e);"},{"lineNumber":136,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":139,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"sylviaokt"},"content":"     * Update changes in the hard disk"},{"lineNumber":141,"author":{"gitId":"sylviaokt"},"content":"     * @param task The TaskList to be updated"},{"lineNumber":142,"author":{"gitId":"sylviaokt"},"content":"     * @throws DukeException if the named file exists but is a directory rather"},{"lineNumber":143,"author":{"gitId":"sylviaokt"},"content":"     * than a regular file, does not exist but cannot be created, or cannot"},{"lineNumber":144,"author":{"gitId":"sylviaokt"},"content":"     * be opened for any other reason"},{"lineNumber":145,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":146,"author":{"gitId":"sylviaokt"},"content":"    public void rewrite(TaskList task) throws DukeException {"},{"lineNumber":147,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":148,"author":{"gitId":"sylviaokt"},"content":"            FileWriter fw \u003d new FileWriter(\"duke.txt\");"},{"lineNumber":149,"author":{"gitId":"sylviaokt"},"content":"            for (Task nextTask : task.getTaskList()) {"},{"lineNumber":150,"author":{"gitId":"sylviaokt"},"content":"                String done \u003d nextTask.getDone() ? \"1\" : \"0\";"},{"lineNumber":151,"author":{"gitId":"sylviaokt"},"content":"                String type \u003d nextTask.toString().substring(1, 2);"},{"lineNumber":152,"author":{"gitId":"sylviaokt"},"content":"                String name \u003d nextTask.getName();"},{"lineNumber":153,"author":{"gitId":"sylviaokt"},"content":"                String time \u003d \"\";"},{"lineNumber":154,"author":{"gitId":"sylviaokt"},"content":"                if (type.equals(\"E\")) {"},{"lineNumber":155,"author":{"gitId":"sylviaokt"},"content":"                    int index \u003d nextTask.toString().indexOf(\"at: \");"},{"lineNumber":156,"author":{"gitId":"sylviaokt"},"content":"                    time \u003d nextTask.toString().substring(index + 4, nextTask.toString().length() - 1);"},{"lineNumber":157,"author":{"gitId":"sylviaokt"},"content":"                } else if (type.equals(\"D\")) {"},{"lineNumber":158,"author":{"gitId":"sylviaokt"},"content":"                    int index \u003d nextTask.toString().indexOf(\"by: \");"},{"lineNumber":159,"author":{"gitId":"sylviaokt"},"content":"                    time \u003d nextTask.toString().substring(index + 4, nextTask.toString().length() - 1);"},{"lineNumber":160,"author":{"gitId":"sylviaokt"},"content":"                }"},{"lineNumber":161,"author":{"gitId":"sylviaokt"},"content":"                fw.write(type + \" | \" + done + \" | \" + name + \" \""},{"lineNumber":162,"author":{"gitId":"sylviaokt"},"content":"                        + time + System.lineSeparator());"},{"lineNumber":163,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":164,"author":{"gitId":"sylviaokt"},"content":"            fw.close();"},{"lineNumber":165,"author":{"gitId":"sylviaokt"},"content":"        } catch (IOException e) {"},{"lineNumber":166,"author":{"gitId":"sylviaokt"},"content":"            throw new DukeException(\"File cannot be opened.\", e);"},{"lineNumber":167,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":169}},{"path":"src/main/java/bob/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Event;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Task;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Todo;"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":" * Represents a list of task"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"public class TaskList {"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of TaskList"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"    public TaskList() {"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of TaskList"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"     * @param taskList A list of task"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"     * Update the status of one of the tasks in the list"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"     * @param index The index of the task to be updated"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"     * @param isDone The status of the task to be updated"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"     * @return An updated Task object containing the changed task."},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"    public Task changeStatus(int index, boolean isDone) throws DukeException {"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"            Task updatedTask \u003d this.taskList.get(index);"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"            updatedTask.setStatus(isDone);"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"            return updatedTask;"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"            throw new DukeException(\"Please try again with a valid task index!\", e);"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"     * Returns the list of tasks"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"     * @return ArrayList of the tasks"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"        return this.taskList;"},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"     * Returns the total number of tasks in the list"},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"     * @return The size of the ArrayList"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":"    public int getSize() {"},{"lineNumber":60,"author":{"gitId":"sylviaokt"},"content":"        return this.taskList.size();"},{"lineNumber":61,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":63,"author":{"gitId":"sylviaokt"},"content":"    public void addTask(Task task) {"},{"lineNumber":64,"author":{"gitId":"sylviaokt"},"content":"        taskList.add(task);"},{"lineNumber":65,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":67,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"sylviaokt"},"content":"     * Adds a todo task to the list."},{"lineNumber":69,"author":{"gitId":"sylviaokt"},"content":"     * @param task Todo task to be added"},{"lineNumber":70,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"sylviaokt"},"content":"    public void addToDo(Todo task) {"},{"lineNumber":72,"author":{"gitId":"sylviaokt"},"content":"        taskList.add(task);"},{"lineNumber":73,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":75,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"sylviaokt"},"content":"     * Adds an event to the list."},{"lineNumber":77,"author":{"gitId":"sylviaokt"},"content":"     * @param task Event to be added"},{"lineNumber":78,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"sylviaokt"},"content":"    public void addEvent(Event task) {"},{"lineNumber":80,"author":{"gitId":"sylviaokt"},"content":"        taskList.add(task);"},{"lineNumber":81,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":83,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"sylviaokt"},"content":"     * Add a deadline to the list"},{"lineNumber":85,"author":{"gitId":"sylviaokt"},"content":"     * @param task The deadline to be added"},{"lineNumber":86,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"sylviaokt"},"content":"    public void addDeadline(Deadline task) {"},{"lineNumber":88,"author":{"gitId":"sylviaokt"},"content":"        taskList.add(task);"},{"lineNumber":89,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":91,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"sylviaokt"},"content":"     * Remove a task from the list"},{"lineNumber":93,"author":{"gitId":"sylviaokt"},"content":"     * @param index The index of the task to be removed"},{"lineNumber":94,"author":{"gitId":"sylviaokt"},"content":"     * @return The updated Task object with the task removed."},{"lineNumber":95,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"sylviaokt"},"content":"    public Task removeTask(int index) {"},{"lineNumber":97,"author":{"gitId":"sylviaokt"},"content":"        return taskList.remove(index);"},{"lineNumber":98,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":100,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"sylviaokt"},"content":"     * Prints the whole list of tasks"},{"lineNumber":102,"author":{"gitId":"sylviaokt"},"content":"     * @return A string representing the Task."},{"lineNumber":103,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":105,"author":{"gitId":"sylviaokt"},"content":"    public String toString() {"},{"lineNumber":106,"author":{"gitId":"sylviaokt"},"content":"        StringBuilder task \u003d new StringBuilder();"},{"lineNumber":107,"author":{"gitId":"sylviaokt"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":108,"author":{"gitId":"sylviaokt"},"content":"            int index \u003d i + 1;"},{"lineNumber":109,"author":{"gitId":"sylviaokt"},"content":"            task.append(index).append(\".\").append(taskList.get(i)).append(\"\\n\");"},{"lineNumber":110,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"sylviaokt"},"content":"        return task.toString();"},{"lineNumber":112,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":113}},{"path":"src/main/java/bob/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import bob.command.Command;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Deadline;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Event;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"public class Ui {"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"     * Returns an error message when the file containing the list of tasks"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"     * cannot be found."},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"    public String showLoadingError() {"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"        return \"There was an error in loading the file as it could not be found.\";"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"    "},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"     * Provide relevant responses to user and accurate actions according to"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"     * user\u0027s command."},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"     * @param userInput User\u0027s command"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"     * @param taskList The list of tasks user has"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"     * @param storage The storage containing the saved list of task"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"     * @return A boolean value indicating whether to continue taking in commands or not"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"    public String respondToCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"        String[] wordsInInput \u003d userInput.split(\" \");"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"        Command command \u003d parser.parseCommand(wordsInInput);"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"        switch (command) {"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"        case BYE:"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"            return Command.BYE.executeCommand(userInput, taskList, storage);"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"        case LIST:"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"            return Command.LIST.executeCommand(userInput, taskList, storage);"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"        case FIND:"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"            return Command.FIND.executeCommand(userInput, taskList, storage);"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"        case DONE:"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"            return Command.DONE.executeCommand(userInput, taskList, storage);"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"        case DELETE:"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"            return Command.DELETE.executeCommand(userInput, taskList, storage);"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"        case TODO:"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"            return Command.TODO.executeCommand(userInput, taskList, storage);"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"        case EVENT:"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"            return Command.EVENT.executeCommand(userInput, taskList, storage);"},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"        case DEADLINE:"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"            return Command.DEADLINE.executeCommand(userInput, taskList, storage);"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"        case INVALID:"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"            return Command.INVALID.executeCommand(userInput, taskList, storage);"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"        default:"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"            return \"\";"},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":55}},{"path":"src/main/java/bob/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.command;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import bob.DukeException;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import bob.Parser;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import bob.Storage;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"import bob.TaskList;"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Event;"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Task;"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"import bob.task.Todo;"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":" * Represents the different types of possible commands."},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"public enum Command {"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"    BYE {"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"            return \"Bye! See you soon!\";"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"    LIST {"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"            String message \u003d \"This is your list of tasks:\\n\";"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"            message +\u003d taskList.toString();"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"            return message;"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"    FIND {"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"            String message \u003d \"\";"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"            try {"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"                String name \u003d parser.parseName(userInput);"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"                TaskList findTask \u003d new TaskList();"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"                ArrayList\u003cTask\u003e currTaskList \u003d taskList.getTaskList();"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"                for (Task task : currTaskList) {"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"                    String taskName \u003d task.getName();"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"                    if (taskName.contains(name)) {"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"                        findTask.addTask(task);"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"                    }"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"                }"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"                if (findTask.getSize() !\u003d 0) {"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"                    message \u003d \"Here are your search results: \\n\""},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"                            + findTask.toString();"},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"                } else {"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"                    message \u003d \"Oops, there is no matching task!\";"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"            } catch (DukeException e) {"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"                message \u003d e.getMessage();"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"            return message;"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"    DONE {"},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":"            try {"},{"lineNumber":60,"author":{"gitId":"sylviaokt"},"content":"                int index \u003d parser.parseNumber(userInput, 5);"},{"lineNumber":61,"author":{"gitId":"sylviaokt"},"content":"                Task updatedTask \u003d taskList.changeStatus(index - 1, true);"},{"lineNumber":62,"author":{"gitId":"sylviaokt"},"content":"                return \"Good job! This task has been marked as done :)\\n\" + updatedTask.toString();"},{"lineNumber":63,"author":{"gitId":"sylviaokt"},"content":"            } catch (DukeException e) {"},{"lineNumber":64,"author":{"gitId":"sylviaokt"},"content":"                return e.getMessage();"},{"lineNumber":65,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":68,"author":{"gitId":"sylviaokt"},"content":"    DELETE {"},{"lineNumber":69,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":70,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":71,"author":{"gitId":"sylviaokt"},"content":"            try {"},{"lineNumber":72,"author":{"gitId":"sylviaokt"},"content":"                int index \u003d parser.parseNumber(userInput, 7);"},{"lineNumber":73,"author":{"gitId":"sylviaokt"},"content":"                Task removedTask \u003d taskList.removeTask(index - 1);"},{"lineNumber":74,"author":{"gitId":"sylviaokt"},"content":"                return \"Alright, this task has been removed.\\n\" + removedTask"},{"lineNumber":75,"author":{"gitId":"sylviaokt"},"content":"                        + \"\\nThere are \" + taskList.getSize() + \" tasks left.\";"},{"lineNumber":76,"author":{"gitId":"sylviaokt"},"content":"            } catch (DukeException e) {"},{"lineNumber":77,"author":{"gitId":"sylviaokt"},"content":"                return e.getMessage();"},{"lineNumber":78,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":81,"author":{"gitId":"sylviaokt"},"content":"    TODO {"},{"lineNumber":82,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":83,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":84,"author":{"gitId":"sylviaokt"},"content":"            try {"},{"lineNumber":85,"author":{"gitId":"sylviaokt"},"content":"                String taskName \u003d parser.parseName(userInput);"},{"lineNumber":86,"author":{"gitId":"sylviaokt"},"content":"                Todo newTodo \u003d new Todo(taskName);"},{"lineNumber":87,"author":{"gitId":"sylviaokt"},"content":"                taskList.addToDo(newTodo);"},{"lineNumber":88,"author":{"gitId":"sylviaokt"},"content":"                storage.appendToDo(newTodo);"},{"lineNumber":89,"author":{"gitId":"sylviaokt"},"content":"                return \"Alright, I have added this new todo.\\n\""},{"lineNumber":90,"author":{"gitId":"sylviaokt"},"content":"                        + newTodo + \"\\n\" + \"There are a total of \""},{"lineNumber":91,"author":{"gitId":"sylviaokt"},"content":"                        + taskList.getSize() + \" tasks now.\";"},{"lineNumber":92,"author":{"gitId":"sylviaokt"},"content":"            } catch (DukeException e) {"},{"lineNumber":93,"author":{"gitId":"sylviaokt"},"content":"                return e.getMessage();"},{"lineNumber":94,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":97,"author":{"gitId":"sylviaokt"},"content":"    EVENT {"},{"lineNumber":98,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":99,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":100,"author":{"gitId":"sylviaokt"},"content":"            try {"},{"lineNumber":101,"author":{"gitId":"sylviaokt"},"content":"                int taskIndex \u003d userInput.indexOf(\"/at\");"},{"lineNumber":102,"author":{"gitId":"sylviaokt"},"content":"                if (taskIndex !\u003d -1) {"},{"lineNumber":103,"author":{"gitId":"sylviaokt"},"content":"                    Event newEvent \u003d parser.parseEvent(userInput, taskIndex);"},{"lineNumber":104,"author":{"gitId":"sylviaokt"},"content":"                    taskList.addEvent(newEvent);"},{"lineNumber":105,"author":{"gitId":"sylviaokt"},"content":"                    storage.appendEvent(newEvent);"},{"lineNumber":106,"author":{"gitId":"sylviaokt"},"content":"                    return \"Alright, I have added this new event.\\n\""},{"lineNumber":107,"author":{"gitId":"sylviaokt"},"content":"                            + newEvent + \"\\n\" + \"There is a total of \""},{"lineNumber":108,"author":{"gitId":"sylviaokt"},"content":"                            + taskList.getSize() + \" tasks now.\";"},{"lineNumber":109,"author":{"gitId":"sylviaokt"},"content":"                } else {"},{"lineNumber":110,"author":{"gitId":"sylviaokt"},"content":"                    return \"There is no event timing detected!\\n\""},{"lineNumber":111,"author":{"gitId":"sylviaokt"},"content":"                            + \"Please try again with a correct format\";"},{"lineNumber":112,"author":{"gitId":"sylviaokt"},"content":"                }"},{"lineNumber":113,"author":{"gitId":"sylviaokt"},"content":"            } catch (DukeException e) {"},{"lineNumber":114,"author":{"gitId":"sylviaokt"},"content":"                return e.getMessage();"},{"lineNumber":115,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":118,"author":{"gitId":"sylviaokt"},"content":"    DEADLINE {"},{"lineNumber":119,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":120,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":121,"author":{"gitId":"sylviaokt"},"content":"            try {"},{"lineNumber":122,"author":{"gitId":"sylviaokt"},"content":"                int deadlineIndex \u003d userInput.indexOf(\"/by\");"},{"lineNumber":123,"author":{"gitId":"sylviaokt"},"content":"                if (deadlineIndex !\u003d -1) {"},{"lineNumber":124,"author":{"gitId":"sylviaokt"},"content":"                    Deadline newDeadline \u003d parser.parseDeadline(userInput, deadlineIndex);"},{"lineNumber":125,"author":{"gitId":"sylviaokt"},"content":"                    taskList.addDeadline(newDeadline);"},{"lineNumber":126,"author":{"gitId":"sylviaokt"},"content":"                    storage.appendDeadline(newDeadline);"},{"lineNumber":127,"author":{"gitId":"sylviaokt"},"content":"                    return \"Alright, I have added this new deadline.\\n\""},{"lineNumber":128,"author":{"gitId":"sylviaokt"},"content":"                            + newDeadline + \"\\n\" + \"There is a total of \""},{"lineNumber":129,"author":{"gitId":"sylviaokt"},"content":"                            + taskList.getSize() + \" tasks now.\";"},{"lineNumber":130,"author":{"gitId":"sylviaokt"},"content":"                } else {"},{"lineNumber":131,"author":{"gitId":"sylviaokt"},"content":"                    return \"There is no deadline time and date detected!\\n\""},{"lineNumber":132,"author":{"gitId":"sylviaokt"},"content":"                            + \"Please try again with a correct format\";"},{"lineNumber":133,"author":{"gitId":"sylviaokt"},"content":"                }"},{"lineNumber":134,"author":{"gitId":"sylviaokt"},"content":"            } catch (DukeException e) {"},{"lineNumber":135,"author":{"gitId":"sylviaokt"},"content":"                return e.getMessage();"},{"lineNumber":136,"author":{"gitId":"sylviaokt"},"content":"            }"},{"lineNumber":137,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"sylviaokt"},"content":"    },"},{"lineNumber":139,"author":{"gitId":"sylviaokt"},"content":"    INVALID {"},{"lineNumber":140,"author":{"gitId":"sylviaokt"},"content":"        @Override"},{"lineNumber":141,"author":{"gitId":"sylviaokt"},"content":"        public String executeCommand(String userInput, TaskList taskList, Storage storage) {"},{"lineNumber":142,"author":{"gitId":"sylviaokt"},"content":"            return \"Sorry, I have no idea what that means :( Please try again!\";"},{"lineNumber":143,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"sylviaokt"},"content":"    };"},{"lineNumber":145,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":146,"author":{"gitId":"sylviaokt"},"content":"    Parser parser \u003d new Parser();"},{"lineNumber":147,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":148,"author":{"gitId":"sylviaokt"},"content":"    public abstract String executeCommand(String userInput, TaskList taskList, Storage storage);"},{"lineNumber":149,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":149}},{"path":"src/main/java/bob/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.gui;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"    public static DialogBox getBobDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":61}},{"path":"src/main/java/bob/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.gui;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":12}},{"path":"src/main/java/bob/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.gui;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import bob.Bob;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"    private Bob bob \u003d new Bob(\"data/tasks.txt\");"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBob(bob);"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":32}},{"path":"src/main/java/bob/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.gui;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import bob.Bob;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"import bob.gui.DialogBox;"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"    private Bob bob;"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/patrick.png\"));"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"    private Image bobImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bob.png\"));"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"    public void initialize() {"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"        String greeting \u003d \"Hello! I\u0027m Bob :D\\n\" + \"What can I do for you?\";"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"                DialogBox.getBobDialog(greeting, bobImage)"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"        );"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"    public void setBob(Bob d) {"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"        bob \u003d d;"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"    @FXML"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"    private void handleUserInput() {"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"        String response \u003d bob.getResponse(input);"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"                DialogBox.getBobDialog(response, bobImage)"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"        );"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"        userInput.clear();"},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":58}},{"path":"src/main/java/bob/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.task;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":" * Represents a deadline task"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"    private LocalDate deadline;"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"    private String time;"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of a deadline"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"     * @param name Name of the deadline"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"     * @param deadline The deadline of the task"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"     * @param time The due time of the task"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"    public Deadline(String name, LocalDate deadline, String time) {"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"        super(name);"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"        this.time \u003d time;"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of a deadline"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"     * @param name Name of the deadline"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"     * @param isDone Status of the task"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"     * @param deadline The deadline of the task"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"     * @param time The due time of the task"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"    public Deadline(String name, boolean isDone, LocalDate deadline, String time) {"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"        super(name, isDone);"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"        this.time \u003d time;"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"    public LocalDate getDeadline() {"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"        return this.deadline;"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"    public String getTime() {"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"        return this.time;"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"     * Prints out the details of the Deadline, including the name, the due date, and due time."},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"     * @return A string representing the deadline"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"        String head \u003d \"[D][ ] \";"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"        if (this.isDone) {"},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"            head \u003d \"[D][X] \";"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"        return head + this.name + \" (by: \" + this.deadline.getMonth() + \" \""},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"                + this.deadline.getDayOfMonth() + \" \" + this.deadline.getYear() + \" \""},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"                + this.time + \")\";"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":59}},{"path":"src/main/java/bob/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.task;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":" * Represents an event"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"    private LocalDate date;"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"    private String time;"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of an event"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"     * @param name Name of the event"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"     * @param date Date of the event"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"     * @param time Time of the event"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"    public Event(String name, LocalDate date, String time) {"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"        super(name);"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"        this.date \u003d date;"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"        this.time \u003d time;"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of an event"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"     * @param name Name of the event"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"     * @param isDone Status of the Event"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"     * @param date Date of the event"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"     * @param time Time of the event"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"    public Event(String name, boolean isDone, LocalDate date, String time) {"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"        super(name, isDone);"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"        this.date \u003d date;"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"        this.time \u003d time;"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"    public LocalDate getDate() {"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"        return this.date;"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"    public String getTime() {"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"        return this.time;"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"     * Prints the details of the event, including the name, time, and date."},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"     * @return A string representing the event."},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"        String head \u003d \"[E][ ] \";"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"        if (this.isDone) {"},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"            head \u003d \"[E][X] \";"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"        return head + this.name + \" (at: \" + this.date.getMonth() + \" \""},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"                + this.date.getDayOfMonth() + \" \" + this.date.getYear() + \" \""},{"lineNumber":57,"author":{"gitId":"sylviaokt"},"content":"                + this.time + \")\";"},{"lineNumber":58,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":59}},{"path":"src/main/java/bob/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.task;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":" * Represents a task"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"    protected String name;"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"    protected boolean isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of a task"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"     * @param name Name of task"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"    public Task(String name) {"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"        this.name \u003d name;"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of a task"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"     * @param name Name of task"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"     * @param isDone Status of task"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"    public Task(String name, boolean isDone) {"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"        this.name \u003d name;"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"    public String getName() {"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"        return this.name;"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"    public boolean getDone() {"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"        return this.isDone;"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"     * Updates the status of the task"},{"lineNumber":38,"author":{"gitId":"sylviaokt"},"content":"     * @param isDone The boolean value representing the status of the task"},{"lineNumber":39,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"sylviaokt"},"content":"    public void setStatus(boolean isDone) {"},{"lineNumber":41,"author":{"gitId":"sylviaokt"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":42,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":44,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"sylviaokt"},"content":"     * Prints the details of a task, including the status and name."},{"lineNumber":46,"author":{"gitId":"sylviaokt"},"content":"     * @return A string representing a task."},{"lineNumber":47,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"sylviaokt"},"content":"    public String toString() {"},{"lineNumber":50,"author":{"gitId":"sylviaokt"},"content":"        if (this.isDone) {"},{"lineNumber":51,"author":{"gitId":"sylviaokt"},"content":"            return \"[X] \" + this.name;"},{"lineNumber":52,"author":{"gitId":"sylviaokt"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"sylviaokt"},"content":"            return \"[ ] \" + this.name;"},{"lineNumber":54,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":56}},{"path":"src/main/java/bob/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"package bob.task;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":" * Represents Todo tasks"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of Todo tasks"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"     * @param name Name of the task"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"    public Todo(String name) {"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"        super(name);"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"     * Constructor of Todo tasks"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"     * @param name Name of the task"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"     * @param isDone Status of the task"},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"    public Todo(String name, boolean isDone) {"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"        super(name, isDone);"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"     * Prints out the details of Todo task, including the status and name"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"     * @return A string representing the Todo task"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"sylviaokt"},"content":"        if (this.isDone) {"},{"lineNumber":32,"author":{"gitId":"sylviaokt"},"content":"            return \"[T][X] \" + this.name;"},{"lineNumber":33,"author":{"gitId":"sylviaokt"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"sylviaokt"},"content":"            return \"[T][ ] \" + this.name;"},{"lineNumber":35,"author":{"gitId":"sylviaokt"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":37}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"sylviaokt":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bob.gui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"sylviaokt":19}},{"path":"text-ui-test/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"T | 0 | eat "},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":"T | 1 | at and sleep "},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"E | 1 | sleep [X] sleep (by: JANUARY 20 2021 1600"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"D | 0 | code FEBRUARY 10 2021 2pm"}],"authorContributionMap":{"sylviaokt":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"todo eat"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":"todoeat and sleep"},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"event sleep /at 2021-01-20 1600"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":"deadline code /by 2021-02-10 2pm"},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"list"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"done 3"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"list"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"bye"}],"authorContributionMap":{"sylviaokt":9}},{"path":"text-ui-test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"public class ParserTest {"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":"    public void parseCommand_validCommand () {"},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"        Command todo \u003d parser.parseCommand(\"todo eat and sleep\");"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"        assertEquals(todo, Command.TODO);"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"        Command event \u003d parser.parseCommand(\"event eat and sleep /at: 2pm\");"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"        assertEquals(event, Command.EVENT);"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":16,"author":{"gitId":"sylviaokt"},"content":"        Command deadline \u003d parser.parseCommand(\"deadline eat and sleep /by: 9pm\");"},{"lineNumber":17,"author":{"gitId":"sylviaokt"},"content":"        assertEquals(deadline, Command.DEADLINE);"},{"lineNumber":18,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":20,"author":{"gitId":"sylviaokt"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"sylviaokt"},"content":"    public void parseEvent_validCommand() throws DukeException {"},{"lineNumber":22,"author":{"gitId":"sylviaokt"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":23,"author":{"gitId":"sylviaokt"},"content":"        String userInput \u003d \"event eat and sleep /at: 2020-02-02 2pm\";"},{"lineNumber":24,"author":{"gitId":"sylviaokt"},"content":"        int timeIndex \u003d userInput.indexOf(\"/at:\");"},{"lineNumber":25,"author":{"gitId":"sylviaokt"},"content":"        Event event \u003d parser.parseEvent(userInput, timeIndex);"},{"lineNumber":26,"author":{"gitId":"sylviaokt"},"content":"        String expected \u003d \"[E][ ] eat and sleep (at: FEBRUARY 2 2020 2pm)\";"},{"lineNumber":27,"author":{"gitId":"sylviaokt"},"content":"        assertEquals(event.toString(), expected);"},{"lineNumber":28,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":30,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":30}},{"path":"text-ui-test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sylviaokt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":3,"author":{"gitId":"sylviaokt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":5,"author":{"gitId":"sylviaokt"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":7,"author":{"gitId":"sylviaokt"},"content":"public class StorageTest {"},{"lineNumber":8,"author":{"gitId":"sylviaokt"},"content":""},{"lineNumber":9,"author":{"gitId":"sylviaokt"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"sylviaokt"},"content":"    public void load_noSuchFile() throws DukeException {"},{"lineNumber":11,"author":{"gitId":"sylviaokt"},"content":"        Storage storage \u003d new Storage(\"data/tasks.txt\");"},{"lineNumber":12,"author":{"gitId":"sylviaokt"},"content":"        ArrayList\u003cTask\u003e task \u003d storage.load();"},{"lineNumber":13,"author":{"gitId":"sylviaokt"},"content":"        assertEquals(task, new ArrayList\u003c\u003e());"},{"lineNumber":14,"author":{"gitId":"sylviaokt"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"sylviaokt"},"content":"}"}],"authorContributionMap":{"sylviaokt":15}}]
