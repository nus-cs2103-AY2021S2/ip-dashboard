[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"}"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"}"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"}"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"}"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"}"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"}"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"    toolVersion \u003d \u00278.28\u0027"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"}"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"    enableAssertions \u003d true"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"XindiTian"},"content":"}"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":""}],"authorContributionMap":{"XindiTian":63}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"XindiTian"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":65,"author":{"gitId":"XindiTian"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":67,"author":{"gitId":"XindiTian"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"XindiTian"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":70,"author":{"gitId":"XindiTian"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":72,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":73,"author":{"gitId":"XindiTian"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"XindiTian"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":76,"author":{"gitId":"XindiTian"},"content":":end"},{"lineNumber":77,"author":{"gitId":"XindiTian"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"XindiTian"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":80,"author":{"gitId":"XindiTian"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"XindiTian"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"XindiTian"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"XindiTian"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"XindiTian"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":86,"author":{"gitId":"XindiTian"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"XindiTian"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":89,"author":{"gitId":"XindiTian"},"content":":omega"}],"authorContributionMap":{"XindiTian":89}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"import java.io.PrintWriter;"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"    protected LocalDateTime by;"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"    public Deadline(String des, LocalDateTime by) {"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"        super(des);"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"        this.by \u003d by;"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"     * makes a deadline with the string given"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"     * @param line input string that will be split into the task description and date"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"     * @return a Deadline"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"     * @throws DukeException"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    public static Deadline makeDeadline(String line) throws DukeException {"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"        if (line.equals(\"\")) {"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"            throw new DukeException(\"☹ OOPS!!!The description of a todo cannot be empty.\\n\");"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"            String[] split \u003d line.split(\"/by \");"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"            String task \u003d split[0];"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"            String[] temp \u003d split[1].split(\" \");"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"            String date \u003d temp[0];"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"            LocalTime time \u003d LocalTime.parse(temp[1]);"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"            LocalDate d \u003d LocalDate.parse(date);"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"            LocalDateTime dt \u003d d.atTime(time);"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"            //System.out.println(d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"            return new Deadline(task, dt);"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h a\")) + \")\";"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"}"}],"authorContributionMap":{"XindiTian":42}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import javafx.geometry.Pos;"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.Node;"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.control.Label;"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":" * An example of a custom control using FXML."},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":" * containing text from the speaker."},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":" */"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"public class DialogBox extends HBox {"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"    private Label dialog;"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"    private ImageView displayPicture;"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"            fxmlLoader.load();"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"        dialog.setText(text);"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"        displayPicture.setImage(img);"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"    private void flip() {"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"        Collections.reverse(tmp);"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"        return new DialogBox(text, img);"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"        db.flip();"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"        return db;"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"}"}],"authorContributionMap":{"XindiTian":58}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"     * provides a platform for users to key in tasks to add to the list."},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"     * @param args"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"        System.out.println(\"____________________________\");"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"        System.out.println(\"\\tHello! I\u0027m Duke\\n\\tWhat can I do for you?\");"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"        System.out.println(\"____________________________\");"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"        Storage st \u003d new Storage();"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"        st.initialise(st.getDefaultFilePath());"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"        while (sc.hasNext()) {"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"            TaskList tl \u003d new TaskList();"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"            if (input.equals(\"bye\")) {"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"                System.out.println(\"Bye. Hope to see you again!\");"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"                break;"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"            } else {"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"                tl.createTask(input, sc, lst);"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"     * Replace this stub with your completed method."},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"    ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"    public String getResponse(String input) {"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"        String[] splited \u003d input.split(\"\\\\s+\");"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"        return TaskList.guiTask(splited, list);"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"XindiTian":37,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"    public DukeException(String message) {"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"}"}],"authorContributionMap":{"XindiTian":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"    protected String at;"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"    public Event(String des, String at) {"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"        super(des);"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"        this.at \u003d at;"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"     * makes an event with the string given"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"     * @param line input string that will be split into the task description and date"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"     * @return an Event"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"     * @throws DukeException"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    public static Event makeEvent(String line) throws DukeException {"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"        if (line.equals(\"\")) {"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"            throw new DukeException(\"☹ OOPS!!!The description of a todo cannot be empty.\\n\");"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"            String[] split \u003d line.split(\"/at\");"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"            String task \u003d split[0];"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"            String date \u003d split[1];"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"            return new Event(task, date);"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"}"}],"authorContributionMap":{"XindiTian":32}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"}"}],"authorContributionMap":{"XindiTian":7}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"import javafx.application.Application;"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.Scene;"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import javafx.stage.Stage;"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":" * A GUI for Duke using FXML."},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":" */"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"public class Main extends Application {"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    public void start(Stage stage) {"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"            stage.setScene(scene);"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"            stage.show();"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"        } catch (IOException e) {"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"            e.printStackTrace();"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"}"}],"authorContributionMap":{"XindiTian":28}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":" */"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"    @FXML"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"    private VBox dialogContainer;"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"    private TextField userInput;"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"    private Button sendButton;"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"    private Duke duke;"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/20191231_194653.jpg\"));"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/20191231_194232.jpg\"));"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"    public void initialize() {"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"        duke \u003d d;"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"    private void handleUserInput() {"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"        );"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"        userInput.clear();"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"}"}],"authorContributionMap":{"XindiTian":49}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"public class Storage {"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"    public Storage(){}"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"    static void writeToFile(String filePath, String textToAdd) throws IOException {"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"        fw.write(textToAdd);"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"        fw.close();"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    private static void printFileContents(String filePath) throws FileNotFoundException {"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"        File f \u003d new File(filePath); // create a File for the given file path"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"        while (s.hasNext()) {"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"            System.out.println(s.nextLine());"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    static void appendToFile(String filePath, String textToAppend) throws IOException {"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"        fw.write(textToAppend);"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"        fw.close();"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"     * gets the home location of the OS using this code."},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"     * @return file path of the home location."},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"    public static String getHome() {"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"        return System.getProperty(\"user.home\");"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"     * saves a default file path that will help to locate the specific path"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"     * or create a new path id this path does not exist."},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"     * @return file path in the form of a string."},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"    public static String getDefaultFilePath() {"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"        return getHome() + File.separator + \"task.txt\";"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"     * initialises the process by either"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"     * printing the contents of the task in the existing documents or"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"     * creating the specific text file in the user\u0027s OS."},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"     * @param filePath the location which the code will look for such that either"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"     *                 the contents in this file will be printed or"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"     *                 the code creates the file based on the provided path."},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"    public static void initialise(String filePath) {"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"        System.out.println(\"Your tasks include:\");"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"        String file \u003d getHome() + File.separator + \"task.txt\";"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"XindiTian"},"content":"            printFileContents(filePath);"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":64,"author":{"gitId":"XindiTian"},"content":"            new File(file);"},{"lineNumber":65,"author":{"gitId":"XindiTian"},"content":"            System.out.println(\"File created: task.txt\\n\\tFolder: data\");"},{"lineNumber":66,"author":{"gitId":"XindiTian"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"XindiTian"},"content":"}"}],"authorContributionMap":{"XindiTian":68}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"    protected String des;"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"    protected boolean status;"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"    public Task(String des) {"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"        this.des \u003d des;"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"        this.status \u003d false;"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"     * checks if the status is marked as done or not"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"     * @return if status is done, return [X], else return [ ]"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"    public String getStatus() {"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"        return (status? \"[X]\" : \"[ ]\");"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"     * sets status to true if called"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    public void markAsDone() {"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"        status \u003d true;"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"        return this.getStatus() + \" \" + des;"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"}"}],"authorContributionMap":{"XindiTian":29}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"    public TaskList() {}"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"     * Returns and prints the specific Task type."},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"     * Adds the task into the list if the Task is either \"Todo\", \"Deadline\" or \"Event\"."},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"     * if the command given is \"done\", then the task will be marked as done but stay in the list."},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"     * if the command given is \"delete\", then the task wil be deleted and removed from the list."},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"     * if the command given is \"find\", then the task will proceed to scan through the list."},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"     * and return the respective tasks that have the matching keyword."},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"     * @param input the task to be added/deleted/edited in the list."},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"     * @param sc the scanner that was used to obtain the input."},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"     *           and will thus be used to obtain the remaining lines."},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":26,"author":{"gitId":"XindiTian"},"content":"    public static void createTask(String input, Scanner sc, ArrayList\u003cTask\u003e list) {"},{"lineNumber":27,"author":{"gitId":"XindiTian"},"content":"        Storage store \u003d new Storage();"},{"lineNumber":28,"author":{"gitId":"XindiTian"},"content":"        String home \u003d store.getHome();"},{"lineNumber":29,"author":{"gitId":"XindiTian"},"content":"        String file \u003d store.getDefaultFilePath();"},{"lineNumber":30,"author":{"gitId":"XindiTian"},"content":"        if (input.equals(\"list\")) {"},{"lineNumber":31,"author":{"gitId":"XindiTian"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":32,"author":{"gitId":"XindiTian"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":33,"author":{"gitId":"XindiTian"},"content":"                int count \u003d i + 1;"},{"lineNumber":34,"author":{"gitId":"XindiTian"},"content":"                Task a \u003d list.get(i);"},{"lineNumber":35,"author":{"gitId":"XindiTian"},"content":"                System.out.println(count + \". \" + a);"},{"lineNumber":36,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"XindiTian"},"content":"        } else if (input.equals(\"done\")) {"},{"lineNumber":38,"author":{"gitId":"XindiTian"},"content":"            int tag \u003d sc.nextInt() - 1;"},{"lineNumber":39,"author":{"gitId":"XindiTian"},"content":"            Task d \u003d list.get(tag);"},{"lineNumber":40,"author":{"gitId":"XindiTian"},"content":"            d.markAsDone();"},{"lineNumber":41,"author":{"gitId":"XindiTian"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":42,"author":{"gitId":"XindiTian"},"content":"            System.out.println(d + \"\\n\");"},{"lineNumber":43,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":44,"author":{"gitId":"XindiTian"},"content":"            String temp \u003d home + File.separator + \"temp.txt\";"},{"lineNumber":45,"author":{"gitId":"XindiTian"},"content":"            //create temp file"},{"lineNumber":46,"author":{"gitId":"XindiTian"},"content":"            File tempf \u003d new File(temp);"},{"lineNumber":47,"author":{"gitId":"XindiTian"},"content":"            //copy contents of old file to temp file"},{"lineNumber":48,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":49,"author":{"gitId":"XindiTian"},"content":"                Files.copy(Paths.get(file), Paths.get(temp));"},{"lineNumber":50,"author":{"gitId":"XindiTian"},"content":"            } catch (IOException e) {"},{"lineNumber":51,"author":{"gitId":"XindiTian"},"content":"                e.printStackTrace();"},{"lineNumber":52,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"XindiTian"},"content":"            //delete contents of old file"},{"lineNumber":54,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":55,"author":{"gitId":"XindiTian"},"content":"                new FileWriter(file, false).close();"},{"lineNumber":56,"author":{"gitId":"XindiTian"},"content":"            } catch (IOException e) {"},{"lineNumber":57,"author":{"gitId":"XindiTian"},"content":"                e.printStackTrace();"},{"lineNumber":58,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"XindiTian"},"content":"            Scanner sf \u003d null;"},{"lineNumber":60,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":61,"author":{"gitId":"XindiTian"},"content":"                sf \u003d new Scanner(tempf);"},{"lineNumber":62,"author":{"gitId":"XindiTian"},"content":"            } catch (FileNotFoundException e) {"},{"lineNumber":63,"author":{"gitId":"XindiTian"},"content":"                e.printStackTrace();"},{"lineNumber":64,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"XindiTian"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":66,"author":{"gitId":"XindiTian"},"content":"                Task t \u003d list.get(i);"},{"lineNumber":67,"author":{"gitId":"XindiTian"},"content":"                if (i !\u003d tag) {"},{"lineNumber":68,"author":{"gitId":"XindiTian"},"content":"                    try {"},{"lineNumber":69,"author":{"gitId":"XindiTian"},"content":"                        store.appendToFile(file, sf.nextLine() + \"\\n\");"},{"lineNumber":70,"author":{"gitId":"XindiTian"},"content":"                    } catch (IOException e){"},{"lineNumber":71,"author":{"gitId":"XindiTian"},"content":"                        System.out.println(\"OOPS!!! \" + e.getMessage());"},{"lineNumber":72,"author":{"gitId":"XindiTian"},"content":"                    }"},{"lineNumber":73,"author":{"gitId":"XindiTian"},"content":"                } else {"},{"lineNumber":74,"author":{"gitId":"XindiTian"},"content":"                    try {"},{"lineNumber":75,"author":{"gitId":"XindiTian"},"content":"                        t.markAsDone();"},{"lineNumber":76,"author":{"gitId":"XindiTian"},"content":"                        Storage.appendToFile(file, \"(DONE)\" + sf.nextLine() + \"\\n\");"},{"lineNumber":77,"author":{"gitId":"XindiTian"},"content":"                    } catch (IOException e){"},{"lineNumber":78,"author":{"gitId":"XindiTian"},"content":"                        System.out.println(\"OOPS!!! \" + e.getMessage());"},{"lineNumber":79,"author":{"gitId":"XindiTian"},"content":"                    }"},{"lineNumber":80,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"XindiTian"},"content":"            //delete temp file"},{"lineNumber":83,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":84,"author":{"gitId":"XindiTian"},"content":"                Files.delete(Paths.get(temp));"},{"lineNumber":85,"author":{"gitId":"XindiTian"},"content":"            } catch (IOException e) {"},{"lineNumber":86,"author":{"gitId":"XindiTian"},"content":"                e.printStackTrace();"},{"lineNumber":87,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"XindiTian"},"content":"        } else if (input.equals(\"delete\")) {"},{"lineNumber":89,"author":{"gitId":"XindiTian"},"content":"            int tag \u003d sc.nextInt() - 1;"},{"lineNumber":90,"author":{"gitId":"XindiTian"},"content":"            int len \u003d list.size() - 1;"},{"lineNumber":91,"author":{"gitId":"XindiTian"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":92,"author":{"gitId":"XindiTian"},"content":"            System.out.println(\"\\t\" + list.get(tag));"},{"lineNumber":93,"author":{"gitId":"XindiTian"},"content":"            System.out.println(\"Now you have \" + len + \" tasks in the list.\\n\");"},{"lineNumber":94,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":95,"author":{"gitId":"XindiTian"},"content":"            String temp \u003d home + File.separator + \"temp.txt\";"},{"lineNumber":96,"author":{"gitId":"XindiTian"},"content":"            //create temp file"},{"lineNumber":97,"author":{"gitId":"XindiTian"},"content":"            File tempf \u003d new File(temp);"},{"lineNumber":98,"author":{"gitId":"XindiTian"},"content":"            //copy contents of old file to temp file"},{"lineNumber":99,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":100,"author":{"gitId":"XindiTian"},"content":"                Files.copy(Paths.get(file), Paths.get(temp));"},{"lineNumber":101,"author":{"gitId":"XindiTian"},"content":"            } catch (IOException e) {"},{"lineNumber":102,"author":{"gitId":"XindiTian"},"content":"                e.printStackTrace();"},{"lineNumber":103,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"XindiTian"},"content":"            //delete contents of old file"},{"lineNumber":105,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":106,"author":{"gitId":"XindiTian"},"content":"                new FileWriter(file, false).close();"},{"lineNumber":107,"author":{"gitId":"XindiTian"},"content":"            } catch (IOException e) {"},{"lineNumber":108,"author":{"gitId":"XindiTian"},"content":"                e.printStackTrace();"},{"lineNumber":109,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"XindiTian"},"content":"            Scanner sf \u003d null;"},{"lineNumber":111,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":112,"author":{"gitId":"XindiTian"},"content":"                sf \u003d new Scanner(tempf);"},{"lineNumber":113,"author":{"gitId":"XindiTian"},"content":"            } catch (FileNotFoundException e) {"},{"lineNumber":114,"author":{"gitId":"XindiTian"},"content":"                e.printStackTrace();"},{"lineNumber":115,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"XindiTian"},"content":"            for (int i \u003d 0; i \u003c\u003d len; i++) {"},{"lineNumber":117,"author":{"gitId":"XindiTian"},"content":"                if (i !\u003d tag) {"},{"lineNumber":118,"author":{"gitId":"XindiTian"},"content":"                    try {"},{"lineNumber":119,"author":{"gitId":"XindiTian"},"content":"                        Storage.appendToFile(file,  sf.nextLine() + \"\\n\");"},{"lineNumber":120,"author":{"gitId":"XindiTian"},"content":"                    } catch (IOException e){"},{"lineNumber":121,"author":{"gitId":"XindiTian"},"content":"                        System.out.println(\"OOPS!!! \" + e.getMessage());"},{"lineNumber":122,"author":{"gitId":"XindiTian"},"content":"                    }"},{"lineNumber":123,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":124,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"XindiTian"},"content":"            //delete temp file"},{"lineNumber":126,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":127,"author":{"gitId":"XindiTian"},"content":"                Files.delete(Paths.get(temp));"},{"lineNumber":128,"author":{"gitId":"XindiTian"},"content":"            } catch (IOException e) {"},{"lineNumber":129,"author":{"gitId":"XindiTian"},"content":"                e.printStackTrace();"},{"lineNumber":130,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"XindiTian"},"content":"            list.remove(tag);"},{"lineNumber":132,"author":{"gitId":"XindiTian"},"content":"        } else if (input.equals(\"todo\")) {"},{"lineNumber":133,"author":{"gitId":"XindiTian"},"content":"            String task \u003d sc.nextLine();"},{"lineNumber":134,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":135,"author":{"gitId":"XindiTian"},"content":"                Todo td \u003d Todo.makeTodo(task);"},{"lineNumber":136,"author":{"gitId":"XindiTian"},"content":"                list.add(td);"},{"lineNumber":137,"author":{"gitId":"XindiTian"},"content":"                int len \u003d list.size();"},{"lineNumber":138,"author":{"gitId":"XindiTian"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":139,"author":{"gitId":"XindiTian"},"content":"                System.out.println(\"\\t\" + td);"},{"lineNumber":140,"author":{"gitId":"XindiTian"},"content":"                System.out.println(\"Now you have \" + len + \" tasks in the list.\\n\");"},{"lineNumber":141,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":142,"author":{"gitId":"XindiTian"},"content":"                try {"},{"lineNumber":143,"author":{"gitId":"XindiTian"},"content":"                    Storage.appendToFile(file, \"Todo:\" + \" 0\" + task + \"\\n\");"},{"lineNumber":144,"author":{"gitId":"XindiTian"},"content":"                } catch (IOException e) {"},{"lineNumber":145,"author":{"gitId":"XindiTian"},"content":"                    System.out.println(\"OOPS!!! \" + e.getMessage());"},{"lineNumber":146,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":147,"author":{"gitId":"XindiTian"},"content":"            } catch (DukeException ex){"},{"lineNumber":148,"author":{"gitId":"XindiTian"},"content":"                System.err.println(\"OOPS!!! The description of a todo cannot be empty.\\n\");"},{"lineNumber":149,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"XindiTian"},"content":"        } else if (input.equals(\"deadline\")) {"},{"lineNumber":151,"author":{"gitId":"XindiTian"},"content":"            String line \u003d sc.nextLine();"},{"lineNumber":152,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":153,"author":{"gitId":"XindiTian"},"content":"                Deadline dl \u003d Deadline.makeDeadline(line);"},{"lineNumber":154,"author":{"gitId":"XindiTian"},"content":"                list.add(dl);"},{"lineNumber":155,"author":{"gitId":"XindiTian"},"content":"                int len \u003d list.size();"},{"lineNumber":156,"author":{"gitId":"XindiTian"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":157,"author":{"gitId":"XindiTian"},"content":"                System.out.println(\"\\t\" + dl);"},{"lineNumber":158,"author":{"gitId":"XindiTian"},"content":"                System.out.println(\"Now you have \" + len + \" tasks in the list.\");"},{"lineNumber":159,"author":{"gitId":"XindiTian"},"content":"                try {"},{"lineNumber":160,"author":{"gitId":"XindiTian"},"content":"                    Storage.appendToFile(file,  \"Deadline:\" + \" 0\"+ line + \"\\n\");"},{"lineNumber":161,"author":{"gitId":"XindiTian"},"content":"                } catch (IOException e) {"},{"lineNumber":162,"author":{"gitId":"XindiTian"},"content":"                    System.out.println(\"OOPS!!! \" + e.getMessage());"},{"lineNumber":163,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":164,"author":{"gitId":"XindiTian"},"content":"            } catch (DukeException ex){"},{"lineNumber":165,"author":{"gitId":"XindiTian"},"content":"                System.err.println(\"OOPS!!! The description of a deadline cannot be empty.\\n\");"},{"lineNumber":166,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":167,"author":{"gitId":"XindiTian"},"content":"        } else if (input.equals(\"event\")) {"},{"lineNumber":168,"author":{"gitId":"XindiTian"},"content":"            String line \u003d sc.nextLine();"},{"lineNumber":169,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":170,"author":{"gitId":"XindiTian"},"content":"                Event event \u003d Event.makeEvent(line);"},{"lineNumber":171,"author":{"gitId":"XindiTian"},"content":"                list.add(event);"},{"lineNumber":172,"author":{"gitId":"XindiTian"},"content":"                int len \u003d list.size();"},{"lineNumber":173,"author":{"gitId":"XindiTian"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":174,"author":{"gitId":"XindiTian"},"content":"                System.out.println(\"\\t\" + event);"},{"lineNumber":175,"author":{"gitId":"XindiTian"},"content":"                System.out.println(\"Now you have \" + len + \" tasks in the list.\");"},{"lineNumber":176,"author":{"gitId":"XindiTian"},"content":"                try {"},{"lineNumber":177,"author":{"gitId":"XindiTian"},"content":"                    Storage.writeToFile(file, \"Event:\" + \" 0\" + line + \"\\n\");"},{"lineNumber":178,"author":{"gitId":"XindiTian"},"content":"                } catch (IOException e) {"},{"lineNumber":179,"author":{"gitId":"XindiTian"},"content":"                    System.out.println(\"OOPS!!! \" + e.getMessage());"},{"lineNumber":180,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":181,"author":{"gitId":"XindiTian"},"content":"            } catch (DukeException ex) {"},{"lineNumber":182,"author":{"gitId":"XindiTian"},"content":"                System.err.println(\"OOPS!!! The description of an event cannot be empty.\\n\");"},{"lineNumber":183,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":184,"author":{"gitId":"XindiTian"},"content":"        } else if (input.equals(\"find\")) {"},{"lineNumber":185,"author":{"gitId":"XindiTian"},"content":"            String keyword \u003d sc.next();"},{"lineNumber":186,"author":{"gitId":"XindiTian"},"content":"            int matchCount \u003d 0;"},{"lineNumber":187,"author":{"gitId":"XindiTian"},"content":"            ArrayList\u003cInteger\u003e num \u003d new ArrayList\u003c\u003e();"},{"lineNumber":188,"author":{"gitId":"XindiTian"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":189,"author":{"gitId":"XindiTian"},"content":"                String taskDes \u003d list.get(i).des;"},{"lineNumber":190,"author":{"gitId":"XindiTian"},"content":"                if (taskDes.toLowerCase().indexOf(keyword.toLowerCase()) !\u003d -1) {"},{"lineNumber":191,"author":{"gitId":"XindiTian"},"content":"                    num.add(i);"},{"lineNumber":192,"author":{"gitId":"XindiTian"},"content":"                    matchCount++;"},{"lineNumber":193,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":194,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":195,"author":{"gitId":"XindiTian"},"content":"            if (matchCount !\u003d 0) {"},{"lineNumber":196,"author":{"gitId":"XindiTian"},"content":"                System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":197,"author":{"gitId":"XindiTian"},"content":"                for (int j \u003d 0; j \u003c num.size(); j++) {"},{"lineNumber":198,"author":{"gitId":"XindiTian"},"content":"                    System.out.println(list.get(num.get(j)));"},{"lineNumber":199,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":200,"author":{"gitId":"XindiTian"},"content":"            } else {"},{"lineNumber":201,"author":{"gitId":"XindiTian"},"content":"                System.out.println(\"There are no tasks matching this keyword :-(\");"},{"lineNumber":202,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":203,"author":{"gitId":"XindiTian"},"content":"        } else {"},{"lineNumber":204,"author":{"gitId":"XindiTian"},"content":"            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"},{"lineNumber":205,"author":{"gitId":"XindiTian"},"content":"        }"},{"lineNumber":206,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":208,"author":{"gitId":"XindiTian"},"content":"    public static String guiTask(String[] input, ArrayList\u003cTask\u003e list) {"},{"lineNumber":209,"author":{"gitId":"XindiTian"},"content":"        Storage store \u003d new Storage();"},{"lineNumber":210,"author":{"gitId":"XindiTian"},"content":"        String home \u003d store.getHome();"},{"lineNumber":211,"author":{"gitId":"XindiTian"},"content":"        String file \u003d store.getDefaultFilePath();"},{"lineNumber":212,"author":{"gitId":"XindiTian"},"content":"        if (input[0].equals(\"list\")) {"},{"lineNumber":213,"author":{"gitId":"XindiTian"},"content":"            String output \u003d \"Here are the tasks in your list\\n\";"},{"lineNumber":214,"author":{"gitId":"XindiTian"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":215,"author":{"gitId":"XindiTian"},"content":"                int count \u003d i + 1;"},{"lineNumber":216,"author":{"gitId":"XindiTian"},"content":"                Task a \u003d list.get(i);"},{"lineNumber":217,"author":{"gitId":"XindiTian"},"content":"                output \u003d output + count + \". \" + a + \"\\n\";"},{"lineNumber":218,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":219,"author":{"gitId":"XindiTian"},"content":"            return output;"},{"lineNumber":220,"author":{"gitId":"XindiTian"},"content":"        } else if (input[0].equals(\"done\")) {"},{"lineNumber":221,"author":{"gitId":"XindiTian"},"content":"            int tag \u003d Integer.parseInt(input[1]) - 1;"},{"lineNumber":222,"author":{"gitId":"XindiTian"},"content":"            Task d \u003d list.get(tag);"},{"lineNumber":223,"author":{"gitId":"XindiTian"},"content":"            d.markAsDone();"},{"lineNumber":224,"author":{"gitId":"XindiTian"},"content":"            String output \u003d \"Nice! I\u0027ve marked this task as done: \\n\";"},{"lineNumber":225,"author":{"gitId":"XindiTian"},"content":"            output \u003d output + d + \"\\n\";"},{"lineNumber":226,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":227,"author":{"gitId":"XindiTian"},"content":"            String temp \u003d home + File.separator + \"temp.txt\";"},{"lineNumber":228,"author":{"gitId":"XindiTian"},"content":"            //create temp file"},{"lineNumber":229,"author":{"gitId":"XindiTian"},"content":"            File tempf \u003d new File(temp);"},{"lineNumber":230,"author":{"gitId":"XindiTian"},"content":"            //copy contents of old file to temp file"},{"lineNumber":231,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":232,"author":{"gitId":"XindiTian"},"content":"                Files.copy(Paths.get(file), Paths.get(temp));"},{"lineNumber":233,"author":{"gitId":"XindiTian"},"content":"            } catch (IOException e) {"},{"lineNumber":234,"author":{"gitId":"XindiTian"},"content":"                e.printStackTrace();"},{"lineNumber":235,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":236,"author":{"gitId":"XindiTian"},"content":"            //delete contents of old file"},{"lineNumber":237,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":238,"author":{"gitId":"XindiTian"},"content":"                new FileWriter(file, false).close();"},{"lineNumber":239,"author":{"gitId":"XindiTian"},"content":"            } catch (IOException e) {"},{"lineNumber":240,"author":{"gitId":"XindiTian"},"content":"                e.printStackTrace();"},{"lineNumber":241,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":242,"author":{"gitId":"XindiTian"},"content":"            Scanner sf \u003d null;"},{"lineNumber":243,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":244,"author":{"gitId":"XindiTian"},"content":"                sf \u003d new Scanner(tempf);"},{"lineNumber":245,"author":{"gitId":"XindiTian"},"content":"            } catch (FileNotFoundException e) {"},{"lineNumber":246,"author":{"gitId":"XindiTian"},"content":"                e.printStackTrace();"},{"lineNumber":247,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":248,"author":{"gitId":"XindiTian"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":249,"author":{"gitId":"XindiTian"},"content":"                Task t \u003d list.get(i);"},{"lineNumber":250,"author":{"gitId":"XindiTian"},"content":"                if (i !\u003d tag) {"},{"lineNumber":251,"author":{"gitId":"XindiTian"},"content":"                    try {"},{"lineNumber":252,"author":{"gitId":"XindiTian"},"content":"                        store.appendToFile(file, sf.nextLine() + \"\\n\");"},{"lineNumber":253,"author":{"gitId":"XindiTian"},"content":"                    } catch (IOException e){"},{"lineNumber":254,"author":{"gitId":"XindiTian"},"content":"                        System.out.println(\"OOPS!!! \" + e.getMessage());"},{"lineNumber":255,"author":{"gitId":"XindiTian"},"content":"                    }"},{"lineNumber":256,"author":{"gitId":"XindiTian"},"content":"                } else {"},{"lineNumber":257,"author":{"gitId":"XindiTian"},"content":"                    try {"},{"lineNumber":258,"author":{"gitId":"XindiTian"},"content":"                        t.markAsDone();"},{"lineNumber":259,"author":{"gitId":"XindiTian"},"content":"                        Storage.appendToFile(file, \"(DONE)\" + sf.nextLine() + \"\\n\");"},{"lineNumber":260,"author":{"gitId":"XindiTian"},"content":"                    } catch (IOException e){"},{"lineNumber":261,"author":{"gitId":"XindiTian"},"content":"                        System.out.println(\"OOPS!!! \" + e.getMessage());"},{"lineNumber":262,"author":{"gitId":"XindiTian"},"content":"                    }"},{"lineNumber":263,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":264,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":265,"author":{"gitId":"XindiTian"},"content":"            //delete temp file"},{"lineNumber":266,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":267,"author":{"gitId":"XindiTian"},"content":"                Files.delete(Paths.get(temp));"},{"lineNumber":268,"author":{"gitId":"XindiTian"},"content":"            } catch (IOException e) {"},{"lineNumber":269,"author":{"gitId":"XindiTian"},"content":"                e.printStackTrace();"},{"lineNumber":270,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":271,"author":{"gitId":"XindiTian"},"content":"            return output;"},{"lineNumber":272,"author":{"gitId":"XindiTian"},"content":"        } else if (input[0].equals(\"delete\")) {"},{"lineNumber":273,"author":{"gitId":"XindiTian"},"content":"            int tag \u003d Integer.parseInt(input[1]) - 1;"},{"lineNumber":274,"author":{"gitId":"XindiTian"},"content":"            int len \u003d list.size() - 1;"},{"lineNumber":275,"author":{"gitId":"XindiTian"},"content":"            String output \u003d \"Noted. I\u0027ve removed this task:\\n\";"},{"lineNumber":276,"author":{"gitId":"XindiTian"},"content":"            output \u003d output + \"\\t\" + list.get(tag) + \"\\n\";"},{"lineNumber":277,"author":{"gitId":"XindiTian"},"content":"            output \u003d output + \"Now you have \" + len + \"tasks in the list. \\n\";"},{"lineNumber":278,"author":{"gitId":"XindiTian"},"content":"            list.remove(tag);"},{"lineNumber":279,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":280,"author":{"gitId":"XindiTian"},"content":"            String temp \u003d home + File.separator + \"temp.txt\";"},{"lineNumber":281,"author":{"gitId":"XindiTian"},"content":"            //create temp file"},{"lineNumber":282,"author":{"gitId":"XindiTian"},"content":"            File tempf \u003d new File(temp);"},{"lineNumber":283,"author":{"gitId":"XindiTian"},"content":"            //copy contents of old file to temp file"},{"lineNumber":284,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":285,"author":{"gitId":"XindiTian"},"content":"                Files.copy(Paths.get(file), Paths.get(temp));"},{"lineNumber":286,"author":{"gitId":"XindiTian"},"content":"            } catch (IOException e) {"},{"lineNumber":287,"author":{"gitId":"XindiTian"},"content":"                e.printStackTrace();"},{"lineNumber":288,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":289,"author":{"gitId":"XindiTian"},"content":"            //delete contents of old file"},{"lineNumber":290,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":291,"author":{"gitId":"XindiTian"},"content":"                new FileWriter(file, false).close();"},{"lineNumber":292,"author":{"gitId":"XindiTian"},"content":"            } catch (IOException e) {"},{"lineNumber":293,"author":{"gitId":"XindiTian"},"content":"                e.printStackTrace();"},{"lineNumber":294,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":295,"author":{"gitId":"XindiTian"},"content":"            Scanner sf \u003d null;"},{"lineNumber":296,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":297,"author":{"gitId":"XindiTian"},"content":"                sf \u003d new Scanner(tempf);"},{"lineNumber":298,"author":{"gitId":"XindiTian"},"content":"            } catch (FileNotFoundException e) {"},{"lineNumber":299,"author":{"gitId":"XindiTian"},"content":"                e.printStackTrace();"},{"lineNumber":300,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":301,"author":{"gitId":"XindiTian"},"content":"            for (int i \u003d 0; i \u003c\u003d len; i++) {"},{"lineNumber":302,"author":{"gitId":"XindiTian"},"content":"                if (i !\u003d tag) {"},{"lineNumber":303,"author":{"gitId":"XindiTian"},"content":"                    try {"},{"lineNumber":304,"author":{"gitId":"XindiTian"},"content":"                        Storage.appendToFile(file,  sf.nextLine() + \"\\n\");"},{"lineNumber":305,"author":{"gitId":"XindiTian"},"content":"                    } catch (IOException e){"},{"lineNumber":306,"author":{"gitId":"XindiTian"},"content":"                        System.out.println(\"OOPS!!! \" + e.getMessage());"},{"lineNumber":307,"author":{"gitId":"XindiTian"},"content":"                    }"},{"lineNumber":308,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":309,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":310,"author":{"gitId":"XindiTian"},"content":"            //delete temp file"},{"lineNumber":311,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":312,"author":{"gitId":"XindiTian"},"content":"                Files.delete(Paths.get(temp));"},{"lineNumber":313,"author":{"gitId":"XindiTian"},"content":"            } catch (IOException e) {"},{"lineNumber":314,"author":{"gitId":"XindiTian"},"content":"                e.printStackTrace();"},{"lineNumber":315,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":316,"author":{"gitId":"XindiTian"},"content":"            return output;"},{"lineNumber":317,"author":{"gitId":"XindiTian"},"content":"        } else if (input[0].equals(\"todo\")) {"},{"lineNumber":318,"author":{"gitId":"XindiTian"},"content":"            String task \u003d \"\";"},{"lineNumber":319,"author":{"gitId":"XindiTian"},"content":"            if (input.length \u003d\u003d 1) {"},{"lineNumber":320,"author":{"gitId":"XindiTian"},"content":"                return \"OOPS!!! The description of a todo cannot be empty.\\n\";"},{"lineNumber":321,"author":{"gitId":"XindiTian"},"content":"            } else {"},{"lineNumber":322,"author":{"gitId":"XindiTian"},"content":"                for (int i \u003d 1; i \u003c input.length; i++) {"},{"lineNumber":323,"author":{"gitId":"XindiTian"},"content":"                    task \u003d task + input[i] + \" \";"},{"lineNumber":324,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":325,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":326,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":327,"author":{"gitId":"XindiTian"},"content":"                Todo td \u003d Todo.makeTodo(task);"},{"lineNumber":328,"author":{"gitId":"XindiTian"},"content":"                list.add(td);"},{"lineNumber":329,"author":{"gitId":"XindiTian"},"content":"                int len \u003d list.size();"},{"lineNumber":330,"author":{"gitId":"XindiTian"},"content":"                String output \u003d \"Got it. I\u0027ve added this task: \\n\";"},{"lineNumber":331,"author":{"gitId":"XindiTian"},"content":"                output \u003d output + \"\\t\" + td + \"\\n\";"},{"lineNumber":332,"author":{"gitId":"XindiTian"},"content":"                output \u003d output + \"Now you have \" + len + \" tasks in the list.\\n\";"},{"lineNumber":333,"author":{"gitId":"XindiTian"},"content":"                try {"},{"lineNumber":334,"author":{"gitId":"XindiTian"},"content":"                    Storage.appendToFile(file, \"Todo:\" + \" 0\" + task + \"\\n\");"},{"lineNumber":335,"author":{"gitId":"XindiTian"},"content":"                } catch (IOException e) {"},{"lineNumber":336,"author":{"gitId":"XindiTian"},"content":"                    return \"OOPS!!! \" + e.getMessage();"},{"lineNumber":337,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":338,"author":{"gitId":"XindiTian"},"content":"                return output;"},{"lineNumber":339,"author":{"gitId":"XindiTian"},"content":"            } catch (DukeException ex){"},{"lineNumber":340,"author":{"gitId":"XindiTian"},"content":"                return \"OOPS!!! The description of a todo cannot be empty.\\n\";"},{"lineNumber":341,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":342,"author":{"gitId":"XindiTian"},"content":"        } else if (input[0].equals(\"deadline\")) {"},{"lineNumber":343,"author":{"gitId":"XindiTian"},"content":"            String line \u003d \"\";"},{"lineNumber":344,"author":{"gitId":"XindiTian"},"content":"            if (input.length \u003d\u003d 1) {"},{"lineNumber":345,"author":{"gitId":"XindiTian"},"content":"                return \"OOPS!!! The description of a deadline cannot be empty.\\n\";"},{"lineNumber":346,"author":{"gitId":"XindiTian"},"content":"            } else {"},{"lineNumber":347,"author":{"gitId":"XindiTian"},"content":"                for (int i \u003d 1; i \u003c input.length; i++) {"},{"lineNumber":348,"author":{"gitId":"XindiTian"},"content":"                    line \u003d line + input[i] + \" \";"},{"lineNumber":349,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":350,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":351,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":352,"author":{"gitId":"XindiTian"},"content":"                Deadline dl \u003d Deadline.makeDeadline(line);"},{"lineNumber":353,"author":{"gitId":"XindiTian"},"content":"                list.add(dl);"},{"lineNumber":354,"author":{"gitId":"XindiTian"},"content":"                int len \u003d list.size();"},{"lineNumber":355,"author":{"gitId":"XindiTian"},"content":"                String output \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":356,"author":{"gitId":"XindiTian"},"content":"                output \u003d output + \"\\t\" + dl + \"\\n\";"},{"lineNumber":357,"author":{"gitId":"XindiTian"},"content":"                output \u003d output+ \"Now you have \" + len + \" tasks in the list.\\n\";"},{"lineNumber":358,"author":{"gitId":"XindiTian"},"content":"                try {"},{"lineNumber":359,"author":{"gitId":"XindiTian"},"content":"                    Storage.appendToFile(file,  \"Deadline:\" + \" 0\"+ line + \"\\n\");"},{"lineNumber":360,"author":{"gitId":"XindiTian"},"content":"                } catch (IOException e) {"},{"lineNumber":361,"author":{"gitId":"XindiTian"},"content":"                    return \"OOPS!!! \" + e.getMessage();"},{"lineNumber":362,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":363,"author":{"gitId":"XindiTian"},"content":"                return output;"},{"lineNumber":364,"author":{"gitId":"XindiTian"},"content":"            } catch (DukeException ex){"},{"lineNumber":365,"author":{"gitId":"XindiTian"},"content":"                return \"OOPS!!! The description of a deadline cannot be empty.\\n\";"},{"lineNumber":366,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":367,"author":{"gitId":"XindiTian"},"content":"        } else if (input[0].equals(\"event\")) {"},{"lineNumber":368,"author":{"gitId":"XindiTian"},"content":"            String line \u003d \"\";"},{"lineNumber":369,"author":{"gitId":"XindiTian"},"content":"            if (input.length \u003d\u003d 1) {"},{"lineNumber":370,"author":{"gitId":"XindiTian"},"content":"                return \"OOPS!!! The description of an event cannot be empty.\\n\";"},{"lineNumber":371,"author":{"gitId":"XindiTian"},"content":"            } else {"},{"lineNumber":372,"author":{"gitId":"XindiTian"},"content":"                for (int i \u003d 1; i \u003c input.length; i++) {"},{"lineNumber":373,"author":{"gitId":"XindiTian"},"content":"                    line \u003d line + input[i] + \" \";"},{"lineNumber":374,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":375,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":376,"author":{"gitId":"XindiTian"},"content":"            try {"},{"lineNumber":377,"author":{"gitId":"XindiTian"},"content":"                Event event \u003d Event.makeEvent(line);"},{"lineNumber":378,"author":{"gitId":"XindiTian"},"content":"                list.add(event);"},{"lineNumber":379,"author":{"gitId":"XindiTian"},"content":"                int len \u003d list.size();"},{"lineNumber":380,"author":{"gitId":"XindiTian"},"content":"                String output \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":381,"author":{"gitId":"XindiTian"},"content":"                output \u003d output + \"\\t\" + event + \"\\n\";"},{"lineNumber":382,"author":{"gitId":"XindiTian"},"content":"                output \u003d output+ \"Now you have \" + len + \" tasks in the list.\\n\";"},{"lineNumber":383,"author":{"gitId":"XindiTian"},"content":"                try {"},{"lineNumber":384,"author":{"gitId":"XindiTian"},"content":"                    Storage.writeToFile(file, \"Event:\" + \" 0\" + line + \"\\n\");"},{"lineNumber":385,"author":{"gitId":"XindiTian"},"content":"                } catch (IOException e) {"},{"lineNumber":386,"author":{"gitId":"XindiTian"},"content":"                    System.out.println(\"OOPS!!! \" + e.getMessage());"},{"lineNumber":387,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":388,"author":{"gitId":"XindiTian"},"content":"                return output;"},{"lineNumber":389,"author":{"gitId":"XindiTian"},"content":"            } catch (DukeException ex) {"},{"lineNumber":390,"author":{"gitId":"XindiTian"},"content":"                return \"OOPS!!! The description of an event cannot be empty.\\n\";"},{"lineNumber":391,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":392,"author":{"gitId":"XindiTian"},"content":"        } else if (input[0].equals(\"find\")) {"},{"lineNumber":393,"author":{"gitId":"XindiTian"},"content":"            String keyword \u003d input[1];"},{"lineNumber":394,"author":{"gitId":"XindiTian"},"content":"            int matchCount \u003d 0;"},{"lineNumber":395,"author":{"gitId":"XindiTian"},"content":"            ArrayList\u003cInteger\u003e num \u003d new ArrayList\u003c\u003e();"},{"lineNumber":396,"author":{"gitId":"XindiTian"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":397,"author":{"gitId":"XindiTian"},"content":"                String taskDes \u003d list.get(i).des;"},{"lineNumber":398,"author":{"gitId":"XindiTian"},"content":"                if (taskDes.toLowerCase().indexOf(keyword.toLowerCase()) !\u003d -1) {"},{"lineNumber":399,"author":{"gitId":"XindiTian"},"content":"                    num.add(i);"},{"lineNumber":400,"author":{"gitId":"XindiTian"},"content":"                    matchCount++;"},{"lineNumber":401,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":402,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":403,"author":{"gitId":"XindiTian"},"content":"            if (matchCount !\u003d 0) {"},{"lineNumber":404,"author":{"gitId":"XindiTian"},"content":"                String output \u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":405,"author":{"gitId":"XindiTian"},"content":"                for (int j \u003d 0; j \u003c num.size(); j++) {"},{"lineNumber":406,"author":{"gitId":"XindiTian"},"content":"                    output \u003d output + list.get(num.get(j)) + \"\\n\";"},{"lineNumber":407,"author":{"gitId":"XindiTian"},"content":"                }"},{"lineNumber":408,"author":{"gitId":"XindiTian"},"content":"                return output;"},{"lineNumber":409,"author":{"gitId":"XindiTian"},"content":"            } else {"},{"lineNumber":410,"author":{"gitId":"XindiTian"},"content":"                return \"There are no tasks matching this keyword :-(\\n\";"},{"lineNumber":411,"author":{"gitId":"XindiTian"},"content":"            }"},{"lineNumber":412,"author":{"gitId":"XindiTian"},"content":"        } else {"},{"lineNumber":413,"author":{"gitId":"XindiTian"},"content":"            assert input.length \u003d\u003d 1 : \"Oops!! What are you trying to say?\";"},{"lineNumber":414,"author":{"gitId":"XindiTian"},"content":"            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"},{"lineNumber":415,"author":{"gitId":"XindiTian"},"content":"        }"},{"lineNumber":416,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":417,"author":{"gitId":"XindiTian"},"content":"}"}],"authorContributionMap":{"XindiTian":417}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"public class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"    public Todo(String des) {"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"        super(des);"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"     * makes a todo with the string given"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"     * @param task input string containing task description"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"     * @return a Todo"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"     * @throws DukeException"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"    public static Todo makeTodo(String task) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"        if (task.equals(\"\")) {"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"            throw new DukeException(\"☹ OOPS!!!The description of a todo cannot be empty.\\n\");"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"        } else {"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"            return new Todo(task);"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"XindiTian"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":24,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"XindiTian"},"content":"}"}],"authorContributionMap":{"XindiTian":25}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"public class Ui {"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"    public Ui(){}"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"    public static void prints(String str) {"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"        System.out.println(str);"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"}"}],"authorContributionMap":{"XindiTian":8}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"XindiTian":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"XindiTian":19}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"public class StorageTest {"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"    public void dummyTest() {"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"        assertEquals(2, 2);"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"    public void test1() {"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"        String expected \u003d \"C:\" + File.separator + \"Users\" + File.separator + \"xindi\";"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"        assertEquals(expected, Storage.getHome());"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":18,"author":{"gitId":"XindiTian"},"content":"    public void test2() {"},{"lineNumber":19,"author":{"gitId":"XindiTian"},"content":"        String expected \u003d \"C:\" + File.separator + \"Users\" + File.separator + \"xindi\" + File.separator + \"task.txt\";"},{"lineNumber":20,"author":{"gitId":"XindiTian"},"content":"        assertEquals(expected, Storage.getDefaultFilePath());"},{"lineNumber":21,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"XindiTian"},"content":"}"}],"authorContributionMap":{"XindiTian":22}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"public class TaskListTest {"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"    public void dummyTest() {"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"        assertEquals(2, 2);"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":""},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"    /*"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"    public void test() {"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"        String expected \u003d \"Got it. I\u0027ve added this task:\\n\\t[T][ ]  read book\\nNow you have 1 tasks in the list.\""},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"        assertEquals(expected, TaskList.createTask(\"todo\"));"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"XindiTian"},"content":"}"}],"authorContributionMap":{"XindiTian":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"XindiTian"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"XindiTian"},"content":"deadline Homework /by 12am"},{"lineNumber":3,"author":{"gitId":"XindiTian"},"content":"event picnic /at garden"},{"lineNumber":4,"author":{"gitId":"XindiTian"},"content":"todo return book"},{"lineNumber":5,"author":{"gitId":"XindiTian"},"content":"todo feed the cat"},{"lineNumber":6,"author":{"gitId":"XindiTian"},"content":"todo"},{"lineNumber":7,"author":{"gitId":"XindiTian"},"content":"water"},{"lineNumber":8,"author":{"gitId":"XindiTian"},"content":"todo water the plants"},{"lineNumber":9,"author":{"gitId":"XindiTian"},"content":"list"},{"lineNumber":10,"author":{"gitId":"XindiTian"},"content":"done 2"},{"lineNumber":11,"author":{"gitId":"XindiTian"},"content":"done 3"},{"lineNumber":12,"author":{"gitId":"XindiTian"},"content":"list"},{"lineNumber":13,"author":{"gitId":"XindiTian"},"content":"delete2"},{"lineNumber":14,"author":{"gitId":"XindiTian"},"content":"delete 2"},{"lineNumber":15,"author":{"gitId":"XindiTian"},"content":"lst"},{"lineNumber":16,"author":{"gitId":"XindiTian"},"content":"list"}],"authorContributionMap":{"XindiTian":16}}]
