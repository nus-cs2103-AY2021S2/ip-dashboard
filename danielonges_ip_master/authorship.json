[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"# ToDoBeast project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"1. After that, locate the `src/main/java/ToDoBeast.java` file, right-click it, and choose `Run ToDoBeast.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"danielonges":2,"-":21}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"    private String time;"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"    public Deadline(String taskDescription, String time) {"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"        super(taskDescription);"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"        this.time \u003d time;"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"        return \"[D][\" + (done ? \"X\" : \" \") + \"] \" + taskDescription + \" (\" + time + \")\";"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"}"}],"authorContributionMap":{"danielonges":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"    private String time;"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"    public Event(String taskDescription, String time) {"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"        super(taskDescription);"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"        this.time \u003d time;"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"        return \"[E][\" + (done ? \"X\" : \" \") + \"] \" + taskDescription + \" (\" + time + \")\";"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"}"}],"authorContributionMap":{"danielonges":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"    protected String taskDescription;"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"    protected boolean done;"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"    public Task(String taskDescription) {"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"        done \u003d false;"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"    public void setDone() {"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"        done \u003d true;"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"        return \"[\" + (done ? \"X\" : \" \") + \"] \" + taskDescription;"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"}"}],"authorContributionMap":{"danielonges":18}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"public class TaskManager {"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"    public List\u003cTask\u003e taskList;"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"    public TaskManager() {"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"    public void addTask(Task task) {"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"        taskList.add(task);"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"    public Task getTask(int taskNumber) {"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"        return taskList.get(taskNumber - 1);"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"    public int getNumOfTasks() {"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"        return taskList.size();"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"    public void deleteTask(int taskNumber) {"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"        taskList.remove(taskNumber - 1);"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"    public List\u003cTask\u003e getTaskList() {"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"        return taskList;"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"}"}],"authorContributionMap":{"danielonges":31}},{"path":"src/main/java/ToDoBeast.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"public class ToDoBeast {"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"    static String line \u003d \"\\t________________________________________________________________\\n\";"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"    TaskManager taskManager;"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"    Scanner sc;"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"    public ToDoBeast() {"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"        taskManager \u003d new TaskManager();"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"    public void runApplication() {"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"        greetUser();"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"        String[] userInput \u003d sc.nextLine().split(\" \", 2);"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"        String command \u003d userInput[0];"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"        while (!command.equals(\"bye\")) {"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"            try {"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"                checkUserInput(userInput);"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"                if (command.equals(\"list\")) {"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"                    printTaskList(taskManager.getTaskList());"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"                }"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"                else if (command.equals(\"done\")){"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"                    Task currentTask \u003d taskManager.getTask(Integer.parseInt(userInput[1]));"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"                    currentTask.setDone();"},{"lineNumber":28,"author":{"gitId":"danielonges"},"content":"                    System.out.println(line + \"\\tGood job! You\u0027ve just completed this task:\\n\" + \"\\t\\t\" + currentTask + \"\\n\" + line);"},{"lineNumber":29,"author":{"gitId":"danielonges"},"content":"                }"},{"lineNumber":30,"author":{"gitId":"danielonges"},"content":"                else if (command.equals(\"delete\")){"},{"lineNumber":31,"author":{"gitId":"danielonges"},"content":"                    int taskNumber \u003d Integer.parseInt(userInput[1]);"},{"lineNumber":32,"author":{"gitId":"danielonges"},"content":"                    Task deletedTask \u003d taskManager.getTask(taskNumber);"},{"lineNumber":33,"author":{"gitId":"danielonges"},"content":"                    taskManager.deleteTask(taskNumber);"},{"lineNumber":34,"author":{"gitId":"danielonges"},"content":"                    System.out.println(line + \"\\tGot it! I\u0027ve removed this task for you:\\n\\t\\t\" + deletedTask + \"\\n\" + \"\\tYou now have \" + taskManager.getNumOfTasks() + \" tasks in total.\\n\" + line);"},{"lineNumber":35,"author":{"gitId":"danielonges"},"content":"                }"},{"lineNumber":36,"author":{"gitId":"danielonges"},"content":"                else {"},{"lineNumber":37,"author":{"gitId":"danielonges"},"content":"                    Task newTask \u003d null;"},{"lineNumber":38,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":39,"author":{"gitId":"danielonges"},"content":"                    switch (command) {"},{"lineNumber":40,"author":{"gitId":"danielonges"},"content":"                        case \"todo\":"},{"lineNumber":41,"author":{"gitId":"danielonges"},"content":"                            newTask \u003d new Todo(userInput[1]);"},{"lineNumber":42,"author":{"gitId":"danielonges"},"content":"                            break;"},{"lineNumber":43,"author":{"gitId":"danielonges"},"content":"                        case \"deadline\": {"},{"lineNumber":44,"author":{"gitId":"danielonges"},"content":"                            String[] deadlineParams \u003d userInput[1].split(\" /\");"},{"lineNumber":45,"author":{"gitId":"danielonges"},"content":"                            newTask \u003d new Deadline(deadlineParams[0], deadlineParams[1]);"},{"lineNumber":46,"author":{"gitId":"danielonges"},"content":"                            break;"},{"lineNumber":47,"author":{"gitId":"danielonges"},"content":"                        }"},{"lineNumber":48,"author":{"gitId":"danielonges"},"content":"                        case \"event\": {"},{"lineNumber":49,"author":{"gitId":"danielonges"},"content":"                            String[] deadlineParams \u003d userInput[1].split(\" /\");"},{"lineNumber":50,"author":{"gitId":"danielonges"},"content":"                            newTask \u003d new Event(deadlineParams[0], deadlineParams[1]);"},{"lineNumber":51,"author":{"gitId":"danielonges"},"content":"                            break;"},{"lineNumber":52,"author":{"gitId":"danielonges"},"content":"                        }"},{"lineNumber":53,"author":{"gitId":"danielonges"},"content":"                    }"},{"lineNumber":54,"author":{"gitId":"danielonges"},"content":"                    taskManager.addTask(newTask);"},{"lineNumber":55,"author":{"gitId":"danielonges"},"content":"                    System.out.println(line + \"\\tOne more task added to the hustle:\\n\\t\\t\" + newTask + \"\\n\" + \"\\tYou now have \" + taskManager.getNumOfTasks() + \" tasks in total.\\n\" + line);"},{"lineNumber":56,"author":{"gitId":"danielonges"},"content":"                    }"},{"lineNumber":57,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":58,"author":{"gitId":"danielonges"},"content":"            } catch (ToDoBeastException e) {"},{"lineNumber":59,"author":{"gitId":"danielonges"},"content":"                System.out.println(line + \"\\t\" + e.getMessage() + \"\\n\" + line);"},{"lineNumber":60,"author":{"gitId":"danielonges"},"content":"            } finally {"},{"lineNumber":61,"author":{"gitId":"danielonges"},"content":"                userInput \u003d sc.nextLine().split(\" \", 2);"},{"lineNumber":62,"author":{"gitId":"danielonges"},"content":"                command \u003d userInput[0];"},{"lineNumber":63,"author":{"gitId":"danielonges"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"danielonges"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"danielonges"},"content":"        exit();"},{"lineNumber":66,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":68,"author":{"gitId":"danielonges"},"content":"    public static void main(String[] args) {"},{"lineNumber":69,"author":{"gitId":"danielonges"},"content":"        ToDoBeast toDoBeast \u003d new ToDoBeast();"},{"lineNumber":70,"author":{"gitId":"danielonges"},"content":"        toDoBeast.runApplication();"},{"lineNumber":71,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":73,"author":{"gitId":"danielonges"},"content":"    public void checkUserInput(String[] userInput) throws ToDoBeastException {"},{"lineNumber":74,"author":{"gitId":"danielonges"},"content":"        String command \u003d userInput[0];"},{"lineNumber":75,"author":{"gitId":"danielonges"},"content":"        if ((command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")) \u0026\u0026 userInput.length \u003d\u003d 1) {"},{"lineNumber":76,"author":{"gitId":"danielonges"},"content":"            throw new ToDoBeastException(\"OOPS :( !!! The description of a \" + command + \" cannot be empty.\");"},{"lineNumber":77,"author":{"gitId":"danielonges"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"danielonges"},"content":"        else if (command.equals(\"deadline\") || command.equals(\"event\")) {"},{"lineNumber":79,"author":{"gitId":"danielonges"},"content":"            String[] testParams \u003d userInput[1].split(\" /\");"},{"lineNumber":80,"author":{"gitId":"danielonges"},"content":"            if (testParams.length \u003d\u003d 1) {"},{"lineNumber":81,"author":{"gitId":"danielonges"},"content":"                throw new ToDoBeastException(\"OOPS :( !!! Invalid format for time/date input.\");"},{"lineNumber":82,"author":{"gitId":"danielonges"},"content":"            } else {"},{"lineNumber":83,"author":{"gitId":"danielonges"},"content":"                if (!testParams[1].startsWith(\"by\") \u0026\u0026 command.equals(\"deadline\")) {"},{"lineNumber":84,"author":{"gitId":"danielonges"},"content":"                    throw new ToDoBeastException(\"OOPS :( !!! Time/date input for deadlines should start with /by.\");"},{"lineNumber":85,"author":{"gitId":"danielonges"},"content":"                } else if (!testParams[1].startsWith(\"at\") \u0026\u0026 command.equals(\"event\")) {"},{"lineNumber":86,"author":{"gitId":"danielonges"},"content":"                    throw new ToDoBeastException(\"OOPS :( !!! Time/date input for events should start with /at.\");"},{"lineNumber":87,"author":{"gitId":"danielonges"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"danielonges"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"danielonges"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"danielonges"},"content":"        else if (command.equals(\"done\") || command.equals(\"delete\")) {"},{"lineNumber":91,"author":{"gitId":"danielonges"},"content":"            if (userInput.length \u003d\u003d 1) {"},{"lineNumber":92,"author":{"gitId":"danielonges"},"content":"                throw new ToDoBeastException(\"OOPS :( !!! The \" + command + \" command requires the index of the task to be processed.\");"},{"lineNumber":93,"author":{"gitId":"danielonges"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"danielonges"},"content":"            try {"},{"lineNumber":95,"author":{"gitId":"danielonges"},"content":"                int taskNumber \u003d Integer.parseInt(userInput[1]);"},{"lineNumber":96,"author":{"gitId":"danielonges"},"content":"                if (taskNumber \u003e taskManager.getNumOfTasks() || taskNumber \u003c\u003d 0) {"},{"lineNumber":97,"author":{"gitId":"danielonges"},"content":"                    throw new ToDoBeastException(\"OOPS :( !!! Task index provided is not present in the list.\");"},{"lineNumber":98,"author":{"gitId":"danielonges"},"content":"                }"},{"lineNumber":99,"author":{"gitId":"danielonges"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":100,"author":{"gitId":"danielonges"},"content":"                throw new ToDoBeastException(\"OOPS :( !!! Task index provided is not a number.\");"},{"lineNumber":101,"author":{"gitId":"danielonges"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"danielonges"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"danielonges"},"content":"        else if (!isValidCommand(command)) {"},{"lineNumber":104,"author":{"gitId":"danielonges"},"content":"            throw new ToDoBeastException(\"OOPS :( !!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":105,"author":{"gitId":"danielonges"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":108,"author":{"gitId":"danielonges"},"content":"    public boolean isValidCommand(String command) {"},{"lineNumber":109,"author":{"gitId":"danielonges"},"content":"        return command.equals(\"bye\") || command.equals(\"list\") || command.equals(\"done\") || command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\") || command.equals(\"delete\");"},{"lineNumber":110,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":112,"author":{"gitId":"danielonges"},"content":"    public void greetUser() {"},{"lineNumber":113,"author":{"gitId":"danielonges"},"content":"        String logo \u003d \"                                                     \\n\" +"},{"lineNumber":114,"author":{"gitId":"danielonges"},"content":"                \"\\t88                                                   \\n\" +"},{"lineNumber":115,"author":{"gitId":"danielonges"},"content":"                \"\\t88                                            ,d     \\n\" +"},{"lineNumber":116,"author":{"gitId":"danielonges"},"content":"                \"\\t88                                            88     \\n\" +"},{"lineNumber":117,"author":{"gitId":"danielonges"},"content":"                \"\\t88,dPPYba,   ,adPPYba, ,adPPYYba, ,adPPYba, MM88MMM  \\n\" +"},{"lineNumber":118,"author":{"gitId":"danielonges"},"content":"                \"\\t88P\u0027    \\\"8a a8P_____88 \\\"\\\"     `Y8 I8[    \\\"\\\"   88     \\n\" +"},{"lineNumber":119,"author":{"gitId":"danielonges"},"content":"                \"\\t88       d8 8PP\\\"\\\"\\\"\\\"\\\"\\\"\\\" ,adPPPPP88  `\\\"Y8ba,    88     \\n\" +"},{"lineNumber":120,"author":{"gitId":"danielonges"},"content":"                \"\\t88b,   ,a8\\\" \\\"8b,   ,aa 88,    ,88 aa    ]8I   88,    \\n\" +"},{"lineNumber":121,"author":{"gitId":"danielonges"},"content":"                \"\\t8Y\\\"Ybbd8\\\"\u0027   `\\\"Ybbd8\\\"\u0027 `\\\"8bbdP\\\"Y8 `\\\"YbbdP\\\"\u0027   \\\"Y888  \\n\" +"},{"lineNumber":122,"author":{"gitId":"danielonges"},"content":"                \"\\t                                                     \\n\" +"},{"lineNumber":123,"author":{"gitId":"danielonges"},"content":"                \"\\t                                                     \\n\";"},{"lineNumber":124,"author":{"gitId":"danielonges"},"content":"        String greeting \u003d line + logo + \"\\tWelcome to ToDoBeast, your best productivity task tracker tool!\\n\""},{"lineNumber":125,"author":{"gitId":"danielonges"},"content":"                + \"\\tLet\u0027s get this bread! How would you like to be productive today?\\n\" + line;"},{"lineNumber":126,"author":{"gitId":"danielonges"},"content":"        System.out.println(greeting);"},{"lineNumber":127,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":129,"author":{"gitId":"danielonges"},"content":"    public void exit() {"},{"lineNumber":130,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":131,"author":{"gitId":"danielonges"},"content":"        String exitMsg \u003d line + \"\\tThis app may have stopped but the grind never stops.\\n\\tSee you again soon!\\n\" + line;"},{"lineNumber":132,"author":{"gitId":"danielonges"},"content":"        System.out.println(exitMsg);"},{"lineNumber":133,"author":{"gitId":"danielonges"},"content":"        System.exit(0);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":136,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":137,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":138,"author":{"gitId":"danielonges"},"content":"    public static void printTaskList(List\u003cTask\u003e taskList) {"},{"lineNumber":139,"author":{"gitId":"danielonges"},"content":"        int count \u003d 1;"},{"lineNumber":140,"author":{"gitId":"danielonges"},"content":"        System.out.print(line);"},{"lineNumber":141,"author":{"gitId":"danielonges"},"content":"        for (Task task : taskList) {"},{"lineNumber":142,"author":{"gitId":"danielonges"},"content":"            System.out.println(\"\\t\" + count++ + \". \" + task);"},{"lineNumber":143,"author":{"gitId":"danielonges"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"danielonges"},"content":"        System.out.println(line);"},{"lineNumber":145,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"danielonges":144,"-":2}},{"path":"src/main/java/ToDoBeastException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"public class ToDoBeastException extends Exception {"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"    public ToDoBeastException(String errorMessage) {"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"        super(errorMessage);"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"}"}],"authorContributionMap":{"danielonges":5}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"    public Todo(String toDoDescription) {"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"        super(toDoDescription);"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":""},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"        return \"[T][\" + (done ? \"X\" : \" \") + \"] \" + taskDescription;"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"}"}],"authorContributionMap":{"danielonges":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danielonges"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"danielonges"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"danielonges"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"danielonges"},"content":"deadline"},{"lineNumber":5,"author":{"gitId":"danielonges"},"content":"deadline huh?"},{"lineNumber":6,"author":{"gitId":"danielonges"},"content":"deadline huh /at this time"},{"lineNumber":7,"author":{"gitId":"danielonges"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":8,"author":{"gitId":"danielonges"},"content":"event"},{"lineNumber":9,"author":{"gitId":"danielonges"},"content":"event huh?"},{"lineNumber":10,"author":{"gitId":"danielonges"},"content":"event huh /by this time"},{"lineNumber":11,"author":{"gitId":"danielonges"},"content":"list"},{"lineNumber":12,"author":{"gitId":"danielonges"},"content":"done 2"},{"lineNumber":13,"author":{"gitId":"danielonges"},"content":"done"},{"lineNumber":14,"author":{"gitId":"danielonges"},"content":"done a"},{"lineNumber":15,"author":{"gitId":"danielonges"},"content":"done 10"},{"lineNumber":16,"author":{"gitId":"danielonges"},"content":"done -1"},{"lineNumber":17,"author":{"gitId":"danielonges"},"content":"delete 3"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"delete 1"},{"lineNumber":19,"author":{"gitId":"danielonges"},"content":"delete"},{"lineNumber":20,"author":{"gitId":"danielonges"},"content":"delete a"},{"lineNumber":21,"author":{"gitId":"danielonges"},"content":"delete 100"},{"lineNumber":22,"author":{"gitId":"danielonges"},"content":"delete -10"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"list"},{"lineNumber":24,"author":{"gitId":"danielonges"},"content":"done 1"},{"lineNumber":25,"author":{"gitId":"danielonges"},"content":"blah"},{"lineNumber":26,"author":{"gitId":"danielonges"},"content":"hellooo"},{"lineNumber":27,"author":{"gitId":"danielonges"},"content":"bye"}],"authorContributionMap":{"danielonges":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"danielonges"},"content":"java -classpath ..\\bin ToDoBeast \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"danielonges":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"danielonges"},"content":"java -classpath ../bin ToDoBeast \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"danielonges":1,"-":37}}]
