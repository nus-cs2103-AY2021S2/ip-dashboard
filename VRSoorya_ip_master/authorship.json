[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"}"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"group \u0027cs2103.ay2021.sem2\u0027"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"version \u00270.1\u0027"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"repositories {"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    mavenCentral()"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"}"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"shadowJar {"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    manifest {"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"        attributes \"Main-Class\": \u0027project.Launcher\u0027"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"}"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"application {"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    project.setProperty(\"mainClassName\", \u0027project.Launcher\u0027)"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"}"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"test {"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    useJUnitPlatform()"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"}"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"checkstyle {"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"}"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"dependencies {"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":51}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":""},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"## Quick start"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"1. Ensure you have Java `11` or above installed in your Computer."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"2. Download the latest `olaf.jar` from [here](https://github.com/vrssoorya/ip/releases)."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Olaf app."},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"4. Double-click the file to start the app. The GUI with a greeting from Olaf, similar to the below should appear in a few seconds. Notice your app will not have any data in the task list unlike the example below.\u003cbr\u003e"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"   ![Ui](Ui.png)"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"5. Type the command in the command box below and press Enter to execute it. e.g. typing **`help`** and pressing Enter will give a response listing all the  possible commands you can use.\u003cbr\u003e"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"   Some example commands you can try:"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    * **`list`** : Lists all tasks in the current list."},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    * **`todo`** `homework` : Adds a todo Task with description `homework` to Olaf."},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    * **`delete`** `3` : Deletes the 3rd listed task shown in the current list."},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    * **`done`** `3` : Marks the 3rd Task in the current list as done."},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    * **`bye`** : Exits the app after showing a goodbye message."},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"1. Refer to the [Features](#features) below for details of each command."},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"## Notations"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"* Words in `\u003cUPPER CASE\u003e` are the parameters to be supplied by the user.\u003cbr\u003e"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"  e.g. in `done \u003cTASK NUMBER\u003e`, `\u003cTASK NUMBER\u003e` is a parameter which can be used as `done 3`."},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"* Items in square brackets are optional.\u003cbr\u003e"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"  e.g `find \u003cSEARCH TERM\u003e [, \u003cMORE SEARCH TERMS\u003e]` can be used as `find project, presentation` or as `find project`."},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `remind` and `bye`) will NOT be ignored.\u003cbr\u003e"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"  e.g. if the command specifies `help 123`, it will not be interpreted as `help`."},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"\u003c/div\u003e"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"## Command summary"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"Action | Format, Examples"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"--------|------------------"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"**Help** | `help`"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"**List** | `list`"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"**Remind** | `remind`"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"**Todo** | `todo \u003cTASK DESCRIPTION\u003e`"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"**Deadline** | `deadline \u003cTASK DESCRIPTION\u003e /by \u003cYYYY-MM-DD HH:mm\u003e` e.g., `deadline project submission /by \u003c2021-02-21 00:00\u003e`"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"**Event** | `event \u003cTASK DESCRIPTION\u003e /at \u003cYYYY-MM-DD HH:mm\u003e to \u003cYYYY-MM-DD HH:mm\u003e` \u003cbr\u003e e.g., `event new year\u0027s eve /at \u003c2021-12-31 00:00\u003e to \u003c2022-01-01 00:00\u003e`"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"**Done** | `done \u003cTASK NUMBER\u003e`\u003cbr\u003e e.g., `done 2`"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"**Delete** | `delete \u003cTASK NUMBER\u003e`\u003cbr\u003e e.g., `delete 3`"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"**Find** | `find \u003cSEARCH TERM\u003e [, \u003cMORE SEARCH TERMS\u003e]`\u003cbr\u003e e.g., `find project, presentation`"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"### Viewing help : `help`"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"Shows summary of all commands."},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"Format: `help`"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"### Listing all tasks : `list`"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"Shows a list of all tasks in the application."},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"Format: `list`"},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"### Get reminder : `remind`"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"Shows a list of all upcoming deadlines and events in the next 7 days."},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"Format: `remind`"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"### Adding a todo: `todo`"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"Adds a todo Task to the application."},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"Format: `todo \u003cTASK DESCRIPTION\u003e`"},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"* Description cannot be empty"},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":91,"author":{"gitId":"VRSoorya"},"content":"Examples:"},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":"* `deadline birthday /by \u003c2021-06-21 00:00\u003e`"},{"lineNumber":93,"author":{"gitId":"VRSoorya"},"content":"* `deadline project submission /by \u003c2021-02-21 23:59\u003e`"},{"lineNumber":94,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"### Adding a deadline: `deadline`"},{"lineNumber":96,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":97,"author":{"gitId":"VRSoorya"},"content":"Adds a deadline Task to the application."},{"lineNumber":98,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":"Format: `deadline \u003cTASK DESCRIPTION\u003e /by \u003cYYYY-MM-DD HH:mm\u003e`"},{"lineNumber":100,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":101,"author":{"gitId":"VRSoorya"},"content":"* Description cannot be empty  "},{"lineNumber":102,"author":{"gitId":"VRSoorya"},"content":"* Time is given in 24 hour format"},{"lineNumber":103,"author":{"gitId":"VRSoorya"},"content":"* The deadline date and time has to be after current time"},{"lineNumber":104,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":105,"author":{"gitId":"VRSoorya"},"content":"Examples:"},{"lineNumber":106,"author":{"gitId":"VRSoorya"},"content":"* `deadline birthday /by \u003c2021-06-21 00:00\u003e`"},{"lineNumber":107,"author":{"gitId":"VRSoorya"},"content":"* `deadline project submission /by \u003c2021-02-21 23:59\u003e`"},{"lineNumber":108,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":109,"author":{"gitId":"VRSoorya"},"content":"### Adding an event: `event`"},{"lineNumber":110,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":111,"author":{"gitId":"VRSoorya"},"content":"Adds an event Task to the application."},{"lineNumber":112,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":113,"author":{"gitId":"VRSoorya"},"content":"Format: `event \u003cTASK DESCRIPTION\u003e /at \u003cYYYY-MM-DD HH:mm\u003e to \u003cYYYY-MM-DD HH:mm\u003e`"},{"lineNumber":114,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":115,"author":{"gitId":"VRSoorya"},"content":"* Description cannot be empty"},{"lineNumber":116,"author":{"gitId":"VRSoorya"},"content":"* Time is given in 24 hour format"},{"lineNumber":117,"author":{"gitId":"VRSoorya"},"content":"* The start date and time has to be before end date and time"},{"lineNumber":118,"author":{"gitId":"VRSoorya"},"content":"* When loading existing event task from storage, it will be marked as done if the event is already over."},{"lineNumber":119,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":120,"author":{"gitId":"VRSoorya"},"content":"Examples:"},{"lineNumber":121,"author":{"gitId":"VRSoorya"},"content":"* `event new year\u0027s eve /at \u003c2021-12-31 00:00\u003e to \u003c2022-01-01 00:00\u003e`"},{"lineNumber":122,"author":{"gitId":"VRSoorya"},"content":"* `event webinar /at \u003c2021-02-20 13:00\u003e to \u003c2021-02-20 15:30\u003e`"},{"lineNumber":123,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":124,"author":{"gitId":"VRSoorya"},"content":"### Completing a task : `done`"},{"lineNumber":125,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":126,"author":{"gitId":"VRSoorya"},"content":"Marks the specified task in the current task list as done."},{"lineNumber":127,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":128,"author":{"gitId":"VRSoorya"},"content":"Format: `done \u003cTASK NUMBER\u003e`"},{"lineNumber":129,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":130,"author":{"gitId":"VRSoorya"},"content":"* Marks the task with the specified `TASK NUMBER` as completed."},{"lineNumber":131,"author":{"gitId":"VRSoorya"},"content":"* The number refers to the index number shown in the displayed task list after the `list` command."},{"lineNumber":132,"author":{"gitId":"VRSoorya"},"content":"* The index **must be a valid integer in the list** 1, 2, 3, …​"},{"lineNumber":133,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":134,"author":{"gitId":"VRSoorya"},"content":"Examples:"},{"lineNumber":135,"author":{"gitId":"VRSoorya"},"content":"* `done 1` completes the 1st task in the task list returned after the `list` command."},{"lineNumber":136,"author":{"gitId":"VRSoorya"},"content":"* `find Betsy` followed by `done 1` does NOT complete the 1st task in the results of the `find` command but rather completes the 1st task like in the previous example."},{"lineNumber":137,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":138,"author":{"gitId":"VRSoorya"},"content":"### Deleting a task : `delete`"},{"lineNumber":139,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":140,"author":{"gitId":"VRSoorya"},"content":"Deletes the specified task in the current task list."},{"lineNumber":141,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":142,"author":{"gitId":"VRSoorya"},"content":"Format: `delete \u003cTASK NUMBER\u003e`"},{"lineNumber":143,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":144,"author":{"gitId":"VRSoorya"},"content":"* Deletes the task with the specified `TASK NUMBER`."},{"lineNumber":145,"author":{"gitId":"VRSoorya"},"content":"* The number refers to the index number shown in the displayed task list after the `list` command."},{"lineNumber":146,"author":{"gitId":"VRSoorya"},"content":"* The index **must be a valid integer in the list** 1, 2, 3, …​"},{"lineNumber":147,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":148,"author":{"gitId":"VRSoorya"},"content":"Examples:"},{"lineNumber":149,"author":{"gitId":"VRSoorya"},"content":"* `delete 1` deletes the 1st task in the task list returned after the `list` command."},{"lineNumber":150,"author":{"gitId":"VRSoorya"},"content":"* `find Betsy` followed by `delete 1` does NOT delete the 1st task in the results of the `find` command but rather deletes the 1st task like in the previous example."},{"lineNumber":151,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":152,"author":{"gitId":"VRSoorya"},"content":"### Locating tasks by name: `find`"},{"lineNumber":153,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":154,"author":{"gitId":"VRSoorya"},"content":"Finds tasks whose names contain any of the given search terms."},{"lineNumber":155,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":156,"author":{"gitId":"VRSoorya"},"content":"Format: `find \u003cSEARCH TERM\u003e [, \u003cMORE SEARCH TERMS\u003e]`"},{"lineNumber":157,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":158,"author":{"gitId":"VRSoorya"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`"},{"lineNumber":159,"author":{"gitId":"VRSoorya"},"content":"* The order of the keywords does not matter. e.g. `Hans, Bo` will match `Bo Hans`"},{"lineNumber":160,"author":{"gitId":"VRSoorya"},"content":"* Only the name is searched."},{"lineNumber":161,"author":{"gitId":"VRSoorya"},"content":"* Partial words will be matched e.g. `pro` will match `project`"},{"lineNumber":162,"author":{"gitId":"VRSoorya"},"content":"* Tasks matching at least one search term will be returned (i.e. `OR` search)."},{"lineNumber":163,"author":{"gitId":"VRSoorya"},"content":"  e.g. `Hans, Bo` will return `Hans Gruber`, `Bo Yang`"},{"lineNumber":164,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":165,"author":{"gitId":"VRSoorya"},"content":"Examples:"},{"lineNumber":166,"author":{"gitId":"VRSoorya"},"content":"* `find sub` returns `submit` and `submission`"},{"lineNumber":167,"author":{"gitId":"VRSoorya"},"content":"* `find alex, david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e"},{"lineNumber":168,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":169,"author":{"gitId":"VRSoorya"},"content":"### Exiting the program : `bye`"},{"lineNumber":170,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":171,"author":{"gitId":"VRSoorya"},"content":"Exits the program in about 1 second after displaying a goodbye message."},{"lineNumber":172,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":173,"author":{"gitId":"VRSoorya"},"content":"Format: `bye`"},{"lineNumber":174,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":175,"author":{"gitId":"VRSoorya"},"content":"### Saving the data"},{"lineNumber":176,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":177,"author":{"gitId":"VRSoorya"},"content":"Olaf tasks are saved in the hard disk automatically after any command that changes the data. There is no need to save manually."},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"VRSoorya"},"content":"### Editing the data file"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"VRSoorya"},"content":"Olaf tasks are saved as a .txt file `[JAR file location]/data/olaf.txt`. Advanced users are welcome to update data directly by "},{"lineNumber":182,"author":{"gitId":"VRSoorya"},"content":"editing that data file but please follow expected saving format to avoid application crashes."},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"VRSoorya"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**"},{"lineNumber":185,"author":{"gitId":"VRSoorya"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run."},{"lineNumber":186,"author":{"gitId":"VRSoorya"},"content":"\u003c/div\u003e"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"VRSoorya"},"content":"### Archiving data files `[coming in v2.0]`"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"VRSoorya"},"content":"_Details coming soon ..._"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"VRSoorya"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"VRSoorya"},"content":"md template adapted from: https://github.com/se-edu/addressbook-level3/blob/master/docs/UserGuide.md"}],"authorContributionMap":{"-":19,"VRSoorya":175}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":":end"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":":omega"}],"authorContributionMap":{"VRSoorya":89}},{"path":"src/main/java/project/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":" * An example of a custom control using FXML."},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    private Label dialog;"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    private ImageView displayPicture;"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"            fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        dialog.setText(text);"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"        displayPicture.setImage(img);"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    private void flip() {"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"        Collections.reverse(tmp);"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"        return new DialogBox(text, img);"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"        db.flip();"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"        return db;"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":60}},{"path":"src/main/java/project/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"        Application.launch(MainApp.class, args);"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":12}},{"path":"src/main/java/project/MainApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":" * Application GUI using FXML"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"public class MainApp extends Application {"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    private Olaf olaf \u003d new Olaf();"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"     * Starts a session of the application."},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader();"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"            fxmlLoader.setLocation(MainApp.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"            stage.setScene(scene);"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"            stage.setTitle(\"Olaf\");"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setOlaf(olaf);"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"            stage.show();"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"        } catch (Exception e) {"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":37}},{"path":"src/main/java/project/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import javafx.application.Platform;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"import javafx.util.Duration;"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"import project.common.PrintedText;"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    private VBox dialogContainer;"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    private Button sendButton;"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"    private Olaf olaf;"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"    private Image olafImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/olaf-head.png\"));"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"    public void initialize() {"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"     * Sets up this MainWindow Controller with the necessary {@code Olaf} object"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"     * and greets the user."},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"    public void setOlaf(Olaf o) {"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"        olaf \u003d o;"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"                DialogBox.getDukeDialog(PrintedText.WELCOME_MESSAGE.toString(), olafImage)"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"        );"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Olaf\u0027s reply and then appends them to"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"    @FXML"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"    private void handleUserInput() {"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"        String response \u003d olaf.getResponse(input);"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"                DialogBox.getDukeDialog(response, olafImage)"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"        );"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"        userInput.clear();"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"        // if user says \u0027bye\u0027, wait for 1.5 seconds after displaying goodbye message before closing application"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"        if (input.trim().equalsIgnoreCase(\"bye\")) {"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds (1.5));"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"            pause.setOnFinished(event -\u003e Platform.exit());"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"            pause.play();"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":70}},{"path":"src/main/java/project/Olaf.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.io.Ui;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import project.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"// @@author: VRSoorya"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"// Adapted from GitHub repo nus-cs2103-AY2021S2/ip"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":" * Initialises each session of the application."},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"public class Olaf {"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    public static final String FILE_PATH \u003d \"./data/olaf.txt\";"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    private OlafApp app;"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    private Storage storage;"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    private TaskList tasks;"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    private Ui ui;"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code Olaf}."},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    public Olaf() {"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"        storage \u003d new Storage(FILE_PATH);"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        ui \u003d new Ui();"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"        app \u003d new OlafApp(tasks, ui, storage);"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"     * Responds to user input."},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"    public String getResponse(String text) {"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"        return app.run(text);"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":45}},{"path":"src/main/java/project/OlafApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import project.command.AddDeadline;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import project.command.AddEvent;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.command.AddTodo;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import project.command.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import project.command.DoneCommand;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import project.command.ExitCommand;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import project.command.FindCommand;"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import project.command.HelpCommand;"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import project.command.ListCommand;"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"import project.command.RemindCommand;"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"import project.common.UserCommands;"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"import project.io.Ui;"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"import project.storage.Storage;"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":" * Handles application logic."},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"public class OlafApp implements UserCommands {"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    private TaskList taskList;"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    private Ui ui;"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    private Storage storage;"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code OlafApp}."},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"     * @param tasks All the tasks stored."},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"     * @param ui A {@code Ui} instance to handle test output."},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"     * @param storage A {@code Storage} instance to handle saving and loading tasks from local file."},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    OlafApp(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        this.taskList \u003d tasks;"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        this.ui \u003d ui;"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"        this.storage \u003d storage;"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"     * Executes each session of the application."},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"     * @param userInput"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    public String run(String userInput) {"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"        String command \u003d userInput.toLowerCase().trim();"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"        // Solution adapted from https://github.com/nus-cs2103-AY2021S2/ip/pull/91/files"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        if (command.equals(UserCommands.BYE)) {"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"            return new ExitCommand().execute(taskList, ui);"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.equals(UserCommands.HELP)) {"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"            return new HelpCommand().execute(taskList, ui);"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.equals(UserCommands.LIST)) {"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"            return new ListCommand().execute(taskList, ui);"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.equals(UserCommands.REMIND)) {"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"            return new RemindCommand(command).execute(taskList, ui);"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.startsWith(UserCommands.FIND)) {"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"            return new FindCommand(command).execute(taskList, ui);"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.startsWith(UserCommands.DONE)) {"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"            return new DoneCommand(command).execute(taskList, ui, storage);"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.startsWith(UserCommands.DELETE)) {"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"            return new DeleteCommand(command).execute(taskList, ui, storage);"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.startsWith(UserCommands.TODO)) {"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"            return new AddTodo(command).execute(taskList, ui, storage);"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.startsWith(UserCommands.DEADLINE)) {"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"            return new AddDeadline(command).execute(taskList, ui, storage);"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.startsWith(UserCommands.EVENT)) {"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"            return new AddEvent(command).execute(taskList, ui, storage);"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"        } else {"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"            return ui.showFormatResponse(\"  Hmm sorry I don\u0027t understand :(\\n\""},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"                    + \"  Type \u0027help\u0027 to find out how you can talk to me!\\n\");"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":73}},{"path":"src/main/java/project/command/AddDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.command;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.common.PrintedText;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import project.io.Parser;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import project.io.Ui;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import project.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import project.task.Deadline;"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import project.task.Task;"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"public class AddDeadline extends AddTask {"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    public AddDeadline() {"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"        super();"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    public AddDeadline(String userInput) {"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"        super(userInput);"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    public Task loadFromStorage(String line) {"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"        String expression \u003d Parser.parseParameter(line, \"] \", 1);"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"        String description \u003d Parser.parseParameter(expression, \"\\\\(by:\", 0);"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"        String dateTime \u003d Parser.parseParameter(expression, \"\\\\(by:\", 1);"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        LocalDateTime deadline \u003d Parser.parseOutputDateTime(dateTime);"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        return new Deadline(description, deadline);"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"    public String execute(TaskList taskList, Ui ui, Storage ... storage) {"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"            String expression \u003d Parser.parseParameter(userInput, \" \", 1);"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"            String description \u003d Parser.parseParameter(expression, \"/by\", 0);"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"            if (description.length() \u003d\u003d 0) {"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"                throw new Exception(\"*! The task description cannot be empty :/\");"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"            String dateTime \u003d Parser.parseParameter(expression, \"/by\", 1);"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"            LocalDateTime deadline \u003d Parser.parseInputDateTime(dateTime);"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"            if (deadline.isBefore(LocalDateTime.now())) {"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"                throw new Exception(\"*! The deadline cannot be in the past...\");"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"            Deadline newDeadline \u003d new Deadline(description, deadline);"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"            assert newDeadline.getOccurrence().isAfter(LocalDateTime.now());"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"            taskList.addTask(newDeadline);"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"            this.saveTasks(taskList, storage);"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"            return ui.showNewTaskAddedSuccess(taskList.getTotalNumberOfTasks(),"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"                    newDeadline, taskList.getTotalNumberOfTasksUndone());"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"        } catch (Exception e) {"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"            // catches ParseException, IndexOutOfBounds exception and invalid dates in the past"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"            // todo: throw Olaf-specific Exceptions for ParseException and IndexOutOfBounds etc"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"            // so that error-specific messages can be displayed in the UI"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"            return ui.showFormatError(PrintedText.DEADLINE_FORMAT);"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":61}},{"path":"src/main/java/project/command/AddEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.command;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.common.PrintedText;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import project.io.Parser;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import project.io.Ui;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import project.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import project.task.Event;"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import project.task.Task;"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"public class AddEvent extends AddTask {"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    public AddEvent() {"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"        super();"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    public AddEvent(String userInput) {"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"        super(userInput);"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    public Task loadFromStorage(String line) {"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"        String expression \u003d Parser.parseParameter(line, \"] \", 1);"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"        String description \u003d Parser.parseParameter(expression, \"\\\\(at:\", 0);"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"        String dateTime \u003d Parser.parseParameter(expression, \"\\\\(at:\", 1);"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        String start \u003d Parser.parseParameter(dateTime, \" to \", 0);"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"        String end \u003d Parser.parseParameter(dateTime, \" to \", 1);"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        LocalDateTime startDateTime \u003d Parser.parseOutputDateTime(start);"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"        LocalDateTime endDateTime \u003d Parser.parseOutputDateTime(end);"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        Event e \u003d new Event(description, startDateTime, endDateTime);"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        if (endDateTime.isBefore(LocalDateTime.now())) {"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"            e.markAsDone();"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"        return e;"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"    public String execute(TaskList taskList, Ui ui, Storage ... storage) {"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"            String expression \u003d Parser.parseParameter(userInput, \" \", 1);"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"            String description \u003d Parser.parseParameter(expression, \"/at\", 0);"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"            if (description.length() \u003d\u003d 0) {"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"                throw new Exception(\"*! The task description cannot be empty :/\");"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"            String dateTime \u003d Parser.parseParameter(expression, \"/at\", 1);"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"            String start \u003d Parser.parseParameter(dateTime, \" to \", 0);"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"            String end \u003d Parser.parseParameter(dateTime, \" to \", 1);"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"            LocalDateTime startDateTime \u003d Parser.parseInputDateTime(start);"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"            LocalDateTime endDateTime \u003d Parser.parseInputDateTime(end);"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"            if (!startDateTime.isBefore(endDateTime)) {"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"                throw new Exception(\"*! End time must be after start of event :)\");"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"            Event newEvent \u003d new Event(description, startDateTime, endDateTime);"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"            taskList.addTask(newEvent);"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"            this.saveTasks(taskList, storage);"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"            return ui.showNewTaskAddedSuccess(taskList.getTotalNumberOfTasks(),"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"                    newEvent, taskList.getTotalNumberOfTasksUndone());"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"        } catch (Exception e) {"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"            // catches ParseException, IndexOutOfBounds exception and invalid datetime exception"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"            // todo: throw Olaf-specific Exceptions for ParseException and IndexOutOfBounds etc"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"            // so that error-specific messages can be displayed in the UI"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"            return ui.showFormatError(PrintedText.EVENT_FORMAT);"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":72}},{"path":"src/main/java/project/command/AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.command;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import project.task.Task;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"public abstract class AddTask extends Command {"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"    public AddTask() {"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"        super();"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    public AddTask(String userInput) {"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"        super(userInput);"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    public abstract Task loadFromStorage(String line);"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":14}},{"path":"src/main/java/project/command/AddTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.command;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import project.common.PrintedText;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import project.io.Parser;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.io.Ui;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import project.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import project.task.Task;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import project.task.Todo;"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"public class AddTodo extends AddTask {"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    public AddTodo() {"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"        super();"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    public AddTodo(String userInput) {"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"        super(userInput);"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    public Task loadFromStorage(String line) {"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        String expression \u003d Parser.parseParameter(line, \"] \", 1);"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"        return new Todo(expression);"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    public String execute(TaskList taskList, Ui ui, Storage ... storage) {"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"            String description \u003d Parser.parseParameter(userInput, \" \", 1);"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"            if (description.length() \u003d\u003d 0) {"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"                throw new Exception(\"*! The task description cannot be empty :/\");"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"            Todo newTodo \u003d new Todo(description);"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"            taskList.addTask(newTodo);"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"            this.saveTasks(taskList, storage);"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"            return ui.showNewTaskAddedSuccess(taskList.getTotalNumberOfTasks(),"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"                    newTodo, taskList.getTotalNumberOfTasksUndone());"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"            return ui.showFormatError(PrintedText.TODO_FORMAT);"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"        } catch (Exception e) {"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"            return ui.showFormatResponse(e.getMessage());"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":44}},{"path":"src/main/java/project/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.command;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.io.Ui;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import project.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":" * Represents a Command the application responds to."},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"public abstract class Command {"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    protected String userInput;"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    public Command() {"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"        this.userInput \u003d \"\";"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    public Command(String userInput) {"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"        this.userInput \u003d userInput;"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"     * Represents a task in the application."},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"     * @param taskList The {@code TaskList} to be saved."},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"     * @param storage The {@code Storage}s to save into."},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    public void saveTasks(TaskList taskList, Storage[] storage) {"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        // will save in every storage path provided"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        Arrays.stream(storage).forEach(s -\u003e {"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"            s.saveData(taskList);"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"            assert s.isSaved();"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        });"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage ... storage);"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":37}},{"path":"src/main/java/project/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.command;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import project.common.PrintedText;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import project.io.Parser;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.io.Ui;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import project.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import project.task.Task;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    public DeleteCommand(String userInput) {"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"        super(userInput);"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    public String execute(TaskList taskList, Ui ui, Storage ... storage) {"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"            int id \u003d Parser.parseIntParameter(userInput);"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"            Task deleted \u003d taskList.deleteTask(id);"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"            this.saveTasks(taskList, storage);"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"            return ui.showDeleteSuccess(id, deleted, taskList.getTotalNumberOfTasks());"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"            return ui.showFormatError(PrintedText.DELETE_FORMAT);"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"            return ui.showInvalidIndexError();"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":28}},{"path":"src/main/java/project/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.command;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import project.common.PrintedText;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import project.io.Parser;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.io.Ui;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import project.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"public class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    public DoneCommand(String userInput) {"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"        super(userInput);"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    public String execute(TaskList taskList, Ui ui, Storage ... storage) {"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"            int id \u003d Parser.parseIntParameter(userInput);"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"            taskList.markTaskAsDone(id);"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"            this.saveTasks(taskList, storage);"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"            return ui.showDoneSuccess(id, taskList.getTask(id), taskList.getTotalNumberOfTasksUndone());"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"            return ui.showFormatError(PrintedText.DONE_FORMAT);"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"            return ui.showInvalidIndexError();"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":27}},{"path":"src/main/java/project/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.command;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import project.io.Ui;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import project.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"public class ExitCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"    public ExitCommand() {"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"        super();"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    public String execute(TaskList taskList, Ui ui, Storage ... storage) {"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"        return ui.showFormatResponse(\"  Aww hope to see you soon, goodbye!...\");"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":16}},{"path":"src/main/java/project/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.command;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import project.common.PrintedText;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import project.io.Parser;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.io.Ui;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import project.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"public class FindCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    public FindCommand(String userInput) {"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"        super(userInput);"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    public String execute(TaskList taskList, Ui ui, Storage ... storage) {"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"            String[] searchTerms \u003d Parser.parseParameter(userInput, \" \", 1).split(\",\");"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"            TaskList matches \u003d taskList.findTasks(searchTerms);"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"            if (matches.hasTasks()) {"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"                // todo: index of matched Tasks could follow index in original taskList"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"                String output \u003d \"  Here are the tasks that match your search:\\n\\n\" + matches.toString();"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"                return ui.showFormatResponse(output);"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"            } else {"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"                return ui.showFormatResponse(\"  Welps, no tasks match your search...\");"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"            return ui.showFormatError(PrintedText.FIND_FORMAT);"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":31}},{"path":"src/main/java/project/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.command;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import project.common.PrintedText;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import project.io.Ui;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"public class HelpCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"    public HelpCommand() {"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"        super();"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    public String execute(TaskList taskList, Ui ui, Storage ... storage) {"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"        return ui.showFormatResponse(PrintedText.HELP);"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":17}},{"path":"src/main/java/project/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.command;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import project.common.PrintedText;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import project.io.Ui;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"public class ListCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"    public ListCommand() {"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"        super();"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    public String execute(TaskList taskList, Ui ui, Storage ... storage) {"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"        if (taskList.hasTasks()) {"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"            return ui.showList(taskList);"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"            return PrintedText.EMPTY_TASKLIST_ERROR.toString();"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":21}},{"path":"src/main/java/project/command/RemindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.command;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import project.common.PrintedText;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import project.io.Ui;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"public class RemindCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"    public RemindCommand(String userInput) {"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"        super(userInput);"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    public String execute(TaskList taskList, Ui ui, Storage ... storage) {"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"        if (taskList.hasTasks()) {"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"            TaskList upcoming \u003d taskList.getUpcomingTasks();"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"            return ui.showReminder(upcoming);"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"        } else {"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"            return PrintedText.EMPTY_TASKLIST_ERROR.toString();"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":22}},{"path":"src/main/java/project/common/PrintedText.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.common;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":" * All the {@code String} constants commonly used in the application."},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"public enum PrintedText {"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"    LOGO {"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"            return \"           ___  _           ,_,\\n\""},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"                    + \"         |  _  | |   ___   / /\\n\""},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"                    + \"         | | | | |  / _ \\\\ \u003d; ;\u003d,\\n\""},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"                    + \"         | |_| | |_| |_| \\\\ | |\\n\""},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"                    + \"          \\\\___/\\\\___/---;_| |_|\\n\";"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    BORDER {"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"            return \" --*---*---*---*---*---*---*---*---*---*---*---*---*---*---*-- \\n\";"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    WELCOME_MESSAGE {"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"            return BORDER + \"  Hey there, Olaf here!\\n\""},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"                    + \"  What will we be doing today?\\n\" + BORDER;"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    TODO_FORMAT {"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"            return \"  todo \u003cTASK DESCRIPTION\u003e\\n\";"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    DEADLINE_FORMAT {"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"            return \"  deadline \u003cTASK DESCRIPTION\u003e /by \u003cYYYY-MM-DD HH:mm\u003e\\n\";"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"    EVENT_FORMAT {"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"            return \"  event \u003cTASK DESCRIPTION\u003e /at \u003cYYYY-MM-DD HH:mm\u003e to \u003cYYYY-MM-DD HH:mm\u003e\\n\";"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"    DONE_FORMAT {"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"            return \"  done \u003cTASK NUMBER\u003e\\n\";"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"    DELETE_FORMAT {"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"            return \"  delete \u003cTASK NUMBER\u003e\\n\";"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"    FIND_FORMAT {"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"            return \"  find \u003cSEARCH TERM\u003e [,\u003cSEARCH TERM\u003e]\\n\";"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"    HELP {"},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"            return \"  Please use the following to update me:\\n\\n\""},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"                    + \"  \" + TODO_FORMAT + \"      \\\\_ adds a task to be done\\n\""},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"                    + \"  \" + DEADLINE_FORMAT + \"      \\\\_ adds a deadline\\n\""},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"                    + \"  \" + EVENT_FORMAT + \"      \\\\_ adds an event\\n\""},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"                    + \"  \" + DONE_FORMAT + \"      \\\\_ marks a task as done\\n\""},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"                    + \"  \" + DELETE_FORMAT + \"      \\\\_ deletes a task from the list\\n\""},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"                    + \"  \" + FIND_FORMAT + \"      \\\\_ finds tasks that match the search terms\\n\""},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"                    + \"        *! separate the search terms with a \u0027,\u0027\\n\""},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"                    + \"    list\\n      \\\\_ lists all tasks, deadlines \u0026 events\\n\""},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"                    + \"      with their respective task number\\n\""},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":"                    + \"    remind\\n      \\\\_ lists deadlines \u0026 events for the next week\\n\""},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"                    + \"    bye\\n      \\\\_ exists this application\\n\";"},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":93,"author":{"gitId":"VRSoorya"},"content":"    EMPTY_TASKLIST_ERROR {"},{"lineNumber":94,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":96,"author":{"gitId":"VRSoorya"},"content":"            return BORDER + \"  You don\u0027t have any tasks yet :)\\n\""},{"lineNumber":97,"author":{"gitId":"VRSoorya"},"content":"                    + \"  Type \u0027help\u0027 to see how you can add a task\\n\" + BORDER;"},{"lineNumber":98,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":100,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":100}},{"path":"src/main/java/project/common/UserCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.common;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":" * All key user commands that the application responds to."},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"public interface UserCommands {"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"    // All fields are public, static and final in interfaces."},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"    String BYE \u003d \"bye\";"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"    String HELP \u003d \"help\";"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    String LIST \u003d \"list\";"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    String REMIND \u003d \"remind\";"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    String FIND \u003d \"find\";"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    String DONE \u003d \"done\";"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    String DELETE \u003d \"delete\";"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    String TODO \u003d \"todo\";"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    String DEADLINE \u003d \"deadline\";"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    String EVENT \u003d \"event\";"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":18}},{"path":"src/main/java/project/io/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.io;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":" * Processes the user commands."},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    // todo: implement this instead https://github.com/se-edu/addressbook-level3/blob/master"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    //  /src/main/java/seedu/address/logic/parser/ParserUtil.java"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code int} index parameter of \u0027delete\u0027 and \u0027done\u0027 commands."},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"     * @param command The user command."},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    public static int parseIntParameter(String command) {"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"        return Integer.parseInt(command.split(\" \")[1]);"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"     * Returns a {@code String} parameter of \u0027todo\u0027, \u0027deadline\u0027 and \u0027event\u0027 commands."},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"     * @param command The user command."},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"     * @param regex The regex pattern to split the command by."},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"     * @param index The index of the resultant array to return."},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    public static String parseParameter(String command, String regex, int index) {"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        return command.split(regex, 2)[index].trim();"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"     * Returns a {@code LocalDateTime} parameter from \u0027deadline\u0027 and \u0027event\u0027 userInput."},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"     * This reads the date and time in the expected user input format."},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"     * @param dateTime The user command specifying the date and time."},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"    public static LocalDateTime parseInputDateTime(String dateTime) {"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"        return LocalDateTime.parse(dateTime.trim(),"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"     * Returns a {@code LocalDateTime} parameter from saved deadlines and events."},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"     * This reads the date and time in the output and saved format ."},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"     * @param dateTime The user command specifying the date and time."},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"    public static LocalDateTime parseOutputDateTime(String dateTime) {"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"        String[] s \u003d dateTime.trim().split(\"\\\\)\");"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"        return LocalDateTime.parse(s[0],"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"                DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\"));"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":55}},{"path":"src/main/java/project/io/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.io;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import project.common.PrintedText;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import project.task.Task;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":" * Handles UI responses for both success and error messages."},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"public class Ui {"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    private String formatResponse(String message) {"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"        return PrintedText.BORDER + message + PrintedText.BORDER;"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted message."},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"     * @param text The message to be printed."},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    public String showFormatResponse(String text) {"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        return PrintedText.BORDER.toString() + text + PrintedText.BORDER.toString();"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted message."},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"     * Overloads previous method."},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"     * @param text The {@code PrintText} message to be printed."},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"    public String showFormatResponse(PrintedText text) {"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"        return PrintedText.BORDER.toString() + text + PrintedText.BORDER.toString();"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted error message."},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"     * @param text The message to be printed."},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    public String showErrorResponse(String text) {"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"        return \"OW MY NOSE!!!\\n\" + text;"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted message after successfully executing a \u0027list\u0027 command."},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"     * @param taskList The {@code TaskList} with all the tasks."},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"    public String showList(TaskList taskList) {"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"        String message \u003d \"  Here are all the tasks in your list:\\n\\n\""},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"                + taskList.toString() + \"\\n\""},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"                + String.format(\"  Only %s tasks left to be done!\\n\","},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"                taskList.getTotalNumberOfTasksUndone());"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"        return this.formatResponse(message);"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted message after successfully executing a \u0027remind\u0027 command."},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"     * @param taskList The {@code TaskList} with all the upcoming deadlines and events."},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"    public String showReminder(TaskList taskList) {"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"        String message \u003d \"  Upcoming deadlines and events for the next 7 days:\\n\\n\""},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"                + taskList.toString() + \"\\n\""},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"                + String.format(\"  Only %s tasks left to be done!\\n\","},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"                taskList.getTotalNumberOfTasksUndone());"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"        return this.formatResponse(message);"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted message after successfully executing a \u0027done\u0027 command."},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"     * @param id The list index of the task marked as \"done\"."},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"     * @param task The task that was \"done\"."},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"     * @param totalNumberOfTasksUndone The number of tasks \"not done\" in the {@code TaskList}."},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"    public String showDoneSuccess(int id, Task task, int totalNumberOfTasksUndone) {"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"        String message \u003d \"  Great job! You\u0027re done with:\\n\\n\""},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"                + String.format(\"  %s. %s\\n\\n\", id, task)"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"                + String.format(\"  Now %s tasks are left to be done!\\n\","},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"                totalNumberOfTasksUndone);"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"        return this.formatResponse(message);"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted message after successfully executing a \u0027delete\u0027 command."},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"VRSoorya"},"content":"     * @param id The list index of the task to be deleted."},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":"     * @param task The task that was deleted."},{"lineNumber":93,"author":{"gitId":"VRSoorya"},"content":"     * @param totalNumberOfTasks The number of tasks marked as \"done\" in the {@code TaskList}."},{"lineNumber":94,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"    public String showDeleteSuccess(int id, Task task, int totalNumberOfTasks) {"},{"lineNumber":96,"author":{"gitId":"VRSoorya"},"content":"        String message \u003d \"  Got it, this task is now deleted:\\n\\n\""},{"lineNumber":97,"author":{"gitId":"VRSoorya"},"content":"                + String.format(\"  %s. %s\\n\\n\", id, task)"},{"lineNumber":98,"author":{"gitId":"VRSoorya"},"content":"                + String.format(\"  You now have %s tasks left if your list.\\n\","},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":"                totalNumberOfTasks);"},{"lineNumber":100,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":101,"author":{"gitId":"VRSoorya"},"content":"        return this.formatResponse(message);"},{"lineNumber":102,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":104,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted message after successfully executing"},{"lineNumber":106,"author":{"gitId":"VRSoorya"},"content":"     * a \u0027todo\u0027, \u0027deadline\u0027 or \u0027event\u0027 command."},{"lineNumber":107,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"VRSoorya"},"content":"     * @param totalNumberOfTasks The number of tasks marked as \"done\" in the {@code TaskList}."},{"lineNumber":109,"author":{"gitId":"VRSoorya"},"content":"     * @param newTask The task that was added."},{"lineNumber":110,"author":{"gitId":"VRSoorya"},"content":"     * @param totalNumberOfTasksUndone The number of tasks marked \"not done\" in the {@code TaskList}."},{"lineNumber":111,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"VRSoorya"},"content":"    public String showNewTaskAddedSuccess(int totalNumberOfTasks, Task newTask, int totalNumberOfTasksUndone) {"},{"lineNumber":113,"author":{"gitId":"VRSoorya"},"content":"        String message \u003d \"  Okie added new task:\\n\\n\""},{"lineNumber":114,"author":{"gitId":"VRSoorya"},"content":"                + String.format(\"  %s. %s\\n\\n\", totalNumberOfTasks, newTask)"},{"lineNumber":115,"author":{"gitId":"VRSoorya"},"content":"                + String.format(\"  Total %s tasks, only %s left to be done!\\n\","},{"lineNumber":116,"author":{"gitId":"VRSoorya"},"content":"                totalNumberOfTasks,"},{"lineNumber":117,"author":{"gitId":"VRSoorya"},"content":"                totalNumberOfTasksUndone);"},{"lineNumber":118,"author":{"gitId":"VRSoorya"},"content":"        return this.formatResponse(message);"},{"lineNumber":119,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":121,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted error message for \u0027todo\u0027, \u0027deadline\u0027 or \u0027event\u0027 commands."},{"lineNumber":123,"author":{"gitId":"VRSoorya"},"content":"     * Message shows the expected input format for the respective commands."},{"lineNumber":124,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"VRSoorya"},"content":"     * @param format The {@code PrintText} format message to be printed."},{"lineNumber":126,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"VRSoorya"},"content":"    public String showFormatError(PrintedText format) {"},{"lineNumber":128,"author":{"gitId":"VRSoorya"},"content":"        String message \u003d \"~* Please say it like this:\\n\\n\" + format;"},{"lineNumber":129,"author":{"gitId":"VRSoorya"},"content":"        return this.showErrorResponse(message);"},{"lineNumber":130,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":132,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted error message for \u0027done\u0027 or \u0027delete\u0027 commands."},{"lineNumber":134,"author":{"gitId":"VRSoorya"},"content":"     * Message shows the expected input format for the respective commands."},{"lineNumber":135,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":136,"author":{"gitId":"VRSoorya"},"content":"    public String showInvalidIndexError() {"},{"lineNumber":137,"author":{"gitId":"VRSoorya"},"content":"        String message \u003d \"~* Please use a valid task number.\\n\\n\""},{"lineNumber":138,"author":{"gitId":"VRSoorya"},"content":"                + \"  Type \u0027list\u0027 to view all tasks\\n  and their respective numbers\\n\";"},{"lineNumber":139,"author":{"gitId":"VRSoorya"},"content":"        return this.showErrorResponse(message);"},{"lineNumber":140,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":142,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":143,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted error message when starting the application with an empty task list."},{"lineNumber":144,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"VRSoorya"},"content":"    public String showLoadingError() {"},{"lineNumber":146,"author":{"gitId":"VRSoorya"},"content":"        String message \u003d \"  No existing data found. Starting with empty task list.\\n\";"},{"lineNumber":147,"author":{"gitId":"VRSoorya"},"content":"        return this.formatResponse(message);"},{"lineNumber":148,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":149}},{"path":"src/main/java/project/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.storage;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import java.nio.file.Path;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import java.nio.file.Paths;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import java.nio.file.StandardOpenOption;"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"import java.util.stream.Collectors;"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"import project.Olaf;"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"import project.command.AddDeadline;"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"import project.command.AddEvent;"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"import project.command.AddTodo;"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"import project.task.Task;"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":" * Handles storing and loading of application data from local file."},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":" * All {@code Task}s are stored and read from this file."},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"public class Storage {"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    private Path dataPath;"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    private boolean isSaveSuccessful \u003d false;"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code Storage}."},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"     * @param filePath The path to the file where all the tasks are to be stored."},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"    public Storage(String filePath) {"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        assert filePath.equals(Olaf.FILE_PATH);"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        String[] filePathSplit \u003d filePath.split(\"(?:.(?!/))+$\", 2);"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"        String fileDirectory \u003d filePathSplit[0];"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"        // Solution adapted from: https://stackoverflow.com/questions/28947250/.."},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"        // ..create-a-directory-if-it-does-not-exist-and-then-create-the-files-in-that-direct"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"        // inserts correct file path separator on *nix and Windows"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"        File directory \u003d new File(fileDirectory);"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"        if (!directory.exists()) {"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"            directory.mkdir();"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        assert directory.exists();"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"        this.dataPath \u003d Paths.get(filePath);"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"     * Saves all the tasks to the local file."},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"     * Overwrites the file everytime this method executes."},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"     * @param taskList The {@code TaskList} of containing all the tasks to be saved."},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"    public void saveData(TaskList taskList) {"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"        try {"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"            // save all tasks again if taskList has tasks"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"            if (taskList.hasTasks()) {"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"                String taskListToString \u003d taskList.toString();"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"                // splitting by \"  %d. [\" in case the task description uses periods and digits as well"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"                ArrayList\u003cString\u003e tasksWithoutIndex \u003d new ArrayList\u003c\u003e("},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"                        List.of(taskListToString.split(\"  \\\\d. \\\\[\")));"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"                String toSave \u003d tasksWithoutIndex.stream()"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"                        .reduce((a, b) -\u003e a + b)"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"                        .get();"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"                // Solution adapted from: https://attacomsian.com/blog/java-save-string-to-text-file"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"                // write string to a file"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"                Files.writeString(dataPath,"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"                        toSave,"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"                        StandardCharsets.UTF_8,"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"                        StandardOpenOption.CREATE,"},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"                        StandardOpenOption.TRUNCATE_EXISTING);"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"            } else {"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"                Files.deleteIfExists(dataPath);"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"            this.isSaveSuccessful \u003d true;"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"        } catch (IOException e) {"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"            this.isSaveSuccessful \u003d false;"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"            e.printStackTrace();"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":"     * Returns if last {@code saveData()} call was successful."},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":"    public boolean isSaved() {"},{"lineNumber":91,"author":{"gitId":"VRSoorya"},"content":"        return this.isSaveSuccessful;"},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":94,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"     * Reads all the tasks from the local file."},{"lineNumber":96,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"VRSoorya"},"content":"     * @throws IOException If there is nothing stored."},{"lineNumber":98,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {"},{"lineNumber":100,"author":{"gitId":"VRSoorya"},"content":"        return Files.readAllLines(dataPath,"},{"lineNumber":101,"author":{"gitId":"VRSoorya"},"content":"                StandardCharsets.UTF_8)"},{"lineNumber":102,"author":{"gitId":"VRSoorya"},"content":"                .stream()"},{"lineNumber":103,"author":{"gitId":"VRSoorya"},"content":"                .map(this::readTaskFromData)"},{"lineNumber":104,"author":{"gitId":"VRSoorya"},"content":"                .collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":105,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":107,"author":{"gitId":"VRSoorya"},"content":"    private Task readTaskFromData(String line) {"},{"lineNumber":108,"author":{"gitId":"VRSoorya"},"content":"        boolean taskIsDone \u003d (line.charAt(3) \u003d\u003d \u0027X\u0027);"},{"lineNumber":109,"author":{"gitId":"VRSoorya"},"content":"        Task outputTask \u003d null;"},{"lineNumber":110,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":111,"author":{"gitId":"VRSoorya"},"content":"        if (line.startsWith(\"T]\")) {"},{"lineNumber":112,"author":{"gitId":"VRSoorya"},"content":"            outputTask \u003d new AddTodo().loadFromStorage(line);"},{"lineNumber":113,"author":{"gitId":"VRSoorya"},"content":"        } else if (line.startsWith(\"D]\")) {"},{"lineNumber":114,"author":{"gitId":"VRSoorya"},"content":"            outputTask \u003d new AddDeadline().loadFromStorage(line);"},{"lineNumber":115,"author":{"gitId":"VRSoorya"},"content":"        } else if (line.startsWith(\"E]\")) {"},{"lineNumber":116,"author":{"gitId":"VRSoorya"},"content":"            outputTask \u003d new AddEvent().loadFromStorage(line);"},{"lineNumber":117,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"VRSoorya"},"content":"        assert outputTask !\u003d null;"},{"lineNumber":119,"author":{"gitId":"VRSoorya"},"content":"        if (taskIsDone) {"},{"lineNumber":120,"author":{"gitId":"VRSoorya"},"content":"            outputTask.markAsDone();"},{"lineNumber":121,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"VRSoorya"},"content":"        return outputTask;"},{"lineNumber":123,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":124}},{"path":"src/main/java/project/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.task;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":" * Represents a deadline task in the application."},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":" * This extends the {@code Task} class."},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    private LocalDateTime deadline;"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code Deadline}."},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"     * @param description The deadline description."},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"     * @param deadline The date and time of the deadline."},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    public Deadline(String description, LocalDateTime deadline) {"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"        super(description);"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"        this.hasSchedule \u003d true;"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"     * Returns the date and time of occurrence."},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"    public LocalDateTime getOccurrence() {"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        return deadline;"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code String} representation of this {@code Deadline}."},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"                + deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\"))"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"                + \")\";"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":43}},{"path":"src/main/java/project/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.task;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":" * Represents an event task in the application."},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":" * This extends the {@code Task} class."},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    private LocalDateTime start;"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    private LocalDateTime end;"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code Event}."},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"     * @param description The event description."},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"     * @param start The date and time the event begins."},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"     * @param end The date and time the event ends."},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        super(description);"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"        assert start.isBefore(end);"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"        this.start \u003d start;"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"        this.end \u003d end;"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"        this.hasSchedule \u003d true;"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"     * Returns the start date and time of occurrence."},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"    public LocalDateTime getOccurrence() {"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        return start;"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code String} representation of this {@code Event}."},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"                + start.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\")) + \" to \""},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"                + end.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\")) + \")\";"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":47}},{"path":"src/main/java/project/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.task;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":" * Represents a task in the application."},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"public class Task implements Comparable\u003cTask\u003e {"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"    /** The task description. */"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    protected String description;"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    /** The task status. */"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    protected boolean isDone;"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    /** If the task comes with a date and time of occurrence. */"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    protected boolean hasSchedule;"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code Task} with empty task list."},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"     * @param description The task description."},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    public Task(String description) {"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        assert description.length() \u003e 0;"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"        this.description \u003d description;"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"        this.isDone \u003d false;"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"        this.hasSchedule \u003d false;"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"     * Returns the task description."},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"    public String getDescription() {"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"        return this.description;"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code String} representation of this task\u0027s status."},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"    public String getStatusIcon() {"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"        return isDone ? \"X\" : \" \";"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"     * Returns if this task has a date and time of occurrence."},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"    public boolean getIfScheduled() {"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"        return hasSchedule;"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"     * Returns the date and time of occurrence if it exists."},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"    public LocalDateTime getOccurrence() {"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"        return null;"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"     * Changes this task\u0027s status to \"done\"."},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"    public void markAsDone() {"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"        this.isDone \u003d true;"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"        assert this.getStatusIcon().equals(\"X\");"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code String} representation of this {@code Task}."},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"    public int compareTo(Task otherTask) {"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"        if (this.getOccurrence().isBefore(otherTask.getOccurrence())) {"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"            return -1;"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"        } else if (this.getOccurrence().isAfter(otherTask.getOccurrence())) {"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"            return 1;"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"        return 0;"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code String} representation of this {@code Task}."},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"    public String toString() {"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"}"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":""}],"authorContributionMap":{"VRSoorya":85}},{"path":"src/main/java/project/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.task;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import java.util.stream.Collectors;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import java.util.stream.IntStream;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":" * Represents a list of {@code Task}s in the application."},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":" * Encapsulates storage and operations on {@code Task}s."},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"public class TaskList {"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code TaskList} with empty task list."},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    public TaskList() {"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code TaskList} with existing tasks."},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"     * @param savedData {@code ArrayList} of all the tasks stored in local file."},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    public TaskList(ArrayList\u003cTask\u003e savedData) {"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        tasks \u003d savedData;"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"     * Checks if there are {@code Task}s in the application."},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"    public boolean hasTasks() {"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        return tasks.size() \u003e 0;"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"     * Retrieves a {@code Task} in the application by list index."},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"     * @param idx List index of task as shown in {@code String} representation of {@code TaskList}."},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"    public Task getTask(int idx) {"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"        return tasks.get(idx - 1);"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"     * Adds a {@code Task} to the application."},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"     * @param task any {@code Task} to be added."},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"    public void addTask(Task task) {"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"        int totalBefore \u003d tasks.size();"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"        tasks.add(task);"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"        assert totalBefore + 1 \u003d\u003d tasks.size();"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"     * Changes status of a {@code Task} to \"done\"."},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"     * @param idx List index of task as shown in {@code String} representation of {@code TaskList}."},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"    public void markTaskAsDone(int idx) {"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"        tasks.get(idx - 1).markAsDone();"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"     * Deletes a {@code Task} in the application by list index."},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"     * @param idx List index of task as shown in {@code String} representation of {@code TaskList}."},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"    public Task deleteTask(int idx) {"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"        return tasks.remove(idx - 1);"},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"     * Returns a {@code TaskList} of the {@code Task}s that match the search."},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"     * Checks if any of the words in the search are present in the task descriptions."},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"     * @param search The search expression."},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"    public TaskList findTasks(String[] search) {"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"        ArrayList\u003cTask\u003e matches \u003d tasks.stream()"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"                // Solution adapted from: https://stackoverflow.com/questions/8992100/"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"                // test-if-a-string-contains-any-of-the-strings-from-an-array"},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":"                .filter(task -\u003e Arrays.stream(search).map(term -\u003e term.trim().toLowerCase())"},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"                        .filter(term -\u003e term.length() \u003e 0)"},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":"                        .anyMatch(task.getDescription().toLowerCase()::contains))"},{"lineNumber":91,"author":{"gitId":"VRSoorya"},"content":"                .collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":"        return new TaskList(matches);"},{"lineNumber":93,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"VRSoorya"},"content":"     * Returns a {@code TaskList} of the {@code Task}s that are upcoming in the next 7 days."},{"lineNumber":97,"author":{"gitId":"VRSoorya"},"content":"     * Outputs the result in chronological order."},{"lineNumber":98,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":"    public TaskList getUpcomingTasks() {"},{"lineNumber":100,"author":{"gitId":"VRSoorya"},"content":"        ArrayList\u003cTask\u003e matches \u003d tasks.stream()"},{"lineNumber":101,"author":{"gitId":"VRSoorya"},"content":"                .filter(task -\u003e task.getIfScheduled()"},{"lineNumber":102,"author":{"gitId":"VRSoorya"},"content":"                        \u0026\u0026 task.getOccurrence().isBefore(LocalDateTime.now().plusDays(7)))"},{"lineNumber":103,"author":{"gitId":"VRSoorya"},"content":"                .sorted()"},{"lineNumber":104,"author":{"gitId":"VRSoorya"},"content":"                .collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":105,"author":{"gitId":"VRSoorya"},"content":"        return new TaskList(matches);"},{"lineNumber":106,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":108,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"VRSoorya"},"content":"     * Returns total number of {@code Task}s in the application."},{"lineNumber":110,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"VRSoorya"},"content":"    public int getTotalNumberOfTasks() {"},{"lineNumber":112,"author":{"gitId":"VRSoorya"},"content":"        return tasks.size();"},{"lineNumber":113,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":115,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"VRSoorya"},"content":"     * Returns total number of {@code Task}s that are not completed in the application."},{"lineNumber":117,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"VRSoorya"},"content":"    public int getTotalNumberOfTasksUndone() {"},{"lineNumber":119,"author":{"gitId":"VRSoorya"},"content":"        int count \u003d (int) tasks.stream()"},{"lineNumber":120,"author":{"gitId":"VRSoorya"},"content":"                .filter(x -\u003e x.getStatusIcon().equals(\" \"))"},{"lineNumber":121,"author":{"gitId":"VRSoorya"},"content":"                .count(); // returns long"},{"lineNumber":122,"author":{"gitId":"VRSoorya"},"content":"        assert count \u003c\u003d this.getTotalNumberOfTasks();"},{"lineNumber":123,"author":{"gitId":"VRSoorya"},"content":"        return count;"},{"lineNumber":124,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":126,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code String} representation of this {@code TaskList}."},{"lineNumber":128,"author":{"gitId":"VRSoorya"},"content":"     * {@code Task}s are indexed by natural counting numbers from 1,2,3..."},{"lineNumber":129,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":131,"author":{"gitId":"VRSoorya"},"content":"    public String toString() {"},{"lineNumber":132,"author":{"gitId":"VRSoorya"},"content":"        if (this.hasTasks()) {"},{"lineNumber":133,"author":{"gitId":"VRSoorya"},"content":"            // Adapted from: https://stackoverflow.com/questions/49080255/get-index-while-iterating-list-with-stream"},{"lineNumber":134,"author":{"gitId":"VRSoorya"},"content":"            return IntStream.range(0, tasks.size())"},{"lineNumber":135,"author":{"gitId":"VRSoorya"},"content":"                    .mapToObj(index -\u003e String.format(\"  %s. %s\\n\", index + 1, tasks.get(index).toString()))"},{"lineNumber":136,"author":{"gitId":"VRSoorya"},"content":"                    .reduce((a, b) -\u003e a + b)"},{"lineNumber":137,"author":{"gitId":"VRSoorya"},"content":"                    .get();"},{"lineNumber":138,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"VRSoorya"},"content":"        assert !this.hasTasks();"},{"lineNumber":140,"author":{"gitId":"VRSoorya"},"content":"        return \"\";"},{"lineNumber":141,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":142}},{"path":"src/main/java/project/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.task;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":" * Represents a todo task in the application."},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":" * This extends the {@code Task} class."},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"public class Todo extends Task {"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code Todo}."},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"     * @param description The todo description."},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    public Todo(String description) {"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code String} representation of this {@code Todo}."},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":25}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: lightblue;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-radius: 5; -fx-background-color: white;\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"         \u003cpadding\u003e"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"            \u003cInsets bottom\u003d\"0.5\" left\u003d\"0.5\" right\u003d\"0.5\" top\u003d\"0.5\" /\u003e"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"         \u003c/padding\u003e"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"      \u003c/Label\u003e"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"VRSoorya":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: light-blue\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"project.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" styleClass\u003d\"sidebar-section\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: lightblue;\" /\u003e"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"VRSoorya":19}},{"path":"src/test/java/io/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package io;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import project.io.Parser;"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"public class ParserTest {"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    public void parseIntParameterTest_validInt_success() {"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(Parser.parseIntParameter(\"done 3\"), 3);"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    public void parseParameterTest_validExpression_success() {"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(Parser.parseParameter(\"deadline task /by now\", \"/by\", 1), \"now\");"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    public void parseDeadlineParameterTest_validExpression_success() {"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"        String testDateTime \u003d \" 9090-01-01 00:00\";"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"        LocalDateTime resultExpected \u003d LocalDateTime.parse(testDateTime.trim(),"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(Parser.parseInputDateTime(testDateTime), resultExpected);"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":30}},{"path":"src/test/java/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import project.task.Todo;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"public class TaskListTest {"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    private TaskList testTaskList \u003d new TaskList();"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    public void hasTasksTest_noTask_false() {"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(testTaskList.hasTasks(), false);"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    public void addTaskTest_addTask_success() {"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"        Todo testTask \u003d new Todo(\"test\");"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"        testTaskList.addTask(testTask);"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(true, testTaskList.hasTasks());"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(1, testTaskList.getTotalNumberOfTasks());"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(testTask.toString(), testTaskList.getTask(1).toString());"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    public void markTaskAsDoneTest_validIndex_success() {"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        Todo testTask \u003d new Todo(\"test\");"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        testTaskList.addTask(testTask);"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"        testTaskList.markTaskAsDone(1);"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(0, testTaskList.getTotalNumberOfTasksUndone());"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(\"X\", testTaskList.getTask(1).getStatusIcon());"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"helps mee"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"deadline now"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"events test"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"doneeee"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"delete??"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"liST"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"todo hi"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"done hi"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"delete hi"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"event test /at idk..."},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"deadline submit /by ytd!"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"List"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"done 2"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"done 10"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"todo tutorial"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"delete 10"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"done 3"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"LIsT"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"heLp"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"bYE"}],"authorContributionMap":{"VRSoorya":21}}]
