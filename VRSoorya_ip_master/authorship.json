[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"public class Deadline extends Task{"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"    LocalDateTime deadline;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"    public Deadline(String description, LocalDateTime deadline) {"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"        return \"[D]\"+super.toString()+\" (by: \""},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"                + deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\"))"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"                + \")\";"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":18}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"    LocalDateTime start;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"    LocalDateTime end;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"        this.start \u003d start;"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"        this.end \u003d end;"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"        return \"[E]\"+super.toString()+\" (at: \""},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"                + start.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\")) + \" to \""},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"                + end.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\")) + \")\";"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":20}},{"path":"src/main/java/Olaf.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"import java.io.BufferedReader;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.io.InputStreamReader;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"// @@author: VRSoorya"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"// adapted from GitHub repo nus-cs2103-AY2021S2/ip"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"public class Olaf {"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    // private Ui ui;"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    public Olaf(String filePath) {"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"        Storage storage \u003d new Storage(filePath);"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"        // ui \u003d new Ui();"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"        } catch (IOException e) {"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"            // ui.showLoadingError();"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    public void run() {"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        BufferedReader bf \u003d new BufferedReader(new InputStreamReader(System.in));"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        System.out.println(PrintText.WELCOME_MESSAGE);"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"        while(true) {"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"            String command \u003d null;"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"            try {"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"                command \u003d bf.readLine();"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"            } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"                e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"            if(command.equalsIgnoreCase(\"bye\")){"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"                String out \u003d \"Aww hope to see you soon, goodbye!\";"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"                System.out.println(PrintText.BORDER + \"\\n  \" + out + \"\\n\" + PrintText.BORDER);"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"                break;"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"            } else if(command.equalsIgnoreCase(\"list\")){"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"                if (tasks.hasTasks()) {"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"                    // print iteratively if there are tasks in the list"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"                            + \"\\n  Here are all the tasks in your list:\\n\\n\""},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"                            + tasks.toString());"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"                    System.out.printf(\"  Only %s tasks left to be done!\\n%s\\n\","},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"                            tasks.getTotalNumberOfTasksUndone(), PrintText.BORDER);"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"                } else {"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.EMPTY_TASKLIST_MESSAGE);"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"                }"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"            } else if(command.toLowerCase().startsWith(\"done\")){"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"                try {"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"                    int idx \u003d Integer.parseInt(command.split(\" \")[1]);"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"                    tasks.markTaskAsDone(idx);"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"                    Storage.saveData(tasks.toString());"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER + \"\\n  Great job! You\u0027re done with:\\n\");"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"                    System.out.printf(\"  %s. %s\\n\", idx, tasks.getTask(idx));"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"                    System.out.printf(\"\\n  Now %s tasks are left to be done!\\n\","},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"                            tasks.getTotalNumberOfTasksUndone());"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER);"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"                            + \"\\n  Oops! Please state the task number to mark as done:\\n\");"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(\"  done \u003ctask number\u003e\\n\");"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(\"  Type \u0027list\u0027 to view all tasks\\n\" +"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"                            \"  and their respective numbers\\n\" + PrintText.BORDER);"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER + \"\\n  Oops! No such task found...\\n\");"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"                    System.out.printf(\"  There are only %s tasks in your list.\\n\", tasks.getTotalNumberOfTasks());"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER);"},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER + \"\\n  Oops! No such task found...\");"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(\"  Please state the task number to mark as done:\\n\");"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(\"  done \u003ctask number\u003e\\n\");"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(\"  Type \u0027list\u0027 to view all tasks\\n\" +"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"                            \"  and their respective numbers\\n\" + PrintText.BORDER);"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"            } else if(command.toLowerCase().startsWith(\"delete\")){"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"                try {"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"                    int idx \u003d Integer.parseInt(command.split(\" \")[1]);"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"                    Task deleted \u003d tasks.deleteTask(idx);"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"                    Storage.saveData(tasks.toString());"},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER + \"\\n  Got it, this task is now deleted:\\n\");"},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":"                    System.out.printf(\"  %s. %s\\n\", idx, deleted);"},{"lineNumber":91,"author":{"gitId":"VRSoorya"},"content":"                    System.out.printf(\"\\n  You now have %s tasks left if your list.\\n\","},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":"                            tasks.getTotalNumberOfTasks());"},{"lineNumber":93,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER);"},{"lineNumber":94,"author":{"gitId":"VRSoorya"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER + \"\\n  Oops! Please state the task number to delete:\\n\");"},{"lineNumber":96,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(\"  delete \u003ctask number\u003e\\n\");"},{"lineNumber":97,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(\"  Type \u0027list\u0027 to view all tasks\\n\" +"},{"lineNumber":98,"author":{"gitId":"VRSoorya"},"content":"                            \"  and their respective numbers\\n\" + PrintText.BORDER);"},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":100,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER + \"\\n  Oops! No such task found...\\n\");"},{"lineNumber":101,"author":{"gitId":"VRSoorya"},"content":"                    System.out.printf(\"  There are only %s tasks in your list.\\n\","},{"lineNumber":102,"author":{"gitId":"VRSoorya"},"content":"                            tasks.getTotalNumberOfTasks());"},{"lineNumber":103,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER);"},{"lineNumber":104,"author":{"gitId":"VRSoorya"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":105,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER + \"\\n  Oops! No such task found...\");"},{"lineNumber":106,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(\"  Please state the task number to delete:\\n\");"},{"lineNumber":107,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(\"  done \u003ctask number\u003e\\n\");"},{"lineNumber":108,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(\"  Type \u0027list\u0027 to view all tasks\\n\" +"},{"lineNumber":109,"author":{"gitId":"VRSoorya"},"content":"                            \"  and their respective numbers\\n\" + PrintText.BORDER);"},{"lineNumber":110,"author":{"gitId":"VRSoorya"},"content":"                }"},{"lineNumber":111,"author":{"gitId":"VRSoorya"},"content":"            } else if(command.toLowerCase().startsWith(\"todo\")){"},{"lineNumber":112,"author":{"gitId":"VRSoorya"},"content":"                try {"},{"lineNumber":113,"author":{"gitId":"VRSoorya"},"content":"                    String expression \u003d command.split(\" \", 2)[1];"},{"lineNumber":114,"author":{"gitId":"VRSoorya"},"content":"                    Todo newTodo \u003d new Todo(expression);"},{"lineNumber":115,"author":{"gitId":"VRSoorya"},"content":"                    tasks.addTask(newTodo);"},{"lineNumber":116,"author":{"gitId":"VRSoorya"},"content":"                    Storage.saveData(tasks.toString());"},{"lineNumber":117,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":118,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER + \"\\n  Okie added new task:\\n\");"},{"lineNumber":119,"author":{"gitId":"VRSoorya"},"content":"                    System.out.printf(\"  %s. %s\\n\", tasks.getTotalNumberOfTasks(), newTodo);"},{"lineNumber":120,"author":{"gitId":"VRSoorya"},"content":"                    System.out.printf(\"\\n  Total %s tasks, only %s left to be done!\\n\","},{"lineNumber":121,"author":{"gitId":"VRSoorya"},"content":"                            tasks.getTotalNumberOfTasks(),"},{"lineNumber":122,"author":{"gitId":"VRSoorya"},"content":"                            tasks.getTotalNumberOfTasksUndone());"},{"lineNumber":123,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER);"},{"lineNumber":124,"author":{"gitId":"VRSoorya"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":125,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER"},{"lineNumber":126,"author":{"gitId":"VRSoorya"},"content":"                            + \"\\n  Oops! Please add a task description as follows:\\n\");"},{"lineNumber":127,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(\"  todo \u003ctask description\u003e\\n\" + PrintText.BORDER);"},{"lineNumber":128,"author":{"gitId":"VRSoorya"},"content":"                }"},{"lineNumber":129,"author":{"gitId":"VRSoorya"},"content":"            } else if(command.toLowerCase().startsWith(\"deadline\")){"},{"lineNumber":130,"author":{"gitId":"VRSoorya"},"content":"                try {"},{"lineNumber":131,"author":{"gitId":"VRSoorya"},"content":"                    String expression \u003d command.split(\" \", 2)[1];"},{"lineNumber":132,"author":{"gitId":"VRSoorya"},"content":"                    String[] descriptionSplit \u003d expression.split(\"/by\", 2);"},{"lineNumber":133,"author":{"gitId":"VRSoorya"},"content":"                    // references: https://stackoverflow.com/questions/43845215/java-regex-to-check-for-date-and-time"},{"lineNumber":134,"author":{"gitId":"VRSoorya"},"content":"                    LocalDateTime deadline \u003d LocalDateTime.parse(descriptionSplit[1].trim(),"},{"lineNumber":135,"author":{"gitId":"VRSoorya"},"content":"                            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"},{"lineNumber":136,"author":{"gitId":"VRSoorya"},"content":"                    Deadline newDeadline \u003d new Deadline(descriptionSplit[0], deadline);"},{"lineNumber":137,"author":{"gitId":"VRSoorya"},"content":"                    tasks.addTask(newDeadline);"},{"lineNumber":138,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":139,"author":{"gitId":"VRSoorya"},"content":"                    Storage.saveData(tasks.toString());"},{"lineNumber":140,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":141,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER + \"\\n  Okie added new task:\\n\");"},{"lineNumber":142,"author":{"gitId":"VRSoorya"},"content":"                    System.out.printf(\"  %s. %s\\n\", tasks.getTotalNumberOfTasks(), newDeadline);"},{"lineNumber":143,"author":{"gitId":"VRSoorya"},"content":"                    System.out.printf(\"\\n  Total %s tasks, only %s left to be done!\\n\","},{"lineNumber":144,"author":{"gitId":"VRSoorya"},"content":"                            tasks.getTotalNumberOfTasks(),"},{"lineNumber":145,"author":{"gitId":"VRSoorya"},"content":"                            tasks.getTotalNumberOfTasksUndone());"},{"lineNumber":146,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER);"},{"lineNumber":147,"author":{"gitId":"VRSoorya"},"content":"                } catch (Exception e) {"},{"lineNumber":148,"author":{"gitId":"VRSoorya"},"content":"                    // catches both ParseException and IndexOutOfBounds exception"},{"lineNumber":149,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER + \"\\n  Oops! Please add a deadline using\" +"},{"lineNumber":150,"author":{"gitId":"VRSoorya"},"content":"                            \"\\n  the 24-hour time format as follows:\\n\");"},{"lineNumber":151,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(\"  deadline \u003ctask description\u003e /by \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e\\n\" + PrintText.BORDER);"},{"lineNumber":152,"author":{"gitId":"VRSoorya"},"content":"                }"},{"lineNumber":153,"author":{"gitId":"VRSoorya"},"content":"            } else if(command.toLowerCase().startsWith(\"event\")) {"},{"lineNumber":154,"author":{"gitId":"VRSoorya"},"content":"                try {"},{"lineNumber":155,"author":{"gitId":"VRSoorya"},"content":"                    String expression \u003d command.split(\" \", 2)[1];"},{"lineNumber":156,"author":{"gitId":"VRSoorya"},"content":"                    String[] descriptionSplit \u003d expression.split(\"/at\", 2);"},{"lineNumber":157,"author":{"gitId":"VRSoorya"},"content":"                    String[] durationSplit \u003d descriptionSplit[1].trim().split(\" to \");"},{"lineNumber":158,"author":{"gitId":"VRSoorya"},"content":"                    LocalDateTime start \u003d LocalDateTime.parse(durationSplit[0].trim(),"},{"lineNumber":159,"author":{"gitId":"VRSoorya"},"content":"                            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"},{"lineNumber":160,"author":{"gitId":"VRSoorya"},"content":"                    LocalDateTime end \u003d LocalDateTime.parse(durationSplit[1].trim(),"},{"lineNumber":161,"author":{"gitId":"VRSoorya"},"content":"                            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"},{"lineNumber":162,"author":{"gitId":"VRSoorya"},"content":"                    Event newEvent \u003d new Event(descriptionSplit[0], start, end);"},{"lineNumber":163,"author":{"gitId":"VRSoorya"},"content":"                    tasks.addTask(newEvent);"},{"lineNumber":164,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":165,"author":{"gitId":"VRSoorya"},"content":"                    Storage.saveData(tasks.toString());"},{"lineNumber":166,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":167,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER + \"\\n  Okie added new task:\\n\");"},{"lineNumber":168,"author":{"gitId":"VRSoorya"},"content":"                    System.out.printf(\"  %s. %s\\n\", tasks.getTotalNumberOfTasks(), newEvent);"},{"lineNumber":169,"author":{"gitId":"VRSoorya"},"content":"                    System.out.printf(\"\\n  Total %s tasks, only %s left to be done!\\n\","},{"lineNumber":170,"author":{"gitId":"VRSoorya"},"content":"                            tasks.getTotalNumberOfTasks(),"},{"lineNumber":171,"author":{"gitId":"VRSoorya"},"content":"                            tasks.getTotalNumberOfTasksUndone());"},{"lineNumber":172,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER);"},{"lineNumber":173,"author":{"gitId":"VRSoorya"},"content":"                } catch (Exception e) {"},{"lineNumber":174,"author":{"gitId":"VRSoorya"},"content":"                    // catches both ParseException and IndexOutOfBounds exception"},{"lineNumber":175,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(PrintText.BORDER + \"\\n  Oops! Please add an event using\" +"},{"lineNumber":176,"author":{"gitId":"VRSoorya"},"content":"                            \"\\n  the 24-hour time format as follows:\\n\");"},{"lineNumber":177,"author":{"gitId":"VRSoorya"},"content":"                    System.out.println(\"  event \u003ctask description\u003e /at \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e to \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e\\n\" + PrintText.BORDER);"},{"lineNumber":178,"author":{"gitId":"VRSoorya"},"content":"                }"},{"lineNumber":179,"author":{"gitId":"VRSoorya"},"content":"            } else if (command.equalsIgnoreCase(\"help\")) {"},{"lineNumber":180,"author":{"gitId":"VRSoorya"},"content":"                System.out.println(PrintText.BORDER + \"\\n\" + PrintText.HELP + PrintText.BORDER);"},{"lineNumber":181,"author":{"gitId":"VRSoorya"},"content":"            } else {"},{"lineNumber":182,"author":{"gitId":"VRSoorya"},"content":"                System.out.println(PrintText.BORDER + \"\\n  Hmm sorry I don\u0027t understand :(\\n\");"},{"lineNumber":183,"author":{"gitId":"VRSoorya"},"content":"                System.out.println(PrintText.HELP.toString() + PrintText.BORDER.toString());"},{"lineNumber":184,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":185,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":188,"author":{"gitId":"VRSoorya"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":189,"author":{"gitId":"VRSoorya"},"content":"        new Olaf(\"../../../data/olaf.txt\").run();"},{"lineNumber":190,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":191}},{"path":"src/main/java/PrintText.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"public enum PrintText {"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"    LOGO {"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"            return \"           ___  _           ,_,\\n\""},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"                    + \"         |  _  | |   ___   / /\\n\""},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"                    + \"         | | | | |  / _ \\\\ \u003d; ;\u003d,\\n\""},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"                    + \"         | |_| | |_| |_| \\\\ | |\\n\""},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"                    + \"          \\\\___/\\\\___/---;_| |_|\\n\";"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    BORDER {"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"            return \" --*---*---*---*---*---*---*---*---*---*--\";"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    WELCOME_MESSAGE {"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"            return LOGO + \"\\n\" + BORDER + \"\\n  Hey there, Olaf here!\" +"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"                    \"\\n  What will we be doing today?\";"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"    HELP {"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"            return \"  Please use the following to update me:\\n\\n\" +"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"                    \"    todo \u003ctask description\u003e\\n      \\\\_ adds a task to be done\\n\" +"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"                    \"    deadline \u003ctask description\u003e /by \u003cDD-MM-YYYY\u003e\\n      \\\\_ adds a deadline\\n\" +"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"                    \"    event \u003ctask description\u003e /at \u003cDD-MM-YYYY HHMM\u003e to \u003cDD-MM-YYYY HHMM\u003e\" +"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"                    \"\\n      \\\\_ adds an event\\n\" +"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"                    \"    list\\n      \\\\_ lists all TaskList.tasks, deadlines and events\\n\" +"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"                    \"    done \u003ctask number\u003e\\n      \\\\_ marks a task as done\\n\" +"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"                    \"    delete \u003ctask number\u003e\\n      \\\\_ deletes a task from the list\\n\" +"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"                    \"    bye\\n      \\\\_ exists this application\\n\";"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"    EMPTY_TASKLIST_MESSAGE {"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"            return BORDER + \"\\n  You don\u0027t have any tasks yet :)\" +"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"                    \"\\n  Type \u0027help\u0027 to see how you can add a task\\n\" + BORDER;"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":50}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import java.nio.file.StandardOpenOption;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"import java.util.stream.Collectors;"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    // source: https://stackoverflow.com/questions/28947250/create-a-directory-if-it-does-not-exist-and-then-create-the-files-in-that-direct"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    // inserts correct file path separator on *nix and Windows"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    private static Path dataPath;"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    Storage(String filePath) {"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"        String[] filePathSplit \u003d filePath.split(\"(?:.(?!/))+$\", 2);"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"        String fileDirectory \u003d filePathSplit[0];"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        String file \u003d filePathSplit[1];"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"        File directory \u003d new File(fileDirectory);"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"        if (! directory.exists()){"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"            directory.mkdir();"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"        dataPath \u003d Paths.get(filePath);"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"    static void saveData(String taskList) {"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"            System.out.println(taskList);"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"            // save all tasks again if TaskList has tasks"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"            if (taskList.length() \u003e 0) {"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"                // splitting by \"  %d. [\" incase the task description uses periods and digits as well"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"                ArrayList\u003cString\u003e tasksWithoutIndex \u003d new ArrayList\u003c\u003e(List.of(taskList.split(\"  \\\\d. \\\\[\")));"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"                String toSave \u003d tasksWithoutIndex.stream()"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"                        .reduce((a, b) -\u003e a + b)"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"                        .get();"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"                // adapted from: https://attacomsian.com/blog/java-save-string-to-text-file"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"                // write string to a file"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"                Files.writeString(dataPath,"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"                        toSave,"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"                        StandardCharsets.UTF_8,"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"                        StandardOpenOption.CREATE,"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"                        StandardOpenOption.TRUNCATE_EXISTING);"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"            } else {"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"                Files.deleteIfExists(dataPath);"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"        } catch (IOException ignore) {"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"            // program is safe to continue"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"            // StandardOpenOption.CREATE handles the case when file does not exist"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"    ArrayList\u003cTask\u003e load() throws IOException {"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"        return Files.readAllLines(dataPath,"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"                StandardCharsets.UTF_8)"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"                .stream()"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"                .map(this::readTaskFromData)"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"                .collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"    private Task readTaskFromData(String line) {"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"        boolean taskIsDone \u003d (line.charAt(3) \u003d\u003d \u0027X\u0027);"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"        Task output \u003d null;"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"        System.out.println(line);"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"        if (line.startsWith(\"T]\")) {"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"            String expression \u003d line.split(\"] \", 2)[1];"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"            output \u003d new Todo(expression);"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"        } else if (line.startsWith(\"D]\")) {"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"            String expression \u003d line.split(\"] \", 2)[1];"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"            String[] dateTimeSplit \u003d expression.split(\" \\\\(by:\", 2);"},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"            LocalDateTime deadline \u003d LocalDateTime.parse(dateTimeSplit[1].trim(),"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"                    DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm)\"));"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"            output \u003d new Deadline(dateTimeSplit[0], deadline);"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"        } else if (line.startsWith(\"E]\")) {"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"            String expression \u003d line.split(\"] \", 2)[1];"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"            String[] descriptionSplit \u003d expression.split(\" \\\\(at: \", 2);"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"            String[] durationSplit \u003d descriptionSplit[1].split(\" to \");"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(durationSplit[0].trim(),"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"                    DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\"));"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(durationSplit[1].trim(),"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"                    DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm)\"));"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"            output \u003d new Event(descriptionSplit[0], start, end);"},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"        if (taskIsDone) {"},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":"            assert output !\u003d null;"},{"lineNumber":91,"author":{"gitId":"VRSoorya"},"content":"            output.markAsDone();"},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"VRSoorya"},"content":"        return output;"},{"lineNumber":94,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":95}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"// adapted from partial solution on the module webpage"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    public int isNotDone() {"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"        return (isDone? 0 : 1);"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    public void markAsDone() {"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"        this.isDone \u003d true;"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"}"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":""}],"authorContributionMap":{"VRSoorya":29}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.util.stream.IntStream;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"public class TaskList {"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"    List\u003cTask\u003e tasks;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"    TaskList() {"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    TaskList(ArrayList\u003cTask\u003e savedData) {"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"        tasks \u003d savedData;"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    boolean hasTasks() {"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"        return tasks.size() \u003e 0;"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    Task getTask(int idx) {"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"        return tasks.get(idx - 1);"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    void addTask(Task task) {"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"        tasks.add(task);"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"    void markTaskAsDone(int idx) {"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"        tasks.get(idx - 1).markAsDone();"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"    Task deleteTask(int idx) {"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"        return tasks.remove(idx - 1);"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"    int getTotalNumberOfTasks() {"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        return tasks.size();"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    int getTotalNumberOfTasksUndone() {"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"        return tasks.stream()"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"                .mapToInt(Task::isNotDone)"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"                .reduce(0, Integer::sum);"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"    public String toString() {"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        if (this.hasTasks()) {"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"            // adapted from: https://stackoverflow.com/questions/49080255/get-index-while-iterating-list-with-stream"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"            return IntStream.range(0, tasks.size())"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"                    .mapToObj(index -\u003e String.format(\"  %s. %s\\n\","},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"                            index, tasks.get(index).toString()))"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"                    .reduce((a, b) -\u003e a + b)"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"                    .get();"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"        return \"\";"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":58}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"        return \"[T]\"+super.toString();"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"helps mee"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"deadline now"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"events test"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"doneeee"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"delete??"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"liST"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"todo hi"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"done hi"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"delete hi"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"event test /at idk..."},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"deadline submit /by ytd!"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"List"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"done 2"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"done 10"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"todo tutorial"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"delete 10"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"done 3"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"LIsT"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"heLp"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"bYE"}],"authorContributionMap":{"VRSoorya":21}}]
