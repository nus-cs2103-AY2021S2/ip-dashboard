[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"    // id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"}"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"group \u0027org.example\u0027"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"version \u00270.1\u0027"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"repositories {"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    mavenCentral()"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"}"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"//sourceSets {"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"//    main {"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"//        //if you truly want to override the defaults:"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"//        output.resourcesDir \u003d file(\"build/classes/main/resources\")"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"//        // Compiled Java classes should use this directory"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"//        java.outputDir \u003d file(\"build/classes/main\")"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"//    }"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"//}"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"processResources {"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    from \u0027src/main/resources\u0027"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"}"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"application {"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    project.setProperty(\"mainClassName\", \u0027project.Launcher\u0027)"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"}"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"}"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"dependencies {"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":54}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":":end"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":":omega"}],"authorContributionMap":{"VRSoorya":89}},{"path":"src/main/java/project/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":" * An example of a custom control using FXML."},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    private Label dialog;"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    private ImageView displayPicture;"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"            fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        dialog.setText(text);"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"        displayPicture.setImage(img);"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    private void flip() {"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"        Collections.reverse(tmp);"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"        return new DialogBox(text, img);"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"        db.flip();"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"        return db;"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":60}},{"path":"src/main/java/project/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"        Application.launch(MainApp.class, args);"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":12}},{"path":"src/main/java/project/MainApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":" * Application GUI using FXML"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"public class MainApp extends Application {"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    private Olaf olaf \u003d new Olaf();"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"     * Starts a session of the application."},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader();"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"            fxmlLoader.setLocation(MainApp.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"            AnchorPane ap \u003d fxmlLoader.load(); //breaks here cos it cant load MainWindow"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"            stage.setScene(scene);"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setOlaf(olaf);"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"            stage.show();"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":34}},{"path":"src/main/java/project/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    private Olaf olaf;"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    private Image olafImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/olaf-head.png\"));"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"    public void setOlaf(Olaf o) {"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        olaf \u003d o;"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Olaf\u0027s reply and then appends them to"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"    @FXML"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"    private void handleUserInput() {"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"        String response \u003d olaf.getResponse(input);"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"                DialogBox.getDukeDialog(response, olafImage)"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"        );"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"        userInput.clear();"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":52}},{"path":"src/main/java/project/Olaf.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import project.common.PrintedText;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import project.io.Ui;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"// @@author: VRSoorya"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"// adapted from GitHub repo nus-cs2103-AY2021S2/ip"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":" * Initialises each session of the application."},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"public class Olaf {"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    public static final String FILE_PATH \u003d \"./data/olaf.txt\";"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    private OlafApp app;"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    private Storage storage;"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    private TaskList tasks;"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    private Ui ui;"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code Olaf}."},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    public Olaf() {"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        storage \u003d new Storage(FILE_PATH);"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"        ui \u003d new Ui();"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"            ui.showFormatResponse(PrintedText.WELCOME_MESSAGE);"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"            ui.showLoadingError();"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"        app \u003d new OlafApp(tasks, ui, storage);"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"     * Responds to user input."},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"    public String getResponse(String text) {"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"        return app.run(text);"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":48}},{"path":"src/main/java/project/OlafApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import project.common.PrintedText;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import project.io.Parser;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.io.Ui;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import project.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import project.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import project.task.Event;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import project.task.Task;"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import project.task.Todo;"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":" * Handles application logic."},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"public class OlafApp {"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    private TaskList taskList;"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    private Ui ui;"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    private Storage storage;"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    private boolean isActive;"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code OlafApp}."},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"     * @param tasks All the tasks stored."},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"     * @param ui A {@code Ui} instance to handle test output."},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"     * @param storage A {@code Storage} instance to handle saving and loading tasks from local file."},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"    OlafApp(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"        this.taskList \u003d tasks;"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"        this.ui \u003d ui;"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        this.storage \u003d storage;"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        this.isActive \u003d true;"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"     * Executes each session of the application."},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"     * @param command"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"    public String run(String command) {"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"        assert command !\u003d null;"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"        if (command.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"            this.stop();"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.equalsIgnoreCase(\"list\")) {"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"            // todo: use try catch here"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"            if (taskList.hasTasks()) {"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"                return ui.showList(taskList);"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"            } else {"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"                return PrintedText.EMPTY_TASKLIST_ERROR.toString();"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.toLowerCase().startsWith(\"find\")) {"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"            String expression \u003d Parser.parseParameter(command, \" \", 1);"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"            TaskList matches \u003d taskList.findTasks(expression);"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"            if (matches.hasTasks()) {"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"                // todo: index of matches List should follow original taskList"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"                String output \u003d \"Here are the tasks that match your search:\\n\\n\" + matches.toString();"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"                return ui.showFormatResponse(output);"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"            } else {"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"                return ui.showFormatResponse(\"No tasks match your search...\");"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.toLowerCase().startsWith(\"done\")) {"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"            try {"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"                int id \u003d Parser.parseIntParameter(command);"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"                taskList.markTaskAsDone(id);"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"                storage.saveData(taskList);"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"                return ui.showDoneSuccess(id, taskList.getTask(id), taskList.getTotalNumberOfTasksUndone());"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"                return ui.showFormatError(PrintedText.DONE_FORMAT);"},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"            } catch (IndexOutOfBoundsException | NumberFormatException e) {"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"                return ui.showInvalidIndexError();"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.toLowerCase().startsWith(\"delete\")) {"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"            try {"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"                int id \u003d Parser.parseIntParameter(command);"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"                Task deleted \u003d taskList.deleteTask(id);"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"                storage.saveData(taskList);"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"                return ui.showDeleteSuccess(id, deleted, taskList.getTotalNumberOfTasks());"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":"                return ui.showFormatError(PrintedText.DELETE_FORMAT);"},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"            } catch (IndexOutOfBoundsException | NumberFormatException e) {"},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":"                return ui.showInvalidIndexError();"},{"lineNumber":91,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.toLowerCase().startsWith(\"todo\")) {"},{"lineNumber":93,"author":{"gitId":"VRSoorya"},"content":"            try {"},{"lineNumber":94,"author":{"gitId":"VRSoorya"},"content":"                String expression \u003d Parser.parseParameter(command, \" \", 1);"},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"                Todo newTodo \u003d new Todo(expression);"},{"lineNumber":96,"author":{"gitId":"VRSoorya"},"content":"                taskList.addTask(newTodo);"},{"lineNumber":97,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":98,"author":{"gitId":"VRSoorya"},"content":"                storage.saveData(taskList);"},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":100,"author":{"gitId":"VRSoorya"},"content":"                return ui.showNewTaskAddedSuccess(taskList.getTotalNumberOfTasks(),"},{"lineNumber":101,"author":{"gitId":"VRSoorya"},"content":"                        newTodo, taskList.getTotalNumberOfTasksUndone());"},{"lineNumber":102,"author":{"gitId":"VRSoorya"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":103,"author":{"gitId":"VRSoorya"},"content":"                return ui.showFormatError(PrintedText.TODO_FORMAT);"},{"lineNumber":104,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.toLowerCase().startsWith(\"deadline\")) {"},{"lineNumber":106,"author":{"gitId":"VRSoorya"},"content":"            try {"},{"lineNumber":107,"author":{"gitId":"VRSoorya"},"content":"                String expression \u003d Parser.parseParameter(command, \" \", 1);"},{"lineNumber":108,"author":{"gitId":"VRSoorya"},"content":"                String description \u003d Parser.parseParameter(expression, \"/by\", 0);"},{"lineNumber":109,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":110,"author":{"gitId":"VRSoorya"},"content":"                String dateTime \u003d Parser.parseParameter(expression, \"/by\", 1);"},{"lineNumber":111,"author":{"gitId":"VRSoorya"},"content":"                LocalDateTime deadline \u003d Parser.parseDateTimeParameter(dateTime);"},{"lineNumber":112,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":113,"author":{"gitId":"VRSoorya"},"content":"                Deadline newDeadline \u003d new Deadline(description, deadline);"},{"lineNumber":114,"author":{"gitId":"VRSoorya"},"content":"                taskList.addTask(newDeadline);"},{"lineNumber":115,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":116,"author":{"gitId":"VRSoorya"},"content":"                storage.saveData(taskList);"},{"lineNumber":117,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":118,"author":{"gitId":"VRSoorya"},"content":"                return ui.showNewTaskAddedSuccess(taskList.getTotalNumberOfTasks(),"},{"lineNumber":119,"author":{"gitId":"VRSoorya"},"content":"                        newDeadline, taskList.getTotalNumberOfTasksUndone());"},{"lineNumber":120,"author":{"gitId":"VRSoorya"},"content":"            } catch (Exception e) {"},{"lineNumber":121,"author":{"gitId":"VRSoorya"},"content":"                // catches both ParseException and IndexOutOfBounds exception"},{"lineNumber":122,"author":{"gitId":"VRSoorya"},"content":"                return ui.showFormatError(PrintedText.DEADLINE_FORMAT);"},{"lineNumber":123,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.toLowerCase().startsWith(\"event\")) {"},{"lineNumber":125,"author":{"gitId":"VRSoorya"},"content":"            try {"},{"lineNumber":126,"author":{"gitId":"VRSoorya"},"content":"                String expression \u003d Parser.parseParameter(command, \" \", 1);"},{"lineNumber":127,"author":{"gitId":"VRSoorya"},"content":"                String description \u003d Parser.parseParameter(expression, \"/at\", 0);"},{"lineNumber":128,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":129,"author":{"gitId":"VRSoorya"},"content":"                String dateTime \u003d Parser.parseParameter(expression, \"/at\", 1);"},{"lineNumber":130,"author":{"gitId":"VRSoorya"},"content":"                String start \u003d Parser.parseParameter(dateTime, \" to \", 0);"},{"lineNumber":131,"author":{"gitId":"VRSoorya"},"content":"                String end \u003d Parser.parseParameter(dateTime, \" to \", 1);"},{"lineNumber":132,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":133,"author":{"gitId":"VRSoorya"},"content":"                LocalDateTime startDateTime \u003d Parser.parseDateTimeParameter(start);"},{"lineNumber":134,"author":{"gitId":"VRSoorya"},"content":"                LocalDateTime endDateTime \u003d Parser.parseDateTimeParameter(end);"},{"lineNumber":135,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":136,"author":{"gitId":"VRSoorya"},"content":"                Event newEvent \u003d new Event(description, startDateTime, endDateTime);"},{"lineNumber":137,"author":{"gitId":"VRSoorya"},"content":"                taskList.addTask(newEvent);"},{"lineNumber":138,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":139,"author":{"gitId":"VRSoorya"},"content":"                storage.saveData(taskList);"},{"lineNumber":140,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":141,"author":{"gitId":"VRSoorya"},"content":"                return ui.showNewTaskAddedSuccess(taskList.getTotalNumberOfTasks(),"},{"lineNumber":142,"author":{"gitId":"VRSoorya"},"content":"                        newEvent, taskList.getTotalNumberOfTasksUndone());"},{"lineNumber":143,"author":{"gitId":"VRSoorya"},"content":"            } catch (Exception e) {"},{"lineNumber":144,"author":{"gitId":"VRSoorya"},"content":"                // catches both ParseException and IndexOutOfBounds exception"},{"lineNumber":145,"author":{"gitId":"VRSoorya"},"content":"                return ui.showFormatError(PrintedText.EVENT_FORMAT);"},{"lineNumber":146,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"VRSoorya"},"content":"        } else if (command.equalsIgnoreCase(\"help\")) {"},{"lineNumber":148,"author":{"gitId":"VRSoorya"},"content":"            return ui.showFormatResponse(PrintedText.HELP);"},{"lineNumber":149,"author":{"gitId":"VRSoorya"},"content":"        } else {"},{"lineNumber":150,"author":{"gitId":"VRSoorya"},"content":"            return ui.showFormatResponse(\"  Hmm sorry I don\u0027t understand :(\\n\""},{"lineNumber":151,"author":{"gitId":"VRSoorya"},"content":"                    + \"  Type \u0027help\u0027 to find out how you can talk to me!\\n\");"},{"lineNumber":152,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":154,"author":{"gitId":"VRSoorya"},"content":"        return \"\";"},{"lineNumber":155,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":157,"author":{"gitId":"VRSoorya"},"content":"    private void stop() {"},{"lineNumber":158,"author":{"gitId":"VRSoorya"},"content":"        isActive \u003d false;"},{"lineNumber":159,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":160}},{"path":"src/main/java/project/common/PrintedText.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.common;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":" * All the {@code String} constants commonly used in the application."},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"public enum PrintedText {"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"    LOGO {"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"            return \"           ___  _           ,_,\\n\""},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"                    + \"         |  _  | |   ___   / /\\n\""},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"                    + \"         | | | | |  / _ \\\\ \u003d; ;\u003d,\\n\""},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"                    + \"         | |_| | |_| |_| \\\\ | |\\n\""},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"                    + \"          \\\\___/\\\\___/---;_| |_|\\n\";"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    BORDER {"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"            return \" --*---*---*---*---*---*---*---*---*---*--\\n\";"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    WELCOME_MESSAGE {"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"            return LOGO + \"\\n\" + BORDER + \"  Hey there, Olaf here!\" +"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"                    \"\\n  What will we be doing today?\\n\";"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    TODO_FORMAT {"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"            return \"  todo \u003ctask description\u003e\\n\";"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    DEADLINE_FORMAT {"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"            return \"  deadline \u003ctask description\u003e /by \u003cYYYY-MM-DD HH:mm\u003e\\n\";"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"    EVENT_FORMAT {"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"            return \"  event \u003ctask description\u003e /at \u003cYYYY-MM-DD HH:mm\u003e to \u003cYYYY-MM-DD HH:mm\u003e\\n\";"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"    DONE_FORMAT {"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"            return \"  done \u003ctask number\u003e\\n\";"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"    DELETE_FORMAT {"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"            return \"  delete \u003ctask number\u003e\\n\";"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"    HELP {"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"            return \"  Please use the following to update me:\\n\\n\""},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"                    + \"  \" + TODO_FORMAT + \"      \\\\_ adds a task to be done\\n\""},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"                    + \"  \" + DEADLINE_FORMAT + \"      \\\\_ adds a deadline\\n\""},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"                    + \"  \" + EVENT_FORMAT + \"      \\\\_ adds an event\\n\""},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"                    + \"  \" + DONE_FORMAT + \"      \\\\_ marks a task as done\\n\""},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"                    + \"  \" + DELETE_FORMAT + \"      \\\\_ deletes a task from the list\\n\""},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"                    + \"    list\\n      \\\\_ lists all tasks, deadlines and events\\n\""},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"                    + \"      with their respective task number\\n\""},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"                    + \"    bye\\n      \\\\_ exists this application\\n\";"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"    EMPTY_TASKLIST_ERROR {"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"        @Override"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"        public String toString() {"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"            return BORDER + \"  You don\u0027t have any tasks yet :)\" +"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"                    \"\\n  Type \u0027help\u0027 to see how you can add a task\\n\" + BORDER;"},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"    },"},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":90}},{"path":"src/main/java/project/io/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.io;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":" * Processes the user commands."},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    // todo: try this https://github.com/se-edu/addressbook-level3/blob/master/src/main/java/seedu/address/logic/parser/ParserUtil.java"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    // why do these methods have to be static??"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code int} index parameter of \u0027delete\u0027 and \u0027done\u0027 commands."},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"     * @param command The user command."},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    public static int parseIntParameter(String command) {"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"        return Integer.parseInt(command.split(\" \")[1]);"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"     * Returns a {@code String} parameter of \u0027todo\u0027, \u0027deadline\u0027 and \u0027event\u0027 commands."},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"     * @param command The user command."},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"     * @param regex The regex pattern to split the command by."},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"     * @param index The index of the resultant array to return."},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    public static String parseParameter(String command, String regex, int index) {"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        return command.split(regex, 2)[index].trim();"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"     * Returns a {@code LocalDateTime} parameter from \u0027deadline\u0027 and \u0027event\u0027 commands."},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"     * @param dateTime The user command specifying the date and time."},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"    public static LocalDateTime parseDateTimeParameter(String dateTime) {"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"        return LocalDateTime.parse(dateTime.trim(),"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":42}},{"path":"src/main/java/project/io/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.io;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import project.common.PrintedText;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import project.task.Task;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":" * Handles UI responses."},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"public class Ui {"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    private String formatResponse(String message) {"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"        return PrintedText.BORDER + message + PrintedText.BORDER;"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted message."},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"     * @param text The message to be printed."},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    public String showFormatResponse(String text) {"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        return PrintedText.BORDER.toString() + text + PrintedText.BORDER.toString();"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted message."},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"     * Overloads previous method."},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"     * @param text The {@code PrintText} message to be printed."},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"    public String showFormatResponse(PrintedText text) {"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"        return PrintedText.BORDER.toString() + text + PrintedText.BORDER.toString();"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted message after successfully executing a \u0027list\u0027 command."},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"     * @param taskList The {@code TaskList} with all the tasks."},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"    public String showList(TaskList taskList) {"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"        String message \u003d \"  Here are all the tasks in your list:\\n\\n\""},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"                + taskList.toString() + \"\\n\""},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"                + String.format(\"  Only %s tasks left to be done!\\n\","},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"                taskList.getTotalNumberOfTasksUndone());"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"        return this.formatResponse(message);"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted message after successfully executing a \u0027done\u0027 command."},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"     * @param id The list index of the task marked as \"done\"."},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"     * @param task The task that was \"done\"."},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"     * @param totalNumberOfTasksUndone The number of tasks \"not done\" in the {@code TaskList}."},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"    public String showDoneSuccess(int id, Task task, int totalNumberOfTasksUndone) {"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"        String message \u003d \"  Great job! You\u0027re done with:\\n\\n\""},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"                + String.format(\"  %s. %s\\n\\n\", id, task)"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"                + String.format(\"  Now %s tasks are left to be done!\\n\","},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"                totalNumberOfTasksUndone);"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"        return this.formatResponse(message);"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted message after successfully executing a \u0027delete\u0027 command."},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"     * @param id The list index of the task to be deleted."},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"     * @param task The task that was deleted."},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"     * @param totalNumberOfTasks The number of tasks marked as \"done\" in the {@code TaskList}."},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"    public String showDeleteSuccess(int id, Task task, int totalNumberOfTasks) {"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"        String message \u003d \"  Got it, this task is now deleted:\\n\\n\""},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"                + String.format(\"  %s. %s\\n\\n\", id, task)"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"                + String.format(\"  You now have %s tasks left if your list.\\n\","},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"                totalNumberOfTasks);"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"        return this.formatResponse(message);"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted message after successfully executing"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"     * a \u0027todo\u0027, \u0027deadline\u0027 or \u0027event\u0027 command."},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"     * @param totalNumberOfTasks The number of tasks marked as \"done\" in the {@code TaskList}."},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"     * @param newTask The task that was added."},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"     * @param totalNumberOfTasksUndone The number of tasks marked \"not done\" in the {@code TaskList}."},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"    public String showNewTaskAddedSuccess(int totalNumberOfTasks, Task newTask, int totalNumberOfTasksUndone) {"},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":"        String message \u003d \"  Okie added new task:\\n\\n\""},{"lineNumber":91,"author":{"gitId":"VRSoorya"},"content":"                + String.format(\"  %s. %s\\n\\n\", totalNumberOfTasks, newTask)"},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":"                + String.format(\"  Total %s tasks, only %s left to be done!\\n\","},{"lineNumber":93,"author":{"gitId":"VRSoorya"},"content":"                totalNumberOfTasks,"},{"lineNumber":94,"author":{"gitId":"VRSoorya"},"content":"                totalNumberOfTasksUndone);"},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"        "},{"lineNumber":96,"author":{"gitId":"VRSoorya"},"content":"        return this.formatResponse(message);"},{"lineNumber":97,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted error message for \u0027todo\u0027, \u0027deadline\u0027 or \u0027event\u0027 commands."},{"lineNumber":101,"author":{"gitId":"VRSoorya"},"content":"     * Message shows the expected input format for the respective commands."},{"lineNumber":102,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"VRSoorya"},"content":"     * @param format The {@code PrintText} format message to be printed."},{"lineNumber":104,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"VRSoorya"},"content":"    public String showFormatError(PrintedText format) {"},{"lineNumber":106,"author":{"gitId":"VRSoorya"},"content":"        String message \u003d \"  Oops! Please say it like this:\\n\\n\" + format;"},{"lineNumber":107,"author":{"gitId":"VRSoorya"},"content":"        return this.formatResponse(message);"},{"lineNumber":108,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":110,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted error message for \u0027done\u0027 or \u0027delete\u0027 commands."},{"lineNumber":112,"author":{"gitId":"VRSoorya"},"content":"     * Message shows the expected input format for the respective commands."},{"lineNumber":113,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"VRSoorya"},"content":"    public String showInvalidIndexError() {"},{"lineNumber":115,"author":{"gitId":"VRSoorya"},"content":"        String message \u003d \"  Oops! Please use a valid task number.\\n\\n\""},{"lineNumber":116,"author":{"gitId":"VRSoorya"},"content":"                + \"  Type \u0027list\u0027 to view all tasks\\n  and their respective numbers\\n\";"},{"lineNumber":117,"author":{"gitId":"VRSoorya"},"content":"        return this.formatResponse(message);"},{"lineNumber":118,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":120,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"VRSoorya"},"content":"     * Prints a formatted error message when starting the application with an empty tasklist."},{"lineNumber":122,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"VRSoorya"},"content":"    public String showLoadingError() {"},{"lineNumber":124,"author":{"gitId":"VRSoorya"},"content":"        String message \u003d \"  No existing data found. Starting with empty task.Task list.\\n\";"},{"lineNumber":125,"author":{"gitId":"VRSoorya"},"content":"        return this.formatResponse(message);"},{"lineNumber":126,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":127}},{"path":"src/main/java/project/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.storage;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import project.task.*;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import java.nio.file.Paths;"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"import java.nio.file.StandardOpenOption;"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"import java.util.List;"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"import java.util.stream.Collectors;"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":" * Handles storing and loading of application data from local file."},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":" * All {@code Task}s are stored and read from this file."},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"public class Storage {"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    // source: https://stackoverflow.com/questions/28947250/create-a-directory-if-it-does-not-exist-and-then-create-the-files-in-that-direct"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    // inserts correct file path separator on *nix and Windows"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    private Path dataPath;"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code Storage}."},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"     * @param filePath The path to the file where all the tasks are to be stored."},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"    public Storage(String filePath) {"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        String[] filePathSplit \u003d filePath.split(\"(?:.(?!/))+$\", 2);"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        // take file path with respect to OlafApp directory"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"        String fileDirectory \u003d filePathSplit[0];"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"        File directory \u003d new File(fileDirectory);"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"        if (!directory.exists()) {"},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"            directory.mkdir();"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"        this.dataPath \u003d Paths.get(filePath);"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"     * Saves all the tasks to the local file."},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"     * Overwrites the file everytime this method executes."},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"     * @param taskList The {@code TaskList} of containing all the tasks to be saved."},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"    public void saveData(TaskList taskList) {"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"            // save all tasks again if task.TaskList has tasks"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"            if (taskList.hasTasks()) {"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"                String taskListToString \u003d taskList.toString();"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"                // splitting by \"  %d. [\" in case the task description uses periods and digits as well"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"                ArrayList\u003cString\u003e tasksWithoutIndex \u003d new ArrayList\u003c\u003e("},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"                        List.of(taskListToString.split(\"  \\\\d. \\\\[\")));"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"                String toSave \u003d tasksWithoutIndex.stream()"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"                        .reduce((a, b) -\u003e a + b)"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"                        .get();"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":"                // adapted from: https://attacomsian.com/blog/java-save-string-to-text-file"},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"                // write string to a file"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"                Files.writeString(dataPath,"},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"                        toSave,"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"                        StandardCharsets.UTF_8,"},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"                        StandardOpenOption.CREATE,"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"                        StandardOpenOption.TRUNCATE_EXISTING);"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"            } else {"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"                Files.deleteIfExists(dataPath);"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"        } catch (IOException ignore) {"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"            // program is safe to continue"},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"            // StandardOpenOption.CREATE handles the case when file does not exist"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"     * Reads all the tasks from the local file."},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"     * @throws IOException If there is nothing stored."},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {"},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"        return Files.readAllLines(dataPath,"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"                StandardCharsets.UTF_8)"},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":"                .stream()"},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"                .map(this::readTaskFromData)"},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":"                .collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":91,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":93,"author":{"gitId":"VRSoorya"},"content":"    private Task readTaskFromData(String line) {"},{"lineNumber":94,"author":{"gitId":"VRSoorya"},"content":"        boolean taskIsDone \u003d (line.charAt(3) \u003d\u003d \u0027X\u0027);"},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"        Task output \u003d null;"},{"lineNumber":96,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":97,"author":{"gitId":"VRSoorya"},"content":"        if (line.startsWith(\"T]\")) {"},{"lineNumber":98,"author":{"gitId":"VRSoorya"},"content":"            String expression \u003d line.split(\"] \", 2)[1];"},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":"            output \u003d new Todo(expression);"},{"lineNumber":100,"author":{"gitId":"VRSoorya"},"content":"        } else if (line.startsWith(\"D]\")) {"},{"lineNumber":101,"author":{"gitId":"VRSoorya"},"content":"            String expression \u003d line.split(\"] \", 2)[1];"},{"lineNumber":102,"author":{"gitId":"VRSoorya"},"content":"            String[] dateTimeSplit \u003d expression.split(\" \\\\(by:\", 2);"},{"lineNumber":103,"author":{"gitId":"VRSoorya"},"content":"            LocalDateTime deadline \u003d LocalDateTime.parse(dateTimeSplit[1].trim(),"},{"lineNumber":104,"author":{"gitId":"VRSoorya"},"content":"                    DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm)\"));"},{"lineNumber":105,"author":{"gitId":"VRSoorya"},"content":"            output \u003d new Deadline(dateTimeSplit[0], deadline);"},{"lineNumber":106,"author":{"gitId":"VRSoorya"},"content":"        } else if (line.startsWith(\"E]\")) {"},{"lineNumber":107,"author":{"gitId":"VRSoorya"},"content":"            String expression \u003d line.split(\"] \", 2)[1];"},{"lineNumber":108,"author":{"gitId":"VRSoorya"},"content":"            String[] descriptionSplit \u003d expression.split(\" \\\\(at: \", 2);"},{"lineNumber":109,"author":{"gitId":"VRSoorya"},"content":"            String[] durationSplit \u003d descriptionSplit[1].split(\" to \");"},{"lineNumber":110,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":111,"author":{"gitId":"VRSoorya"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(durationSplit[0].trim(),"},{"lineNumber":112,"author":{"gitId":"VRSoorya"},"content":"                    DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\"));"},{"lineNumber":113,"author":{"gitId":"VRSoorya"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(durationSplit[1].trim(),"},{"lineNumber":114,"author":{"gitId":"VRSoorya"},"content":"                    DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm)\"));"},{"lineNumber":115,"author":{"gitId":"VRSoorya"},"content":"            output \u003d new Event(descriptionSplit[0], start, end);"},{"lineNumber":116,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"VRSoorya"},"content":"        if (taskIsDone) {"},{"lineNumber":118,"author":{"gitId":"VRSoorya"},"content":"            assert output !\u003d null;"},{"lineNumber":119,"author":{"gitId":"VRSoorya"},"content":"            output.markAsDone();"},{"lineNumber":120,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"VRSoorya"},"content":"        return output;"},{"lineNumber":122,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":123}},{"path":"src/main/java/project/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.task;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":" * Represents a deadline task in the application."},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":" * This extends the {@code Task} class."},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    private LocalDateTime deadline;"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code Deadline}."},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"     * @param description The deadline description."},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"     * @param deadline The date and time of the deadline."},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    public Deadline(String description, LocalDateTime deadline) {"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"        super(description);"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code String} representation of this {@code Deadline}."},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"                + deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\"))"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"                + \")\";"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":33}},{"path":"src/main/java/project/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.task;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":" * Represents an event task in the application."},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":" * This extends the {@code Task} class."},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    private LocalDateTime start;"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    private LocalDateTime end;"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code Event}."},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"     * @param description The event description."},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"     * @param start The date and time the event begins."},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"     * @param end The date and time the event ends."},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        super(description);"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"        this.start \u003d start;"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"        this.end \u003d end;"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code String} representation of this {@code Event}."},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"                + start.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\")) + \" to \""},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"                + end.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\")) + \")\";"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":36}},{"path":"src/main/java/project/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.task;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"// adapted from partial solution on the module webpage"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":" * Represents a task in the application."},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"    /** The task description. */"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    protected String description;"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"    /** The task status. */"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    protected boolean isDone;"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code Task} with empty task list."},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"     * @param description The task description."},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    public Task(String description) {"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"        this.isDone \u003d false;"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"     * Returns the task description."},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    public String getDescription() {"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        return this.description;"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code String} representation of this task\u0027s status."},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"    public String getStatusIcon() {"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        return isDone ? \"X\" : \" \";"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code int} representation of this task\u0027s status."},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"     * Note that it returns {@code 1} if this task is \"not done\"."},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"    public int convertNotDoneStatusToOne() {"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"        return isDone ? 0 : 1;"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"     * Changes this task\u0027s status to \"done\"."},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"    public void markAsDone() {"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"        this.isDone \u003d true;"},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code String} representation of this {@code Task}."},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"    public String toString() {"},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"}"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":""}],"authorContributionMap":{"VRSoorya":61}},{"path":"src/main/java/project/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.task;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import java.util.stream.Collectors;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"import java.util.stream.IntStream;"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":" * Represents a list of {@code Task}s in the application."},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":" * Encapsulates storage and operations on {@code Task}s."},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code TaskList} with empty task list."},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    public TaskList() {"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code TaskList} with existing tasks."},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"     * @param savedData {@code ArrayList} of all the tasks stored in local file."},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    public TaskList(ArrayList\u003cTask\u003e savedData) {"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        tasks \u003d savedData;"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":"     * Checks if there are {@code Task}s in the application."},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"    public boolean hasTasks() {"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"        return tasks.size() \u003e 0;"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":38,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"VRSoorya"},"content":"     * Retrieves a {@code Task} in the application by list index."},{"lineNumber":40,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"VRSoorya"},"content":"     * @param idx List index of task as shown in {@code String} representation of {@code TaskList}."},{"lineNumber":42,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"VRSoorya"},"content":"    public Task getTask(int idx) {"},{"lineNumber":44,"author":{"gitId":"VRSoorya"},"content":"        return tasks.get(idx - 1);"},{"lineNumber":45,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":47,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"VRSoorya"},"content":"     * Adds a {@code Task} to the application."},{"lineNumber":49,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"VRSoorya"},"content":"     * @param task any {@code Task} to be added."},{"lineNumber":51,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"VRSoorya"},"content":"    public void addTask(Task task) {"},{"lineNumber":53,"author":{"gitId":"VRSoorya"},"content":"        tasks.add(task);"},{"lineNumber":54,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":56,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"VRSoorya"},"content":"     * Changes status of a {@code Task} to \"done\"."},{"lineNumber":58,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"VRSoorya"},"content":"     * @param idx List index of task as shown in {@code String} representation of {@code TaskList}."},{"lineNumber":60,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"VRSoorya"},"content":"    public void markTaskAsDone(int idx) {"},{"lineNumber":62,"author":{"gitId":"VRSoorya"},"content":"        tasks.get(idx - 1).markAsDone();"},{"lineNumber":63,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":65,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"VRSoorya"},"content":"     * Deletes a {@code Task} in the application by list index."},{"lineNumber":67,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"VRSoorya"},"content":"     * @param idx List index of task as shown in {@code String} representation of {@code TaskList}."},{"lineNumber":69,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"VRSoorya"},"content":"    public Task deleteTask(int idx) {"},{"lineNumber":71,"author":{"gitId":"VRSoorya"},"content":"        return tasks.remove(idx - 1);"},{"lineNumber":72,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":74,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"VRSoorya"},"content":"     * Returns a {@code TaskList} of the {@code Task}s that match the search."},{"lineNumber":76,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"VRSoorya"},"content":"     * @param search The search expression."},{"lineNumber":78,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"VRSoorya"},"content":"    public TaskList findTasks(String search) {"},{"lineNumber":80,"author":{"gitId":"VRSoorya"},"content":"        ArrayList\u003cTask\u003e matches \u003d tasks.stream()"},{"lineNumber":81,"author":{"gitId":"VRSoorya"},"content":"                .filter(task -\u003e task.getDescription().contains(search))"},{"lineNumber":82,"author":{"gitId":"VRSoorya"},"content":"                .collect(Collectors.toCollection(ArrayList::new));"},{"lineNumber":83,"author":{"gitId":"VRSoorya"},"content":"        return new TaskList(matches);"},{"lineNumber":84,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":86,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"VRSoorya"},"content":"     * Returns total number of {@code Task}s in the application."},{"lineNumber":88,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"VRSoorya"},"content":"    public int getTotalNumberOfTasks() {"},{"lineNumber":90,"author":{"gitId":"VRSoorya"},"content":"        return tasks.size();"},{"lineNumber":91,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":93,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"VRSoorya"},"content":"     * Returns total number of {@code Task}s that are not completed in the application."},{"lineNumber":95,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"VRSoorya"},"content":"    public int getTotalNumberOfTasksUndone() {"},{"lineNumber":97,"author":{"gitId":"VRSoorya"},"content":"        return tasks.stream()"},{"lineNumber":98,"author":{"gitId":"VRSoorya"},"content":"                .mapToInt(Task::convertNotDoneStatusToOne)"},{"lineNumber":99,"author":{"gitId":"VRSoorya"},"content":"                .reduce(0, Integer::sum);"},{"lineNumber":100,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":102,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code String} representation of this {@code TaskList}."},{"lineNumber":104,"author":{"gitId":"VRSoorya"},"content":"     * {@code Task}s are indexed by natural counting numbers from 1,2,3..."},{"lineNumber":105,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":107,"author":{"gitId":"VRSoorya"},"content":"    public String toString() {"},{"lineNumber":108,"author":{"gitId":"VRSoorya"},"content":"        if (this.hasTasks()) {"},{"lineNumber":109,"author":{"gitId":"VRSoorya"},"content":"            // adapted from: https://stackoverflow.com/questions/49080255/get-index-while-iterating-list-with-stream"},{"lineNumber":110,"author":{"gitId":"VRSoorya"},"content":"            return IntStream.range(0, tasks.size())"},{"lineNumber":111,"author":{"gitId":"VRSoorya"},"content":"                    .mapToObj(index -\u003e String.format(\"  %s. %s\\n\","},{"lineNumber":112,"author":{"gitId":"VRSoorya"},"content":"                            index + 1, tasks.get(index).toString()))"},{"lineNumber":113,"author":{"gitId":"VRSoorya"},"content":"                    .reduce((a, b) -\u003e a + b)"},{"lineNumber":114,"author":{"gitId":"VRSoorya"},"content":"                    .get();"},{"lineNumber":115,"author":{"gitId":"VRSoorya"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"VRSoorya"},"content":"        return \"\";"},{"lineNumber":117,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":118}},{"path":"src/main/java/project/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package project.task;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":" * Represents a todo task in the application."},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":" * This extends the {@code Task} class."},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":" */"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"public class Todo extends Task {"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"     * Creates an instance of {@code Todo}."},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"     * @param description The todo description."},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    public Todo(String description) {"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"     * Returns {@code String} representation of this {@code Todo}."},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":25}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"         \u003cpadding\u003e"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"            \u003cInsets bottom\u003d\"0.5\" left\u003d\"0.5\" right\u003d\"0.5\" top\u003d\"0.5\" /\u003e"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"         \u003c/padding\u003e"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"      \u003c/Label\u003e"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"VRSoorya":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"project.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"VRSoorya":19}},{"path":"src/test/java/io/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package io;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import project.io.Parser;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"public class ParserTest {"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"    public void parseIntParameterTest_validInt_success() {"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(Parser.parseIntParameter(\"done 3\"), 3);"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"    public void parseParameterTest_validExpression_success() {"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(Parser.parseParameter(\"deadline task /by now\", \"/by\", 1), \"now\");"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"    public void parseDeadlineParameterTest_validExpression_success() {"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"        String testDateTime \u003d \" 9090-01-01 00:00\";"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":"        LocalDateTime resultExpected \u003d LocalDateTime.parse(testDateTime.trim(),"},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(Parser.parseDateTimeParameter(testDateTime), resultExpected);"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":30}},{"path":"src/test/java/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"import project.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"import project.task.Todo;"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"public class TaskListTest {"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"    TaskList testTaskList \u003d new TaskList();"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"    public void hasTasksTest_noTask_false() {"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(testTaskList.hasTasks(), false);"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"    public void addTaskTest_addTask_success() {"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"        Todo testTask \u003d new Todo(\"test\");"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"        testTaskList.addTask(testTask);"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":22,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(true, testTaskList.hasTasks());"},{"lineNumber":23,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(1, testTaskList.getTotalNumberOfTasks());"},{"lineNumber":24,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(testTask.toString(), testTaskList.getTask(1).toString());"},{"lineNumber":25,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":27,"author":{"gitId":"VRSoorya"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"VRSoorya"},"content":"    public void markTaskAsDoneTest_validIndex_success() {"},{"lineNumber":29,"author":{"gitId":"VRSoorya"},"content":"        Todo testTask \u003d new Todo(\"test\");"},{"lineNumber":30,"author":{"gitId":"VRSoorya"},"content":"        testTaskList.addTask(testTask);"},{"lineNumber":31,"author":{"gitId":"VRSoorya"},"content":"        testTaskList.markTaskAsDone(1);"},{"lineNumber":32,"author":{"gitId":"VRSoorya"},"content":""},{"lineNumber":33,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(0, testTaskList.getTotalNumberOfTasksUndone());"},{"lineNumber":34,"author":{"gitId":"VRSoorya"},"content":"        assertEquals(testTaskList.getTask(1).convertNotDoneStatusToOne(), 0);"},{"lineNumber":35,"author":{"gitId":"VRSoorya"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"VRSoorya"},"content":"}"}],"authorContributionMap":{"VRSoorya":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"VRSoorya"},"content":"helps mee"},{"lineNumber":2,"author":{"gitId":"VRSoorya"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"VRSoorya"},"content":"deadline now"},{"lineNumber":4,"author":{"gitId":"VRSoorya"},"content":"events test"},{"lineNumber":5,"author":{"gitId":"VRSoorya"},"content":"doneeee"},{"lineNumber":6,"author":{"gitId":"VRSoorya"},"content":"delete??"},{"lineNumber":7,"author":{"gitId":"VRSoorya"},"content":"liST"},{"lineNumber":8,"author":{"gitId":"VRSoorya"},"content":"todo hi"},{"lineNumber":9,"author":{"gitId":"VRSoorya"},"content":"done hi"},{"lineNumber":10,"author":{"gitId":"VRSoorya"},"content":"delete hi"},{"lineNumber":11,"author":{"gitId":"VRSoorya"},"content":"event test /at idk..."},{"lineNumber":12,"author":{"gitId":"VRSoorya"},"content":"deadline submit /by ytd!"},{"lineNumber":13,"author":{"gitId":"VRSoorya"},"content":"List"},{"lineNumber":14,"author":{"gitId":"VRSoorya"},"content":"done 2"},{"lineNumber":15,"author":{"gitId":"VRSoorya"},"content":"done 10"},{"lineNumber":16,"author":{"gitId":"VRSoorya"},"content":"todo tutorial"},{"lineNumber":17,"author":{"gitId":"VRSoorya"},"content":"delete 10"},{"lineNumber":18,"author":{"gitId":"VRSoorya"},"content":"done 3"},{"lineNumber":19,"author":{"gitId":"VRSoorya"},"content":"LIsT"},{"lineNumber":20,"author":{"gitId":"VRSoorya"},"content":"heLp"},{"lineNumber":21,"author":{"gitId":"VRSoorya"},"content":"bYE"}],"authorContributionMap":{"VRSoorya":21}}]
