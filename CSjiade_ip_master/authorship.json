[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"  protected LocalDateTime by;"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"  protected boolean dateError \u003d false;"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"  public Deadline(String description, String by) {"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"    super(description);"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"    this.by \u003d dateTime(by);"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"  public Deadline(String description, LocalDateTime by) {"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"    super(description);"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"    this.by \u003d by;"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"  private LocalDateTime dateTime(String by) {"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"    DateTimeFormatter format \u003d null;"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"    LocalDateTime date \u003d null;"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"    try {"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"      format \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy Hmm\");"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"      date \u003d LocalDateTime.parse(by, format);"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"    } catch (DateTimeParseException e) {"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"      System.out.println(\"Please use d/MM/yyyy Hmm for your date\");"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"      dateError \u003d true;"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"    return date;"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"  private boolean getdateError() {"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"    return this.dateError;"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"  @Override"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"  public String toString() {"},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"    DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"    boolean exception \u003d false;"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"    String s \u003d \"Please give your dates in either d/MM/yyyy Hmm\";"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"    try {"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"      by.format(format);"},{"lineNumber":44,"author":{"gitId":"CSjiade"},"content":"    } catch (NullPointerException e) {"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"      System.out.println(\"Wrong date format\");"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"      exception \u003d true;"},{"lineNumber":47,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":"    if (!exception) {"},{"lineNumber":49,"author":{"gitId":"CSjiade"},"content":"      return \"[D]\" + super.toString() + \" (by: \" + by.format(format) + \")\";"},{"lineNumber":50,"author":{"gitId":"CSjiade"},"content":"    } else {"},{"lineNumber":51,"author":{"gitId":"CSjiade"},"content":"      return s;"},{"lineNumber":52,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":56,"author":{"gitId":"CSjiade"},"content":"  @Override"},{"lineNumber":57,"author":{"gitId":"CSjiade"},"content":"  public String saveText() {"},{"lineNumber":58,"author":{"gitId":"CSjiade"},"content":"    return \"D\" + \",\" + this.getStatusIcon() + \",\" + this.getDescription() + \",\" + this.by;"},{"lineNumber":59,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":60,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":61,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":62,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":63,"author":{"gitId":"CSjiade"},"content":"}"}],"authorContributionMap":{"CSjiade":63}},{"path":"src/main/java/DescriptionError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"public class DescriptionError extends DukeException {"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"  protected String msg;"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"  public DescriptionError(String msg) {"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"    super(msg);"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"}"}],"authorContributionMap":{"CSjiade":9}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"  protected ArrayList\u003cTask\u003e tasklist;"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"  private Storage storage;"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"  private TaskList tasks;"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"  private Ui ui;"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"   * Creates Duke with the file path."},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"   * @ param filePath The path storing all the past tasklist not deleted by the user"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"  public Duke(String filePath) throws IOException {"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"    storage \u003d new Storage(filePath);"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"    try {"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"      tasks \u003d new TaskList(storage.load());"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"      System.out.println(tasks.getTasklist());"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"    } catch (FileNotFoundException e) {"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"      System.out.println(\"No existing Storage File\");"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"   * Outputs the greeting and initiaties the userinput parase command to take in inputs from usher."},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"  public void run() throws IOException, DescriptionError {"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"    ui \u003d new Ui();"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"    ui.greeting();"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"    Parser parse \u003d new Parser();"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"    parse.userinput(tasks, storage);"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"  public void listtask() {"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"    tasks.list();"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":44,"author":{"gitId":"CSjiade"},"content":"   *  instantiate Duke class and starts the run command."},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":47,"author":{"gitId":"CSjiade"},"content":"  public static void main(String[] args) throws DescriptionError, UnknownInputError, IOException {"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":"    Duke duke \u003d new Duke(\"duke.text\");"},{"lineNumber":49,"author":{"gitId":"CSjiade"},"content":"    duke.run();"},{"lineNumber":50,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":51,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":52,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":53,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"CSjiade"},"content":""}],"authorContributionMap":{"-":3,"CSjiade":53}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"  protected String msg;"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"  public DukeException(String msg) {"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"    super(msg);"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"}"}],"authorContributionMap":{"CSjiade":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"  protected String by;"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"  public Event(String description, String by) {"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"    super(description);"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"    this.by \u003d by;"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"  private LocalDateTime dateTime(String by) {"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"    DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy Hmm\");"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"    return LocalDateTime.parse(by, format);"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"  @Override"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"  public String toString() {"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"    return \"[E]\" + super.toString() + \" (at:\" + by + \")\";"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"  @Override"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"  public String saveText() {"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"    return \"E\" + \",\" + this.getStatusIcon() + \",\" + this.getDescription() + \",\" + this.by;"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"}"}],"authorContributionMap":{"CSjiade":27}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"  public Parser() {"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"   * Reads in the input by the user from the commandline and processes it."},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"  public void userinput(TaskList tasklist, Storage store) throws IOException, DescriptionError {"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"    Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"    while (scan.hasNext()) {"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"      String input \u003d scan.nextLine();"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"      if (input.equals(\"bye\")) {"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"        ui.bye();"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"      } else if (input.equals(\"list\")) {"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"        tasklist.list();"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"      } else if (input.split(\" \")[0].equals(\"done\")) {"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"        done(input, tasklist);"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"        store.save(tasklist.getTasklist());"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"      } else if (input.split(\" \")[0].equals(\"find\")) {"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"        tasklist.findtask(input.split(\" \")[1]);"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"      } else if (input.split(\" \")[0].equals(\"todo\")) {"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"        todo(input, tasklist);"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"        store.save(tasklist.getTasklist());"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"      } else if (input.split(\" \")[0].equals(\"deadline\")) {"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"        deadline(input, tasklist);"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"        store.save(tasklist.getTasklist());"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"      } else if (input.split(\" \")[0].equals(\"event\")) {"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"        event(input, tasklist);"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"        store.save(tasklist.getTasklist());"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"      } else if (input.split(\" \")[0].equals(\"delete\")) {"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"        deleteTask(input, tasklist);"},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"        store.save(tasklist.getTasklist());"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"      } else {"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"          throw new UnknownInputError(\"☹ OOPS!!! I\u0027m sorry, \""},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"                     + \"but I don\u0027t know what that means :-(\");"},{"lineNumber":44,"author":{"gitId":"CSjiade"},"content":"        } catch (UnknownInputError e) {"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"          System.out.println(e.getMessage());"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":50,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":51,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":52,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":53,"author":{"gitId":"CSjiade"},"content":"   * Handles \"done\" command by the user by marking the tasks with \"x\"."},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":55,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":56,"author":{"gitId":"CSjiade"},"content":"  public void done(String input, TaskList taskList) {"},{"lineNumber":57,"author":{"gitId":"CSjiade"},"content":"    try {"},{"lineNumber":58,"author":{"gitId":"CSjiade"},"content":"      if (input.length() \u003d\u003d 4) {"},{"lineNumber":59,"author":{"gitId":"CSjiade"},"content":"        throw new DescriptionError(\"☹ OOPS!!! The description of a done task cannot be empty.\");"},{"lineNumber":60,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":61,"author":{"gitId":"CSjiade"},"content":"      if (input.split(\" \").length \u003e 2) {"},{"lineNumber":62,"author":{"gitId":"CSjiade"},"content":"        throw new UnknownInputError(\"☹ OOPS!!! I\u0027m sorry,\""},{"lineNumber":63,"author":{"gitId":"CSjiade"},"content":"                            + \" but I don\u0027t know what that means :-(\");"},{"lineNumber":64,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":65,"author":{"gitId":"CSjiade"},"content":"      if (Integer.parseInt(input.split(\" \")[1])"},{"lineNumber":66,"author":{"gitId":"CSjiade"},"content":"              / Integer.parseInt(input.split(\" \")[1]) !\u003d 1) {"},{"lineNumber":67,"author":{"gitId":"CSjiade"},"content":"        throw new NumberFormatException();"},{"lineNumber":68,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":69,"author":{"gitId":"CSjiade"},"content":"      if (Integer.parseInt(input.split(\" \")[1]) \u003e taskList.getTasklist().size()) {"},{"lineNumber":70,"author":{"gitId":"CSjiade"},"content":"        throw new DescriptionError(\"☹ OOPS!!! The task is not in the list.\");"},{"lineNumber":71,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":72,"author":{"gitId":"CSjiade"},"content":"      if (input.split(\" \").length \u003d\u003d 2 \u0026\u0026 Integer.parseInt(input.split(\" \")[1])"},{"lineNumber":73,"author":{"gitId":"CSjiade"},"content":"              / Integer.parseInt(input.split(\" \")[1]) \u003d\u003d 1) {"},{"lineNumber":74,"author":{"gitId":"CSjiade"},"content":"        taskList.getTasklist().get((Integer.parseInt(input.split(\" \")[1]) - 1)).taskDone();"},{"lineNumber":75,"author":{"gitId":"CSjiade"},"content":"        System.out.println(\" ___________________________________________\");"},{"lineNumber":76,"author":{"gitId":"CSjiade"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":77,"author":{"gitId":"CSjiade"},"content":"        System.out.println(taskList.getTasklist().get((Integer.parseInt(input.split(\" \")[1]) - 1)));"},{"lineNumber":78,"author":{"gitId":"CSjiade"},"content":"        System.out.println(\" ___________________________________________\");"},{"lineNumber":79,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":80,"author":{"gitId":"CSjiade"},"content":"    } catch (DescriptionError | UnknownInputError | NumberFormatException e) {"},{"lineNumber":81,"author":{"gitId":"CSjiade"},"content":"      if (e instanceof NumberFormatException) {"},{"lineNumber":82,"author":{"gitId":"CSjiade"},"content":"        System.out.println(\"☹ OOPS!!! The description of a done task needs to be an integer.\");"},{"lineNumber":83,"author":{"gitId":"CSjiade"},"content":"      } else {"},{"lineNumber":84,"author":{"gitId":"CSjiade"},"content":"        System.out.println(e.getMessage());"},{"lineNumber":85,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":86,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":88,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":89,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":90,"author":{"gitId":"CSjiade"},"content":"  public String inputEventDescription(String input) {"},{"lineNumber":91,"author":{"gitId":"CSjiade"},"content":"    String[] inputs \u003d input.split(\" \");"},{"lineNumber":92,"author":{"gitId":"CSjiade"},"content":"    String output \u003d \"\";"},{"lineNumber":93,"author":{"gitId":"CSjiade"},"content":"    for (int i \u003d 1; i \u003c inputs.length; i++) {"},{"lineNumber":94,"author":{"gitId":"CSjiade"},"content":"      if (i \u003d\u003d 1) {"},{"lineNumber":95,"author":{"gitId":"CSjiade"},"content":"        output +\u003d inputs[i];"},{"lineNumber":96,"author":{"gitId":"CSjiade"},"content":"      } else {"},{"lineNumber":97,"author":{"gitId":"CSjiade"},"content":"        output +\u003d \" \" + inputs[i];"},{"lineNumber":98,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":99,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"CSjiade"},"content":"    return output;"},{"lineNumber":101,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":102,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":103,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":104,"author":{"gitId":"CSjiade"},"content":"   * Handles todo command by the user by creating a todo object and placing it into the arraylist."},{"lineNumber":105,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":106,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":107,"author":{"gitId":"CSjiade"},"content":"  public void todo(String input, TaskList taskList) throws DescriptionError {"},{"lineNumber":108,"author":{"gitId":"CSjiade"},"content":"    try {"},{"lineNumber":109,"author":{"gitId":"CSjiade"},"content":"      if (input.length() \u003d\u003d 4) {"},{"lineNumber":110,"author":{"gitId":"CSjiade"},"content":"        throw new DescriptionError(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":111,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":112,"author":{"gitId":"CSjiade"},"content":"    } catch (DescriptionError e) {"},{"lineNumber":113,"author":{"gitId":"CSjiade"},"content":"      System.out.println(e.getMessage());"},{"lineNumber":114,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"CSjiade"},"content":"    if (input.length() !\u003d 4) {"},{"lineNumber":116,"author":{"gitId":"CSjiade"},"content":"      String inputDes \u003d this.inputEventDescription(input);"},{"lineNumber":117,"author":{"gitId":"CSjiade"},"content":"      Todo task \u003d new Todo(inputDes);"},{"lineNumber":118,"author":{"gitId":"CSjiade"},"content":"      System.out.println(\" ___________________________________________\");"},{"lineNumber":119,"author":{"gitId":"CSjiade"},"content":"      System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":120,"author":{"gitId":"CSjiade"},"content":"      taskList.getTasklist().add(task);"},{"lineNumber":121,"author":{"gitId":"CSjiade"},"content":"      System.out.println(\"Now you have \" + taskList.getTasklist().size() + \" tasks in the list.\");"},{"lineNumber":122,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":124,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":125,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":126,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":127,"author":{"gitId":"CSjiade"},"content":"   * Handles deadline command by the user by creating a deadline object."},{"lineNumber":128,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":129,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":130,"author":{"gitId":"CSjiade"},"content":"  public void deadline(String input, TaskList taskList) {"},{"lineNumber":131,"author":{"gitId":"CSjiade"},"content":"    try {"},{"lineNumber":132,"author":{"gitId":"CSjiade"},"content":"      if (input.length() \u003d\u003d 8) {"},{"lineNumber":133,"author":{"gitId":"CSjiade"},"content":"        throw new DescriptionError(\"☹ OOPS!!! The description of a \""},{"lineNumber":134,"author":{"gitId":"CSjiade"},"content":"                + \"deadline cannot be empty.\");"},{"lineNumber":135,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":136,"author":{"gitId":"CSjiade"},"content":"    } catch (DescriptionError e) {"},{"lineNumber":137,"author":{"gitId":"CSjiade"},"content":"      System.out.println(e.getMessage());"},{"lineNumber":138,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"CSjiade"},"content":"    if (input.length() !\u003d 8) {"},{"lineNumber":140,"author":{"gitId":"CSjiade"},"content":"      Deadline task \u003d new Deadline(input.split(\" \")[1] + \" \" + input.split(\" \")[2],"},{"lineNumber":141,"author":{"gitId":"CSjiade"},"content":"                      input.split(\"/by \")[1]);"},{"lineNumber":142,"author":{"gitId":"CSjiade"},"content":"      if (task.dateError) {"},{"lineNumber":143,"author":{"gitId":"CSjiade"},"content":"        return;"},{"lineNumber":144,"author":{"gitId":"CSjiade"},"content":"      } else {"},{"lineNumber":145,"author":{"gitId":"CSjiade"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":146,"author":{"gitId":"CSjiade"},"content":"        taskList.addList(task);"},{"lineNumber":147,"author":{"gitId":"CSjiade"},"content":"        System.out.println(task);"},{"lineNumber":148,"author":{"gitId":"CSjiade"},"content":"        System.out.println(\"Now you have \" + taskList.getTasklist().size() + \" tasks in the list.\");"},{"lineNumber":149,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":150,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":152,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":153,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":154,"author":{"gitId":"CSjiade"},"content":"   * Handles event command by the user by creating event object and placing it into the arraylist."},{"lineNumber":155,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":156,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":157,"author":{"gitId":"CSjiade"},"content":"  public void event(String input, TaskList taskList) {"},{"lineNumber":158,"author":{"gitId":"CSjiade"},"content":"    try {"},{"lineNumber":159,"author":{"gitId":"CSjiade"},"content":"      if (input.length() \u003d\u003d 5) {"},{"lineNumber":160,"author":{"gitId":"CSjiade"},"content":"        throw new DescriptionError(\"☹ OOPS!!! The description of a event cannot be empty.\");"},{"lineNumber":161,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":162,"author":{"gitId":"CSjiade"},"content":"    } catch (DescriptionError e) {"},{"lineNumber":163,"author":{"gitId":"CSjiade"},"content":"      System.out.println(e.getMessage());"},{"lineNumber":164,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"CSjiade"},"content":"    if (input.length() !\u003d 5) {"},{"lineNumber":166,"author":{"gitId":"CSjiade"},"content":"      System.out.println(input.split(\"/at\")[1]);"},{"lineNumber":167,"author":{"gitId":"CSjiade"},"content":"      Event task \u003d new Event(input.split(\" \")[1] + \" \" + input.split(\" \")[2],"},{"lineNumber":168,"author":{"gitId":"CSjiade"},"content":"                      input.split(\"/at \")[1]);"},{"lineNumber":169,"author":{"gitId":"CSjiade"},"content":"      System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":170,"author":{"gitId":"CSjiade"},"content":"      taskList.getTasklist().add(task);"},{"lineNumber":171,"author":{"gitId":"CSjiade"},"content":"      System.out.println(task);"},{"lineNumber":172,"author":{"gitId":"CSjiade"},"content":"      System.out.println(\"Now you have \" + taskList.getTasklist().size() + \" tasks in the list.\");"},{"lineNumber":173,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":175,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":176,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":177,"author":{"gitId":"CSjiade"},"content":"   * Handles delete ommand by the user by removing the tasks inside the arraylist."},{"lineNumber":178,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":179,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":180,"author":{"gitId":"CSjiade"},"content":"  public void deleteTask(String input, TaskList taskList) {"},{"lineNumber":181,"author":{"gitId":"CSjiade"},"content":"    try {"},{"lineNumber":182,"author":{"gitId":"CSjiade"},"content":"      if (input.length() \u003d\u003d 4) {"},{"lineNumber":183,"author":{"gitId":"CSjiade"},"content":"        throw new DescriptionError(\"☹ OOPS!!! The description of \""},{"lineNumber":184,"author":{"gitId":"CSjiade"},"content":"                          + \"a delete task cannot be empty.\");"},{"lineNumber":185,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":186,"author":{"gitId":"CSjiade"},"content":"      if (input.split(\" \").length \u003e 2) {"},{"lineNumber":187,"author":{"gitId":"CSjiade"},"content":"        throw new UnknownInputError(\"☹ OOPS!!! I\u0027m sorry,\""},{"lineNumber":188,"author":{"gitId":"CSjiade"},"content":"                          + \" but I don\u0027t know what that means :-(\");"},{"lineNumber":189,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":190,"author":{"gitId":"CSjiade"},"content":"      if (Integer.parseInt(input.split(\" \")[1])"},{"lineNumber":191,"author":{"gitId":"CSjiade"},"content":"                      / Integer.parseInt(input.split(\" \")[1]) !\u003d 1) {"},{"lineNumber":192,"author":{"gitId":"CSjiade"},"content":"        throw new NumberFormatException();"},{"lineNumber":193,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":194,"author":{"gitId":"CSjiade"},"content":"      if (Integer.parseInt(input.split(\" \")[1]) \u003e taskList.getTasklist().size()) {"},{"lineNumber":195,"author":{"gitId":"CSjiade"},"content":"        throw new DescriptionError(\"☹ OOPS!!! The task is not in the list.\");"},{"lineNumber":196,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":197,"author":{"gitId":"CSjiade"},"content":"      if (input.split(\" \").length \u003d\u003d 2 \u0026\u0026 Integer.parseInt(input.split(\" \")[1])"},{"lineNumber":198,"author":{"gitId":"CSjiade"},"content":"                      / Integer.parseInt(input.split(\" \")[1]) \u003d\u003d 1) {"},{"lineNumber":199,"author":{"gitId":"CSjiade"},"content":"        taskList.delete(Integer.parseInt(input.split(\" \")[1]));"},{"lineNumber":200,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":201,"author":{"gitId":"CSjiade"},"content":"    } catch (DescriptionError | UnknownInputError | NumberFormatException e) {"},{"lineNumber":202,"author":{"gitId":"CSjiade"},"content":"      if (e instanceof NumberFormatException) {"},{"lineNumber":203,"author":{"gitId":"CSjiade"},"content":"        System.out.println(\"☹ OOPS!!! The description of a done task needs to be an integer.\");"},{"lineNumber":204,"author":{"gitId":"CSjiade"},"content":"      } else {"},{"lineNumber":205,"author":{"gitId":"CSjiade"},"content":"        System.out.println(e.getMessage());"},{"lineNumber":206,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":207,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":209,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":210,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":211,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":212,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":213,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":214,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":215,"author":{"gitId":"CSjiade"},"content":"}"},{"lineNumber":216,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":217,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":218,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":219,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":220,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":221,"author":{"gitId":"CSjiade"},"content":""}],"authorContributionMap":{"CSjiade":221}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"public class Storage {"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"  protected String path;"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"  protected File file;"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"   * Creates Storage object with the filepath."},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"   * @ param filepath The filepath storing all the previous tasklists data"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"  public Storage(String filepath) throws IOException {"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"    this.path \u003d filepath;"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"    File filestr \u003d new File(path);"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"    filestr.createNewFile();"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"    this.file \u003d filestr;"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"  public Storage() {"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"   * Iterates through the task arraylist and stores each element into a textfile."},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"  public void save(ArrayList\u003cTask\u003e task) throws IOException {"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"    FileWriter fileWriter \u003d new FileWriter(this.file);"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"    try {"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"      for (Task t : task) {"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"        fileWriter.write(t.saveText());"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"        fileWriter.write(System.lineSeparator());"},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"      fileWriter.close();"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"    } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"      System.out.println(e.getMessage());"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"      System.out.println(\"An unexpected Error occured during Saving\");"},{"lineNumber":44,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":47,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":"   * Loads any previous tasks from a text file by storing the contents inside ArrayList."},{"lineNumber":49,"author":{"gitId":"CSjiade"},"content":"   * @ return The Arraylist consisting of all the tasks in the text file."},{"lineNumber":50,"author":{"gitId":"CSjiade"},"content":"   * @ throws IOException if the file cannot be found in the specified path."},{"lineNumber":51,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":52,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":53,"author":{"gitId":"CSjiade"},"content":"  public ArrayList\u003cTask\u003e load() throws IOException {"},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":"    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":55,"author":{"gitId":"CSjiade"},"content":"    try {"},{"lineNumber":56,"author":{"gitId":"CSjiade"},"content":"      Scanner fileReader \u003d new Scanner(this.file);"},{"lineNumber":57,"author":{"gitId":"CSjiade"},"content":"      while (fileReader.hasNextLine()) {"},{"lineNumber":58,"author":{"gitId":"CSjiade"},"content":"        String line \u003d fileReader.nextLine();"},{"lineNumber":59,"author":{"gitId":"CSjiade"},"content":"        String[] stringArr \u003d line.split(\",\");"},{"lineNumber":60,"author":{"gitId":"CSjiade"},"content":"        String taskType \u003d stringArr[0];"},{"lineNumber":61,"author":{"gitId":"CSjiade"},"content":"        String taskIcon \u003d stringArr[1];"},{"lineNumber":62,"author":{"gitId":"CSjiade"},"content":"        String taskDesc \u003d stringArr[2];"},{"lineNumber":63,"author":{"gitId":"CSjiade"},"content":"        if (taskType.equals(\"T\")) {"},{"lineNumber":64,"author":{"gitId":"CSjiade"},"content":"          Todo task \u003d new Todo(taskDesc);"},{"lineNumber":65,"author":{"gitId":"CSjiade"},"content":"          if (taskIcon.equals(\"\\u2718\")) {"},{"lineNumber":66,"author":{"gitId":"CSjiade"},"content":"            task.taskDone();"},{"lineNumber":67,"author":{"gitId":"CSjiade"},"content":"          }"},{"lineNumber":68,"author":{"gitId":"CSjiade"},"content":"          tasks.add(task);"},{"lineNumber":69,"author":{"gitId":"CSjiade"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"CSjiade"},"content":"        if (taskType.equals(\"E\")) {"},{"lineNumber":71,"author":{"gitId":"CSjiade"},"content":"          Event task \u003d new Event(taskDesc, stringArr[3]);"},{"lineNumber":72,"author":{"gitId":"CSjiade"},"content":"          if (taskIcon.equals(\"\\u2718\")) {"},{"lineNumber":73,"author":{"gitId":"CSjiade"},"content":"            task.taskDone();"},{"lineNumber":74,"author":{"gitId":"CSjiade"},"content":"          }"},{"lineNumber":75,"author":{"gitId":"CSjiade"},"content":"          tasks.add(task);"},{"lineNumber":76,"author":{"gitId":"CSjiade"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"CSjiade"},"content":"        if (taskType.equals(\"D\")) {"},{"lineNumber":78,"author":{"gitId":"CSjiade"},"content":"          DateTimeFormatter informat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\");"},{"lineNumber":79,"author":{"gitId":"CSjiade"},"content":"          DateTimeFormatter outformat \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy Hmm\");"},{"lineNumber":80,"author":{"gitId":"CSjiade"},"content":"          LocalDateTime date \u003d LocalDateTime.parse(stringArr[3], informat);"},{"lineNumber":81,"author":{"gitId":"CSjiade"},"content":"          String formattedDate \u003d outformat.format(date);"},{"lineNumber":82,"author":{"gitId":"CSjiade"},"content":"          Deadline task \u003d new Deadline(taskDesc, formattedDate);"},{"lineNumber":83,"author":{"gitId":"CSjiade"},"content":"          if (taskIcon.equals(\"\\u2718\")) {"},{"lineNumber":84,"author":{"gitId":"CSjiade"},"content":"            task.taskDone();"},{"lineNumber":85,"author":{"gitId":"CSjiade"},"content":"          }"},{"lineNumber":86,"author":{"gitId":"CSjiade"},"content":"          tasks.add(task);"},{"lineNumber":87,"author":{"gitId":"CSjiade"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":89,"author":{"gitId":"CSjiade"},"content":"    } catch (FileNotFoundException e) {"},{"lineNumber":90,"author":{"gitId":"CSjiade"},"content":"      System.out.println(\"no file\");"},{"lineNumber":91,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"CSjiade"},"content":"    return tasks;"},{"lineNumber":93,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":94,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":96,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":97,"author":{"gitId":"CSjiade"},"content":"}"},{"lineNumber":98,"author":{"gitId":"CSjiade"},"content":""}],"authorContributionMap":{"CSjiade":98}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"  protected String description;"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"  protected boolean isDone;"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"  public Task(String description) {"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"    this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"    this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"  public String getDescription() {"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"    return description;"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"  public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"    return (isDone ? \"\\u2718\" : \" \"); //return tick or X symbols"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"  public void taskDone() {"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"    this.isDone \u003d true;"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"  @Override"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"  public String toString() {"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"    return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"  public String saveText() {"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"    return  \"| \" + this.getStatusIcon() +   \"| \" + this.getDescription();"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"}"}],"authorContributionMap":{"CSjiade":31}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"  private ArrayList\u003cTask\u003e tasklist;"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"  public TaskList(ArrayList\u003cTask\u003e task) {"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"    this.tasklist \u003d task;"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"  public TaskList() {"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"  public ArrayList\u003cTask\u003e getTasklist() {"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"    return this.tasklist;"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"   * Iterates the arraylist and outputs each tasks inside."},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"  public void list() {"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"    int i \u003d 1;"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"    System.out.println(\" ___________________________________________\");"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"    System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"    for (Task task : tasklist) {"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"      System.out.println(i + \". \" + task);"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"      i++;"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"    System.out.println(\" ___________________________________________\");"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"  public void addList(Task input) {"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"    this.tasklist.add(input);"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"   * delete the tasks from the arraylist and output the notification text."},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"  public void delete(int num) {"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"    Task task \u003d this.tasklist.remove(num - 1);"},{"lineNumber":44,"author":{"gitId":"CSjiade"},"content":"    System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"    System.out.println(task);"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"    System.out.println(\"Now you have \" + this.tasklist.size() + \" tasks in the list.\");"},{"lineNumber":47,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":49,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":50,"author":{"gitId":"CSjiade"},"content":"   * Outputs matching taks in the arraylist to a keyword"},{"lineNumber":51,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":52,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":53,"author":{"gitId":"CSjiade"},"content":"  public void findtask(String keyword) {"},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":"    ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":55,"author":{"gitId":"CSjiade"},"content":"    int i \u003d 1;"},{"lineNumber":56,"author":{"gitId":"CSjiade"},"content":"    for (Task t : this.tasklist) {"},{"lineNumber":57,"author":{"gitId":"CSjiade"},"content":"      if (t.getDescription().contains(keyword)) {"},{"lineNumber":58,"author":{"gitId":"CSjiade"},"content":"        list.add(t);"},{"lineNumber":59,"author":{"gitId":"CSjiade"},"content":"      }"},{"lineNumber":60,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"CSjiade"},"content":"    System.out.println(\" ___________________________________________\");"},{"lineNumber":62,"author":{"gitId":"CSjiade"},"content":"    System.out.println(\"Here are the tasks in your matching list:\");"},{"lineNumber":63,"author":{"gitId":"CSjiade"},"content":"    for (Task task : list) {"},{"lineNumber":64,"author":{"gitId":"CSjiade"},"content":"      System.out.println(i + \". \" + task);"},{"lineNumber":65,"author":{"gitId":"CSjiade"},"content":"      i++;"},{"lineNumber":66,"author":{"gitId":"CSjiade"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"CSjiade"},"content":"    System.out.println(\" ___________________________________________\");"},{"lineNumber":68,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":69,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":70,"author":{"gitId":"CSjiade"},"content":"}"}],"authorContributionMap":{"CSjiade":70}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"  protected String description;"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"  public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"    super(description);"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"  @Override"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"  public String toString() {"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"    return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"  @Override"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"  public String saveText() {"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"    return \"T\" + \",\" + this.getStatusIcon() + \",\" + this.getDescription();"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"}"}],"authorContributionMap":{"CSjiade":21}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"public class Ui {"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"  public Ui() {"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"   * Outputs the customied bye message when user inputs bye command."},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"  public void bye() {"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"    System.out.println(\" ___________________________________________\");"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"    System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"    System.out.println(\" ___________________________________________\");"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"  /**"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"   * Outputs the customised greeting message when Duke object is instiatied."},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"   */"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"  public void greeting() {"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"    String logo \u003d \" ____        _        \\n\""},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"    System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"    System.out.println(\" ___________________________________________\");"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"    System.out.println(\"Hello! I\u0027m Duke \\n\" + \"What can I do for you today?\");"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"    System.out.println(\" ___________________________________________\");"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"}"}],"authorContributionMap":{"CSjiade":34}},{"path":"src/main/java/UnknownInputError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"public class UnknownInputError extends DukeException {"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"  protected String msg;"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"  public UnknownInputError(String msg) {"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"    super(msg);"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"}"}],"authorContributionMap":{"CSjiade":8}},{"path":"src/test/java/DeadLinetest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"public class DeadLinetest {"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"  @Test"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"  public void deadLinetest() {"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"    assertEquals(\"[D][ ] deadline return book (by: Dec 02 2019)\","},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"            new Deadline(\"deadline return book\", \"2/12/2019 1800\").toString());"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"}"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":""}],"authorContributionMap":{"CSjiade":13}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"public class DukeTest {"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"  @Test"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"  public void dummyTest() {"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"    assertEquals(2, 2);"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"}"}],"authorContributionMap":{"CSjiade":11}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":""},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"public class TodoTest {"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"  @Test"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"  public void todoTest() {"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"    assertEquals(\"[T][ ] complete cs2103\", new Todo(\"complete cs2103\").toString());"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"  }"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"}"}],"authorContributionMap":{"CSjiade":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"read book"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"return book"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"todo borrow book"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"deadline return book /by Sunday"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"list"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"done2"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"done4"}],"authorContributionMap":{"CSjiade":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":20,"CSjiade":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":37,"CSjiade":1}}]
