[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"mabel-kang":15,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"Duke is a desktop app for managing tasks, optimized for use via a Command Line Interface (CLI) "},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"while still having the benefits of a Graphical User Interface (GUI)."},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"* Quick start"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"* Features"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"    * Viewing help: `help`"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    * Adding a ToDo: `todo`"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    * Adding a Deadline: `deadline`"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    * Adding an Event: `event`  "},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    * Listing all tasks: `list`"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    * Searching for a task using keywords: `find`"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    * Tagging a task: `tag`"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    * Marking a task as completed: `done`"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    * Deleting a task: `delete`"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"    * Exiting the program: `exit`"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    * Saving the data"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    * Editing the data file"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"* FAQ"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"* Command summary"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"## Quick start"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"1. Ensure you have Java 11 or above installed in your Computer."},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"1. Download the latest duke.jar from https://github.com/mabel-kang/ip/releases."},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"1. Copy the file to the folder you want to use as the home folder for your Duke."},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. "},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"    ![Screenshot of GUI](Ui.png)"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"1. Type the command in the command box and press Enter to execute it. Eg, typing `help` and pressing Enter"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"    will open the help information."},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"    Some example commands you can try: "},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"   * `list`: Lists all tasks."},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"   * `todo cook`: Adds a ToDo task with description \u0027cook\u0027."},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"   * `delete 2`: Deletes the 2nd task shown in the current list."},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"   * `exit`: Exits the app."},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"   "},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"1. Refer to the Features below for details of each command. "},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"#### Notes about the command format: "},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"Words in `UPPER_CASE` are the parameters to be supplied by the user."},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"Eg, in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo cook`."},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"### Viewing help: `help`"},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":"Shows a message explaining how to access the help page."},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"Format: `help`"},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"### Adding a ToDo: `todo`"},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":"Adds a ToDo to the task list."},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"Format: `todo DESCRIPTION`"},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":"Example: `todo cook`"},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":65,"author":{"gitId":"mabel-kang"},"content":"Expected Outcome: "},{"lineNumber":66,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":67,"author":{"gitId":"mabel-kang"},"content":"`Done! One new task: `"},{"lineNumber":68,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":69,"author":{"gitId":"mabel-kang"},"content":"`[T][] cook`"},{"lineNumber":70,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":71,"author":{"gitId":"mabel-kang"},"content":"`Now you have 1 task in the list`"},{"lineNumber":72,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":73,"author":{"gitId":"mabel-kang"},"content":"* This outcome is based on the situation where the list is initially empty."},{"lineNumber":74,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":75,"author":{"gitId":"mabel-kang"},"content":"### Adding a Deadline: `deadline`"},{"lineNumber":76,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":77,"author":{"gitId":"mabel-kang"},"content":"Adds a Deadline to the task list. "},{"lineNumber":78,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":79,"author":{"gitId":"mabel-kang"},"content":"Format: `deadline DESCRIPTION /by DATE_AND_TIME`"},{"lineNumber":80,"author":{"gitId":"mabel-kang"},"content":"* `DATE_AND_TIME` should be in the form yyyy-mm-dd HHmm"},{"lineNumber":81,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":82,"author":{"gitId":"mabel-kang"},"content":"Example: `deadline project /by 2021-02-19 2359`"},{"lineNumber":83,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":84,"author":{"gitId":"mabel-kang"},"content":"Expected Outcome:"},{"lineNumber":85,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":86,"author":{"gitId":"mabel-kang"},"content":"`Done! One new task: `"},{"lineNumber":87,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":88,"author":{"gitId":"mabel-kang"},"content":"`[D][] project (by: Feb 19 2021 11:59 PM)`"},{"lineNumber":89,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":90,"author":{"gitId":"mabel-kang"},"content":"`Now you have 2 tasks in the list`"},{"lineNumber":91,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":92,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":93,"author":{"gitId":"mabel-kang"},"content":"### Adding a Event: `event`"},{"lineNumber":94,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":95,"author":{"gitId":"mabel-kang"},"content":"Adds an Event to the task list."},{"lineNumber":96,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":97,"author":{"gitId":"mabel-kang"},"content":"Format: `event DESCRIPTION /at DATE_AND_TIME`"},{"lineNumber":98,"author":{"gitId":"mabel-kang"},"content":"* `DATE_AND_TIME` should be in the form yyyy-mm-dd HHmm"},{"lineNumber":99,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":100,"author":{"gitId":"mabel-kang"},"content":"Example: `event meeting /at 2021-02-18 0900`"},{"lineNumber":101,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":102,"author":{"gitId":"mabel-kang"},"content":"Expected Outcome:"},{"lineNumber":103,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":104,"author":{"gitId":"mabel-kang"},"content":"`Done! One new task: `"},{"lineNumber":105,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":106,"author":{"gitId":"mabel-kang"},"content":"`[E][] meeting (at: Feb 18 2021 9:00 AM)`"},{"lineNumber":107,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":108,"author":{"gitId":"mabel-kang"},"content":"`Now you have 3 tasks in the list`"},{"lineNumber":109,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":110,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":111,"author":{"gitId":"mabel-kang"},"content":"### Listing all tasks: `list`"},{"lineNumber":112,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":113,"author":{"gitId":"mabel-kang"},"content":"Shows a list of all tasks in the application."},{"lineNumber":114,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":115,"author":{"gitId":"mabel-kang"},"content":"Format: `list`"},{"lineNumber":116,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":117,"author":{"gitId":"mabel-kang"},"content":"Expected Outcome: "},{"lineNumber":118,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":119,"author":{"gitId":"mabel-kang"},"content":"`Here are the tasks in your list:` "},{"lineNumber":120,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":121,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":122,"author":{"gitId":"mabel-kang"},"content":"`[T][] cook`"},{"lineNumber":123,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":124,"author":{"gitId":"mabel-kang"},"content":"`[D][] project (by: Feb 19 2021 11:59 PM)`"},{"lineNumber":125,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":126,"author":{"gitId":"mabel-kang"},"content":"`[E][] meeting (at: Feb 18 2021 9:00 AM)`"},{"lineNumber":127,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":128,"author":{"gitId":"mabel-kang"},"content":"### Searching for a task using keywords: `find`"},{"lineNumber":129,"author":{"gitId":"mabel-kang"},"content":"Find tasks with descriptions containing the keywords specified."},{"lineNumber":130,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":131,"author":{"gitId":"mabel-kang"},"content":"Format: `find KEYWORD`"},{"lineNumber":132,"author":{"gitId":"mabel-kang"},"content":"* The search is case-sensitive. Eg, `COOK` will not match `cook`"},{"lineNumber":133,"author":{"gitId":"mabel-kang"},"content":"* Order of keywords matter. Eg, `finish project` will not match `project finish`"},{"lineNumber":134,"author":{"gitId":"mabel-kang"},"content":"* Only tasks matching all the keywords will be returned."},{"lineNumber":135,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":136,"author":{"gitId":"mabel-kang"},"content":"Examples: "},{"lineNumber":137,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":138,"author":{"gitId":"mabel-kang"},"content":"* `find project` returns `project` and `project meeting`"},{"lineNumber":139,"author":{"gitId":"mabel-kang"},"content":"* `find cook` returns `cook`"},{"lineNumber":140,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":141,"author":{"gitId":"mabel-kang"},"content":"Expected Outcome:"},{"lineNumber":142,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":143,"author":{"gitId":"mabel-kang"},"content":"`Here are the matching tasks in your list:`"},{"lineNumber":144,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":145,"author":{"gitId":"mabel-kang"},"content":"`[T][] cook`"},{"lineNumber":146,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":147,"author":{"gitId":"mabel-kang"},"content":"### Tagging a task: `tag`"},{"lineNumber":148,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":149,"author":{"gitId":"mabel-kang"},"content":"Tags a task based on the tag given as input."},{"lineNumber":150,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":151,"author":{"gitId":"mabel-kang"},"content":"Format: `tag INDEX /DESCRIPTION`"},{"lineNumber":152,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":153,"author":{"gitId":"mabel-kang"},"content":"* Tags the task at the specified `INDEX`"},{"lineNumber":154,"author":{"gitId":"mabel-kang"},"content":"* The index refers to the index number shown in the displayed task list."},{"lineNumber":155,"author":{"gitId":"mabel-kang"},"content":"* The index must be a positive integer."},{"lineNumber":156,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":157,"author":{"gitId":"mabel-kang"},"content":"Examples:"},{"lineNumber":158,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":159,"author":{"gitId":"mabel-kang"},"content":"* `tag 1 /daily` tags the 1st task in the list as \u0027daily\u0027"},{"lineNumber":160,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":161,"author":{"gitId":"mabel-kang"},"content":"Expected Outcome:"},{"lineNumber":162,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":163,"author":{"gitId":"mabel-kang"},"content":"`cook is now tagged as #daily`"},{"lineNumber":164,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":165,"author":{"gitId":"mabel-kang"},"content":"### Marking a task as completed: `done`"},{"lineNumber":166,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":167,"author":{"gitId":"mabel-kang"},"content":"Marks a specified task from the task list as done. "},{"lineNumber":168,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":169,"author":{"gitId":"mabel-kang"},"content":"Format: `done INDEX`"},{"lineNumber":170,"author":{"gitId":"mabel-kang"},"content":"* Marks the task at the specified `INDEX`."},{"lineNumber":171,"author":{"gitId":"mabel-kang"},"content":"* The index refers to the index number shown in the displayed task list."},{"lineNumber":172,"author":{"gitId":"mabel-kang"},"content":"* The index must be a positive integer."},{"lineNumber":173,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":174,"author":{"gitId":"mabel-kang"},"content":"Example: "},{"lineNumber":175,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":176,"author":{"gitId":"mabel-kang"},"content":"* `done 2` marks the 2nd task in the task list as done."},{"lineNumber":177,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":178,"author":{"gitId":"mabel-kang"},"content":"Expected Outcome:"},{"lineNumber":179,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":180,"author":{"gitId":"mabel-kang"},"content":"`Nice! I\u0027ve marked this task as done:`"},{"lineNumber":181,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":182,"author":{"gitId":"mabel-kang"},"content":"`[D][X] project (by: Feb 19 2021 11:59 PM)`"},{"lineNumber":183,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":184,"author":{"gitId":"mabel-kang"},"content":"### Deleting a task: `delete`"},{"lineNumber":185,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":186,"author":{"gitId":"mabel-kang"},"content":"Deletes a specified task from the task list."},{"lineNumber":187,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":188,"author":{"gitId":"mabel-kang"},"content":"Format: `delete INDEX`"},{"lineNumber":189,"author":{"gitId":"mabel-kang"},"content":"* Deletes the task at the specified `INDEX`."},{"lineNumber":190,"author":{"gitId":"mabel-kang"},"content":"* The index refers to the index number shown in the displayed task list."},{"lineNumber":191,"author":{"gitId":"mabel-kang"},"content":"* The index must be a positive integer."},{"lineNumber":192,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":193,"author":{"gitId":"mabel-kang"},"content":"Example:"},{"lineNumber":194,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":195,"author":{"gitId":"mabel-kang"},"content":"* `list` followed by `delete 2` deletes the 2nd task in the task list."},{"lineNumber":196,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":197,"author":{"gitId":"mabel-kang"},"content":"Expected Outcome:"},{"lineNumber":198,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":199,"author":{"gitId":"mabel-kang"},"content":"`Noted. I\u0027ve removed this task:`"},{"lineNumber":200,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":201,"author":{"gitId":"mabel-kang"},"content":"`[D][X] project (by: Feb 19 2021 11:59 PM)`"},{"lineNumber":202,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":203,"author":{"gitId":"mabel-kang"},"content":"`Now you have 2 tasks in the list`"},{"lineNumber":204,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":205,"author":{"gitId":"mabel-kang"},"content":"### Exiting the program: `exit`"},{"lineNumber":206,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":207,"author":{"gitId":"mabel-kang"},"content":"Exits the program."},{"lineNumber":208,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":209,"author":{"gitId":"mabel-kang"},"content":"Format: `exit`"},{"lineNumber":210,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":211,"author":{"gitId":"mabel-kang"},"content":"### Saving the data"},{"lineNumber":212,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":213,"author":{"gitId":"mabel-kang"},"content":"Duke data are saved in the hard disk automatically after any command that changes the data. "},{"lineNumber":214,"author":{"gitId":"mabel-kang"},"content":"There is no need to save manually."},{"lineNumber":215,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":216,"author":{"gitId":"mabel-kang"},"content":"### Editing the data file"},{"lineNumber":217,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":218,"author":{"gitId":"mabel-kang"},"content":"Duke data are saved as a TXT file `[JAR file location]/data/tasks.txt`. Advanced users are welcome"},{"lineNumber":219,"author":{"gitId":"mabel-kang"},"content":"to update data directly by editing that data file."},{"lineNumber":220,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":221,"author":{"gitId":"mabel-kang"},"content":"Caution: If your changes to the data file makes its format invalid, Duke will not be able to run."},{"lineNumber":222,"author":{"gitId":"mabel-kang"},"content":"If that happens, please delete the data file."},{"lineNumber":223,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":224,"author":{"gitId":"mabel-kang"},"content":"## FAQ"},{"lineNumber":225,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":226,"author":{"gitId":"mabel-kang"},"content":"Q: How do I transfer my data to another Computer?"},{"lineNumber":227,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":228,"author":{"gitId":"mabel-kang"},"content":"A: Install the app in the other computer and overwrite the empty data file it creates with the file "},{"lineNumber":229,"author":{"gitId":"mabel-kang"},"content":"that contains the data of your previous Duke home folder."},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"mabel-kang"},"content":"## Command Summary"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"mabel-kang"},"content":"Action | Format, Examples"},{"lineNumber":234,"author":{"gitId":"mabel-kang"},"content":"-------| ----------------"},{"lineNumber":235,"author":{"gitId":"mabel-kang"},"content":"help | `help`"},{"lineNumber":236,"author":{"gitId":"mabel-kang"},"content":"todo   | `todo DESCRIPTION` eg,`todo cook`"},{"lineNumber":237,"author":{"gitId":"mabel-kang"},"content":"deadline | `deadline DESCRIPTION /by DATE_AND_TIME` eg, `deadline project /by 2021-02-19 2359`"},{"lineNumber":238,"author":{"gitId":"mabel-kang"},"content":"event | `event DESCRIPTION /at DATE_AND_TIME` eg, `event meeting /at 2021-02-18 0900`"},{"lineNumber":239,"author":{"gitId":"mabel-kang"},"content":"list | `list`"},{"lineNumber":240,"author":{"gitId":"mabel-kang"},"content":"find | `find KEYWORD` eg, `find cook`"},{"lineNumber":241,"author":{"gitId":"mabel-kang"},"content":"tag | `tag INDEX /DESCRIPTION` eg, `tag 1/daily`"},{"lineNumber":242,"author":{"gitId":"mabel-kang"},"content":"done | `done` eg, `done 2`"},{"lineNumber":243,"author":{"gitId":"mabel-kang"},"content":"delete | `delete INDEX` eg, `delete 2`"},{"lineNumber":244,"author":{"gitId":"mabel-kang"},"content":"exit | `exit`"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"mabel-kang":238,"-":11}},{"path":"src/main/java/CommandValidation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.util.Arrays;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" * CommandValidation handles the initial validation of the user command inputs."},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"public class CommandValidation {"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    protected static final int VALID_INDEX_BOUND \u003d -1;"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    protected static final int INDEX_OFFSET \u003d 1;"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    protected static final int STARTING_INDEX \u003d 0;"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"     * Checks if the user input is within the list of accepted commands."},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"     * @param command User\u0027s command input."},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On invalid input."},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    public static void checkValidCommand(String command) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"        String[] validCommands \u003d new String[] {\"todo\", \"deadline\", \"event\", \"list\", \"bye\", \"done\", \"delete\","},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"                \"find\", \"tag\", \"help\"};"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"        List\u003cString\u003e commands \u003d Arrays.asList(validCommands);"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"        int index \u003d command.indexOf(\u0027 \u0027);"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"        String first \u003d command;"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"        if (index \u003e VALID_INDEX_BOUND) {"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"            first \u003d command.substring(0, index);"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"        if (!commands.contains(first)) {"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"            throw new DukeException(\":( OOPS! I\u0027m sorry, but I don\u0027t know what that means!!! Tip: commands should \""},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"                     + \"not be in capital letters!\");"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"            String[] secondValidation \u003d new String[] {\"todo\", \"deadline\", \"event\", \"done\", \"delete\", \"find\", \"tag\"};"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"            List\u003cString\u003e secondListOfCommands \u003d Arrays.asList(secondValidation);"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"            boolean isCommandInSecondList \u003d secondListOfCommands.contains(first);"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"            if (isCommandInSecondList"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"                    \u0026\u0026 (index \u003c\u003d VALID_INDEX_BOUND || command.substring(index).isBlank())) {"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"                throw new DukeException(\":( OOPS! The description of a todo/deadline/event/done/delete/find/tag \""},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"                        + \"cannot be empty!!\");"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"     * Checks if the syntax for commands with time and date is correct."},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"     * @param taskType A Character indicating the type of task."},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"     * @param command  User\u0027s command input."},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"     * @param findSlash Position of slash in the input."},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On invalid input."},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":"    public static void validateSyntaxForSettingTimeDate("},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"            Character taskType, String command, int findSlash) throws DukeException {"},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"        String subcommand \u003d command.substring(findSlash + INDEX_OFFSET);"},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"        int findSpace \u003d subcommand.indexOf(\u0027 \u0027);"},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"        String descriptionAfterSlash \u003d subcommand.substring(STARTING_INDEX, findSpace);"},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"        switch (taskType) {"},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"        case \u0027E\u0027:"},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":"            if (!descriptionAfterSlash.equals(\"at\")) {"},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":"                throw new DukeException(\":( OOPS the command syntax is wrong, check out the help page for the \""},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":"                        + \"correct syntax!\");"},{"lineNumber":65,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"mabel-kang"},"content":"            break;"},{"lineNumber":67,"author":{"gitId":"mabel-kang"},"content":"        case \u0027D\u0027:"},{"lineNumber":68,"author":{"gitId":"mabel-kang"},"content":"            if (!descriptionAfterSlash.equals(\"by\")) {"},{"lineNumber":69,"author":{"gitId":"mabel-kang"},"content":"                throw new DukeException(\":( OOPS the command syntax is wrong, check out the help page for the \""},{"lineNumber":70,"author":{"gitId":"mabel-kang"},"content":"                        + \"correct syntax!\");"},{"lineNumber":71,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"mabel-kang"},"content":"            break;"},{"lineNumber":73,"author":{"gitId":"mabel-kang"},"content":"        default:"},{"lineNumber":74,"author":{"gitId":"mabel-kang"},"content":"            break;"},{"lineNumber":75,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":78,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":79,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"mabel-kang"},"content":"     * Checks if the content of the tag/deadline/event commands are valid."},{"lineNumber":81,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"mabel-kang"},"content":"     * @param command User\u0027s command input."},{"lineNumber":83,"author":{"gitId":"mabel-kang"},"content":"     * @param findSlash Position of slash in the input."},{"lineNumber":84,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On invalid input."},{"lineNumber":85,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"mabel-kang"},"content":"    public static void checkForContentAfterSlash(String command, int findSlash) throws DukeException {"},{"lineNumber":87,"author":{"gitId":"mabel-kang"},"content":"        boolean isSlashAbsent \u003d (findSlash \u003d\u003d VALID_INDEX_BOUND);"},{"lineNumber":88,"author":{"gitId":"mabel-kang"},"content":"        boolean isDescriptionNotComplete \u003d command.endsWith(\"/\");"},{"lineNumber":89,"author":{"gitId":"mabel-kang"},"content":"        boolean isDescriptionNotValid \u003d command.substring(findSlash + INDEX_OFFSET).isBlank();"},{"lineNumber":90,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":91,"author":{"gitId":"mabel-kang"},"content":"        int index \u003d command.indexOf(\u0027 \u0027);"},{"lineNumber":92,"author":{"gitId":"mabel-kang"},"content":"        String commandType \u003d command.substring(STARTING_INDEX, index);"},{"lineNumber":93,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":94,"author":{"gitId":"mabel-kang"},"content":"        if (isSlashAbsent || isDescriptionNotComplete || isDescriptionNotValid) {"},{"lineNumber":95,"author":{"gitId":"mabel-kang"},"content":"            if (commandType.equals(\"tag\")) {"},{"lineNumber":96,"author":{"gitId":"mabel-kang"},"content":"                throw new DukeException(\":( OOPS! Please input a valid tag\");"},{"lineNumber":97,"author":{"gitId":"mabel-kang"},"content":"            } else {"},{"lineNumber":98,"author":{"gitId":"mabel-kang"},"content":"                throw new DukeException(\":( OOPS! Please input a valid time/date\");"},{"lineNumber":99,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":103,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"mabel-kang"},"content":"     * Checks if task that user has identified exists."},{"lineNumber":105,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"mabel-kang"},"content":"     * @param taskSize Number of tasks in the TaskList."},{"lineNumber":107,"author":{"gitId":"mabel-kang"},"content":"     * @param chosenNumber The task number."},{"lineNumber":108,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On invalid input. Task does not exist."},{"lineNumber":109,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"mabel-kang"},"content":"    public static void checkValidRange(int taskSize, int chosenNumber) throws DukeException {"},{"lineNumber":111,"author":{"gitId":"mabel-kang"},"content":"        boolean isOutOfBounds \u003d chosenNumber \u003e taskSize | chosenNumber \u003c\u003d 0;"},{"lineNumber":112,"author":{"gitId":"mabel-kang"},"content":"        if (isOutOfBounds) {"},{"lineNumber":113,"author":{"gitId":"mabel-kang"},"content":"            throw new DukeException(\":( OOPS! This task does not exist! Use \u0027list\u0027 to check your task numbers!\");"},{"lineNumber":114,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":116}},{"path":"src/main/java/DateTimeHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":" * Handles the dates/times input."},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"public class DateTimeHandler {"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    protected static final String DATE_TIME_FORMAT \u003d \"MMM dd yyyy h:mm a\";"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    protected static final String INPUT_FORMAT \u003d \"yyyy-MM-dd HHmm\";"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"     * Checks if the input is in the correct format of \"yyyy-MM-dd HHmm\"."},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"     * @param details Input to be checked."},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"     * @return A LocalDateTime object created from the input."},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On invalid input. Input format is wrong."},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"    public static LocalDateTime validateDateTime(String details) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(INPUT_FORMAT);"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"            LocalDateTime verifiedDate \u003d LocalDateTime.parse(details, formatter);"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"            return verifiedDate;"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"            throw new DukeException(\":( Date format is invalid! Please enter in yyyy-mm-dd HHmm format!\");"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"     * Creates a LocalDateTime object from a string."},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"     * @param date String that is used to create a LocalDateTime object."},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"     * @return A LocalDateTime object created."},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"    public static LocalDateTime parseStringIntoLocalDateTime(String date) {"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"        LocalDateTime createDate \u003d LocalDateTime.parse(date, format);"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"        return createDate;"},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"     * Parses LocalDateTime object into a string for tasks, according to given format."},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"     * @param details LocalDateTime object."},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"     * @return A String representing the date and time in the new format."},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"    public static String parseLocalDateTimeIntoString(LocalDateTime details) {"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"        return details.format(DateTimeFormatter.ofPattern(DATE_TIME_FORMAT));"},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":52}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":" * Represents a task of type Deadline."},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" * A Deadline is represented by a name in the form of a String,"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":" * and the date and time by which the task should be completed, in the form"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":" * of a LocalDateTime."},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    protected LocalDateTime by;"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"     * Creates a Deadline with the description and date and time by which the task should be completed."},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"     * @param name Description of the Deadline."},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"     * @param by The date and time by which the task should be completed."},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"    public Deadline(String name, LocalDateTime by) {"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"        super(name);"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"        this.by \u003d by;"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateTimeHandler.parseLocalDateTimeIntoString(by) + \") \""},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"                + (isThereTag ? getTag() : \"\");"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":30}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":" * An example of a custom control using FXML."},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"    private Label dialog;"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"    private ImageView displayPicture;"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"            fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"        dialog.setText(text);"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":61}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"    protected static final String PATH \u003d \"data/tasks.txt\";"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"    protected Parser parser;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"    protected Storage storage;"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"    protected TaskList tasks;"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"    protected Ui ui;"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"     * Creates a new instance of Duke."},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    public Duke() {"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"        ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"        storage \u003d new Storage(PATH);"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"        storage.checkFileExistence();"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"        tasks \u003d new TaskList(storage.loadTasks());"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        parser \u003d new Parser(storage, tasks, ui);"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"mabel-kang":17,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"    public DukeException(String message) {"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"        super(message);"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":" * Represents a task of type Event."},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" * An Event is represented by a name and time of the event,"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":" * both in the form of a String."},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    protected LocalDateTime time;"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"     * Creates a new Event with the description and time of event."},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"     * @param name Description of Event."},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"     * @param time Time of event."},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    public Event(String name, LocalDateTime time) {"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"        super(name);"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"        this.time \u003d time;"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + DateTimeHandler.parseLocalDateTimeIntoString(time) + \") \""},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"                + (isThereTag ? getTag() : \"\");"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":28}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":7}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"            stage.setTitle(\"DUKE\");"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import javafx.application.Platform;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    static final String WELCOME_MESSAGE \u003d \"Hello I\u0027m Duke! What can I help you with today? :)\\n\\nType the command\""},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"            + \" \u0027help\u0027 to find out how to use Duke!\";"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    static final String RESPONSE_TO_BYE \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"    private Duke duke;"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.jpg\"));"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"    public void initialize() {"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(WELCOME_MESSAGE, dukeImage));"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"        duke \u003d d;"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"    @FXML"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"    private void handleUserInput() {"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"        String response \u003d duke.parser.handleCommand(userInput.getText());"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"        assert response !\u003d null;"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"        );"},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":"        userInput.clear();"},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"        if (response.equals(RESPONSE_TO_BYE)) {"},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"            Platform.exit();"},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":58}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" * Parser handles the user commands."},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    protected static final int INDEX_OFFSET \u003d 1;"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    protected static final int OFFSET_TO_NEXT_REQUIRED_DATA \u003d 4;"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    protected static final int INVALID_INDEX \u003d -1;"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    protected static final int STARTING_INDEX \u003d 0;"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    protected Storage storage;"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    protected TaskList tasks;"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    protected Ui ui;"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"    protected String command;"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    protected int index;"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"    protected int findSlash;"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    protected int taskIdentifier;"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"     * Creates a new instance of a Parser to make sense of user command."},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"     * @param storage Storage of tasks on hard disk."},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"     * @param tasks List of user\u0027s tasks."},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"     * @param ui Ui for user interaction."},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"    public Parser(Storage storage, TaskList tasks, Ui ui) {"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"        this.storage \u003d storage;"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"        this.ui \u003d ui;"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"     * Helper function to obtain necessary details and create a ToDo."},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"     * @return New ToDo created."},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"    public ToDo createTodo() {"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"        String descriptionTask \u003d command.substring(index + INDEX_OFFSET);"},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"        ToDo newToDo \u003d new ToDo(descriptionTask);"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"        return newToDo;"},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"     * Helper function to obtain necessary details and create a Deadline/Event."},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"     * @param taskType A Character to indicate if command is a Deadline or Event."},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"     * @return A Task object, either a Deadline or Event object."},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On validation error."},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":"    public Task createDeadlineOrEvent(Character taskType) throws DukeException {"},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"        CommandValidation.checkForContentAfterSlash(command, findSlash);"},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"        CommandValidation.validateSyntaxForSettingTimeDate(taskType, command, findSlash);"},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"        String description \u003d command.substring(index + INDEX_OFFSET, findSlash - INDEX_OFFSET);"},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"        LocalDateTime taskDateTime \u003d"},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"                DateTimeHandler.validateDateTime(command.substring(findSlash + OFFSET_TO_NEXT_REQUIRED_DATA));"},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"        if (taskType \u003d\u003d \u0027D\u0027) {"},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"            Deadline newDeadline \u003d new Deadline(description, taskDateTime);"},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":"            return newDeadline;"},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":"        } else if (taskType \u003d\u003d \u0027E\u0027) {"},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":"            Event newEvent \u003d new Event(description, taskDateTime);"},{"lineNumber":65,"author":{"gitId":"mabel-kang"},"content":"            return newEvent;"},{"lineNumber":66,"author":{"gitId":"mabel-kang"},"content":"        } else {"},{"lineNumber":67,"author":{"gitId":"mabel-kang"},"content":"            return null;"},{"lineNumber":68,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":71,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"mabel-kang"},"content":"     * Helper function to find a task needed for handling commands."},{"lineNumber":73,"author":{"gitId":"mabel-kang"},"content":"     * @return Task needed."},{"lineNumber":74,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On validation error."},{"lineNumber":75,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"mabel-kang"},"content":"    public Task findTask() throws DukeException {"},{"lineNumber":77,"author":{"gitId":"mabel-kang"},"content":"        if (command.substring(STARTING_INDEX, index).equals(\"tag\")) {"},{"lineNumber":78,"author":{"gitId":"mabel-kang"},"content":"            taskIdentifier \u003d Integer.parseInt(command.substring(index + INDEX_OFFSET, findSlash - INDEX_OFFSET));"},{"lineNumber":79,"author":{"gitId":"mabel-kang"},"content":"        } else {"},{"lineNumber":80,"author":{"gitId":"mabel-kang"},"content":"            taskIdentifier \u003d Integer.parseInt(command.substring(index + INDEX_OFFSET));"},{"lineNumber":81,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"mabel-kang"},"content":"        CommandValidation.checkValidRange(tasks.getSize(), taskIdentifier);"},{"lineNumber":83,"author":{"gitId":"mabel-kang"},"content":"        Task task \u003d tasks.find(taskIdentifier - INDEX_OFFSET);"},{"lineNumber":84,"author":{"gitId":"mabel-kang"},"content":"        return task;"},{"lineNumber":85,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":87,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"mabel-kang"},"content":"     * Handles a ToDo, Deadline or Event command."},{"lineNumber":89,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"mabel-kang"},"content":"     * @param type A Character to indicate type of command."},{"lineNumber":91,"author":{"gitId":"mabel-kang"},"content":"     * @return A string with the response to the command."},{"lineNumber":92,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error when adding the task"},{"lineNumber":93,"author":{"gitId":"mabel-kang"},"content":"     * to the file in the hard disk."},{"lineNumber":94,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On validation error."},{"lineNumber":95,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"mabel-kang"},"content":"    public String handleATaskCreation(Character type) throws IOException, DukeException {"},{"lineNumber":97,"author":{"gitId":"mabel-kang"},"content":"        assert type \u003d\u003d \u0027T\u0027 | type \u003d\u003d \u0027D\u0027 | type \u003d\u003d \u0027E\u0027;"},{"lineNumber":98,"author":{"gitId":"mabel-kang"},"content":"        Task newTask \u003d null;"},{"lineNumber":99,"author":{"gitId":"mabel-kang"},"content":"        if (type \u003d\u003d \u0027T\u0027) {"},{"lineNumber":100,"author":{"gitId":"mabel-kang"},"content":"            newTask \u003d createTodo();"},{"lineNumber":101,"author":{"gitId":"mabel-kang"},"content":"        } else {"},{"lineNumber":102,"author":{"gitId":"mabel-kang"},"content":"            newTask \u003d createDeadlineOrEvent(type);"},{"lineNumber":103,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"mabel-kang"},"content":"        tasks.add(newTask);"},{"lineNumber":105,"author":{"gitId":"mabel-kang"},"content":"        storage.addTask(newTask);"},{"lineNumber":106,"author":{"gitId":"mabel-kang"},"content":"        return ui.respondToAddTask(newTask, tasks.getSize());"},{"lineNumber":107,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":109,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"mabel-kang"},"content":"     * Handles the Done command."},{"lineNumber":111,"author":{"gitId":"mabel-kang"},"content":"     * @return A string with the response to the command."},{"lineNumber":112,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On validation error."},{"lineNumber":113,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error."},{"lineNumber":114,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"mabel-kang"},"content":"    public String handleDone() throws DukeException, IOException {"},{"lineNumber":116,"author":{"gitId":"mabel-kang"},"content":"        Task toMark \u003d findTask();"},{"lineNumber":117,"author":{"gitId":"mabel-kang"},"content":"        storage.markTask(toMark);"},{"lineNumber":118,"author":{"gitId":"mabel-kang"},"content":"        return ui.respondToDone(toMark);"},{"lineNumber":119,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":121,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"mabel-kang"},"content":"     * Handles the Delete command."},{"lineNumber":123,"author":{"gitId":"mabel-kang"},"content":"     * @return A string with the response to the command."},{"lineNumber":124,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On validation error."},{"lineNumber":125,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error."},{"lineNumber":126,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"mabel-kang"},"content":"    public String handleDelete() throws DukeException, IOException {"},{"lineNumber":128,"author":{"gitId":"mabel-kang"},"content":"        Task selected \u003d findTask();"},{"lineNumber":129,"author":{"gitId":"mabel-kang"},"content":"        tasks.delete(taskIdentifier - INDEX_OFFSET);"},{"lineNumber":130,"author":{"gitId":"mabel-kang"},"content":"        storage.deleteTask(selected);"},{"lineNumber":131,"author":{"gitId":"mabel-kang"},"content":"        return ui.respondToDelete(selected, tasks.getSize());"},{"lineNumber":132,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":134,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"mabel-kang"},"content":"     * Handles the Find command."},{"lineNumber":136,"author":{"gitId":"mabel-kang"},"content":"     * @return A string with the response to the command."},{"lineNumber":137,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"mabel-kang"},"content":"    public String handleFind() {"},{"lineNumber":139,"author":{"gitId":"mabel-kang"},"content":"        String keyword \u003d command.substring(index + INDEX_OFFSET);"},{"lineNumber":140,"author":{"gitId":"mabel-kang"},"content":"        String output \u003d \"\";"},{"lineNumber":141,"author":{"gitId":"mabel-kang"},"content":"        int numberOfMatches \u003d 0;"},{"lineNumber":142,"author":{"gitId":"mabel-kang"},"content":"        int tracker \u003d 0;"},{"lineNumber":143,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":144,"author":{"gitId":"mabel-kang"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"},{"lineNumber":145,"author":{"gitId":"mabel-kang"},"content":"            String task \u003d tasks.find(i).toString();"},{"lineNumber":146,"author":{"gitId":"mabel-kang"},"content":"            boolean isPresent \u003d task.toLowerCase().contains(keyword.toLowerCase());"},{"lineNumber":147,"author":{"gitId":"mabel-kang"},"content":"            if (isPresent) {"},{"lineNumber":148,"author":{"gitId":"mabel-kang"},"content":"                if (tracker \u003d\u003d 0) {"},{"lineNumber":149,"author":{"gitId":"mabel-kang"},"content":"                    output \u003d ui.respondToFind() + \"\\n\";"},{"lineNumber":150,"author":{"gitId":"mabel-kang"},"content":"                    tracker++;"},{"lineNumber":151,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":152,"author":{"gitId":"mabel-kang"},"content":"                output \u003d output + task + \"\\n\";"},{"lineNumber":153,"author":{"gitId":"mabel-kang"},"content":"                numberOfMatches++;"},{"lineNumber":154,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"mabel-kang"},"content":"        if (numberOfMatches \u003d\u003d 0) {"},{"lineNumber":157,"author":{"gitId":"mabel-kang"},"content":"            output \u003d ui.respondToNoMatches();"},{"lineNumber":158,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"mabel-kang"},"content":"        return output;"},{"lineNumber":160,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":162,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":163,"author":{"gitId":"mabel-kang"},"content":"     * Extracts the tag from the command."},{"lineNumber":164,"author":{"gitId":"mabel-kang"},"content":"     * @return A string representing the tag."},{"lineNumber":165,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":166,"author":{"gitId":"mabel-kang"},"content":"    public String extractTag() {"},{"lineNumber":167,"author":{"gitId":"mabel-kang"},"content":"        return command.substring(findSlash + INDEX_OFFSET);"},{"lineNumber":168,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":170,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"mabel-kang"},"content":"     * Handles the Tag command."},{"lineNumber":172,"author":{"gitId":"mabel-kang"},"content":"     * @return A string with the response to the command."},{"lineNumber":173,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On validation error."},{"lineNumber":174,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error."},{"lineNumber":175,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"mabel-kang"},"content":"    public String handleTag() throws DukeException, IOException {"},{"lineNumber":177,"author":{"gitId":"mabel-kang"},"content":"        CommandValidation.checkForContentAfterSlash(command, findSlash);"},{"lineNumber":178,"author":{"gitId":"mabel-kang"},"content":"        String tag \u003d extractTag();"},{"lineNumber":179,"author":{"gitId":"mabel-kang"},"content":"        Task selected \u003d findTask();"},{"lineNumber":180,"author":{"gitId":"mabel-kang"},"content":"        storage.addTag(selected, tag);"},{"lineNumber":181,"author":{"gitId":"mabel-kang"},"content":"        selected.setTag(tag);"},{"lineNumber":182,"author":{"gitId":"mabel-kang"},"content":"        return ui.respondToTag(selected);"},{"lineNumber":183,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":185,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":186,"author":{"gitId":"mabel-kang"},"content":"     * Main method to make sense of the user command and to determine"},{"lineNumber":187,"author":{"gitId":"mabel-kang"},"content":"     * which command it is."},{"lineNumber":188,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":189,"author":{"gitId":"mabel-kang"},"content":"     * @param command User\u0027s command input."},{"lineNumber":190,"author":{"gitId":"mabel-kang"},"content":"     * @return A string with the response to the command."},{"lineNumber":191,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":192,"author":{"gitId":"mabel-kang"},"content":"    public String handleCommand(String command) {"},{"lineNumber":193,"author":{"gitId":"mabel-kang"},"content":"        this.command \u003d command;"},{"lineNumber":194,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":195,"author":{"gitId":"mabel-kang"},"content":"            CommandValidation.checkValidCommand(command);"},{"lineNumber":196,"author":{"gitId":"mabel-kang"},"content":"            index \u003d command.indexOf(\u0027 \u0027);"},{"lineNumber":197,"author":{"gitId":"mabel-kang"},"content":"            findSlash \u003d command.indexOf(\u0027/\u0027);"},{"lineNumber":198,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":199,"author":{"gitId":"mabel-kang"},"content":"            if (index \u003e INVALID_INDEX) {"},{"lineNumber":200,"author":{"gitId":"mabel-kang"},"content":"                String type \u003d command.substring(STARTING_INDEX, index);"},{"lineNumber":201,"author":{"gitId":"mabel-kang"},"content":"                switch (type) {"},{"lineNumber":202,"author":{"gitId":"mabel-kang"},"content":"                case \"todo\":"},{"lineNumber":203,"author":{"gitId":"mabel-kang"},"content":"                    return handleATaskCreation(\u0027T\u0027);"},{"lineNumber":204,"author":{"gitId":"mabel-kang"},"content":"                case \"deadline\":"},{"lineNumber":205,"author":{"gitId":"mabel-kang"},"content":"                    return handleATaskCreation(\u0027D\u0027);"},{"lineNumber":206,"author":{"gitId":"mabel-kang"},"content":"                case \"event\":"},{"lineNumber":207,"author":{"gitId":"mabel-kang"},"content":"                    return handleATaskCreation(\u0027E\u0027);"},{"lineNumber":208,"author":{"gitId":"mabel-kang"},"content":"                case \"done\":"},{"lineNumber":209,"author":{"gitId":"mabel-kang"},"content":"                    return handleDone();"},{"lineNumber":210,"author":{"gitId":"mabel-kang"},"content":"                case \"delete\":"},{"lineNumber":211,"author":{"gitId":"mabel-kang"},"content":"                    return handleDelete();"},{"lineNumber":212,"author":{"gitId":"mabel-kang"},"content":"                case \"find\":"},{"lineNumber":213,"author":{"gitId":"mabel-kang"},"content":"                    return handleFind();"},{"lineNumber":214,"author":{"gitId":"mabel-kang"},"content":"                case \"tag\":"},{"lineNumber":215,"author":{"gitId":"mabel-kang"},"content":"                    return handleTag();"},{"lineNumber":216,"author":{"gitId":"mabel-kang"},"content":"                default:"},{"lineNumber":217,"author":{"gitId":"mabel-kang"},"content":"                    return null;"},{"lineNumber":218,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":219,"author":{"gitId":"mabel-kang"},"content":"            } else {"},{"lineNumber":220,"author":{"gitId":"mabel-kang"},"content":"                switch (command) {"},{"lineNumber":221,"author":{"gitId":"mabel-kang"},"content":"                case \"bye\":"},{"lineNumber":222,"author":{"gitId":"mabel-kang"},"content":"                    return ui.respondToBye();"},{"lineNumber":223,"author":{"gitId":"mabel-kang"},"content":"                case \"list\":"},{"lineNumber":224,"author":{"gitId":"mabel-kang"},"content":"                    return ui.respondToList(tasks.getSize()) + \"\\n\" + tasks.list();"},{"lineNumber":225,"author":{"gitId":"mabel-kang"},"content":"                case \"help\":"},{"lineNumber":226,"author":{"gitId":"mabel-kang"},"content":"                    return ui.respondToHelp();"},{"lineNumber":227,"author":{"gitId":"mabel-kang"},"content":"                default:"},{"lineNumber":228,"author":{"gitId":"mabel-kang"},"content":"                    return null;"},{"lineNumber":229,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":230,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":231,"author":{"gitId":"mabel-kang"},"content":"        } catch (DukeException | IOException e) {"},{"lineNumber":232,"author":{"gitId":"mabel-kang"},"content":"            return e.getMessage();"},{"lineNumber":233,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":234,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":235,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":236,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":236}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.io.FileInputStream;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"import java.io.FileOutputStream;"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":" * Storage handles the loading of tasks from the file and making changes"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":" * to the file based on user commands."},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    public static final int INVALID_INDEX \u003d -1;"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    public static final int INDEX_OFFSET \u003d 1;"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"    public static final int START_OF_DESCRIPTION \u003d 7;"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    public static final int OFFSET_TO_DATE_TIME \u003d 5;"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"    public static final int INDEX_OF_TYPE \u003d 1;"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"    public static final int INDEX_OF_CHECK_FOR_DONE \u003d 4;"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"    protected boolean isFileOriginallyPresent;"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"    protected File localFile;"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"    protected String path;"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"     * Creates a new instance of Storage for a user."},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"     * @param path Path of file that is to be saved on the hard disk."},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"    public Storage(String path) {"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"        this.path \u003d path;"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"        this.localFile \u003d new File(path);"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"        this.isFileOriginallyPresent \u003d true;"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"     * Checks if directory and file exists and if they do not exist, create them."},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"    public void checkFileExistence() {"},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"        File directory \u003d new File(\"data\");"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"        if (!directory.isDirectory()) {"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"            directory.mkdir();"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"        if (!localFile.exists()) {"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"            try {"},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"                this.isFileOriginallyPresent \u003d false;"},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"                localFile.createNewFile();"},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"            } catch (IOException e) {"},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":"                e.getMessage();"},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":"     * Adds a task to the file."},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task to be added."},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error."},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":"    public void addTask(Task task) throws IOException {"},{"lineNumber":65,"author":{"gitId":"mabel-kang"},"content":"        FileWriter fw \u003d new FileWriter(this.localFile, true);"},{"lineNumber":66,"author":{"gitId":"mabel-kang"},"content":"        fw.write(task.toString() + \"\\n\");"},{"lineNumber":67,"author":{"gitId":"mabel-kang"},"content":"        fw.close();"},{"lineNumber":68,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":70,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"mabel-kang"},"content":"     * Helps to set tag and done if they exist."},{"lineNumber":72,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"mabel-kang"},"content":"     * @param hashIndex Index at which the hash is located."},{"lineNumber":74,"author":{"gitId":"mabel-kang"},"content":"     * @param doneIndicator Character indicating if the task is done."},{"lineNumber":75,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task that is being created."},{"lineNumber":76,"author":{"gitId":"mabel-kang"},"content":"     * @param list List of all tasks."},{"lineNumber":77,"author":{"gitId":"mabel-kang"},"content":"     * @param data User\u0027s command."},{"lineNumber":78,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"mabel-kang"},"content":"    public void helperForTaskCreationFromData(int hashIndex, Character doneIndicator, Task task, List\u003cTask\u003e list,"},{"lineNumber":80,"author":{"gitId":"mabel-kang"},"content":"                                              String data) {"},{"lineNumber":81,"author":{"gitId":"mabel-kang"},"content":"        if (hashIndex !\u003d INVALID_INDEX) {"},{"lineNumber":82,"author":{"gitId":"mabel-kang"},"content":"            String tag \u003d data.substring(hashIndex + INDEX_OFFSET);"},{"lineNumber":83,"author":{"gitId":"mabel-kang"},"content":"            task.setTag(tag);"},{"lineNumber":84,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"mabel-kang"},"content":"        if (doneIndicator \u003d\u003d \u0027X\u0027) {"},{"lineNumber":86,"author":{"gitId":"mabel-kang"},"content":"            task.setDone();"},{"lineNumber":87,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"mabel-kang"},"content":"        list.add(task);"},{"lineNumber":89,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":91,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"mabel-kang"},"content":"     * Load tasks into a list if the file exists on the hard disk."},{"lineNumber":93,"author":{"gitId":"mabel-kang"},"content":"     * @return A list consisting of all the tasks if the file exists,"},{"lineNumber":94,"author":{"gitId":"mabel-kang"},"content":"     * if not an empty list is returned."},{"lineNumber":95,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"mabel-kang"},"content":"    public List\u003cTask\u003e loadTasks() {"},{"lineNumber":97,"author":{"gitId":"mabel-kang"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":98,"author":{"gitId":"mabel-kang"},"content":"        if (this.isFileOriginallyPresent) {"},{"lineNumber":99,"author":{"gitId":"mabel-kang"},"content":"            Scanner contents \u003d null;"},{"lineNumber":100,"author":{"gitId":"mabel-kang"},"content":"            try {"},{"lineNumber":101,"author":{"gitId":"mabel-kang"},"content":"                contents \u003d new Scanner((this.localFile));"},{"lineNumber":102,"author":{"gitId":"mabel-kang"},"content":"            } catch (FileNotFoundException e) {"},{"lineNumber":103,"author":{"gitId":"mabel-kang"},"content":"                e.getMessage();"},{"lineNumber":104,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":106,"author":{"gitId":"mabel-kang"},"content":"            while (contents.hasNext()) {"},{"lineNumber":107,"author":{"gitId":"mabel-kang"},"content":"                String data \u003d contents.nextLine();"},{"lineNumber":108,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":109,"author":{"gitId":"mabel-kang"},"content":"                Character type \u003d data.charAt(INDEX_OF_TYPE);"},{"lineNumber":110,"author":{"gitId":"mabel-kang"},"content":"                Character isDone \u003d data.charAt(INDEX_OF_CHECK_FOR_DONE);"},{"lineNumber":111,"author":{"gitId":"mabel-kang"},"content":"                int startingIndex \u003d data.indexOf(\u0027(\u0027);"},{"lineNumber":112,"author":{"gitId":"mabel-kang"},"content":"                int endingIndex \u003d data.indexOf(\u0027)\u0027);"},{"lineNumber":113,"author":{"gitId":"mabel-kang"},"content":"                int findHash \u003d data.indexOf(\u0027#\u0027);"},{"lineNumber":114,"author":{"gitId":"mabel-kang"},"content":"                Task task \u003d null;"},{"lineNumber":115,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":116,"author":{"gitId":"mabel-kang"},"content":"                switch (type) {"},{"lineNumber":117,"author":{"gitId":"mabel-kang"},"content":"                case \u0027T\u0027:"},{"lineNumber":118,"author":{"gitId":"mabel-kang"},"content":"                    String todoDescription \u003d data.substring(START_OF_DESCRIPTION);"},{"lineNumber":119,"author":{"gitId":"mabel-kang"},"content":"                    if (findHash !\u003d INVALID_INDEX) {"},{"lineNumber":120,"author":{"gitId":"mabel-kang"},"content":"                        todoDescription \u003d data.substring(START_OF_DESCRIPTION, findHash - INDEX_OFFSET);"},{"lineNumber":121,"author":{"gitId":"mabel-kang"},"content":"                    }"},{"lineNumber":122,"author":{"gitId":"mabel-kang"},"content":"                    task \u003d new ToDo(todoDescription);"},{"lineNumber":123,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":124,"author":{"gitId":"mabel-kang"},"content":"                case \u0027D\u0027:"},{"lineNumber":125,"author":{"gitId":"mabel-kang"},"content":"                    String deadlineDescription \u003d data.substring(START_OF_DESCRIPTION, startingIndex - INDEX_OFFSET);"},{"lineNumber":126,"author":{"gitId":"mabel-kang"},"content":"                    String by \u003d data.substring(startingIndex + OFFSET_TO_DATE_TIME, endingIndex);"},{"lineNumber":127,"author":{"gitId":"mabel-kang"},"content":"                    task \u003d new Deadline(deadlineDescription, DateTimeHandler.parseStringIntoLocalDateTime(by));"},{"lineNumber":128,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":129,"author":{"gitId":"mabel-kang"},"content":"                case \u0027E\u0027:"},{"lineNumber":130,"author":{"gitId":"mabel-kang"},"content":"                    String eventDescription \u003d data.substring(START_OF_DESCRIPTION, startingIndex - INDEX_OFFSET);"},{"lineNumber":131,"author":{"gitId":"mabel-kang"},"content":"                    String time \u003d data.substring(startingIndex + OFFSET_TO_DATE_TIME, endingIndex);"},{"lineNumber":132,"author":{"gitId":"mabel-kang"},"content":"                    task \u003d new Event(eventDescription, DateTimeHandler.parseStringIntoLocalDateTime(time));"},{"lineNumber":133,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":134,"author":{"gitId":"mabel-kang"},"content":"                default:"},{"lineNumber":135,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":136,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":137,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":138,"author":{"gitId":"mabel-kang"},"content":"                if (type \u003d\u003d \u0027T\u0027 | type \u003d\u003d \u0027D\u0027 | type \u003d\u003d \u0027E\u0027) {"},{"lineNumber":139,"author":{"gitId":"mabel-kang"},"content":"                    helperForTaskCreationFromData(findHash, isDone, task, tasks, data);"},{"lineNumber":140,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":141,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"mabel-kang"},"content":"        return tasks;"},{"lineNumber":144,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":146,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"mabel-kang"},"content":"     * Deletes a task from the file."},{"lineNumber":148,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":149,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task to be deleted."},{"lineNumber":150,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error."},{"lineNumber":151,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"mabel-kang"},"content":"    public void deleteTask(Task task) throws IOException {"},{"lineNumber":153,"author":{"gitId":"mabel-kang"},"content":"        Scanner contents \u003d new Scanner(this.localFile);"},{"lineNumber":154,"author":{"gitId":"mabel-kang"},"content":"        File temp \u003d new File(\"data/temp.txt\");"},{"lineNumber":155,"author":{"gitId":"mabel-kang"},"content":"        temp.createNewFile();"},{"lineNumber":156,"author":{"gitId":"mabel-kang"},"content":"        FileWriter tempFile \u003d new FileWriter(temp, true);"},{"lineNumber":157,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":158,"author":{"gitId":"mabel-kang"},"content":"        while (contents.hasNext()) {"},{"lineNumber":159,"author":{"gitId":"mabel-kang"},"content":"            String data \u003d contents.nextLine();"},{"lineNumber":160,"author":{"gitId":"mabel-kang"},"content":"            if (!data.equals(task.toString())) {"},{"lineNumber":161,"author":{"gitId":"mabel-kang"},"content":"                tempFile.write(data + \"\\n\");"},{"lineNumber":162,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":165,"author":{"gitId":"mabel-kang"},"content":"        tempFile.close();"},{"lineNumber":166,"author":{"gitId":"mabel-kang"},"content":"        copyFile(temp, localFile);"},{"lineNumber":167,"author":{"gitId":"mabel-kang"},"content":"        temp.delete();"},{"lineNumber":168,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":170,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"mabel-kang"},"content":"     * Marks a task in the file as completed."},{"lineNumber":172,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":173,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task to be marked as completed."},{"lineNumber":174,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error."},{"lineNumber":175,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"mabel-kang"},"content":"    public void markTask(Task task) throws IOException {"},{"lineNumber":177,"author":{"gitId":"mabel-kang"},"content":"        File temp \u003d new File(\"data/temp.txt\");"},{"lineNumber":178,"author":{"gitId":"mabel-kang"},"content":"        temp.createNewFile();"},{"lineNumber":179,"author":{"gitId":"mabel-kang"},"content":"        FileWriter tempFile \u003d new FileWriter(temp, true);"},{"lineNumber":180,"author":{"gitId":"mabel-kang"},"content":"        Scanner contents \u003d new Scanner(this.localFile);"},{"lineNumber":181,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":182,"author":{"gitId":"mabel-kang"},"content":"        while (contents.hasNext()) {"},{"lineNumber":183,"author":{"gitId":"mabel-kang"},"content":"            String data \u003d contents.nextLine();"},{"lineNumber":184,"author":{"gitId":"mabel-kang"},"content":"            if (!data.equals(task.toString())) {"},{"lineNumber":185,"author":{"gitId":"mabel-kang"},"content":"                tempFile.write(data + \"\\n\");"},{"lineNumber":186,"author":{"gitId":"mabel-kang"},"content":"            } else {"},{"lineNumber":187,"author":{"gitId":"mabel-kang"},"content":"                task.setDone();"},{"lineNumber":188,"author":{"gitId":"mabel-kang"},"content":"                tempFile.write(task.toString() + \"\\n\");"},{"lineNumber":189,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":190,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":191,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":192,"author":{"gitId":"mabel-kang"},"content":"        tempFile.close();"},{"lineNumber":193,"author":{"gitId":"mabel-kang"},"content":"        copyFile(temp, localFile);"},{"lineNumber":194,"author":{"gitId":"mabel-kang"},"content":"        temp.delete();"},{"lineNumber":195,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":197,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":198,"author":{"gitId":"mabel-kang"},"content":"     * Adds a tag to a task."},{"lineNumber":199,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":200,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task with the new tag to be added."},{"lineNumber":201,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error."},{"lineNumber":202,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":203,"author":{"gitId":"mabel-kang"},"content":"    public void addTag(Task task, String tag) throws IOException {"},{"lineNumber":204,"author":{"gitId":"mabel-kang"},"content":"        File temp \u003d new File(\"data/temp.txt\");"},{"lineNumber":205,"author":{"gitId":"mabel-kang"},"content":"        temp.createNewFile();"},{"lineNumber":206,"author":{"gitId":"mabel-kang"},"content":"        FileWriter tempFile \u003d new FileWriter(temp, true);"},{"lineNumber":207,"author":{"gitId":"mabel-kang"},"content":"        Scanner contents \u003d new Scanner(this.localFile);"},{"lineNumber":208,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":209,"author":{"gitId":"mabel-kang"},"content":"        while (contents.hasNext()) {"},{"lineNumber":210,"author":{"gitId":"mabel-kang"},"content":"            String data \u003d contents.nextLine();"},{"lineNumber":211,"author":{"gitId":"mabel-kang"},"content":"            if (data.equals(task.toString())) {"},{"lineNumber":212,"author":{"gitId":"mabel-kang"},"content":"                tempFile.write(task.toString() + \"  #\" + tag + \"\\n\");"},{"lineNumber":213,"author":{"gitId":"mabel-kang"},"content":"                System.out.println(task.toString());"},{"lineNumber":214,"author":{"gitId":"mabel-kang"},"content":"            } else {"},{"lineNumber":215,"author":{"gitId":"mabel-kang"},"content":"                tempFile.write(data + \"\\n\");"},{"lineNumber":216,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":217,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":219,"author":{"gitId":"mabel-kang"},"content":"        tempFile.close();"},{"lineNumber":220,"author":{"gitId":"mabel-kang"},"content":"        copyFile(temp, localFile);"},{"lineNumber":221,"author":{"gitId":"mabel-kang"},"content":"        temp.delete();"},{"lineNumber":222,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":224,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":225,"author":{"gitId":"mabel-kang"},"content":"     * Copy the contents of one file into another."},{"lineNumber":226,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":227,"author":{"gitId":"mabel-kang"},"content":"     * @param input File containing the contents to be copied."},{"lineNumber":228,"author":{"gitId":"mabel-kang"},"content":"     * @param output File where the contents are to be copied into."},{"lineNumber":229,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error."},{"lineNumber":230,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":231,"author":{"gitId":"mabel-kang"},"content":"    public void copyFile(File input, File output) throws IOException {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // @@author mabel-kang-reused"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/questions/35787039/copy-file-in-java-using-filestream with minor"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        // modifications."},{"lineNumber":235,"author":{"gitId":"-"},"content":"        FileInputStream in \u003d new FileInputStream(input);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        FileOutputStream out \u003d new FileOutputStream(output);"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        byte[] data \u003d new byte[1024];"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        int len \u003d in.read(data);"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"        while (len !\u003d -1) {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            out.write(data, 0, len);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            len \u003d in.read(data);"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"        in.close();"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        out.close();"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"mabel-kang":231,"-":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":" * Represents a Task input by users."},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":" * A Task is represented by a name in the form of a string"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":" * and a boolean to determine if it has been completed."},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"    protected String name;"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    protected String tag;"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    protected boolean isDone;"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    protected boolean isThereTag;"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"     * Creates a new instance of a Task."},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"     * @param name Description of task."},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    public Task(String name) {"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"        this.name \u003d name;"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"        this.isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"        this.isThereTag \u003d false;"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + this.name;"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"    public void setDone() {"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"        this.isDone \u003d true;"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"    public void setTag(String tag) {"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"        this.isThereTag \u003d true;"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"        this.tag \u003d tag;"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"    public String getTag() {"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"        return \"#\" + this.tag;"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"    public String getName() {"},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"        return this.name;"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":45}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":" * Represents a list of tasks for a user."},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" * A TaskList also handles operations for the tasks in the list."},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    protected List\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"     * Creates a TaskList."},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"     * @param tasks Tasks to be added into the TaskList."},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"     * Adds a task to the task list."},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task to be added."},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"    public void add(Task task) {"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"        assert task !\u003d null;"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"        tasks.add(task);"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"     * Deletes a task from the task list."},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"     * @param taskNumber Task number of the task that is to be deleted."},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"    public void delete(int taskNumber) {"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"        assert tasks.size() \u003e 0;"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"        assert taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c tasks.size();"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"        tasks.remove(taskNumber);"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"     * Lists out all the tasks in the task list."},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"     * @return A string consisting of all the tasks."},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"    public String list() {"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"        String output \u003d \"\";"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"            output \u003d output + \"\\n\" + (i + 1) + \".\" + tasks.get(i).toString();"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"        return output;"},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"     * Returns a Task, based on the task number specified by users."},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"     * @param taskNumber Task number of selected task."},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"     * @return Task."},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":"    public Task find(int taskNumber) {"},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"        assert taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c tasks.size();"},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"        return tasks.get(taskNumber);"},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"mabel-kang"},"content":"     * Returns the number of tasks in the task list."},{"lineNumber":66,"author":{"gitId":"mabel-kang"},"content":"     * @return Number of tasks."},{"lineNumber":67,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"mabel-kang"},"content":"    public int getSize() {"},{"lineNumber":69,"author":{"gitId":"mabel-kang"},"content":"        return tasks.size();"},{"lineNumber":70,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":72,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":72}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":" * Represents a task of type ToDo."},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":" * A ToDo is represented by a name in the form of a string."},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"public class ToDo extends Task {"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"     * Creates a new ToDo."},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"     * @param name Description of Todo."},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    public ToDo(String name) {"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"        super(name);"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        return \"[T]\" + super.toString() + (isThereTag ? \" \" + getTag() : \"\");"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":20}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":" * Ui handles the interactions with the user."},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"    protected static final int EMPTY_LIST \u003d 0;"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"    protected static final int SINGLE_TASK_IN_LIST \u003d 1;"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"     * Prints the response depending on whether the list has 1 or more than 1 task."},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"     * @param taskListSize Number of tasks in the list."},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"     * @return A String depending on whether there is 1 task or more than 1 task."},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    public String printResponse(int taskListSize) {"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"        assert taskListSize \u003e\u003d 0;"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"        if (taskListSize \u003d\u003d SINGLE_TASK_IN_LIST) {"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"            return \"task\";"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"            return \"tasks\";"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"     * Creates the response after successfully adding a task."},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task that was added."},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"     * @param taskListSize Number of tasks in the TaskList."},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"     * @return A string including the acknowledgement of the new task, and the total"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"     * number of tasks in the list."},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"    public String respondToAddTask(Task task, int taskListSize) {"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"        assert task !\u003d null;"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"        return \"Done! One new task:\\n\" + task.toString() + \"\\nNow you have \""},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"                 + taskListSize + \" \" + printResponse(taskListSize) + \" in the list\";"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"     * Creates the response after successfully deleting the task."},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task that was deleted."},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"     * @param taskListSize Number of tasks in the TaskList."},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"     * @return A string including the deletion of the task, and the total"},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"     * number of tasks in the list."},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"    public String respondToDelete(Task task, int taskListSize) {"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"        assert taskListSize \u003e\u003d 0;"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"        return \"Noted, I\u0027ve removed this task:\\n\" + task.toString()"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"                 + \"\\nNow you have \" + taskListSize + \" \" + printResponse(taskListSize) + \" in \" + \"the list\";"},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":"     * Creates the response after user inputs \u0027bye\u0027."},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"     * @return A string."},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"    public String respondToBye() {"},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"     * Creates the initial response to the \u0027list\u0027 command, depending on whether"},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":"     * the TaskList is empty."},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":"     * @param taskListSize Number of tasks in the TaskList."},{"lineNumber":65,"author":{"gitId":"mabel-kang"},"content":"     * @return A string, depending on whether the list is empty."},{"lineNumber":66,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"mabel-kang"},"content":"    public String respondToList(int taskListSize) {"},{"lineNumber":68,"author":{"gitId":"mabel-kang"},"content":"        assert taskListSize \u003e\u003d 0;"},{"lineNumber":69,"author":{"gitId":"mabel-kang"},"content":"        if (taskListSize !\u003d EMPTY_LIST) {"},{"lineNumber":70,"author":{"gitId":"mabel-kang"},"content":"            return \"Here are the tasks in your list:\";"},{"lineNumber":71,"author":{"gitId":"mabel-kang"},"content":"        } else {"},{"lineNumber":72,"author":{"gitId":"mabel-kang"},"content":"            return \"Your list is currently empty! Let\u0027s start adding tasks!\";"},{"lineNumber":73,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":76,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"mabel-kang"},"content":"     * Creates the response after marking a task as completed."},{"lineNumber":78,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task that was marked completed."},{"lineNumber":80,"author":{"gitId":"mabel-kang"},"content":"     * @return A string."},{"lineNumber":81,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"mabel-kang"},"content":"    public String respondToDone(Task task) {"},{"lineNumber":83,"author":{"gitId":"mabel-kang"},"content":"        assert task !\u003d null;"},{"lineNumber":84,"author":{"gitId":"mabel-kang"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString();"},{"lineNumber":85,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":87,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"mabel-kang"},"content":"     * Creates the response after successfully finding matching tasks."},{"lineNumber":89,"author":{"gitId":"mabel-kang"},"content":"     * @return A string."},{"lineNumber":90,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"mabel-kang"},"content":"    public String respondToFind() {"},{"lineNumber":92,"author":{"gitId":"mabel-kang"},"content":"        return \"Here are the matching tasks in your list:\";"},{"lineNumber":93,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":95,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"mabel-kang"},"content":"     * Creates the response after being unable to find any matching tasks."},{"lineNumber":97,"author":{"gitId":"mabel-kang"},"content":"     * @return A string."},{"lineNumber":98,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"mabel-kang"},"content":"    public String respondToNoMatches() {"},{"lineNumber":100,"author":{"gitId":"mabel-kang"},"content":"        return \"There are no matching tasks! Time to add one!\";"},{"lineNumber":101,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":103,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"mabel-kang"},"content":"     * Creates a response after tagging a task."},{"lineNumber":105,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task that was tagged."},{"lineNumber":107,"author":{"gitId":"mabel-kang"},"content":"     * @return A String."},{"lineNumber":108,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"mabel-kang"},"content":"    public String respondToTag(Task task) {"},{"lineNumber":110,"author":{"gitId":"mabel-kang"},"content":"        return task.getName() + \" is now tagged as \" + task.getTag();"},{"lineNumber":111,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":113,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"mabel-kang"},"content":"     * Creates a response after a \"help\" command."},{"lineNumber":115,"author":{"gitId":"mabel-kang"},"content":"     * @return A String."},{"lineNumber":116,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"mabel-kang"},"content":"    public String respondToHelp() {"},{"lineNumber":118,"author":{"gitId":"mabel-kang"},"content":"        return \"Refer to the user guide: https://mabel-kang.github.io/ip/\";"},{"lineNumber":119,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":121,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":121}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\"  xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    \u003cpadding\u003e"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    \u003c/padding\u003e"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"mabel-kang":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"         \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"         \u003c/padding\u003e\u003c/TextField\u003e"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"            \u003ccontent\u003e"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"402.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"            \u003c/content\u003e"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"    \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"mabel-kang":23}},{"path":"src/test/java/DateTimeHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"public class DateTimeHandlerTest {"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    static final String FORMAT \u003d \"yyyy-MM-dd HHmm\";"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    public void parseLocalDateTimeIntoString_validLocalDateTimeObject_success() {"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"        String details \u003d \"2021-02-19 2359\";"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(FORMAT);"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"        LocalDateTime object \u003d LocalDateTime.parse(details, format);"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        String expected \u003d \"Feb 19 2021 11:59 PM\";"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"        assertEquals(expected, DateTimeHandler.parseLocalDateTimeIntoString(object));"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":21}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"public class ParserTest {"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    private Storage storage \u003d new Storage(\"data/test.txt\");"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    private Ui ui \u003d new Ui();"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    private TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    private Parser parser;"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    public void handleCommand_deadlineCreation_success() {"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"        parser \u003d new Parser(storage, tasks, ui);"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"        String command \u003d \"deadline project /by 2021-02-19 2359\";"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        String expectedResponse \u003d \"Done! One new task:\\n\""},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"                + \"[D][ ] project (by: Feb 19 2021 11:59 PM) \\n\""},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"                + \"Now you have 1 task in the list\";"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"        assertEquals(parser.handleCommand(command), expectedResponse);"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":23}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"public class UiTest {"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"    public void respondToList_taskSizeZero_success() {"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"        String response \u003d ui.respondToList(0);"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"        assertEquals(\"Your list is currently empty! Let\u0027s start adding tasks!\", response);"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"list"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"todo"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"hello"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"list"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"bye"}],"authorContributionMap":{"mabel-kang":9}}]
