[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"    mainClassName \u003d \"Duke\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"mabel-kang":1,"-":45}},{"path":"src/main/java/DateValidation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":" * Handles the validation of dates for Deadlines."},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"public class DateValidation {"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"     * Checks if the input is in the correct format of \"yyyy-mm-dd\"."},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"     * @param date Input to be checked."},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"     * @return A LocalDate object created from the input."},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On invalid input. Input format is wrong."},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    public static LocalDate handleDate(String date) throws DukeException {"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"        LocalDate verifiedDate \u003d null;"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"            verifiedDate \u003d LocalDate.parse(date);"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"            return verifiedDate;"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"            throw new DukeException(\":( Date format is invalid! Please enter in yyyy-mm-dd format!\");"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"     * Creates a LocalDate object from a string."},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"     * @param date String that is used to create a LocalDate object."},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"     * @return A LocalDate object created."},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"    public LocalDate convertDate(String date) {"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"        LocalDate createDate \u003d LocalDate.parse(date, format);"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"        return createDate;"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":38}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" * Represents a task of type Deadline."},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":" * A Deadline is represented by a name in the form of a String,"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":" * and the date by which the task should be completed, in the form"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":" * of a LocalDate."},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"public class Deadline extends Task{"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    protected LocalDate by;"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    public Deadline(String name, LocalDate by) {"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"        super(name);"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"        this.by \u003d by;"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"     * Parses the date in the format of \"MMM dd yyyy\"."},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"     * @param date Date to be parsed."},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"     * @return A String representing the date in the new format."},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"    public String parseDate(LocalDate date) {"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + parseDate(by) + \")\";"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":34}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"    private Storage storage;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"    private TaskList tasks;"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"    private Ui ui;"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    public Duke() {"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"        ui \u003d new Ui();"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"        storage.checkFileExistence();"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"        tasks \u003d new TaskList(storage.loadTasks());"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"     * Initializes the app."},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    public void run() {"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"        ui.showWelcome();"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"        Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"        Parser parser \u003d new Parser(storage,tasks,ui);"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"        while (true) {"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"            String command \u003d scan.nextLine();"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"            parser.handleCommand(command);"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"            if (command.equals(\"bye\")) {"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"                break;"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"        new Duke().run();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"mabel-kang":31,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"    DukeException(String s) {"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"        super(s);"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":" * Represents a task of type Event."},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":" * An Event is represented by a name and time of the event,"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":" * both in the form of a String."},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"    protected String time;"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    public Event(String name, String time) {"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"        super(name);"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"        this.time \u003d time;"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":19}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" * Parser handles the user commands."},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    protected Storage storage;"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    protected TaskList tasks;"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    protected Ui ui;"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    protected String command;"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    protected int index;"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    protected int findSlash;"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    protected int taskIdentifier;"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"    public Parser(Storage storage, TaskList tasks, Ui ui) {"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        this.storage \u003d storage;"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"        this.ui \u003d ui;"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"     * Handles the ToDo command."},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error when adding the ToDo task"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"     * to the file in the hard disk."},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"    public void handleToDo() throws IOException {"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"        String descriptionTask \u003d command.substring(index + 1);"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"        ToDo newToDo \u003d new ToDo(descriptionTask);"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"        tasks.add(newToDo);"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"        storage.addTask(newToDo);"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"        ui.responseToAddTask(newToDo, tasks.getSize());"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"     * Handles the Deadline command."},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"    public void handleDeadline() {"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"            Validation.checkForSchedule(command, findSlash);"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"            String descriptionDeadline \u003d command.substring(index + 1, findSlash - 1);"},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"            LocalDate date \u003d DateValidation.handleDate(command.substring(findSlash + 4));"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"            Deadline newDeadline \u003d new Deadline(descriptionDeadline, date);"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"            tasks.add(newDeadline);"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"            storage.addTask(newDeadline);"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"            ui.responseToAddTask(newDeadline, tasks.getSize());"},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"        } catch (DukeException | IOException e) {"},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"            System.out.println(e);"},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"     * Handles the Event command."},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":"    public void handleEvent() {"},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"            Validation.checkForSchedule(command, findSlash);"},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":"            String descriptionEvent \u003d command.substring(index + 1, findSlash - 1);"},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":"            String time \u003d command.substring(findSlash + 4);"},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":"            Event newEvent \u003d new Event(descriptionEvent, time);"},{"lineNumber":65,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":66,"author":{"gitId":"mabel-kang"},"content":"            tasks.add(newEvent);"},{"lineNumber":67,"author":{"gitId":"mabel-kang"},"content":"            storage.addTask(newEvent);"},{"lineNumber":68,"author":{"gitId":"mabel-kang"},"content":"            ui.responseToAddTask(newEvent, tasks.getSize());"},{"lineNumber":69,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":70,"author":{"gitId":"mabel-kang"},"content":"        } catch (DukeException | IOException e) {"},{"lineNumber":71,"author":{"gitId":"mabel-kang"},"content":"            System.out.println(e);"},{"lineNumber":72,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":75,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"mabel-kang"},"content":"     * Handles the Done command."},{"lineNumber":77,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"mabel-kang"},"content":"    public void handleDone() {"},{"lineNumber":79,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":80,"author":{"gitId":"mabel-kang"},"content":"            taskIdentifier \u003d Integer.parseInt(command.substring(index + 1));"},{"lineNumber":81,"author":{"gitId":"mabel-kang"},"content":"            Validation.checkValidRange(tasks.getSize(), taskIdentifier);"},{"lineNumber":82,"author":{"gitId":"mabel-kang"},"content":"            Task toMark \u003d tasks.find(taskIdentifier - 1);"},{"lineNumber":83,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":84,"author":{"gitId":"mabel-kang"},"content":"            storage.markTask(toMark);"},{"lineNumber":85,"author":{"gitId":"mabel-kang"},"content":"            ui.responseToDone(toMark);"},{"lineNumber":86,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":87,"author":{"gitId":"mabel-kang"},"content":"        } catch (DukeException | IOException e) {"},{"lineNumber":88,"author":{"gitId":"mabel-kang"},"content":"            System.out.println(e);"},{"lineNumber":89,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":92,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"mabel-kang"},"content":"     * Handles the Delete command."},{"lineNumber":94,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"mabel-kang"},"content":"    public void handleDelete() {"},{"lineNumber":96,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":97,"author":{"gitId":"mabel-kang"},"content":"            taskIdentifier \u003d Integer.parseInt(command.substring(index + 1));"},{"lineNumber":98,"author":{"gitId":"mabel-kang"},"content":"            Validation.checkValidRange(tasks.getSize(), taskIdentifier);"},{"lineNumber":99,"author":{"gitId":"mabel-kang"},"content":"            Task selected \u003d tasks.find(taskIdentifier - 1);"},{"lineNumber":100,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":101,"author":{"gitId":"mabel-kang"},"content":"            tasks.delete(taskIdentifier - 1);"},{"lineNumber":102,"author":{"gitId":"mabel-kang"},"content":"            storage.deleteTask(selected);"},{"lineNumber":103,"author":{"gitId":"mabel-kang"},"content":"            ui.responseToDelete(selected, tasks.getSize());"},{"lineNumber":104,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":105,"author":{"gitId":"mabel-kang"},"content":"        } catch (DukeException | IOException e) {"},{"lineNumber":106,"author":{"gitId":"mabel-kang"},"content":"            System.out.println(e);"},{"lineNumber":107,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":110,"author":{"gitId":"mabel-kang"},"content":"    public void handleFind(){"},{"lineNumber":111,"author":{"gitId":"mabel-kang"},"content":"        String keyword \u003d command.substring(index + 1);"},{"lineNumber":112,"author":{"gitId":"mabel-kang"},"content":"        tasks.findWithKeyword(keyword);"},{"lineNumber":113,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":115,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"mabel-kang"},"content":"     * Main method to make sense of the user command and to determine"},{"lineNumber":117,"author":{"gitId":"mabel-kang"},"content":"     * which command it is."},{"lineNumber":118,"author":{"gitId":"mabel-kang"},"content":"     * @param command User\u0027s command input."},{"lineNumber":119,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"mabel-kang"},"content":"    public void handleCommand(String command) {"},{"lineNumber":121,"author":{"gitId":"mabel-kang"},"content":"        this.command \u003d command;"},{"lineNumber":122,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":123,"author":{"gitId":"mabel-kang"},"content":"            Validation.checkValidCommand(command);"},{"lineNumber":124,"author":{"gitId":"mabel-kang"},"content":"            index \u003d command.indexOf(\u0027 \u0027);"},{"lineNumber":125,"author":{"gitId":"mabel-kang"},"content":"            findSlash \u003d command.indexOf(\u0027/\u0027);"},{"lineNumber":126,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":127,"author":{"gitId":"mabel-kang"},"content":"            if (index \u003e -1) {"},{"lineNumber":128,"author":{"gitId":"mabel-kang"},"content":"                String type \u003d command.substring(0, index);"},{"lineNumber":129,"author":{"gitId":"mabel-kang"},"content":"                switch (type) {"},{"lineNumber":130,"author":{"gitId":"mabel-kang"},"content":"                case \"todo\":"},{"lineNumber":131,"author":{"gitId":"mabel-kang"},"content":"                    handleToDo();"},{"lineNumber":132,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":133,"author":{"gitId":"mabel-kang"},"content":"                case \"deadline\":"},{"lineNumber":134,"author":{"gitId":"mabel-kang"},"content":"                    handleDeadline();"},{"lineNumber":135,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":136,"author":{"gitId":"mabel-kang"},"content":"                case \"event\":"},{"lineNumber":137,"author":{"gitId":"mabel-kang"},"content":"                    handleEvent();"},{"lineNumber":138,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":139,"author":{"gitId":"mabel-kang"},"content":"                case \"done\":"},{"lineNumber":140,"author":{"gitId":"mabel-kang"},"content":"                    handleDone();"},{"lineNumber":141,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":142,"author":{"gitId":"mabel-kang"},"content":"                case \"delete\":"},{"lineNumber":143,"author":{"gitId":"mabel-kang"},"content":"                    handleDelete();"},{"lineNumber":144,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":145,"author":{"gitId":"mabel-kang"},"content":"                case \"find\":"},{"lineNumber":146,"author":{"gitId":"mabel-kang"},"content":"                    handleFind();"},{"lineNumber":147,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":148,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":149,"author":{"gitId":"mabel-kang"},"content":"            } else {"},{"lineNumber":150,"author":{"gitId":"mabel-kang"},"content":"                switch (command) {"},{"lineNumber":151,"author":{"gitId":"mabel-kang"},"content":"                case \"bye\":"},{"lineNumber":152,"author":{"gitId":"mabel-kang"},"content":"                    ui.responseToBye();"},{"lineNumber":153,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":154,"author":{"gitId":"mabel-kang"},"content":"                case \"list\":"},{"lineNumber":155,"author":{"gitId":"mabel-kang"},"content":"                    ui.responseToList(tasks.getSize());"},{"lineNumber":156,"author":{"gitId":"mabel-kang"},"content":"                    tasks.list();"},{"lineNumber":157,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":158,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":159,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":160,"author":{"gitId":"mabel-kang"},"content":"        } catch (DukeException | IOException e) {"},{"lineNumber":161,"author":{"gitId":"mabel-kang"},"content":"            System.out.println(e);"},{"lineNumber":162,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":165,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":166,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":167,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":167}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"import java.io.FileInputStream;"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"import java.io.FileOutputStream;"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":" * Storage handles the loading of tasks from the file and making changes"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":" * to the file based on user commands."},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"public class Storage {"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    protected String path;"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"    protected File localFile;"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    protected boolean isFileOriginallyPresent;"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"    protected DateValidation validate;"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"    public Storage(String path) {"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"        this.path \u003d path;"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"        this.localFile \u003d new File(path);"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"        this.isFileOriginallyPresent \u003d true;"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"        this.validate \u003d new DateValidation();"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"     * Checks if directory and file exists and if they do not exist, create them."},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"    public void checkFileExistence() {"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"        File directory \u003d new File(\"data\");"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"        if (!directory.isDirectory()) {"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"            directory.mkdir();"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"        if (!localFile.exists()) {"},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"            try {"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"                this.isFileOriginallyPresent \u003d false;"},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"                localFile.createNewFile();"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"            } catch (IOException e) {"},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"                System.out.println(e);"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"     * Adds a task to the file."},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task to be added."},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error."},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"    public void addTask(Task task) throws IOException {"},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"        FileWriter fw \u003d new FileWriter(this.localFile, true);"},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"        fw.write(task.toString() + \"\\n\");"},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"        fw.close();"},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"     * Load tasks into a list if the file exists on the hard disk."},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":"     * @return A list consisting of all the tasks if the file exists,"},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":"     * if not an empty list is returned."},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"mabel-kang"},"content":"    public List\u003cTask\u003e loadTasks() {"},{"lineNumber":66,"author":{"gitId":"mabel-kang"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":67,"author":{"gitId":"mabel-kang"},"content":"        if (this.isFileOriginallyPresent) {"},{"lineNumber":68,"author":{"gitId":"mabel-kang"},"content":"            Scanner contents \u003d null;"},{"lineNumber":69,"author":{"gitId":"mabel-kang"},"content":"            try {"},{"lineNumber":70,"author":{"gitId":"mabel-kang"},"content":"                contents \u003d new Scanner((this.localFile));"},{"lineNumber":71,"author":{"gitId":"mabel-kang"},"content":"            } catch (FileNotFoundException e) {"},{"lineNumber":72,"author":{"gitId":"mabel-kang"},"content":"                e.printStackTrace();"},{"lineNumber":73,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":75,"author":{"gitId":"mabel-kang"},"content":"            while (contents.hasNext()) {"},{"lineNumber":76,"author":{"gitId":"mabel-kang"},"content":"                String data \u003d contents.nextLine();"},{"lineNumber":77,"author":{"gitId":"mabel-kang"},"content":"                Character type \u003d data.charAt(1);"},{"lineNumber":78,"author":{"gitId":"mabel-kang"},"content":"                Character isDone \u003d data.charAt(4);"},{"lineNumber":79,"author":{"gitId":"mabel-kang"},"content":"                int startingIndex \u003d data.indexOf(\u0027(\u0027);"},{"lineNumber":80,"author":{"gitId":"mabel-kang"},"content":"                int endingIndex \u003d data.indexOf(\u0027)\u0027);"},{"lineNumber":81,"author":{"gitId":"mabel-kang"},"content":"                switch (type) {"},{"lineNumber":82,"author":{"gitId":"mabel-kang"},"content":"                case \u0027T\u0027:"},{"lineNumber":83,"author":{"gitId":"mabel-kang"},"content":"                    String todoDescription \u003d data.substring(7);"},{"lineNumber":84,"author":{"gitId":"mabel-kang"},"content":"                    ToDo todo \u003d new ToDo(todoDescription);"},{"lineNumber":85,"author":{"gitId":"mabel-kang"},"content":"                    if (isDone \u003d\u003d \u0027X\u0027) {"},{"lineNumber":86,"author":{"gitId":"mabel-kang"},"content":"                        todo.setDone();"},{"lineNumber":87,"author":{"gitId":"mabel-kang"},"content":"                    }"},{"lineNumber":88,"author":{"gitId":"mabel-kang"},"content":"                    tasks.add(todo);"},{"lineNumber":89,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":90,"author":{"gitId":"mabel-kang"},"content":"                case \u0027D\u0027:"},{"lineNumber":91,"author":{"gitId":"mabel-kang"},"content":"                    String deadlineDescription \u003d data.substring(7, startingIndex - 1);"},{"lineNumber":92,"author":{"gitId":"mabel-kang"},"content":"                    String by \u003d data.substring(startingIndex + 5, endingIndex);"},{"lineNumber":93,"author":{"gitId":"mabel-kang"},"content":"                    Deadline deadline \u003d new Deadline(deadlineDescription, validate.convertDate(by));"},{"lineNumber":94,"author":{"gitId":"mabel-kang"},"content":"                    if (isDone \u003d\u003d \u0027X\u0027) {"},{"lineNumber":95,"author":{"gitId":"mabel-kang"},"content":"                        deadline.setDone();"},{"lineNumber":96,"author":{"gitId":"mabel-kang"},"content":"                    }"},{"lineNumber":97,"author":{"gitId":"mabel-kang"},"content":"                    tasks.add(deadline);"},{"lineNumber":98,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":99,"author":{"gitId":"mabel-kang"},"content":"                case \u0027E\u0027:"},{"lineNumber":100,"author":{"gitId":"mabel-kang"},"content":"                    String eventDescription \u003d data.substring(9, startingIndex - 1);"},{"lineNumber":101,"author":{"gitId":"mabel-kang"},"content":"                    String time \u003d data.substring(startingIndex + 5, endingIndex);"},{"lineNumber":102,"author":{"gitId":"mabel-kang"},"content":"                    Event event \u003d new Event(eventDescription, time);"},{"lineNumber":103,"author":{"gitId":"mabel-kang"},"content":"                    if (isDone \u003d\u003d \u0027X\u0027) {"},{"lineNumber":104,"author":{"gitId":"mabel-kang"},"content":"                        event.setDone();"},{"lineNumber":105,"author":{"gitId":"mabel-kang"},"content":"                    }"},{"lineNumber":106,"author":{"gitId":"mabel-kang"},"content":"                    tasks.add(event);"},{"lineNumber":107,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":108,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":109,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"mabel-kang"},"content":"        return tasks;"},{"lineNumber":112,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":114,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"mabel-kang"},"content":"     * Deletes a task from the file."},{"lineNumber":116,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task to be deleted."},{"lineNumber":117,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error."},{"lineNumber":118,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"mabel-kang"},"content":"    public void deleteTask(Task task) throws IOException {"},{"lineNumber":120,"author":{"gitId":"mabel-kang"},"content":"        Scanner contents \u003d new Scanner(this.localFile);"},{"lineNumber":121,"author":{"gitId":"mabel-kang"},"content":"        File temp \u003d new File(\"data/temp.txt\");"},{"lineNumber":122,"author":{"gitId":"mabel-kang"},"content":"        temp.createNewFile();"},{"lineNumber":123,"author":{"gitId":"mabel-kang"},"content":"        FileWriter tempFile \u003d new FileWriter(temp, true);"},{"lineNumber":124,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":125,"author":{"gitId":"mabel-kang"},"content":"        while (contents.hasNext()) {"},{"lineNumber":126,"author":{"gitId":"mabel-kang"},"content":"            String data \u003d contents.nextLine();"},{"lineNumber":127,"author":{"gitId":"mabel-kang"},"content":"            if (!data.equals(task.toString())) {"},{"lineNumber":128,"author":{"gitId":"mabel-kang"},"content":"                tempFile.write(data + \"\\n\");"},{"lineNumber":129,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":132,"author":{"gitId":"mabel-kang"},"content":"        tempFile.close();"},{"lineNumber":133,"author":{"gitId":"mabel-kang"},"content":"        copyFile(temp,localFile);"},{"lineNumber":134,"author":{"gitId":"mabel-kang"},"content":"        temp.delete();"},{"lineNumber":135,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":137,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"mabel-kang"},"content":"     * Marks a task in the file as completed."},{"lineNumber":139,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task to be marked as completed."},{"lineNumber":140,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error."},{"lineNumber":141,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"mabel-kang"},"content":"    public void markTask(Task task) throws IOException {"},{"lineNumber":143,"author":{"gitId":"mabel-kang"},"content":"        File temp \u003d new File(\"data/temp.txt\");"},{"lineNumber":144,"author":{"gitId":"mabel-kang"},"content":"        temp.createNewFile();"},{"lineNumber":145,"author":{"gitId":"mabel-kang"},"content":"        FileWriter tempFile \u003d new FileWriter(temp, true);"},{"lineNumber":146,"author":{"gitId":"mabel-kang"},"content":"        Scanner contents \u003d new Scanner(this.localFile);"},{"lineNumber":147,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":148,"author":{"gitId":"mabel-kang"},"content":"        while (contents.hasNext()) {"},{"lineNumber":149,"author":{"gitId":"mabel-kang"},"content":"            String data \u003d contents.nextLine();"},{"lineNumber":150,"author":{"gitId":"mabel-kang"},"content":"            if (!data.equals(task.toString())) {"},{"lineNumber":151,"author":{"gitId":"mabel-kang"},"content":"                tempFile.write(data + \"\\n\");"},{"lineNumber":152,"author":{"gitId":"mabel-kang"},"content":"            } else {"},{"lineNumber":153,"author":{"gitId":"mabel-kang"},"content":"                task.setDone();"},{"lineNumber":154,"author":{"gitId":"mabel-kang"},"content":"                tempFile.write(task.toString() + \"\\n\");"},{"lineNumber":155,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":156,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":158,"author":{"gitId":"mabel-kang"},"content":"        tempFile.close();"},{"lineNumber":159,"author":{"gitId":"mabel-kang"},"content":"        copyFile(temp, localFile);"},{"lineNumber":160,"author":{"gitId":"mabel-kang"},"content":"        temp.delete();"},{"lineNumber":161,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":163,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"mabel-kang"},"content":"     * Copy the contents of one file into another."},{"lineNumber":165,"author":{"gitId":"mabel-kang"},"content":"     * @param input File containing the contents to be copied."},{"lineNumber":166,"author":{"gitId":"mabel-kang"},"content":"     * @param output File where the contents are to be copied into."},{"lineNumber":167,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error."},{"lineNumber":168,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"mabel-kang"},"content":"    public void copyFile(File input, File output) throws IOException {"},{"lineNumber":170,"author":{"gitId":"mabel-kang"},"content":"        FileInputStream in \u003d new FileInputStream(input);"},{"lineNumber":171,"author":{"gitId":"mabel-kang"},"content":"        FileOutputStream out \u003d new FileOutputStream(output);"},{"lineNumber":172,"author":{"gitId":"mabel-kang"},"content":"        byte[] data \u003d new byte[1024];"},{"lineNumber":173,"author":{"gitId":"mabel-kang"},"content":"        int len \u003d in.read(data);"},{"lineNumber":174,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":175,"author":{"gitId":"mabel-kang"},"content":"        while (len !\u003d -1) {"},{"lineNumber":176,"author":{"gitId":"mabel-kang"},"content":"            out.write(data, 0, len);"},{"lineNumber":177,"author":{"gitId":"mabel-kang"},"content":"            len \u003d in.read(data);"},{"lineNumber":178,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":180,"author":{"gitId":"mabel-kang"},"content":"        in.close();"},{"lineNumber":181,"author":{"gitId":"mabel-kang"},"content":"        out.close();"},{"lineNumber":182,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":183}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":" * Represents a Task input by users."},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":" * A Task is represented by a name in the form of a string"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":" * and a boolean to determine if it has been completed."},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"    protected String name;"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    public Task(String name) {"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"        this.name \u003d name;"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"        this.isDone \u003d false;"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + this.name;"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"    public void setDone() {"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"        this.isDone \u003d true;"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":24}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":" * Represents a list of tasks for a user."},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" * A TaskList also handles operations for the tasks in the list."},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    protected List\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    public TaskList(List\u003cTask\u003e tasks){"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"     * Adds a task to the task list."},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task to be added."},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    public void add(Task task) {"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"        tasks.add(task);"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"     * Deletes a task from the task list."},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"     * @param taskNumber Task number of the task that is to be deleted."},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"    public void delete(int taskNumber) {"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"        tasks.remove(taskNumber);"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"     * Prints out all the tasks in the task list."},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"    public void list() {"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i).toString());"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"     * Returns a Task, based on the task number specified by users."},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"     * @param taskNumber Task number of selected task."},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"     * @return Task."},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"    public Task find(int taskNumber) {"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"        return tasks.get(taskNumber);"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"    public void findWithKeyword(String keyword) {"},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"        int numberOfMatches \u003d 0;"},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"        int tracker \u003d 0;"},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":"            String task \u003d tasks.get(i).toString();"},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"            boolean isPresent \u003d task.toLowerCase().contains(keyword.toLowerCase());"},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"            if (isPresent) {"},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"                if (tracker \u003d\u003d 0) {"},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"                    Ui.responseToFind();"},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"                    tracker++;"},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"                System.out.println(task);"},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"                numberOfMatches++;"},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":"        if (numberOfMatches \u003d\u003d 0) {"},{"lineNumber":65,"author":{"gitId":"mabel-kang"},"content":"            Ui.responseToNoMatches();"},{"lineNumber":66,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":69,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"mabel-kang"},"content":"     * Returns the number of tasks in the task list."},{"lineNumber":71,"author":{"gitId":"mabel-kang"},"content":"     * @return Number of tasks."},{"lineNumber":72,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"mabel-kang"},"content":"    public int getSize() {"},{"lineNumber":74,"author":{"gitId":"mabel-kang"},"content":"        return tasks.size();"},{"lineNumber":75,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":77,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":77}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":" * Represents a task of type ToDo."},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":" * A ToDo is represented by a name in the form of a string."},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"public class ToDo extends Task {"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"    public ToDo(String name) {"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"        super(name);"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"        return \"[T]\" +  super.toString();"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":15}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":" * Ui handles the interactions with the user."},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"     * Prints the welcome message for users when they run the app."},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    public void showWelcome() {"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I help you with today! :-)\");"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"     * Prints the response after successfully adding a task."},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task that was added."},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"     * @param taskListSize Number of tasks in the TaskList."},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"    public void responseToAddTask(Task task, int taskListSize) {"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"        System.out.println(\"Done! One new task:\\n\" + task.toString() + \"\\nNow you have \""},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"                 + taskListSize + ((taskListSize \u003d\u003d 1) ? \" task\" : \" tasks\") + \" in the list\");"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"     * Prints the response after successfully deleting a task."},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task that was deleted."},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"     * @param taskListSize Number of tasks in the TaskList."},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"    public void responseToDelete(Task task, int taskListSize) {"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"        System.out.println(\"Noted, I\u0027ve removed this task:\\n\" + task.toString()"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"                 + \"\\nNow you have \" + taskListSize + ((taskListSize \u003d\u003d 1) ? \" task\" : \" tasks\") + \" in the list\");"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"     * Prints the response after user inputs \u0027bye\u0027, before program exits."},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"    public void responseToBye() {"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"     * Prints the initial response to the \u0027list\u0027 command, depending on whether"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"     * the TaskList is empty."},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"     * @param taskListSize Number of tasks in the TaskList."},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"    public void responseToList(int taskListSize) {"},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"        if (taskListSize !\u003d 0) {"},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"            System.out.println(\"Your list is currently empty! Let\u0027s start adding tasks!\");"},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"     * Prints the response after marking a task as completed."},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task that was marked completed."},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":"    public void responseToDone(Task task) {"},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task.toString());"},{"lineNumber":65,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":67,"author":{"gitId":"mabel-kang"},"content":"    public static void responseToFind() {"},{"lineNumber":68,"author":{"gitId":"mabel-kang"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":69,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":71,"author":{"gitId":"mabel-kang"},"content":"    public static void responseToNoMatches() {"},{"lineNumber":72,"author":{"gitId":"mabel-kang"},"content":"        System.out.println(\"There are no matching tasks! Time to add one!\");"},{"lineNumber":73,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":75,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":76,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":76}},{"path":"src/main/java/Validation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.util.Arrays;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" * Validation handles the initial validation of the user command inputs."},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"public class Validation {"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"     * Checks if the user input is within the list of accepted commands."},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"     * @param command User\u0027s command input."},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On invalid input."},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    public static void checkValidCommand(String command) throws DukeException {"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"        String[] validCommands \u003d new String[] {\"todo\", \"deadline\", \"event\", \"list\", \"bye\", \"done\", \"delete\", \"find\"};"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"        List\u003cString\u003e commands \u003d Arrays.asList(validCommands);"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        int index \u003d command.indexOf(\u0027 \u0027);"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"        String first \u003d \"\";"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"        if (index \u003e -1) {"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"            first \u003d command.substring(0, index);"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"            first \u003d command;"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"        if(!commands.contains(first.toLowerCase())){"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"            throw new DukeException(\":( OOPS! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"            String[] secondValidation \u003d new String[] {\"todo\", \"deadline\", \"event\", \"done\", \"delete\", \"find\"};"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"            List\u003cString\u003e secondListOfCommands \u003d Arrays.asList(secondValidation);"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"            if (secondListOfCommands.contains(first.toLowerCase())) {"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"                if (index \u003c\u003d -1 || command.substring(index).isBlank()) {"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"                    throw new DukeException(\":( OOPS! The description of a todo/deadline/event/done/delete/find \" +"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"                            \"cannot be empty!!\");"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"     * Checks if the time/date input with Events/Deadlines are valid."},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"     * @param command User\u0027s command input."},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"     * @param findSlash Position of slash in the input."},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On invalid time/date input."},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"    public static void checkForSchedule(String command, int findSlash) throws DukeException {"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"        if ((findSlash \u003c\u003d -1) || command.endsWith(\"/\") || command.substring(findSlash + 1).isBlank()) {"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"            throw new DukeException(\":( OOPS! Please input a valid time/date\");"},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"     * Checks if task that user has identified exists."},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"     * @param taskSize Number of tasks in the TaskList."},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"     * @param chosenNumber The task number."},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On invalid input. Task does not exist."},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":"    public static void checkValidRange(int taskSize, int chosenNumber) throws DukeException {"},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"        if(chosenNumber \u003e taskSize) {"},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"            throw new DukeException(\":( OOPS! This task does not exist! Use \u0027list\u0027 to check your task numbers!\");"},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":64}},{"path":"src/test/java/DateValidationTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"public class DateValidationTest {"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    public void handleDate_invalidInput_exceptionThrown() {"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"        try{"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"            assertEquals(LocalDate.parse(\"2021-01-23\"),DateValidation.handleDate(\"23-01-2021\"));"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"            fail();"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"        } catch (DukeException e) {"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"            assertEquals(\":( Date format is invalid! Please enter in yyyy-mm-dd format!\","},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"                    e.getMessage());"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":22}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"public class DeadlineTest {"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    public void testDeadlineString() {"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"        assertEquals(\"[D][ ] read (by: Jan 28 2021)\", new Deadline(\"read\","},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"                LocalDate.parse(\"2021-01-28\")).toString());"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    public void testParseDate() {"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"        assertEquals(\"Jan 28 2021\", new Deadline(\"read\","},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"                LocalDate.parse(\"2021-01-28\")).parseDate(LocalDate.parse(\"2021-01-28\")));"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":20}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"import java.io.PrintStream;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"public class UiTest {"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    public void testResponseToList() {"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"         PrintStream out \u003d System.out;"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"         ByteArrayOutputStream content \u003d new ByteArrayOutputStream();"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"         System.setOut(new PrintStream(content));"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"         Ui ui \u003d new Ui();"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"         ui.responseToList(0);"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"         assertEquals(\"Your list is currently empty! Let\u0027s start adding tasks!\","},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"                 content.toString().trim());"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"         System.setOut(out);"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    "},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"list"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"todo"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"hello"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"list"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"bye"}],"authorContributionMap":{"mabel-kang":9}}]
