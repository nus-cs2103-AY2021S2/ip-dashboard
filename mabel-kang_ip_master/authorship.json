[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"    mainClassName \u003d \"Duke\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"mabel-kang":15,"-":45}},{"path":"src/main/java/DateValidation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":" * Handles the validation of dates for Deadlines."},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"public class DateValidation {"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"     * Checks if the input is in the correct format of \"yyyy-mm-dd\"."},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"     * @param date Input to be checked."},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"     * @return A LocalDate object created from the input."},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On invalid input. Input format is wrong."},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"    public static LocalDate handleDate(String date) throws DukeException {"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        LocalDate verifiedDate \u003d null;"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"            verifiedDate \u003d LocalDate.parse(date);"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"            return verifiedDate;"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"            throw new DukeException(\":( Date format is invalid! Please enter in yyyy-mm-dd format!\");"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"     * Creates a LocalDate object from a string."},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"     * @param date String that is used to create a LocalDate object."},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"     * @return A LocalDate object created."},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"    public LocalDate convertDate(String date) {"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"        LocalDate createDate \u003d LocalDate.parse(date, format);"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"        return createDate;"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":40}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" * Represents a task of type Deadline."},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":" * A Deadline is represented by a name in the form of a String,"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":" * and the date by which the task should be completed, in the form"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":" * of a LocalDate."},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"public class Deadline extends Task {"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    protected LocalDate by;"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"     * Creates a Deadline with the description and date by which the task should be completed."},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"     * @param name Description of the Deadline."},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"     * @param by The date by which the task should be completed."},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    public Deadline(String name, LocalDate by) {"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"        super(name);"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"        this.by \u003d by;"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"     * Parses the date in the format of \"MMM dd yyyy\"."},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"     * @param date Date to be parsed."},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"     * @return A String representing the date in the new format."},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"    public String parseDate(LocalDate date) {"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + parseDate(by) + \")\";"},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":41}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"    protected Parser parser;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"    private Storage storage;"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"    private TaskList tasks;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"    private Ui ui;"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"     * Creates a new instance of Duke."},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    public Duke() {"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"        ui \u003d new Ui();"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"        storage.checkFileExistence();"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"        tasks \u003d new TaskList(storage.loadTasks());"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"        parser \u003d new Parser(storage, tasks, ui);"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"mabel-kang":15,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"    DukeException(String s) {"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"        super(s);"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":" * Represents a task of type Event."},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":" * An Event is represented by a name and time of the event,"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":" * both in the form of a String."},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"    protected String time;"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"     * Creates a new Event with the description and time of event."},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"     * @param name Description of Event."},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"     * @param time Time of event."},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    public Event(String name, String time) {"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"        super(name);"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        this.time \u003d time;"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":25}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":7}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"            scene.getStylesheets().add(getClass().getResource(\"/view/stylesheet.css\").toExternalForm());"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    @FXML"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    private VBox dialogContainer;"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"    private TextField userInput;"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    private Button sendButton;"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    private Duke duke;"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"    public void initialize() {"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"        duke \u003d d;"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"    private void handleUserInput() {"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"        String response \u003d duke.parser.handleCommand(userInput.getText());"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"        );"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"        userInput.clear();"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":49}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" * Parser handles the user commands."},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    protected Storage storage;"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    protected TaskList tasks;"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    protected Ui ui;"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    protected String command;"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    protected int index;"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    protected int findSlash;"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    protected int taskIdentifier;"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"     * Creates a new instance of a Parser to make sense of user command."},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"     * @param storage Storage of tasks on hard disk."},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"     * @param tasks List of user\u0027s tasks."},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"     * @param ui Ui for user interaction."},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"    public Parser(Storage storage, TaskList tasks, Ui ui) {"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"        this.storage \u003d storage;"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"        this.ui \u003d ui;"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"     * Handles the ToDo command."},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error when adding the ToDo task"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"     * to the file in the hard disk."},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"    public String handleToDo() throws IOException {"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"        String descriptionTask \u003d command.substring(index + 1);"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"        ToDo newToDo \u003d new ToDo(descriptionTask);"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"        tasks.add(newToDo);"},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"        storage.addTask(newToDo);"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"        return ui.responseToAddTask(newToDo, tasks.getSize());"},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"     * Handles the Deadline command."},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"    public String handleDeadline() {"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"            Validation.checkForSchedule(command, findSlash);"},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"            String descriptionDeadline \u003d command.substring(index + 1, findSlash - 1);"},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"            LocalDate date \u003d DateValidation.handleDate(command.substring(findSlash + 4));"},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"            Deadline newDeadline \u003d new Deadline(descriptionDeadline, date);"},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"            tasks.add(newDeadline);"},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"            storage.addTask(newDeadline);"},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"            return ui.responseToAddTask(newDeadline, tasks.getSize());"},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"        } catch (DukeException | IOException e) {"},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":"            return e.toString();"},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":"     * Handles the Event command."},{"lineNumber":65,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"mabel-kang"},"content":"    public String handleEvent() {"},{"lineNumber":67,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"mabel-kang"},"content":"            Validation.checkForSchedule(command, findSlash);"},{"lineNumber":69,"author":{"gitId":"mabel-kang"},"content":"            String descriptionEvent \u003d command.substring(index + 1, findSlash - 1);"},{"lineNumber":70,"author":{"gitId":"mabel-kang"},"content":"            String time \u003d command.substring(findSlash + 4);"},{"lineNumber":71,"author":{"gitId":"mabel-kang"},"content":"            Event newEvent \u003d new Event(descriptionEvent, time);"},{"lineNumber":72,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":73,"author":{"gitId":"mabel-kang"},"content":"            tasks.add(newEvent);"},{"lineNumber":74,"author":{"gitId":"mabel-kang"},"content":"            storage.addTask(newEvent);"},{"lineNumber":75,"author":{"gitId":"mabel-kang"},"content":"            return ui.responseToAddTask(newEvent, tasks.getSize());"},{"lineNumber":76,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":77,"author":{"gitId":"mabel-kang"},"content":"        } catch (DukeException | IOException e) {"},{"lineNumber":78,"author":{"gitId":"mabel-kang"},"content":"            return e.toString();"},{"lineNumber":79,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":82,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"mabel-kang"},"content":"     * Handles the Done command."},{"lineNumber":84,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"mabel-kang"},"content":"    public String handleDone() {"},{"lineNumber":86,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":87,"author":{"gitId":"mabel-kang"},"content":"            taskIdentifier \u003d Integer.parseInt(command.substring(index + 1));"},{"lineNumber":88,"author":{"gitId":"mabel-kang"},"content":"            Validation.checkValidRange(tasks.getSize(), taskIdentifier);"},{"lineNumber":89,"author":{"gitId":"mabel-kang"},"content":"            Task toMark \u003d tasks.find(taskIdentifier - 1);"},{"lineNumber":90,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":91,"author":{"gitId":"mabel-kang"},"content":"            storage.markTask(toMark);"},{"lineNumber":92,"author":{"gitId":"mabel-kang"},"content":"            return ui.responseToDone(toMark);"},{"lineNumber":93,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":94,"author":{"gitId":"mabel-kang"},"content":"        } catch (DukeException | IOException e) {"},{"lineNumber":95,"author":{"gitId":"mabel-kang"},"content":"            return e.toString();"},{"lineNumber":96,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":99,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"mabel-kang"},"content":"     * Handles the Delete command."},{"lineNumber":101,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"mabel-kang"},"content":"    public String handleDelete() {"},{"lineNumber":103,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":104,"author":{"gitId":"mabel-kang"},"content":"            taskIdentifier \u003d Integer.parseInt(command.substring(index + 1));"},{"lineNumber":105,"author":{"gitId":"mabel-kang"},"content":"            Validation.checkValidRange(tasks.getSize(), taskIdentifier);"},{"lineNumber":106,"author":{"gitId":"mabel-kang"},"content":"            Task selected \u003d tasks.find(taskIdentifier - 1);"},{"lineNumber":107,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":108,"author":{"gitId":"mabel-kang"},"content":"            tasks.delete(taskIdentifier - 1);"},{"lineNumber":109,"author":{"gitId":"mabel-kang"},"content":"            storage.deleteTask(selected);"},{"lineNumber":110,"author":{"gitId":"mabel-kang"},"content":"            return ui.responseToDelete(selected, tasks.getSize());"},{"lineNumber":111,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":112,"author":{"gitId":"mabel-kang"},"content":"        } catch (DukeException | IOException e) {"},{"lineNumber":113,"author":{"gitId":"mabel-kang"},"content":"            return e.toString();"},{"lineNumber":114,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":117,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"mabel-kang"},"content":"     * Handles the Find command."},{"lineNumber":119,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"mabel-kang"},"content":"    public String handleFind() {"},{"lineNumber":121,"author":{"gitId":"mabel-kang"},"content":"        String keyword \u003d command.substring(index + 1);"},{"lineNumber":122,"author":{"gitId":"mabel-kang"},"content":"        return tasks.findWithKeyword(keyword);"},{"lineNumber":123,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":125,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"mabel-kang"},"content":"     * Main method to make sense of the user command and to determine"},{"lineNumber":127,"author":{"gitId":"mabel-kang"},"content":"     * which command it is."},{"lineNumber":128,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":129,"author":{"gitId":"mabel-kang"},"content":"     * @param command User\u0027s command input."},{"lineNumber":130,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"mabel-kang"},"content":"    public String handleCommand(String command) {"},{"lineNumber":132,"author":{"gitId":"mabel-kang"},"content":"        System.out.println(\"HERE !!!!!\");"},{"lineNumber":133,"author":{"gitId":"mabel-kang"},"content":"        String output \u003d \"\";"},{"lineNumber":134,"author":{"gitId":"mabel-kang"},"content":"        this.command \u003d command;"},{"lineNumber":135,"author":{"gitId":"mabel-kang"},"content":"        try {"},{"lineNumber":136,"author":{"gitId":"mabel-kang"},"content":"            Validation.checkValidCommand(command);"},{"lineNumber":137,"author":{"gitId":"mabel-kang"},"content":"            index \u003d command.indexOf(\u0027 \u0027);"},{"lineNumber":138,"author":{"gitId":"mabel-kang"},"content":"            findSlash \u003d command.indexOf(\u0027/\u0027);"},{"lineNumber":139,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":140,"author":{"gitId":"mabel-kang"},"content":"            if (index \u003e -1) {"},{"lineNumber":141,"author":{"gitId":"mabel-kang"},"content":"                String type \u003d command.substring(0, index);"},{"lineNumber":142,"author":{"gitId":"mabel-kang"},"content":"                switch (type) {"},{"lineNumber":143,"author":{"gitId":"mabel-kang"},"content":"                case \"todo\":"},{"lineNumber":144,"author":{"gitId":"mabel-kang"},"content":"                    output \u003d handleToDo();"},{"lineNumber":145,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":146,"author":{"gitId":"mabel-kang"},"content":"                case \"deadline\":"},{"lineNumber":147,"author":{"gitId":"mabel-kang"},"content":"                    output \u003d handleDeadline();"},{"lineNumber":148,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":149,"author":{"gitId":"mabel-kang"},"content":"                case \"event\":"},{"lineNumber":150,"author":{"gitId":"mabel-kang"},"content":"                    output \u003d handleEvent();"},{"lineNumber":151,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":152,"author":{"gitId":"mabel-kang"},"content":"                case \"done\":"},{"lineNumber":153,"author":{"gitId":"mabel-kang"},"content":"                    output \u003d handleDone();"},{"lineNumber":154,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":155,"author":{"gitId":"mabel-kang"},"content":"                case \"delete\":"},{"lineNumber":156,"author":{"gitId":"mabel-kang"},"content":"                    output \u003d handleDelete();"},{"lineNumber":157,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":158,"author":{"gitId":"mabel-kang"},"content":"                case \"find\":"},{"lineNumber":159,"author":{"gitId":"mabel-kang"},"content":"                    output \u003d handleFind();"},{"lineNumber":160,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":161,"author":{"gitId":"mabel-kang"},"content":"                default:"},{"lineNumber":162,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":163,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":164,"author":{"gitId":"mabel-kang"},"content":"            } else {"},{"lineNumber":165,"author":{"gitId":"mabel-kang"},"content":"                switch (command) {"},{"lineNumber":166,"author":{"gitId":"mabel-kang"},"content":"                case \"bye\":"},{"lineNumber":167,"author":{"gitId":"mabel-kang"},"content":"                    output \u003d ui.responseToBye();"},{"lineNumber":168,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":169,"author":{"gitId":"mabel-kang"},"content":"                case \"list\":"},{"lineNumber":170,"author":{"gitId":"mabel-kang"},"content":"                    output \u003d ui.responseToList(tasks.getSize()) + \"\\n\" + tasks.list();"},{"lineNumber":171,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":172,"author":{"gitId":"mabel-kang"},"content":"                default:"},{"lineNumber":173,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":174,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":175,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":176,"author":{"gitId":"mabel-kang"},"content":"            System.out.println(output);"},{"lineNumber":177,"author":{"gitId":"mabel-kang"},"content":"            return output;"},{"lineNumber":178,"author":{"gitId":"mabel-kang"},"content":"        } catch (DukeException | IOException e) {"},{"lineNumber":179,"author":{"gitId":"mabel-kang"},"content":"            return e.toString();"},{"lineNumber":180,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":183,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":184,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":185,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":185}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.io.FileInputStream;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"import java.io.FileOutputStream;"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":" * Storage handles the loading of tasks from the file and making changes"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":" * to the file based on user commands."},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"public class Storage {"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"    protected String path;"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    protected File localFile;"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"    protected boolean isFileOriginallyPresent;"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"    protected DateValidation validate;"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"     * Creates a new instance of Storage for a user."},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"     * @param path Path of file that is to be saved on the hard disk."},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"    public Storage(String path) {"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"        this.path \u003d path;"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"        this.localFile \u003d new File(path);"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"        this.isFileOriginallyPresent \u003d true;"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"        this.validate \u003d new DateValidation();"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"     * Checks if directory and file exists and if they do not exist, create them."},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"    public void checkFileExistence() {"},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"        File directory \u003d new File(\"data\");"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"        if (!directory.isDirectory()) {"},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"            directory.mkdir();"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"        if (!localFile.exists()) {"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"            try {"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"                this.isFileOriginallyPresent \u003d false;"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"                localFile.createNewFile();"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"            } catch (IOException e) {"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"                System.out.println(e);"},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"     * Adds a task to the file."},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task to be added."},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error."},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"    public void addTask(Task task) throws IOException {"},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"        FileWriter fw \u003d new FileWriter(this.localFile, true);"},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":"        fw.write(task.toString() + \"\\n\");"},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":"        fw.close();"},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":66,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"mabel-kang"},"content":"     * Load tasks into a list if the file exists on the hard disk."},{"lineNumber":68,"author":{"gitId":"mabel-kang"},"content":"     * @return A list consisting of all the tasks if the file exists,"},{"lineNumber":69,"author":{"gitId":"mabel-kang"},"content":"     * if not an empty list is returned."},{"lineNumber":70,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"mabel-kang"},"content":"    public List\u003cTask\u003e loadTasks() {"},{"lineNumber":72,"author":{"gitId":"mabel-kang"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":73,"author":{"gitId":"mabel-kang"},"content":"        if (this.isFileOriginallyPresent) {"},{"lineNumber":74,"author":{"gitId":"mabel-kang"},"content":"            Scanner contents \u003d null;"},{"lineNumber":75,"author":{"gitId":"mabel-kang"},"content":"            try {"},{"lineNumber":76,"author":{"gitId":"mabel-kang"},"content":"                contents \u003d new Scanner((this.localFile));"},{"lineNumber":77,"author":{"gitId":"mabel-kang"},"content":"            } catch (FileNotFoundException e) {"},{"lineNumber":78,"author":{"gitId":"mabel-kang"},"content":"                e.printStackTrace();"},{"lineNumber":79,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":81,"author":{"gitId":"mabel-kang"},"content":"            while (contents.hasNext()) {"},{"lineNumber":82,"author":{"gitId":"mabel-kang"},"content":"                String data \u003d contents.nextLine();"},{"lineNumber":83,"author":{"gitId":"mabel-kang"},"content":"                Character type \u003d data.charAt(1);"},{"lineNumber":84,"author":{"gitId":"mabel-kang"},"content":"                Character isDone \u003d data.charAt(4);"},{"lineNumber":85,"author":{"gitId":"mabel-kang"},"content":"                int startingIndex \u003d data.indexOf(\u0027(\u0027);"},{"lineNumber":86,"author":{"gitId":"mabel-kang"},"content":"                int endingIndex \u003d data.indexOf(\u0027)\u0027);"},{"lineNumber":87,"author":{"gitId":"mabel-kang"},"content":"                switch (type) {"},{"lineNumber":88,"author":{"gitId":"mabel-kang"},"content":"                case \u0027T\u0027:"},{"lineNumber":89,"author":{"gitId":"mabel-kang"},"content":"                    String todoDescription \u003d data.substring(7);"},{"lineNumber":90,"author":{"gitId":"mabel-kang"},"content":"                    ToDo todo \u003d new ToDo(todoDescription);"},{"lineNumber":91,"author":{"gitId":"mabel-kang"},"content":"                    if (isDone \u003d\u003d \u0027X\u0027) {"},{"lineNumber":92,"author":{"gitId":"mabel-kang"},"content":"                        todo.setDone();"},{"lineNumber":93,"author":{"gitId":"mabel-kang"},"content":"                    }"},{"lineNumber":94,"author":{"gitId":"mabel-kang"},"content":"                    tasks.add(todo);"},{"lineNumber":95,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":96,"author":{"gitId":"mabel-kang"},"content":"                case \u0027D\u0027:"},{"lineNumber":97,"author":{"gitId":"mabel-kang"},"content":"                    String deadlineDescription \u003d data.substring(7, startingIndex - 1);"},{"lineNumber":98,"author":{"gitId":"mabel-kang"},"content":"                    String by \u003d data.substring(startingIndex + 5, endingIndex);"},{"lineNumber":99,"author":{"gitId":"mabel-kang"},"content":"                    Deadline deadline \u003d new Deadline(deadlineDescription, validate.convertDate(by));"},{"lineNumber":100,"author":{"gitId":"mabel-kang"},"content":"                    if (isDone \u003d\u003d \u0027X\u0027) {"},{"lineNumber":101,"author":{"gitId":"mabel-kang"},"content":"                        deadline.setDone();"},{"lineNumber":102,"author":{"gitId":"mabel-kang"},"content":"                    }"},{"lineNumber":103,"author":{"gitId":"mabel-kang"},"content":"                    tasks.add(deadline);"},{"lineNumber":104,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":105,"author":{"gitId":"mabel-kang"},"content":"                case \u0027E\u0027:"},{"lineNumber":106,"author":{"gitId":"mabel-kang"},"content":"                    String eventDescription \u003d data.substring(9, startingIndex - 1);"},{"lineNumber":107,"author":{"gitId":"mabel-kang"},"content":"                    String time \u003d data.substring(startingIndex + 5, endingIndex);"},{"lineNumber":108,"author":{"gitId":"mabel-kang"},"content":"                    Event event \u003d new Event(eventDescription, time);"},{"lineNumber":109,"author":{"gitId":"mabel-kang"},"content":"                    if (isDone \u003d\u003d \u0027X\u0027) {"},{"lineNumber":110,"author":{"gitId":"mabel-kang"},"content":"                        event.setDone();"},{"lineNumber":111,"author":{"gitId":"mabel-kang"},"content":"                    }"},{"lineNumber":112,"author":{"gitId":"mabel-kang"},"content":"                    tasks.add(event);"},{"lineNumber":113,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":114,"author":{"gitId":"mabel-kang"},"content":"                default:"},{"lineNumber":115,"author":{"gitId":"mabel-kang"},"content":"                    break;"},{"lineNumber":116,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":117,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"mabel-kang"},"content":"        return tasks;"},{"lineNumber":120,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":122,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"mabel-kang"},"content":"     * Deletes a task from the file."},{"lineNumber":124,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task to be deleted."},{"lineNumber":126,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error."},{"lineNumber":127,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"mabel-kang"},"content":"    public void deleteTask(Task task) throws IOException {"},{"lineNumber":129,"author":{"gitId":"mabel-kang"},"content":"        Scanner contents \u003d new Scanner(this.localFile);"},{"lineNumber":130,"author":{"gitId":"mabel-kang"},"content":"        File temp \u003d new File(\"data/temp.txt\");"},{"lineNumber":131,"author":{"gitId":"mabel-kang"},"content":"        temp.createNewFile();"},{"lineNumber":132,"author":{"gitId":"mabel-kang"},"content":"        FileWriter tempFile \u003d new FileWriter(temp, true);"},{"lineNumber":133,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":134,"author":{"gitId":"mabel-kang"},"content":"        while (contents.hasNext()) {"},{"lineNumber":135,"author":{"gitId":"mabel-kang"},"content":"            String data \u003d contents.nextLine();"},{"lineNumber":136,"author":{"gitId":"mabel-kang"},"content":"            if (!data.equals(task.toString())) {"},{"lineNumber":137,"author":{"gitId":"mabel-kang"},"content":"                tempFile.write(data + \"\\n\");"},{"lineNumber":138,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":141,"author":{"gitId":"mabel-kang"},"content":"        tempFile.close();"},{"lineNumber":142,"author":{"gitId":"mabel-kang"},"content":"        copyFile(temp, localFile);"},{"lineNumber":143,"author":{"gitId":"mabel-kang"},"content":"        temp.delete();"},{"lineNumber":144,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":146,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"mabel-kang"},"content":"     * Marks a task in the file as completed."},{"lineNumber":148,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":149,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task to be marked as completed."},{"lineNumber":150,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error."},{"lineNumber":151,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"mabel-kang"},"content":"    public void markTask(Task task) throws IOException {"},{"lineNumber":153,"author":{"gitId":"mabel-kang"},"content":"        File temp \u003d new File(\"data/temp.txt\");"},{"lineNumber":154,"author":{"gitId":"mabel-kang"},"content":"        temp.createNewFile();"},{"lineNumber":155,"author":{"gitId":"mabel-kang"},"content":"        FileWriter tempFile \u003d new FileWriter(temp, true);"},{"lineNumber":156,"author":{"gitId":"mabel-kang"},"content":"        Scanner contents \u003d new Scanner(this.localFile);"},{"lineNumber":157,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":158,"author":{"gitId":"mabel-kang"},"content":"        while (contents.hasNext()) {"},{"lineNumber":159,"author":{"gitId":"mabel-kang"},"content":"            String data \u003d contents.nextLine();"},{"lineNumber":160,"author":{"gitId":"mabel-kang"},"content":"            if (!data.equals(task.toString())) {"},{"lineNumber":161,"author":{"gitId":"mabel-kang"},"content":"                tempFile.write(data + \"\\n\");"},{"lineNumber":162,"author":{"gitId":"mabel-kang"},"content":"            } else {"},{"lineNumber":163,"author":{"gitId":"mabel-kang"},"content":"                task.setDone();"},{"lineNumber":164,"author":{"gitId":"mabel-kang"},"content":"                tempFile.write(task.toString() + \"\\n\");"},{"lineNumber":165,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":166,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":168,"author":{"gitId":"mabel-kang"},"content":"        tempFile.close();"},{"lineNumber":169,"author":{"gitId":"mabel-kang"},"content":"        copyFile(temp, localFile);"},{"lineNumber":170,"author":{"gitId":"mabel-kang"},"content":"        temp.delete();"},{"lineNumber":171,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":173,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":174,"author":{"gitId":"mabel-kang"},"content":"     * Copy the contents of one file into another."},{"lineNumber":175,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":176,"author":{"gitId":"mabel-kang"},"content":"     * @param input File containing the contents to be copied."},{"lineNumber":177,"author":{"gitId":"mabel-kang"},"content":"     * @param output File where the contents are to be copied into."},{"lineNumber":178,"author":{"gitId":"mabel-kang"},"content":"     * @throws IOException On file error."},{"lineNumber":179,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":180,"author":{"gitId":"mabel-kang"},"content":"    public void copyFile(File input, File output) throws IOException {"},{"lineNumber":181,"author":{"gitId":"mabel-kang"},"content":"        FileInputStream in \u003d new FileInputStream(input);"},{"lineNumber":182,"author":{"gitId":"mabel-kang"},"content":"        FileOutputStream out \u003d new FileOutputStream(output);"},{"lineNumber":183,"author":{"gitId":"mabel-kang"},"content":"        byte[] data \u003d new byte[1024];"},{"lineNumber":184,"author":{"gitId":"mabel-kang"},"content":"        int len \u003d in.read(data);"},{"lineNumber":185,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":186,"author":{"gitId":"mabel-kang"},"content":"        while (len !\u003d -1) {"},{"lineNumber":187,"author":{"gitId":"mabel-kang"},"content":"            out.write(data, 0, len);"},{"lineNumber":188,"author":{"gitId":"mabel-kang"},"content":"            len \u003d in.read(data);"},{"lineNumber":189,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":191,"author":{"gitId":"mabel-kang"},"content":"        in.close();"},{"lineNumber":192,"author":{"gitId":"mabel-kang"},"content":"        out.close();"},{"lineNumber":193,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":194}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":" * Represents a Task input by users."},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":" * A Task is represented by a name in the form of a string"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":" * and a boolean to determine if it has been completed."},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"    protected String name;"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"     * Creates a new instance of a Task."},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"     * @param name Description of task."},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    public Task(String name) {"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"        this.name \u003d name;"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + this.name;"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"    public void setDone() {"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"        this.isDone \u003d true;"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":29}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":" * Represents a list of tasks for a user."},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" * A TaskList also handles operations for the tasks in the list."},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    protected List\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"     * Creates a TaskList."},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"     * @param tasks Tasks to be added into the TaskList."},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"     * Adds a task to the task list."},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task to be added."},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"    public void add(Task task) {"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"        tasks.add(task);"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"     * Deletes a task from the task list."},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"     * @param taskNumber Task number of the task that is to be deleted."},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"    public void delete(int taskNumber) {"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"        tasks.remove(taskNumber);"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"     * Lists out all the tasks in the task list."},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"     * @return A string consisting of all the tasks."},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"    public String list() {"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"        String output \u003d \"\";"},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"            output \u003d output + \"\\n\" + (i + 1) + \".\" + tasks.get(i).toString();"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"        return output;"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"     * Returns a Task, based on the task number specified by users."},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":"     * @param taskNumber Task number of selected task."},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"     * @return Task."},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"    public Task find(int taskNumber) {"},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"        return tasks.get(taskNumber);"},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"     * Finds the tasks that contain the keyword input by user."},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":"     * @param keyword Keyword input by user."},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":"     * @return A String consists of all the matching tasks."},{"lineNumber":65,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"mabel-kang"},"content":"    public String findWithKeyword(String keyword) {"},{"lineNumber":67,"author":{"gitId":"mabel-kang"},"content":"        String output \u003d \"\";"},{"lineNumber":68,"author":{"gitId":"mabel-kang"},"content":"        int numberOfMatches \u003d 0;"},{"lineNumber":69,"author":{"gitId":"mabel-kang"},"content":"        int tracker \u003d 0;"},{"lineNumber":70,"author":{"gitId":"mabel-kang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":71,"author":{"gitId":"mabel-kang"},"content":"            String task \u003d tasks.get(i).toString();"},{"lineNumber":72,"author":{"gitId":"mabel-kang"},"content":"            boolean isPresent \u003d task.toLowerCase().contains(keyword.toLowerCase());"},{"lineNumber":73,"author":{"gitId":"mabel-kang"},"content":"            if (isPresent) {"},{"lineNumber":74,"author":{"gitId":"mabel-kang"},"content":"                if (tracker \u003d\u003d 0) {"},{"lineNumber":75,"author":{"gitId":"mabel-kang"},"content":"                    output \u003d Ui.responseToFind() + \"\\n\";"},{"lineNumber":76,"author":{"gitId":"mabel-kang"},"content":"                    tracker++;"},{"lineNumber":77,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":78,"author":{"gitId":"mabel-kang"},"content":"                output \u003d output + task + \"\\n\";"},{"lineNumber":79,"author":{"gitId":"mabel-kang"},"content":"                numberOfMatches++;"},{"lineNumber":80,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"mabel-kang"},"content":"        if (numberOfMatches \u003d\u003d 0) {"},{"lineNumber":83,"author":{"gitId":"mabel-kang"},"content":"            output \u003d Ui.responseToNoMatches();"},{"lineNumber":84,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"mabel-kang"},"content":"        return output;"},{"lineNumber":86,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":88,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"mabel-kang"},"content":"     * Returns the number of tasks in the task list."},{"lineNumber":90,"author":{"gitId":"mabel-kang"},"content":"     * @return Number of tasks."},{"lineNumber":91,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"mabel-kang"},"content":"    public int getSize() {"},{"lineNumber":93,"author":{"gitId":"mabel-kang"},"content":"        return tasks.size();"},{"lineNumber":94,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":96,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":96}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":" * Represents a task of type ToDo."},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":" * A ToDo is represented by a name in the form of a string."},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"public class ToDo extends Task {"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"     * Creates a new ToDo."},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"     * @param name Description of Todo."},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    public ToDo(String name) {"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"        super(name);"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":20}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":" * Ui handles the interactions with the user."},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"     * Creates the response after successfully adding a task."},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task that was added."},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"     * @param taskListSize Number of tasks in the TaskList."},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"     * @return A string including the acknowledgement of the new task, and the total"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"     * number of tasks in the list."},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    public String responseToAddTask(Task task, int taskListSize) {"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"        return \"Done! One new task:\\n\" + task.toString() + \"\\nNow you have \""},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"                 + taskListSize + ((taskListSize \u003d\u003d 1) ? \" task\" : \" tasks\") + \" in the list\";"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"     * Creates the response after successfully deleting the task."},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task that was deleted."},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"     * @param taskListSize Number of tasks in the TaskList."},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"     * @return A string including the deletion of the task, and the total"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"     * number of tasks in the list."},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"    public String responseToDelete(Task task, int taskListSize) {"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"        return \"Noted, I\u0027ve removed this task:\\n\" + task.toString()"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"                 + \"\\nNow you have \" + taskListSize + ((taskListSize \u003d\u003d 1) ? \" task\" : \" tasks\") + \" in the list\";"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"     * Creates the response after user inputs \u0027bye\u0027."},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"     * @return A string."},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"    public String responseToBye() {"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"     * Prints the initial response to the \u0027list\u0027 command, depending on whether"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"     * the TaskList is empty."},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"     * @param taskListSize Number of tasks in the TaskList."},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"     * @return A string, depending on whether the list is empty."},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"    public String responseToList(int taskListSize) {"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"        if (taskListSize !\u003d 0) {"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"            return \"Here are the tasks in your list:\";"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"            return \"Your list is currently empty! Let\u0027s start adding tasks!\";"},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"     * Creates the response after marking a task as completed."},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"     * @param task Task that was marked completed."},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"     * @return A string."},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"    public String responseToDone(Task task) {"},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString();"},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"mabel-kang"},"content":"     * Creates the response after successfully finding matching tasks."},{"lineNumber":66,"author":{"gitId":"mabel-kang"},"content":"     * @return A string."},{"lineNumber":67,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"mabel-kang"},"content":"    public static String responseToFind() {"},{"lineNumber":69,"author":{"gitId":"mabel-kang"},"content":"        return \"Here are the matching tasks in your list:\";"},{"lineNumber":70,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":72,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"mabel-kang"},"content":"     * Creates the response after being unable to find any matching tasks."},{"lineNumber":74,"author":{"gitId":"mabel-kang"},"content":"     * @return A string."},{"lineNumber":75,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"mabel-kang"},"content":"    public static String responseToNoMatches() {"},{"lineNumber":77,"author":{"gitId":"mabel-kang"},"content":"        return \"There are no matching tasks! Time to add one!\";"},{"lineNumber":78,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":80,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":81,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":81}},{"path":"src/main/java/Validation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.util.Arrays;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":" * Validation handles the initial validation of the user command inputs."},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":" */"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"public class Validation {"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"     * Checks if the user input is within the list of accepted commands."},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"     * @param command User\u0027s command input."},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On invalid input."},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    public static void checkValidCommand(String command) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"        String[] validCommands \u003d new String[] {\"todo\", \"deadline\", \"event\", \"list\", \"bye\", \"done\", \"delete\", \"find\"};"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"        List\u003cString\u003e commands \u003d Arrays.asList(validCommands);"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"        int index \u003d command.indexOf(\u0027 \u0027);"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"        String first \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"        if (index \u003e -1) {"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"            first \u003d command.substring(0, index);"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"            first \u003d command;"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"        if (!commands.contains(first.toLowerCase())) {"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"            throw new DukeException(\":( OOPS! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"            String[] secondValidation \u003d new String[] {\"todo\", \"deadline\", \"event\", \"done\", \"delete\", \"find\"};"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"            List\u003cString\u003e secondListOfCommands \u003d Arrays.asList(secondValidation);"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"            if (secondListOfCommands.contains(first.toLowerCase())) {"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"                if (index \u003c\u003d -1 || command.substring(index).isBlank()) {"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"                    throw new DukeException(\":( OOPS! The description of a todo/deadline/event/done/delete/find \""},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"                             + \"cannot be empty!!\");"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"     * Checks if the time/date input with Events/Deadlines are valid."},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"     * @param command User\u0027s command input."},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"     * @param findSlash Position of slash in the input."},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On invalid time/date input."},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"    public static void checkForSchedule(String command, int findSlash) throws DukeException {"},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"        if ((findSlash \u003c\u003d -1) || command.endsWith(\"/\") || command.substring(findSlash + 1).isBlank()) {"},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"            throw new DukeException(\":( OOPS! Please input a valid time/date\");"},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"     * Checks if task that user has identified exists."},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"     * @param taskSize Number of tasks in the TaskList."},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":"     * @param chosenNumber The task number."},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"     * @throws DukeException On invalid input. Task does not exist."},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":"    public static void checkValidRange(int taskSize, int chosenNumber) throws DukeException {"},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":"        if (chosenNumber \u003e taskSize) {"},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":"            throw new DukeException(\":( OOPS! This task does not exist! Use \u0027list\u0027 to check your task numbers!\");"},{"lineNumber":65,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":67}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"mabel-kang":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    \u003cchildren\u003e"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"         \u003cpadding\u003e"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"         \u003c/padding\u003e\u003c/TextField\u003e"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"            \u003ccontent\u003e"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"402.0\"\u003e"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"               \u003cchildren\u003e"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"                      \u003cTextArea id\u003d\"text\" disable\u003d\"true\" editable\u003d\"false\" prefHeight\u003d\"94.0\" prefWidth\u003d\"382.0\" text\u003d\"Hello! I\u0027m Duke \u0026#10;What can I help you with today! :-)\" wrapText\u003d\"true\"\u003e"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"                     \u003cfont\u003e"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"                        \u003cFont size\u003d\"14.0\" /\u003e"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"                     \u003c/font\u003e"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"                     \u003cVBox.margin\u003e"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"                     \u003c/VBox.margin\u003e"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"                     \u003cpadding\u003e"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"                        \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"                     \u003c/padding\u003e"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"                  \u003c/TextArea\u003e"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"               \u003c/children\u003e\u003c/VBox\u003e"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"            \u003c/content\u003e"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"    \u003c/children\u003e"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"mabel-kang":38}},{"path":"src/test/java/DateValidationTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"public class DateValidationTest {"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    public void handleDate_invalidInput_exceptionThrown() {"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"        try{"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"            assertEquals(LocalDate.parse(\"2021-01-23\"),DateValidation.handleDate(\"23-01-2021\"));"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"            fail();"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"        } catch (DukeException e) {"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"            assertEquals(\":( Date format is invalid! Please enter in yyyy-mm-dd format!\","},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"                    e.getMessage());"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":22}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"public class DeadlineTest {"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    public void testDeadlineString() {"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"        assertEquals(\"[D][ ] read (by: Jan 28 2021)\", new Deadline(\"read\","},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"                LocalDate.parse(\"2021-01-28\")).toString());"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"    public void testParseDate() {"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"        assertEquals(\"Jan 28 2021\", new Deadline(\"read\","},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"                LocalDate.parse(\"2021-01-28\")).parseDate(LocalDate.parse(\"2021-01-28\")));"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":20}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"import java.io.PrintStream;"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"public class UiTest {"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    public void testResponseToList() {"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"         PrintStream out \u003d System.out;"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"         ByteArrayOutputStream content \u003d new ByteArrayOutputStream();"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"         System.setOut(new PrintStream(content));"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"         Ui ui \u003d new Ui();"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"         ui.responseToList(0);"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"         assertEquals(\"Your list is currently empty! Let\u0027s start adding tasks!\","},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"                 content.toString().trim());"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"         System.setOut(out);"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    "},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"list"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"todo"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"hello"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"list"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"bye"}],"authorContributionMap":{"mabel-kang":9}}]
