[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"public class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"    public Deadline(String name, String by) {"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"        super(name);"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"        List\u003cTask\u003e store \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"        Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"        Validation validate \u003d new Validation();"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        int number;"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"        while(true) {"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"            String command \u003d scan.nextLine();"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"            try {"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"                validate.checkValidCommand(command);"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"                int index \u003d command.indexOf(\u0027 \u0027);"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"                int findSlash \u003d command.indexOf(\u0027/\u0027);"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"                if (index \u003e -1) {"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"                    String type \u003d command.substring(0, index);"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":"                    switch (type) {"},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"                        case \"todo\":"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"                            String descriptionTask \u003d command.substring(index+1);"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"                            ToDo newToDo \u003d new ToDo(descriptionTask);"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"                            store.add(newToDo);"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"                            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newToDo.toString() + \"\\nNow you have \""},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"                                        + store.size() + \" tasks in the list\");"},{"lineNumber":35,"author":{"gitId":"mabel-kang"},"content":"                            break;"},{"lineNumber":36,"author":{"gitId":"mabel-kang"},"content":"                        case \"deadline\":"},{"lineNumber":37,"author":{"gitId":"mabel-kang"},"content":"                            try {"},{"lineNumber":38,"author":{"gitId":"mabel-kang"},"content":"                                validate.checkForSchedule(command, findSlash);"},{"lineNumber":39,"author":{"gitId":"mabel-kang"},"content":"                                String descriptionDeadline \u003d command.substring(index+1, findSlash-1);"},{"lineNumber":40,"author":{"gitId":"mabel-kang"},"content":"                                String date \u003d command.substring(findSlash+4);"},{"lineNumber":41,"author":{"gitId":"mabel-kang"},"content":"                                Deadline newDeadline \u003d new Deadline(descriptionDeadline, date);"},{"lineNumber":42,"author":{"gitId":"mabel-kang"},"content":"                                store.add(newDeadline);"},{"lineNumber":43,"author":{"gitId":"mabel-kang"},"content":"                                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newDeadline.toString() +"},{"lineNumber":44,"author":{"gitId":"mabel-kang"},"content":"                                        \"\\nNow you have \" + store.size() + \" tasks in the list\");"},{"lineNumber":45,"author":{"gitId":"mabel-kang"},"content":"                                break;"},{"lineNumber":46,"author":{"gitId":"mabel-kang"},"content":"                            } catch (DukeException e) {"},{"lineNumber":47,"author":{"gitId":"mabel-kang"},"content":"                                System.out.println(e);"},{"lineNumber":48,"author":{"gitId":"mabel-kang"},"content":"                                break;"},{"lineNumber":49,"author":{"gitId":"mabel-kang"},"content":"                            }"},{"lineNumber":50,"author":{"gitId":"mabel-kang"},"content":"                        case \"event\":"},{"lineNumber":51,"author":{"gitId":"mabel-kang"},"content":"                            try {"},{"lineNumber":52,"author":{"gitId":"mabel-kang"},"content":"                                validate.checkForSchedule(command, findSlash);"},{"lineNumber":53,"author":{"gitId":"mabel-kang"},"content":"                                String descriptionEvent \u003d command.substring(index + 1, findSlash - 1);"},{"lineNumber":54,"author":{"gitId":"mabel-kang"},"content":"                                String time \u003d command.substring(findSlash + 4);"},{"lineNumber":55,"author":{"gitId":"mabel-kang"},"content":"                                Event newEvent \u003d new Event(descriptionEvent, time);"},{"lineNumber":56,"author":{"gitId":"mabel-kang"},"content":"                                store.add(newEvent);"},{"lineNumber":57,"author":{"gitId":"mabel-kang"},"content":"                                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newEvent.toString() +"},{"lineNumber":58,"author":{"gitId":"mabel-kang"},"content":"                                        \"\\nNow you have \" + store.size() + \" tasks in the list\");"},{"lineNumber":59,"author":{"gitId":"mabel-kang"},"content":"                                break;"},{"lineNumber":60,"author":{"gitId":"mabel-kang"},"content":"                            } catch (DukeException e) {"},{"lineNumber":61,"author":{"gitId":"mabel-kang"},"content":"                                System.out.println(e);"},{"lineNumber":62,"author":{"gitId":"mabel-kang"},"content":"                                break;"},{"lineNumber":63,"author":{"gitId":"mabel-kang"},"content":"                            }"},{"lineNumber":64,"author":{"gitId":"mabel-kang"},"content":"                        case \"done\":"},{"lineNumber":65,"author":{"gitId":"mabel-kang"},"content":"                            number \u003d Integer.parseInt(command.substring(index+1));"},{"lineNumber":66,"author":{"gitId":"mabel-kang"},"content":"                            Task toMark \u003d store.get(number - 1);"},{"lineNumber":67,"author":{"gitId":"mabel-kang"},"content":"                            String response \u003d toMark.markAsDone();"},{"lineNumber":68,"author":{"gitId":"mabel-kang"},"content":"                            System.out.println(response);"},{"lineNumber":69,"author":{"gitId":"mabel-kang"},"content":"                            break;"},{"lineNumber":70,"author":{"gitId":"mabel-kang"},"content":"                        case \"delete\":"},{"lineNumber":71,"author":{"gitId":"mabel-kang"},"content":"                            number \u003d Integer.parseInt(command.substring(index+1));"},{"lineNumber":72,"author":{"gitId":"mabel-kang"},"content":"                            Task selected \u003d store.get(number - 1);"},{"lineNumber":73,"author":{"gitId":"mabel-kang"},"content":"                            store.remove(number - 1);"},{"lineNumber":74,"author":{"gitId":"mabel-kang"},"content":"                            System.out.println(\"Noted, I\u0027ve removed this task:\\n\" + selected.toString() +"},{"lineNumber":75,"author":{"gitId":"mabel-kang"},"content":"                                    \"\\nNow you have \" + store.size() + \" tasks in the list.\");"},{"lineNumber":76,"author":{"gitId":"mabel-kang"},"content":"                    }"},{"lineNumber":77,"author":{"gitId":"mabel-kang"},"content":"                } else {"},{"lineNumber":78,"author":{"gitId":"mabel-kang"},"content":"                    switch (command) {"},{"lineNumber":79,"author":{"gitId":"mabel-kang"},"content":"                        case \"bye\":"},{"lineNumber":80,"author":{"gitId":"mabel-kang"},"content":"                            System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":81,"author":{"gitId":"mabel-kang"},"content":"                            break;"},{"lineNumber":82,"author":{"gitId":"mabel-kang"},"content":"                        case \"list\":"},{"lineNumber":83,"author":{"gitId":"mabel-kang"},"content":"                            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":84,"author":{"gitId":"mabel-kang"},"content":"                            for(int i \u003d0; i \u003c store.size(); i++) {"},{"lineNumber":85,"author":{"gitId":"mabel-kang"},"content":"                                System.out.println((i + 1) + \".\" + store.get(i).toString());"},{"lineNumber":86,"author":{"gitId":"mabel-kang"},"content":"                            }"},{"lineNumber":87,"author":{"gitId":"mabel-kang"},"content":"                            break;"},{"lineNumber":88,"author":{"gitId":"mabel-kang"},"content":"                    }"},{"lineNumber":89,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":90,"author":{"gitId":"mabel-kang"},"content":"            } catch (DukeException e){"},{"lineNumber":91,"author":{"gitId":"mabel-kang"},"content":"                System.out.println(e);"},{"lineNumber":92,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"mabel-kang"},"content":"            if (command.equals(\"bye\")) {"},{"lineNumber":94,"author":{"gitId":"mabel-kang"},"content":"                break;"},{"lineNumber":95,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"mabel-kang":88,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"    DukeException(String s) {"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"        super(s);"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"    protected String time;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"    public Event(String name, String time) {"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"        super(name);"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"        this.time \u003d time;"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"    protected String name;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"    public Task(String name) {"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"        this.name \u003d name;"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    public String status() {"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"        return \"[\" + status() + \"] \" + this.name;"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"    public String markAsDone() {"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + toString();"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":23}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"    public ToDo(String name) {"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"        super(name);"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"        return \"[T]\" +  super.toString();"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":11}},{"path":"src/main/java/Validation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"import java.util.Arrays;"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"public class Validation {"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"    public void checkValidCommand(String command) throws DukeException {"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"        String[] validCommands \u003d new String[]{\"todo\", \"deadline\", \"event\", \"list\", \"bye\", \"done\", \"delete\"};"},{"lineNumber":8,"author":{"gitId":"mabel-kang"},"content":"        List\u003cString\u003e list \u003d Arrays.asList(validCommands);"},{"lineNumber":9,"author":{"gitId":"mabel-kang"},"content":"        int index \u003d command.indexOf(\u0027 \u0027);"},{"lineNumber":10,"author":{"gitId":"mabel-kang"},"content":"        String first;"},{"lineNumber":11,"author":{"gitId":"mabel-kang"},"content":"        if (index \u003e -1) {"},{"lineNumber":12,"author":{"gitId":"mabel-kang"},"content":"            first \u003d command.substring(0, index);"},{"lineNumber":13,"author":{"gitId":"mabel-kang"},"content":"        } else {"},{"lineNumber":14,"author":{"gitId":"mabel-kang"},"content":"            first \u003d command;"},{"lineNumber":15,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"mabel-kang"},"content":"        if(!list.contains(first.toLowerCase())){"},{"lineNumber":17,"author":{"gitId":"mabel-kang"},"content":"            throw new DukeException(\":( OOPS! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":18,"author":{"gitId":"mabel-kang"},"content":"        } else {"},{"lineNumber":19,"author":{"gitId":"mabel-kang"},"content":"            String[] secondValidation \u003d new String[]{\"todo\", \"deadline\", \"event\", \"done\", \"delete\"};"},{"lineNumber":20,"author":{"gitId":"mabel-kang"},"content":"            List\u003cString\u003e secondList \u003d Arrays.asList(secondValidation);"},{"lineNumber":21,"author":{"gitId":"mabel-kang"},"content":"            if (secondList.contains(first.toLowerCase())) {"},{"lineNumber":22,"author":{"gitId":"mabel-kang"},"content":"                if(index \u003c\u003d -1 || command.substring(index).isBlank()) {"},{"lineNumber":23,"author":{"gitId":"mabel-kang"},"content":"                    throw new DukeException(\":( OOPS! The description of a todo/deadline/event/done/delete cannot be empty!!\");"},{"lineNumber":24,"author":{"gitId":"mabel-kang"},"content":"                }"},{"lineNumber":25,"author":{"gitId":"mabel-kang"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"mabel-kang"},"content":""},{"lineNumber":29,"author":{"gitId":"mabel-kang"},"content":"    public void checkForSchedule(String command, int findSlash) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"mabel-kang"},"content":"        if ((findSlash \u003c\u003d -1) || command.endsWith(\"/\") || command.substring(findSlash + 1).isBlank()) {"},{"lineNumber":31,"author":{"gitId":"mabel-kang"},"content":"            throw new DukeException(\":( OOPS! Please input a valid time/date\");"},{"lineNumber":32,"author":{"gitId":"mabel-kang"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"mabel-kang"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"mabel-kang"},"content":"}"}],"authorContributionMap":{"mabel-kang":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mabel-kang"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"mabel-kang"},"content":"list"},{"lineNumber":3,"author":{"gitId":"mabel-kang"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"mabel-kang"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"mabel-kang"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"mabel-kang"},"content":"list"},{"lineNumber":7,"author":{"gitId":"mabel-kang"},"content":"bye"}],"authorContributionMap":{"mabel-kang":7}}]
