[{"path":"src/main/java/Chatbox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"class Chatbox {"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    private final Storage storage;"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"    private Statement statement;"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"    Chatbox(){"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"        storage \u003d new Storage();"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"    void initialize(){"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"    //accept the input"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"    void acceptInput(String input){"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"        statement \u003d new Statement(input);"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"    //execute the following command"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"    void executeCommand(){"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"        try{"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"            List\u003cString\u003e commAndArgs \u003d statement.parseStatement();"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"            String command \u003d commAndArgs.get(0);"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"            switch (command){"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"                case \"list\":"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"                    storage.listOut();"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"                    break;"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"                case \"todo\":"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":"                    storage.add(new Todo(commAndArgs.get(1).trim()));"},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"                    break;"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":"                case \"deadline\":"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"                    storage.add(new Deadline(commAndArgs.get(1).trim(),commAndArgs.get(2)));"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"                    break;"},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":"                case \"event\":"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"                    storage.add(new Event(commAndArgs.get(1).trim(),commAndArgs.get(2)));"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"                    break;"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"                case \"done\":"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"                    storage.markTaskAsDone(commAndArgs.get(1).trim());"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"                    break;"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"                case \"delete\":"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"                    storage.delete(commAndArgs.get(1).trim());"},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":"                    break;"},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":"        }catch(DukeException err){"},{"lineNumber":49,"author":{"gitId":"GJ0407790"},"content":"            String errMsg \u003d err.getMessage();"},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"            System.out.println(errMsg);"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"    void end(){"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":57,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":58}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"    private final String time;"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"    Deadline(String description, String time){"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"        this.time \u003d time;"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"    public String toString(){"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"        return String.format(\"[D][%s] %s (%s)\", getStatusIcon(), description, time);"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":13}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"class DukeException extends Exception{"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"    DukeException(String message){"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"        super(message);"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"    private final String time;"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"    Event(String description, String time){"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"        this.time \u003d time;"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"    public String toString(){"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"        return String.format(\"[E][%s] %s (%s)\", getStatusIcon(), description, time);"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":13}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"public class Main {"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    public static void main(String args[]){"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"        Chatbox chatbox \u003d new Chatbox();"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"        chatbox.initialize();"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"        String currInput \u003d \"\";"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"        while(true){"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"            currInput \u003d sc.nextLine();"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"            if(currInput.equals(\"bye\")) break;"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"            chatbox.acceptInput(currInput);"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"            chatbox.executeCommand();"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"        chatbox.end();"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"        sc.close();"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":26}},{"path":"src/main/java/Statement.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"class Statement {"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"    private final String statement;"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    private final Hashtable\u003cString, Integer\u003e argsTable;"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    Statement(String statement) {"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"        this.statement \u003d statement;"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"        argsTable \u003d new Hashtable\u003c\u003e();"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"        argsTable.put(\"list\", 0);"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"        argsTable.put(\"done\", 1);"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"        argsTable.put(\"todo\", 1);"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"        argsTable.put(\"delete\", 1);"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"        argsTable.put(\"deadline\", 2);"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"        argsTable.put(\"event\", 2);"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"    //return a list of String with the first element as the command"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"    //the second element is description and third element is time (if applicable)"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"    List\u003cString\u003e parseStatement() throws DukeException {"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"        Scanner sc \u003d new Scanner(statement);"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"        String command \u003d sc.next();"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"        List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"        result.add(command);"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"        if (!argsTable.containsKey(command))  //unknown command"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"            throw new DukeException(\"Sorry, but I don\u0027t know what \" + command + \" means. :(\");"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"        int numOfArgs \u003d argsTable.get(command);"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":"        //there are no more arguments"},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"        if(numOfArgs \u003d\u003d 0) return result;"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"        if(!sc.hasNext()){"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"            switch(command){"},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":"                case \"done\": case \"delete\":"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"                    throw new DukeException(\"OOPS! \" + command + \" requires the index of the task.\");"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"                case \"todo\":"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"                    throw new DukeException(\"OOPS! \" + command + \" requires a description.\");"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"                default:"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"                    throw new DukeException(\"OOPS! \" + command + \" requires a description and a time.\");"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":"        String rest \u003d sc.nextLine();"},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":"        String[] args \u003d rest.split(\"[/]\");"},{"lineNumber":49,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"        //missing arguments"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"        if (args.length !\u003d numOfArgs){"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"            throw new DukeException(\"OOPS! \" + command + \" requires a description and a time\");"},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":57,"author":{"gitId":"GJ0407790"},"content":"        for(int i \u003d 0; i \u003c numOfArgs; i++){"},{"lineNumber":58,"author":{"gitId":"GJ0407790"},"content":"            result.add(args[i]);"},{"lineNumber":59,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":61,"author":{"gitId":"GJ0407790"},"content":"        return result;"},{"lineNumber":62,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":63}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"class Storage {"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    private final List\u003cTask\u003e list;"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    Storage(){"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"        list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"    void add(Task task){"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"        list.add(task);"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(\"  \" + task);"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", list.size()));"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"    void listOut(){"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"        if(list.isEmpty()){"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"            System.out.println(\"There is currently no task in the list.\");"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"        }else{"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"            int index \u003d 1;"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"            for(Task t: list){"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"                System.out.println(index + \".\" + t);"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"                index++;"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"    void markTaskAsDone(String num){"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"        int index \u003d Integer.valueOf(num) - 1;"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":"        Task targetTask \u003d list.get(index);"},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"        targetTask.markAsDone();"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(\"Nice! I\u0027ve mark this task as done\");"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(targetTask);"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"    void delete(String num) throws DukeException {"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"        int index \u003d Integer.valueOf(num) - 1;"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"        //the index is not appropriate"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"        if(index \u003e\u003d list.size() || index \u003c 0)"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"            throw new DukeException(\"Please provide an appropriate index.\");"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":"        Task deletedTask \u003d list.remove(index);"},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(\"Noted, I\u0027ve removed this task: \");"},{"lineNumber":49,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(deletedTask);"},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", list.size()));"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":52}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"class Task {"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    Task(String description) {"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"    String getDescription(){"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"        return description;"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"    String getStatusIcon() {"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"        return (isDone ? \"\\u2713\" : \" \"); //return tick or X symbols"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"    void markAsDone(){"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"        isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"    public String toString(){"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":27}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"    Todo(String description){"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"    public String toString(){"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"        return String.format(\"[T][%s] %s\", getStatusIcon(), description);"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"list"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"list"}],"authorContributionMap":{"GJ0407790":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"if not exist C:\\Users\\admin\\OneDrive\\Desktop\\CS2103T\\IndividualProject\\bin mkdir C:\\Users\\admin\\OneDrive\\Desktop\\CS2103T\\IndividualProject\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"javac  -cp C:\\Users\\admin\\OneDrive\\Desktop\\CS2103T\\IndividualProject\\src\\main\\java -Xlint:none -d C:\\Users\\admin\\OneDrive\\Desktop\\CS2103T\\IndividualProject\\bin C:\\Users\\admin\\OneDrive\\Desktop\\CS2103T\\IndividualProject\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"java -classpath C:\\Users\\admin\\OneDrive\\Desktop\\CS2103T\\IndividualProject\\bin Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"GJ0407790":3,"-":18}}]
