[{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"class AddCommand extends Command{"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    AddCommand(String command, String description, String preposition, LocalDate date) {"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"        super(command, description, preposition, date, false);"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"        Task t \u003d getCorrectTask();"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"        tasks.add(t);"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"        storage.save(tasks.listOutTaskInString());"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"    Task getCorrectTask() {"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"        switch(command) {"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"            case \"todo\":"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"                return new Todo(description);"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"            case \"event\":"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"                return new Event(description, preposition, date);"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"            case \"deadline\":"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"                return new Deadline(description, preposition, date);"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"            default:"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"                return null;"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":28}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"abstract class Command {"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"    protected String command;"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"    protected String preposition;"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    protected LocalDate date;"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"    protected boolean isExit;"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"    Command(String command, String description, String preposition, LocalDate date, boolean isExit) {"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"        this.command \u003d command;"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"        this.description \u003d description;"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"        this.preposition \u003d preposition;"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"        this.date \u003d date;"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"    abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"    boolean isExit() {"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"        return this.isExit;"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":23}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"class Deadline extends Task{"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"    private final String preposition;"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    private final LocalDate date;"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"    Deadline(String description, String preposition, LocalDate date) {"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"        this.preposition \u003d preposition;"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"        this.date \u003d date;"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"    String toFileString() {"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"        return String.format(\"event %s | %s %s\", description,"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"                preposition, date.format(DateTimeFormatter.ofPattern(\"yyyy-mm-dd\")));"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"    public String toString(){"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"        String dateStr \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"        return String.format(\"[D][%s] %s (%s %s)\", getStatusIcon(), description, preposition, dateStr);"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":26}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"class DeleteCommand extends Command{"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"    DeleteCommand(String index) {"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"        super(null, index, null,null, false);"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"        Task t \u003d tasks.delete(description);"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"        ui.showDelete(t.toString(), tasks.getSize());"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"        storage.save(tasks.listOutTaskInString());"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":13}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"class DoneCommand extends Command{"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"    DoneCommand(String index) {"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"        super(null, index, null,null, false);"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"        Task t \u003d tasks.markTaskAsDone(description);"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"        ui.showDone(t.toString(), tasks.getSize());"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"        storage.save(tasks.listOutTaskInString());"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":13}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"class DukeException extends Exception{"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"    DukeException(String message){"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"        super(message);"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":6}},{"path":"src/main/java/DukeFileWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"import java.io.FileWriter;"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"class DukeFileWriter {"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"    void writeFile(String filePath, String input) throws DukeException{"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"        try {"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"            FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"            fw.write(input);"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"            fw.close();"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"        } catch(IOException e) {"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":18}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"public class Event extends Task{"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"    private final String preposition;"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    private final LocalDate date;"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"    Event(String description, String preposition, LocalDate date) {"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"        this.preposition \u003d preposition;"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"        this.date \u003ddate;"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"    String toFileString() {"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"        return String.format(\"event %s | %s %s\", description,"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"                preposition, date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"    public String toString(){"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"        String dateStr \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"        return String.format(\"[E][%s] %s (%s %s)\", getStatusIcon(), description, preposition, dateStr);"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":26}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"class ExitCommand extends Command{"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"    ExitCommand() {"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"        super(null, null, null,null, true);"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"        ui.showExit();"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":11}},{"path":"src/main/java/FileReader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"class FileReader {"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"    List\u003cTask\u003e readFile(String path) throws DukeException{"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"        try {"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"            File f \u003d new File(path);"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"            if(!f.exists()) {"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"                //create a new file and write as if the list is empty"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"                f.createNewFile();"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"                FileWriter fw \u003d new FileWriter(path);"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"                fw.write(\"Done tasks: \" + System.lineSeparator() + \"Pending tasks: \" + System.lineSeparator());"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"                fw.close();"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"                f \u003d new File(path);"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"            Scanner sc \u003d new Scanner(f);"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"            boolean isDone \u003d true;"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"            while(sc.hasNext()) {"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"                String currStr \u003d sc.nextLine();"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"                if(currStr.equals(\"Done tasks: \") || currStr.equals(\"Pending tasks: \")) {"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"                    if(currStr.equals(\"Pending tasks: \")) {"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":"                        isDone \u003d false;"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"                    }"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":"                    continue;"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"                }"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"                Task t \u003d toTask(currStr);"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"                if(isDone) {"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"                    t.markAsDone();"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":"                tasks.add(t);"},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":49,"author":{"gitId":"GJ0407790"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"            return tasks;"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"        } catch (IOException e) {"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":58,"author":{"gitId":"GJ0407790"},"content":"    Task toTask(String input) {"},{"lineNumber":59,"author":{"gitId":"GJ0407790"},"content":"            Scanner sc \u003d new Scanner(input);"},{"lineNumber":60,"author":{"gitId":"GJ0407790"},"content":"            String command \u003d sc.next();"},{"lineNumber":61,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":62,"author":{"gitId":"GJ0407790"},"content":"            String[] args \u003d sc.nextLine().split(\"[|]\");"},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":64,"author":{"gitId":"GJ0407790"},"content":"            String first \u003d args[0].trim();"},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"            String second \u003d null;"},{"lineNumber":66,"author":{"gitId":"GJ0407790"},"content":"            String preposition \u003d null;"},{"lineNumber":67,"author":{"gitId":"GJ0407790"},"content":"            LocalDate date \u003d null;"},{"lineNumber":68,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":69,"author":{"gitId":"GJ0407790"},"content":"            if(args.length \u003d\u003d 2) {"},{"lineNumber":70,"author":{"gitId":"GJ0407790"},"content":"                second \u003d args[1].trim();"},{"lineNumber":71,"author":{"gitId":"GJ0407790"},"content":"                String[] prepositionAndDate \u003d second.split(\"[\\\\s]\");"},{"lineNumber":72,"author":{"gitId":"GJ0407790"},"content":"                preposition \u003d prepositionAndDate[0];"},{"lineNumber":73,"author":{"gitId":"GJ0407790"},"content":"                date \u003d LocalDate.parse(prepositionAndDate[1]);"},{"lineNumber":74,"author":{"gitId":"GJ0407790"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":76,"author":{"gitId":"GJ0407790"},"content":"            switch(command) {"},{"lineNumber":77,"author":{"gitId":"GJ0407790"},"content":"                case \"todo\":"},{"lineNumber":78,"author":{"gitId":"GJ0407790"},"content":"                    return new Todo(first);"},{"lineNumber":79,"author":{"gitId":"GJ0407790"},"content":"                case \"event\":"},{"lineNumber":80,"author":{"gitId":"GJ0407790"},"content":"                    return new Event(first, preposition, date);"},{"lineNumber":81,"author":{"gitId":"GJ0407790"},"content":"                case \"deadline\":"},{"lineNumber":82,"author":{"gitId":"GJ0407790"},"content":"                    return  new Deadline(first, preposition, date);"},{"lineNumber":83,"author":{"gitId":"GJ0407790"},"content":"                default:"},{"lineNumber":84,"author":{"gitId":"GJ0407790"},"content":"                    return null;"},{"lineNumber":85,"author":{"gitId":"GJ0407790"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":88,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":88}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"class ListCommand extends Command{"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"    ListCommand() {"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"        super(null, null, null, null, false);"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"        ui.showList(tasks.getList());"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":12}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"public class Main {"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    private Storage storage;"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"    private Ui ui;"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    private TaskList tasks;"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"    public Main(String filePath) {"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"        ui \u003d new Ui();"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"        try {"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"        } catch (DukeException e) {"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"            ui.showLoadingError();"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"    public void run() {"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"        ui.showWelcome();"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"        boolean isExit \u003d false;"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"        while (!isExit) {"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"            try {"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"                ui.showLine(); // show the divider line (\"_______\")"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"                Statement statement \u003d new Statement(fullCommand);"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"                Command c \u003d statement.parse();"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"                c.execute(tasks, ui, storage);"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"            } catch (DukeException e) {"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":"            } finally {"},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"                ui.showLine();"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"    public static void main(String[] args) {"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"        new Main(\"../tasks.txt\").run();"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":42}},{"path":"src/main/java/Statement.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import java.util.*;"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"class Statement {"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"    private final String statement;"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    private final Hashtable\u003cString, Integer\u003e argsTable;"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"    Statement(String statement) {"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"        this.statement \u003d statement;"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"        argsTable \u003d new Hashtable\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"        argsTable.put(\"list\", 0);"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"        argsTable.put(\"bye\", 0);"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"        argsTable.put(\"done\", 1);"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"        argsTable.put(\"todo\", 1);"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"        argsTable.put(\"delete\", 1);"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"        argsTable.put(\"deadline\", 2);"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"        argsTable.put(\"event\", 2);"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"    //return a list of String with the first element as the command"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"    //the second element is description and third element is time (if applicable)"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"    List\u003cString\u003e parseStatement() throws DukeException {"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"        Scanner sc \u003d new Scanner(statement);"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"        String command \u003d sc.next();"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"        List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"        result.add(command);"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"        if (!argsTable.containsKey(command))  //unknown command"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"            throw new DukeException(\"Sorry, but I don\u0027t know what \" + command + \" means. :(\");"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"        int numOfArgs \u003d argsTable.get(command);"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"        //there are no more arguments"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"        if(numOfArgs \u003d\u003d 0) return result;"},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"        if(!sc.hasNext()){"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"            switch(command){"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"                case \"done\": case \"delete\":"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"                    throw new DukeException(\"OOPS! \" + command + \" requires the index of the task.\");"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"                case \"todo\":"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"                    throw new DukeException(\"OOPS! \" + command + \" requires a description.\");"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"                default:"},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":"                    throw new DukeException(\"OOPS! \" + command + \" requires a description and a time.\");"},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"        String rest \u003d sc.nextLine();"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"        String[] args \u003d rest.split(\"[/]\");"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"        //missing arguments"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":"        if (args.length !\u003d numOfArgs){"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"            throw new DukeException(\"OOPS! \" + command + \" requires a description and a time\");"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":58,"author":{"gitId":"GJ0407790"},"content":"        for(int i \u003d 0; i \u003c numOfArgs; i++){"},{"lineNumber":59,"author":{"gitId":"GJ0407790"},"content":"            result.add(args[i]);"},{"lineNumber":60,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":62,"author":{"gitId":"GJ0407790"},"content":"        return result;"},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"    Command parse() throws DukeException{"},{"lineNumber":66,"author":{"gitId":"GJ0407790"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"GJ0407790"},"content":"            List\u003cString\u003e parsedArgs \u003d parseStatement();"},{"lineNumber":68,"author":{"gitId":"GJ0407790"},"content":"            String command \u003d parsedArgs.get(0);"},{"lineNumber":69,"author":{"gitId":"GJ0407790"},"content":"            String first \u003d null;"},{"lineNumber":70,"author":{"gitId":"GJ0407790"},"content":"            String second \u003d null;"},{"lineNumber":71,"author":{"gitId":"GJ0407790"},"content":"            String preposition \u003d null;"},{"lineNumber":72,"author":{"gitId":"GJ0407790"},"content":"            LocalDate date \u003d null;"},{"lineNumber":73,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":74,"author":{"gitId":"GJ0407790"},"content":"            if(parsedArgs.size() \u003d\u003d 2) {"},{"lineNumber":75,"author":{"gitId":"GJ0407790"},"content":"                first \u003d parsedArgs.get(1).trim();"},{"lineNumber":76,"author":{"gitId":"GJ0407790"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":78,"author":{"gitId":"GJ0407790"},"content":"            if(parsedArgs.size() \u003d\u003d 3) {"},{"lineNumber":79,"author":{"gitId":"GJ0407790"},"content":"                second \u003d parsedArgs.get(2).trim();"},{"lineNumber":80,"author":{"gitId":"GJ0407790"},"content":"                String[] prepositionAndDate \u003d second.split(\"[\\\\s]\");"},{"lineNumber":81,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":82,"author":{"gitId":"GJ0407790"},"content":"                if(prepositionAndDate.length !\u003d 2) {"},{"lineNumber":83,"author":{"gitId":"GJ0407790"},"content":"                    throw new DukeException(\"Please provide a preposition and a date after \u0027/\u0027.\");"},{"lineNumber":84,"author":{"gitId":"GJ0407790"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":86,"author":{"gitId":"GJ0407790"},"content":"                preposition \u003d prepositionAndDate[0];"},{"lineNumber":87,"author":{"gitId":"GJ0407790"},"content":"                date \u003d LocalDate.parse(prepositionAndDate[1]);"},{"lineNumber":88,"author":{"gitId":"GJ0407790"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":90,"author":{"gitId":"GJ0407790"},"content":"            switch (command) {"},{"lineNumber":91,"author":{"gitId":"GJ0407790"},"content":"                case \"list\":"},{"lineNumber":92,"author":{"gitId":"GJ0407790"},"content":"                    return new ListCommand();"},{"lineNumber":93,"author":{"gitId":"GJ0407790"},"content":"                case \"bye\":"},{"lineNumber":94,"author":{"gitId":"GJ0407790"},"content":"                    return new ExitCommand();"},{"lineNumber":95,"author":{"gitId":"GJ0407790"},"content":"                case \"done\":"},{"lineNumber":96,"author":{"gitId":"GJ0407790"},"content":"                    return new DoneCommand(first);"},{"lineNumber":97,"author":{"gitId":"GJ0407790"},"content":"                case \"delete\":"},{"lineNumber":98,"author":{"gitId":"GJ0407790"},"content":"                    return new DeleteCommand(first);"},{"lineNumber":99,"author":{"gitId":"GJ0407790"},"content":"                case \"todo\": case \"deadline\": case \"event\":"},{"lineNumber":100,"author":{"gitId":"GJ0407790"},"content":"                    return new AddCommand(command, first, preposition, date);"},{"lineNumber":101,"author":{"gitId":"GJ0407790"},"content":"                default:"},{"lineNumber":102,"author":{"gitId":"GJ0407790"},"content":"                    return null;"},{"lineNumber":103,"author":{"gitId":"GJ0407790"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"GJ0407790"},"content":"        } catch(DateTimeParseException e) {"},{"lineNumber":105,"author":{"gitId":"GJ0407790"},"content":"            throw new DukeException(\"Date must be in the format yyyy-mm-dd.\");"},{"lineNumber":106,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":108,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":109}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"class Storage {"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"    private String filePath;"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"    Storage(String filePath) {"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"    List\u003cTask\u003e load() throws DukeException{"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"        FileReader fr \u003d new FileReader();"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"        return fr.readFile(filePath);"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"    void save(String modifiedResult) throws DukeException{"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"        DukeFileWriter fw \u003d new DukeFileWriter();"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"        fw.writeFile(filePath, modifiedResult);"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":23}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"class Task {"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    Task(String description) {"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"    String getDescription(){"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"        return description;"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"    boolean getIsDone() {"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"        return isDone;"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"    String getStatusIcon() {"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"        return (isDone ? \"\\u2713\" : \" \"); //return tick or X symbols"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"    void markAsDone(){"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"        isDone \u003d true;"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"    String toFileString() {"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"        return \"\";"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":"    public String toString(){"},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"    String[] splitPrepositionAndTime(String input) {"},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":"        Scanner sc \u003d new Scanner(input);"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"        return sc.nextLine().split(\"[\\\\s]\");"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":43}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"class TaskList {"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    private final List\u003cTask\u003e list;"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    TaskList() {"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"    TaskList(List\u003cTask\u003e list) {"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"        this.list \u003d list;"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"    public List\u003cTask\u003e getList() {"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"        return list;"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"    public int getSize() {"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"        return list.size();"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"    void add(Task task){"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"        list.add(task);"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"    Task delete(String num) throws DukeException{"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"        int index \u003d Integer.valueOf(num) - 1;"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"        if(index \u003c 0 || index \u003e\u003d list.size()) {"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"            throw new DukeException(\"Please enter an appropriate index.\");"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"        return list.remove(index);"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"    Task markTaskAsDone(String num) throws DukeException{"},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":"        int index \u003d Integer.valueOf(num) - 1;"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"        if(index \u003c 0 || index \u003e\u003d list.size()) {"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"            throw new DukeException(\"Please enter an appropriate index.\");"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"        Task t \u003d list.get(index);"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"        t.markAsDone();"},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":"        return t;"},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"    String listOutTaskInString() {"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"        String res \u003d \"\";"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"        res +\u003d \"Done tasks: \" + System.lineSeparator();"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"        for(Task t: list) {"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"            if(t.getIsDone()) {"},{"lineNumber":57,"author":{"gitId":"GJ0407790"},"content":"                res +\u003d t.toFileString() + System.lineSeparator();"},{"lineNumber":58,"author":{"gitId":"GJ0407790"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":61,"author":{"gitId":"GJ0407790"},"content":"        res +\u003d \"Pending tasks: \" + System.lineSeparator();"},{"lineNumber":62,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":"        for(Task t: list) {"},{"lineNumber":64,"author":{"gitId":"GJ0407790"},"content":"            if(!t.getIsDone()) {"},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"                res +\u003d t.toFileString() + System.lineSeparator();"},{"lineNumber":66,"author":{"gitId":"GJ0407790"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":69,"author":{"gitId":"GJ0407790"},"content":"        return res;"},{"lineNumber":70,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":71}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"    Todo(String description){"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"    String toFileString() {"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"        return String.format(\"todo %s\", description);"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"    public String toString(){"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"        return String.format(\"[T][%s] %s\", getStatusIcon(), description);"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":16}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"class Ui {"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"    private Scanner sc;"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"    Ui() {"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"    String readCommand() {"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"        return sc.nextLine();"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"    void showWelcome() {"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"    void showLine() {"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(\"_______________________________________________________\");"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"    void showError(String msg) {"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(msg);"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"    void showExit() {"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"        sc.close();"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"    void showLoadingError() {"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(\"Unable to load the file. Empty list created.\");"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":"    void showAdd(String task, int size) {"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"        showTaskAndSize(task, size);"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"    void showDelete(String task, int size) {"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(\"Noted, I\u0027ve removed this task: \");"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"        showTaskAndSize(task, size);"},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":"    void showDone(String task, int size) {"},{"lineNumber":49,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(\"Nice! I\u0027ve mark this task as done\");"},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"        showTaskAndSize(task, size);"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"    void showTaskAndSize(String task, int size) {"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(task);"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", size));"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"GJ0407790"},"content":""},{"lineNumber":58,"author":{"gitId":"GJ0407790"},"content":"    void showList(List\u003cTask\u003e list) {"},{"lineNumber":59,"author":{"gitId":"GJ0407790"},"content":"        if(list.isEmpty()){"},{"lineNumber":60,"author":{"gitId":"GJ0407790"},"content":"            System.out.println(\"There is currently no task in the list.\");"},{"lineNumber":61,"author":{"gitId":"GJ0407790"},"content":"        }else{"},{"lineNumber":62,"author":{"gitId":"GJ0407790"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":"            int index \u003d 1;"},{"lineNumber":64,"author":{"gitId":"GJ0407790"},"content":"            for(Task t: list){"},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"                System.out.println(index + \".\" + t);"},{"lineNumber":66,"author":{"gitId":"GJ0407790"},"content":"                index++;"},{"lineNumber":67,"author":{"gitId":"GJ0407790"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"GJ0407790"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"GJ0407790"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"GJ0407790"},"content":"}"}],"authorContributionMap":{"GJ0407790":70}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"list"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"list"}],"authorContributionMap":{"GJ0407790":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"if not exist C:\\Users\\admin\\OneDrive\\Desktop\\CS2103T\\IndividualProject\\bin mkdir C:\\Users\\admin\\OneDrive\\Desktop\\CS2103T\\IndividualProject\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"javac  -cp C:\\Users\\admin\\OneDrive\\Desktop\\CS2103T\\IndividualProject\\src\\main\\java -Xlint:none -d C:\\Users\\admin\\OneDrive\\Desktop\\CS2103T\\IndividualProject\\bin C:\\Users\\admin\\OneDrive\\Desktop\\CS2103T\\IndividualProject\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"java -classpath C:\\Users\\admin\\OneDrive\\Desktop\\CS2103T\\IndividualProject\\bin Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"GJ0407790":3,"-":18}}]
