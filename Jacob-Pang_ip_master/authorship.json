[{"path":"src/main/data/A0183450J.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-Pang"},"content":"T :: 1 ::  smth :: 2021-01-26 2049"},{"lineNumber":2,"author":{"gitId":"Jacob-Pang"},"content":"E :: 0 :: smth else :: 2021-01-26 2053 :: 2021-06-01 2359"}],"authorContributionMap":{"Jacob-Pang":2}},{"path":"src/main/java/DukeBody/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-Pang"},"content":"package DukeBody;"},{"lineNumber":2,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":3,"author":{"gitId":"Jacob-Pang"},"content":"import DukeTask.*;"},{"lineNumber":4,"author":{"gitId":"Jacob-Pang"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"Jacob-Pang"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Jacob-Pang"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"Jacob-Pang"},"content":"    private Ui ui;"},{"lineNumber":10,"author":{"gitId":"Jacob-Pang"},"content":"    private Storage storage;"},{"lineNumber":11,"author":{"gitId":"Jacob-Pang"},"content":"    private TaskList tasks;"},{"lineNumber":12,"author":{"gitId":"Jacob-Pang"},"content":"    private String username;"},{"lineNumber":13,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":14,"author":{"gitId":"Jacob-Pang"},"content":"    public Duke (String username) {"},{"lineNumber":15,"author":{"gitId":"Jacob-Pang"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":16,"author":{"gitId":"Jacob-Pang"},"content":"        this.ui.brace();"},{"lineNumber":17,"author":{"gitId":"Jacob-Pang"},"content":"        this.ui.greet();"},{"lineNumber":18,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":19,"author":{"gitId":"Jacob-Pang"},"content":"        this.username \u003d username;"},{"lineNumber":20,"author":{"gitId":"Jacob-Pang"},"content":"        this.storage \u003d new Storage(this.username);"},{"lineNumber":21,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":22,"author":{"gitId":"Jacob-Pang"},"content":"        this.ui.storageReading(this.username);"},{"lineNumber":23,"author":{"gitId":"Jacob-Pang"},"content":"        this.tasks \u003d this.storage.readTasks();"},{"lineNumber":24,"author":{"gitId":"Jacob-Pang"},"content":"        "},{"lineNumber":25,"author":{"gitId":"Jacob-Pang"},"content":"        this.ui.brace();"},{"lineNumber":26,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":28,"author":{"gitId":"Jacob-Pang"},"content":"    public void run () {"},{"lineNumber":29,"author":{"gitId":"Jacob-Pang"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":30,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":31,"author":{"gitId":"Jacob-Pang"},"content":"        user_active: while (true) {"},{"lineNumber":32,"author":{"gitId":"Jacob-Pang"},"content":"            String command \u003d scanner.next();"},{"lineNumber":33,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":34,"author":{"gitId":"Jacob-Pang"},"content":"            this.ui.brace();"},{"lineNumber":35,"author":{"gitId":"Jacob-Pang"},"content":"            try {"},{"lineNumber":36,"author":{"gitId":"Jacob-Pang"},"content":"                switch (command) {"},{"lineNumber":37,"author":{"gitId":"Jacob-Pang"},"content":"                    case \"bye\":"},{"lineNumber":38,"author":{"gitId":"Jacob-Pang"},"content":"                        break user_active;"},{"lineNumber":39,"author":{"gitId":"Jacob-Pang"},"content":"                    "},{"lineNumber":40,"author":{"gitId":"Jacob-Pang"},"content":"                    case \"list\":"},{"lineNumber":41,"author":{"gitId":"Jacob-Pang"},"content":"                        for (int i \u003d 0; i \u003c this.tasks.size(); ++ i) {"},{"lineNumber":42,"author":{"gitId":"Jacob-Pang"},"content":"                            this.ui.print(i + 1 + \". \" + this.tasks.get(i).taskInformation("},{"lineNumber":43,"author":{"gitId":"Jacob-Pang"},"content":"                                    Ui.outputFormat));"},{"lineNumber":44,"author":{"gitId":"Jacob-Pang"},"content":"                        }"},{"lineNumber":45,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":46,"author":{"gitId":"Jacob-Pang"},"content":"                        this.ui.print(\"You have \" + this.tasks.outstandingTasks().size() "},{"lineNumber":47,"author":{"gitId":"Jacob-Pang"},"content":"                                + \" undone tasks.\");"},{"lineNumber":48,"author":{"gitId":"Jacob-Pang"},"content":"                        break;"},{"lineNumber":49,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":50,"author":{"gitId":"Jacob-Pang"},"content":"                    case \"undone\":"},{"lineNumber":51,"author":{"gitId":"Jacob-Pang"},"content":"                        ArrayList\u003cTask\u003e undoneTasks \u003d this.tasks.outstandingTasks();"},{"lineNumber":52,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":53,"author":{"gitId":"Jacob-Pang"},"content":"                        for (int i \u003d 0; i \u003c undoneTasks.size(); ++ i) {"},{"lineNumber":54,"author":{"gitId":"Jacob-Pang"},"content":"                            this.ui.print(i + 1 + \". \" + undoneTasks.get(i).taskInformation("},{"lineNumber":55,"author":{"gitId":"Jacob-Pang"},"content":"                                Ui.outputFormat));"},{"lineNumber":56,"author":{"gitId":"Jacob-Pang"},"content":"                        }"},{"lineNumber":57,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":58,"author":{"gitId":"Jacob-Pang"},"content":"                        break;"},{"lineNumber":59,"author":{"gitId":"Jacob-Pang"},"content":"                    "},{"lineNumber":60,"author":{"gitId":"Jacob-Pang"},"content":"                    case \"done\":"},{"lineNumber":61,"author":{"gitId":"Jacob-Pang"},"content":"                        int taskIndex \u003d scanner.nextInt();"},{"lineNumber":62,"author":{"gitId":"Jacob-Pang"},"content":"                        this.tasks.markAsDone(taskIndex, Ui.outputFormat);"},{"lineNumber":63,"author":{"gitId":"Jacob-Pang"},"content":"                        break;"},{"lineNumber":64,"author":{"gitId":"Jacob-Pang"},"content":"                    "},{"lineNumber":65,"author":{"gitId":"Jacob-Pang"},"content":"                    case \"todo\":"},{"lineNumber":66,"author":{"gitId":"Jacob-Pang"},"content":"                        this.tasks.add(new ToDo(scanner.nextLine()));"},{"lineNumber":67,"author":{"gitId":"Jacob-Pang"},"content":"                        this.ui.addedTask(this.tasks);"},{"lineNumber":68,"author":{"gitId":"Jacob-Pang"},"content":"                        break;"},{"lineNumber":69,"author":{"gitId":"Jacob-Pang"},"content":"                    "},{"lineNumber":70,"author":{"gitId":"Jacob-Pang"},"content":"                    case \"event\":"},{"lineNumber":71,"author":{"gitId":"Jacob-Pang"},"content":"                        this.tasks.add(Parser.parseNewTaskCommand("},{"lineNumber":72,"author":{"gitId":"Jacob-Pang"},"content":"                                scanner.nextLine().trim(), \"/at\"));"},{"lineNumber":73,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":74,"author":{"gitId":"Jacob-Pang"},"content":"                        this.ui.addedTask(this.tasks);"},{"lineNumber":75,"author":{"gitId":"Jacob-Pang"},"content":"                        break;"},{"lineNumber":76,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":77,"author":{"gitId":"Jacob-Pang"},"content":"                    case \"deadline\":"},{"lineNumber":78,"author":{"gitId":"Jacob-Pang"},"content":"                        this.tasks.add(Parser.parseNewTaskCommand("},{"lineNumber":79,"author":{"gitId":"Jacob-Pang"},"content":"                                scanner.nextLine().trim(), \"/by\"));"},{"lineNumber":80,"author":{"gitId":"Jacob-Pang"},"content":"                        "},{"lineNumber":81,"author":{"gitId":"Jacob-Pang"},"content":"                        this.ui.addedTask(this.tasks);"},{"lineNumber":82,"author":{"gitId":"Jacob-Pang"},"content":"                        break;"},{"lineNumber":83,"author":{"gitId":"Jacob-Pang"},"content":"                    "},{"lineNumber":84,"author":{"gitId":"Jacob-Pang"},"content":"                    case \"delete\":"},{"lineNumber":85,"author":{"gitId":"Jacob-Pang"},"content":"                        this.ui.removedTask(this.tasks, this.tasks.remove("},{"lineNumber":86,"author":{"gitId":"Jacob-Pang"},"content":"                                scanner.nextInt() - 1));"},{"lineNumber":87,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":88,"author":{"gitId":"Jacob-Pang"},"content":"                        break;"},{"lineNumber":89,"author":{"gitId":"Jacob-Pang"},"content":"                    default:"},{"lineNumber":90,"author":{"gitId":"Jacob-Pang"},"content":"                        this.ui.confuzzled();"},{"lineNumber":91,"author":{"gitId":"Jacob-Pang"},"content":"                    }"},{"lineNumber":92,"author":{"gitId":"Jacob-Pang"},"content":"            } catch (DateTimeParseException E) {"},{"lineNumber":93,"author":{"gitId":"Jacob-Pang"},"content":"                this.ui.print(\"! Input datetime must be of format yyyy-MM-dd HHmm\");"},{"lineNumber":94,"author":{"gitId":"Jacob-Pang"},"content":"            } catch (Exception E) {"},{"lineNumber":95,"author":{"gitId":"Jacob-Pang"},"content":"                this.ui.print(E.getMessage());"},{"lineNumber":96,"author":{"gitId":"Jacob-Pang"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":98,"author":{"gitId":"Jacob-Pang"},"content":"            this.ui.brace();"},{"lineNumber":99,"author":{"gitId":"Jacob-Pang"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":101,"author":{"gitId":"Jacob-Pang"},"content":"        scanner.close();"},{"lineNumber":102,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":103,"author":{"gitId":"Jacob-Pang"},"content":"        try {"},{"lineNumber":104,"author":{"gitId":"Jacob-Pang"},"content":"            this.storage.saveTasks(this.tasks);"},{"lineNumber":105,"author":{"gitId":"Jacob-Pang"},"content":"        } catch (Exception E) {"},{"lineNumber":106,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":107,"author":{"gitId":"Jacob-Pang"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":109,"author":{"gitId":"Jacob-Pang"},"content":"        this.ui.byebye();"},{"lineNumber":110,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":112,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":113,"author":{"gitId":"Jacob-Pang"},"content":"    public static void main(String[] args) {"},{"lineNumber":114,"author":{"gitId":"Jacob-Pang"},"content":"        new Duke(\"A0183450J\").run();"},{"lineNumber":115,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"Jacob-Pang"},"content":"}"}],"authorContributionMap":{"Jacob-Pang":115,"-":1}},{"path":"src/main/java/DukeBody/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-Pang"},"content":"package DukeBody;"},{"lineNumber":2,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":3,"author":{"gitId":"Jacob-Pang"},"content":"import DukeTask.*;"},{"lineNumber":4,"author":{"gitId":"Jacob-Pang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"Jacob-Pang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"Jacob-Pang"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":8,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":9,"author":{"gitId":"Jacob-Pang"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"Jacob-Pang"},"content":"    // exception classes"},{"lineNumber":11,"author":{"gitId":"Jacob-Pang"},"content":"    public static class InvalidTaskTypeException extends Exception {"},{"lineNumber":12,"author":{"gitId":"Jacob-Pang"},"content":"        private static final long serialVersionUID \u003d 2286254111257413392L;"},{"lineNumber":13,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":14,"author":{"gitId":"Jacob-Pang"},"content":"        public InvalidTaskTypeException (String taskType) {"},{"lineNumber":15,"author":{"gitId":"Jacob-Pang"},"content":"            super(\"! Encountered Task Type: \" + taskType + \" during parsing of command\");"},{"lineNumber":16,"author":{"gitId":"Jacob-Pang"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":19,"author":{"gitId":"Jacob-Pang"},"content":"    public static class EmptySubcommandException extends Exception {"},{"lineNumber":20,"author":{"gitId":"Jacob-Pang"},"content":"        private static final long serialVersionUID \u003d 1L;"},{"lineNumber":21,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":22,"author":{"gitId":"Jacob-Pang"},"content":"        public EmptySubcommandException(String subcommand) {"},{"lineNumber":23,"author":{"gitId":"Jacob-Pang"},"content":"            super(\"! The subcommand \" + subcommand + \" cannot be empty\");"},{"lineNumber":24,"author":{"gitId":"Jacob-Pang"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":27,"author":{"gitId":"Jacob-Pang"},"content":"    // members"},{"lineNumber":28,"author":{"gitId":"Jacob-Pang"},"content":"    private static String delimiter \u003d \" :: \";"},{"lineNumber":29,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":30,"author":{"gitId":"Jacob-Pang"},"content":"    protected final static DateTimeFormatter parseFormat \u003d DateTimeFormatter.ofPattern("},{"lineNumber":31,"author":{"gitId":"Jacob-Pang"},"content":"            \"yyyy-MM-dd HHmm\");"},{"lineNumber":32,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":33,"author":{"gitId":"Jacob-Pang"},"content":"    // methods"},{"lineNumber":34,"author":{"gitId":"Jacob-Pang"},"content":"    public static String taskToCommand (Task task) {"},{"lineNumber":35,"author":{"gitId":"Jacob-Pang"},"content":"        return task.toCommand(Parser.delimiter, Parser.parseFormat);"},{"lineNumber":36,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":38,"author":{"gitId":"Jacob-Pang"},"content":"    public static Task commandToTask (String command) throws Parser.InvalidTaskTypeException, "},{"lineNumber":39,"author":{"gitId":"Jacob-Pang"},"content":"            Task.EmptyDescriptionException {"},{"lineNumber":40,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":41,"author":{"gitId":"Jacob-Pang"},"content":"        // format \u003d type :: state :: description :: createdTime :: others"},{"lineNumber":42,"author":{"gitId":"Jacob-Pang"},"content":"        String[] parsedCommand \u003d command.split(Parser.delimiter);"},{"lineNumber":43,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":44,"author":{"gitId":"Jacob-Pang"},"content":"        switch (parsedCommand[0]) {"},{"lineNumber":45,"author":{"gitId":"Jacob-Pang"},"content":"        case \"T\":"},{"lineNumber":46,"author":{"gitId":"Jacob-Pang"},"content":"            return new ToDo(parsedCommand[2], (Integer.parseInt(parsedCommand[1]) \u003e 0),"},{"lineNumber":47,"author":{"gitId":"Jacob-Pang"},"content":"                    LocalDateTime.parse(parsedCommand[3], Parser.parseFormat));"},{"lineNumber":48,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":49,"author":{"gitId":"Jacob-Pang"},"content":"        case \"E\":"},{"lineNumber":50,"author":{"gitId":"Jacob-Pang"},"content":"            return new Event(parsedCommand[2], (Integer.parseInt(parsedCommand[1]) \u003e 0),"},{"lineNumber":51,"author":{"gitId":"Jacob-Pang"},"content":"                    LocalDateTime.parse(parsedCommand[3], Parser.parseFormat),"},{"lineNumber":52,"author":{"gitId":"Jacob-Pang"},"content":"                    LocalDateTime.parse(parsedCommand[4], Parser.parseFormat));"},{"lineNumber":53,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":54,"author":{"gitId":"Jacob-Pang"},"content":"        case \"D\":"},{"lineNumber":55,"author":{"gitId":"Jacob-Pang"},"content":"            return new Deadline(parsedCommand[2], (Integer.parseInt(parsedCommand[1]) \u003e 0),"},{"lineNumber":56,"author":{"gitId":"Jacob-Pang"},"content":"                    LocalDateTime.parse(parsedCommand[3], Parser.parseFormat),"},{"lineNumber":57,"author":{"gitId":"Jacob-Pang"},"content":"                    LocalDateTime.parse(parsedCommand[4], Parser.parseFormat));"},{"lineNumber":58,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":59,"author":{"gitId":"Jacob-Pang"},"content":"        default:"},{"lineNumber":60,"author":{"gitId":"Jacob-Pang"},"content":"            throw new Parser.InvalidTaskTypeException(parsedCommand[0]);"},{"lineNumber":61,"author":{"gitId":"Jacob-Pang"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":64,"author":{"gitId":"Jacob-Pang"},"content":"    public static Event parseNewTaskCommand (String command, String subcommand) "},{"lineNumber":65,"author":{"gitId":"Jacob-Pang"},"content":"            throws Parser.EmptySubcommandException, Task.EmptyDescriptionException, "},{"lineNumber":66,"author":{"gitId":"Jacob-Pang"},"content":"            DateTimeParseException {"},{"lineNumber":67,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":68,"author":{"gitId":"Jacob-Pang"},"content":"        int subcommandIndex \u003d command.indexOf(subcommand);"},{"lineNumber":69,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":70,"author":{"gitId":"Jacob-Pang"},"content":"        if (subcommandIndex \u003c 0) {"},{"lineNumber":71,"author":{"gitId":"Jacob-Pang"},"content":"            throw new Parser.EmptySubcommandException(subcommand);"},{"lineNumber":72,"author":{"gitId":"Jacob-Pang"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":74,"author":{"gitId":"Jacob-Pang"},"content":"        return new Event (command.substring(0, subcommandIndex - 1).trim(), "},{"lineNumber":75,"author":{"gitId":"Jacob-Pang"},"content":"                LocalDateTime.parse(command.substring(subcommandIndex + 3).trim(),"},{"lineNumber":76,"author":{"gitId":"Jacob-Pang"},"content":"                Parser.parseFormat));"},{"lineNumber":77,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"Jacob-Pang"},"content":"}"}],"authorContributionMap":{"Jacob-Pang":78}},{"path":"src/main/java/DukeBody/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-Pang"},"content":"package DukeBody;"},{"lineNumber":2,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":3,"author":{"gitId":"Jacob-Pang"},"content":"import DukeTask.*;"},{"lineNumber":4,"author":{"gitId":"Jacob-Pang"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"Jacob-Pang"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"Jacob-Pang"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"Jacob-Pang"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"Jacob-Pang"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":10,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":11,"author":{"gitId":"Jacob-Pang"},"content":"public class Storage {"},{"lineNumber":12,"author":{"gitId":"Jacob-Pang"},"content":"    // members"},{"lineNumber":13,"author":{"gitId":"Jacob-Pang"},"content":"    private String DirPath;"},{"lineNumber":14,"author":{"gitId":"Jacob-Pang"},"content":"    private String Username;"},{"lineNumber":15,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":16,"author":{"gitId":"Jacob-Pang"},"content":"    public Storage (String username) {"},{"lineNumber":17,"author":{"gitId":"Jacob-Pang"},"content":"        this(Paths.get(\"\").toAbsolutePath().toString() + File.separator + \"src\" "},{"lineNumber":18,"author":{"gitId":"Jacob-Pang"},"content":"                + File.separator + \"main\" + File.separator + \"data\", username);"},{"lineNumber":19,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":21,"author":{"gitId":"Jacob-Pang"},"content":"    public Storage (String dirPath, String username) {"},{"lineNumber":22,"author":{"gitId":"Jacob-Pang"},"content":"        this.DirPath \u003d dirPath;"},{"lineNumber":23,"author":{"gitId":"Jacob-Pang"},"content":"        this.Username \u003d username;"},{"lineNumber":24,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":26,"author":{"gitId":"Jacob-Pang"},"content":"    public TaskList readTasks () {"},{"lineNumber":27,"author":{"gitId":"Jacob-Pang"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":28,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":29,"author":{"gitId":"Jacob-Pang"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"Jacob-Pang"},"content":"            File dataFile \u003d new File(this.DirPath + File.separator "},{"lineNumber":31,"author":{"gitId":"Jacob-Pang"},"content":"                    + this.Username + \".txt\");"},{"lineNumber":32,"author":{"gitId":"Jacob-Pang"},"content":"                "},{"lineNumber":33,"author":{"gitId":"Jacob-Pang"},"content":"            Scanner scanner \u003d new Scanner(dataFile);"},{"lineNumber":34,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":35,"author":{"gitId":"Jacob-Pang"},"content":"            while (scanner.hasNextLine()) {"},{"lineNumber":36,"author":{"gitId":"Jacob-Pang"},"content":"                tasks.add(Parser.commandToTask(scanner.nextLine()));"},{"lineNumber":37,"author":{"gitId":"Jacob-Pang"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":39,"author":{"gitId":"Jacob-Pang"},"content":"            scanner.close();"},{"lineNumber":40,"author":{"gitId":"Jacob-Pang"},"content":"        } catch (IOException | Parser.InvalidTaskTypeException | "},{"lineNumber":41,"author":{"gitId":"Jacob-Pang"},"content":"                Task.EmptyDescriptionException E) {"},{"lineNumber":42,"author":{"gitId":"Jacob-Pang"},"content":"          // empty data"},{"lineNumber":43,"author":{"gitId":"Jacob-Pang"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":45,"author":{"gitId":"Jacob-Pang"},"content":"        return tasks;"},{"lineNumber":46,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":48,"author":{"gitId":"Jacob-Pang"},"content":"    public void saveTasks (TaskList tasks) throws IOException {"},{"lineNumber":49,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":50,"author":{"gitId":"Jacob-Pang"},"content":"        File dataDirectory \u003d new File(this.DirPath);"},{"lineNumber":51,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":52,"author":{"gitId":"Jacob-Pang"},"content":"        if (! dataDirectory.exists()) {"},{"lineNumber":53,"author":{"gitId":"Jacob-Pang"},"content":"            dataDirectory.mkdir();"},{"lineNumber":54,"author":{"gitId":"Jacob-Pang"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":56,"author":{"gitId":"Jacob-Pang"},"content":"        FileWriter writer \u003d new FileWriter(this.DirPath + File.separator "},{"lineNumber":57,"author":{"gitId":"Jacob-Pang"},"content":"                + this.Username + \".txt\");"},{"lineNumber":58,"author":{"gitId":"Jacob-Pang"},"content":"  "},{"lineNumber":59,"author":{"gitId":"Jacob-Pang"},"content":"        for (Task task: tasks) {"},{"lineNumber":60,"author":{"gitId":"Jacob-Pang"},"content":"            writer.write(Parser.taskToCommand(task) + \"\\n\");"},{"lineNumber":61,"author":{"gitId":"Jacob-Pang"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":63,"author":{"gitId":"Jacob-Pang"},"content":"        writer.close();"},{"lineNumber":64,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Jacob-Pang"},"content":"}"}],"authorContributionMap":{"Jacob-Pang":65}},{"path":"src/main/java/DukeBody/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-Pang"},"content":"package DukeBody;"},{"lineNumber":2,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":3,"author":{"gitId":"Jacob-Pang"},"content":"import DukeTask.*;"},{"lineNumber":4,"author":{"gitId":"Jacob-Pang"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Jacob-Pang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":7,"author":{"gitId":"Jacob-Pang"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {"},{"lineNumber":8,"author":{"gitId":"Jacob-Pang"},"content":"    private static final long serialVersionUID \u003d 6951591508963981354L;"},{"lineNumber":9,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":10,"author":{"gitId":"Jacob-Pang"},"content":"    // accessors"},{"lineNumber":11,"author":{"gitId":"Jacob-Pang"},"content":"    public ArrayList\u003cTask\u003e outstandingTasks () {"},{"lineNumber":12,"author":{"gitId":"Jacob-Pang"},"content":"        ArrayList\u003cTask\u003e outstanding \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":13,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":14,"author":{"gitId":"Jacob-Pang"},"content":"        for (Task task: this) {"},{"lineNumber":15,"author":{"gitId":"Jacob-Pang"},"content":"            if (! task.isDone()) {"},{"lineNumber":16,"author":{"gitId":"Jacob-Pang"},"content":"                outstanding.add(task);"},{"lineNumber":17,"author":{"gitId":"Jacob-Pang"},"content":"            }"},{"lineNumber":18,"author":{"gitId":"Jacob-Pang"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":20,"author":{"gitId":"Jacob-Pang"},"content":"        return outstanding;"},{"lineNumber":21,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":23,"author":{"gitId":"Jacob-Pang"},"content":"    // mutators"},{"lineNumber":24,"author":{"gitId":"Jacob-Pang"},"content":"    public void markAsDone (int taskIndex, DateTimeFormatter outputFormat) "},{"lineNumber":25,"author":{"gitId":"Jacob-Pang"},"content":"            throws IndexOutOfBoundsException {"},{"lineNumber":26,"author":{"gitId":"Jacob-Pang"},"content":"        this.get(taskIndex - 1).markAsDone(outputFormat);"},{"lineNumber":27,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":29,"author":{"gitId":"Jacob-Pang"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"Jacob-Pang"},"content":"    public Task remove (int taskIndex) throws IndexOutOfBoundsException {"},{"lineNumber":31,"author":{"gitId":"Jacob-Pang"},"content":"        return super.remove(taskIndex - 1);"},{"lineNumber":32,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Jacob-Pang"},"content":"}"}],"authorContributionMap":{"Jacob-Pang":33}},{"path":"src/main/java/DukeBody/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-Pang"},"content":"package DukeBody;"},{"lineNumber":2,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":3,"author":{"gitId":"Jacob-Pang"},"content":"import DukeTask.*;"},{"lineNumber":4,"author":{"gitId":"Jacob-Pang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":6,"author":{"gitId":"Jacob-Pang"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"Jacob-Pang"},"content":"    public final static DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern("},{"lineNumber":8,"author":{"gitId":"Jacob-Pang"},"content":"        \"eee, dd MMM yyyy HH:mm a\");"},{"lineNumber":9,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":10,"author":{"gitId":"Jacob-Pang"},"content":"    public void print (String... messages) {"},{"lineNumber":11,"author":{"gitId":"Jacob-Pang"},"content":"        for (String message: messages) {"},{"lineNumber":12,"author":{"gitId":"Jacob-Pang"},"content":"            System.out.println(\"    \" + message);"},{"lineNumber":13,"author":{"gitId":"Jacob-Pang"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":16,"author":{"gitId":"Jacob-Pang"},"content":"    public void brace () {"},{"lineNumber":17,"author":{"gitId":"Jacob-Pang"},"content":"        print(\"__________________________________________________\""},{"lineNumber":18,"author":{"gitId":"Jacob-Pang"},"content":"                + \"__________________________________________________\");"},{"lineNumber":19,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":21,"author":{"gitId":"Jacob-Pang"},"content":"    public void storageReading (String username) {"},{"lineNumber":22,"author":{"gitId":"Jacob-Pang"},"content":"        print(\"Reading tasks from userdata for User: \" + username);"},{"lineNumber":23,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":25,"author":{"gitId":"Jacob-Pang"},"content":"    public void greet () {"},{"lineNumber":26,"author":{"gitId":"Jacob-Pang"},"content":"        print(\"I am\", "},{"lineNumber":27,"author":{"gitId":"Jacob-Pang"},"content":"                \" ____        _        \", "},{"lineNumber":28,"author":{"gitId":"Jacob-Pang"},"content":"                \"|  _ \\\\ _   _| | _____ \","},{"lineNumber":29,"author":{"gitId":"Jacob-Pang"},"content":"                \"| | | | | | | |/ / _ \\\\\","},{"lineNumber":30,"author":{"gitId":"Jacob-Pang"},"content":"                \"| |_| | |_| |   \u003c  __/\","},{"lineNumber":31,"author":{"gitId":"Jacob-Pang"},"content":"                \"|____/ \\\\__,_|_|\\\\_\\\\___|\","},{"lineNumber":32,"author":{"gitId":"Jacob-Pang"},"content":"                \"at your service.\");"},{"lineNumber":33,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":35,"author":{"gitId":"Jacob-Pang"},"content":"    public void addedTask (TaskList tasks) {"},{"lineNumber":36,"author":{"gitId":"Jacob-Pang"},"content":"        print(\"Added task:\");"},{"lineNumber":37,"author":{"gitId":"Jacob-Pang"},"content":"        print(tasks.get(tasks.size() - 1).taskInformation(Ui.outputFormat));"},{"lineNumber":38,"author":{"gitId":"Jacob-Pang"},"content":"        print(\"You now have \" + tasks.size() + \" tasks.\");"},{"lineNumber":39,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":41,"author":{"gitId":"Jacob-Pang"},"content":"    public void removedTask (TaskList tasks, Task task) {"},{"lineNumber":42,"author":{"gitId":"Jacob-Pang"},"content":"        print(\"Removed task:\", task.taskInformation(Ui.outputFormat), \"You now have \" "},{"lineNumber":43,"author":{"gitId":"Jacob-Pang"},"content":"            + tasks.size() + \" tasks.\");"},{"lineNumber":44,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":46,"author":{"gitId":"Jacob-Pang"},"content":"    public void confuzzled () {"},{"lineNumber":47,"author":{"gitId":"Jacob-Pang"},"content":"        print(\"WHaT dO YoU MeAN ?! .___.\");"},{"lineNumber":48,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":50,"author":{"gitId":"Jacob-Pang"},"content":"    public void byebye () {"},{"lineNumber":51,"author":{"gitId":"Jacob-Pang"},"content":"        print(\"Byebye, come back again soon! :D\");"},{"lineNumber":52,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Jacob-Pang"},"content":"}"}],"authorContributionMap":{"Jacob-Pang":53}},{"path":"src/main/java/DukeTask/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-Pang"},"content":"package DukeTask;"},{"lineNumber":2,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":3,"author":{"gitId":"Jacob-Pang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Jacob-Pang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":6,"author":{"gitId":"Jacob-Pang"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"Jacob-Pang"},"content":"    private LocalDateTime by;"},{"lineNumber":8,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":9,"author":{"gitId":"Jacob-Pang"},"content":"    public Deadline (String description, LocalDateTime by)"},{"lineNumber":10,"author":{"gitId":"Jacob-Pang"},"content":"            throws Task.EmptyDescriptionException  {"},{"lineNumber":11,"author":{"gitId":"Jacob-Pang"},"content":"        super(description); this.by \u003d by;"},{"lineNumber":12,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":14,"author":{"gitId":"Jacob-Pang"},"content":"    public Deadline (String description, boolean isDone, LocalDateTime createdDateTime,"},{"lineNumber":15,"author":{"gitId":"Jacob-Pang"},"content":"            LocalDateTime by) throws Task.EmptyDescriptionException {"},{"lineNumber":16,"author":{"gitId":"Jacob-Pang"},"content":"        super(description, isDone, createdDateTime);"},{"lineNumber":17,"author":{"gitId":"Jacob-Pang"},"content":"        this.by \u003d by;"},{"lineNumber":18,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":20,"author":{"gitId":"Jacob-Pang"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"Jacob-Pang"},"content":"    public String taskInformation (DateTimeFormatter outputFormat) {"},{"lineNumber":22,"author":{"gitId":"Jacob-Pang"},"content":"        return \"[D]\" + super.taskInformation(outputFormat) + \" [ by: \" + "},{"lineNumber":23,"author":{"gitId":"Jacob-Pang"},"content":"                this.by.format(outputFormat) + \" ]\";"},{"lineNumber":24,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":26,"author":{"gitId":"Jacob-Pang"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"Jacob-Pang"},"content":"    public String toCommand (String delimiter, DateTimeFormatter parseFormat) {"},{"lineNumber":28,"author":{"gitId":"Jacob-Pang"},"content":"        return \"D\" + delimiter + super.toCommand(delimiter, parseFormat) + delimiter + "},{"lineNumber":29,"author":{"gitId":"Jacob-Pang"},"content":"                this.by.format(parseFormat);"},{"lineNumber":30,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Jacob-Pang"},"content":"}"}],"authorContributionMap":{"Jacob-Pang":31}},{"path":"src/main/java/DukeTask/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-Pang"},"content":"package DukeTask;"},{"lineNumber":2,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":3,"author":{"gitId":"Jacob-Pang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Jacob-Pang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":6,"author":{"gitId":"Jacob-Pang"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"Jacob-Pang"},"content":"    private LocalDateTime at;"},{"lineNumber":8,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":9,"author":{"gitId":"Jacob-Pang"},"content":"    public Event (String description, LocalDateTime at) "},{"lineNumber":10,"author":{"gitId":"Jacob-Pang"},"content":"        throws Task.EmptyDescriptionException {"},{"lineNumber":11,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":12,"author":{"gitId":"Jacob-Pang"},"content":"        super(description); this.at \u003d at;"},{"lineNumber":13,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":15,"author":{"gitId":"Jacob-Pang"},"content":"    public Event (String description, boolean isDone, LocalDateTime createdDateTime,"},{"lineNumber":16,"author":{"gitId":"Jacob-Pang"},"content":"            LocalDateTime at) throws Task.EmptyDescriptionException {"},{"lineNumber":17,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":18,"author":{"gitId":"Jacob-Pang"},"content":"        super(description, isDone, createdDateTime);"},{"lineNumber":19,"author":{"gitId":"Jacob-Pang"},"content":"        this.at \u003d at;"},{"lineNumber":20,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":22,"author":{"gitId":"Jacob-Pang"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"Jacob-Pang"},"content":"    public String taskInformation (DateTimeFormatter outputFormat) {"},{"lineNumber":24,"author":{"gitId":"Jacob-Pang"},"content":"        return \"[E]\" + super.taskInformation(outputFormat) + \" [ at: \" + "},{"lineNumber":25,"author":{"gitId":"Jacob-Pang"},"content":"                this.at.format(outputFormat) + \" ]\";"},{"lineNumber":26,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":28,"author":{"gitId":"Jacob-Pang"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"Jacob-Pang"},"content":"    public String toCommand (String delimiter, DateTimeFormatter parseFormat) {"},{"lineNumber":30,"author":{"gitId":"Jacob-Pang"},"content":"        return \"E\" + delimiter + super.toCommand(delimiter, parseFormat) + delimiter + "},{"lineNumber":31,"author":{"gitId":"Jacob-Pang"},"content":"                this.at.format(parseFormat);"},{"lineNumber":32,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Jacob-Pang"},"content":"}"}],"authorContributionMap":{"Jacob-Pang":33}},{"path":"src/main/java/DukeTask/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-Pang"},"content":"package DukeTask;"},{"lineNumber":2,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":3,"author":{"gitId":"Jacob-Pang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Jacob-Pang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":6,"author":{"gitId":"Jacob-Pang"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"Jacob-Pang"},"content":"    public static class EmptyDescriptionException extends Exception {"},{"lineNumber":8,"author":{"gitId":"Jacob-Pang"},"content":"        private static final long serialVersionUID \u003d 1L;"},{"lineNumber":9,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":10,"author":{"gitId":"Jacob-Pang"},"content":"        public EmptyDescriptionException () {"},{"lineNumber":11,"author":{"gitId":"Jacob-Pang"},"content":"            super(\"! Task description cannot be empty.\");"},{"lineNumber":12,"author":{"gitId":"Jacob-Pang"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":15,"author":{"gitId":"Jacob-Pang"},"content":"    protected enum TaskState {"},{"lineNumber":16,"author":{"gitId":"Jacob-Pang"},"content":"        done, undone;"},{"lineNumber":17,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":19,"author":{"gitId":"Jacob-Pang"},"content":"    protected String description;"},{"lineNumber":20,"author":{"gitId":"Jacob-Pang"},"content":"    protected TaskState state;"},{"lineNumber":21,"author":{"gitId":"Jacob-Pang"},"content":"    protected LocalDateTime createdDateTime;"},{"lineNumber":22,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":23,"author":{"gitId":"Jacob-Pang"},"content":"    // constructors"},{"lineNumber":24,"author":{"gitId":"Jacob-Pang"},"content":"    public Task (String description, boolean isDone, LocalDateTime createdDateTime) "},{"lineNumber":25,"author":{"gitId":"Jacob-Pang"},"content":"            throws Task.EmptyDescriptionException {"},{"lineNumber":26,"author":{"gitId":"Jacob-Pang"},"content":"        "},{"lineNumber":27,"author":{"gitId":"Jacob-Pang"},"content":"        if (description.isEmpty()) {"},{"lineNumber":28,"author":{"gitId":"Jacob-Pang"},"content":"            throw new Task.EmptyDescriptionException();"},{"lineNumber":29,"author":{"gitId":"Jacob-Pang"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Jacob-Pang"},"content":"        "},{"lineNumber":31,"author":{"gitId":"Jacob-Pang"},"content":"        this.state \u003d (isDone ? TaskState.done : TaskState.undone);"},{"lineNumber":32,"author":{"gitId":"Jacob-Pang"},"content":"        this.description \u003d description;"},{"lineNumber":33,"author":{"gitId":"Jacob-Pang"},"content":"        this.createdDateTime \u003d createdDateTime;"},{"lineNumber":34,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":36,"author":{"gitId":"Jacob-Pang"},"content":"    public Task (String description) throws Task.EmptyDescriptionException {"},{"lineNumber":37,"author":{"gitId":"Jacob-Pang"},"content":"        this(description, false, LocalDateTime.now());"},{"lineNumber":38,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":40,"author":{"gitId":"Jacob-Pang"},"content":"    // accessors"},{"lineNumber":41,"author":{"gitId":"Jacob-Pang"},"content":"    public boolean isDone () {"},{"lineNumber":42,"author":{"gitId":"Jacob-Pang"},"content":"        return (this.state \u003d\u003d TaskState.undone);"},{"lineNumber":43,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":45,"author":{"gitId":"Jacob-Pang"},"content":"    public String taskInformation (DateTimeFormatter outputFormat) {"},{"lineNumber":46,"author":{"gitId":"Jacob-Pang"},"content":"        return \"[\" + (this.state \u003d\u003d TaskState.done ? \"X\" : \" \") "},{"lineNumber":47,"author":{"gitId":"Jacob-Pang"},"content":"                + \"] \" + this.description + \" [ created: \" "},{"lineNumber":48,"author":{"gitId":"Jacob-Pang"},"content":"                + this.createdDateTime.format(outputFormat) + \" ]\";"},{"lineNumber":49,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":51,"author":{"gitId":"Jacob-Pang"},"content":"    public String toCommand (String delimiter, DateTimeFormatter parseFormat) {"},{"lineNumber":52,"author":{"gitId":"Jacob-Pang"},"content":"        // unique parsing sequence for Task"},{"lineNumber":53,"author":{"gitId":"Jacob-Pang"},"content":"        return (this.state \u003d\u003d TaskState.done ? 1 : 0) + delimiter + this.description"},{"lineNumber":54,"author":{"gitId":"Jacob-Pang"},"content":"                + delimiter + this.createdDateTime.format(parseFormat);"},{"lineNumber":55,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":57,"author":{"gitId":"Jacob-Pang"},"content":"    // mutators"},{"lineNumber":58,"author":{"gitId":"Jacob-Pang"},"content":"    public void markAsDone (DateTimeFormatter outputFormat) {"},{"lineNumber":59,"author":{"gitId":"Jacob-Pang"},"content":"        switch (this.state) {"},{"lineNumber":60,"author":{"gitId":"Jacob-Pang"},"content":"        case done:"},{"lineNumber":61,"author":{"gitId":"Jacob-Pang"},"content":"            System.out.println(\"     This task has already been marked done!\\n     \""},{"lineNumber":62,"author":{"gitId":"Jacob-Pang"},"content":"                    + taskInformation(outputFormat));"},{"lineNumber":63,"author":{"gitId":"Jacob-Pang"},"content":"            break;"},{"lineNumber":64,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":65,"author":{"gitId":"Jacob-Pang"},"content":"        case undone:"},{"lineNumber":66,"author":{"gitId":"Jacob-Pang"},"content":"            this.state \u003d TaskState.done;"},{"lineNumber":67,"author":{"gitId":"Jacob-Pang"},"content":"            System.out.println(\"     Woohoo! I\u0027ve marked this task as done\\n     \" "},{"lineNumber":68,"author":{"gitId":"Jacob-Pang"},"content":"                    + taskInformation(outputFormat));"},{"lineNumber":69,"author":{"gitId":"Jacob-Pang"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Jacob-Pang"},"content":"}"}],"authorContributionMap":{"Jacob-Pang":71}},{"path":"src/main/java/DukeTask/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-Pang"},"content":"package DukeTask;"},{"lineNumber":2,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":3,"author":{"gitId":"Jacob-Pang"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Jacob-Pang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":6,"author":{"gitId":"Jacob-Pang"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"Jacob-Pang"},"content":"    public ToDo (String description) throws Task.EmptyDescriptionException {"},{"lineNumber":8,"author":{"gitId":"Jacob-Pang"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":11,"author":{"gitId":"Jacob-Pang"},"content":"    public ToDo (String description, boolean isDone, LocalDateTime createdDateTime)"},{"lineNumber":12,"author":{"gitId":"Jacob-Pang"},"content":"            throws Task.EmptyDescriptionException {"},{"lineNumber":13,"author":{"gitId":"Jacob-Pang"},"content":"        super(description, isDone, createdDateTime);"},{"lineNumber":14,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":16,"author":{"gitId":"Jacob-Pang"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"Jacob-Pang"},"content":"    public String taskInformation (DateTimeFormatter outputFormat) {"},{"lineNumber":18,"author":{"gitId":"Jacob-Pang"},"content":"        return \"[T]\" + super.taskInformation(outputFormat);"},{"lineNumber":19,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":21,"author":{"gitId":"Jacob-Pang"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"Jacob-Pang"},"content":"    public String toCommand (String delimiter, DateTimeFormatter parseFormat) {"},{"lineNumber":23,"author":{"gitId":"Jacob-Pang"},"content":"        return \"T\" + delimiter + super.toCommand(delimiter, parseFormat);"},{"lineNumber":24,"author":{"gitId":"Jacob-Pang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Jacob-Pang"},"content":"}"}],"authorContributionMap":{"Jacob-Pang":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-Pang"},"content":"todo CS2103 IP Level-1"},{"lineNumber":2,"author":{"gitId":"Jacob-Pang"},"content":"todo CS2103 IP Level-2"},{"lineNumber":3,"author":{"gitId":"Jacob-Pang"},"content":"todo CS2103 IP Level-3"},{"lineNumber":4,"author":{"gitId":"Jacob-Pang"},"content":"todo CS2103 IP Level-4"},{"lineNumber":5,"author":{"gitId":"Jacob-Pang"},"content":"todo CS2103 IP A-TextUiTesting"},{"lineNumber":6,"author":{"gitId":"Jacob-Pang"},"content":"todo CS2103 IP Level-5"},{"lineNumber":7,"author":{"gitId":"Jacob-Pang"},"content":"todo CS2103 IP Level-6"},{"lineNumber":8,"author":{"gitId":"Jacob-Pang"},"content":"todo CS2103 IP A-Enums"},{"lineNumber":9,"author":{"gitId":"Jacob-Pang"},"content":"deadline CS2103 /by Thursday 23:59"},{"lineNumber":10,"author":{"gitId":"Jacob-Pang"},"content":"event cry /at home"},{"lineNumber":11,"author":{"gitId":"Jacob-Pang"},"content":"list"},{"lineNumber":12,"author":{"gitId":"Jacob-Pang"},"content":"done 1"},{"lineNumber":13,"author":{"gitId":"Jacob-Pang"},"content":"delete 1"},{"lineNumber":14,"author":{"gitId":"Jacob-Pang"},"content":"done 1"},{"lineNumber":15,"author":{"gitId":"Jacob-Pang"},"content":"delete 1"},{"lineNumber":16,"author":{"gitId":"Jacob-Pang"},"content":"done 1"},{"lineNumber":17,"author":{"gitId":"Jacob-Pang"},"content":"delete 1"},{"lineNumber":18,"author":{"gitId":"Jacob-Pang"},"content":"done 1"},{"lineNumber":19,"author":{"gitId":"Jacob-Pang"},"content":"delete 1"},{"lineNumber":20,"author":{"gitId":"Jacob-Pang"},"content":"done 1"},{"lineNumber":21,"author":{"gitId":"Jacob-Pang"},"content":"delete 1"},{"lineNumber":22,"author":{"gitId":"Jacob-Pang"},"content":"done 1"},{"lineNumber":23,"author":{"gitId":"Jacob-Pang"},"content":"delete 1"},{"lineNumber":24,"author":{"gitId":"Jacob-Pang"},"content":"list"}],"authorContributionMap":{"Jacob-Pang":24}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"Jacob-Pang"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"-"},"content":")"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Jacob-Pang":1,"-":21}}]
