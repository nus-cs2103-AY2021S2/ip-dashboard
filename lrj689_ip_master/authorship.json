[{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"public class Deadlines extends Task {"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"    private String by;"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"    public Deadlines(String name, String by) {"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"        super(name);"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"        DukeList list \u003d new DukeList();"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"        String bound \u003d \"____________________________________________________________\";"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"        String topBound \u003d \"____________________________________________________________\\n\";"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"        String bottomBound \u003d \"\\n____________________________________________________________\\n\";"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"        System.out.println(topBound + logo + \"\\nHello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\" + bottomBound);"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"            String[] arr \u003d input.split(\"/\");"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"            if (input.equals(\"bye\")) {"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"                System.out.println(topBound + \"Good bye! Stay calm and keep coding o7\" + bottomBound);"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"                sc.close();"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"                break;"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"            } else if (input.equals(\"list\")) {"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"                System.out.println(bound);"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"                System.out.println(\"Here are the tasks in your list\");"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"                list.printAll();"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"                System.out.println(topBound);"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"            } else if (arr[0].startsWith(\"done\")) {"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"                String[] doneArr \u003d arr[0].split(\" \");"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"                int x \u003d Integer.parseInt(doneArr[1]) - 1;"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"                list.done(x);"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"                System.out.println(topBound + \"Good job! I\u0027ve marked this task as done:\\n\" + \"  \" + list.get(x)"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"                        + bottomBound);"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"            } else if (arr[0].startsWith(\"todo\")) {"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"                String taskName \u003d input.replaceFirst(\"todo\", \"\").stripLeading();"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"                ToDos curr \u003d new ToDos(taskName);"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"                list.add(curr);"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"                System.out.println(topBound + \"Got it! I\u0027ve added this task:\\n\" + \"  \" + curr"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"                        + \"\\nNow you have \" + list.noOfTasks() + \" tasks in the list.\" + bottomBound);"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":"            } else if (arr[0].startsWith(\"deadline\")) {"},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"                String taskName \u003d arr[0].replaceFirst(\"deadline\", \"\").stripLeading().stripTrailing();"},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"                Deadlines curr \u003d new Deadlines(taskName, arr[1].replaceFirst(\"by\", \"\").stripLeading());"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"                list.add(curr);"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"                System.out.println(topBound + \"Got it! I\u0027ve added this task:\\n\" + \"  \" + curr"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"                        + \"\\nNow you have \" + list.noOfTasks() + \" tasks in the list.\" + bottomBound);"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"            } else if (arr[0].startsWith(\"event\")) {"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":"                String taskName \u003d arr[0].replaceFirst(\"event\", \"\").stripLeading().stripTrailing();"},{"lineNumber":50,"author":{"gitId":"lrj689"},"content":"                Events curr \u003d new Events(taskName, arr[1].replaceFirst(\"at\", \"\").stripLeading());"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":"                list.add(curr);"},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":"                System.out.println(topBound + \"Got it! I\u0027ve added this task:\\n\" + \"  \" + curr"},{"lineNumber":53,"author":{"gitId":"lrj689"},"content":"                        + \"\\nNow you have \" + list.noOfTasks() + \" tasks in the list.\" + bottomBound);"},{"lineNumber":54,"author":{"gitId":"lrj689"},"content":"            } else {"},{"lineNumber":55,"author":{"gitId":"lrj689"},"content":"                Task curr \u003d new Task(input);"},{"lineNumber":56,"author":{"gitId":"lrj689"},"content":"                list.add(curr);"},{"lineNumber":57,"author":{"gitId":"lrj689"},"content":"                System.out.println(topBound + \"added: \" + input + bottomBound);"},{"lineNumber":58,"author":{"gitId":"lrj689"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"lrj689":52,"-":9}},{"path":"src/main/java/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"public class DukeList {"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"    private ArrayList\u003cTask\u003e list;"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"    public DukeList() {"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"    public void add(Task item) {"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"        list.add(item);"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"    public void done(int x) {"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"        list.get(x).markAsDone();"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"    public int noOfTasks() {"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"        return list.size();"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"     * DukeList getter"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"     * @param x Task number x"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"     * @return Task x"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"    public Task get(int x) {"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"        return list.get(x);"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"     * Prints DukeList object"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"    public void printAll() {"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"        int size \u003d list.size();"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"        for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"            System.out.println(Integer.toString(i + 1) + \".\" + list.get(i));"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":40}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"public class Events extends Task {"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"    private String duration;"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"    public Events(String name, String duration) {"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"        super(name);"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"        this.duration \u003d duration;"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + duration + \")\";"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"     * Task class stores a String as name of the task and boolean indicating task completion"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"    private String taskName;"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"    private boolean done;"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"    public Task(String name) {"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"        this.taskName \u003d name;"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"        this.done \u003d false;"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"    public void markAsDone() {"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"        done \u003d true;"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"        if (done) {"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"            return \"[X] \" + taskName;"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"            return \"[ ] \" + taskName;"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":26}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"public class ToDos extends Task {"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"    public ToDos(String name) {"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"        super(name);"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"list"},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"bye"}],"authorContributionMap":{"lrj689":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"PAUSE"}],"authorContributionMap":{"lrj689":1,"-":21}}]
