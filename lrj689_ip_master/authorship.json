[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"lrj689":6,"-":17}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"    String javaFxVersion \u003d \u002711.0.1\u0027"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"lrj689":15,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"D|1|project|2021-02-19"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"T|0|go to school"}],"authorContributionMap":{"lrj689":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"---"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"## What is Duke?"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"Duke is a simple desktop application that allows you to keep track your tasks in a task list through the use of a GUI."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"---"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"## Before you begin..."},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"1. Ensure you have Java `11` or above installed in your system."},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"2. Download the latest `duke.jar` from [here](https://github.com/lrj689/ip/releases/tag/1.0)."},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"3. Place `duke.jar` in an empty folder of your choice."},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"4. Double click `duke.jar` to start the app."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"---"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"## Features"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"### Notes about formatting"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"* Commands given are case-sensitive."},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"* Square brackets `[ ]` are not needed when entering commands."},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"### Viewing help : `help`"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"Duke will provide you with a quick rundown on the commands available."},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"Format: `help`"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"### Adding a todo task : `todo`"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"Adds a task into your list."},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"Format: `todo [TASK_NAME]`"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"Example:"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"* `todo homework` Adds task `homework` to your list."},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"### Adding a deadline task : `deadline`"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"Adds a task with a deadline into your list."},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"Format: `deadline [TASK_NAME] /by [DATE]`"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"Example:"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"* `deadline project /by 2021-02-19` Adds a task `project` with a deadline on `19 Feb 2021` into your list."},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":50,"author":{"gitId":"lrj689"},"content":"### Adding an event task : `event`"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":"Adds a task with a start date into your list."},{"lineNumber":53,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":54,"author":{"gitId":"lrj689"},"content":"Format: `event [TASK_NAME] /at [DATE]`"},{"lineNumber":55,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":56,"author":{"gitId":"lrj689"},"content":"Example:"},{"lineNumber":57,"author":{"gitId":"lrj689"},"content":"* `event exam /at 2021-03-02` Adds a task `exam` with a start date of `02 Mar 2021` into your list."},{"lineNumber":58,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":59,"author":{"gitId":"lrj689"},"content":"### Listing all tasks : `list`"},{"lineNumber":60,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":61,"author":{"gitId":"lrj689"},"content":"Shows a list of all your tasks."},{"lineNumber":62,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":63,"author":{"gitId":"lrj689"},"content":"Format: `list`"},{"lineNumber":64,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":65,"author":{"gitId":"lrj689"},"content":"### Deleting a task : `delete`"},{"lineNumber":66,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":67,"author":{"gitId":"lrj689"},"content":"Deletes a specified task from your list."},{"lineNumber":68,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":69,"author":{"gitId":"lrj689"},"content":"**!!WARNING!!** This command cannot be undone!"},{"lineNumber":70,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":71,"author":{"gitId":"lrj689"},"content":"Format: `delete [TASK_NUMBER]`"},{"lineNumber":72,"author":{"gitId":"lrj689"},"content":"* `[TASK_NUMBER]` must be a **positive integer**."},{"lineNumber":73,"author":{"gitId":"lrj689"},"content":"* `delete` will not work if the task specified does not exist in your list."},{"lineNumber":74,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":75,"author":{"gitId":"lrj689"},"content":"Example:"},{"lineNumber":76,"author":{"gitId":"lrj689"},"content":"*  `delete 1` Deletes the 1st task from your list"},{"lineNumber":77,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":78,"author":{"gitId":"lrj689"},"content":"### Deleting all your tasks : `reset`"},{"lineNumber":79,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":80,"author":{"gitId":"lrj689"},"content":"Deletes **all** tasks from your list."},{"lineNumber":81,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":82,"author":{"gitId":"lrj689"},"content":"**!!WARNING!!** This command cannot be undone!"},{"lineNumber":83,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":84,"author":{"gitId":"lrj689"},"content":"Format `reset`"},{"lineNumber":85,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":86,"author":{"gitId":"lrj689"},"content":"### Finding tasks that matches a keyword : `find`"},{"lineNumber":87,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":88,"author":{"gitId":"lrj689"},"content":"Finds all tasks that matches a specified keyword."},{"lineNumber":89,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":90,"author":{"gitId":"lrj689"},"content":"Format: `find [KEYWORD]`"},{"lineNumber":91,"author":{"gitId":"lrj689"},"content":"* `[KEYWORD]` can be more than 1 word i.e. `go to school`"},{"lineNumber":92,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":93,"author":{"gitId":"lrj689"},"content":"Example: "},{"lineNumber":94,"author":{"gitId":"lrj689"},"content":"* `find school` Shows all tasks with names containing `school` keyword i.e. `go to school`"},{"lineNumber":95,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":96,"author":{"gitId":"lrj689"},"content":"### Showing tasks that matches a given date : `show`"},{"lineNumber":97,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":98,"author":{"gitId":"lrj689"},"content":"Shows all tasks have deadlines or start dates on a given date."},{"lineNumber":99,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":100,"author":{"gitId":"lrj689"},"content":"Format: `show [DATE]`"},{"lineNumber":101,"author":{"gitId":"lrj689"},"content":"* `[DATE]` follows `YYYY-MM-DD` format."},{"lineNumber":102,"author":{"gitId":"lrj689"},"content":"* Given `DATE` must be **valid** e.g. `2021-02-31` `222222-999-11` are not valid dates."},{"lineNumber":103,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":104,"author":{"gitId":"lrj689"},"content":"Example:"},{"lineNumber":105,"author":{"gitId":"lrj689"},"content":"*  `show 2021-03-03` Shows all tasks that have deadlines or start dates on `03 Mar 2021`"},{"lineNumber":106,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":107,"author":{"gitId":"lrj689"},"content":"### Marking a task as done : `done`"},{"lineNumber":108,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":109,"author":{"gitId":"lrj689"},"content":"Marks a specified task as done."},{"lineNumber":110,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":111,"author":{"gitId":"lrj689"},"content":"Format: `done [TASK_NUMBER]`"},{"lineNumber":112,"author":{"gitId":"lrj689"},"content":"* `[TASK_NUMBER]` must be a **positive integer**."},{"lineNumber":113,"author":{"gitId":"lrj689"},"content":"* `done` will not work if the task specified does not exist in your list."},{"lineNumber":114,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":115,"author":{"gitId":"lrj689"},"content":"Example:"},{"lineNumber":116,"author":{"gitId":"lrj689"},"content":"* `done 1` Marks the 1st task in your list as done."},{"lineNumber":117,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":118,"author":{"gitId":"lrj689"},"content":"### Saving and exiting : `bye`"},{"lineNumber":119,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":120,"author":{"gitId":"lrj689"},"content":"Saves your list and exits Duke automatically."},{"lineNumber":121,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":122,"author":{"gitId":"lrj689"},"content":"**!!WARNING!!**"},{"lineNumber":123,"author":{"gitId":"lrj689"},"content":"Closing Duke without entering `bye` will **not save any changes** made to your list for that session."},{"lineNumber":124,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":125,"author":{"gitId":"lrj689"},"content":"Format: `bye`"},{"lineNumber":126,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":127,"author":{"gitId":"lrj689"},"content":"---"},{"lineNumber":128,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":129,"author":{"gitId":"lrj689"},"content":"## FAQ"},{"lineNumber":130,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":131,"author":{"gitId":"lrj689"},"content":"Q: How do I transfer my data to another system?"},{"lineNumber":132,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":133,"author":{"gitId":"lrj689"},"content":"A: You can transfer your data by moving the data file located at `your_home_folder/data` to another home folder for Duke."},{"lineNumber":134,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":135,"author":{"gitId":"lrj689"},"content":"---"},{"lineNumber":136,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":137,"author":{"gitId":"lrj689"},"content":"## Command summary"},{"lineNumber":138,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":139,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":140,"author":{"gitId":"lrj689"},"content":"| Command       |        Format                     |"},{"lineNumber":141,"author":{"gitId":"lrj689"},"content":"|:-------------:|:---------------------------------:|"},{"lineNumber":142,"author":{"gitId":"lrj689"},"content":"| Todo          | `todo [TASK_NAME]`                |"},{"lineNumber":143,"author":{"gitId":"lrj689"},"content":"| Deadline      | `deadline [TASK_NAME] /by [DATE]` | "},{"lineNumber":144,"author":{"gitId":"lrj689"},"content":"| Event         | `event [TASK_NAME] /at [DATE]`    |"},{"lineNumber":145,"author":{"gitId":"lrj689"},"content":"| List          | `list`                            |"},{"lineNumber":146,"author":{"gitId":"lrj689"},"content":"| Delete        | `delete [TASK_NUMBER]`            | "},{"lineNumber":147,"author":{"gitId":"lrj689"},"content":"| Reset         | `reset`                           |"},{"lineNumber":148,"author":{"gitId":"lrj689"},"content":"| Find          | `find [KEYWORD]`                  |"},{"lineNumber":149,"author":{"gitId":"lrj689"},"content":"| Show          | `show [DATE]`                     | "},{"lineNumber":150,"author":{"gitId":"lrj689"},"content":"| Done          | `done [TASK NUMBER]`              |"},{"lineNumber":151,"author":{"gitId":"lrj689"},"content":"| Bye           | `bye`                             |"}],"authorContributionMap":{"lrj689":142,"-":9}},{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"public class Deadlines extends Task {"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"    private final LocalDate deadline;"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"    public Deadlines(String name, LocalDate deadline) {"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"        super(name);"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"    public Deadlines(String name, LocalDate deadline, boolean isDone) {"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"        super(name, isDone);"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"     * Returns the deadline of the task as a LocalDate Object"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"     * @return LocalDate object"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"    public LocalDate getDeadline() {"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"        return deadline;"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"                + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":33}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"import javafx.fxml.FXML;"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":" * An example of a custom control using FXML."},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":" * containing text from the speaker."},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":" */"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"public class DialogBox extends HBox {"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"    private Label dialog;"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"    private ImageView displayPicture;"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"            fxmlLoader.load();"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"            e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"        dialog.setText(text);"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"        displayPicture.setImage(img);"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"    private void flip() {"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"        Collections.reverse(tmp);"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":50,"author":{"gitId":"lrj689"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":53,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"lrj689"},"content":"     * Returns the user dialog box"},{"lineNumber":55,"author":{"gitId":"lrj689"},"content":"     * @param text String text"},{"lineNumber":56,"author":{"gitId":"lrj689"},"content":"     * @param img Image image representing the user"},{"lineNumber":57,"author":{"gitId":"lrj689"},"content":"     * @return DialogBox user dialog box"},{"lineNumber":58,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"lrj689"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":60,"author":{"gitId":"lrj689"},"content":"        return new DialogBox(text, img);"},{"lineNumber":61,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":63,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"lrj689"},"content":"     * Returns the Duke dialog box"},{"lineNumber":65,"author":{"gitId":"lrj689"},"content":"     * @param text String text"},{"lineNumber":66,"author":{"gitId":"lrj689"},"content":"     * @param img Image image representing Duke"},{"lineNumber":67,"author":{"gitId":"lrj689"},"content":"     * @return DialogBox Duke dialog box"},{"lineNumber":68,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"lrj689"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":70,"author":{"gitId":"lrj689"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":71,"author":{"gitId":"lrj689"},"content":"        db.flip();"},{"lineNumber":72,"author":{"gitId":"lrj689"},"content":"        return db;"},{"lineNumber":73,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":74}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"    private final UI ui;"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"    private final Storage storage;"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"    private DukeList list;"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"    public Duke()  {"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"        ui \u003d new UI();"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"        storage \u003d new Storage(\"data/duke.txt\");"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"            list \u003d new DukeList(storage.load());"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"            list \u003d new DukeList();"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"     * Takes in a user input and output a response"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"     * @param input user input"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"     * @return Response String"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"    public String getResponse(String input) {"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"            storage.save(list);"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"            return ui.showGoodByeMessage();"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"            try {"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"                return ui.commandMessage(Parser.parse(input, list), list);"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"                return ui.showMissingArgsError();"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"            } catch (NumberFormatException | DateTimeParseException | IndexOutOfBoundsException e) {"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"                return ui.showWrongArgsError();"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"     * Shows the welcome message on startup"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"     * @return welcome message String"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"    public static String welcomeMessage() {"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"        return new UI().showWelcomeMessage();"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"lrj689":49,"-":1}},{"path":"src/main/java/duke/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":" * Custom arraylist for task objects"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":" */"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"public class DukeList {"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"    private final ArrayList\u003cTask\u003e list;"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"    private int size;"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"    public DukeList() {"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"        this.list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"        this.size \u003d 0;"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"    public DukeList(ArrayList\u003cTask\u003e list) {"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"        this.list \u003d list;"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"        size \u003d list.size();"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"     * add task into the list"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"     * @param item Task item"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"    public void add(Task item) {"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"        list.add(item);"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"        size++;"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"     * mark task as done"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"     * @param x task number"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"    public void markAsDone(int x) {"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"        list.get(x).markAsDone();"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"     * deletes a task from the list"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":"     * @param x Task number to be removed"},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"    public void delete(int x) {"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"        list.remove(x);"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"        size--;"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":50,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":"     * deletes all task in the list"},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"lrj689"},"content":"    public void deleteAll() {"},{"lineNumber":54,"author":{"gitId":"lrj689"},"content":"        list.clear();"},{"lineNumber":55,"author":{"gitId":"lrj689"},"content":"        size \u003d 0;"},{"lineNumber":56,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":58,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"lrj689"},"content":"     * Returns the size of the list"},{"lineNumber":60,"author":{"gitId":"lrj689"},"content":"     * @return int size"},{"lineNumber":61,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"lrj689"},"content":"    public int getSize() {"},{"lineNumber":63,"author":{"gitId":"lrj689"},"content":"        return size;"},{"lineNumber":64,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":66,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"lrj689"},"content":"     * Returns the task from the list"},{"lineNumber":68,"author":{"gitId":"lrj689"},"content":"     * @param x Task number x"},{"lineNumber":69,"author":{"gitId":"lrj689"},"content":"     * @return Task x"},{"lineNumber":70,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"lrj689"},"content":"    public Task get(int x) {"},{"lineNumber":72,"author":{"gitId":"lrj689"},"content":"        return list.get(x);"},{"lineNumber":73,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":74}},{"path":"src/main/java/duke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"public class Events extends Task {"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"    private final LocalDate startDate;"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"    public Events(String name, LocalDate duration) {"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"        super(name);"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"        this.startDate \u003d duration;"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"    public Events(String name, LocalDate duration, boolean isDone) {"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"        super(name, isDone);"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"        this.startDate \u003d duration;"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"     * Returns the duration of the event as a LocalDate object"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"     * @return LocalDate Object"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"    public LocalDate getDuration() {"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"        return startDate;"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"                + startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":34}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":" */"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"    public static void main(String[] args) {"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":" * A GUI for Duke using FXML."},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":" */"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"public class Main extends Application {"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"    public void start(Stage stage) {"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"            stage.show();"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import javafx.application.Platform;"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"import java.util.Timer;"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"import java.util.TimerTask;"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":" */"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/easyUser.png\"));"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bot.png\"));"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"                DialogBox.getDukeDialog(Duke.welcomeMessage(), dukeImage)"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"        );"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"        duke \u003d d;"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"    private void handleUserInput() {"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":50,"author":{"gitId":"lrj689"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":"        );"},{"lineNumber":53,"author":{"gitId":"lrj689"},"content":"        userInput.clear();"},{"lineNumber":54,"author":{"gitId":"lrj689"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":55,"author":{"gitId":"lrj689"},"content":"            this.exit();"},{"lineNumber":56,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":59,"author":{"gitId":"lrj689"},"content":"    private void exit() {"},{"lineNumber":60,"author":{"gitId":"lrj689"},"content":"        new Timer().schedule(new TimerTask() {"},{"lineNumber":61,"author":{"gitId":"lrj689"},"content":"            public void run () {"},{"lineNumber":62,"author":{"gitId":"lrj689"},"content":"                Platform.exit();"},{"lineNumber":63,"author":{"gitId":"lrj689"},"content":"                System.exit(0);"},{"lineNumber":64,"author":{"gitId":"lrj689"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"lrj689"},"content":"        }, 5000);"},{"lineNumber":66,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":67}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"     * Returns a String which will guide the UI to output appropriate user texts"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"     * @param fullCommand String of the user input"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"     * @param list DukeList object in use"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"     * @return String"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"    public static String[] parse(String fullCommand, DukeList list) {"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"        String[] commandStringArr \u003d fullCommand.split(\" \", 2);"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"        switch (commandStringArr[0]) {"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"        case \"done\":"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"            int taskNumberDone \u003d Integer.parseInt(commandStringArr[1]) - 1;"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"            list.markAsDone(taskNumberDone);"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"            commandStringArr[1] \u003d list.get(taskNumberDone).toString();"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"            return commandStringArr;"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"        case \"delete\":"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"            int taskNumberToDelete \u003d Integer.parseInt(commandStringArr[1]) - 1;"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"            commandStringArr[1] \u003d list.get(taskNumberToDelete).toString();"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"            list.delete(taskNumberToDelete);"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"            return commandStringArr;"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"        case \"todo\":"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"            ToDos todo \u003d new ToDos(commandStringArr[1]);"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"            list.add(todo);"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"            commandStringArr[1] \u003d todo.toString();"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"            return commandStringArr;"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"        case \"deadline\":"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"            String[] deadlineParamArr \u003d commandStringArr[1].split(\" /by \");"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(deadlineParamArr[1]);"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"            Deadlines deadline \u003d new Deadlines(deadlineParamArr[0], deadlineDate);"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"            list.add(deadline);"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"            commandStringArr[1] \u003d deadline.toString();"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"            return commandStringArr;"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"        case \"event\":"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"            String[] eventParamArr \u003d commandStringArr[1].split(\" /at \");"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"            LocalDate eventDate \u003d LocalDate.parse(eventParamArr[1]);"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"            Events event \u003d new Events(eventParamArr[0], eventDate);"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":"            list.add(event);"},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"            commandStringArr[1] \u003d event.toString();"},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"            return commandStringArr;"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"        case \"reset\":"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"            list.deleteAll();"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"            return commandStringArr;"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"        default:"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":"            return commandStringArr;"},{"lineNumber":50,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":52}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":" * Deals with saving and loading DukeList from duke.txt"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":" */"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"    private final String filePath;"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"    private final File file;"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"     * Creates file object, creates the directory and file if either cannot be found"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"     * @param filePath String of the relative path"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"    public Storage(String filePath) {"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"        this.file \u003d new File(filePath);"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"        if (!file.exists()) {"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"            File dataFile \u003d new File(\"data\");"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"            try {"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"                if (dataFile.mkdir() \u0026\u0026 file.createNewFile()) {"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"                    System.out.println(\"New save file created\");"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"                }"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"            } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"                System.out.println(\"Error Occurred\");"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"     * saves contents of DukeList into Duke.txt file"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"     * @param list DukeList object"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":"    public void save(DukeList list) {"},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"            FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"            for (int i \u003d 0; i \u003c list.getSize(); i++) {"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"                Task curr \u003d list.get(i);"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"                if (curr instanceof ToDos) {"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"                    if (curr.isTaskDone()) {"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":"                        fw.write(\"T|1|\" + curr.getTaskName() + \"\\n\");"},{"lineNumber":50,"author":{"gitId":"lrj689"},"content":"                    } else {"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":"                        fw.write(\"T|0|\" + curr.getTaskName() + \"\\n\");"},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":"                    }"},{"lineNumber":53,"author":{"gitId":"lrj689"},"content":"                } else if (curr instanceof Events) {"},{"lineNumber":54,"author":{"gitId":"lrj689"},"content":"                    if (curr.isTaskDone()) {"},{"lineNumber":55,"author":{"gitId":"lrj689"},"content":"                        fw.write(\"E|1|\" + curr.getTaskName() + \"|\" + ((Events) curr).getDuration() + \"\\n\");"},{"lineNumber":56,"author":{"gitId":"lrj689"},"content":"                    } else {"},{"lineNumber":57,"author":{"gitId":"lrj689"},"content":"                        fw.write(\"E|0|\" + curr.getTaskName() + \"|\" + ((Events) curr).getDuration() + \"\\n\");"},{"lineNumber":58,"author":{"gitId":"lrj689"},"content":"                    }"},{"lineNumber":59,"author":{"gitId":"lrj689"},"content":"                } else {"},{"lineNumber":60,"author":{"gitId":"lrj689"},"content":"                    if (curr.isTaskDone()) {"},{"lineNumber":61,"author":{"gitId":"lrj689"},"content":"                        fw.write(\"D|1|\" + curr.getTaskName() + \"|\" + ((Deadlines) curr).getDeadline() + \"\\n\");"},{"lineNumber":62,"author":{"gitId":"lrj689"},"content":"                    } else {"},{"lineNumber":63,"author":{"gitId":"lrj689"},"content":"                        fw.write(\"D|0|\" + curr.getTaskName() + \"|\" + ((Deadlines) curr).getDeadline() + \"\\n\");"},{"lineNumber":64,"author":{"gitId":"lrj689"},"content":"                    }"},{"lineNumber":65,"author":{"gitId":"lrj689"},"content":"                }"},{"lineNumber":66,"author":{"gitId":"lrj689"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"lrj689"},"content":"            fw.close();"},{"lineNumber":68,"author":{"gitId":"lrj689"},"content":"        } catch (IOException e) {"},{"lineNumber":69,"author":{"gitId":"lrj689"},"content":"            System.out.println(\"Error occurred when trying to save file\");"},{"lineNumber":70,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":73,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"lrj689"},"content":"     * Returns an ArrayList to be passed as an argument for DukeList constructor"},{"lineNumber":75,"author":{"gitId":"lrj689"},"content":"     * @return an ArrayList of Task"},{"lineNumber":76,"author":{"gitId":"lrj689"},"content":"     * @throws FileNotFoundException if file duke.txt is not found"},{"lineNumber":77,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"lrj689"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"},{"lineNumber":79,"author":{"gitId":"lrj689"},"content":"        Scanner s \u003d new Scanner(file);"},{"lineNumber":80,"author":{"gitId":"lrj689"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":81,"author":{"gitId":"lrj689"},"content":"        while (s.hasNextLine()) {"},{"lineNumber":82,"author":{"gitId":"lrj689"},"content":"            String curr \u003d s.nextLine();"},{"lineNumber":83,"author":{"gitId":"lrj689"},"content":"            String[] currArray \u003d curr.split(\"\\\\|\");"},{"lineNumber":84,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":85,"author":{"gitId":"lrj689"},"content":"            switch (currArray[0]) {"},{"lineNumber":86,"author":{"gitId":"lrj689"},"content":"            case \"T\":"},{"lineNumber":87,"author":{"gitId":"lrj689"},"content":"                ToDos currToDos;"},{"lineNumber":88,"author":{"gitId":"lrj689"},"content":"                if (currArray[1].equals(\"0\")) {"},{"lineNumber":89,"author":{"gitId":"lrj689"},"content":"                    currToDos \u003d new ToDos(currArray[2]);"},{"lineNumber":90,"author":{"gitId":"lrj689"},"content":"                } else {"},{"lineNumber":91,"author":{"gitId":"lrj689"},"content":"                    currToDos \u003d new ToDos(currArray[2], true);"},{"lineNumber":92,"author":{"gitId":"lrj689"},"content":"                }"},{"lineNumber":93,"author":{"gitId":"lrj689"},"content":"                list.add(currToDos);"},{"lineNumber":94,"author":{"gitId":"lrj689"},"content":"                break;"},{"lineNumber":95,"author":{"gitId":"lrj689"},"content":"            case \"D\":"},{"lineNumber":96,"author":{"gitId":"lrj689"},"content":"                Deadlines currDeadlines;"},{"lineNumber":97,"author":{"gitId":"lrj689"},"content":"                if (currArray[1].equals(\"0\")) {"},{"lineNumber":98,"author":{"gitId":"lrj689"},"content":"                    currDeadlines \u003d new Deadlines(currArray[2], LocalDate.parse(currArray[3]));"},{"lineNumber":99,"author":{"gitId":"lrj689"},"content":"                } else {"},{"lineNumber":100,"author":{"gitId":"lrj689"},"content":"                    currDeadlines \u003d new Deadlines(currArray[2], LocalDate.parse(currArray[3]), true);"},{"lineNumber":101,"author":{"gitId":"lrj689"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"lrj689"},"content":"                list.add(currDeadlines);"},{"lineNumber":103,"author":{"gitId":"lrj689"},"content":"                break;"},{"lineNumber":104,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":105,"author":{"gitId":"lrj689"},"content":"            case \"E\":"},{"lineNumber":106,"author":{"gitId":"lrj689"},"content":"                Events currEvents;"},{"lineNumber":107,"author":{"gitId":"lrj689"},"content":"                if (currArray[1].equals(\"0\")) {"},{"lineNumber":108,"author":{"gitId":"lrj689"},"content":"                    currEvents \u003d new Events(currArray[2], LocalDate.parse(currArray[3]));"},{"lineNumber":109,"author":{"gitId":"lrj689"},"content":"                } else {"},{"lineNumber":110,"author":{"gitId":"lrj689"},"content":"                    currEvents \u003d new Events(currArray[2], LocalDate.parse(currArray[3]), true);"},{"lineNumber":111,"author":{"gitId":"lrj689"},"content":"                }"},{"lineNumber":112,"author":{"gitId":"lrj689"},"content":"                list.add(currEvents);"},{"lineNumber":113,"author":{"gitId":"lrj689"},"content":"                break;"},{"lineNumber":114,"author":{"gitId":"lrj689"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"lrj689"},"content":"        return list;"},{"lineNumber":117,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":118}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"     * Task class stores a String as name of the task and boolean indicating task completion"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"    private final String taskName;"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"    private boolean isDone;"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"    public Task(String name) {"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"        this.taskName \u003d name;"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"        this.isDone \u003d false;"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"    public Task(String name, boolean isDone) {"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"        this.taskName \u003d name;"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"     * Mark the task as done"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"    public void markAsDone() {"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"        isDone \u003d true;"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"     * Returns boolean of the completion of the task"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"     * @return isDone boolean"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"    public boolean isTaskDone() {"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"        return isDone;"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"     * Returns the name of the task as a string"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"     * @return taskName"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"    public String getTaskName() {"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"        return taskName;"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"        if (isDone) {"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"            return \"[X] \" + taskName;"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":"            return \"[  ] \" + taskName;"},{"lineNumber":50,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":52}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"public class ToDos extends Task {"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"    public ToDos(String name) {"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"        super(name);"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"    public ToDos(String name, boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"        super(name, isDone);"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":17}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":" * Deals with User interactions, reads user inputs and outputs text"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":" */"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"public class UI {"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"    private static final String HELP_MESSAGE \u003d \"Here are commands you can use!\\n\\n\" +"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"            \"*Read as: Description - User input\\n\" +"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"            \"*All DATE is written in YYYY-MM-DD format\\n\" +"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"            \"*Ignore square brackets when entering commands!\\n\\n\" +"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"            \"------------------------------------------------------------------\\n\\n\" +"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"            \"Add a todo task - todo [TASK_NAME]\\n\\n\" +"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"            \"Add a deadline task - deadline [TASK_NAME] /by [DATE]\\n\\n\" +"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"            \"Add an event task - event [TASK_NAME] /at [DATE]\\n\\n\" +"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"            \"Show all your tasks - list\\n\\nMark a task as done - done [TASK_NUMBER]\\n\\n\" +"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"            \"Delete a task - delete [TASK_NUMBER]\\n\\nDelete all tasks - reset\\n\\n\" +"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"            \"Show all tasks that matches a given date - show [DATE]\\n\\n\" +"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"            \"Find tasks matching a keyword - find [KEYWORD]\\n\\nSave and exit: bye\";"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Duke o/\\nWhat can I do for you today?\\n\\n\" +"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"            \"Enter \u0027help\u0027 if you are lost \u003d)\";"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Good bye and take care o/\" +"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"            \"\\nThis application will close in 5 seconds.\";"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"     * Returns a response string"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"     * @param commandAndParams Parsed user input String array"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"     * @param list DukeList"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"     * @return Response String"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"    public String commandMessage(String[] commandAndParams, DukeList list) {"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"        switch(commandAndParams[0]) {"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"        case \"done\":"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"            return doneMessage(commandAndParams[1]) + noOfTaskLeft(list);"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"        case \"delete\":"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"            return deleteMessage(commandAndParams[1]) + noOfTaskLeft(list);"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"        case \"reset\":"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"            return resetMessage() + noOfTaskLeft(list);"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":"        case \"show\":"},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"            return showMessage(list, commandAndParams[1]);"},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"        case \"todo\":"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"        case \"event\":"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"        case \"deadline\":"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"            return addTaskMessage(commandAndParams[1]) + noOfTaskLeft(list);"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"        case \"list\":"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":"            return listMessage(list);"},{"lineNumber":50,"author":{"gitId":"lrj689"},"content":"        case \"find\":"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":"            return findMessage(list, commandAndParams[1]);"},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":"        case \"bye\":"},{"lineNumber":53,"author":{"gitId":"lrj689"},"content":"            return GOODBYE_MESSAGE;"},{"lineNumber":54,"author":{"gitId":"lrj689"},"content":"        case \"help\":"},{"lineNumber":55,"author":{"gitId":"lrj689"},"content":"            return HELP_MESSAGE;"},{"lineNumber":56,"author":{"gitId":"lrj689"},"content":"        default:"},{"lineNumber":57,"author":{"gitId":"lrj689"},"content":"            return unknownCommandMessage();"},{"lineNumber":58,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":61,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"lrj689"},"content":"     * Returns a String containing all tasks with names matching the input String"},{"lineNumber":63,"author":{"gitId":"lrj689"},"content":"     * @param list DukeList"},{"lineNumber":64,"author":{"gitId":"lrj689"},"content":"     * @param keyword String of the parsed user input"},{"lineNumber":65,"author":{"gitId":"lrj689"},"content":"     * @return Response String"},{"lineNumber":66,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"lrj689"},"content":"    private String findMessage(DukeList list, String keyword) {"},{"lineNumber":68,"author":{"gitId":"lrj689"},"content":"        int size \u003d list.getSize();"},{"lineNumber":69,"author":{"gitId":"lrj689"},"content":"        int counter \u003d 1;"},{"lineNumber":70,"author":{"gitId":"lrj689"},"content":"        StringBuilder fullFindMessage \u003d new StringBuilder(\"Here are tasks matching the keyword provided\");"},{"lineNumber":71,"author":{"gitId":"lrj689"},"content":"        for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":72,"author":{"gitId":"lrj689"},"content":"            Task curr \u003d list.get(i);"},{"lineNumber":73,"author":{"gitId":"lrj689"},"content":"            if (curr.getTaskName().contains(keyword)) {"},{"lineNumber":74,"author":{"gitId":"lrj689"},"content":"                fullFindMessage.append(\"\\n\").append(counter).append(\".\").append(curr);"},{"lineNumber":75,"author":{"gitId":"lrj689"},"content":"                counter++;"},{"lineNumber":76,"author":{"gitId":"lrj689"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"lrj689"},"content":"        return fullFindMessage.toString();"},{"lineNumber":79,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":81,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"lrj689"},"content":"     * Returns all tasks in the DukeList"},{"lineNumber":83,"author":{"gitId":"lrj689"},"content":"     * @param list list within DukeList"},{"lineNumber":84,"author":{"gitId":"lrj689"},"content":"     * @return String of all tasks within the list"},{"lineNumber":85,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"lrj689"},"content":"    public String listMessage(DukeList list) {"},{"lineNumber":87,"author":{"gitId":"lrj689"},"content":"        int size \u003d list.getSize();"},{"lineNumber":88,"author":{"gitId":"lrj689"},"content":"        StringBuilder fullListMessage \u003d new StringBuilder(\"Here are your task!\");"},{"lineNumber":89,"author":{"gitId":"lrj689"},"content":"        for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":90,"author":{"gitId":"lrj689"},"content":"            fullListMessage.append(\"\\n\").append(i + 1).append(\".\").append(list.get(i));"},{"lineNumber":91,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"lrj689"},"content":"        return fullListMessage.toString();"},{"lineNumber":93,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":95,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"lrj689"},"content":"     * Returns a message string after \"done\" command"},{"lineNumber":97,"author":{"gitId":"lrj689"},"content":"     * @param taskName name of the task"},{"lineNumber":98,"author":{"gitId":"lrj689"},"content":"     * @return String message"},{"lineNumber":99,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"lrj689"},"content":"    public String doneMessage(String taskName) {"},{"lineNumber":101,"author":{"gitId":"lrj689"},"content":"        return \"Good job! The following task has been marked as done:\\n\" + taskName;"},{"lineNumber":102,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":104,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"lrj689"},"content":"     * Returns a message string after \"delete\" command"},{"lineNumber":106,"author":{"gitId":"lrj689"},"content":"     * @param taskName name of the task"},{"lineNumber":107,"author":{"gitId":"lrj689"},"content":"     * @return String message"},{"lineNumber":108,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"lrj689"},"content":"    public String deleteMessage(String taskName) {"},{"lineNumber":110,"author":{"gitId":"lrj689"},"content":"        return \"Got it! The following task has been deleted:\\n\" + taskName;"},{"lineNumber":111,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":113,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"lrj689"},"content":"     * Returns a message string after \"reset\" command"},{"lineNumber":115,"author":{"gitId":"lrj689"},"content":"     * @return String message"},{"lineNumber":116,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"lrj689"},"content":"    public String resetMessage() {"},{"lineNumber":118,"author":{"gitId":"lrj689"},"content":"        return \"Got it! All tasks have been deleted\";"},{"lineNumber":119,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":121,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"lrj689"},"content":"     * Returns a message string of all tasks that have the same dates as the input date"},{"lineNumber":123,"author":{"gitId":"lrj689"},"content":"     * @param list DukeList"},{"lineNumber":124,"author":{"gitId":"lrj689"},"content":"     * @param dateStr String of the date"},{"lineNumber":125,"author":{"gitId":"lrj689"},"content":"     * @return String message"},{"lineNumber":126,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"lrj689"},"content":"    public String showMessage(DukeList list, String dateStr) {"},{"lineNumber":128,"author":{"gitId":"lrj689"},"content":"        LocalDate date \u003d LocalDate.parse(dateStr);"},{"lineNumber":129,"author":{"gitId":"lrj689"},"content":"        int counter \u003d 1;"},{"lineNumber":130,"author":{"gitId":"lrj689"},"content":"        StringBuilder fullShowString \u003d new StringBuilder(\"Here are your task on \""},{"lineNumber":131,"author":{"gitId":"lrj689"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"},{"lineNumber":132,"author":{"gitId":"lrj689"},"content":"        for (int i \u003d 0; i \u003c list.getSize(); i++) {"},{"lineNumber":133,"author":{"gitId":"lrj689"},"content":"            Task curr \u003d list.get(i);"},{"lineNumber":134,"author":{"gitId":"lrj689"},"content":"            if (curr instanceof Deadlines \u0026\u0026 ((Deadlines) curr).getDeadline().equals(date)) {"},{"lineNumber":135,"author":{"gitId":"lrj689"},"content":"                fullShowString.append(\"\\n\").append(counter).append(\".\").append(curr);"},{"lineNumber":136,"author":{"gitId":"lrj689"},"content":"                counter++;"},{"lineNumber":137,"author":{"gitId":"lrj689"},"content":"            } else if (curr instanceof Events \u0026\u0026 ((Events) curr).getDuration().equals(date)) {"},{"lineNumber":138,"author":{"gitId":"lrj689"},"content":"                fullShowString.append(\"\\n\").append(counter).append(\".\").append(curr);"},{"lineNumber":139,"author":{"gitId":"lrj689"},"content":"                counter++;"},{"lineNumber":140,"author":{"gitId":"lrj689"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"lrj689"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"lrj689"},"content":"        return fullShowString.toString();"},{"lineNumber":143,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":145,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"lrj689"},"content":"     * Returns a message string after \"add\" command"},{"lineNumber":147,"author":{"gitId":"lrj689"},"content":"     * @param taskStr name of the task"},{"lineNumber":148,"author":{"gitId":"lrj689"},"content":"     * @return String message"},{"lineNumber":149,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"lrj689"},"content":"    public String addTaskMessage(String taskStr) {"},{"lineNumber":151,"author":{"gitId":"lrj689"},"content":"        return \"Got it! The following task has been added:\\n\" + taskStr;"},{"lineNumber":152,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":154,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"lrj689"},"content":"     * Returns a the number of task left in the list"},{"lineNumber":156,"author":{"gitId":"lrj689"},"content":"     * @param list DukeList"},{"lineNumber":157,"author":{"gitId":"lrj689"},"content":"     * @return String number of tasks left message"},{"lineNumber":158,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"lrj689"},"content":"    public String noOfTaskLeft(DukeList list) {"},{"lineNumber":160,"author":{"gitId":"lrj689"},"content":"        return \"\\nYou have \" + list.getSize() + \" Task(s) left in the list\";"},{"lineNumber":161,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":163,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"lrj689"},"content":"     * Returns the unknown command error message"},{"lineNumber":165,"author":{"gitId":"lrj689"},"content":"     * @return String unknown command message"},{"lineNumber":166,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"lrj689"},"content":"    public String unknownCommandMessage() {"},{"lineNumber":168,"author":{"gitId":"lrj689"},"content":"        return \"I\u0027m sorry, I do not know what that means\";"},{"lineNumber":169,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":171,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":172,"author":{"gitId":"lrj689"},"content":"     * Returns the missing arguments error message"},{"lineNumber":173,"author":{"gitId":"lrj689"},"content":"     * @return String missing argument message"},{"lineNumber":174,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":175,"author":{"gitId":"lrj689"},"content":"    public String showMissingArgsError() {"},{"lineNumber":176,"author":{"gitId":"lrj689"},"content":"        return \"Error! Your command has missing argument(s)!\\nTry Again!\";"},{"lineNumber":177,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":179,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"lrj689"},"content":"     * Returns the wrong arguments error message"},{"lineNumber":181,"author":{"gitId":"lrj689"},"content":"     * @return String wrong argument message"},{"lineNumber":182,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"lrj689"},"content":"    public String showWrongArgsError() {"},{"lineNumber":184,"author":{"gitId":"lrj689"},"content":"        return \"Error! Your command has invalid argument(s)!\\nTry Again!\";"},{"lineNumber":185,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":187,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":188,"author":{"gitId":"lrj689"},"content":"     * Returns the goodbye message"},{"lineNumber":189,"author":{"gitId":"lrj689"},"content":"     * @return String goodbye message"},{"lineNumber":190,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":191,"author":{"gitId":"lrj689"},"content":"    public String showGoodByeMessage() {"},{"lineNumber":192,"author":{"gitId":"lrj689"},"content":"        return GOODBYE_MESSAGE;"},{"lineNumber":193,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":195,"author":{"gitId":"lrj689"},"content":"    /**"},{"lineNumber":196,"author":{"gitId":"lrj689"},"content":"     * Returns the welcome message"},{"lineNumber":197,"author":{"gitId":"lrj689"},"content":"     * @return String welcome message"},{"lineNumber":198,"author":{"gitId":"lrj689"},"content":"     */"},{"lineNumber":199,"author":{"gitId":"lrj689"},"content":"    public String showWelcomeMessage() {"},{"lineNumber":200,"author":{"gitId":"lrj689"},"content":"        return WELCOME_MESSAGE;"},{"lineNumber":201,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":202}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"\u003c?import javafx.geometry.*?\u003e"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"\u003c?import javafx.scene.control.*?\u003e"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"\u003c?import javafx.scene.image.*?\u003e"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"\u003c?import javafx.scene.layout.*?\u003e"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"\u003c?import javafx.scene.text.*?\u003e"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"      \u003cHBox alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\"\u003e"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"         \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"              \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-radius: 20; -fx-border-radius: 20; -fx-background-color: seashell; -fx-border-width: 7; -fx-padding: 7;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"               \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"                  \u003cFont name\u003d\"Arial Bold\" size\u003d\"12.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"               \u003c/font\u003e"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"            \u003c/Label\u003e"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"         \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"      \u003c/HBox\u003e"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"    \u003c/children\u003e"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"    \u003cpadding\u003e"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"    \u003c/padding\u003e"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"lrj689":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"\u003c?import javafx.scene.control.*?\u003e"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"\u003c?import javafx.scene.layout.*?\u003e"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"\u003c?import javafx.scene.text.*?\u003e"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"    \u003cchildren\u003e"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"         \u003cfont\u003e"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"12.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"         \u003c/font\u003e\u003c/TextField\u003e"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"            \u003ccontent\u003e"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: skyblue;\" /\u003e"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"            \u003c/content\u003e"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"    \u003c/children\u003e"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"lrj689":20}},{"path":"src/test/java/DukeListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"import duke.DukeList;"},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import duke.ToDos;"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"public class DukeListTest {"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"    public void getSizeTest() {"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"        DukeList list \u003d new DukeList();"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"        list.add(new ToDos(\"test1\"));"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"        list.add(new ToDos(\"test2\"));"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"        assertEquals(2, list.getSize());"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"    public void addTest() {"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"        DukeList list \u003d new DukeList();"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"        list.add(new ToDos(\"Live\"));"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"        assertEquals(1, list.getSize());"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"    public void deleteTest() {"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"        DukeList list \u003d new DukeList();"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"        list.add(new ToDos((\"test\")));"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"        list.add(new ToDos((\"test2\")));"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"        list.delete(0);"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"        assertEquals(1, list.getSize());"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"    public void deleteAllTest() {"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"        DukeList list \u003d new DukeList();"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"        list.add(new ToDos(\"a\"));"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"        list.add(new ToDos(\"b\"));"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"        list.deleteAll();"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"        assertEquals(0, list.getSize());"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"    public void markAsDoneTest() {"},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"        DukeList list \u003d new DukeList();"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"        list.add(new ToDos(\"test\"));"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"        list.markAsDone(0);"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"        assertEquals(true, list.get(0).isTaskDone());"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":49}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"public class DukeTest {"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"    public void dummyTest() {"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"        assertEquals(2, 2);"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":""},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"}"}],"authorContributionMap":{"lrj689":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"todo go work"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"todo sleep"},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"deadline go school /by 2021-02-02"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"deadline cook dinner /by 2022-05-05"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"event exam /at 2021-02-02"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"deadline exam in school /by 2022-09-09"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"find exam"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"find school"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"find sex"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"list"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"done 1"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"done 2"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"done 3"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"delete 2"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"list"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"show 2021-02-02"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"show 2222-2-2"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"show 2022-05-05"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"sdf"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"dfadf"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"todo"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"done"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"done done"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"show 9999999"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"deadline go home"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"event sleep /by"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"reset"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"bye"}],"authorContributionMap":{"lrj689":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"PAUSE"}],"authorContributionMap":{"lrj689":1,"-":21}}]
