[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusleeeugene"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"marcusleeeugene"},"content":" * A task for deadline"},{"lineNumber":3,"author":{"gitId":"marcusleeeugene"},"content":" */"},{"lineNumber":4,"author":{"gitId":"marcusleeeugene"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"marcusleeeugene"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":7,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"marcusleeeugene"},"content":"     * Constructor for deadline"},{"lineNumber":9,"author":{"gitId":"marcusleeeugene"},"content":"     * @param description Task name"},{"lineNumber":10,"author":{"gitId":"marcusleeeugene"},"content":"     * @param by Specific date/time which task is to be done by"},{"lineNumber":11,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"marcusleeeugene"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":13,"author":{"gitId":"marcusleeeugene"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"marcusleeeugene"},"content":"        this.by \u003d by;"},{"lineNumber":15,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":17,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"marcusleeeugene"},"content":"     * Includes task type and deadline"},{"lineNumber":19,"author":{"gitId":"marcusleeeugene"},"content":"     * @return String format specific to deadline task"},{"lineNumber":20,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"marcusleeeugene"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"marcusleeeugene"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"marcusleeeugene"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":24,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"marcusleeeugene"},"content":"}"}],"authorContributionMap":{"marcusleeeugene":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusleeeugene"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":3,"author":{"gitId":"marcusleeeugene"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"marcusleeeugene"},"content":" * Driver class for Duke program"},{"lineNumber":5,"author":{"gitId":"marcusleeeugene"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"marcusleeeugene"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":9,"author":{"gitId":"marcusleeeugene"},"content":"        DukeBot dukeBot \u003d new DukeBot();"},{"lineNumber":10,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":11,"author":{"gitId":"marcusleeeugene"},"content":"        while (true) {"},{"lineNumber":12,"author":{"gitId":"marcusleeeugene"},"content":"            String command \u003d sc.nextLine();"},{"lineNumber":13,"author":{"gitId":"marcusleeeugene"},"content":"            try {"},{"lineNumber":14,"author":{"gitId":"marcusleeeugene"},"content":"                dukeBot.handleCommand(command);"},{"lineNumber":15,"author":{"gitId":"marcusleeeugene"},"content":"            } catch(DukeException ex) {"},{"lineNumber":16,"author":{"gitId":"marcusleeeugene"},"content":"                // Echoes out reason for invalid inputs"},{"lineNumber":17,"author":{"gitId":"marcusleeeugene"},"content":"                dukeBot.respondToCommand(ex.toString());"},{"lineNumber":18,"author":{"gitId":"marcusleeeugene"},"content":"            }"},{"lineNumber":19,"author":{"gitId":"marcusleeeugene"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"marcusleeeugene":17,"-":4}},{"path":"src/main/java/DukeBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusleeeugene"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"marcusleeeugene"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":4,"author":{"gitId":"marcusleeeugene"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"marcusleeeugene"},"content":" * Bot that handles user inputs, identifies specific commands and respond accordingly"},{"lineNumber":6,"author":{"gitId":"marcusleeeugene"},"content":" * Available commands: list, bye, done, delete, delete, event, deadline, todo"},{"lineNumber":7,"author":{"gitId":"marcusleeeugene"},"content":" */"},{"lineNumber":8,"author":{"gitId":"marcusleeeugene"},"content":"public class DukeBot {"},{"lineNumber":9,"author":{"gitId":"marcusleeeugene"},"content":"    private List\u003cTask\u003e taskList;"},{"lineNumber":10,"author":{"gitId":"marcusleeeugene"},"content":"    private boolean isExit;"},{"lineNumber":11,"author":{"gitId":"marcusleeeugene"},"content":"    private String commandOutput;"},{"lineNumber":12,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":13,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"marcusleeeugene"},"content":"     * Constructor for DukeBot"},{"lineNumber":15,"author":{"gitId":"marcusleeeugene"},"content":"     * Sets up duke bot to welcome user"},{"lineNumber":16,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"marcusleeeugene"},"content":"    public DukeBot() {"},{"lineNumber":18,"author":{"gitId":"marcusleeeugene"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"marcusleeeugene"},"content":"        taskList.add(null);"},{"lineNumber":20,"author":{"gitId":"marcusleeeugene"},"content":"        isExit \u003d false;"},{"lineNumber":21,"author":{"gitId":"marcusleeeugene"},"content":"        commandOutput \u003d \"Hello! I\u0027m Duke\\n\""},{"lineNumber":22,"author":{"gitId":"marcusleeeugene"},"content":"                + \"\\tWhat can I do for you?\";"},{"lineNumber":23,"author":{"gitId":"marcusleeeugene"},"content":"        respondToCommand(commandOutput);"},{"lineNumber":24,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":26,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"marcusleeeugene"},"content":"     * Executes processes depending on command given by user"},{"lineNumber":28,"author":{"gitId":"marcusleeeugene"},"content":"     * @param text Text provided by user"},{"lineNumber":29,"author":{"gitId":"marcusleeeugene"},"content":"     * @throws DukeException If task description is empty, task selection is invalid, task selection is empty"},{"lineNumber":30,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"marcusleeeugene"},"content":"    public void handleCommand(String text) throws DukeException {"},{"lineNumber":32,"author":{"gitId":"marcusleeeugene"},"content":"        commandOutput \u003d \"\";"},{"lineNumber":33,"author":{"gitId":"marcusleeeugene"},"content":"        String[] commandLine \u003d text.split(\" \");"},{"lineNumber":34,"author":{"gitId":"marcusleeeugene"},"content":"        String command \u003d commandLine[0];"},{"lineNumber":35,"author":{"gitId":"marcusleeeugene"},"content":"        String taskInfo \u003d text.replaceFirst(command + \" \", \"\");"},{"lineNumber":36,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":37,"author":{"gitId":"marcusleeeugene"},"content":"        // Throws exception for ToDo, Event and Deadline tasks"},{"lineNumber":38,"author":{"gitId":"marcusleeeugene"},"content":"        if (command.equals(\"todo\") || command.equals(\"event\") || command.equals(\"deadline\")) {"},{"lineNumber":39,"author":{"gitId":"marcusleeeugene"},"content":"            if (taskInfo.equals(command)) {"},{"lineNumber":40,"author":{"gitId":"marcusleeeugene"},"content":"                //Empty description"},{"lineNumber":41,"author":{"gitId":"marcusleeeugene"},"content":"                throw new DukeException(command, DukeExceptionType.EMPTY_DESCRIPTION);"},{"lineNumber":42,"author":{"gitId":"marcusleeeugene"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"marcusleeeugene"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":45,"author":{"gitId":"marcusleeeugene"},"content":"        // Throws exception for done and delete commands"},{"lineNumber":46,"author":{"gitId":"marcusleeeugene"},"content":"        if (command.equals(\"done\") || command.equals(\"delete\")) {"},{"lineNumber":47,"author":{"gitId":"marcusleeeugene"},"content":"            if (taskInfo.equals(command)) {"},{"lineNumber":48,"author":{"gitId":"marcusleeeugene"},"content":"                throw new DukeException(command, DukeExceptionType.EMPTY_SELECTION);"},{"lineNumber":49,"author":{"gitId":"marcusleeeugene"},"content":"            } else if (!isNumeric(taskInfo)) {"},{"lineNumber":50,"author":{"gitId":"marcusleeeugene"},"content":"                // Selection not numeric"},{"lineNumber":51,"author":{"gitId":"marcusleeeugene"},"content":"                throw new DukeException(command, DukeExceptionType.INVALID_INTEGER);"},{"lineNumber":52,"author":{"gitId":"marcusleeeugene"},"content":"            } else if (Integer.parseInt(taskInfo) \u003e taskList.size() || Integer.parseInt(taskInfo) \u003c\u003d 0) {"},{"lineNumber":53,"author":{"gitId":"marcusleeeugene"},"content":"                // Selection out of taskList range"},{"lineNumber":54,"author":{"gitId":"marcusleeeugene"},"content":"                throw new DukeException(command, DukeExceptionType.SELECTION_EXCEED_RANGE);"},{"lineNumber":55,"author":{"gitId":"marcusleeeugene"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"marcusleeeugene"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":58,"author":{"gitId":"marcusleeeugene"},"content":"        // Sets up process to be done for specific commands"},{"lineNumber":59,"author":{"gitId":"marcusleeeugene"},"content":"        switch (command) {"},{"lineNumber":60,"author":{"gitId":"marcusleeeugene"},"content":"            case \"list\":"},{"lineNumber":61,"author":{"gitId":"marcusleeeugene"},"content":"                listProcess();"},{"lineNumber":62,"author":{"gitId":"marcusleeeugene"},"content":"                break;"},{"lineNumber":63,"author":{"gitId":"marcusleeeugene"},"content":"            case \"bye\":"},{"lineNumber":64,"author":{"gitId":"marcusleeeugene"},"content":"                byeProcess();"},{"lineNumber":65,"author":{"gitId":"marcusleeeugene"},"content":"                break;"},{"lineNumber":66,"author":{"gitId":"marcusleeeugene"},"content":"            case \"done\":"},{"lineNumber":67,"author":{"gitId":"marcusleeeugene"},"content":"                doneProcess(taskInfo);"},{"lineNumber":68,"author":{"gitId":"marcusleeeugene"},"content":"                break;"},{"lineNumber":69,"author":{"gitId":"marcusleeeugene"},"content":"            case \"delete\":"},{"lineNumber":70,"author":{"gitId":"marcusleeeugene"},"content":"                deleteProcess(taskInfo);"},{"lineNumber":71,"author":{"gitId":"marcusleeeugene"},"content":"                break;"},{"lineNumber":72,"author":{"gitId":"marcusleeeugene"},"content":"            case \"event\":"},{"lineNumber":73,"author":{"gitId":"marcusleeeugene"},"content":"                eventProcess(taskInfo);"},{"lineNumber":74,"author":{"gitId":"marcusleeeugene"},"content":"                break;"},{"lineNumber":75,"author":{"gitId":"marcusleeeugene"},"content":"            case \"deadline\":"},{"lineNumber":76,"author":{"gitId":"marcusleeeugene"},"content":"                deadlineProcess(taskInfo);"},{"lineNumber":77,"author":{"gitId":"marcusleeeugene"},"content":"                break;"},{"lineNumber":78,"author":{"gitId":"marcusleeeugene"},"content":"            case \"todo\":"},{"lineNumber":79,"author":{"gitId":"marcusleeeugene"},"content":"                todoProcess(taskInfo);"},{"lineNumber":80,"author":{"gitId":"marcusleeeugene"},"content":"                break;"},{"lineNumber":81,"author":{"gitId":"marcusleeeugene"},"content":"            default:"},{"lineNumber":82,"author":{"gitId":"marcusleeeugene"},"content":"                throw new DukeException(command, DukeExceptionType.UNKNOWN_INPUT);"},{"lineNumber":83,"author":{"gitId":"marcusleeeugene"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":85,"author":{"gitId":"marcusleeeugene"},"content":"        respondToCommand(commandOutput);"},{"lineNumber":86,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":88,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"marcusleeeugene"},"content":"     * Sets up program to list out tasks"},{"lineNumber":90,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"marcusleeeugene"},"content":"    private void listProcess() {"},{"lineNumber":92,"author":{"gitId":"marcusleeeugene"},"content":"        commandOutput \u003d getTaskListContents();"},{"lineNumber":93,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":95,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"marcusleeeugene"},"content":"     * Sets up program for System exit"},{"lineNumber":97,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"marcusleeeugene"},"content":"    private void byeProcess() {"},{"lineNumber":99,"author":{"gitId":"marcusleeeugene"},"content":"        isExit \u003d true;"},{"lineNumber":100,"author":{"gitId":"marcusleeeugene"},"content":"        commandOutput \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":101,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":103,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"marcusleeeugene"},"content":"     * Marks selected task as done inside list of tasks"},{"lineNumber":105,"author":{"gitId":"marcusleeeugene"},"content":"     * @param selection Selected task"},{"lineNumber":106,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"marcusleeeugene"},"content":"    private void doneProcess(String selection) {"},{"lineNumber":108,"author":{"gitId":"marcusleeeugene"},"content":"        int taskNum \u003d Integer.parseInt(selection);"},{"lineNumber":109,"author":{"gitId":"marcusleeeugene"},"content":"        Task task \u003d taskList.get(taskNum);"},{"lineNumber":110,"author":{"gitId":"marcusleeeugene"},"content":"        task.markAsDone();"},{"lineNumber":111,"author":{"gitId":"marcusleeeugene"},"content":"        commandOutput \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t  \""},{"lineNumber":112,"author":{"gitId":"marcusleeeugene"},"content":"                + task.toString();"},{"lineNumber":113,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":115,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"marcusleeeugene"},"content":"     * Deletes selected task from list of tasks"},{"lineNumber":117,"author":{"gitId":"marcusleeeugene"},"content":"     * @param selection Selected task"},{"lineNumber":118,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"marcusleeeugene"},"content":"    private void deleteProcess(String selection) {"},{"lineNumber":120,"author":{"gitId":"marcusleeeugene"},"content":"        int taskNum \u003d Integer.parseInt(selection);"},{"lineNumber":121,"author":{"gitId":"marcusleeeugene"},"content":"        Task task \u003d taskList.get(taskNum);"},{"lineNumber":122,"author":{"gitId":"marcusleeeugene"},"content":"        taskList.remove(task);"},{"lineNumber":123,"author":{"gitId":"marcusleeeugene"},"content":"        commandOutput \u003d \"Noted. I\u0027ve removed this task: \\n\\t  \""},{"lineNumber":124,"author":{"gitId":"marcusleeeugene"},"content":"                + task.toString() + getRemainingTasks();"},{"lineNumber":125,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":127,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"marcusleeeugene"},"content":"     * Adds event task to list of tasks"},{"lineNumber":129,"author":{"gitId":"marcusleeeugene"},"content":"     * @param taskInfo Task information containing task name, specific start and end time"},{"lineNumber":130,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"marcusleeeugene"},"content":"    private void eventProcess(String taskInfo) {"},{"lineNumber":132,"author":{"gitId":"marcusleeeugene"},"content":"        String taskName \u003d taskInfo.split(\" /at\")[0].replaceFirst(\"event \", \"\");"},{"lineNumber":133,"author":{"gitId":"marcusleeeugene"},"content":"        String date \u003d taskInfo.split(\" /at \")[1];"},{"lineNumber":134,"author":{"gitId":"marcusleeeugene"},"content":"        Task task \u003d new Event(taskName, date);"},{"lineNumber":135,"author":{"gitId":"marcusleeeugene"},"content":"        taskList.add(task);"},{"lineNumber":136,"author":{"gitId":"marcusleeeugene"},"content":"        commandOutput \u003d \"Got it. I\u0027ve added this task: \\n\\t  \""},{"lineNumber":137,"author":{"gitId":"marcusleeeugene"},"content":"                + task.toString() + getRemainingTasks();"},{"lineNumber":138,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":140,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"marcusleeeugene"},"content":"     * Adds deadline task to list of tasks"},{"lineNumber":142,"author":{"gitId":"marcusleeeugene"},"content":"     * @param taskInfo Task information containing task name, specific date/time to be done by"},{"lineNumber":143,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"marcusleeeugene"},"content":"    private void deadlineProcess(String taskInfo) {"},{"lineNumber":145,"author":{"gitId":"marcusleeeugene"},"content":"        String taskName \u003d taskInfo.split(\" /by\")[0].replaceFirst(\"deadline \", \"\");"},{"lineNumber":146,"author":{"gitId":"marcusleeeugene"},"content":"        String date \u003d taskInfo.split(\" /by \")[1];"},{"lineNumber":147,"author":{"gitId":"marcusleeeugene"},"content":"        Task task \u003d new Deadline(taskName, date);"},{"lineNumber":148,"author":{"gitId":"marcusleeeugene"},"content":"        taskList.add(task);"},{"lineNumber":149,"author":{"gitId":"marcusleeeugene"},"content":"        commandOutput \u003d \"Got it. I\u0027ve added this task: \\n\\t  \""},{"lineNumber":150,"author":{"gitId":"marcusleeeugene"},"content":"                + task.toString() + getRemainingTasks();"},{"lineNumber":151,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":153,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":154,"author":{"gitId":"marcusleeeugene"},"content":"     * Adds ToDo task to list of tasks"},{"lineNumber":155,"author":{"gitId":"marcusleeeugene"},"content":"     * @param taskName Task information containing only task name"},{"lineNumber":156,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"marcusleeeugene"},"content":"    private void todoProcess(String taskName) {"},{"lineNumber":158,"author":{"gitId":"marcusleeeugene"},"content":"        Task task \u003d new ToDo(taskName);"},{"lineNumber":159,"author":{"gitId":"marcusleeeugene"},"content":"        taskList.add(task);"},{"lineNumber":160,"author":{"gitId":"marcusleeeugene"},"content":"        commandOutput \u003d \"Got it. I\u0027ve added this task: \\n\\t  \""},{"lineNumber":161,"author":{"gitId":"marcusleeeugene"},"content":"                + task.toString() + getRemainingTasks();"},{"lineNumber":162,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":164,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"marcusleeeugene"},"content":"     * Iterates through the list of tasks and numbers each of them"},{"lineNumber":166,"author":{"gitId":"marcusleeeugene"},"content":"     * @return Contents of list of tasks in String"},{"lineNumber":167,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":168,"author":{"gitId":"marcusleeeugene"},"content":"    private String getTaskListContents() {"},{"lineNumber":169,"author":{"gitId":"marcusleeeugene"},"content":"        String contents \u003d \"Here are the tasks in your list:\";"},{"lineNumber":170,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":171,"author":{"gitId":"marcusleeeugene"},"content":"        for (int i \u003d 1; i \u003c taskList.size(); i++) {"},{"lineNumber":172,"author":{"gitId":"marcusleeeugene"},"content":"            Task task \u003d taskList.get(i);"},{"lineNumber":173,"author":{"gitId":"marcusleeeugene"},"content":"            contents +\u003d String.format(\"\\n\\t%d.%s\", i, task.toString());"},{"lineNumber":174,"author":{"gitId":"marcusleeeugene"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":176,"author":{"gitId":"marcusleeeugene"},"content":"        return contents;"},{"lineNumber":177,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":179,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"marcusleeeugene"},"content":"     * Shows how many tasks are remaining inside list of tasks"},{"lineNumber":181,"author":{"gitId":"marcusleeeugene"},"content":"     * @return Size of list of tasks"},{"lineNumber":182,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"marcusleeeugene"},"content":"    private String getRemainingTasks() {"},{"lineNumber":184,"author":{"gitId":"marcusleeeugene"},"content":"        return \"\\n\\tNow you have \" + (taskList.size() - 1) + \" tasks in the list.\";"},{"lineNumber":185,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":187,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":188,"author":{"gitId":"marcusleeeugene"},"content":"     * Echoes out a response to the user\u0027s input"},{"lineNumber":189,"author":{"gitId":"marcusleeeugene"},"content":"     * @param selectedOutput Contains different output to be concatenated with main message depending on command"},{"lineNumber":190,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":191,"author":{"gitId":"marcusleeeugene"},"content":"    public void respondToCommand(String selectedOutput) {"},{"lineNumber":192,"author":{"gitId":"marcusleeeugene"},"content":"        String responseMsg \u003d \"\\t____________________________________________________________\\n\""},{"lineNumber":193,"author":{"gitId":"marcusleeeugene"},"content":"                + \"\\t\" + selectedOutput + \"\\n\""},{"lineNumber":194,"author":{"gitId":"marcusleeeugene"},"content":"                + \"\\t____________________________________________________________\\n\";"},{"lineNumber":195,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":196,"author":{"gitId":"marcusleeeugene"},"content":"        System.out.println(responseMsg);"},{"lineNumber":197,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":198,"author":{"gitId":"marcusleeeugene"},"content":"        if (isExit) {"},{"lineNumber":199,"author":{"gitId":"marcusleeeugene"},"content":"            System.exit(0);"},{"lineNumber":200,"author":{"gitId":"marcusleeeugene"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":203,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":204,"author":{"gitId":"marcusleeeugene"},"content":"     * Used for DukeException handling, to check if user provides valid numeric selection when necessary"},{"lineNumber":205,"author":{"gitId":"marcusleeeugene"},"content":"     * @param text String to check for numeric value"},{"lineNumber":206,"author":{"gitId":"marcusleeeugene"},"content":"     * @return True if valid numeric, false if invalid"},{"lineNumber":207,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":208,"author":{"gitId":"marcusleeeugene"},"content":"    private boolean isNumeric(String text) {"},{"lineNumber":209,"author":{"gitId":"marcusleeeugene"},"content":"        try {"},{"lineNumber":210,"author":{"gitId":"marcusleeeugene"},"content":"            Integer.parseInt(text);"},{"lineNumber":211,"author":{"gitId":"marcusleeeugene"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":212,"author":{"gitId":"marcusleeeugene"},"content":"            return false;"},{"lineNumber":213,"author":{"gitId":"marcusleeeugene"},"content":"        }"},{"lineNumber":214,"author":{"gitId":"marcusleeeugene"},"content":"        return true;"},{"lineNumber":215,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":217,"author":{"gitId":"marcusleeeugene"},"content":"}"}],"authorContributionMap":{"marcusleeeugene":217}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusleeeugene"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"marcusleeeugene"},"content":" * Custom Exception handling for DukeBot when handling commands"},{"lineNumber":3,"author":{"gitId":"marcusleeeugene"},"content":" */"},{"lineNumber":4,"author":{"gitId":"marcusleeeugene"},"content":"public class DukeException extends Exception {"},{"lineNumber":5,"author":{"gitId":"marcusleeeugene"},"content":"    private String command;"},{"lineNumber":6,"author":{"gitId":"marcusleeeugene"},"content":"    private DukeExceptionType ExceptionType;"},{"lineNumber":7,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":8,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"marcusleeeugene"},"content":"     * Constructor for DukeException"},{"lineNumber":10,"author":{"gitId":"marcusleeeugene"},"content":"     * @param command Command given by user"},{"lineNumber":11,"author":{"gitId":"marcusleeeugene"},"content":"     * @param exceptionType Type of exception that is caught"},{"lineNumber":12,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"marcusleeeugene"},"content":"    public DukeException(String command, DukeExceptionType exceptionType) {"},{"lineNumber":14,"author":{"gitId":"marcusleeeugene"},"content":"        super();"},{"lineNumber":15,"author":{"gitId":"marcusleeeugene"},"content":"        this.command \u003d command;"},{"lineNumber":16,"author":{"gitId":"marcusleeeugene"},"content":"        this.ExceptionType \u003d exceptionType;"},{"lineNumber":17,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":19,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"marcusleeeugene"},"content":"     * Returns the correct error message depending on exception"},{"lineNumber":21,"author":{"gitId":"marcusleeeugene"},"content":"     * @return Error message"},{"lineNumber":22,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"marcusleeeugene"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"marcusleeeugene"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"marcusleeeugene"},"content":"        String errMsg \u003d \"\";"},{"lineNumber":26,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":27,"author":{"gitId":"marcusleeeugene"},"content":"        switch (ExceptionType) {"},{"lineNumber":28,"author":{"gitId":"marcusleeeugene"},"content":"            case EMPTY_SELECTION:"},{"lineNumber":29,"author":{"gitId":"marcusleeeugene"},"content":"                errMsg \u003d \"☹ OOPS!!! The selection for \" + command + \" cannot be empty.\";"},{"lineNumber":30,"author":{"gitId":"marcusleeeugene"},"content":"                break;"},{"lineNumber":31,"author":{"gitId":"marcusleeeugene"},"content":"            case EMPTY_DESCRIPTION:"},{"lineNumber":32,"author":{"gitId":"marcusleeeugene"},"content":"                errMsg \u003d \"☹ OOPS!!! The description of a \" + command + \" cannot be empty.\";"},{"lineNumber":33,"author":{"gitId":"marcusleeeugene"},"content":"                break;"},{"lineNumber":34,"author":{"gitId":"marcusleeeugene"},"content":"            case INVALID_INTEGER:"},{"lineNumber":35,"author":{"gitId":"marcusleeeugene"},"content":"                errMsg \u003d \"☹ OOPS!!! The selection for \" + command + \" should be a valid Integer.\";"},{"lineNumber":36,"author":{"gitId":"marcusleeeugene"},"content":"                break;"},{"lineNumber":37,"author":{"gitId":"marcusleeeugene"},"content":"            case UNKNOWN_INPUT:"},{"lineNumber":38,"author":{"gitId":"marcusleeeugene"},"content":"                errMsg \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":39,"author":{"gitId":"marcusleeeugene"},"content":"                break;"},{"lineNumber":40,"author":{"gitId":"marcusleeeugene"},"content":"            case SELECTION_EXCEED_RANGE:"},{"lineNumber":41,"author":{"gitId":"marcusleeeugene"},"content":"                errMsg \u003d \"☹ OOPS!!! The selection for \" + command + \" is not within the list\u0027s range.\";"},{"lineNumber":42,"author":{"gitId":"marcusleeeugene"},"content":"                break;"},{"lineNumber":43,"author":{"gitId":"marcusleeeugene"},"content":"            default:"},{"lineNumber":44,"author":{"gitId":"marcusleeeugene"},"content":"                break;"},{"lineNumber":45,"author":{"gitId":"marcusleeeugene"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":47,"author":{"gitId":"marcusleeeugene"},"content":"        return errMsg;"},{"lineNumber":48,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"marcusleeeugene"},"content":"}"}],"authorContributionMap":{"marcusleeeugene":49}},{"path":"src/main/java/DukeExceptionType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusleeeugene"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"marcusleeeugene"},"content":" * Enum class to differentiate DukeException types"},{"lineNumber":3,"author":{"gitId":"marcusleeeugene"},"content":" */"},{"lineNumber":4,"author":{"gitId":"marcusleeeugene"},"content":"public enum DukeExceptionType {"},{"lineNumber":5,"author":{"gitId":"marcusleeeugene"},"content":"    EMPTY_SELECTION, EMPTY_DESCRIPTION, INVALID_INTEGER, UNKNOWN_INPUT, SELECTION_EXCEED_RANGE"},{"lineNumber":6,"author":{"gitId":"marcusleeeugene"},"content":"}"}],"authorContributionMap":{"marcusleeeugene":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusleeeugene"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"marcusleeeugene"},"content":" * A task for event"},{"lineNumber":3,"author":{"gitId":"marcusleeeugene"},"content":" */"},{"lineNumber":4,"author":{"gitId":"marcusleeeugene"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"marcusleeeugene"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":7,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"marcusleeeugene"},"content":"     * Constructor for event"},{"lineNumber":9,"author":{"gitId":"marcusleeeugene"},"content":"     * @param description Task name"},{"lineNumber":10,"author":{"gitId":"marcusleeeugene"},"content":"     * @param at Start at a specific time and ends at a specific time"},{"lineNumber":11,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"marcusleeeugene"},"content":"    public Event(String description, String at) {"},{"lineNumber":13,"author":{"gitId":"marcusleeeugene"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"marcusleeeugene"},"content":"        this.at \u003d at;"},{"lineNumber":15,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":17,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"marcusleeeugene"},"content":"     * Includes task type and specific start and end time"},{"lineNumber":19,"author":{"gitId":"marcusleeeugene"},"content":"     * @return String format specific to event task"},{"lineNumber":20,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"marcusleeeugene"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"marcusleeeugene"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"marcusleeeugene"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":24,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"marcusleeeugene"},"content":"}"}],"authorContributionMap":{"marcusleeeugene":25}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusleeeugene"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"marcusleeeugene"},"content":" * Task created by user"},{"lineNumber":3,"author":{"gitId":"marcusleeeugene"},"content":" */"},{"lineNumber":4,"author":{"gitId":"marcusleeeugene"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"marcusleeeugene"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"marcusleeeugene"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":8,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"marcusleeeugene"},"content":"     * Constructor for Task"},{"lineNumber":10,"author":{"gitId":"marcusleeeugene"},"content":"     * @param description Task Name"},{"lineNumber":11,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"marcusleeeugene"},"content":"    public Task(String description) {"},{"lineNumber":13,"author":{"gitId":"marcusleeeugene"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"marcusleeeugene"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":17,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"marcusleeeugene"},"content":"     * Marks a task as done"},{"lineNumber":19,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"marcusleeeugene"},"content":"    public void markAsDone() {"},{"lineNumber":21,"author":{"gitId":"marcusleeeugene"},"content":"        this.isDone \u003d true;"},{"lineNumber":22,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":24,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"marcusleeeugene"},"content":"     * Gets a task status"},{"lineNumber":26,"author":{"gitId":"marcusleeeugene"},"content":"     * @return Tick if marked as done, empty string if not done"},{"lineNumber":27,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"marcusleeeugene"},"content":"    public String getStatusIcon() {"},{"lineNumber":29,"author":{"gitId":"marcusleeeugene"},"content":"        return (isDone ? \"\\u2713\" : \" \"); //return tick"},{"lineNumber":30,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":32,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"marcusleeeugene"},"content":"     * Retrieves task name"},{"lineNumber":34,"author":{"gitId":"marcusleeeugene"},"content":"     * @return Task name"},{"lineNumber":35,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"marcusleeeugene"},"content":"    public String getDescription() {"},{"lineNumber":37,"author":{"gitId":"marcusleeeugene"},"content":"        return String.format(\"%s\", description);"},{"lineNumber":38,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":40,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"marcusleeeugene"},"content":"     * Returns status icon and task name"},{"lineNumber":42,"author":{"gitId":"marcusleeeugene"},"content":"     * @return Status icon and task name"},{"lineNumber":43,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"marcusleeeugene"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"marcusleeeugene"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"marcusleeeugene"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), getDescription());"},{"lineNumber":47,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":49,"author":{"gitId":"marcusleeeugene"},"content":"}"}],"authorContributionMap":{"marcusleeeugene":49}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusleeeugene"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"marcusleeeugene"},"content":" * A task for ToDo"},{"lineNumber":3,"author":{"gitId":"marcusleeeugene"},"content":" */"},{"lineNumber":4,"author":{"gitId":"marcusleeeugene"},"content":"public class ToDo extends Task {"},{"lineNumber":5,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":6,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"marcusleeeugene"},"content":"     * Constructor for ToDo"},{"lineNumber":8,"author":{"gitId":"marcusleeeugene"},"content":"     * @param description Task name"},{"lineNumber":9,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"marcusleeeugene"},"content":"    public ToDo(String description) {"},{"lineNumber":11,"author":{"gitId":"marcusleeeugene"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"marcusleeeugene"},"content":""},{"lineNumber":14,"author":{"gitId":"marcusleeeugene"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"marcusleeeugene"},"content":"     * Includes task type"},{"lineNumber":16,"author":{"gitId":"marcusleeeugene"},"content":"     * @return String format specific to ToDo task"},{"lineNumber":17,"author":{"gitId":"marcusleeeugene"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"marcusleeeugene"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"marcusleeeugene"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"marcusleeeugene"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":21,"author":{"gitId":"marcusleeeugene"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"marcusleeeugene"},"content":"}"}],"authorContributionMap":{"marcusleeeugene":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marcusleeeugene"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"marcusleeeugene"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"marcusleeeugene"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"marcusleeeugene"},"content":"list"},{"lineNumber":5,"author":{"gitId":"marcusleeeugene"},"content":"blah"},{"lineNumber":6,"author":{"gitId":"marcusleeeugene"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"marcusleeeugene"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"marcusleeeugene"},"content":"list"},{"lineNumber":9,"author":{"gitId":"marcusleeeugene"},"content":"todo"},{"lineNumber":10,"author":{"gitId":"marcusleeeugene"},"content":"event"},{"lineNumber":11,"author":{"gitId":"marcusleeeugene"},"content":"deadline"},{"lineNumber":12,"author":{"gitId":"marcusleeeugene"},"content":"delete"},{"lineNumber":13,"author":{"gitId":"marcusleeeugene"},"content":"delete 2"},{"lineNumber":14,"author":{"gitId":"marcusleeeugene"},"content":"list"},{"lineNumber":15,"author":{"gitId":"marcusleeeugene"},"content":"bye"}],"authorContributionMap":{"marcusleeeugene":15}}]
