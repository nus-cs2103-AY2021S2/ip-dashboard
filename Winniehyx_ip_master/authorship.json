[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"        String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"        implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"    enableAssertions \u003d true"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":"tasks.withType(Checkstyle) {"},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":"    reports {"},{"lineNumber":65,"author":{"gitId":"Winniehyx"},"content":"        xml.enabled false"},{"lineNumber":66,"author":{"gitId":"Winniehyx"},"content":"        html.enabled true"},{"lineNumber":67,"author":{"gitId":"Winniehyx"},"content":"        html.stylesheet resources.text.fromFile(\u0027config/xsl/checkstyle-custom.xsl\u0027)"},{"lineNumber":68,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"-":45,"Winniehyx":24}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"T|1|clean floor|NULL"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"D|0|return book |2021-03-06T10:00|NULL"},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"E|0|project meeting |8/3/2021 1200|NULL"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"T|0|join sports club |club"}],"authorContributionMap":{"Winniehyx":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"This is Duke\u0027s user guide. It is a basic scheduling app that is easy to use."},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"## Setting up in Intellij"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"1. From www.github.com/winniehyx/ip/releases, download the latest duke.jar ."},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"2. For Windows, open the jar file to start the app. The GUI for Duke would appear. For Mac, type `java -jar duke.jar` into the terminal to run the file."},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"4. Refer to `Features` for the commands you can type in the command box. "},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"   "},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"5.Press Enter on your keyboard to execute the commands."},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"Image of Ui:"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"https://github.com/Winniehyx/ip/blob/master/docs/Ui.png"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"## List of Features "},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"These are the following features of Duke:"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"### Add tasks"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"Add task into the tasklist."},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"### Delete tasks"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"Deletes the task from the tasklist."},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"### List tasks"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"List all the task in the tasklist."},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"### Mark task as done"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"Marks the task as done."},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"### Tag tasks"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"Tag the task added."},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"### Find tag/task"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"Display the list of task that has the tag/task in the tasklist."},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"## Categories of tasks"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"There are 3 categories of tasks:"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"1) Todo represented by"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"   [T][ ] find book"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"2) Deadline"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"   [D][ ] return book (by: 10/02/2021 1003)"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"3) Event"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"   [E][ ] project meeting (at: 10/02/2021 2000)"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":"## Notes about commands"},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"When there are extra parameters behind the function \u0027list\u0027 , the program is smart enough to know that the user wants the \u0027list\u0027 function so no error would be thrown and the tasklist would be displayed."},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"The date format should be written in the format \"d/M/yyyy HHmm\", else an error would be thrown."},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"Tag should be the last argument."},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"   "},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"# Saving of commands"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":"Commands would be saved into a file once the \u0027bye\u0027 command is typed into the app. Data will be saved in the directory where you saved the jar file, under /data/duke.txt . A new file would be formed if there are no existing file. If there exists an existing file, the file would be used. "},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"### \u0027todo\u0027"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"Adds a todo task into the tasklist."},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"`todo borrow book`"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"Expected outcome:"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":"`[T][X] borrow book`"},{"lineNumber":65,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":66,"author":{"gitId":"Winniehyx"},"content":"### \u0027event\u0027"},{"lineNumber":67,"author":{"gitId":"Winniehyx"},"content":"Adds an event task into the tasklist. It can work with only the description, the same way as todo."},{"lineNumber":68,"author":{"gitId":"Winniehyx"},"content":"The time input for /at can be a duration or a time itself."},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":70,"author":{"gitId":"Winniehyx"},"content":"Example of usage:"},{"lineNumber":71,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":72,"author":{"gitId":"Winniehyx"},"content":"`event project meeting /at 10/02/2021 1030-1200`"},{"lineNumber":73,"author":{"gitId":"Winniehyx"},"content":"`event birthday party /at 15/02/2021 1000`"},{"lineNumber":74,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":75,"author":{"gitId":"Winniehyx"},"content":"Expected outcome:"},{"lineNumber":76,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":77,"author":{"gitId":"Winniehyx"},"content":"`[T][X] event project meeting (at: 10/02/2021 1030-1200)`"},{"lineNumber":78,"author":{"gitId":"Winniehyx"},"content":"`[T][X] birthday party (at: 15/02/2021 1000)`"},{"lineNumber":79,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":80,"author":{"gitId":"Winniehyx"},"content":"### \u0027deadline\u0027"},{"lineNumber":81,"author":{"gitId":"Winniehyx"},"content":"Adds an deadline task into the tasklist. It can work with only the description, the same way as todo."},{"lineNumber":82,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":83,"author":{"gitId":"Winniehyx"},"content":"Example of usage:"},{"lineNumber":84,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":85,"author":{"gitId":"Winniehyx"},"content":"`deadline submission /by 11/02/2021 1000`"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"Winniehyx"},"content":"`[D][X] submission (by: 11/02/2021 1000`"},{"lineNumber":90,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":91,"author":{"gitId":"Winniehyx"},"content":"### \u0027delete\u0027"},{"lineNumber":92,"author":{"gitId":"Winniehyx"},"content":"Delete the task corresponding to that number in the tasklist."},{"lineNumber":93,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":94,"author":{"gitId":"Winniehyx"},"content":"Example of usage:"},{"lineNumber":95,"author":{"gitId":"Winniehyx"},"content":"`delete 2`"},{"lineNumber":96,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":97,"author":{"gitId":"Winniehyx"},"content":"Expected outcome:"},{"lineNumber":98,"author":{"gitId":"Winniehyx"},"content":"The second task in the list (if present) would be deleted."},{"lineNumber":99,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":100,"author":{"gitId":"Winniehyx"},"content":"### \u0027done\u0027"},{"lineNumber":101,"author":{"gitId":"Winniehyx"},"content":"Marks the task corresponding to that number in the tasklist as done with a tick."},{"lineNumber":102,"author":{"gitId":"Winniehyx"},"content":"Status changes from [X] to [✔]"},{"lineNumber":103,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":104,"author":{"gitId":"Winniehyx"},"content":"Example of usage:"},{"lineNumber":105,"author":{"gitId":"Winniehyx"},"content":"`done 2`"},{"lineNumber":106,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":107,"author":{"gitId":"Winniehyx"},"content":"Expected outcome:"},{"lineNumber":108,"author":{"gitId":"Winniehyx"},"content":"The second task in the list (if present) would be marked as done."},{"lineNumber":109,"author":{"gitId":"Winniehyx"},"content":"`[T][✔] event project meeting (at: 10/02/2021 1030)`"},{"lineNumber":110,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":111,"author":{"gitId":"Winniehyx"},"content":"### \u0027list\u0027"},{"lineNumber":112,"author":{"gitId":"Winniehyx"},"content":"Lists all the tasks in the tasklist."},{"lineNumber":113,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":114,"author":{"gitId":"Winniehyx"},"content":"Example of usage:"},{"lineNumber":115,"author":{"gitId":"Winniehyx"},"content":"`list`"},{"lineNumber":116,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":117,"author":{"gitId":"Winniehyx"},"content":"Expected outcome:"},{"lineNumber":118,"author":{"gitId":"Winniehyx"},"content":"The list of task in the order that they are added would be displayed."},{"lineNumber":119,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":120,"author":{"gitId":"Winniehyx"},"content":"### \u0027tag\u0027"},{"lineNumber":121,"author":{"gitId":"Winniehyx"},"content":"Tags a specific task in the tasklist. Tag should come after at or by."},{"lineNumber":122,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":123,"author":{"gitId":"Winniehyx"},"content":"Example of usage:"},{"lineNumber":124,"author":{"gitId":"Winniehyx"},"content":"`todo buy shoes /tag purchase`"},{"lineNumber":125,"author":{"gitId":"Winniehyx"},"content":"`deadline join archery /by 10/02/2021 1000 /tag club`"},{"lineNumber":126,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":127,"author":{"gitId":"Winniehyx"},"content":"Expected outcome:"},{"lineNumber":128,"author":{"gitId":"Winniehyx"},"content":"`todo buy shoes (tag: purchase)`"},{"lineNumber":129,"author":{"gitId":"Winniehyx"},"content":"`deadline join archery (by: 10/02/2021 1000 (tag: club)`"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"Winniehyx"},"content":"### \u0027find\u0027"},{"lineNumber":132,"author":{"gitId":"Winniehyx"},"content":"Finds the word in the description or the tag from the tasklist."},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":135,"author":{"gitId":"Winniehyx"},"content":"`find purchase`"},{"lineNumber":136,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":137,"author":{"gitId":"Winniehyx"},"content":"Expected outcome:"},{"lineNumber":138,"author":{"gitId":"Winniehyx"},"content":"The tasks with the word `purchase` in it would be displayed."},{"lineNumber":139,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":140,"author":{"gitId":"Winniehyx"},"content":"### \u0027bye\u0027"},{"lineNumber":141,"author":{"gitId":"Winniehyx"},"content":"Saves the tasks keyed in into the /data/duke.txt . Returns bye and terminates the program."},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"Winniehyx"},"content":"Example of usage:"},{"lineNumber":144,"author":{"gitId":"Winniehyx"},"content":"`bye`"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":147,"author":{"gitId":"Winniehyx"},"content":"`bye`"},{"lineNumber":148,"author":{"gitId":"Winniehyx"},"content":"Program will terminate."},{"lineNumber":149,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":150,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":151,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":152,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":153,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":154,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":155,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":156,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"-":22,"Winniehyx":135}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":" * This control represents a dialog box consisting of an ImageView"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":" * to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":" */"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"     * Label of dialog."},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"    private Label dialog;"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"     * displayPicture function of ImageView."},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"    private ImageView displayPicture;"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource("},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"                    \"/view/DialogBox.fxml\"));"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"            fxmlLoader.load();"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"            e.printStackTrace();"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":"        dialog.setText(text);"},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"        displayPicture.setImage(img);"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"     * Flips the dialog box such that the ImageView is on the"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"     * left and text on the right."},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"    private void flip() {"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList("},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":"                this.getChildren());"},{"lineNumber":53,"author":{"gitId":"Winniehyx"},"content":"        Collections.reverse(tmp);"},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"     * Creates User Dialog Box."},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"     * @param text"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"     * @param img"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":"     * @return a new dialog Box for the user"},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":66,"author":{"gitId":"Winniehyx"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":67,"author":{"gitId":"Winniehyx"},"content":"        return new DialogBox(text, img);"},{"lineNumber":68,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":70,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"Winniehyx"},"content":"     * Creates Duke dialog box."},{"lineNumber":72,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"Winniehyx"},"content":"     * @param text"},{"lineNumber":74,"author":{"gitId":"Winniehyx"},"content":"     * @param img"},{"lineNumber":75,"author":{"gitId":"Winniehyx"},"content":"     * @return a dialog Box for Duke"},{"lineNumber":76,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"Winniehyx"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":78,"author":{"gitId":"Winniehyx"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":79,"author":{"gitId":"Winniehyx"},"content":"        db.flip();"},{"lineNumber":80,"author":{"gitId":"Winniehyx"},"content":"        return db;"},{"lineNumber":81,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":83,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"Winniehyx"},"content":"     * Method for the Dialog box to display."},{"lineNumber":85,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"Winniehyx"},"content":"     * @param text"},{"lineNumber":87,"author":{"gitId":"Winniehyx"},"content":"     * @param img"},{"lineNumber":88,"author":{"gitId":"Winniehyx"},"content":"     * @return the startup image and message"},{"lineNumber":89,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"Winniehyx"},"content":"    public static DialogBox getStartUpMessage(String text, Image img) {"},{"lineNumber":91,"author":{"gitId":"Winniehyx"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":92,"author":{"gitId":"Winniehyx"},"content":"        db.setAlignment(Pos.BASELINE_CENTER);"},{"lineNumber":93,"author":{"gitId":"Winniehyx"},"content":"        return db;"},{"lineNumber":94,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":95}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"import static java.lang.System.exit;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"import storage.Storage;"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"import task.Deadlines;"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"import task.Events;"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"import task.Task;"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"import task.TaskList;"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"import task.Todo;"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"import ui.Ui;"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"    private Storage storage;"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"    private TaskList taskList;"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"    private Ui ui;"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"     * Initialise Duke."},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"    public Duke() {"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"        this.storage \u003d new Storage(System.getProperty("},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"                \"user.dir\") + \"/data/\", \"duke.txt\");"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"            this.taskList \u003d storage.loadFromHardisk();"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"        } catch (Exception e) {"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"            System.out.println(\"Error loading from storage,\""},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"                    + \"starting with new tasklist\");"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"            this.taskList \u003d new TaskList();"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"     * Gives the corresponding output for the given task."},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"     * @param input"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"     * @return output on the Ui based on what the user has typed"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"    public Response getResponse(String input) {"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"        Response response;"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"        String[] tokens \u003d input.split(\" \", 2);"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"        String command \u003d tokens[0];"},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"        String argument \u003d tokens.length \u003d\u003d 2 ? tokens[1] : null;"},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":"        switch (command) {"},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":"        case \"bye\":"},{"lineNumber":53,"author":{"gitId":"Winniehyx"},"content":"            response \u003d executeByeCommand();"},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":"            break;"},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"        case \"list\":"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"            response \u003d executeListCommand();"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"            break;"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"        case \"done\":"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"            response \u003d executeDoneCommand(argument);"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"            break;"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"        case \"todo\":"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"            response \u003d executeTodoCommand(argument);"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":"            break;"},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":"        case \"deadline\":"},{"lineNumber":65,"author":{"gitId":"Winniehyx"},"content":"            response \u003d executeDeadlineCommand(argument);"},{"lineNumber":66,"author":{"gitId":"Winniehyx"},"content":"            break;"},{"lineNumber":67,"author":{"gitId":"Winniehyx"},"content":"        case \"event\":"},{"lineNumber":68,"author":{"gitId":"Winniehyx"},"content":"            response \u003d executeEventCommand(argument);"},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":"            break;"},{"lineNumber":70,"author":{"gitId":"Winniehyx"},"content":"        case \"delete\":"},{"lineNumber":71,"author":{"gitId":"Winniehyx"},"content":"            response \u003d executeDeleteCommand(argument);"},{"lineNumber":72,"author":{"gitId":"Winniehyx"},"content":"            break;"},{"lineNumber":73,"author":{"gitId":"Winniehyx"},"content":"        case \"find\":"},{"lineNumber":74,"author":{"gitId":"Winniehyx"},"content":"            response \u003d executeFindCommand(argument);"},{"lineNumber":75,"author":{"gitId":"Winniehyx"},"content":"            break;"},{"lineNumber":76,"author":{"gitId":"Winniehyx"},"content":"        default:"},{"lineNumber":77,"author":{"gitId":"Winniehyx"},"content":"            response \u003d new Response(\"OOPS!!! I\u0027m sorry, \""},{"lineNumber":78,"author":{"gitId":"Winniehyx"},"content":"                    + \"but I don\u0027t know what that means :-(\", false);"},{"lineNumber":79,"author":{"gitId":"Winniehyx"},"content":"            break;"},{"lineNumber":80,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":82,"author":{"gitId":"Winniehyx"},"content":"        return response;"},{"lineNumber":83,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":85,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"Winniehyx"},"content":"     * Executes Bye Command."},{"lineNumber":87,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"Winniehyx"},"content":"     * @return String to represent termination of the program"},{"lineNumber":89,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"Winniehyx"},"content":"    private Response executeByeCommand() {"},{"lineNumber":91,"author":{"gitId":"Winniehyx"},"content":"        storage.saveToHardisk(taskList);"},{"lineNumber":92,"author":{"gitId":"Winniehyx"},"content":"        return new Response(\"bye\", true);"},{"lineNumber":93,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":95,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"Winniehyx"},"content":"     * Lists out all tasks."},{"lineNumber":97,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"Winniehyx"},"content":"     * @return String to represent termination of the program"},{"lineNumber":99,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"Winniehyx"},"content":"    private Response executeListCommand() {"},{"lineNumber":101,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":102,"author":{"gitId":"Winniehyx"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":103,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":104,"author":{"gitId":"Winniehyx"},"content":"        if (taskList.size() \u003d\u003d 0) {"},{"lineNumber":105,"author":{"gitId":"Winniehyx"},"content":"            sb.append(\"There are no tasks in your task list\\n\");"},{"lineNumber":106,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":107,"author":{"gitId":"Winniehyx"},"content":"            sb.append(\"Here are the tasks in your task list:\\n\");"},{"lineNumber":108,"author":{"gitId":"Winniehyx"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":109,"author":{"gitId":"Winniehyx"},"content":"                sb.append(Integer.toString(i + 1) + \". \""},{"lineNumber":110,"author":{"gitId":"Winniehyx"},"content":"                        + taskList.get(i).getTypeIcon()"},{"lineNumber":111,"author":{"gitId":"Winniehyx"},"content":"                        + taskList.get(i).getStatusIcon() + \" \""},{"lineNumber":112,"author":{"gitId":"Winniehyx"},"content":"                        + taskList.get(i).getDescription() + \"\\n\""},{"lineNumber":113,"author":{"gitId":"Winniehyx"},"content":"                );"},{"lineNumber":114,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"Winniehyx"},"content":"        return new Response(sb.toString(), false);"},{"lineNumber":117,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":118,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":120,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"Winniehyx"},"content":"     * Executes Done Command."},{"lineNumber":122,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":123,"author":{"gitId":"Winniehyx"},"content":"     * @param argument command arguments"},{"lineNumber":124,"author":{"gitId":"Winniehyx"},"content":"     * @return String to represent termination of the program"},{"lineNumber":125,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"Winniehyx"},"content":"    private Response executeDoneCommand(String argument) {"},{"lineNumber":127,"author":{"gitId":"Winniehyx"},"content":"        // check for correct number of arguments"},{"lineNumber":128,"author":{"gitId":"Winniehyx"},"content":"        assert argument !\u003d null : \"OOPS!!! The description of \""},{"lineNumber":129,"author":{"gitId":"Winniehyx"},"content":"                + \"a done cannot be empty.\";"},{"lineNumber":130,"author":{"gitId":"Winniehyx"},"content":"        // check if argument is an integer"},{"lineNumber":131,"author":{"gitId":"Winniehyx"},"content":"        int taskId;"},{"lineNumber":132,"author":{"gitId":"Winniehyx"},"content":"        try {"},{"lineNumber":133,"author":{"gitId":"Winniehyx"},"content":"            taskId \u003d Integer.parseInt(argument) - 1;"},{"lineNumber":134,"author":{"gitId":"Winniehyx"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":135,"author":{"gitId":"Winniehyx"},"content":"            return new Response(\"OOPS!!! The id of a done\""},{"lineNumber":136,"author":{"gitId":"Winniehyx"},"content":"                    + \" must be an integer.\", false);"},{"lineNumber":137,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"Winniehyx"},"content":"        // check if integer is within bounds"},{"lineNumber":139,"author":{"gitId":"Winniehyx"},"content":"        if (taskId \u003e\u003d taskList.size() || taskId \u003c 0) {"},{"lineNumber":140,"author":{"gitId":"Winniehyx"},"content":"            return new Response(\"OOPS!!! That is an invalid task id.\", false);"},{"lineNumber":141,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":143,"author":{"gitId":"Winniehyx"},"content":"        Task task \u003d taskList.get(taskId);"},{"lineNumber":144,"author":{"gitId":"Winniehyx"},"content":"        task.markAsDone();"},{"lineNumber":145,"author":{"gitId":"Winniehyx"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":146,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":147,"author":{"gitId":"Winniehyx"},"content":"        sb.append(\"Nice! I\u0027ve marked this task as done: \\n\""},{"lineNumber":148,"author":{"gitId":"Winniehyx"},"content":"                + task.getStatusIcon() + \" \""},{"lineNumber":149,"author":{"gitId":"Winniehyx"},"content":"                + task.getDescription()"},{"lineNumber":150,"author":{"gitId":"Winniehyx"},"content":"        );"},{"lineNumber":151,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":152,"author":{"gitId":"Winniehyx"},"content":"        return new Response(sb.toString(), false);"},{"lineNumber":153,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":155,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"Winniehyx"},"content":"     * Executes Todo Command."},{"lineNumber":157,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":158,"author":{"gitId":"Winniehyx"},"content":"     * @param argument command arguments"},{"lineNumber":159,"author":{"gitId":"Winniehyx"},"content":"     * @return String to represent termination of the program"},{"lineNumber":160,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":161,"author":{"gitId":"Winniehyx"},"content":"    private Response executeTodoCommand(String argument) {"},{"lineNumber":162,"author":{"gitId":"Winniehyx"},"content":"        assert argument !\u003d null : \"OOPS!!! The description of a \""},{"lineNumber":163,"author":{"gitId":"Winniehyx"},"content":"                + \"done cannot be empty.\";"},{"lineNumber":164,"author":{"gitId":"Winniehyx"},"content":"        String[] split \u003d argument.split(\"/tag\", 2);"},{"lineNumber":165,"author":{"gitId":"Winniehyx"},"content":"        String description \u003d split[0];"},{"lineNumber":166,"author":{"gitId":"Winniehyx"},"content":"        String tag \u003d split.length \u003e 1 ? split[1].strip() : null;"},{"lineNumber":167,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":168,"author":{"gitId":"Winniehyx"},"content":"        Task task \u003d new Todo(description, tag);"},{"lineNumber":169,"author":{"gitId":"Winniehyx"},"content":"        taskList.add(task);"},{"lineNumber":170,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":171,"author":{"gitId":"Winniehyx"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":172,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":173,"author":{"gitId":"Winniehyx"},"content":"        sb.append(\"Got it. I\u0027ve added this task:\\n\");"},{"lineNumber":174,"author":{"gitId":"Winniehyx"},"content":"        sb.append(\"  \" + task.getTypeIcon() + task.getStatusIcon() + \" \""},{"lineNumber":175,"author":{"gitId":"Winniehyx"},"content":"                + task.getDescription() + \"\\n\");"},{"lineNumber":176,"author":{"gitId":"Winniehyx"},"content":"        sb.append(\"Now you have \" + taskList.size() + \" tasks in the list\");"},{"lineNumber":177,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":178,"author":{"gitId":"Winniehyx"},"content":"        return new Response(sb.toString(), false);"},{"lineNumber":179,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":181,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":182,"author":{"gitId":"Winniehyx"},"content":"     * Executes Deadline Command."},{"lineNumber":183,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":184,"author":{"gitId":"Winniehyx"},"content":"     * @param argument command arguments"},{"lineNumber":185,"author":{"gitId":"Winniehyx"},"content":"     * @return String to represent termination of the program"},{"lineNumber":186,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":187,"author":{"gitId":"Winniehyx"},"content":"    private Response executeDeadlineCommand(String argument) {"},{"lineNumber":188,"author":{"gitId":"Winniehyx"},"content":"        assert argument !\u003d null : \"OOPS!!! The description of a \""},{"lineNumber":189,"author":{"gitId":"Winniehyx"},"content":"                + \"deadline cannot be empty.\";"},{"lineNumber":190,"author":{"gitId":"Winniehyx"},"content":"        DateTimeFormatter formatter \u003d"},{"lineNumber":191,"author":{"gitId":"Winniehyx"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"},{"lineNumber":192,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":193,"author":{"gitId":"Winniehyx"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":194,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":195,"author":{"gitId":"Winniehyx"},"content":"        String[] split \u003d argument.split(\"/tag\", 2);"},{"lineNumber":196,"author":{"gitId":"Winniehyx"},"content":"        String arg1 \u003d split[0];"},{"lineNumber":197,"author":{"gitId":"Winniehyx"},"content":"        String tag \u003d split.length \u003e 1 ? split[1].strip() : null;"},{"lineNumber":198,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":199,"author":{"gitId":"Winniehyx"},"content":"        split \u003d arg1.split(\"/by\", 2);"},{"lineNumber":200,"author":{"gitId":"Winniehyx"},"content":"        String description \u003d split[0];"},{"lineNumber":201,"author":{"gitId":"Winniehyx"},"content":"        String by \u003d split.length \u003e 1 ? split[1].strip() : null;"},{"lineNumber":202,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":203,"author":{"gitId":"Winniehyx"},"content":"        if (by !\u003d null) {"},{"lineNumber":204,"author":{"gitId":"Winniehyx"},"content":"            try {"},{"lineNumber":205,"author":{"gitId":"Winniehyx"},"content":"                LocalDateTime.parse(by, formatter);"},{"lineNumber":206,"author":{"gitId":"Winniehyx"},"content":"            } catch (Exception e) {"},{"lineNumber":207,"author":{"gitId":"Winniehyx"},"content":"                return new Response(\"Incorrect data \""},{"lineNumber":208,"author":{"gitId":"Winniehyx"},"content":"                        + \"format: d/M/yyyy HHmm\", false);"},{"lineNumber":209,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":210,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":212,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":213,"author":{"gitId":"Winniehyx"},"content":"        Task task \u003d new Deadlines(description, by, tag);"},{"lineNumber":214,"author":{"gitId":"Winniehyx"},"content":"        taskList.add(task);"},{"lineNumber":215,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":216,"author":{"gitId":"Winniehyx"},"content":"        sb.append(\"Got it. I have added this task:\\n\");"},{"lineNumber":217,"author":{"gitId":"Winniehyx"},"content":"        sb.append(\"  \" + task.getTypeIcon() + task.getStatusIcon() + \" \""},{"lineNumber":218,"author":{"gitId":"Winniehyx"},"content":"                + task.getDescription() + \"\\n\");"},{"lineNumber":219,"author":{"gitId":"Winniehyx"},"content":"        sb.append(\"Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":220,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":221,"author":{"gitId":"Winniehyx"},"content":"        return new Response(sb.toString(), false);"},{"lineNumber":222,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":224,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":225,"author":{"gitId":"Winniehyx"},"content":"     * Executes Events Command."},{"lineNumber":226,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":227,"author":{"gitId":"Winniehyx"},"content":"     * @param argument command arguments"},{"lineNumber":228,"author":{"gitId":"Winniehyx"},"content":"     * @return String to represent termination of the program"},{"lineNumber":229,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":230,"author":{"gitId":"Winniehyx"},"content":"    private Response executeEventCommand(String argument) {"},{"lineNumber":231,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":232,"author":{"gitId":"Winniehyx"},"content":"        assert argument !\u003d null : \"OOPS!!! The description of \""},{"lineNumber":233,"author":{"gitId":"Winniehyx"},"content":"                + \"an event cannot be empty.\";"},{"lineNumber":234,"author":{"gitId":"Winniehyx"},"content":"        String[] split \u003d argument.split(\"/tag\", 2);"},{"lineNumber":235,"author":{"gitId":"Winniehyx"},"content":"        String arg1 \u003d split[0];"},{"lineNumber":236,"author":{"gitId":"Winniehyx"},"content":"        String tag \u003d split.length \u003e 1 ? split[1].strip() : null;"},{"lineNumber":237,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":238,"author":{"gitId":"Winniehyx"},"content":"        split \u003d arg1.split(\"/at\", 2);"},{"lineNumber":239,"author":{"gitId":"Winniehyx"},"content":"        String description \u003d split[0];"},{"lineNumber":240,"author":{"gitId":"Winniehyx"},"content":"        String at \u003d split.length \u003e 1 ? split[1].strip() : null;"},{"lineNumber":241,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":242,"author":{"gitId":"Winniehyx"},"content":"        Task task \u003d new Events(description, at, tag);"},{"lineNumber":243,"author":{"gitId":"Winniehyx"},"content":"        taskList.add(task);"},{"lineNumber":244,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":245,"author":{"gitId":"Winniehyx"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":246,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":247,"author":{"gitId":"Winniehyx"},"content":"        sb.append(\"Got it. I have added this task:\\n\");"},{"lineNumber":248,"author":{"gitId":"Winniehyx"},"content":"        sb.append(\"  \" + task.getTypeIcon() + task.getStatusIcon() + \" \""},{"lineNumber":249,"author":{"gitId":"Winniehyx"},"content":"                + task.getDescription() + \"\\n\");"},{"lineNumber":250,"author":{"gitId":"Winniehyx"},"content":"        sb.append(\"Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":251,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":252,"author":{"gitId":"Winniehyx"},"content":"        return new Response(sb.toString(), false);"},{"lineNumber":253,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":254,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":255,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":256,"author":{"gitId":"Winniehyx"},"content":"     * Executes Delete Command."},{"lineNumber":257,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":258,"author":{"gitId":"Winniehyx"},"content":"     * @param argument command arguments"},{"lineNumber":259,"author":{"gitId":"Winniehyx"},"content":"     * @return String to represent termination of the program"},{"lineNumber":260,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":261,"author":{"gitId":"Winniehyx"},"content":"    private Response executeDeleteCommand(String argument) {"},{"lineNumber":262,"author":{"gitId":"Winniehyx"},"content":"        assert argument !\u003d null : \"OOPS!!! The description of a delete\""},{"lineNumber":263,"author":{"gitId":"Winniehyx"},"content":"                + \"cannot be empty.\";"},{"lineNumber":264,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":265,"author":{"gitId":"Winniehyx"},"content":"        int taskId;"},{"lineNumber":266,"author":{"gitId":"Winniehyx"},"content":"        try {"},{"lineNumber":267,"author":{"gitId":"Winniehyx"},"content":"            taskId \u003d Integer.parseInt(argument.strip()) - 1;"},{"lineNumber":268,"author":{"gitId":"Winniehyx"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":269,"author":{"gitId":"Winniehyx"},"content":"            return new Response(\"OOPS!!! The id of a delete \""},{"lineNumber":270,"author":{"gitId":"Winniehyx"},"content":"                    + \"must be an integer.\", false);"},{"lineNumber":271,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":272,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":273,"author":{"gitId":"Winniehyx"},"content":"        if (taskId \u003e\u003d taskList.size() || taskId \u003c 0) {"},{"lineNumber":274,"author":{"gitId":"Winniehyx"},"content":"            return new Response(\"OOPS!!! That is an invalid task id.\","},{"lineNumber":275,"author":{"gitId":"Winniehyx"},"content":"                    false);"},{"lineNumber":276,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":277,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":278,"author":{"gitId":"Winniehyx"},"content":"        Task task \u003d taskList.remove(taskId);"},{"lineNumber":279,"author":{"gitId":"Winniehyx"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":280,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":281,"author":{"gitId":"Winniehyx"},"content":"        sb.append(\"Noted. I\u0027ve removed this task:\\n\");"},{"lineNumber":282,"author":{"gitId":"Winniehyx"},"content":"        sb.append(\"  \" + task.getTypeIcon() + task.getStatusIcon() + \" \""},{"lineNumber":283,"author":{"gitId":"Winniehyx"},"content":"                + task.getDescription() + \"\\n\");"},{"lineNumber":284,"author":{"gitId":"Winniehyx"},"content":"        sb.append(\"Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":285,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":286,"author":{"gitId":"Winniehyx"},"content":"        return new Response(sb.toString(), false);"},{"lineNumber":287,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":288,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":289,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":290,"author":{"gitId":"Winniehyx"},"content":"     * Executes find Command."},{"lineNumber":291,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":292,"author":{"gitId":"Winniehyx"},"content":"     * @param argument command arguments"},{"lineNumber":293,"author":{"gitId":"Winniehyx"},"content":"     * @return String to represent termination of the program"},{"lineNumber":294,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":295,"author":{"gitId":"Winniehyx"},"content":"    private Response executeFindCommand(String argument) {"},{"lineNumber":296,"author":{"gitId":"Winniehyx"},"content":"        assert argument !\u003d null : \"OOPS!!! The description of a\""},{"lineNumber":297,"author":{"gitId":"Winniehyx"},"content":"                + \"find cannot be empty.\";"},{"lineNumber":298,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":299,"author":{"gitId":"Winniehyx"},"content":"        TaskList subList \u003d new TaskList();"},{"lineNumber":300,"author":{"gitId":"Winniehyx"},"content":"        for (Task task : taskList.getList()) {"},{"lineNumber":301,"author":{"gitId":"Winniehyx"},"content":"            String description \u003d task.getDescription();"},{"lineNumber":302,"author":{"gitId":"Winniehyx"},"content":"            String tag \u003d task.getTag();"},{"lineNumber":303,"author":{"gitId":"Winniehyx"},"content":"            if (tag !\u003d null \u0026\u0026 tag.contains(argument)) {"},{"lineNumber":304,"author":{"gitId":"Winniehyx"},"content":"                subList.add(task);"},{"lineNumber":305,"author":{"gitId":"Winniehyx"},"content":"            } else if (description.contains(argument)) {"},{"lineNumber":306,"author":{"gitId":"Winniehyx"},"content":"                subList.add(task);"},{"lineNumber":307,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":308,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":309,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":310,"author":{"gitId":"Winniehyx"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":311,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":312,"author":{"gitId":"Winniehyx"},"content":"        if (subList.size() \u003d\u003d 0) {"},{"lineNumber":313,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":314,"author":{"gitId":"Winniehyx"},"content":"            return new Response(\"There are no tasks that matches your search\","},{"lineNumber":315,"author":{"gitId":"Winniehyx"},"content":"                    false);"},{"lineNumber":316,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":317,"author":{"gitId":"Winniehyx"},"content":"            sb.append(\"Here are the matching tasks in your list:\\n\");"},{"lineNumber":318,"author":{"gitId":"Winniehyx"},"content":"            for (int i \u003d 0; i \u003c subList.size(); i++) {"},{"lineNumber":319,"author":{"gitId":"Winniehyx"},"content":"                sb.append(Integer.toString(i + 1) + \". \""},{"lineNumber":320,"author":{"gitId":"Winniehyx"},"content":"                        + subList.get(i).getTypeIcon()"},{"lineNumber":321,"author":{"gitId":"Winniehyx"},"content":"                        + subList.get(i).getStatusIcon() + \" \""},{"lineNumber":322,"author":{"gitId":"Winniehyx"},"content":"                        + subList.get(i).getDescription() + \"\\n\""},{"lineNumber":323,"author":{"gitId":"Winniehyx"},"content":"                );"},{"lineNumber":324,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":325,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":326,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":327,"author":{"gitId":"Winniehyx"},"content":"        return new Response(sb.toString(), false);"},{"lineNumber":328,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":329,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":330,"author":{"gitId":"Winniehyx"},"content":"     *  * App shuts down after sleeptime when bye is typed by user."},{"lineNumber":331,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":332,"author":{"gitId":"Winniehyx"},"content":"    public void shutDown() {"},{"lineNumber":333,"author":{"gitId":"Winniehyx"},"content":"        try {"},{"lineNumber":334,"author":{"gitId":"Winniehyx"},"content":"            Thread.sleep(2000);"},{"lineNumber":335,"author":{"gitId":"Winniehyx"},"content":"        } catch (InterruptedException e) {"},{"lineNumber":336,"author":{"gitId":"Winniehyx"},"content":"            e.printStackTrace();"},{"lineNumber":337,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":338,"author":{"gitId":"Winniehyx"},"content":"        exit(0);"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Winniehyx":337,"-":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"     * Launches the application."},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"     * @param args"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"    public static void main(String[] args) {"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":15}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":" * A GUI for Duke using FXML."},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"public class Main extends Application {"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"     * Instantiate a new Duke."},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource("},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"                    \"/view/MainWindow.fxml\"));"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"            stage.getIcons().add(new Image(\"/images/DaHappy.jpg\"));"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"            stage.show();"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":36}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"import javafx.application.Platform;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream("},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"            \"/images/DaUser.png\"));"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream("},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"            \"/images/DaDuke.png\"));"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"     * Initialize program"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"    public void initialize() {"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"        startUpMessage();"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"        duke \u003d d;"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing"},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"     * Duke\u0027s reply and then appends them to"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"    @FXML"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"    private void handleUserInput() {"},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"        Response response \u003d duke.getResponse(input);"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":53,"author":{"gitId":"Winniehyx"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":"                DialogBox.getDukeDialog(response.getResponseString(), dukeImage)"},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"        );"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"        userInput.clear();"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"        if (response.isExit()) {"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"            Platform.runLater(() -\u003e duke.shutDown());"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":"    private void startUpMessage() {"},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":"        Response response \u003d new Response(\"Hello :) \", false);"},{"lineNumber":65,"author":{"gitId":"Winniehyx"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":66,"author":{"gitId":"Winniehyx"},"content":"                DialogBox.getDukeDialog(response.getResponseString(), dukeImage)"},{"lineNumber":67,"author":{"gitId":"Winniehyx"},"content":"        );"},{"lineNumber":68,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":69}},{"path":"src/main/java/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"public class Response {"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"     *boolean of isExit to create a response."},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"    private boolean isExit;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"     * String of response."},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"    private final String responseString;"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"     * Constructor of response."},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"     * @param responseString"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"     * @param isExit"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"    public Response(String responseString, boolean isExit) {"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"        this.responseString \u003d responseString;"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"    public boolean isExit() {"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"        return isExit;"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"    public String getResponseString() {"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"        return responseString;"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":28}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"import java.io.PrintWriter;"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"import java.io.UnsupportedEncodingException;"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"import task.Events;"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"import task.Task;"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"import task.TaskList;"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"import task.Todo;"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"    private String directory;"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"    private String fileName;"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"     * Initialises a Storage object."},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"     * @param directory"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"     * @param fileName"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"     * @return a Storage object"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"    public Storage(String directory, String fileName) {"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"        this.directory \u003d directory;"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"        this.fileName \u003d fileName;"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"     * Saves the tasklist."},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"     * Converts a tasklist into its string representation"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"     * then saves it in a file"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"     * @param taskList the tasklist to be saved"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"    public void saveToHardisk(TaskList taskList) {"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"            PrintWriter writer \u003d new PrintWriter(this.directory"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"                    + this.fileName, \"UTF-8\");"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":"            for (Task task : taskList.getList()) {"},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"                writer.println(task.tokenize());"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"            writer.close();"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"        } catch (FileNotFoundException | UnsupportedEncodingException e) {"},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"            e.printStackTrace();"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":53,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"     * Loads a text file and parses it into a tasklist."},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"    public TaskList loadFromHardisk() {"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"            File file \u003d new File(this.directory + this.fileName);"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":"            TaskList taskList \u003d new TaskList();"},{"lineNumber":65,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":66,"author":{"gitId":"Winniehyx"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":67,"author":{"gitId":"Winniehyx"},"content":"                String data \u003d sc.nextLine();"},{"lineNumber":68,"author":{"gitId":"Winniehyx"},"content":"                Task task \u003d parseData(data);"},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":70,"author":{"gitId":"Winniehyx"},"content":"                if (task !\u003d null) {"},{"lineNumber":71,"author":{"gitId":"Winniehyx"},"content":"                    taskList.add(task);"},{"lineNumber":72,"author":{"gitId":"Winniehyx"},"content":"                }"},{"lineNumber":73,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"Winniehyx"},"content":"            return taskList;"},{"lineNumber":75,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":76,"author":{"gitId":"Winniehyx"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":77,"author":{"gitId":"Winniehyx"},"content":"            createNewFile();"},{"lineNumber":78,"author":{"gitId":"Winniehyx"},"content":"            return new TaskList();"},{"lineNumber":79,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":82,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"Winniehyx"},"content":"     * Parses a string representation of a task into a Task object."},{"lineNumber":84,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"Winniehyx"},"content":"     * @param data  String representation of task"},{"lineNumber":86,"author":{"gitId":"Winniehyx"},"content":"     * @return      the Task parsed"},{"lineNumber":87,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"Winniehyx"},"content":"    private Task parseData(String data) {"},{"lineNumber":89,"author":{"gitId":"Winniehyx"},"content":"        String[] tokens \u003d data.split(\"\\\\|\", 2);"},{"lineNumber":90,"author":{"gitId":"Winniehyx"},"content":"        String taskSymbol \u003d tokens[0];"},{"lineNumber":91,"author":{"gitId":"Winniehyx"},"content":"        String taskDetails \u003d tokens[1];"},{"lineNumber":92,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":93,"author":{"gitId":"Winniehyx"},"content":"        switch (taskSymbol) {"},{"lineNumber":94,"author":{"gitId":"Winniehyx"},"content":"        case \"T\":"},{"lineNumber":95,"author":{"gitId":"Winniehyx"},"content":"            return createTodo(taskDetails);"},{"lineNumber":96,"author":{"gitId":"Winniehyx"},"content":"        case \"D\":"},{"lineNumber":97,"author":{"gitId":"Winniehyx"},"content":"            return createDeadline(taskDetails);"},{"lineNumber":98,"author":{"gitId":"Winniehyx"},"content":"        case \"E\":"},{"lineNumber":99,"author":{"gitId":"Winniehyx"},"content":"            return createEvent(taskDetails);"},{"lineNumber":100,"author":{"gitId":"Winniehyx"},"content":"        default:"},{"lineNumber":101,"author":{"gitId":"Winniehyx"},"content":"            return null;"},{"lineNumber":102,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":105,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"Winniehyx"},"content":"     * Creates an Event object from the Task details."},{"lineNumber":107,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"Winniehyx"},"content":"     * @param taskDetails   Task details of the event object"},{"lineNumber":109,"author":{"gitId":"Winniehyx"},"content":"     * @return              The Event Object specified"},{"lineNumber":110,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"Winniehyx"},"content":"    private Task createEvent(String taskDetails) {"},{"lineNumber":112,"author":{"gitId":"Winniehyx"},"content":"        String[] tokens \u003d taskDetails.split(\"\\\\|\");"},{"lineNumber":113,"author":{"gitId":"Winniehyx"},"content":"        boolean isDone \u003d !tokens[0].equals(\"0\");"},{"lineNumber":114,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":115,"author":{"gitId":"Winniehyx"},"content":"        String details \u003d tokens[1];"},{"lineNumber":116,"author":{"gitId":"Winniehyx"},"content":"        String at \u003d tokens[2].equals(\"NULL\") ? null : tokens[2];"},{"lineNumber":117,"author":{"gitId":"Winniehyx"},"content":"        Integer three \u003d 3;"},{"lineNumber":118,"author":{"gitId":"Winniehyx"},"content":"        String tag \u003d tokens[three].equals(\"NULL\") ? null : tokens[3];"},{"lineNumber":119,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":120,"author":{"gitId":"Winniehyx"},"content":"        return new Events(isDone, details, at, tag);"},{"lineNumber":121,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":123,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"Winniehyx"},"content":"     * Creates a Deadline object from the Task details."},{"lineNumber":125,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":126,"author":{"gitId":"Winniehyx"},"content":"     * @param taskDetails   Task details of the deadline object"},{"lineNumber":127,"author":{"gitId":"Winniehyx"},"content":"     * @return              The Deadline Object specified"},{"lineNumber":128,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"Winniehyx"},"content":"    private Task createDeadline(String taskDetails) {"},{"lineNumber":130,"author":{"gitId":"Winniehyx"},"content":"        String[] tokens \u003d taskDetails.split(\"\\\\|\");"},{"lineNumber":131,"author":{"gitId":"Winniehyx"},"content":"        boolean isDone \u003d !tokens[0].equals(\"0\");"},{"lineNumber":132,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":133,"author":{"gitId":"Winniehyx"},"content":"        String details \u003d tokens[1];"},{"lineNumber":134,"author":{"gitId":"Winniehyx"},"content":"        String by \u003d tokens[2].equals(\"NULL\") ? null : tokens[2];"},{"lineNumber":135,"author":{"gitId":"Winniehyx"},"content":"        String tag \u003d tokens[3].equals(\"NULL\") ? null : tokens[3];"},{"lineNumber":136,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":137,"author":{"gitId":"Winniehyx"},"content":"        return new Events(isDone, details, by, tag);"},{"lineNumber":138,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"Winniehyx"},"content":"     * Creates a Todo object from the Task details."},{"lineNumber":141,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":142,"author":{"gitId":"Winniehyx"},"content":"     * @param taskDetails   Task details of the todo object"},{"lineNumber":143,"author":{"gitId":"Winniehyx"},"content":"     * @return              The Todo Object specified"},{"lineNumber":144,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"Winniehyx"},"content":"    private Task createTodo(String taskDetails) {"},{"lineNumber":146,"author":{"gitId":"Winniehyx"},"content":"        String[] tokens \u003d taskDetails.split(\"\\\\|\");"},{"lineNumber":147,"author":{"gitId":"Winniehyx"},"content":"        boolean isDone \u003d !tokens[0].equals(\"0\");"},{"lineNumber":148,"author":{"gitId":"Winniehyx"},"content":"        String details \u003d tokens[1];"},{"lineNumber":149,"author":{"gitId":"Winniehyx"},"content":"        String tag \u003d tokens[2].equals(\"NULL\") ? null : tokens[2];"},{"lineNumber":150,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":151,"author":{"gitId":"Winniehyx"},"content":"        return new Todo(isDone, details, tag);"},{"lineNumber":152,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":154,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"Winniehyx"},"content":"     * Creates a new file and directory."},{"lineNumber":156,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"Winniehyx"},"content":"    private void createNewFile() {"},{"lineNumber":158,"author":{"gitId":"Winniehyx"},"content":"        File directory \u003d new File(this.directory);"},{"lineNumber":159,"author":{"gitId":"Winniehyx"},"content":"        if (!directory.exists()) {"},{"lineNumber":160,"author":{"gitId":"Winniehyx"},"content":"            directory.mkdir();"},{"lineNumber":161,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":163,"author":{"gitId":"Winniehyx"},"content":"        try {"},{"lineNumber":164,"author":{"gitId":"Winniehyx"},"content":"            File file \u003d new File(this.directory + this.fileName);"},{"lineNumber":165,"author":{"gitId":"Winniehyx"},"content":"            if (file.createNewFile()) {"},{"lineNumber":166,"author":{"gitId":"Winniehyx"},"content":"                System.out.println(\"Created File: \" + this.directory"},{"lineNumber":167,"author":{"gitId":"Winniehyx"},"content":"                        + this.fileName);"},{"lineNumber":168,"author":{"gitId":"Winniehyx"},"content":"            } else {"},{"lineNumber":169,"author":{"gitId":"Winniehyx"},"content":"                System.out.println(\"File already exists.\");"},{"lineNumber":170,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":171,"author":{"gitId":"Winniehyx"},"content":"        } catch (IOException e) {"},{"lineNumber":172,"author":{"gitId":"Winniehyx"},"content":"            e.printStackTrace();"},{"lineNumber":173,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":175}},{"path":"src/main/java/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":" * Represents a deadline task."},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"public class Deadlines extends Task {"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"    private final String typeIcon \u003d \"[D]\";"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"    private final String icon \u003d \"D\";"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"    private final String delimiter \u003d \"|\";"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"    private final String nullString \u003d \"NULL\";"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"     * Format of how date and time is displayed."},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"    private final DateTimeFormatter formatter \u003d"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"    private LocalDateTime time;"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"     * Constructor of deadlines."},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"     * @param description description of task"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"     * @param by time of task"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"     * @param tag tag of task"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"    public Deadlines(String description, String by, String tag) {"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"        super(description, tag);"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"        if (by \u003d\u003d null) {"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"            time \u003d null;"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"            try {"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"                time \u003d LocalDateTime.parse(by, formatter);"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"            } catch (Exception e) {"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"                time \u003d null;"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"     * returns typeicon of deadline."},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"     * @return [D]"},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":"    public String getTypeIcon() {"},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":"        return this.typeIcon;"},{"lineNumber":53,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"     * returns the description of the deadline."},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"     * @return string of the deadline description"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"    public String getDescription() {"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"        String result \u003d description;"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":"        if (time !\u003d null) {"},{"lineNumber":65,"author":{"gitId":"Winniehyx"},"content":"            result \u003d String.format(\"%s (by: %s)\", result,"},{"lineNumber":66,"author":{"gitId":"Winniehyx"},"content":"                    this.time.format(formatter));"},{"lineNumber":67,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"Winniehyx"},"content":"        if (tag !\u003d null) {"},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":"            result \u003d String.format(\"%s (tag: %s)\", result, this.tag);"},{"lineNumber":70,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":72,"author":{"gitId":"Winniehyx"},"content":"        return result;"},{"lineNumber":73,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":74,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"Winniehyx"},"content":"     * Converts the object into a String representation for storage."},{"lineNumber":77,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"Winniehyx"},"content":"     * @return  String representation of object"},{"lineNumber":79,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":81,"author":{"gitId":"Winniehyx"},"content":"    public String tokenize() {"},{"lineNumber":82,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":83,"author":{"gitId":"Winniehyx"},"content":"        String isDoneString \u003d isDone ? \"1\" : \"0\";"},{"lineNumber":84,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":85,"author":{"gitId":"Winniehyx"},"content":"        String result \u003d icon + delimiter + isDoneString"},{"lineNumber":86,"author":{"gitId":"Winniehyx"},"content":"                + delimiter + this.description;"},{"lineNumber":87,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":88,"author":{"gitId":"Winniehyx"},"content":"        if (time \u003d\u003d null) {"},{"lineNumber":89,"author":{"gitId":"Winniehyx"},"content":"            result +\u003d delimiter + nullString;"},{"lineNumber":90,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":91,"author":{"gitId":"Winniehyx"},"content":"            result +\u003d delimiter + time;"},{"lineNumber":92,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":94,"author":{"gitId":"Winniehyx"},"content":"        if (tag \u003d\u003d null) {"},{"lineNumber":95,"author":{"gitId":"Winniehyx"},"content":"            result +\u003d delimiter + nullString;"},{"lineNumber":96,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":97,"author":{"gitId":"Winniehyx"},"content":"            result +\u003d delimiter + tag;"},{"lineNumber":98,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":100,"author":{"gitId":"Winniehyx"},"content":"        return result;"},{"lineNumber":101,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":103,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"Winniehyx"},"content":"     * returns the description of the deadline task."},{"lineNumber":105,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"Winniehyx"},"content":"     * @return String of the deadline task"},{"lineNumber":107,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":109,"author":{"gitId":"Winniehyx"},"content":"    public String toString() {"},{"lineNumber":110,"author":{"gitId":"Winniehyx"},"content":"        return getDescription();"},{"lineNumber":111,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":113,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":113}},{"path":"src/main/java/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"public class Events extends Task {"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"    private final String typeIcon \u003d \"[E]\";"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"    private final String icon \u003d \"E\";"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"    private final String delimiter \u003d \"|\";"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"    private final String nullString \u003d \"NULL\";"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"    private String at;"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"     * Events constructor."},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"     * @param description"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"     * @param at"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"     * @param tag"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"     * @return events object"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"    public Events(String description, String at, String tag) {"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"        super(description, tag);"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"        this.at \u003d at;"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"     * Overloaded events constructor."},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"     * @param isDone"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"     * @param description"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"     * @param at"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"     * @param tag"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"     * @return events object"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"    public Events(boolean isDone, String description, String at, String tag) {"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"        super(description, tag);"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"        this.at \u003d at;"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"    public String getTypeIcon() {"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"        return this.typeIcon;"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"    public String getDescription() {"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"        String result \u003d description;"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"        if (at !\u003d null) {"},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"            result \u003d String.format(\"%s (at: %s) \", result, this.at);"},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":"        if (tag !\u003d null) {"},{"lineNumber":53,"author":{"gitId":"Winniehyx"},"content":"            result \u003d String.format(\"%s (tag: %s) \", result, this.tag);"},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"        return result;"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"     * Converts the object into a String representation for storage."},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"     * @return  String representation"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":"    public String tokenize() {"},{"lineNumber":65,"author":{"gitId":"Winniehyx"},"content":"        String isDoneString \u003d isDone ? \"1\" : \"0\";"},{"lineNumber":66,"author":{"gitId":"Winniehyx"},"content":"        String result \u003d icon + delimiter + isDoneString"},{"lineNumber":67,"author":{"gitId":"Winniehyx"},"content":"                + delimiter + this.description;"},{"lineNumber":68,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":"        if (at \u003d\u003d null) {"},{"lineNumber":70,"author":{"gitId":"Winniehyx"},"content":"            result +\u003d delimiter + nullString;"},{"lineNumber":71,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":72,"author":{"gitId":"Winniehyx"},"content":"            result +\u003d delimiter + this.at;"},{"lineNumber":73,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":75,"author":{"gitId":"Winniehyx"},"content":"        if (tag \u003d\u003d null) {"},{"lineNumber":76,"author":{"gitId":"Winniehyx"},"content":"            result +\u003d delimiter + nullString;"},{"lineNumber":77,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":78,"author":{"gitId":"Winniehyx"},"content":"            result +\u003d delimiter + this.tag;"},{"lineNumber":79,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":81,"author":{"gitId":"Winniehyx"},"content":"        return result;"},{"lineNumber":82,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":84,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"Winniehyx"},"content":"     * @return the description for the event task"},{"lineNumber":87,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":89,"author":{"gitId":"Winniehyx"},"content":"    public String toString() {"},{"lineNumber":90,"author":{"gitId":"Winniehyx"},"content":"        return getDescription();"},{"lineNumber":91,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":93,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":93}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"    final String tag;"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"     * Task constructor"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"     * @param description"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"     * @param tag"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"     * @return task object"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"    public Task(String description, String tag) {"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"        this.tag \u003d tag;"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"    public String getTag() {"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"        return this.tag;"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"    public String getStatusIcon() {"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"    public String getTypeIcon() {"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"        return \"\";"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"    public void markAsDone() {"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"        this.isDone \u003d true;"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"    public String getDescription() {"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"        return this.description;"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"    public abstract String tokenize();"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"        return this.description;"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":49}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"public class TaskList {"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"    public TaskList() {"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"     * Returns the current tasklist with the added task"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"     * @param task"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"    public void add(Task task) {"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"        this.taskList.add(task);"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"     * returns the arraylist of tasks in tasklist"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"        return this.taskList;"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"     * Returns the size of the tasklist."},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"     * @return tasklist size"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"    public int size() {"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"        return this.taskList.size();"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":"     * Gets the task of that particular index in the tasklist."},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"     * @param i"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"     * @return the task at that index"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"    public Task get(int i) {"},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"        return this.taskList.get(i);"},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"Winniehyx"},"content":"     * Removes the task of that particular index in the tasklist."},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"     * @param i"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"     * @return tasklist with that particular task removed"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"    public Task remove(int i) {"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"        return this.taskList.remove(i);"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"}"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":""}],"authorContributionMap":{"Winniehyx":64}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":" * Class inherits from task."},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"    private final String typeIcon \u003d \"[T]\";"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"    private final String icon \u003d \"T\";"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"    private final String delimiter \u003d \"|\";"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"    private final String nullString \u003d \"NULL\";"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"     * Constructor for todo."},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"     * @param description"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"     * @param tag"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"    public Todo(String description, String tag) {"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"        super(description, tag);"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"     * Overloaded constructor with additional tag parameter."},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"     * @param isDone"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"     * @param description"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"     * @param tag"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"    public Todo(boolean isDone, String description, String tag) {"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"        super(description, tag);"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"     * Returns the type icon specific to todo."},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"     * @return [T]"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"    public String getTypeIcon() {"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"        return this.typeIcon;"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"    public String getDescription() {"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"        if (tag \u003d\u003d null) {"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"            return this.description;"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"            return String.format(\"%s (tag: %s)\", this.description, this.tag);"},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":53,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":"     * Converts the object into a String representation for storage."},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"     * @return  String represtentation"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"    public String tokenize() {"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"        String isDoneString \u003d isDone ? \"1\" : \"0\";"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"        String result \u003d icon + delimiter + isDoneString + delimiter"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"                + this.description;"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":"        if (tag \u003d\u003d null) {"},{"lineNumber":65,"author":{"gitId":"Winniehyx"},"content":"            result +\u003d delimiter + nullString;"},{"lineNumber":66,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":67,"author":{"gitId":"Winniehyx"},"content":"            result +\u003d delimiter + tag;"},{"lineNumber":68,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":70,"author":{"gitId":"Winniehyx"},"content":"        return result;"},{"lineNumber":71,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":73,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":73}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"     * Ui class."},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"    public Ui() {"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"     *Prints out welcome message."},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"    public void printWelcomeMessage() {"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"}"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":""}],"authorContributionMap":{"Winniehyx":19}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Winniehyx":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: #f9ccff;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #ccd4ff;\" text\u003d\"Send\"\u003e"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"         \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"            \u003cFont size\u003d\"18.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"         \u003c/font\u003e\u003c/Button\u003e"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"            \u003ccontent\u003e"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #ffcce4;\" /\u003e"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"            \u003c/content\u003e"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"    \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Winniehyx":23}},{"path":"src/test/java/task/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"class EventsTest {"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"    Events event1 \u003d new Events(\"event1\", null, null);"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"    Events event2 \u003d new Events(\"event2\", \"NUS\", null);"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"    void getTypeIcon() {"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"        String actualOutput \u003d event1.getTypeIcon();"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"        String expectedOutput \u003d \"[E]\";"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"        assertEquals(actualOutput, expectedOutput);"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"    void testGetDescription_noVenue() {"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"        String actualOutput \u003d event1.getDescription();"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"        String expectedOutput \u003d \"event1\";"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"        assertEquals(actualOutput, expectedOutput);"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"    void testGetDescription() {"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"        String actualOutput \u003d event2.getDescription();"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"        String expectedOutput \u003d \"event2 (at: NUS)\";"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"        assertEquals(actualOutput, expectedOutput);"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"    void testTokenize() {"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"        String actualOutput \u003d event2.tokenize();"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"        String expectedOutput \u003d \"E|0|event2|NUS\";"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"        assertEquals(actualOutput, expectedOutput);"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"    void testTokenize_noVenue() {"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"        String actualOutput \u003d event1.tokenize();"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"        String expectedOutput \u003d \"E|0|event1\";"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"        assertEquals(actualOutput, expectedOutput);"},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":52}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"list"}],"authorContributionMap":{"Winniehyx":2}}]
