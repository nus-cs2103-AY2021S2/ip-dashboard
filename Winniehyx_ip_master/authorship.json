[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"T|0|clean"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"T|1|walk"},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"T|0|read book"}],"authorContributionMap":{"Winniehyx":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"import task.*;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"import storage.Storage;"},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import ui.Ui;"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import java.util.*;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"    private Storage storage;"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"    private TaskList taskList;"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"    private Ui ui;"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"    public Duke() {"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"        this.storage \u003d new Storage(System.getProperty(\"user.dir\") + \"/data/\", \"duke.txt\");"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"        this.taskList \u003d storage.load();"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"    public void run() {"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"        ui.printWelcomeMessage();"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"        boolean isExit \u003d false;"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"        while(sc.hasNextLine()) {"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"            String[] tokens \u003d input.split(\" \", 2);"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"            String command \u003d tokens[0];"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"            String argument \u003d tokens.length \u003d\u003d 2 ? tokens[1] : null;"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"            if (command.equals(\"bye\")) {"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"                isExit \u003d executeByeCommand();"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"            } else if (command.equals(\"list\")) {"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"                isExit \u003d executeListCommand();"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"            } else if(command.equals(\"done\")) {"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"                isExit \u003d executeDoneCommand(argument);"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"            } else if (command.equals(\"todo\")) {"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"                isExit \u003d executeTodoCommand(argument);"},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"            } else if (command.equals(\"deadline\")) {"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":"                isExit \u003d executeDeadlineCommand(argument);"},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":53,"author":{"gitId":"Winniehyx"},"content":"            } else if (command.equals(\"event\")) {"},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":"                isExit \u003d executeEventCommand(argument);"},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"            } else if (command.equals(\"delete\")) {"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"                isExit \u003d executeDeleteCommand(argument);"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"            } else if (command.equals(\"find\")) {"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"                isExit \u003d executeFindCommand(argument);"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"            } else {"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":"                System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":66,"author":{"gitId":"Winniehyx"},"content":"            if (isExit) {"},{"lineNumber":67,"author":{"gitId":"Winniehyx"},"content":"                break;"},{"lineNumber":68,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":73,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":74,"author":{"gitId":"Winniehyx"},"content":"        new Duke().run();"},{"lineNumber":75,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":76,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":78,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"Winniehyx"},"content":"     * Executes Bye Command"},{"lineNumber":80,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"Winniehyx"},"content":"     * @return          boolean to represent termination of the program"},{"lineNumber":82,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"Winniehyx"},"content":"    private boolean executeByeCommand() {"},{"lineNumber":84,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":85,"author":{"gitId":"Winniehyx"},"content":"        storage.save(taskList);"},{"lineNumber":86,"author":{"gitId":"Winniehyx"},"content":"        return true;"},{"lineNumber":87,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":89,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"Winniehyx"},"content":"     * Lists out all tasks"},{"lineNumber":91,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"Winniehyx"},"content":"     * @return          boolean to represent termination of the program"},{"lineNumber":93,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"Winniehyx"},"content":"    private boolean executeListCommand() {"},{"lineNumber":95,"author":{"gitId":"Winniehyx"},"content":"        if (taskList.size() \u003d\u003d 0) {"},{"lineNumber":96,"author":{"gitId":"Winniehyx"},"content":"            System.out.println(\"There are no tasks in your task list\");"},{"lineNumber":97,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":98,"author":{"gitId":"Winniehyx"},"content":"            System.out.println(\"Here are the tasks in your task list:\");"},{"lineNumber":99,"author":{"gitId":"Winniehyx"},"content":"            for (int i \u003d 0; i \u003c taskList.size() ; i++ ) {"},{"lineNumber":100,"author":{"gitId":"Winniehyx"},"content":"                System.out.println((i + 1) + \". \""},{"lineNumber":101,"author":{"gitId":"Winniehyx"},"content":"                        + taskList.get(i).getTypeIcon()"},{"lineNumber":102,"author":{"gitId":"Winniehyx"},"content":"                        + taskList.get(i).getStatusIcon() + \" \""},{"lineNumber":103,"author":{"gitId":"Winniehyx"},"content":"                        + taskList.get(i).getDescription()"},{"lineNumber":104,"author":{"gitId":"Winniehyx"},"content":"                );"},{"lineNumber":105,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":108,"author":{"gitId":"Winniehyx"},"content":"        return false;"},{"lineNumber":109,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":111,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"Winniehyx"},"content":"     * Executes Done Command"},{"lineNumber":113,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"Winniehyx"},"content":"     * @param argument  command arguments"},{"lineNumber":115,"author":{"gitId":"Winniehyx"},"content":"     * @return          boolean to represent termination of the program"},{"lineNumber":116,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"Winniehyx"},"content":"    private boolean executeDoneCommand(String argument) {"},{"lineNumber":118,"author":{"gitId":"Winniehyx"},"content":"        // check for correct number of arguments"},{"lineNumber":119,"author":{"gitId":"Winniehyx"},"content":"        if (argument \u003d\u003d null) {"},{"lineNumber":120,"author":{"gitId":"Winniehyx"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description of a done cannot be empty.\");"},{"lineNumber":121,"author":{"gitId":"Winniehyx"},"content":"            return false;"},{"lineNumber":122,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":124,"author":{"gitId":"Winniehyx"},"content":"        // check if argument is an integer"},{"lineNumber":125,"author":{"gitId":"Winniehyx"},"content":"        int taskId;"},{"lineNumber":126,"author":{"gitId":"Winniehyx"},"content":"        try {"},{"lineNumber":127,"author":{"gitId":"Winniehyx"},"content":"            taskId \u003d Integer.parseInt(argument) - 1;"},{"lineNumber":128,"author":{"gitId":"Winniehyx"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":129,"author":{"gitId":"Winniehyx"},"content":"            System.out.println(\"â˜¹ OOPS!!! The id of a done must be an integer.\");"},{"lineNumber":130,"author":{"gitId":"Winniehyx"},"content":"            return false;"},{"lineNumber":131,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":133,"author":{"gitId":"Winniehyx"},"content":"        // check if integer is within bounds"},{"lineNumber":134,"author":{"gitId":"Winniehyx"},"content":"        if (taskId \u003e\u003d taskList.size() || taskId \u003c 0) {"},{"lineNumber":135,"author":{"gitId":"Winniehyx"},"content":"            System.out.println(\"â˜¹ OOPS!!! That is an invalid task id.\");"},{"lineNumber":136,"author":{"gitId":"Winniehyx"},"content":"            return false;"},{"lineNumber":137,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":139,"author":{"gitId":"Winniehyx"},"content":"        Task task \u003d taskList.get(taskId);"},{"lineNumber":140,"author":{"gitId":"Winniehyx"},"content":"        task.markAsDone();"},{"lineNumber":141,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":142,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\""},{"lineNumber":143,"author":{"gitId":"Winniehyx"},"content":"                + task.getStatusIcon() + \" \""},{"lineNumber":144,"author":{"gitId":"Winniehyx"},"content":"                + task.getDescription()"},{"lineNumber":145,"author":{"gitId":"Winniehyx"},"content":"        );"},{"lineNumber":146,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":147,"author":{"gitId":"Winniehyx"},"content":"        return false;"},{"lineNumber":148,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":150,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"Winniehyx"},"content":"     * Executes Todo Command"},{"lineNumber":152,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":153,"author":{"gitId":"Winniehyx"},"content":"     * @param argument  command arguments"},{"lineNumber":154,"author":{"gitId":"Winniehyx"},"content":"     * @return          boolean to represent termination of the program"},{"lineNumber":155,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"Winniehyx"},"content":"    private boolean executeTodoCommand(String argument) {"},{"lineNumber":157,"author":{"gitId":"Winniehyx"},"content":"        if (argument \u003d\u003d null) {"},{"lineNumber":158,"author":{"gitId":"Winniehyx"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":159,"author":{"gitId":"Winniehyx"},"content":"            return false;"},{"lineNumber":160,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":162,"author":{"gitId":"Winniehyx"},"content":"        Task task \u003d new Todo(argument);"},{"lineNumber":163,"author":{"gitId":"Winniehyx"},"content":"        taskList.add(task);"},{"lineNumber":164,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":165,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":166,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(\"  \" + task.getTypeIcon() + task.getStatusIcon() + \" \""},{"lineNumber":167,"author":{"gitId":"Winniehyx"},"content":"                + task.getDescription());"},{"lineNumber":168,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list\");"},{"lineNumber":169,"author":{"gitId":"Winniehyx"},"content":"        return false;"},{"lineNumber":170,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":172,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":173,"author":{"gitId":"Winniehyx"},"content":"     * Executes Deadline Command"},{"lineNumber":174,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":175,"author":{"gitId":"Winniehyx"},"content":"     * @param argument  command arguments"},{"lineNumber":176,"author":{"gitId":"Winniehyx"},"content":"     * @return          boolean to represent termination of the program"},{"lineNumber":177,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":178,"author":{"gitId":"Winniehyx"},"content":"    private boolean executeDeadlineCommand(String argument) {"},{"lineNumber":179,"author":{"gitId":"Winniehyx"},"content":"        if (argument \u003d\u003d null) {"},{"lineNumber":180,"author":{"gitId":"Winniehyx"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":181,"author":{"gitId":"Winniehyx"},"content":"            return false;"},{"lineNumber":182,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":184,"author":{"gitId":"Winniehyx"},"content":"        String[] split \u003d argument.split(\"/by\", 2);"},{"lineNumber":185,"author":{"gitId":"Winniehyx"},"content":"        String description \u003d split[0];"},{"lineNumber":186,"author":{"gitId":"Winniehyx"},"content":"        String by \u003d split.length \u003e 1 ? split[1].strip() : null;"},{"lineNumber":187,"author":{"gitId":"Winniehyx"},"content":"        Task task \u003d new Deadlines(description, by);"},{"lineNumber":188,"author":{"gitId":"Winniehyx"},"content":"        taskList.add(task);"},{"lineNumber":189,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":190,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(\"Got it. I have added this task:\");"},{"lineNumber":191,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(\"  \" + task.getTypeIcon() + task.getStatusIcon() + \" \""},{"lineNumber":192,"author":{"gitId":"Winniehyx"},"content":"                + task.getDescription());"},{"lineNumber":193,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":194,"author":{"gitId":"Winniehyx"},"content":"        return false;"},{"lineNumber":195,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":197,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":198,"author":{"gitId":"Winniehyx"},"content":"     * Executes Events Command"},{"lineNumber":199,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":200,"author":{"gitId":"Winniehyx"},"content":"     * @param argument  command arguments"},{"lineNumber":201,"author":{"gitId":"Winniehyx"},"content":"     * @return          boolean to represent termination of the program"},{"lineNumber":202,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":203,"author":{"gitId":"Winniehyx"},"content":"    private boolean executeEventCommand(String argument) {"},{"lineNumber":204,"author":{"gitId":"Winniehyx"},"content":"        if (argument \u003d\u003d null) {"},{"lineNumber":205,"author":{"gitId":"Winniehyx"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":206,"author":{"gitId":"Winniehyx"},"content":"            return false;"},{"lineNumber":207,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":209,"author":{"gitId":"Winniehyx"},"content":"        String[] split \u003d argument.split(\"/at\", 2);"},{"lineNumber":210,"author":{"gitId":"Winniehyx"},"content":"        String description \u003d split[0];"},{"lineNumber":211,"author":{"gitId":"Winniehyx"},"content":"        String at \u003d split.length \u003e 1 ? split[1] : null;"},{"lineNumber":212,"author":{"gitId":"Winniehyx"},"content":"        Task task \u003d new Events(description, at);"},{"lineNumber":213,"author":{"gitId":"Winniehyx"},"content":"        taskList.add(task);"},{"lineNumber":214,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":215,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(\"Got it. I have added this task:\");"},{"lineNumber":216,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(\"  \" + task.getTypeIcon() + task.getStatusIcon() + \" \""},{"lineNumber":217,"author":{"gitId":"Winniehyx"},"content":"                + task.getDescription());"},{"lineNumber":218,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":219,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":220,"author":{"gitId":"Winniehyx"},"content":"        return false;"},{"lineNumber":221,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":223,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":224,"author":{"gitId":"Winniehyx"},"content":"     * Executes Delete Command"},{"lineNumber":225,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":226,"author":{"gitId":"Winniehyx"},"content":"     * @param argument  command arguments"},{"lineNumber":227,"author":{"gitId":"Winniehyx"},"content":"     * @return          boolean to represent termination of the program"},{"lineNumber":228,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":229,"author":{"gitId":"Winniehyx"},"content":"    private boolean executeDeleteCommand(String argument) {"},{"lineNumber":230,"author":{"gitId":"Winniehyx"},"content":"        if (argument \u003d\u003d null) {"},{"lineNumber":231,"author":{"gitId":"Winniehyx"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description of a delete cannot be empty.\");"},{"lineNumber":232,"author":{"gitId":"Winniehyx"},"content":"            return false;"},{"lineNumber":233,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":234,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":235,"author":{"gitId":"Winniehyx"},"content":"        int taskId;"},{"lineNumber":236,"author":{"gitId":"Winniehyx"},"content":"        try {"},{"lineNumber":237,"author":{"gitId":"Winniehyx"},"content":"            taskId \u003d Integer.parseInt(argument) - 1;"},{"lineNumber":238,"author":{"gitId":"Winniehyx"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":239,"author":{"gitId":"Winniehyx"},"content":"            System.out.println(\"â˜¹ OOPS!!! The id of a delete must be an integer.\");"},{"lineNumber":240,"author":{"gitId":"Winniehyx"},"content":"            return false;"},{"lineNumber":241,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":242,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":243,"author":{"gitId":"Winniehyx"},"content":"        if (taskId \u003e\u003d taskList.size() || taskId \u003c 0) {"},{"lineNumber":244,"author":{"gitId":"Winniehyx"},"content":"            System.out.println(\"â˜¹ OOPS!!! That is an invalid task id.\");"},{"lineNumber":245,"author":{"gitId":"Winniehyx"},"content":"            return false;"},{"lineNumber":246,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":247,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":248,"author":{"gitId":"Winniehyx"},"content":"        Task task \u003d taskList.remove(taskId - 1);"},{"lineNumber":249,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":250,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":251,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(\"  \" + task.getTypeIcon() + task.getStatusIcon() + \" \""},{"lineNumber":252,"author":{"gitId":"Winniehyx"},"content":"                + task.getDescription());"},{"lineNumber":253,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":254,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":255,"author":{"gitId":"Winniehyx"},"content":"        return false;"},{"lineNumber":256,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":257,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":258,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":259,"author":{"gitId":"Winniehyx"},"content":"     * Executes find Command"},{"lineNumber":260,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":261,"author":{"gitId":"Winniehyx"},"content":"     * @param argument  command arguments"},{"lineNumber":262,"author":{"gitId":"Winniehyx"},"content":"     * @return          boolean to represent termination of the program"},{"lineNumber":263,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":264,"author":{"gitId":"Winniehyx"},"content":"    private boolean executeFindCommand(String argument) {"},{"lineNumber":265,"author":{"gitId":"Winniehyx"},"content":"        if (argument \u003d\u003d null) {"},{"lineNumber":266,"author":{"gitId":"Winniehyx"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description of a find cannot be empty.\");"},{"lineNumber":267,"author":{"gitId":"Winniehyx"},"content":"            return false;"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":269,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":270,"author":{"gitId":"Winniehyx"},"content":"        TaskList subList \u003d new TaskList();"},{"lineNumber":271,"author":{"gitId":"Winniehyx"},"content":"        for (Task task: taskList.getList()) {"},{"lineNumber":272,"author":{"gitId":"Winniehyx"},"content":"            String description \u003d task.getDescription();"},{"lineNumber":273,"author":{"gitId":"Winniehyx"},"content":"            if (description.contains(argument)) {"},{"lineNumber":274,"author":{"gitId":"Winniehyx"},"content":"                subList.add(task);"},{"lineNumber":275,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":276,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":277,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":278,"author":{"gitId":"Winniehyx"},"content":"        if (subList.size() \u003d\u003d 0) {"},{"lineNumber":279,"author":{"gitId":"Winniehyx"},"content":"            System.out.println(\"There are no tasks that matches your search\");"},{"lineNumber":280,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":281,"author":{"gitId":"Winniehyx"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":282,"author":{"gitId":"Winniehyx"},"content":"            for (int i \u003d 0; i \u003c subList.size() ; i++ ) {"},{"lineNumber":283,"author":{"gitId":"Winniehyx"},"content":"                System.out.println((i + 1) + \". \""},{"lineNumber":284,"author":{"gitId":"Winniehyx"},"content":"                        + subList.get(i).getTypeIcon()"},{"lineNumber":285,"author":{"gitId":"Winniehyx"},"content":"                        + subList.get(i).getStatusIcon() + \" \""},{"lineNumber":286,"author":{"gitId":"Winniehyx"},"content":"                        + subList.get(i).getDescription()"},{"lineNumber":287,"author":{"gitId":"Winniehyx"},"content":"                );"},{"lineNumber":288,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":289,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":290,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":291,"author":{"gitId":"Winniehyx"},"content":"        return false;"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Winniehyx":288,"-":5}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import task.*;"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"import java.io.PrintWriter;"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"import java.io.UnsupportedEncodingException;"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"    private String directory;"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"    private String fileName;"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"    public Storage(String directory, String fileName) {"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"        this.directory \u003d directory;"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"        this.fileName \u003d fileName;"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"     * Saves the tasklist."},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"     * Converts a tasklist into its string representation then saves it in a file"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"     * @param taskList  the tasklist to be saved"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"    public void save(TaskList taskList) {"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"            PrintWriter writer \u003d new PrintWriter(this.directory + this.fileName, \"UTF-8\");"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"            for (Task task : taskList.getList()) {"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"                writer.println(task.tokenize());"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"            writer.close();"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"        } catch (FileNotFoundException | UnsupportedEncodingException e) {"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"            e.printStackTrace();"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"     * Loads a text file and parses it into a tasklist"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"     * @return"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"    public TaskList load() {"},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":"            File file \u003d new File(this.directory + this.fileName);"},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":53,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":"            TaskList taskList \u003d new TaskList();"},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"                String data \u003d sc.nextLine();"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"                Task task \u003d parseData(data);"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"                if (task !\u003d null) {"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"                    taskList.add(task);"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"                }"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":65,"author":{"gitId":"Winniehyx"},"content":"            return taskList;"},{"lineNumber":66,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":67,"author":{"gitId":"Winniehyx"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":68,"author":{"gitId":"Winniehyx"},"content":"            createNewFile();"},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":"            return new TaskList();"},{"lineNumber":70,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":72,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"Winniehyx"},"content":"     * parses a string representation of a task into a Task object"},{"lineNumber":75,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"Winniehyx"},"content":"     * @param data  String representation of task"},{"lineNumber":77,"author":{"gitId":"Winniehyx"},"content":"     * @return      the Task parsed"},{"lineNumber":78,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"Winniehyx"},"content":"    private Task parseData(String data) {"},{"lineNumber":80,"author":{"gitId":"Winniehyx"},"content":"        String[] tokens \u003d data.split(\"\\\\|\", 2);"},{"lineNumber":81,"author":{"gitId":"Winniehyx"},"content":"        String taskSymbol \u003d tokens[0];"},{"lineNumber":82,"author":{"gitId":"Winniehyx"},"content":"        String taskDetails \u003d tokens[1];"},{"lineNumber":83,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":84,"author":{"gitId":"Winniehyx"},"content":"        switch (taskSymbol) {"},{"lineNumber":85,"author":{"gitId":"Winniehyx"},"content":"            case \"T\":"},{"lineNumber":86,"author":{"gitId":"Winniehyx"},"content":"                return createTodo(taskDetails);"},{"lineNumber":87,"author":{"gitId":"Winniehyx"},"content":"            case \"D\":"},{"lineNumber":88,"author":{"gitId":"Winniehyx"},"content":"                return createDeadline(taskDetails);"},{"lineNumber":89,"author":{"gitId":"Winniehyx"},"content":"            case \"E\":"},{"lineNumber":90,"author":{"gitId":"Winniehyx"},"content":"                return createEvent(taskDetails);"},{"lineNumber":91,"author":{"gitId":"Winniehyx"},"content":"            default:"},{"lineNumber":92,"author":{"gitId":"Winniehyx"},"content":"                return null;"},{"lineNumber":93,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"Winniehyx"},"content":"     * Creates an Event object from the Task details"},{"lineNumber":97,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"Winniehyx"},"content":"     * @param taskDetails   Task details of the event object"},{"lineNumber":99,"author":{"gitId":"Winniehyx"},"content":"     * @return              The Event Object specified"},{"lineNumber":100,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"Winniehyx"},"content":"    private Task createEvent(String taskDetails) {"},{"lineNumber":102,"author":{"gitId":"Winniehyx"},"content":"        String[] tokens \u003d taskDetails.split(\"\\\\|\");"},{"lineNumber":103,"author":{"gitId":"Winniehyx"},"content":"        boolean isDone \u003d !tokens[0].equals(\"0\");"},{"lineNumber":104,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":105,"author":{"gitId":"Winniehyx"},"content":"        String details;"},{"lineNumber":106,"author":{"gitId":"Winniehyx"},"content":"        String at;"},{"lineNumber":107,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":108,"author":{"gitId":"Winniehyx"},"content":"        if (tokens.length \u003e 2) {"},{"lineNumber":109,"author":{"gitId":"Winniehyx"},"content":"            details \u003d tokens[1];"},{"lineNumber":110,"author":{"gitId":"Winniehyx"},"content":"            at \u003d tokens[2];"},{"lineNumber":111,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":112,"author":{"gitId":"Winniehyx"},"content":"            details \u003d tokens[1];"},{"lineNumber":113,"author":{"gitId":"Winniehyx"},"content":"            at \u003d null;"},{"lineNumber":114,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":116,"author":{"gitId":"Winniehyx"},"content":"        return new Events(isDone, details, at);"},{"lineNumber":117,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":119,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"Winniehyx"},"content":"     * Creates a Deadline object from the Task details"},{"lineNumber":121,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":122,"author":{"gitId":"Winniehyx"},"content":"     * @param taskDetails   Task details of the deadline object"},{"lineNumber":123,"author":{"gitId":"Winniehyx"},"content":"     * @return              The Deadline Object specified"},{"lineNumber":124,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"Winniehyx"},"content":"    private Task createDeadline(String taskDetails) {"},{"lineNumber":126,"author":{"gitId":"Winniehyx"},"content":"        String[] tokens \u003d taskDetails.split(\"\\\\|\");"},{"lineNumber":127,"author":{"gitId":"Winniehyx"},"content":"        boolean isDone \u003d !tokens[0].equals(\"0\");"},{"lineNumber":128,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":129,"author":{"gitId":"Winniehyx"},"content":"        String details;"},{"lineNumber":130,"author":{"gitId":"Winniehyx"},"content":"        String by;"},{"lineNumber":131,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":132,"author":{"gitId":"Winniehyx"},"content":"        if (tokens.length \u003e 2) {"},{"lineNumber":133,"author":{"gitId":"Winniehyx"},"content":"            details \u003d tokens[1];"},{"lineNumber":134,"author":{"gitId":"Winniehyx"},"content":"            by \u003d tokens[2];"},{"lineNumber":135,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":136,"author":{"gitId":"Winniehyx"},"content":"            details \u003d tokens[1];"},{"lineNumber":137,"author":{"gitId":"Winniehyx"},"content":"            by \u003d null;"},{"lineNumber":138,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":140,"author":{"gitId":"Winniehyx"},"content":"        return new Events(isDone, details, by);"},{"lineNumber":141,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":142,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"Winniehyx"},"content":"     * Creates a Todo object from the Task details"},{"lineNumber":145,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":146,"author":{"gitId":"Winniehyx"},"content":"     * @param taskDetails   Task details of the todo object"},{"lineNumber":147,"author":{"gitId":"Winniehyx"},"content":"     * @return              The Todo Object specified"},{"lineNumber":148,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"Winniehyx"},"content":"    private Task createTodo(String taskDetails) {"},{"lineNumber":150,"author":{"gitId":"Winniehyx"},"content":"        String[] tokens \u003d taskDetails.split(\"\\\\|\");"},{"lineNumber":151,"author":{"gitId":"Winniehyx"},"content":"        boolean isDone \u003d !tokens[0].equals(\"0\");"},{"lineNumber":152,"author":{"gitId":"Winniehyx"},"content":"        String details \u003d tokens[1];"},{"lineNumber":153,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":154,"author":{"gitId":"Winniehyx"},"content":"        return new Todo(isDone, details);"},{"lineNumber":155,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":157,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"Winniehyx"},"content":"     * Creates a new file and directory"},{"lineNumber":159,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"Winniehyx"},"content":"    private void createNewFile() {"},{"lineNumber":161,"author":{"gitId":"Winniehyx"},"content":"        File directory \u003d new File(this.directory);"},{"lineNumber":162,"author":{"gitId":"Winniehyx"},"content":"        if (!directory.exists()) {"},{"lineNumber":163,"author":{"gitId":"Winniehyx"},"content":"            directory.mkdir();"},{"lineNumber":164,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":166,"author":{"gitId":"Winniehyx"},"content":"        try {"},{"lineNumber":167,"author":{"gitId":"Winniehyx"},"content":"            File file \u003d new File(this.directory + this.fileName);"},{"lineNumber":168,"author":{"gitId":"Winniehyx"},"content":"            if (file.createNewFile()) {"},{"lineNumber":169,"author":{"gitId":"Winniehyx"},"content":"                System.out.println(\"Created File: \" + this.directory + this.fileName);"},{"lineNumber":170,"author":{"gitId":"Winniehyx"},"content":"            } else {"},{"lineNumber":171,"author":{"gitId":"Winniehyx"},"content":"                System.out.println(\"File already exists.\");"},{"lineNumber":172,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":173,"author":{"gitId":"Winniehyx"},"content":"        } catch (IOException e) {"},{"lineNumber":174,"author":{"gitId":"Winniehyx"},"content":"            e.printStackTrace();"},{"lineNumber":175,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":178,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":178}},{"path":"src/main/java/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"public class Deadlines extends Task {"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"    private final String TYPE_ICON \u003d \"[D]\";"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"    private final String ICON \u003d \"D\";"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"    private final String DELIMITER \u003d \"|\";"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"    private LocalDateTime time;"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"    public Deadlines(String description, String by) {"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(description);"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(by);"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"        if (by \u003d\u003d null) {"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"            time \u003d null;"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"            try {"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"                time \u003d LocalDateTime.parse(by, formatter);"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"            } catch (Exception e) {"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"                time \u003d null;"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"    public String getTypeIcon() {"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"        return this.TYPE_ICON;"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"    public String getDescription() {"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"        if (time \u003d\u003d null) {"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"            return this.description;"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"            return String.format(\"%s (by: %s)\", this.description, this.time.format(formatter));"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"     * Converts the object into a String representation for storage"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"     * @return  String represtentation"},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":"    public String tokenize() {"},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":53,"author":{"gitId":"Winniehyx"},"content":"        String isDoneString \u003d isDone ? \"1\" : \"0\";"},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"        String result;"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"        if (time \u003d\u003d null) {"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"            result \u003d ICON + DELIMITER + isDoneString + DELIMITER + this.description;"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"            result \u003d ICON + DELIMITER + isDoneString + DELIMITER + this.description + DELIMITER + this.time.toString();"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"        return result;"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":65,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"Winniehyx"},"content":"    public String toString() {"},{"lineNumber":67,"author":{"gitId":"Winniehyx"},"content":"        return getDescription();"},{"lineNumber":68,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":70,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":70}},{"path":"src/main/java/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"public class Events extends Task {"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"    private final String TYPE_ICON \u003d \"[E]\";"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"    private final String ICON \u003d \"E\";"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"    private final String DELIMITER \u003d \"|\";"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"    private String at;"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"    public Events(String description, String at) {"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"        this.at \u003d at;"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"    public Events(boolean isDone, String description, String at) {"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"        this.at \u003d at;"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"    public String getTypeIcon() {"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"        return this.TYPE_ICON;"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"    public String getDescription() {"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"        if (at \u003d\u003d null) {"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"            return this.description;"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"            return String.format(\"%s (at: %s)\", this.description, this.at);"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"     * Converts the object into a String representation for storage"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"     * @return  String represtentation"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"    public String tokenize() {"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"        String isDoneString \u003d isDone ? \"1\" : \"0\";"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":"        String result;"},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"        if (at \u003d\u003d null) {"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"            result \u003d ICON + DELIMITER + isDoneString + DELIMITER + this.description;"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"            result \u003d ICON + DELIMITER + isDoneString + DELIMITER + this.description + DELIMITER + this.at;"},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"        return result;"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":53,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":"    public String toString() {"},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"        return getDescription();"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":58}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"    public String getStatusIcon() {"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"    public String getTypeIcon() {"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"        return \"\";"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"    public void markAsDone() {"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"        this.isDone \u003d true;"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"    public String getDescription() {"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"        return this.description;"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"    public abstract String tokenize();"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"        return this.description;"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":36}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import task.Task;"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"    public void add(Task task) {"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"        this.taskList.add(task);"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"        return this.taskList;"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"    public int size() {"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"        return this.taskList.size();"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"    public Task get(int i) {"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"        return this.taskList.get(i);"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"    public Task remove(int i) {"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"        return this.taskList.remove(i);"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"}"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":""}],"authorContributionMap":{"Winniehyx":40}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"    private final String TYPE_ICON \u003d \"[T]\";"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"    private final String ICON \u003d \"T\";"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"    private final String DELIMITER \u003d \"|\";"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"    public Todo(String description) {"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"    public Todo(boolean isDone, String description) {"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"    public String getTypeIcon() {"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"        return this.TYPE_ICON;"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"     * Converts the object into a String representation for storage"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"     * @return  String represtentation"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"    public String tokenize() {"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"        String isDoneString \u003d isDone ? \"1\" : \"0\";"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"        String result \u003d ICON + DELIMITER + isDoneString + DELIMITER + this.description;"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"        return result;"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":34}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"    public Ui() {"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"    public void printWelcomeMessage() {"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"}"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":""}],"authorContributionMap":{"Winniehyx":14}},{"path":"src/test/java/task/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"class EventsTest {"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"    Events event1 \u003d new Events(\"event1\", null);"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"    Events event2 \u003d new Events(\"event2\", \"NUS\");"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"    void getTypeIcon() {"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"        String actualOutput \u003d event1.getTypeIcon();"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"        String expectedOutput \u003d \"[E]\";"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"        assertEquals(actualOutput, expectedOutput);"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"    void testGetDescription_noVenue() {"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"        String actualOutput \u003d event1.getDescription();"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"        String expectedOutput \u003d \"event1\";"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"        assertEquals(actualOutput, expectedOutput);"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"    void testGetDescription() {"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"        String actualOutput \u003d event2.getDescription();"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"        String expectedOutput \u003d \"event2 (at: NUS)\";"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"        assertEquals(actualOutput, expectedOutput);"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"    void testTokenize() {"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"        String actualOutput \u003d event2.tokenize();"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"        String expectedOutput \u003d \"E|0|event2|NUS\";"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"        assertEquals(actualOutput, expectedOutput);"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"    void testTokenize_noVenue() {"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"        String actualOutput \u003d event1.tokenize();"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"        String expectedOutput \u003d \"E|0|event1\";"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"        assertEquals(actualOutput, expectedOutput);"},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":52}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"list"}],"authorContributionMap":{"Winniehyx":2}}]
