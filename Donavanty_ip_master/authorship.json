[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"    id \"com.github.johnrengelman.shadow\" version \"6.1.0\""},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"mainClassName \u003d \"kobe.Launcher\""},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"apply plugin: \"com.github.johnrengelman.shadow\""},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"    mainClassName \u003d \"kobe.Launcher\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"    archiveBaseName \u003d \"kobe\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":65,"author":{"gitId":"Donavanty"},"content":"    enableAssertions \u003d true"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Donavanty":23,"-":43}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"## Description"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"### "},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"Kobe is a desktop chatbot app for managing tasks, optimised with both a Command Line Interface (CLI)"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"and packaged with a Graphical User Interface (GUI)."},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"### View Task List"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"Views all current tasks in the task list."},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"### Add Task"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"Adds three kinds of task to the task list:"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"1. Todo"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"2. Deadline"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"3. Event"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"### Delete Task"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"Delete task from the task list."},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"### Find Task"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"Finds a task from the task list."},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"### Mark Task as Done"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"Marks a task as done from the task list."},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"### Exit and Save"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"Exits the program and saves the task list."},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"### `list` - Views the current task list"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"Views the current task list."},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"Example of usage:"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"     list"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"    "},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":"Expected outcome:"},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"     Here are the tasks in your list:"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"         1. [T][ ] Laundry Cycle "},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"         2. [D][ ] Movie Reservation (by: Apr 21 2021)"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":"         3. [E][X] Nature Walk (at: Gardens by the Bay)"},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"### `todo` - Adds a todo task"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":"Adds a todo task into the task list."},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":"Format:"},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"     todo \u003cTASK_NAME\u003e"},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":"Example of usage:"},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":62,"author":{"gitId":"Donavanty"},"content":"     todo Laundry Cycle"},{"lineNumber":63,"author":{"gitId":"Donavanty"},"content":"    "},{"lineNumber":64,"author":{"gitId":"Donavanty"},"content":"Expected outcome:"},{"lineNumber":65,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":66,"author":{"gitId":"Donavanty"},"content":"     Got it! Kobe added this task:"},{"lineNumber":67,"author":{"gitId":"Donavanty"},"content":"             [T][ ] Laundry cycle "},{"lineNumber":68,"author":{"gitId":"Donavanty"},"content":"     Kobe sees that you have 1 task(s) in the list."},{"lineNumber":69,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":70,"author":{"gitId":"Donavanty"},"content":"### `deadline` - Adds a deadline task"},{"lineNumber":71,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":72,"author":{"gitId":"Donavanty"},"content":"Adds a deadline task, with an optional datem into the task list."},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"Donavanty"},"content":"Format:"},{"lineNumber":75,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":76,"author":{"gitId":"Donavanty"},"content":"     deadline \u003cTASK_NAME\u003e"},{"lineNumber":77,"author":{"gitId":"Donavanty"},"content":"###"},{"lineNumber":78,"author":{"gitId":"Donavanty"},"content":"     deadline \u003cTASK_NAME\u003e /by \u003cDATE_IN_YYYY-MM-DD\u003e"},{"lineNumber":79,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":80,"author":{"gitId":"Donavanty"},"content":"Example of usage:"},{"lineNumber":81,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":82,"author":{"gitId":"Donavanty"},"content":"     "},{"lineNumber":83,"author":{"gitId":"Donavanty"},"content":"     deadline Movie Reservation"},{"lineNumber":84,"author":{"gitId":"Donavanty"},"content":"###    "},{"lineNumber":85,"author":{"gitId":"Donavanty"},"content":"     deadline Movie /by 2021-02-17"},{"lineNumber":86,"author":{"gitId":"Donavanty"},"content":"    "},{"lineNumber":87,"author":{"gitId":"Donavanty"},"content":"Expected outcome:"},{"lineNumber":88,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":89,"author":{"gitId":"Donavanty"},"content":"     Got it! Kobe added this task:"},{"lineNumber":90,"author":{"gitId":"Donavanty"},"content":"        [D][ ] Movie Reservation"},{"lineNumber":91,"author":{"gitId":"Donavanty"},"content":"     Kobe sees that you have 1 task(s) in the list."},{"lineNumber":92,"author":{"gitId":"Donavanty"},"content":"###     "},{"lineNumber":93,"author":{"gitId":"Donavanty"},"content":"     Got it! Kobe added this task:"},{"lineNumber":94,"author":{"gitId":"Donavanty"},"content":"        [D][ ] Movie Reservation (by: Feb 17 2021)"},{"lineNumber":95,"author":{"gitId":"Donavanty"},"content":"     Kobe sees that you have 1 task(s) in the list."},{"lineNumber":96,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":97,"author":{"gitId":"Donavanty"},"content":"### `event` - Adds an event task"},{"lineNumber":98,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":99,"author":{"gitId":"Donavanty"},"content":"Adds an event task into the task list."},{"lineNumber":100,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":101,"author":{"gitId":"Donavanty"},"content":"Format:"},{"lineNumber":102,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":103,"author":{"gitId":"Donavanty"},"content":"    event \u003cTASK_NAME\u003e"},{"lineNumber":104,"author":{"gitId":"Donavanty"},"content":"###"},{"lineNumber":105,"author":{"gitId":"Donavanty"},"content":"    event \u003cTASK_NAME\u003e /at \u003cLOCATION\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"Donavanty"},"content":"    event Gardens By the Bay"},{"lineNumber":110,"author":{"gitId":"Donavanty"},"content":"###"},{"lineNumber":111,"author":{"gitId":"Donavanty"},"content":"    event Nature Walk /at Gardens By the Bay"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    "},{"lineNumber":113,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"Donavanty"},"content":"    Got it! Kobe added this task:"},{"lineNumber":116,"author":{"gitId":"Donavanty"},"content":"        [E][ ] Gardens By The Bay"},{"lineNumber":117,"author":{"gitId":"Donavanty"},"content":"     Kobe sees that you have 1 task(s) in the list."},{"lineNumber":118,"author":{"gitId":"Donavanty"},"content":"###"},{"lineNumber":119,"author":{"gitId":"Donavanty"},"content":"    Got it! Kobe added this task:"},{"lineNumber":120,"author":{"gitId":"Donavanty"},"content":"        [E][ ] Nature Walk (at: Gardens By The Bay)"},{"lineNumber":121,"author":{"gitId":"Donavanty"},"content":"     Kobe sees that you have 1 task(s) in the list."},{"lineNumber":122,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":123,"author":{"gitId":"Donavanty"},"content":"### `delete` - Deletes a task"},{"lineNumber":124,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":125,"author":{"gitId":"Donavanty"},"content":"Deletes a task from the task list."},{"lineNumber":126,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":127,"author":{"gitId":"Donavanty"},"content":"Format:"},{"lineNumber":128,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":129,"author":{"gitId":"Donavanty"},"content":"     delete \u003cTASK_NUMBER\u003e"},{"lineNumber":130,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":131,"author":{"gitId":"Donavanty"},"content":"Example of usage:"},{"lineNumber":132,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":133,"author":{"gitId":"Donavanty"},"content":"     delete 1"},{"lineNumber":134,"author":{"gitId":"Donavanty"},"content":"    "},{"lineNumber":135,"author":{"gitId":"Donavanty"},"content":"Expected outcome:"},{"lineNumber":136,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":137,"author":{"gitId":"Donavanty"},"content":"     Okay! Kobe will remove your task from the list:"},{"lineNumber":138,"author":{"gitId":"Donavanty"},"content":"        [T][ ] Laundry Cycle "},{"lineNumber":139,"author":{"gitId":"Donavanty"},"content":"     Kobe sees that you now have 2 task(s) in the list."},{"lineNumber":140,"author":{"gitId":"Donavanty"},"content":"     "},{"lineNumber":141,"author":{"gitId":"Donavanty"},"content":"### `done` - Mark a Task as Done"},{"lineNumber":142,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":143,"author":{"gitId":"Donavanty"},"content":"Marks a task as done from the task list."},{"lineNumber":144,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":145,"author":{"gitId":"Donavanty"},"content":"Format:"},{"lineNumber":146,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":147,"author":{"gitId":"Donavanty"},"content":"     done \u003cTASK_NUMBER\u003e"},{"lineNumber":148,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":149,"author":{"gitId":"Donavanty"},"content":"Example of usage:"},{"lineNumber":150,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":151,"author":{"gitId":"Donavanty"},"content":"     done 1"},{"lineNumber":152,"author":{"gitId":"Donavanty"},"content":"    "},{"lineNumber":153,"author":{"gitId":"Donavanty"},"content":"Expected outcome:"},{"lineNumber":154,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":155,"author":{"gitId":"Donavanty"},"content":"     Nice work! Kobe will mark your task as done!"},{"lineNumber":156,"author":{"gitId":"Donavanty"},"content":"        [D][X] Movie Reservation (by: Apr 21 2021)"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"Donavanty"},"content":"### `bye` - Exits and Saves"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"Donavanty"},"content":"Exits the program and saves the current list."},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"Donavanty"},"content":"Example of usage:"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"Donavanty"},"content":"     bye"},{"lineNumber":165,"author":{"gitId":"Donavanty"},"content":"    "},{"lineNumber":166,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"Donavanty"},"content":"     Goodbye! Kobe has saved your list."},{"lineNumber":169,"author":{"gitId":"Donavanty"},"content":"     Kobe hopes to see you again soon!"}],"authorContributionMap":{"Donavanty":149,"-":20}},{"path":"src/main/data/kobe.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"    1. [T][ ] Laundry Cycle"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":"    2. [D][ ] Movie Reservation (by: Apr 21 2021)"},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"    3. [E][X] Nature Walk (at: Gardens by the Bay)"}],"authorContributionMap":{"Donavanty":3}},{"path":"src/main/data/kobeDefault.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"    1. [T][ ] Laundry Cycle"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":"    2. [D][ ] Movie Reservation (by: Apr 21 2021)"},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"    3. [E][X] Nature Walk (at: Gardens by the Bay)"}],"authorContributionMap":{"Donavanty":3}},{"path":"src/main/java/kobe/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.lang.System;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"public class Commands {"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"    public static String ind \u003d \"    \";"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"    public static String line \u003d ind + \"____________________________________________________________\\n\" + ind;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"     * Saves the task list, and ends the program."},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"     * @param storage  the storage object associated to the location of the"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"    public static void goodbye(Storage storage) {"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"        Ui.addGoodbyeResponse();"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"        Storage.saveFile(storage);"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line + \"Bye. Kobe saved your list.\\n\" + ind"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"                + \"Kobe hopes to see you again soon!\\n\" + line);"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"//      System.exit(0);"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"     * Shows the current list to the user."},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"     * @param tasks  the TaskList object that stores the current task list"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"    public static void showList(TaskList tasks) {"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"        Ui.addShowTaskListResponse(tasks);"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"     * Shows the list of commands to the user"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"    public static void getHelp() {"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"        Ui.addHelpResponse();"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":39}},{"path":"src/main/java/kobe/CustomExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"class CustomExceptions {"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"    //Class for incomplete commands"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"    public static class IncompleteDecriptionException extends KobeException {"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"        /**"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"         * Throws an exception for incomplete command descriptions"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"         *"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"         * @param errMsg  the error message"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"         */"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"        public IncompleteDecriptionException(String errMsg) {"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"            super(errMsg);"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"    //Class for gibberish commands"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"    public static class IncorrectDecriptionException extends KobeException {"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"        /**"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"         * Throws an exception for incorrect command descriptions that cannot be processed"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"         *"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"         * @param errMsg  the error message"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"         */"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"        public IncorrectDecriptionException(String errMsg) {"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"            super(errMsg);"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":29}},{"path":"src/main/java/kobe/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"// DialogBox class (below) and FXML files adapted from https://se-education.org/guides/tutorials/javaFxPart4.html"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"public class DialogBox extends HBox {"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    private Label dialog;"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"    private ImageView displayPicture;"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"     * Constructor for DialogBox."},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"     * @param text"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"     * @param img"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"            fxmlLoader.load();"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"        } catch (IOException e) {"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"            e.printStackTrace();"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"        dialog.setText(text);"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"        displayPicture.setImage(img);"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"    private void flip() {"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"        Collections.reverse(tmp);"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":"     * Gets user dialog."},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"     * @param text"},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":"     * @param img"},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":"     * @return"},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"Donavanty"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":63,"author":{"gitId":"Donavanty"},"content":"        return new DialogBox(text, img);"},{"lineNumber":64,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":66,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"Donavanty"},"content":"     * Gets Kobe dialog."},{"lineNumber":68,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"Donavanty"},"content":"     * @param text"},{"lineNumber":70,"author":{"gitId":"Donavanty"},"content":"     * @param img"},{"lineNumber":71,"author":{"gitId":"Donavanty"},"content":"     * @return"},{"lineNumber":72,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"Donavanty"},"content":"    public static DialogBox getKobeDialog(String text, Image img) {"},{"lineNumber":74,"author":{"gitId":"Donavanty"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":75,"author":{"gitId":"Donavanty"},"content":"        db.flip();"},{"lineNumber":76,"author":{"gitId":"Donavanty"},"content":"        return db;"},{"lineNumber":77,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":78}},{"path":"src/main/java/kobe/KobeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"abstract class KobeException extends RuntimeException {"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"    private String errMsg;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"     * Constructor for all exceptions pertaining to Kobe."},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"     * @param errMsg"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"    public KobeException(String errMsg) {"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"        this.errMsg \u003d errMsg;"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"     * Gets the error message"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"     * @return  the corresponding error message"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    //Getter"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    public String getMessage() {"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"        return errMsg;"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":26}},{"path":"src/main/java/kobe/KobeN.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import java.nio.file.Paths;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import java.lang.Thread;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"import javafx.application.Application;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.control.Button;"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.image.Image;"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"public class KobeN{"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    private Storage storage;"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"    private TaskList tasks; //ArrayList\u003cTasks\u003e tasks"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"    private Ui ui;"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"    private static final String HOME \u003d System.getProperty(\"user.home\");"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"    public KobeN() {}"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"     * Initialises Kobe."},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"    public KobeN(String filePath) {"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"        ui \u003d new Ui();"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"        storage \u003d new Storage(filePath, tasks, ui);"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"     * Runs Kobe, ready to accept commands typed into the command line, in sync with the GUI."},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"    public void run() {"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"        //Scanner things"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"            while (sc.hasNext()) {"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"                //Read the whole line, dissect each command word, including the condition after \"/\""},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"                String command \u003d sc.nextLine();"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"                //---Parser---"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"                Parser.readInput(command, tasks, storage, ui);"},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"        } catch (CustomExceptions.IncompleteDecriptionException e) {"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":"            System.out.println(e);"},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"        } catch (CustomExceptions.IncorrectDecriptionException e) {"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":"            System.out.println(e);"},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"        sc.close();"},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"Donavanty"},"content":"     * The user input is a command that is processed, and the corresponding line that"},{"lineNumber":63,"author":{"gitId":"Donavanty"},"content":"     * Kobe is suppose to respond with is obtained in this method."},{"lineNumber":64,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"Donavanty"},"content":"     * @param input"},{"lineNumber":66,"author":{"gitId":"Donavanty"},"content":"     * @return  Kobe\u0027s response"},{"lineNumber":67,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"Donavanty"},"content":"    public String getResponse(String input) {"},{"lineNumber":69,"author":{"gitId":"Donavanty"},"content":"        String kobesResponse \u003d \"\";"},{"lineNumber":70,"author":{"gitId":"Donavanty"},"content":"        boolean isGoodbye \u003d false;"},{"lineNumber":71,"author":{"gitId":"Donavanty"},"content":"        Parser.readInput(input, tasks, storage, ui);"},{"lineNumber":72,"author":{"gitId":"Donavanty"},"content":"        kobesResponse \u003d Ui.getMostRecentResponse();"},{"lineNumber":73,"author":{"gitId":"Donavanty"},"content":"        return kobesResponse;"},{"lineNumber":74,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":76,"author":{"gitId":"Donavanty"},"content":"    public String getGreeting() {"},{"lineNumber":77,"author":{"gitId":"Donavanty"},"content":"        String kobesResponse \u003d \"\";"},{"lineNumber":78,"author":{"gitId":"Donavanty"},"content":"        kobesResponse \u003d Ui.getMostRecentResponse();"},{"lineNumber":79,"author":{"gitId":"Donavanty"},"content":"        return kobesResponse;"},{"lineNumber":80,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":82,"author":{"gitId":"Donavanty"},"content":"}"},{"lineNumber":83,"author":{"gitId":"Donavanty"},"content":""}],"authorContributionMap":{"Donavanty":83}},{"path":"src/main/java/kobe/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"     * A launcher class to workaround classpath issues."},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"    public static void main(String[] args) {"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"        Application.launch(kobe.Main.class, args);"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":13}},{"path":"src/main/java/kobe/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import java.nio.file.Path;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import javafx.application.Application;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"import javafx.stage.Stage;"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"// Main class (below) and FXML files adapted from https://se-education.org/guides/tutorials/javaFxPart4.html"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":" * A GUI for Kobe using FXML."},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":" */"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"public class Main extends Application {"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    private static final String HOME \u003d System.getProperty(\"user.home\");"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    private Image kobeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Loppie says hi.png\"));"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"    public void start(Stage stage) {"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"//            Path path \u003d Paths.get(HOME + \"/ip/src/main/data/kobe.txt\");"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"            Path path \u003d Paths.get(HOME, \"ip\", \"src\", \"main\", \"data\", \"kobe.txt\");"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"//            String pathName \u003d HOME + \"/ip/src/main/data/kobe.txt\";"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"            String pathName \u003d path.toString();"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"            KobeN kobe \u003d new KobeN(pathName);"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(kobe.Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"            stage.setScene(scene);"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setKobe(kobe);"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"            stage.show();"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"            e.printStackTrace();"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":42}},{"path":"src/main/java/kobe/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.Scene;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"import javafx.stage.Stage;"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"// MainWindow class (below) and FXML files adapted from https://se-education.org/guides/tutorials/javaFxPart4.html"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":" */"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"    private TextField userInput;"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"    private Button sendButton;"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"    private kobe.KobeN kobe;"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Shibaban action.png\"));"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"    private Image kobeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Loppie says hi.png\"));"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"    public void initialize() {"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"    public void setKobe(kobe.KobeN k) {"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"        kobe \u003d k;"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"    public void handleUserInput() {"},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":"        String response \u003d kobe.getResponse(input);"},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"                DialogBox.getKobeDialog(response, kobeImage)"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"        );"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":"        userInput.clear();"},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":57}},{"path":"src/main/java/kobe/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.util.regex.Matcher;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import java.util.regex.Pattern;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"     * Reads and interprets the user input command to subsequently call"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"     * the addItem method in the Task class corresponding to the command."},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"     * @param command the error message"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"     * @param tasks   the current TaskList object"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"     * @param storage the current Storage object"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"     * @param ui      the user interface to inform the user of the outcome"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"    public static void readInput(String command, TaskList tasks, Storage storage, Ui ui) {"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"        String[] commandArr \u003d command.split(\" \");"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"        String text \u003d commandArr[0];"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"            if (text.equals(\"bye\")) {"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"                Commands.goodbye(storage);"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"            } else if (text.equals(\"help\")) {"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"                Commands.getHelp();"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"            } else if (text.equals(\"list\")) {"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"                Commands.showList(tasks);"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"            } else if (text.equals(\"done\")) {"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"                int taskNumber \u003d Integer.parseInt(commandArr[1]) - 1;"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"                tasks.completeTask(taskNumber);"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"            } else if (text.equals(\"delete\")) {"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"                int taskNumber \u003d Integer.parseInt(commandArr[1]) - 1;"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"                tasks.deleteTask(taskNumber);"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"            } else if (text.equals(\"find\")) {"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"                String keyword \u003d commandArr[1];"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"                tasks.findTask(keyword);"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"            } else {"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"                String taskName \u003d \"\";"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"                String type \u003d text;"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"                String condition \u003d \"\";"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"                //Isolating the command type, which is the first word"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"                String[] commandArrFirst2Parts \u003d command.split(\" \", 2);"},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":"                String firstWord \u003d commandArrFirst2Parts[0];"},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"                //Error Handling for wrong commands"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"                if (commandArrFirst2Parts.length \u003d\u003d 1) {"},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"                    //For incomplete commands"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":"                    if (firstWord.equals(\"todo\") || firstWord.equals(\"deadline\") || firstWord.equals(\"event\")) {"},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"                        Ui.addIncompleteDescriptionResponse();"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"                        String errMessage \u003d \"Incomplete Description: Command \" + firstWord + \" does not have any name\";"},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"                        throw new CustomExceptions.IncompleteDecriptionException(errMessage);"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"                    } else {"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":"                        //For gibberish commands"},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"                        assert !firstWord.equals(\"todo\") : \"Command word should be gibberish and not be todo\";"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":"                        assert !firstWord.equals(\"deadline\") : \"Command word should be gibberish and not be deadline\";"},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"                        assert !firstWord.equals(\"event\") : \"Command word should be gibberish and not be event\";"},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"                        Ui.addIncorrectDescriptionResponse();"},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":"                        String errMessage \u003d \"Incorrect Command Format. See help for more information\";"},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":"                        throw new CustomExceptions.IncorrectDecriptionException(errMessage);"},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":"                    }"},{"lineNumber":62,"author":{"gitId":"Donavanty"},"content":"                } else if (commandArrFirst2Parts.length \u003d\u003d 2) {"},{"lineNumber":63,"author":{"gitId":"Donavanty"},"content":"                    //Check if the second word is just whitespace"},{"lineNumber":64,"author":{"gitId":"Donavanty"},"content":"                    //If it is, count it as an error as well"},{"lineNumber":65,"author":{"gitId":"Donavanty"},"content":"                    String secondWord \u003d commandArrFirst2Parts[1];"},{"lineNumber":66,"author":{"gitId":"Donavanty"},"content":"                    boolean isWhitespacePresent \u003d secondWord.isBlank() || secondWord.equals(\"\");"},{"lineNumber":67,"author":{"gitId":"Donavanty"},"content":"                    if (isWhitespacePresent) {"},{"lineNumber":68,"author":{"gitId":"Donavanty"},"content":"                        Ui.addWhitespaceResponse();"},{"lineNumber":69,"author":{"gitId":"Donavanty"},"content":"                        String errMessage \u003d \"Incorrect Command Format: Extra whitespace detected. See help for more information\";"},{"lineNumber":70,"author":{"gitId":"Donavanty"},"content":"                        throw new CustomExceptions.IncorrectDecriptionException(errMessage);"},{"lineNumber":71,"author":{"gitId":"Donavanty"},"content":"                    }"},{"lineNumber":72,"author":{"gitId":"Donavanty"},"content":"                }"},{"lineNumber":73,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":74,"author":{"gitId":"Donavanty"},"content":"                //Isolate the task name"},{"lineNumber":75,"author":{"gitId":"Donavanty"},"content":"                String[] commandArrSecond2Parts \u003d commandArrFirst2Parts[1].split(\" /\", 2);"},{"lineNumber":76,"author":{"gitId":"Donavanty"},"content":"                taskName \u003d commandArrSecond2Parts[0];"},{"lineNumber":77,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":78,"author":{"gitId":"Donavanty"},"content":"                //Isolate the condition if there is any"},{"lineNumber":79,"author":{"gitId":"Donavanty"},"content":"                if (commandArrSecond2Parts.length \u003e 1) {"},{"lineNumber":80,"author":{"gitId":"Donavanty"},"content":"                    condition \u003d commandArrSecond2Parts[1].substring(3);"},{"lineNumber":81,"author":{"gitId":"Donavanty"},"content":"                    //no \"/by\""},{"lineNumber":82,"author":{"gitId":"Donavanty"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":84,"author":{"gitId":"Donavanty"},"content":"                //Add the task accordingly"},{"lineNumber":85,"author":{"gitId":"Donavanty"},"content":"                tasks.addItem(taskName, type, condition);"},{"lineNumber":86,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"Donavanty"},"content":"        } catch (CustomExceptions.IncompleteDecriptionException e) {"},{"lineNumber":88,"author":{"gitId":"Donavanty"},"content":"            e.printStackTrace(); //Unwraps cause within InvocationTargetException"},{"lineNumber":89,"author":{"gitId":"Donavanty"},"content":"            //Since the reflection layer will wrap any exception in an InvocationTargetException"},{"lineNumber":90,"author":{"gitId":"Donavanty"},"content":"        } catch (CustomExceptions.IncorrectDecriptionException e) {"},{"lineNumber":91,"author":{"gitId":"Donavanty"},"content":"            e.printStackTrace();"},{"lineNumber":92,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":94,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":95}},{"path":"src/main/java/kobe/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"import java.nio.file.Path;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"import java.nio.file.Paths;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"import java.io.BufferedReader;"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"import java.io.BufferedWriter;"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"    private String pathName;"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"    private TaskList tasks;"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"    private File file;"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    public static String ind \u003d \"    \";"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    public static String line \u003d ind + \"____________________________________________________________\\n\" + ind;"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    public static String line2 \u003d ind + \"____________________________________________________________\\n\";"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"     * Constructor for Storage object."},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"     * @param pathName the name of the path where the text file is stored"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"     * @param tasks    the list of tasks to be retrieved and written"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"     * @param ui       the user interface to inform the user of the outcome"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"    Storage(String pathName, TaskList tasks, Ui ui) {"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"        this.pathName \u003d \"data/kobe.txt\";"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"        if (!pathName.endsWith(\".txt\")) {"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"            this.file \u003d new File(pathName, \"kobe.txt\");"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"            this.pathName \u003d file.getPath();"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"            this.file \u003d new File(this.pathName);"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"        this.file.getParentFile().mkdirs();"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"        //Read line by line of the storage file"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"        try (BufferedReader br \u003d new BufferedReader("},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"                new FileReader(pathName, StandardCharsets.US_ASCII))) {"},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"            boolean isFileEmpty \u003d true;"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"            String readLine \u003d br.readLine();"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"            while (readLine !\u003d null) {"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":"                isFileEmpty \u003d false;"},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"                System.out.println(readLine);"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"                tasks.addItemByString(readLine);"},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"                readLine \u003d br.readLine();"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"            if (!isFileEmpty) {"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":"                System.out.println(line + \"Here are tasks that Kobe has retrieved!\\n\" + line);"},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"            } else {"},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"                ui.showLoadingError();"},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":"            br.close();"},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":"        } catch (IOException e) {"},{"lineNumber":62,"author":{"gitId":"Donavanty"},"content":"            System.out.println(\"IOException: \" + e);"},{"lineNumber":63,"author":{"gitId":"Donavanty"},"content":"        } finally {"},{"lineNumber":64,"author":{"gitId":"Donavanty"},"content":"            this.tasks \u003d tasks;"},{"lineNumber":65,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":68,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"Donavanty"},"content":"     * To save the current TaskList into the text file"},{"lineNumber":70,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"Donavanty"},"content":"    public static void saveFile(Storage storage) {"},{"lineNumber":72,"author":{"gitId":"Donavanty"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(storage.pathName,"},{"lineNumber":73,"author":{"gitId":"Donavanty"},"content":"                StandardCharsets.US_ASCII))) {"},{"lineNumber":74,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":75,"author":{"gitId":"Donavanty"},"content":"            if (storage.tasks.size() \u003d\u003d 0) {"},{"lineNumber":76,"author":{"gitId":"Donavanty"},"content":"                //Nothing happens"},{"lineNumber":77,"author":{"gitId":"Donavanty"},"content":"            } else {"},{"lineNumber":78,"author":{"gitId":"Donavanty"},"content":"                for (int i \u003d 0; i \u003c storage.tasks.size(); i++) {"},{"lineNumber":79,"author":{"gitId":"Donavanty"},"content":"                    bw.write(ind + (i + 1) + \". \" + storage.tasks.get(i) + \"\\n\");"},{"lineNumber":80,"author":{"gitId":"Donavanty"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"Donavanty"},"content":"            bw.close();"},{"lineNumber":83,"author":{"gitId":"Donavanty"},"content":"        } catch (IOException e) {"},{"lineNumber":84,"author":{"gitId":"Donavanty"},"content":"            System.out.println(\"IOException: \" + e);"},{"lineNumber":85,"author":{"gitId":"Donavanty"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":86,"author":{"gitId":"Donavanty"},"content":"            System.out.println(\"NullPointerException: \" + e);"},{"lineNumber":87,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":90,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":90}},{"path":"src/main/java/kobe/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"class Task {"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"    private boolean done;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"    private String taskName;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"    private String type;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"    private String condition;"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    private LocalDate date;"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"    private boolean isConditionLocalDate;"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"     * Constructor for Task."},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"     * @param taskName  the name of the task"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"     * @param type  the type of the task (todo, deadline or event)"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"     * @param condition  the condition of any deadline or event task, taken in in the form of a String"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    public Task(String taskName, String type, String condition) {"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"        this.done \u003d false;"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"        this.type \u003d type;"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"        this.condition \u003d condition;"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"        this.isConditionLocalDate \u003d false;"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"     * Constructor for Task."},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"     * @param done  adds a task that is marked as done (\u0027[X]\u0027)"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"     * @param taskName  the name of the task"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"     * @param type  the type of the task (todo, deadline or event)"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"     * @param condition  the condition of any deadline or event task, taken in in the form of a String"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"    public Task(boolean done, String taskName, String type, String condition) {"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"        this.done \u003d done;"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"        this.type \u003d type;"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"        this.condition \u003d condition;"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"        this.isConditionLocalDate \u003d false;"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"     * Constructor for Task."},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"     * @param done  adds a task that is marked as done (\u0027[X]\u0027)"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":"     * @param taskName  the name of the task"},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"     * @param type  the type of the task (todo, deadline or event)"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"     * @param date  the date of any deadline or event task, taken in in the form of a LocalDate."},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"    public Task(boolean done, String taskName, String type, LocalDate date) {"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":"        this.done \u003d done;"},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":"        this.type \u003d type;"},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"        this.condition \u003d \"\";"},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"        this.date \u003d date;"},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":"        this.isConditionLocalDate \u003d true;"},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":63,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"Donavanty"},"content":"     * Marks the task as done (\u0027[X]\u0027)"},{"lineNumber":65,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"Donavanty"},"content":"    public void markAsDone() {"},{"lineNumber":67,"author":{"gitId":"Donavanty"},"content":"        this.done \u003d true;"},{"lineNumber":68,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":70,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"Donavanty"},"content":"     * Sets the task as done (\u0027[X]\u0027)"},{"lineNumber":72,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"Donavanty"},"content":"     * @param task  the task to be marked as done"},{"lineNumber":74,"author":{"gitId":"Donavanty"},"content":"     * @return the task that has been marked as done"},{"lineNumber":75,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"Donavanty"},"content":"    public static Task setAsDone(Task task) {"},{"lineNumber":77,"author":{"gitId":"Donavanty"},"content":"        task.done \u003d true;"},{"lineNumber":78,"author":{"gitId":"Donavanty"},"content":"        return task;"},{"lineNumber":79,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":81,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"Donavanty"},"content":"     * Gets the status of the task (if it is done or not)"},{"lineNumber":83,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"Donavanty"},"content":"     * @return  a boolean indicating if the task is done or not"},{"lineNumber":85,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"Donavanty"},"content":"    public boolean getDoneStatus() {"},{"lineNumber":87,"author":{"gitId":"Donavanty"},"content":"        return this.done;"},{"lineNumber":88,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":90,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"Donavanty"},"content":"     * Gets the task name"},{"lineNumber":92,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"Donavanty"},"content":"     * @return  the task name of that task"},{"lineNumber":94,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"Donavanty"},"content":"    public String getTaskName() {"},{"lineNumber":96,"author":{"gitId":"Donavanty"},"content":"        return this.taskName;"},{"lineNumber":97,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":99,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"Donavanty"},"content":"     * Gets the task type"},{"lineNumber":101,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"Donavanty"},"content":"     * @return  the task name of that task"},{"lineNumber":103,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"Donavanty"},"content":"    public String getTaskType() {"},{"lineNumber":105,"author":{"gitId":"Donavanty"},"content":"        return this.type;"},{"lineNumber":106,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":108,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"Donavanty"},"content":"     * Rewrites the task into a formatted string that is understood by the parser."},{"lineNumber":110,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"Donavanty"},"content":"    @Override"},{"lineNumber":112,"author":{"gitId":"Donavanty"},"content":"    public String toString() {"},{"lineNumber":113,"author":{"gitId":"Donavanty"},"content":"        String doneString \u003d \"[ ]\";"},{"lineNumber":114,"author":{"gitId":"Donavanty"},"content":"        String typeString \u003d \"[ ]\";"},{"lineNumber":115,"author":{"gitId":"Donavanty"},"content":"        String conditionString \u003d \"\";"},{"lineNumber":116,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":117,"author":{"gitId":"Donavanty"},"content":"        if (done) {"},{"lineNumber":118,"author":{"gitId":"Donavanty"},"content":"            doneString \u003d \"[X]\";"},{"lineNumber":119,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":121,"author":{"gitId":"Donavanty"},"content":"        if (this.type.equals(\"todo\")) {"},{"lineNumber":122,"author":{"gitId":"Donavanty"},"content":"            typeString \u003d \"[T]\";"},{"lineNumber":123,"author":{"gitId":"Donavanty"},"content":"        } else if (this.type.equals(\"deadline\")) {"},{"lineNumber":124,"author":{"gitId":"Donavanty"},"content":"            typeString \u003d \"[D]\";"},{"lineNumber":125,"author":{"gitId":"Donavanty"},"content":"            if (!this.condition.equals(\"\")) {"},{"lineNumber":126,"author":{"gitId":"Donavanty"},"content":"                conditionString \u003d \"(by: \" + condition.substring(0) + \")\";"},{"lineNumber":127,"author":{"gitId":"Donavanty"},"content":"            } else if (isConditionLocalDate) { //convert LocalDate to parsed date"},{"lineNumber":128,"author":{"gitId":"Donavanty"},"content":"                conditionString \u003d \"(by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":129,"author":{"gitId":"Donavanty"},"content":"            } else {"},{"lineNumber":130,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"Donavanty"},"content":"        } else if (this.type.equals(\"event\")) {"},{"lineNumber":132,"author":{"gitId":"Donavanty"},"content":"            typeString \u003d \"[E]\";"},{"lineNumber":133,"author":{"gitId":"Donavanty"},"content":"            if (!this.condition.equals(\"\")) {"},{"lineNumber":134,"author":{"gitId":"Donavanty"},"content":"                conditionString \u003d \"(at: \" + condition.substring(0) + \")\";"},{"lineNumber":135,"author":{"gitId":"Donavanty"},"content":"            } else if (isConditionLocalDate) { //convert LocalDate to parsed date"},{"lineNumber":136,"author":{"gitId":"Donavanty"},"content":"                conditionString \u003d \"(at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":137,"author":{"gitId":"Donavanty"},"content":"            } else {"},{"lineNumber":138,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"Donavanty"},"content":"        } else {}"},{"lineNumber":140,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":141,"author":{"gitId":"Donavanty"},"content":"        return typeString + doneString + \" \" + taskName + \" \" + conditionString;"},{"lineNumber":142,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":143}},{"path":"src/main/java/kobe/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.text.DateFormat;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import java.text.ParseException;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"     * Constructor for TaskList."},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"    TaskList() {"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"     * Gets the task associated to the task number in the TaskList."},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"     * @param taskNumber  refers to the task number of the corresponding task in the TaskList"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"     * @return  the task associated to the task number in the TaskList."},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"    public Task get(int taskNumber) {"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"        return this.tasks.get(taskNumber);"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"     * Gets the size of the TaskList."},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"     * @return  the size of the TaskList."},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"    public int size() {"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"        return this.tasks.size();"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"     * Adds a task into the TaskList, based on the command typed by the user."},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"     * @param echoedText  the name of the task"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"     * @param type  the type of the task"},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":"     * @param condition  the condition of the task"},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"    public void addItem(String echoedText, String type, String condition) {"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"        //Recognise if condition is time"},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"        DateFormat df1 \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":"        df1.setLenient(false);"},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"        Task currentTask \u003d new Task(echoedText, type, condition);"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"            //check if there already exists a similar task"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"            boolean isDuplicate \u003d false;"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":"            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"                Task previouslyAddedTask \u003d this.tasks.get(i);"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":"                String previouslyAddedTaskName \u003d previouslyAddedTask.getTaskName().strip();"},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"                String previouslyAddedTaskType \u003d previouslyAddedTask.getTaskType();"},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"                if (echoedText.equals(previouslyAddedTaskName) \u0026\u0026"},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":"                        type.equals(previouslyAddedTaskType)) {"},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":"                    currentTask \u003d previouslyAddedTask;"},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":"                    isDuplicate \u003d true;"},{"lineNumber":62,"author":{"gitId":"Donavanty"},"content":"                }"},{"lineNumber":63,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":65,"author":{"gitId":"Donavanty"},"content":"            if (isDuplicate) {"},{"lineNumber":66,"author":{"gitId":"Donavanty"},"content":"                Ui.addDuplicateTaskResponse(currentTask);"},{"lineNumber":67,"author":{"gitId":"Donavanty"},"content":"            } else {"},{"lineNumber":68,"author":{"gitId":"Donavanty"},"content":"                df1.parse(condition);"},{"lineNumber":69,"author":{"gitId":"Donavanty"},"content":"                LocalDate d1 \u003d LocalDate.parse(condition);"},{"lineNumber":70,"author":{"gitId":"Donavanty"},"content":"                currentTask \u003d new Task(false, echoedText, type, d1);"},{"lineNumber":71,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":72,"author":{"gitId":"Donavanty"},"content":"                this.tasks.add(currentTask);"},{"lineNumber":73,"author":{"gitId":"Donavanty"},"content":"                Ui.addAddDateTaskResponse(currentTask, this.tasks.size());"},{"lineNumber":74,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":76,"author":{"gitId":"Donavanty"},"content":"        } catch (ParseException | NullPointerException e) { //not in the format"},{"lineNumber":77,"author":{"gitId":"Donavanty"},"content":"            currentTask \u003d new Task(echoedText, type, condition);"},{"lineNumber":78,"author":{"gitId":"Donavanty"},"content":"            this.tasks.add(currentTask);"},{"lineNumber":79,"author":{"gitId":"Donavanty"},"content":"            Ui.addAddNormalTaskResponse(currentTask, this.tasks.size());"},{"lineNumber":80,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":83,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"Donavanty"},"content":"     * Adds a task into the TaskList,"},{"lineNumber":85,"author":{"gitId":"Donavanty"},"content":"     * based on the formatted command string read from the saved text file"},{"lineNumber":86,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"Donavanty"},"content":"     * @param text  the line of formatted command string from the saved file"},{"lineNumber":88,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"Donavanty"},"content":"    public void addItemByString(String text) {"},{"lineNumber":90,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":91,"author":{"gitId":"Donavanty"},"content":"        String[] intoParts1 \u003d text.split(\"\\\\[\", 2);"},{"lineNumber":92,"author":{"gitId":"Donavanty"},"content":"        String type \u003d intoParts1[1].substring(0, 1);"},{"lineNumber":93,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":94,"author":{"gitId":"Donavanty"},"content":"        String[] intoParts2 \u003d intoParts1[1].split(\"\\\\[\", 2);"},{"lineNumber":95,"author":{"gitId":"Donavanty"},"content":"        String isItDone \u003d intoParts2[1].substring(0, 1);"},{"lineNumber":96,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":97,"author":{"gitId":"Donavanty"},"content":"        String[] intoParts3 \u003d intoParts2[1].split(\"\\\\]\", 2);"},{"lineNumber":98,"author":{"gitId":"Donavanty"},"content":"        String taskName \u003d intoParts3[1].substring(1);"},{"lineNumber":99,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":100,"author":{"gitId":"Donavanty"},"content":"        String condition \u003d \"\";"},{"lineNumber":101,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":102,"author":{"gitId":"Donavanty"},"content":"        if (intoParts3[1].split(\":\", 2).length !\u003d 1) { //There is a condition, cos it can be split even more"},{"lineNumber":103,"author":{"gitId":"Donavanty"},"content":"            //Task without the condition"},{"lineNumber":104,"author":{"gitId":"Donavanty"},"content":"            intoParts3 \u003d intoParts3[1].substring(1).split(\"\\\\(\", 2);"},{"lineNumber":105,"author":{"gitId":"Donavanty"},"content":"            String taskNameStr \u003d intoParts3[0].substring(0);"},{"lineNumber":106,"author":{"gitId":"Donavanty"},"content":"            taskName \u003d taskNameStr.substring(0, taskNameStr.length() - 1); //to fix extra space formed at the end"},{"lineNumber":107,"author":{"gitId":"Donavanty"},"content":"            taskName \u003d taskName.strip();"},{"lineNumber":108,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":109,"author":{"gitId":"Donavanty"},"content":"            //Getting the condition"},{"lineNumber":110,"author":{"gitId":"Donavanty"},"content":"            String[] intoParts4 \u003d intoParts3[1].split(\": \", 2);"},{"lineNumber":111,"author":{"gitId":"Donavanty"},"content":"            String[] intoParts5 \u003d intoParts4[1].split(\"\\\\)\", 2);"},{"lineNumber":112,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":113,"author":{"gitId":"Donavanty"},"content":"            condition \u003d intoParts5[0].substring(0);"},{"lineNumber":114,"author":{"gitId":"Donavanty"},"content":"        } else {"},{"lineNumber":115,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":117,"author":{"gitId":"Donavanty"},"content":"        //Recognise command"},{"lineNumber":118,"author":{"gitId":"Donavanty"},"content":"        if (type.equals(\"T\")) {"},{"lineNumber":119,"author":{"gitId":"Donavanty"},"content":"            type \u003d \"todo\";"},{"lineNumber":120,"author":{"gitId":"Donavanty"},"content":"        } else if (type.equals(\"D\")) {"},{"lineNumber":121,"author":{"gitId":"Donavanty"},"content":"            type \u003d \"deadline\";"},{"lineNumber":122,"author":{"gitId":"Donavanty"},"content":"        } else if (type.equals(\"E\")) {"},{"lineNumber":123,"author":{"gitId":"Donavanty"},"content":"            type \u003d \"event\";"},{"lineNumber":124,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":126,"author":{"gitId":"Donavanty"},"content":"        //Recognise done status"},{"lineNumber":127,"author":{"gitId":"Donavanty"},"content":"        boolean isItDoneBoolean \u003d false;"},{"lineNumber":128,"author":{"gitId":"Donavanty"},"content":"        if (isItDone.equals(\"X\")) {"},{"lineNumber":129,"author":{"gitId":"Donavanty"},"content":"            isItDoneBoolean \u003d true;"},{"lineNumber":130,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":132,"author":{"gitId":"Donavanty"},"content":"        //Recognise time"},{"lineNumber":133,"author":{"gitId":"Donavanty"},"content":"        DateFormat df1 \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"},{"lineNumber":134,"author":{"gitId":"Donavanty"},"content":"        df1.setLenient(false);"},{"lineNumber":135,"author":{"gitId":"Donavanty"},"content":"        try {"},{"lineNumber":136,"author":{"gitId":"Donavanty"},"content":"            df1.parse(condition);"},{"lineNumber":137,"author":{"gitId":"Donavanty"},"content":"            LocalDate d1 \u003d LocalDate.parse(condition);"},{"lineNumber":138,"author":{"gitId":"Donavanty"},"content":"            assert condition !\u003d null : \"condition should not be null\";"},{"lineNumber":139,"author":{"gitId":"Donavanty"},"content":"            this.tasks.add(new Task(isItDoneBoolean, taskName, type, d1));"},{"lineNumber":140,"author":{"gitId":"Donavanty"},"content":"        } catch (ParseException | NullPointerException e) { //not in the format"},{"lineNumber":141,"author":{"gitId":"Donavanty"},"content":"            this.tasks.add(new Task(isItDoneBoolean, taskName, type, condition));"},{"lineNumber":142,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":145,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"Donavanty"},"content":"     * Marks a task as completed"},{"lineNumber":147,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":148,"author":{"gitId":"Donavanty"},"content":"     * @param taskNumber  the task number associated to the task that has been completed"},{"lineNumber":149,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"Donavanty"},"content":"    public void completeTask(int taskNumber) {"},{"lineNumber":151,"author":{"gitId":"Donavanty"},"content":"        this.tasks.get(taskNumber).markAsDone();"},{"lineNumber":152,"author":{"gitId":"Donavanty"},"content":"        Task currentTask \u003d this.tasks.get(taskNumber);"},{"lineNumber":153,"author":{"gitId":"Donavanty"},"content":"        Ui.addCompleteTaskResponse(taskNumber, currentTask);"},{"lineNumber":154,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":155,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":157,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"Donavanty"},"content":"     * Deletes a task"},{"lineNumber":159,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":160,"author":{"gitId":"Donavanty"},"content":"     * @param taskNumber  the task number associated to the task that has been completed"},{"lineNumber":161,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":162,"author":{"gitId":"Donavanty"},"content":"    public void deleteTask(int taskNumber) {"},{"lineNumber":163,"author":{"gitId":"Donavanty"},"content":"        if (this.tasks.isEmpty()) { //Managing empty lists from the start"},{"lineNumber":164,"author":{"gitId":"Donavanty"},"content":"            Ui.addEmptyTaskListResponse();"},{"lineNumber":165,"author":{"gitId":"Donavanty"},"content":"        } else {"},{"lineNumber":166,"author":{"gitId":"Donavanty"},"content":"            assert !this.tasks.isEmpty() : \"TaskList should not be empty\";"},{"lineNumber":167,"author":{"gitId":"Donavanty"},"content":"            Task currentTask \u003d this.tasks.get(taskNumber);"},{"lineNumber":168,"author":{"gitId":"Donavanty"},"content":"            this.tasks.remove(taskNumber);"},{"lineNumber":169,"author":{"gitId":"Donavanty"},"content":"            int currentTaskListSize \u003d this.tasks.size();"},{"lineNumber":170,"author":{"gitId":"Donavanty"},"content":"            Ui.addRemoveTaskResponse(currentTask, currentTaskListSize);"},{"lineNumber":171,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":174,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"Donavanty"},"content":"     * Finds a task corresponding to the String input by the user"},{"lineNumber":176,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":177,"author":{"gitId":"Donavanty"},"content":"     * @param keyword  the String input by the user"},{"lineNumber":178,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":179,"author":{"gitId":"Donavanty"},"content":"    public void findTask(String keyword) {"},{"lineNumber":180,"author":{"gitId":"Donavanty"},"content":"        String currentTaskName \u003d \"\";"},{"lineNumber":181,"author":{"gitId":"Donavanty"},"content":"        String allMatchingTasks \u003d \"\";"},{"lineNumber":182,"author":{"gitId":"Donavanty"},"content":"        int counter \u003d 1;"},{"lineNumber":183,"author":{"gitId":"Donavanty"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":184,"author":{"gitId":"Donavanty"},"content":"            currentTaskName \u003d tasks.get(i).getTaskName();"},{"lineNumber":185,"author":{"gitId":"Donavanty"},"content":"            if (currentTaskName.indexOf(keyword) !\u003d -1) {"},{"lineNumber":186,"author":{"gitId":"Donavanty"},"content":"                allMatchingTasks +\u003d Ui.ind + counter + \": \" + tasks.get(i).toString() + \"\\n\";"},{"lineNumber":187,"author":{"gitId":"Donavanty"},"content":"                counter++;"},{"lineNumber":188,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":189,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"Donavanty"},"content":"        Ui.addFindTaskResponse(allMatchingTasks);"},{"lineNumber":191,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":193,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":193}},{"path":"src/main/java/kobe/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"import java.util.*;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"public class Ui {"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"    public static String ind \u003d \"    \";"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"    public static String line \u003d ind + \"____________________________________________________________\\n\" + ind;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"    public static String line2 \u003d ind + \"____________________________________________________________\\n\";"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    public static ArrayList\u003cString\u003e responses \u003d new ArrayList\u003c\u003e();;"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"     * Constructor for the Ui object."},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"    public Ui() {"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line + \"Hello! I\u0027m Kobe\\n\" + ind + \"What can I do for you?\\n\" + line);"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"        responses.add(\"Hello! I\u0027m Kobe.\\n What can I do for you?\");"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"     * To print a line with indentation."},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"    void showLine() {"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line);"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"     * To print a line with indentation."},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"     * @return  a line with indentation"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"    String line() {"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"        return line;"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"     * To print a line with indentation."},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"     * @return  a line with indentation"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"    String ind() {"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"        return ind;"},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"     * To get the most recent response for Kobe, in order to reply"},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"     * to the user\u0027s most recent input."},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"     * @return  Kobe\u0027s response"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"    public static String getMostRecentResponse(){"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"        return responses.get(responses.size() - 1);"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"     * To add a GUI response indicating an incomplete description by the user."},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":"    public static void addIncompleteDescriptionResponse() {"},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":"        responses.add(\"Oh no! Kobe doesn\u0027t understand what you mean.\\n\" +"},{"lineNumber":62,"author":{"gitId":"Donavanty"},"content":"                \"It looks like you have yet to complete your request.\\n\" +"},{"lineNumber":63,"author":{"gitId":"Donavanty"},"content":"                \"Type help for more info\");"},{"lineNumber":64,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":66,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"Donavanty"},"content":"     * To add a GUI response indicating an incorrect description by the user."},{"lineNumber":68,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"Donavanty"},"content":"    public static void addIncorrectDescriptionResponse(){"},{"lineNumber":70,"author":{"gitId":"Donavanty"},"content":"        responses.add(\"Oh no! Kobe doesn\u0027t understand what you mean.\\n\" +"},{"lineNumber":71,"author":{"gitId":"Donavanty"},"content":"                \"It looks like your command is incorrect.\\n\" +"},{"lineNumber":72,"author":{"gitId":"Donavanty"},"content":"                \"Type help for more info\");"},{"lineNumber":73,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":75,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"Donavanty"},"content":"     * To add a GUI response indicating an excess of whitespace in the user input."},{"lineNumber":77,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"Donavanty"},"content":"    public static void addWhitespaceResponse(){"},{"lineNumber":79,"author":{"gitId":"Donavanty"},"content":"        responses.add(\"Oh no! Kobe doesn\u0027t understand what you mean.\\n\" +"},{"lineNumber":80,"author":{"gitId":"Donavanty"},"content":"                \"It looks like your command has too much empty spacing.\\n\" +"},{"lineNumber":81,"author":{"gitId":"Donavanty"},"content":"                \"Type help for more info\");"},{"lineNumber":82,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":84,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"Donavanty"},"content":"     * To add a GUI response indicating a goodbye."},{"lineNumber":86,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"Donavanty"},"content":"    public static void addGoodbyeResponse(){"},{"lineNumber":88,"author":{"gitId":"Donavanty"},"content":"        responses.add(\"Goodbye! Kobe has saved your list.\\n\" +"},{"lineNumber":89,"author":{"gitId":"Donavanty"},"content":"                \"Kobe hopes to see you soon!\");"},{"lineNumber":90,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":92,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"Donavanty"},"content":"     * To add a GUI response indicating all the task in the list currently."},{"lineNumber":94,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"Donavanty"},"content":"    public static void addShowTaskListResponse(TaskList tasks){"},{"lineNumber":96,"author":{"gitId":"Donavanty"},"content":"        String fullResponse \u003d \"\";"},{"lineNumber":97,"author":{"gitId":"Donavanty"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":98,"author":{"gitId":"Donavanty"},"content":"            fullResponse +\u003d \"Kobe does not see any tasks currently in your list! \\n\";"},{"lineNumber":99,"author":{"gitId":"Donavanty"},"content":"        } else {"},{"lineNumber":100,"author":{"gitId":"Donavanty"},"content":"            fullResponse +\u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":101,"author":{"gitId":"Donavanty"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":102,"author":{"gitId":"Donavanty"},"content":"                fullResponse +\u003d ind + (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";"},{"lineNumber":103,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"Donavanty"},"content":"        responses.add(fullResponse);"},{"lineNumber":106,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line + fullResponse + line);"},{"lineNumber":107,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":109,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"Donavanty"},"content":"     * To add a GUI response indicating an addition of a task with a condition."},{"lineNumber":111,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"Donavanty"},"content":"    public static void addAddDateTaskResponse(Task currentTask, int size){"},{"lineNumber":113,"author":{"gitId":"Donavanty"},"content":"        String fullResponse \u003d \"\";"},{"lineNumber":114,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d \"Got it! Kobe marked down this date!\\n\";"},{"lineNumber":115,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d ind + \"Kobe added this task:\\n\" + ind + ind +"},{"lineNumber":116,"author":{"gitId":"Donavanty"},"content":"                currentTask + \"\\n\";"},{"lineNumber":117,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d ind + \"Kobe sees that you have \" +"},{"lineNumber":118,"author":{"gitId":"Donavanty"},"content":"                size + \" task(s) in the list.\\n\";"},{"lineNumber":119,"author":{"gitId":"Donavanty"},"content":"        responses.add(fullResponse);"},{"lineNumber":120,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":121,"author":{"gitId":"Donavanty"},"content":"        System.out.print(line + \"Got it! Kobe marked down this date!\\n\");"},{"lineNumber":122,"author":{"gitId":"Donavanty"},"content":"        System.out.println(ind + \"Kobe added this task:\\n\" + ind + ind +"},{"lineNumber":123,"author":{"gitId":"Donavanty"},"content":"                currentTask);"},{"lineNumber":124,"author":{"gitId":"Donavanty"},"content":"        System.out.println(ind + \"Kobe sees that you have \" +"},{"lineNumber":125,"author":{"gitId":"Donavanty"},"content":"                size + \" task(s) in the list.\\n\" + line);"},{"lineNumber":126,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":128,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"Donavanty"},"content":"     * To add a GUI response indicating an addition of a normal task (without a condition)."},{"lineNumber":130,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"Donavanty"},"content":"    public static void addAddNormalTaskResponse(Task currentTask, int size){"},{"lineNumber":132,"author":{"gitId":"Donavanty"},"content":"        String fullResponse \u003d \"\";"},{"lineNumber":133,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d ind + \"Got it! Kobe added this task:\\n\" + ind + ind +"},{"lineNumber":134,"author":{"gitId":"Donavanty"},"content":"                currentTask +\"\\n\";"},{"lineNumber":135,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d ind + \"Kobe sees that you have \" +"},{"lineNumber":136,"author":{"gitId":"Donavanty"},"content":"                size + \" task(s) in the list.\\n\";"},{"lineNumber":137,"author":{"gitId":"Donavanty"},"content":"        responses.add(fullResponse);"},{"lineNumber":138,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":139,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line + \"Got it! Kobe added this task:\\n\" + ind + ind +"},{"lineNumber":140,"author":{"gitId":"Donavanty"},"content":"                currentTask);"},{"lineNumber":141,"author":{"gitId":"Donavanty"},"content":"        System.out.println(ind + \"Kobe sees that you have \" +"},{"lineNumber":142,"author":{"gitId":"Donavanty"},"content":"                size + \" task(s) in the list.\\n\" + line);"},{"lineNumber":143,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":145,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"Donavanty"},"content":"     * To add a GUI response indicating the completion of a task."},{"lineNumber":147,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":148,"author":{"gitId":"Donavanty"},"content":"    public static void addCompleteTaskResponse(int taskNumber, Task currentTask) {"},{"lineNumber":149,"author":{"gitId":"Donavanty"},"content":"        String fullResponse \u003d \"\";"},{"lineNumber":150,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d \"Nice work! Kobe will mark your task as done!\\n\";"},{"lineNumber":151,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d ind + currentTask;"},{"lineNumber":152,"author":{"gitId":"Donavanty"},"content":"        responses.add(fullResponse);"},{"lineNumber":153,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":154,"author":{"gitId":"Donavanty"},"content":"        System.out.print(line + \"Nice work! Kobe will mark your task as done!\\n\" + ind);"},{"lineNumber":155,"author":{"gitId":"Donavanty"},"content":"        System.out.println(ind + currentTask + \"\\n\" + line);"},{"lineNumber":156,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":157,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":159,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":160,"author":{"gitId":"Donavanty"},"content":"     * To add a GUI response indicating an empty task list."},{"lineNumber":161,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":162,"author":{"gitId":"Donavanty"},"content":"    public static void addEmptyTaskListResponse() {"},{"lineNumber":163,"author":{"gitId":"Donavanty"},"content":"        responses.add(\"Kobe sees no more tasks from the list!\\n\");"},{"lineNumber":164,"author":{"gitId":"Donavanty"},"content":"        System.out.print(line + \"Kobe sees no more tasks from the list!\\n\" + line + \"\\n\");"},{"lineNumber":165,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":167,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":168,"author":{"gitId":"Donavanty"},"content":"     * To add a GUI response indicating the removal of a task from the task list."},{"lineNumber":169,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":170,"author":{"gitId":"Donavanty"},"content":"    public static void addRemoveTaskResponse(Task currentTask, int currentTaskListSize) {"},{"lineNumber":171,"author":{"gitId":"Donavanty"},"content":"        String fullResponse \u003d \"\";"},{"lineNumber":172,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d \"Okay! Kobe will remove this task from the list:\\n\";"},{"lineNumber":173,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d ind + currentTask + \"\\n\";"},{"lineNumber":174,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d \"Kobe sees that you now have \" + currentTaskListSize + \" task(s) in the list.\";"},{"lineNumber":175,"author":{"gitId":"Donavanty"},"content":"        if (currentTaskListSize \u003d\u003d 0) { //If it\u0027s now empty, inform them."},{"lineNumber":176,"author":{"gitId":"Donavanty"},"content":"            fullResponse +\u003d ind + \"Your list is now empty!\\n\";"},{"lineNumber":177,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"Donavanty"},"content":"        responses.add(fullResponse);"},{"lineNumber":179,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":180,"author":{"gitId":"Donavanty"},"content":"        System.out.print(line + \"Okay! Kobe will remove your task from the list:\\n\" + ind);"},{"lineNumber":181,"author":{"gitId":"Donavanty"},"content":"        System.out.println(ind + currentTask + \"\\n\");"},{"lineNumber":182,"author":{"gitId":"Donavanty"},"content":"        System.out.println(ind + \"Kobe sees that you now have \" + currentTaskListSize + \" task(s) in the list.\");"},{"lineNumber":183,"author":{"gitId":"Donavanty"},"content":"        if (currentTaskListSize \u003d\u003d 0) { //If it\u0027s now empty, inform them."},{"lineNumber":184,"author":{"gitId":"Donavanty"},"content":"            System.out.print(ind + \"Your list is now empty!\\n\" + line);"},{"lineNumber":185,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":188,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":189,"author":{"gitId":"Donavanty"},"content":"     * To add a GUI response indicating tasks that match the user\u0027s input when \u0027find\u0027 is called."},{"lineNumber":190,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":191,"author":{"gitId":"Donavanty"},"content":"    public static void addFindTaskResponse(String allMatchingTasks) {"},{"lineNumber":192,"author":{"gitId":"Donavanty"},"content":"        String fullResponse \u003d \"\";"},{"lineNumber":193,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d ind + \"Kobe has found these tasks in your list:\\n\";"},{"lineNumber":194,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d allMatchingTasks;"},{"lineNumber":195,"author":{"gitId":"Donavanty"},"content":"        responses.add(fullResponse);"},{"lineNumber":196,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":197,"author":{"gitId":"Donavanty"},"content":"        System.out.print(line + \"Kobe has found these tasks in your list:\\n\");"},{"lineNumber":198,"author":{"gitId":"Donavanty"},"content":"        System.out.print(allMatchingTasks);"},{"lineNumber":199,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":201,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":202,"author":{"gitId":"Donavanty"},"content":"     * To add a GUI response indicating all the queries that can be called by the user."},{"lineNumber":203,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":204,"author":{"gitId":"Donavanty"},"content":"    public static void addHelpResponse() {"},{"lineNumber":205,"author":{"gitId":"Donavanty"},"content":"        String fullResponse \u003d \"\";"},{"lineNumber":206,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d \"Here are some examples of commands you can ask Kobe to do:\\n\\n\""},{"lineNumber":207,"author":{"gitId":"Donavanty"},"content":"                + \"todo Task_ABC\\n\""},{"lineNumber":208,"author":{"gitId":"Donavanty"},"content":"                + \"deadline Task_ABC\\n\""},{"lineNumber":209,"author":{"gitId":"Donavanty"},"content":"                + \"deadline Task_ABC /by 2021-02-15\\n\""},{"lineNumber":210,"author":{"gitId":"Donavanty"},"content":"                + \"event Task_ABC\\n\""},{"lineNumber":211,"author":{"gitId":"Donavanty"},"content":"                + \"event Task_ABC /at 2021-02-15\\n\""},{"lineNumber":212,"author":{"gitId":"Donavanty"},"content":"                + \"list\\n\""},{"lineNumber":213,"author":{"gitId":"Donavanty"},"content":"                + \"delete 1\\n\""},{"lineNumber":214,"author":{"gitId":"Donavanty"},"content":"                + \"done 1\\n\""},{"lineNumber":215,"author":{"gitId":"Donavanty"},"content":"                + \"find Task_ABC\\n\""},{"lineNumber":216,"author":{"gitId":"Donavanty"},"content":"                + \"bye\";"},{"lineNumber":217,"author":{"gitId":"Donavanty"},"content":"        responses.add(fullResponse);"},{"lineNumber":218,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":219,"author":{"gitId":"Donavanty"},"content":"        System.out.print(line + fullResponse + \"\\n\" + line);"},{"lineNumber":220,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":222,"author":{"gitId":"Donavanty"},"content":"    public static void addDuplicateTaskResponse(Task taskThatAlreadyExists) {"},{"lineNumber":223,"author":{"gitId":"Donavanty"},"content":"        String fullResponse \u003d \"\";"},{"lineNumber":224,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d ind + \"Kobe has found a duplicate task in your list:\\n\";"},{"lineNumber":225,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d ind + ind + taskThatAlreadyExists + \"\\n\";"},{"lineNumber":226,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d ind + \"Kobe did not add your task.\\n\";"},{"lineNumber":227,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d ind + \"To add your task, use a different title for your task.\";"},{"lineNumber":228,"author":{"gitId":"Donavanty"},"content":"        responses.add(fullResponse);"},{"lineNumber":229,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":230,"author":{"gitId":"Donavanty"},"content":"        System.out.print(line + \"Kobe has found a duplicate task in your list:\\n\");"},{"lineNumber":231,"author":{"gitId":"Donavanty"},"content":"        System.out.println(ind + ind + taskThatAlreadyExists);"},{"lineNumber":232,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line + \"Kobe did not add your task.\");"},{"lineNumber":233,"author":{"gitId":"Donavanty"},"content":"        System.out.println(ind + \"To add your task, use a different title for your task.\\n\");"},{"lineNumber":234,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":235,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":236,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":237,"author":{"gitId":"Donavanty"},"content":"     * To display an error message in the context of Kobe."},{"lineNumber":238,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":239,"author":{"gitId":"Donavanty"},"content":"    void showLoadingError() {"},{"lineNumber":240,"author":{"gitId":"Donavanty"},"content":"        String fullResponse \u003d \"\";"},{"lineNumber":241,"author":{"gitId":"Donavanty"},"content":"        fullResponse +\u003d \"Kobe detected no prior saved data!\\n\";"},{"lineNumber":242,"author":{"gitId":"Donavanty"},"content":"        responses.add(fullResponse);"},{"lineNumber":243,"author":{"gitId":"Donavanty"},"content":"        //\"No prior saved data!\""},{"lineNumber":244,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line + \"Kobe detected no prior saved data!\\n\" + line);"},{"lineNumber":245,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":246,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":247,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":247}},{"path":"src/main/out/test/test/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package resources;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import kobe.Storage;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"public class StorageStub implements Storage {"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":8}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Donavanty":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"            fx:controller\u003d\"kobe.MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"                    vvalue\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"            \u003ccontent\u003e"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\"/\u003e"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"            \u003c/content\u003e"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Donavanty":23}},{"path":"src/test/java/kobe/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"class ParserTest {"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"    private final TaskList taskList \u003d new TaskList();"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    private final Ui ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"    private final Storage storage \u003d new Storage(\"\", taskList, ui);"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"    @BeforeEach"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"    void setUp() {"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"    public void readInput_incompleteDescription_exceptionThrow() {"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"        assertThrows(CustomExceptions.IncompleteDecriptionException.class, () -\u003e {"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"            Parser.readInput(\"todo\", taskList, storage, ui);"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"        });"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"    public void readInput_incorrectDescription_exceptionThrow() {"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"        assertThrows(CustomExceptions.IncorrectDecriptionException.class, () -\u003e {"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"            Parser.readInput(\"deadlinedeadlindeadline\", taskList, storage, ui);"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"        });"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"//    @Test"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"//    public void readInput_normalInput() {"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"//        assertEquals(2, 2);"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"//    }"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":43}},{"path":"src/test/java/kobe/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"class StorageTest {"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    void saveFile() {"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"        assertEquals(2, 2);"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":18}},{"path":"src/test/java/kobe/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"class TaskListTest {"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    @BeforeEach"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"    void setUp() {"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"    void get() {"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"        assertEquals(2, 2);"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    void size() {"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"    void addItem() {"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"    void addItemByString() {"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"    void completeTask() {"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"    void deleteTask() {"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":39}},{"path":"src/test/java/kobe/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"class TaskTest {"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"    private final Task todoTask \u003d new Task(\"Do your homework\", \"todo\", \"\");"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    private final Task deadlineTask \u003d new Task(\"This SE Project\", \"todo\", \"2359\");"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"    private final Task eventTask \u003d new Task(\"It\u0027s your friend\u0027s birthday\", \"todo\", \"2021/08/15\");"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"    void markAsDone_todoTask() {"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"        assertEquals(true, Task.setAsDone(todoTask).getDoneStatus());"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    void markAsDone_deadlineTask() {"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"        assertEquals(true, Task.setAsDone(deadlineTask).getDoneStatus());"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"    void markAsDone_eventTask() {"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"        assertEquals(true, Task.setAsDone(eventTask).getDoneStatus());"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"    void testToString() {"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"        assertEquals(2, 2);"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":33}},{"path":"src/test/java/kobe/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"class UiTest {"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    void showLine() {"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"        assertEquals(2, 2);"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"    void line() {"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"    void showLoadingError() {"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"list"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"done 3"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"delete 2"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"delete 1"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"bye"}],"authorContributionMap":{"Donavanty":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"java -classpath ../bin Kobe \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"Donavanty":1,"-":37}}]
