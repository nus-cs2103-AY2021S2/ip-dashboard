[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"    mainClassName \u003d \"kobe.KobeN\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"    archiveBaseName \u003d \"kobe\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Donavanty":2,"-":44}},{"path":"src/main/data/kobe.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"    1. [D][X] def                            "},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":"    2. [D][X] thou (by: Apr 21 1998)"},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"    3. [D][X] this project haha (by: 28 Jan)"}],"authorContributionMap":{"Donavanty":3}},{"path":"src/main/java/kobe/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.lang.System;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"public class Commands {"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"    public static String ind \u003d \"    \";"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"    public static String line \u003d ind + \"____________________________________________________________\\n\" + ind;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"     * Saves the task list, and ends the program."},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"     * @param storage  the storage object associated to the location of the"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"     *                 text file where the task list will be saved at"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"    public static void goodbye(Storage storage) {"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"        storage.saveFile();"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line + \"Bye. Kobe saved your list.\\n\" + ind"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"                + \"Kobe hopes to see you again soon!\\n\" + line);"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"        System.exit(0);"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"     * Shows the current list to the user."},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"     * @param tasks  the TaskList object that stores the current task list"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"     * @param ui  the user interface to inform the user of the outcome"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"    public static void showList(TaskList tasks, Ui ui) {"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"        System.out.print(line + \"Here are the tasks in your list:\\n\");"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"            System.out.print(ind + (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\");"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"        ui.showLine();"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":37}},{"path":"src/main/java/kobe/CustomExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"class CustomExceptions {"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"    //Class for incomplete commands"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"    public static class IncompleteDecriptionException extends KobeException {"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"        /**"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"         * Throws an exception for incomplete command descriptions"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"         *"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"         * @param errMsg  the error message"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"         */"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"        public IncompleteDecriptionException(String errMsg) {"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"            super(errMsg);"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"    //Class for gibberish commands"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"    public static class IncorrectDecriptionException extends KobeException {"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"        /**"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"         * Throws an exception for incorrect command descriptions that cannot be processed"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"         *"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"         * @param errMsg  the error message"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"         */"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"        public IncorrectDecriptionException(String errMsg) {"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"            super(errMsg);"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":29}},{"path":"src/main/java/kobe/KobeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"abstract class KobeException extends RuntimeException {"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"    private String errMsg;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"     * Constructor for all exceptions pertaining to Kobe."},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"     * @param errMsg"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"    public KobeException(String errMsg) {"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"        this.errMsg \u003d errMsg;"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"     * Gets the error message"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"     * @return  the corresponding error message"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    //Getter"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    public String getMessage() {"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"        return errMsg;"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":26}},{"path":"src/main/java/kobe/KobeN.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import java.nio.file.Paths;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"public class KobeN {"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"    private Storage storage;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"    private TaskList tasks; //ArrayList\u003cTasks\u003e tasks"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    private static final String HOME \u003d System.getProperty(\"user.home\");"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"     * Initialises Kobe."},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"    public KobeN(String filePath) {"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"        ui \u003d new Ui();"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"        storage \u003d new Storage(filePath, tasks, ui);"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"     * Main method. Allows Kobe to run."},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"    public static void main(String[] args) {"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"        Path path \u003d Paths.get(HOME + \"/ip/src/main/data/kobe.txt\");"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"        String pathName \u003d HOME + \"/ip/src/main/data/kobe.txt\";"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"        new KobeN(pathName).run();"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"     * Runs Kobe, ready to accept commands typed into the command line."},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"    public void run() {"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"        //Scanner things"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"            while (sc.hasNext()) {"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"                //Read the whole line, dissect each command word, including the condition after \"/\""},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"                String command \u003d sc.nextLine();"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":"                //---Parser---"},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"                Parser.readInput(command, tasks, storage, ui);"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"        } catch (CustomExceptions.IncompleteDecriptionException e) {"},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"            System.out.println(e);"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":"        } catch (CustomExceptions.IncorrectDecriptionException e) {"},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"            System.out.println(e);"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"        sc.close();"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":58}},{"path":"src/main/java/kobe/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"public class Parser {"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"     * Reads and interprets the user input command to subsequently call"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"     * the addItem method in the Task class corresponding to the command."},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"     * @param command  the error message"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"     * @param tasks  the current TaskList object"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"     * @param storage  the current Storage object"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"     * @param ui  the user interface to inform the user of the outcome"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    public static void readInput(String command, TaskList tasks, Storage storage, Ui ui) {"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"        String[] commandArr \u003d command.split(\" \");"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"        String text \u003d commandArr[0];"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"        if (text.equals(\"bye\")) {"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"            Commands.goodbye(storage);"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"        } else if (text.equals(\"list\")) {"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"            Commands.showList(tasks, ui);"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"        } else if (text.equals(\"done\")) {"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"            int taskNumber \u003d Integer.parseInt(commandArr[1]) - 1;"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"            tasks.completeTask(taskNumber, ui);"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"        } else if (text.equals(\"delete\")) {"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"            int taskNumber \u003d Integer.parseInt(commandArr[1]) - 1;"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"            tasks.deleteTask(taskNumber, ui);"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"        } else if (text.equals(\"find\")) {"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"            String keyword \u003d commandArr[1];"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"            tasks.findTask(keyword, ui);"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"            String taskName \u003d \"\";"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"            String type \u003d text;"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"            String condition \u003d \"\";"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"            String[] commandArrFirst2Parts \u003d command.split(\" \", 2);"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"            String firstWord \u003d commandArrFirst2Parts[0];"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"            if (commandArrFirst2Parts.length \u003d\u003d 1) {"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"                if (firstWord.equals(\"todo\") || firstWord.equals(\"deadline\") || firstWord.equals(\"event\")) {"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"                    String errMessage \u003d \"Oh no! Kobe doesn\u0027t want your \" + firstWord + \" to be empty!\";"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"                    throw new CustomExceptions.IncompleteDecriptionException(errMessage);"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"                } else {"},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":"                    String errMessage \u003d \"Oh no! Kobe doesn\u0027t know what you mean!\";"},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"                    throw new CustomExceptions.IncorrectDecriptionException(errMessage);"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"                }"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":"            String[] commandArrSecond2Parts \u003d commandArrFirst2Parts[1].split(\" /\", 2);"},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"            taskName \u003d commandArrSecond2Parts[0];"},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"            //If the array is in 2 parts, there is a condition, add that"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":"            if (commandArrSecond2Parts.length \u003e 1) {"},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"                condition \u003d commandArrSecond2Parts[1].substring(3);"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":"                //no \"/by\""},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":"            tasks.addItem(taskName, type, condition);"},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":63,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":63}},{"path":"src/main/java/kobe/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.io.*;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"public class Storage {"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"    private String pathName;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"    private TaskList tasks;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"    public static String ind \u003d \"    \";"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"    public static String line \u003d ind + \"____________________________________________________________\\n\" + ind;"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    public static String line2 \u003d ind + \"____________________________________________________________\\n\";"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"     * Constructor for Storage object."},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"     * @param pathName  the name of the path where the text file is stored"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"     * @param tasks  the list of tasks to be retrieved and written"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"     * @param ui  the user interface to inform the user of the outcome"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    Storage(String pathName, TaskList tasks, Ui ui) {"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"        this.pathName \u003d pathName;"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"        //Read line by line of the storage file"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"        try (BufferedReader br \u003d new BufferedReader("},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"                new FileReader(pathName, StandardCharsets.US_ASCII))) {"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"            boolean isFileEmpty \u003d true;"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"            String readLine \u003d br.readLine();"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"            while (readLine !\u003d null) {"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"                isFileEmpty \u003d false;"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"                System.out.println(readLine);"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"                tasks.addItemByString(readLine);"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"                readLine \u003d br.readLine();"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"            if (!isFileEmpty) {"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"                System.out.println(line + \"Here are tasks that Kobe has retrieved!\\n\" + line);"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"            } else {"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"                ui.showLoadingError();"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"            //do nothing"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"        } finally {"},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"            this.tasks \u003d tasks;"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"     * To save the TaskList into the text file"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"    //UPDATE THE KOBE.TXT FILE"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":"    public void saveFile() {"},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(this.pathName,"},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"                StandardCharsets.US_ASCII))) {"},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":"            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":"                bw.write(ind + (i + 1) + \". \" + this.tasks.get(i) + \"\\n\");"},{"lineNumber":62,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":64,"author":{"gitId":"Donavanty"},"content":"        } catch (IOException e) {"},{"lineNumber":65,"author":{"gitId":"Donavanty"},"content":"            System.out.println(\"IOException: \" + e);"},{"lineNumber":66,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":69,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":69}},{"path":"src/main/java/kobe/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"class Task {"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"    private boolean done;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"    private String taskName;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"    private String type;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"    private String condition;"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    private LocalDate date;"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"    private boolean isConditionLocalDate;"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"     * Constructor for Task."},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"     * @param taskName  the name of the task"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"     * @param type  the type of the task (todo, deadline or event)"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"     * @param condition  the condition of any deadline or event task, taken in in the form of a String"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    public Task(String taskName, String type, String condition) {"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"        this.done \u003d false;"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"        this.type \u003d type;"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"        this.condition \u003d condition;"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"        this.isConditionLocalDate \u003d false;"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"     * Constructor for Task."},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"     * @param done  adds a task that is marked as done (\u0027[X]\u0027)"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"     * @param taskName  the name of the task"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"     * @param type  the type of the task (todo, deadline or event)"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"     * @param condition  the condition of any deadline or event task, taken in in the form of a String"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"    public Task(boolean done, String taskName, String type, String condition) {"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"        this.done \u003d done;"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"        this.type \u003d type;"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"        this.condition \u003d condition;"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"        this.isConditionLocalDate \u003d false;"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"     * Constructor for Task."},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"     * @param done  adds a task that is marked as done (\u0027[X]\u0027)"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":"     * @param taskName  the name of the task"},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"     * @param type  the type of the task (todo, deadline or event)"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"     * @param date  the date of any deadline or event task, taken in in the form of a LocalDate."},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"    public Task(boolean done, String taskName, String type, LocalDate date) {"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":"        this.done \u003d done;"},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":"        this.type \u003d type;"},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"        this.condition \u003d \"\";"},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"        this.date \u003d date;"},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":"        this.isConditionLocalDate \u003d true;"},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":63,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"Donavanty"},"content":"     * Marks the task as done (\u0027[X]\u0027)"},{"lineNumber":65,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"Donavanty"},"content":"    public void markAsDone() {"},{"lineNumber":67,"author":{"gitId":"Donavanty"},"content":"        this.done \u003d true;"},{"lineNumber":68,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":70,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"Donavanty"},"content":"     * Sets the task as done (\u0027[X]\u0027)"},{"lineNumber":72,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"Donavanty"},"content":"     * @param task  the task to be marked as done"},{"lineNumber":74,"author":{"gitId":"Donavanty"},"content":"     * @return the task that has been marked as done"},{"lineNumber":75,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"Donavanty"},"content":"    public static Task setAsDone(Task task) {"},{"lineNumber":77,"author":{"gitId":"Donavanty"},"content":"        task.done \u003d true;"},{"lineNumber":78,"author":{"gitId":"Donavanty"},"content":"        return task;"},{"lineNumber":79,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":81,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"Donavanty"},"content":"     * Gets the status of the task (if it is done or not)"},{"lineNumber":83,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"Donavanty"},"content":"     * @return  a boolean indicating if the task is done or not"},{"lineNumber":85,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"Donavanty"},"content":"    public boolean getDoneStatus() {"},{"lineNumber":87,"author":{"gitId":"Donavanty"},"content":"        return this.done;"},{"lineNumber":88,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":90,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"Donavanty"},"content":"     * Gets the task name"},{"lineNumber":92,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"Donavanty"},"content":"     * @return  the task name of that task"},{"lineNumber":94,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"Donavanty"},"content":"    public String getTaskName() {"},{"lineNumber":96,"author":{"gitId":"Donavanty"},"content":"        return this.taskName;"},{"lineNumber":97,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":99,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":100,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":101,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"Donavanty"},"content":"     * Rewrites the task into a formatted string that is understood by the parser."},{"lineNumber":103,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"Donavanty"},"content":"    @Override"},{"lineNumber":105,"author":{"gitId":"Donavanty"},"content":"    public String toString() {"},{"lineNumber":106,"author":{"gitId":"Donavanty"},"content":"        String doneString \u003d \"[ ]\";"},{"lineNumber":107,"author":{"gitId":"Donavanty"},"content":"        String typeString \u003d \"[ ]\";"},{"lineNumber":108,"author":{"gitId":"Donavanty"},"content":"        String conditionString \u003d \"\";"},{"lineNumber":109,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":110,"author":{"gitId":"Donavanty"},"content":"        if (done) {"},{"lineNumber":111,"author":{"gitId":"Donavanty"},"content":"            doneString \u003d \"[X]\";"},{"lineNumber":112,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":114,"author":{"gitId":"Donavanty"},"content":"        if (this.type.equals(\"todo\")) {"},{"lineNumber":115,"author":{"gitId":"Donavanty"},"content":"            typeString \u003d \"[T]\";"},{"lineNumber":116,"author":{"gitId":"Donavanty"},"content":"        } else if (this.type.equals(\"deadline\")) {"},{"lineNumber":117,"author":{"gitId":"Donavanty"},"content":"            typeString \u003d \"[D]\";"},{"lineNumber":118,"author":{"gitId":"Donavanty"},"content":"            if (!this.condition.equals(\"\")) {"},{"lineNumber":119,"author":{"gitId":"Donavanty"},"content":"                conditionString \u003d \"(by: \" + condition.substring(0) + \")\";"},{"lineNumber":120,"author":{"gitId":"Donavanty"},"content":"            } else if (isConditionLocalDate) { //convert LocalDate to parsed date"},{"lineNumber":121,"author":{"gitId":"Donavanty"},"content":"                conditionString \u003d \"(by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":122,"author":{"gitId":"Donavanty"},"content":"            } else {"},{"lineNumber":123,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":125,"author":{"gitId":"Donavanty"},"content":"        } else if (this.type.equals(\"event\")) {"},{"lineNumber":126,"author":{"gitId":"Donavanty"},"content":"            typeString \u003d \"[E]\";"},{"lineNumber":127,"author":{"gitId":"Donavanty"},"content":"            if (!this.condition.equals(\"\")) {"},{"lineNumber":128,"author":{"gitId":"Donavanty"},"content":"                conditionString \u003d \"(at: \" + condition.substring(0) + \")\";"},{"lineNumber":129,"author":{"gitId":"Donavanty"},"content":"            } else if (isConditionLocalDate) { //convert LocalDate to parsed date"},{"lineNumber":130,"author":{"gitId":"Donavanty"},"content":"                conditionString \u003d \"(at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":131,"author":{"gitId":"Donavanty"},"content":"            } else {"},{"lineNumber":132,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":134,"author":{"gitId":"Donavanty"},"content":"        } else {}"},{"lineNumber":135,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":136,"author":{"gitId":"Donavanty"},"content":"        return typeString + doneString + \" \" + taskName + \" \" + conditionString;"},{"lineNumber":137,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":138}},{"path":"src/main/java/kobe/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.text.DateFormat;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import java.text.ParseException;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"    public static String ind \u003d \"    \";"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"    public static String line \u003d ind + \"____________________________________________________________\\n\" + ind;"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    public static String line2 \u003d ind + \"____________________________________________________________\\n\";"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"     * Constructor for TaskList."},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"    TaskList() {"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"     * Gets the task associated to the task number in the TaskList."},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"     * @param taskNumber  refers to the task number of the corresponding task in the TaskList"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"     * @return  the task associated to the task number in the TaskList."},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"    public Task get(int taskNumber) {"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"        return this.tasks.get(taskNumber);"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"     * Gets the size of the TaskList."},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"     * @return  the size of the TaskList."},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"    public int size() {"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"        return this.tasks.size();"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"     * Adds a task into the TaskList, based on the command typed by the user."},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"     * @param echoedText  the name of the task"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"     * @param type  the type of the task"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"     * @param condition  the condition of the task"},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":"    public void addItem(String echoedText, String type, String condition) {"},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"        //Recognise if condition is time"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"        DateFormat df1 \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"        df1.setLenient(false);"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"        Task currentTask;"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"            df1.parse(condition);"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":"            LocalDate d1 \u003d LocalDate.parse(condition);"},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"            currentTask \u003d new Task(false, echoedText, type, d1);"},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"            this.tasks.add(currentTask);"},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":"            System.out.print(line + \"Got it! Kobe marked down this date!\\n\");"},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":"            System.out.println(ind + \"Kobe added this task:\\n\" + ind + ind +"},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":"                    currentTask);"},{"lineNumber":62,"author":{"gitId":"Donavanty"},"content":"        } catch (ParseException | NullPointerException e) { //not in the format"},{"lineNumber":63,"author":{"gitId":"Donavanty"},"content":"            currentTask \u003d new Task(echoedText, type, condition);"},{"lineNumber":64,"author":{"gitId":"Donavanty"},"content":"            this.tasks.add(currentTask);"},{"lineNumber":65,"author":{"gitId":"Donavanty"},"content":"            System.out.println(line + \"Got it! Kobe added this task:\\n\" + ind + ind +"},{"lineNumber":66,"author":{"gitId":"Donavanty"},"content":"                    currentTask);"},{"lineNumber":67,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"Donavanty"},"content":"        System.out.println(ind + \"Kobe sees that you have \" + this.tasks.size() + \" task(s) in the list.\\n\" + line);"},{"lineNumber":69,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":71,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"Donavanty"},"content":"     * Adds a task into the TaskList,"},{"lineNumber":73,"author":{"gitId":"Donavanty"},"content":"     * based on the formatted command string read from the saved text file"},{"lineNumber":74,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"Donavanty"},"content":"     * @param text  the line of formatted command string from the saved file"},{"lineNumber":76,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"Donavanty"},"content":"    public void addItemByString(String text) {"},{"lineNumber":78,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":79,"author":{"gitId":"Donavanty"},"content":"        String[] intoParts1 \u003d text.split(\"\\\\[\", 2);"},{"lineNumber":80,"author":{"gitId":"Donavanty"},"content":"        String type \u003d intoParts1[1].substring(0, 1);"},{"lineNumber":81,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":82,"author":{"gitId":"Donavanty"},"content":"        String[] intoParts2 \u003d intoParts1[1].split(\"\\\\[\", 2);"},{"lineNumber":83,"author":{"gitId":"Donavanty"},"content":"        String isItDone \u003d intoParts2[1].substring(0, 1);"},{"lineNumber":84,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":85,"author":{"gitId":"Donavanty"},"content":"        String[] intoParts3 \u003d intoParts2[1].split(\"\\\\]\", 2);"},{"lineNumber":86,"author":{"gitId":"Donavanty"},"content":"        String taskName \u003d intoParts3[1].substring(1);"},{"lineNumber":87,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":88,"author":{"gitId":"Donavanty"},"content":"        String condition \u003d \"\";"},{"lineNumber":89,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":90,"author":{"gitId":"Donavanty"},"content":"        if (intoParts3[1].split(\":\", 2).length !\u003d 1) { //There is a condition, cos it can be split even more"},{"lineNumber":91,"author":{"gitId":"Donavanty"},"content":"            //Task without the condition"},{"lineNumber":92,"author":{"gitId":"Donavanty"},"content":"            intoParts3 \u003d intoParts3[1].substring(1).split(\"\\\\(\", 2);"},{"lineNumber":93,"author":{"gitId":"Donavanty"},"content":"            String taskNameStr \u003d intoParts3[0].substring(0);"},{"lineNumber":94,"author":{"gitId":"Donavanty"},"content":"            taskName \u003d taskNameStr.substring(0, taskNameStr.length() - 1); //to fix extra space formed at the end"},{"lineNumber":95,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":96,"author":{"gitId":"Donavanty"},"content":"            //Getting the condition"},{"lineNumber":97,"author":{"gitId":"Donavanty"},"content":"            String[] intoParts4 \u003d intoParts3[1].split(\": \", 2);"},{"lineNumber":98,"author":{"gitId":"Donavanty"},"content":"            String[] intoParts5 \u003d intoParts4[1].split(\"\\\\)\", 2);"},{"lineNumber":99,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":100,"author":{"gitId":"Donavanty"},"content":"            condition \u003d intoParts5[0].substring(0);"},{"lineNumber":101,"author":{"gitId":"Donavanty"},"content":"        } else {"},{"lineNumber":102,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":104,"author":{"gitId":"Donavanty"},"content":"        if (type.equals(\"T\")) {"},{"lineNumber":105,"author":{"gitId":"Donavanty"},"content":"            type \u003d \"todo\";"},{"lineNumber":106,"author":{"gitId":"Donavanty"},"content":"        } else if (type.equals(\"D\")) {"},{"lineNumber":107,"author":{"gitId":"Donavanty"},"content":"            type \u003d \"deadline\";"},{"lineNumber":108,"author":{"gitId":"Donavanty"},"content":"        } else if (type.equals(\"E\")) {"},{"lineNumber":109,"author":{"gitId":"Donavanty"},"content":"            type \u003d \"event\";"},{"lineNumber":110,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":112,"author":{"gitId":"Donavanty"},"content":"        boolean isItDoneBoolean \u003d false;"},{"lineNumber":113,"author":{"gitId":"Donavanty"},"content":"        if (isItDone.equals(\"X\")) {"},{"lineNumber":114,"author":{"gitId":"Donavanty"},"content":"            isItDoneBoolean \u003d true;"},{"lineNumber":115,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":117,"author":{"gitId":"Donavanty"},"content":"        //Recognise time"},{"lineNumber":118,"author":{"gitId":"Donavanty"},"content":"        DateFormat df1 \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"},{"lineNumber":119,"author":{"gitId":"Donavanty"},"content":"        df1.setLenient(false);"},{"lineNumber":120,"author":{"gitId":"Donavanty"},"content":"        try {"},{"lineNumber":121,"author":{"gitId":"Donavanty"},"content":"            df1.parse(condition);"},{"lineNumber":122,"author":{"gitId":"Donavanty"},"content":"            LocalDate d1 \u003d LocalDate.parse(condition);"},{"lineNumber":123,"author":{"gitId":"Donavanty"},"content":"            this.tasks.add(new Task(isItDoneBoolean, taskName, type, d1));"},{"lineNumber":124,"author":{"gitId":"Donavanty"},"content":"//            System.out.print(ind + \"Kobe marked down this date!\\n\");"},{"lineNumber":125,"author":{"gitId":"Donavanty"},"content":"        } catch (ParseException | NullPointerException e) { //not in the format"},{"lineNumber":126,"author":{"gitId":"Donavanty"},"content":"            this.tasks.add(new Task(isItDoneBoolean, taskName, type, condition));"},{"lineNumber":127,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":130,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"Donavanty"},"content":"     * Marks a task as completed"},{"lineNumber":132,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":133,"author":{"gitId":"Donavanty"},"content":"     * @param taskNumber  the task number associated to the task that has been completed"},{"lineNumber":134,"author":{"gitId":"Donavanty"},"content":"     * @param ui  the user interface to inform the user of the outcome"},{"lineNumber":135,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":136,"author":{"gitId":"Donavanty"},"content":"    public void completeTask(int taskNumber, Ui ui) {"},{"lineNumber":137,"author":{"gitId":"Donavanty"},"content":"        this.tasks.get(taskNumber).markAsDone();"},{"lineNumber":138,"author":{"gitId":"Donavanty"},"content":"        System.out.print(line + \"Nice work! Kobe will mark your task as done!\\n\" + ind);"},{"lineNumber":139,"author":{"gitId":"Donavanty"},"content":"        System.out.println(ind + tasks.get(taskNumber));"},{"lineNumber":140,"author":{"gitId":"Donavanty"},"content":"        ui.showLine();"},{"lineNumber":141,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":143,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"Donavanty"},"content":"     * Deletes a task"},{"lineNumber":145,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":146,"author":{"gitId":"Donavanty"},"content":"     * @param taskNumber  the task number associated to the task that has been completed"},{"lineNumber":147,"author":{"gitId":"Donavanty"},"content":"     * @param ui  the user interface to inform the user of the outcome"},{"lineNumber":148,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"Donavanty"},"content":"    public void deleteTask(int taskNumber, Ui ui) {"},{"lineNumber":150,"author":{"gitId":"Donavanty"},"content":"        if (this.tasks.isEmpty()) { //Managing empty lists from the start"},{"lineNumber":151,"author":{"gitId":"Donavanty"},"content":"            System.out.print(ui.line() + \"Kobe sees no more tasks from the list!\\n\" + line + \"\\n\");"},{"lineNumber":152,"author":{"gitId":"Donavanty"},"content":"        } else {"},{"lineNumber":153,"author":{"gitId":"Donavanty"},"content":"            System.out.print(line + \"Okay! Kobe will remove your task from the list!\\n\" + ind);"},{"lineNumber":154,"author":{"gitId":"Donavanty"},"content":"            System.out.println(ind + tasks.get(taskNumber));"},{"lineNumber":155,"author":{"gitId":"Donavanty"},"content":"            this.tasks.remove(taskNumber);"},{"lineNumber":156,"author":{"gitId":"Donavanty"},"content":"            System.out.println(ind + \"Kobe sees that you now have \" + tasks.size() + \" task(s) in the list.\");"},{"lineNumber":157,"author":{"gitId":"Donavanty"},"content":"            if (tasks.isEmpty()) { //If it\u0027s now empty, inform them."},{"lineNumber":158,"author":{"gitId":"Donavanty"},"content":"                System.out.print(ind + \"Your list is now empty!\\n\");"},{"lineNumber":159,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":160,"author":{"gitId":"Donavanty"},"content":"            ui.showLine();"},{"lineNumber":161,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":164,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"Donavanty"},"content":"     * Finds a task corresponding to the String input by the user"},{"lineNumber":166,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":167,"author":{"gitId":"Donavanty"},"content":"     * @param keyword  the String input by the user"},{"lineNumber":168,"author":{"gitId":"Donavanty"},"content":"     * @param ui  the user interface to inform the user of the outcome"},{"lineNumber":169,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":170,"author":{"gitId":"Donavanty"},"content":"    public void findTask(String keyword, Ui ui) {"},{"lineNumber":171,"author":{"gitId":"Donavanty"},"content":"        ui.showLine();"},{"lineNumber":172,"author":{"gitId":"Donavanty"},"content":"        System.out.print(ui.ind() + \"Kobe has found these tasks in your list:\\n\");"},{"lineNumber":173,"author":{"gitId":"Donavanty"},"content":"        String currentTaskName \u003d \"\";"},{"lineNumber":174,"author":{"gitId":"Donavanty"},"content":"        int counter \u003d 1;"},{"lineNumber":175,"author":{"gitId":"Donavanty"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":176,"author":{"gitId":"Donavanty"},"content":"            currentTaskName \u003d tasks.get(i).getTaskName();"},{"lineNumber":177,"author":{"gitId":"Donavanty"},"content":"            if (currentTaskName.indexOf(keyword) !\u003d -1) {"},{"lineNumber":178,"author":{"gitId":"Donavanty"},"content":"                System.out.println(ui.ind() + counter + \": \" + tasks.get(i).toString());"},{"lineNumber":179,"author":{"gitId":"Donavanty"},"content":"                counter++;"},{"lineNumber":180,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":181,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"Donavanty"},"content":"        ui.showLine();"},{"lineNumber":183,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":185,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":185}},{"path":"src/main/java/kobe/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"    public static String ind \u003d \"    \";"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"    public static String line \u003d ind + \"____________________________________________________________\\n\" + ind;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"    public static String line2 \u003d ind + \"____________________________________________________________\\n\";"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"     * Constructor for the Ui object."},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    Ui() {"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line + \"Hello! I\u0027m Kobe\\n\" + ind + \"What can I do for you?\\n\" + line);"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"     * To print a line with indentation."},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"    void showLine() {"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line);"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"     * To print a line with indentation."},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"     * @return  a line with indentation"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"    String line() {"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"        return line;"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"     * To print a line with indentation."},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"     * @return  a line with indentation"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"    String ind() {"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"        return ind;"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"     * To display an error message in the context of Kobe"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"    void showLoadingError() {"},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":"        //\"No prior saved data!\""},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line + \"Kobe detected no prior saved data!\\n\" + line);"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":47}},{"path":"src/main/out/test/test/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package resources;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import kobe.Storage;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"public class StorageStub implements Storage {"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":8}},{"path":"src/test/java/kobe/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"class ParserTest {"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"    private final TaskList taskList \u003d new TaskList();"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    private final Ui ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"    private final Storage storage \u003d new Storage(\"\", taskList, ui);"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"    @BeforeEach"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"    void setUp() {"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"    public void readInput_incompleteDescription_exceptionThrow() {"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"        assertThrows(CustomExceptions.IncompleteDecriptionException.class, () -\u003e {"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"            Parser.readInput(\"todo\", taskList, storage, ui);"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"        });"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"    public void readInput_incorrectDescription_exceptionThrow() {"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"        assertThrows(CustomExceptions.IncorrectDecriptionException.class, () -\u003e {"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"            Parser.readInput(\"deadlinedeadlindeadline\", taskList, storage, ui);"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"        });"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"//    @Test"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"//    public void readInput_normalInput() {"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"//        assertEquals(2, 2);"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"//    }"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":43}},{"path":"src/test/java/kobe/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"class StorageTest {"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    void saveFile() {"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"        assertEquals(2, 2);"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":18}},{"path":"src/test/java/kobe/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"class TaskListTest {"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    @BeforeEach"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"    void setUp() {"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"    void get() {"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"        assertEquals(2, 2);"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    void size() {"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"    void addItem() {"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"    void addItemByString() {"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"    void completeTask() {"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"    void deleteTask() {"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":39}},{"path":"src/test/java/kobe/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"class TaskTest {"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"    private final Task todoTask \u003d new Task(\"Do your homework\", \"todo\", \"\");"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    private final Task deadlineTask \u003d new Task(\"This SE Project\", \"todo\", \"2359\");"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"    private final Task eventTask \u003d new Task(\"It\u0027s your friend\u0027s birthday\", \"todo\", \"2021/08/15\");"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"    void markAsDone_todoTask() {"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"        assertEquals(true, Task.setAsDone(todoTask).getDoneStatus());"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    void markAsDone_deadlineTask() {"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"        assertEquals(true, Task.setAsDone(deadlineTask).getDoneStatus());"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"    void markAsDone_eventTask() {"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"        assertEquals(true, Task.setAsDone(eventTask).getDoneStatus());"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"    void testToString() {"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"        assertEquals(2, 2);"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":33}},{"path":"src/test/java/kobe/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package kobe;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"class UiTest {"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    void showLine() {"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"        assertEquals(2, 2);"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"    void line() {"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"    void showLoadingError() {"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"list"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"done 3"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"delete 2"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"delete 1"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"bye"}],"authorContributionMap":{"Donavanty":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"java -classpath ../bin Kobe \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"Donavanty":1,"-":37}}]
