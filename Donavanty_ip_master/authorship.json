[{"path":"src/main/java/CustomExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"class CustomExceptions {"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"    //for incomplete commands"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"    public static class IncompleteDecriptionException extends KobeException {"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"//        public IncompleteDecriptionException(String errMsg, Throwable cause) {"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"        public IncompleteDecriptionException(String errMsg) {"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"            super(errMsg);"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"//            super(errMsg, cause);"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    //for gibberish commands"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"    public static class IncorrectDecriptionException extends KobeException {"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"//        public IncorrectDecriptionException(String errMsg, Throwable cause) {"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"        public IncorrectDecriptionException(String errMsg) {"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"            super(errMsg);"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"//            super(errMsg, cause);"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":23}},{"path":"src/main/java/Kobe.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"public class Kobe {"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"    public static String ind \u003d \"    \";"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"    public static String line \u003d ind + \"____________________________________________________________\\n\" + ind;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"    public static String line2 \u003d ind + \"____________________________________________________________\\n\";"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"//        String logo \u003d \" ____        _        \\n\""},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"//                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"//                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"//                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line + \"Hello! I\u0027m Kobe\\n\" + ind + \"What can I do for you?\\n\" + line);"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"            while (sc.hasNext()) {"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"                //Read the whole line, dissect each command word, including the condition after \"/\""},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"                String command \u003d sc.nextLine();"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"                String[] commandArr \u003d command.split(\" \");"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"                String text \u003d commandArr[0];"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"                if (text.equals(\"bye\")) {"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"                    goodbye();"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"                    break;"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"                } else if (text.equals(\"list\")) {"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"                    showList();"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"                } else if (text.equals(\"done\")) {"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"                    int taskNumber \u003d Integer.parseInt(commandArr[1]) - 1;"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"                    completeTask(taskNumber);"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"                } else if (text.equals(\"delete\")) {"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"                    int taskNumber \u003d Integer.parseInt(commandArr[1]) - 1;"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"                    deleteTask(taskNumber);"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"                } else {"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"                    String taskName \u003d \"\";"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"                    String type \u003d text;"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"                    String condition \u003d \"\";"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"                    String[] commandArrFirst2Parts \u003d command.split(\" \", 2);"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"////                    Check for correct splitting"},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"//                    System.out.println(\"First2Parts: \" + Arrays.toString(commandArrFirst2Parts));"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":"                    String firstWord \u003d commandArrFirst2Parts[0];"},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"                    if (commandArrFirst2Parts.length \u003d\u003d 1) {"},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"                        if (firstWord.equals(\"todo\") || firstWord.equals(\"deadline\") || firstWord.equals(\"event\")) {"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"                            String errMessage \u003d \"Oh no! Kobe doesn\u0027t want your \" + firstWord + \" to be empty!\";"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":"                            throw new CustomExceptions.IncompleteDecriptionException(errMessage);"},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"                        } else {"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":"                            String errMessage \u003d \"Oh no! Kobe doesn\u0027t know what you mean!\";"},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"                            throw new CustomExceptions.IncorrectDecriptionException(errMessage);"},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"                        }"},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":"                    }"},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":"                    String[] commandArrSecond2Parts \u003d commandArrFirst2Parts[1].split(\" /\", 2);"},{"lineNumber":62,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":63,"author":{"gitId":"Donavanty"},"content":"                    //                //Check for correct splitting"},{"lineNumber":64,"author":{"gitId":"Donavanty"},"content":"                    //                System.out.println(\"Second2Parts: \" + Arrays.toString(commandArrSecond2Parts));"},{"lineNumber":65,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":66,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":67,"author":{"gitId":"Donavanty"},"content":"                    taskName \u003d commandArrSecond2Parts[0];"},{"lineNumber":68,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":69,"author":{"gitId":"Donavanty"},"content":"                    //If the array is in 2 parts, there is a condition, add that"},{"lineNumber":70,"author":{"gitId":"Donavanty"},"content":"                    if (commandArrSecond2Parts.length \u003e 1) {"},{"lineNumber":71,"author":{"gitId":"Donavanty"},"content":"                        condition \u003d commandArrSecond2Parts[1];"},{"lineNumber":72,"author":{"gitId":"Donavanty"},"content":"                    }"},{"lineNumber":73,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":74,"author":{"gitId":"Donavanty"},"content":"                    addItem(taskName, type, condition);"},{"lineNumber":75,"author":{"gitId":"Donavanty"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"Donavanty"},"content":"        } catch (CustomExceptions.IncompleteDecriptionException e) {"},{"lineNumber":78,"author":{"gitId":"Donavanty"},"content":"            System.out.println(e);"},{"lineNumber":79,"author":{"gitId":"Donavanty"},"content":"        } catch (CustomExceptions.IncorrectDecriptionException e) {"},{"lineNumber":80,"author":{"gitId":"Donavanty"},"content":"            System.out.println(e);"},{"lineNumber":81,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"Donavanty"},"content":"//        } catch (KobeException e) {"},{"lineNumber":83,"author":{"gitId":"Donavanty"},"content":"//            System.out.println(e);"},{"lineNumber":84,"author":{"gitId":"Donavanty"},"content":"//        }"},{"lineNumber":85,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":86,"author":{"gitId":"Donavanty"},"content":"        sc.close();"},{"lineNumber":87,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":89,"author":{"gitId":"Donavanty"},"content":"    public static void addItem(String echoedText, String type, String condition) {"},{"lineNumber":90,"author":{"gitId":"Donavanty"},"content":"        Task currentTask \u003d new Task(echoedText, type, condition);"},{"lineNumber":91,"author":{"gitId":"Donavanty"},"content":"        tasks.add(currentTask);"},{"lineNumber":92,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line + \"Got it! Kobe added this task:\\n\" + ind + ind +"},{"lineNumber":93,"author":{"gitId":"Donavanty"},"content":"                 currentTask);"},{"lineNumber":94,"author":{"gitId":"Donavanty"},"content":"        System.out.println(ind + \"Kobe sees that you have \" + tasks.size() + \" task(s) in the list.\\n\" + line);"},{"lineNumber":95,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":97,"author":{"gitId":"Donavanty"},"content":"    public static void goodbye() {"},{"lineNumber":98,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line + \"Bye. Kobe hopes to see you again soon!\\n\" + line);"},{"lineNumber":99,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":101,"author":{"gitId":"Donavanty"},"content":"    public static void showList() {"},{"lineNumber":102,"author":{"gitId":"Donavanty"},"content":"        System.out.print(line + \"Here are the tasks in your list:\\n\");"},{"lineNumber":103,"author":{"gitId":"Donavanty"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":104,"author":{"gitId":"Donavanty"},"content":"            System.out.print(ind + (i+1) + \". \" + tasks.get(i) + \"\\n\");"},{"lineNumber":105,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line);"},{"lineNumber":107,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":109,"author":{"gitId":"Donavanty"},"content":"    public static void completeTask(int taskNumber) {"},{"lineNumber":110,"author":{"gitId":"Donavanty"},"content":"        tasks.get(taskNumber).markAsDone();"},{"lineNumber":111,"author":{"gitId":"Donavanty"},"content":"        System.out.print(line + \"Nice work! Kobe will mark your task as done!\\n\" + ind);"},{"lineNumber":112,"author":{"gitId":"Donavanty"},"content":"        System.out.println(ind + tasks.get(taskNumber));"},{"lineNumber":113,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line);"},{"lineNumber":114,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":116,"author":{"gitId":"Donavanty"},"content":"    public static void deleteTask(int taskNumber) {"},{"lineNumber":117,"author":{"gitId":"Donavanty"},"content":"        if (tasks.isEmpty()) { //Managing empty lists from the start"},{"lineNumber":118,"author":{"gitId":"Donavanty"},"content":"            System.out.print(line + \"Kobe sees no more tasks from the list!\\n\" + line + \"\\n\");"},{"lineNumber":119,"author":{"gitId":"Donavanty"},"content":"        } else {"},{"lineNumber":120,"author":{"gitId":"Donavanty"},"content":"            System.out.print(line + \"Okay! Kobe will remove your task from the list!\\n\" + ind);"},{"lineNumber":121,"author":{"gitId":"Donavanty"},"content":"            System.out.println(ind + tasks.get(taskNumber));"},{"lineNumber":122,"author":{"gitId":"Donavanty"},"content":"            tasks.remove(taskNumber);"},{"lineNumber":123,"author":{"gitId":"Donavanty"},"content":"            System.out.println(ind + \"Kobe sees that you now have \" + tasks.size() + \" task(s) in the list.\");"},{"lineNumber":124,"author":{"gitId":"Donavanty"},"content":"            if (tasks.isEmpty()) { //If it\u0027s now empty, inform them."},{"lineNumber":125,"author":{"gitId":"Donavanty"},"content":"                System.out.print(ind + \"Your list is now empty!\\n\");"},{"lineNumber":126,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"Donavanty"},"content":"            System.out.println(line);"},{"lineNumber":128,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Donavanty":127,"-":3}},{"path":"src/main/java/KobeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"abstract class KobeException extends RuntimeException {"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"    private String errMsg;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"//    private Throwable cause;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"    public KobeException(String errMsg) {"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"        this.errMsg \u003d errMsg;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"//    public KobeException(String errMsg, Throwable cause) {"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"//        this.errMsg \u003d errMsg;"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"//        this.cause \u003d cause;"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"//    }"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"    //Getter"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"    public String getMessage() {"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"        return errMsg;"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"//    //Getter"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"//    public Throwable getCause() {"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"//        return cause;"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"//    }"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":27}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"class Task {"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"    private boolean done;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"    private String taskName;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"    private String type;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"    private String condition;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"    public Task(String taskName, String type, String condition) {"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"        // Thought of incorporating errors into Task instead, but decided to put it in Kobe."},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"//        System.out.println(\"taskName: \" + taskName);"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"//        if (taskName.equals(\"\")) {"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"//            String errMessage \u003d \"Oh no! Kobe doesn\u0027t want your \" + type + \" to be empty!\";"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"////            System.out.println(\"THROWING ERROR1\");"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"//            throw new CustomExceptions.IncompleteDecriptionException(errMessage);"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"//        }"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"//        if (!(type.equals(\"todo\") || type.equals(\"deadline\") || type.equals(\"event\"))) {"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"//            String errMessage \u003d \"Oh no! Kobe doesn\u0027t know what you mean!\";"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"////            System.out.println(\"THROWING ERROR2\");"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"//            throw new CustomExceptions.IncorrectDecriptionException(errMessage);"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"//        }"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"        this.done \u003d false;"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"        this.type \u003d type;"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"        this.condition \u003d condition;"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"    public void markAsDone() {"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"        this.done \u003d true;"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"    public String toString() {"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"        String doneString \u003d \"[ ]\";"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"        String typeString \u003d \"[ ]\";"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"        String conditionString \u003d \"\";"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"        if (done) {"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"            doneString \u003d \"[X]\";"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"        if (this.type.equals(\"todo\")) {"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"            typeString \u003d \"[T]\";"},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":"        } else if (this.type.equals(\"deadline\")) {"},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"            typeString \u003d \"[D]\";"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"        } else if (this.type.equals(\"event\")) {"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"            typeString \u003d \"[E]\";"},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"        } else {}"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"        if (!this.condition.equals(\"\")) {"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"            if (this.condition.substring(0, 2).equals(\"by\")) {"},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"                conditionString \u003d \"(by: \" + condition.substring(3) + \")\";"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"            } else if (this.condition.substring(0, 2).equals(\"at\")) {"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":"                conditionString \u003d \"(at: \" + condition.substring(3) + \")\";"},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":"        return typeString + doneString + \" \" + taskName + \" \" + conditionString;"},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":61}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"list"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"done 3"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"delete 2"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"delete 1"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"bye"}],"authorContributionMap":{"Donavanty":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"java -classpath ../bin Kobe \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"Donavanty":1,"-":37}}]
