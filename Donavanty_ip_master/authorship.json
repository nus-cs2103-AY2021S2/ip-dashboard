[{"path":"src/main/Commands/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package Commands;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"import java.text.DateFormat;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import java.text.ParseException;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"public class Commands {"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"    public static String ind \u003d \"    \";"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    public static String line \u003d ind + \"____________________________________________________________\\n\" + ind;"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    private void goodbye(Storage storage) {"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"        storage.saveFile();"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line + \"Bye. Kobe saved your list.\\n\" + ind"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"                + \"Kobe hopes to see you again soon!\\n\" + line);"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    private void showList(TaskList tasks, Ui ui) {"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"        System.out.print(line + \"Here are the tasks in your list:\\n\");"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"            System.out.print(ind + (i+1) + \". \" + tasks.get(i).toString() + \"\\n\");"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"        ui.showLine();"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":29}},{"path":"src/main/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"public class Parser {"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"    private void readInput(String text, TaskList tasks, Storage storage, Ui ui) {"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"        String[] commandArr \u003d command.split(\" \");"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"        String text \u003d commandArr[0];"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"        if (text.equals(\"bye\")) {"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"            Commands.goodbye(storage);"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"            break;"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"        } else if (text.equals(\"list\")) {"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"            Commands.showList(tasks, ui);"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"        } else if (text.equals(\"done\")) {"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"            int taskNumber \u003d Integer.parseInt(commandArr[1]) - 1;"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"            tasks.completeTask(taskNumber, ui);"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"        } else if (text.equals(\"delete\")) {"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"            int taskNumber \u003d Integer.parseInt(commandArr[1]) - 1;"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"            tasks.deleteTask(taskNumber, ui);"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"            String taskName \u003d \"\";"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"            String type \u003d text;"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"            String condition \u003d \"\";"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"            String[] commandArrFirst2Parts \u003d command.split(\" \", 2);"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"////        Check for correct splitting"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"//          System.out.println(\"First2Parts: \" + Arrays.toString(commandArrFirst2Parts));"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"            String firstWord \u003d commandArrFirst2Parts[0];"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"            if (commandArrFirst2Parts.length \u003d\u003d 1) {"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"                if (firstWord.equals(\"todo\") || firstWord.equals(\"deadline\") || firstWord.equals(\"event\")) {"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"                    String errMessage \u003d \"Oh no! Kobe doesn\u0027t want your \" + firstWord + \" to be empty!\";"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"                    throw new CustomExceptions.IncompleteDecriptionException(errMessage);"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"                } else {"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"                    String errMessage \u003d \"Oh no! Kobe doesn\u0027t know what you mean!\";"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"                    throw new CustomExceptions.IncorrectDecriptionException(errMessage);"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"                }"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"            String[] commandArrSecond2Parts \u003d commandArrFirst2Parts[1].split(\" /\", 2);"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":"            //                //Check for correct splitting"},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"            //                System.out.println(\"Second2Parts: \" + Arrays.toString(commandArrSecond2Parts));"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"            taskName \u003d commandArrSecond2Parts[0];"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"            //If the array is in 2 parts, there is a condition, add that"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"            if (commandArrSecond2Parts.length \u003e 1) {"},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"                condition \u003d commandArrSecond2Parts[1].substring(3);"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"                //no \"/by\""},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":"            tasks.addItem(taskName, type, condition);"},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":60}},{"path":"src/main/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package Storage;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import java.nio.file.Paths;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"import java.io.BufferedReader;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import java.io.FileReader;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import java.io.BufferedWriter;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"import java.io.FileReader;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"public class Storage {"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    private Path path;"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    Storage(Path path, TaskList tasks) {"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"        this.path \u003d path;"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"        //Read line by line of the storage file"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"        try (BufferedReader br \u003d new BufferedReader("},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"                new FileReader(path, StandardCharsets.US_ASCII))) {"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"            boolean isFileEmpty \u003d true;"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"            String readLine \u003d br.readLine();"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"            while (readLine !\u003d null) {"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"                isFileEmpty \u003d false;"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"                System.out.println(readLine);"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"                tasks.addItemByString(readLine) //PARSER //Actaully add the task //Parser"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"                readLine \u003d br.readLine();"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"            if (!isFileEmpty) {"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"                System.out.println(line + \"Here are tasks that Kobe has retrieved!\\n\" + line);"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"            } else {"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"                Ui.showLoadingError();"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"            //do nothing"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"        } finally {"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"            this.tasks \u003d tasks;"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"    //UPDATE THE KOBE.TXT FILE"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"    private void saveFile() {"},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"//        java.nio.file.Path path \u003d java.nio.file.Paths.get(\"home/ip/src/main/data/kobe.txt\");"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":"//        java.nio.file.Path path \u003d java.nio.file.Paths.get(home + \"/ip/src/main/data\");"},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"//        boolean directoryExists \u003d java.nio.file.Files.exists(path);"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"//        System.out.println(\"Directory Home: \" + home);"},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"//        System.out.println(\"Directory: \" + path.toString());"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"//        System.out.println(\"Directory exists?: \" + directoryExists);"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(this.path,"},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"                StandardCharsets.US_ASCII))) {"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"            for(int i \u003d 0; i \u003c this.tasks.size(); i++) {"},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"                bw.write(ind + (i+1) + \". \" + this.tasks.get(i) + \"\\n\");"},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":"        } catch (IOException e) {"},{"lineNumber":62,"author":{"gitId":"Donavanty"},"content":"            System.out.println(\"IOException: \" + e);"},{"lineNumber":63,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":66,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":66}},{"path":"src/main/TaskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package TaskList;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.util.*;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import java.nio.file.Path;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"import java.text.DateFormat;"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"import java.text.ParseException;"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"public class TaskList {"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"    TaskList() {"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"        this.tasks \u003d new ArrayList\u003cTasks\u003e();"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    private Task get(int taskNumber) {"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"        this.tasks.get(taskNumber);"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"    private void add(Task task) {"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"        this.tasks.add(task);"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"    private void addItem(String echoedText, String type, String condition) {"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"        //Recognise if condition is time"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"        DateFormat df1 \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"        df1.setLenient(false);"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"        Task currentTask;"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"            df1.parse(condition);"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"            LocalDate d1 \u003d LocalDate.parse(condition);"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"            currentTask \u003d new Task(false, echoedText, type, d1);"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"            TaskList.add(currentTask);"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"            System.out.print(line + \"Got it! Kobe marked down this date!\\n\");"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"            System.out.println(ind + \"Kobe added this task:\\n\" + ind + ind +"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"                    currentTask);"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"        } catch (ParseException | NullPointerException e) { //not in the format"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"//            tasks.add(new Task(echoedText, type, condition));"},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":"            currentTask \u003d new Task(echoedText, type, condition);"},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"            TaskList.add(currentTask);"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"            System.out.println(line + \"Got it! Kobe added this task:\\n\" + ind + ind +"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"                    currentTask);"},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":"        System.out.println(ind + \"Kobe sees that you have \" + this.tasks.size() + \" task(s) in the list.\\n\" + line);"},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"    //Can put in Parser"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"    private void addItemByString(String text) {"},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"        String[] intoParts1 \u003d text.split(\"\\\\[\", 2);"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":"        String type \u003d intoParts1[1].substring(0, 1);"},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"//        System.out.println(Arrays.toString(intoParts1));"},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"//        System.out.println(\"Type: \" + type);"},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":"        String[] intoParts2 \u003d intoParts1[1].split(\"\\\\[\", 2);"},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":"        String isItDone \u003d intoParts2[1].substring(0, 1);"},{"lineNumber":62,"author":{"gitId":"Donavanty"},"content":"//        System.out.println(Arrays.toString(intoParts2));"},{"lineNumber":63,"author":{"gitId":"Donavanty"},"content":"//        System.out.println(\"Done: \" + isItDone);"},{"lineNumber":64,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":65,"author":{"gitId":"Donavanty"},"content":"        String[] intoParts3 \u003d intoParts2[1].split(\"\\\\]\", 2);"},{"lineNumber":66,"author":{"gitId":"Donavanty"},"content":"        String taskName \u003d intoParts3[1].substring(1);"},{"lineNumber":67,"author":{"gitId":"Donavanty"},"content":"//        System.out.println(\"intoParts3: \" + Arrays.toString(intoParts3));"},{"lineNumber":68,"author":{"gitId":"Donavanty"},"content":"//        System.out.println(\"Task: \" + currentTask);"},{"lineNumber":69,"author":{"gitId":"Donavanty"},"content":"//        System.out.println(\"length: \" + intoParts3[1].split(\":\", 2).length);"},{"lineNumber":70,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":71,"author":{"gitId":"Donavanty"},"content":"        String condition \u003d \"\";"},{"lineNumber":72,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":73,"author":{"gitId":"Donavanty"},"content":"        if (intoParts3[1].split(\":\", 2).length !\u003d 1) { //There is a condition, cos it can be split even more"},{"lineNumber":74,"author":{"gitId":"Donavanty"},"content":"            //Task without the condition"},{"lineNumber":75,"author":{"gitId":"Donavanty"},"content":"            intoParts3 \u003d intoParts3[1].substring(1).split(\"\\\\(\", 2);"},{"lineNumber":76,"author":{"gitId":"Donavanty"},"content":"            String taskNameStr \u003d intoParts3[0].substring(0);"},{"lineNumber":77,"author":{"gitId":"Donavanty"},"content":"            taskName \u003d taskNameStr.substring(0, taskNameStr.length() - 1); //to fix extra space formed at the end"},{"lineNumber":78,"author":{"gitId":"Donavanty"},"content":"//            System.out.println(\"NewTask: \" + taskName);"},{"lineNumber":79,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":80,"author":{"gitId":"Donavanty"},"content":"            //Getting the condition"},{"lineNumber":81,"author":{"gitId":"Donavanty"},"content":"            String[] intoParts4 \u003d intoParts3[1].split(\": \", 2);"},{"lineNumber":82,"author":{"gitId":"Donavanty"},"content":"//            System.out.println(\"intoParts4: \" + Arrays.toString(intoParts4));"},{"lineNumber":83,"author":{"gitId":"Donavanty"},"content":"            String[] intoParts5 \u003d intoParts4[1].split(\"\\\\)\", 2);"},{"lineNumber":84,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":85,"author":{"gitId":"Donavanty"},"content":"            condition \u003d intoParts5[0].substring(0);"},{"lineNumber":86,"author":{"gitId":"Donavanty"},"content":"//            System.out.println(Arrays.toString(intoParts5));"},{"lineNumber":87,"author":{"gitId":"Donavanty"},"content":"//            System.out.println(\"Condition: \" + condition);"},{"lineNumber":88,"author":{"gitId":"Donavanty"},"content":"        } else {"},{"lineNumber":89,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":91,"author":{"gitId":"Donavanty"},"content":"        if (type.equals(\"T\")) {"},{"lineNumber":92,"author":{"gitId":"Donavanty"},"content":"            type \u003d \"todo\";"},{"lineNumber":93,"author":{"gitId":"Donavanty"},"content":"        } else if (type.equals(\"D\")) {"},{"lineNumber":94,"author":{"gitId":"Donavanty"},"content":"            type \u003d \"deadline\";"},{"lineNumber":95,"author":{"gitId":"Donavanty"},"content":"        } else if (type.equals(\"E\")) {"},{"lineNumber":96,"author":{"gitId":"Donavanty"},"content":"            type \u003d \"event\";"},{"lineNumber":97,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":99,"author":{"gitId":"Donavanty"},"content":"        boolean isItDoneBoolean \u003d false;"},{"lineNumber":100,"author":{"gitId":"Donavanty"},"content":"        if (isItDone.equals(\"X\")) {"},{"lineNumber":101,"author":{"gitId":"Donavanty"},"content":"            isItDoneBoolean \u003d true;"},{"lineNumber":102,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":104,"author":{"gitId":"Donavanty"},"content":"        //Recognise time"},{"lineNumber":105,"author":{"gitId":"Donavanty"},"content":"        DateFormat df1 \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"},{"lineNumber":106,"author":{"gitId":"Donavanty"},"content":"        df1.setLenient(false);"},{"lineNumber":107,"author":{"gitId":"Donavanty"},"content":"        try {"},{"lineNumber":108,"author":{"gitId":"Donavanty"},"content":"            df1.parse(condition);"},{"lineNumber":109,"author":{"gitId":"Donavanty"},"content":"            LocalDate d1 \u003d LocalDate.parse(condition);"},{"lineNumber":110,"author":{"gitId":"Donavanty"},"content":"            TaskList.add(new Task(isItDoneBoolean, taskName, type, d1));"},{"lineNumber":111,"author":{"gitId":"Donavanty"},"content":"//            System.out.print(ind + \"Kobe marked down this date!\\n\");"},{"lineNumber":112,"author":{"gitId":"Donavanty"},"content":"        } catch (ParseException | NullPointerException e) { //not in the format"},{"lineNumber":113,"author":{"gitId":"Donavanty"},"content":"            TaskList.add(new Task(isItDoneBoolean, taskName, type, condition));"},{"lineNumber":114,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":117,"author":{"gitId":"Donavanty"},"content":"    private void completeTask(int taskNumber, Ui ui) {"},{"lineNumber":118,"author":{"gitId":"Donavanty"},"content":"        TaskList.get(taskNumber).markAsDone();"},{"lineNumber":119,"author":{"gitId":"Donavanty"},"content":"        System.out.print(line + \"Nice work! Kobe will mark your task as done!\\n\" + ind);"},{"lineNumber":120,"author":{"gitId":"Donavanty"},"content":"        System.out.println(ind + tasks.get(taskNumber));"},{"lineNumber":121,"author":{"gitId":"Donavanty"},"content":"        ui.showLine();"},{"lineNumber":122,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":124,"author":{"gitId":"Donavanty"},"content":"    private void deleteTask(int taskNumber, Ui ui) {"},{"lineNumber":125,"author":{"gitId":"Donavanty"},"content":"        if (this.tasks.isEmpty()) { //Managing empty lists from the start"},{"lineNumber":126,"author":{"gitId":"Donavanty"},"content":"            System.out.print(ui.line() + \"Kobe sees no more tasks from the list!\\n\" + line + \"\\n\");"},{"lineNumber":127,"author":{"gitId":"Donavanty"},"content":"        } else {"},{"lineNumber":128,"author":{"gitId":"Donavanty"},"content":"            System.out.print(line + \"Okay! Kobe will remove your task from the list!\\n\" + ind);"},{"lineNumber":129,"author":{"gitId":"Donavanty"},"content":"            System.out.println(ind + tasks.get(taskNumber));"},{"lineNumber":130,"author":{"gitId":"Donavanty"},"content":"            this.tasks.remove(taskNumber);"},{"lineNumber":131,"author":{"gitId":"Donavanty"},"content":"            System.out.println(ind + \"Kobe sees that you now have \" + tasks.size() + \" task(s) in the list.\");"},{"lineNumber":132,"author":{"gitId":"Donavanty"},"content":"            if (tasks.isEmpty()) { //If it\u0027s now empty, inform them."},{"lineNumber":133,"author":{"gitId":"Donavanty"},"content":"                System.out.print(ind + \"Your list is now empty!\\n\");"},{"lineNumber":134,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"Donavanty"},"content":"            ui.showLine();"},{"lineNumber":136,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":139,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":139}},{"path":"src/main/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"package Ui;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"    public static String ind \u003d \"    \";"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"    public static String line \u003d ind + \"____________________________________________________________\\n\" + ind;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"    public static String line2 \u003d ind + \"____________________________________________________________\\n\";"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"    Ui() {"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line + \"Hello! I\u0027m Kobe\\n\" + ind + \"What can I do for you?\\n\" + line);"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"//    String readCommand() {"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"//        //receive from scanner?"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"//    }"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"    void showLine() {"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line);"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    String line() {"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"        return line;"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"    void showLoadingError() {"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"        //\"No prior saved data!\""},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"        System.out.println(line + \"Kobe detected no prior saved data!\\n\" + line);"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":30}},{"path":"src/main/data/kobe.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"    1. [T][X] abc                       "},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":"    2. [D][X] def                       "},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"    3. [E][ ] ghi                       "},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"    4. [D][X] this (by: 22-04-1998)"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"    5. [D][X] thou (by: Apr 21 1998)"}],"authorContributionMap":{"Donavanty":5}},{"path":"src/main/java/CustomExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"class CustomExceptions {"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"    //for incomplete commands"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"    public static class IncompleteDecriptionException extends KobeException {"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"//        public IncompleteDecriptionException(String errMsg, Throwable cause) {"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"        public IncompleteDecriptionException(String errMsg) {"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"            super(errMsg);"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"//            super(errMsg, cause);"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    //for gibberish commands"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"    public static class IncorrectDecriptionException extends KobeException {"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"//        public IncorrectDecriptionException(String errMsg, Throwable cause) {"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"        public IncorrectDecriptionException(String errMsg) {"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"            super(errMsg);"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"//            super(errMsg, cause);"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":23}},{"path":"src/main/java/Kobe.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"//import java.util.*;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":"//import java.io.BufferedReader;"},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"//import java.io.BufferedWriter;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"//import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"//import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"//import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"//import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"//import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"//import java.text.DateFormat;"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"//import java.text.SimpleDateFormat;"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"//import java.text.ParseException;"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"////import time.temporal.ChronoUnit;"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"//import java.nio.file.Path;"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"//import java.nio.file.Paths;"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"//import java.nio.charset.StandardCharsets;"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"//public class Kobe {"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"//    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"//    public static void main(String[] args) {"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"//        //Retrieve data"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":"//         //relative path"},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"//        boolean directoryExists \u003d java.nio.file.Files.exists(path); //not necessary, try-catch works"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"//}"}],"authorContributionMap":{"Donavanty":39}},{"path":"src/main/java/KobeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"abstract class KobeException extends RuntimeException {"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"    private String errMsg;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"//    private Throwable cause;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"    public KobeException(String errMsg) {"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"        this.errMsg \u003d errMsg;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"//    public KobeException(String errMsg, Throwable cause) {"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"//        this.errMsg \u003d errMsg;"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"//        this.cause \u003d cause;"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"//    }"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"    //Getter"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"    public String getMessage() {"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"        return errMsg;"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"//    //Getter"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"//    public Throwable getCause() {"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"//        return cause;"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"//    }"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":27}},{"path":"src/main/java/KobeN.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"import java.nio.file.Path;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":"import java.nio.file.Paths;"},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"import parser.Parser;"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"import TaskList.TaskList;"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"import Ui.Ui;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"import Storage.storage;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"import Commands.Commands;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"public class KobeN {"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"    private Storage storage;"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":"    private TaskList tasks; //ArrayList\u003cTasks\u003e tasks"},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    private Ui ui;"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"    private static final String HOME \u003d System.getProperty(\"user.home\");"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"    public KobeN(String filePath) {"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"        ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":"        storage \u003d new Storage(filePath, tasks);"},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"    public static void main(String[] args) {"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"        Path path \u003d Paths.get(HOME + \"/ip/src/main/data/kobe.txt\");"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"        new KobeN(path).run();"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"    public void run() {"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"        //Scanner things"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"            while (sc.hasNext()) {"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"                //Read the whole line, dissect each command word, including the condition after \"/\""},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":"                String command \u003d sc.nextLine();"},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":"                //---Parser---"},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"                Parser.readInput(command, tasks, storage, ui);"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"        } catch (CustomExceptions.IncompleteDecriptionException e) {"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":"            System.out.println(e);"},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":"        } catch (CustomExceptions.IncorrectDecriptionException e) {"},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"            System.out.println(e);"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"        sc.close();"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":53}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"class Task {"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"    private boolean done;"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"    private String taskName;"},{"lineNumber":9,"author":{"gitId":"Donavanty"},"content":"    private String type;"},{"lineNumber":10,"author":{"gitId":"Donavanty"},"content":"    private String condition;"},{"lineNumber":11,"author":{"gitId":"Donavanty"},"content":"    private LocalDate date;"},{"lineNumber":12,"author":{"gitId":"Donavanty"},"content":"    private boolean isConditionLocalDate;"},{"lineNumber":13,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":14,"author":{"gitId":"Donavanty"},"content":"    public Task(String taskName, String type, String condition) {"},{"lineNumber":15,"author":{"gitId":"Donavanty"},"content":"        this.done \u003d false;"},{"lineNumber":16,"author":{"gitId":"Donavanty"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":17,"author":{"gitId":"Donavanty"},"content":"        this.type \u003d type;"},{"lineNumber":18,"author":{"gitId":"Donavanty"},"content":"        this.condition \u003d condition;"},{"lineNumber":19,"author":{"gitId":"Donavanty"},"content":"        this.isConditionLocalDate \u003d false;"},{"lineNumber":20,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":22,"author":{"gitId":"Donavanty"},"content":"    public Task(boolean done, String taskName, String type, String condition) {"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"        this.done \u003d done;"},{"lineNumber":24,"author":{"gitId":"Donavanty"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":25,"author":{"gitId":"Donavanty"},"content":"        this.type \u003d type;"},{"lineNumber":26,"author":{"gitId":"Donavanty"},"content":"        this.condition \u003d condition;"},{"lineNumber":27,"author":{"gitId":"Donavanty"},"content":"        this.isConditionLocalDate \u003d false;"},{"lineNumber":28,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":30,"author":{"gitId":"Donavanty"},"content":"    public Task(boolean done, String taskName, String type, LocalDate date) {"},{"lineNumber":31,"author":{"gitId":"Donavanty"},"content":"        this.done \u003d done;"},{"lineNumber":32,"author":{"gitId":"Donavanty"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":33,"author":{"gitId":"Donavanty"},"content":"        this.type \u003d type;"},{"lineNumber":34,"author":{"gitId":"Donavanty"},"content":"        this.condition \u003d \"\";"},{"lineNumber":35,"author":{"gitId":"Donavanty"},"content":"        this.date \u003d date;"},{"lineNumber":36,"author":{"gitId":"Donavanty"},"content":"        this.isConditionLocalDate \u003d true;"},{"lineNumber":37,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":38,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":40,"author":{"gitId":"Donavanty"},"content":"    public void markAsDone() {"},{"lineNumber":41,"author":{"gitId":"Donavanty"},"content":"        this.done \u003d true;"},{"lineNumber":42,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":44,"author":{"gitId":"Donavanty"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"Donavanty"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"Donavanty"},"content":"        String doneString \u003d \"[ ]\";"},{"lineNumber":47,"author":{"gitId":"Donavanty"},"content":"        String typeString \u003d \"[ ]\";"},{"lineNumber":48,"author":{"gitId":"Donavanty"},"content":"        String conditionString \u003d \"\";"},{"lineNumber":49,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":50,"author":{"gitId":"Donavanty"},"content":"        if (done) {"},{"lineNumber":51,"author":{"gitId":"Donavanty"},"content":"            doneString \u003d \"[X]\";"},{"lineNumber":52,"author":{"gitId":"Donavanty"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":54,"author":{"gitId":"Donavanty"},"content":"        if (this.type.equals(\"todo\")) {"},{"lineNumber":55,"author":{"gitId":"Donavanty"},"content":"            typeString \u003d \"[T]\";"},{"lineNumber":56,"author":{"gitId":"Donavanty"},"content":"        } else if (this.type.equals(\"deadline\")) {"},{"lineNumber":57,"author":{"gitId":"Donavanty"},"content":"            typeString \u003d \"[D]\";"},{"lineNumber":58,"author":{"gitId":"Donavanty"},"content":"            if (!this.condition.equals(\"\")) {"},{"lineNumber":59,"author":{"gitId":"Donavanty"},"content":"                conditionString \u003d \"(by: \" + condition.substring(0) + \")\";"},{"lineNumber":60,"author":{"gitId":"Donavanty"},"content":"            } else if (isConditionLocalDate) { //convert LocalDate to parsed date"},{"lineNumber":61,"author":{"gitId":"Donavanty"},"content":"                conditionString \u003d \"(by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":62,"author":{"gitId":"Donavanty"},"content":"            } else {}"},{"lineNumber":63,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":64,"author":{"gitId":"Donavanty"},"content":"        } else if (this.type.equals(\"event\")) {"},{"lineNumber":65,"author":{"gitId":"Donavanty"},"content":"            typeString \u003d \"[E]\";"},{"lineNumber":66,"author":{"gitId":"Donavanty"},"content":"            if (!this.condition.equals(\"\")) {"},{"lineNumber":67,"author":{"gitId":"Donavanty"},"content":"                conditionString \u003d \"(at: \" + condition.substring(0) + \")\";"},{"lineNumber":68,"author":{"gitId":"Donavanty"},"content":"            } else if (isConditionLocalDate) { //convert LocalDate to parsed date"},{"lineNumber":69,"author":{"gitId":"Donavanty"},"content":"            conditionString \u003d \"(at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":70,"author":{"gitId":"Donavanty"},"content":"            } else {}"},{"lineNumber":71,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":72,"author":{"gitId":"Donavanty"},"content":"        } else {}"},{"lineNumber":73,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":74,"author":{"gitId":"Donavanty"},"content":"        //handles when condition is passed in as just date/time, or with the by/at in front."},{"lineNumber":75,"author":{"gitId":"Donavanty"},"content":"//        if (!this.condition.equals(\"\")) {"},{"lineNumber":76,"author":{"gitId":"Donavanty"},"content":"//            if (this.condition.substring(0, 2).equals(\"by\")) {"},{"lineNumber":77,"author":{"gitId":"Donavanty"},"content":"//                conditionString \u003d \"(by: \" + condition.substring(3) + \")\";"},{"lineNumber":78,"author":{"gitId":"Donavanty"},"content":"//            } else if (this.condition.substring(0, 2).equals(\"at\")) {"},{"lineNumber":79,"author":{"gitId":"Donavanty"},"content":"//                conditionString \u003d \"(at: \" + condition.substring(3) + \")\";"},{"lineNumber":80,"author":{"gitId":"Donavanty"},"content":"//            } else  {"},{"lineNumber":81,"author":{"gitId":"Donavanty"},"content":"//"},{"lineNumber":82,"author":{"gitId":"Donavanty"},"content":"//            }"},{"lineNumber":83,"author":{"gitId":"Donavanty"},"content":"//        }"},{"lineNumber":84,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":85,"author":{"gitId":"Donavanty"},"content":""},{"lineNumber":86,"author":{"gitId":"Donavanty"},"content":"        return typeString + doneString + \" \" + taskName + \" \" + conditionString;"},{"lineNumber":87,"author":{"gitId":"Donavanty"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"Donavanty"},"content":"}"}],"authorContributionMap":{"Donavanty":88}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Donavanty"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Donavanty"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"Donavanty"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"Donavanty"},"content":"list"},{"lineNumber":5,"author":{"gitId":"Donavanty"},"content":"done 3"},{"lineNumber":6,"author":{"gitId":"Donavanty"},"content":"delete 2"},{"lineNumber":7,"author":{"gitId":"Donavanty"},"content":"delete 1"},{"lineNumber":8,"author":{"gitId":"Donavanty"},"content":"bye"}],"authorContributionMap":{"Donavanty":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"Donavanty"},"content":"java -classpath ../bin Kobe \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"Donavanty":1,"-":37}}]
