[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ninijiaying"},"content":"T | 1 | read book"},{"lineNumber":2,"author":{"gitId":"ninijiaying"},"content":"E | 0 | project meeting | 2017-11-11"},{"lineNumber":3,"author":{"gitId":"ninijiaying"},"content":"T | 1 | join sports club"},{"lineNumber":4,"author":{"gitId":"ninijiaying"},"content":"E | 0 | eveneA | 2020-02-02"},{"lineNumber":5,"author":{"gitId":"ninijiaying"},"content":"D | 0 | dd1 | 2020-02-09"}],"authorContributionMap":{"ninijiaying":5}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ninijiaying"},"content":"import java.io.*;"},{"lineNumber":2,"author":{"gitId":"ninijiaying"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"ninijiaying"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"ninijiaying"},"content":"public class Command {"},{"lineNumber":6,"author":{"gitId":"ninijiaying"},"content":"    public String command;"},{"lineNumber":7,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":8,"author":{"gitId":"ninijiaying"},"content":"    public Command(String command) {"},{"lineNumber":9,"author":{"gitId":"ninijiaying"},"content":"        this.command \u003d command;"},{"lineNumber":10,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":12,"author":{"gitId":"ninijiaying"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"},{"lineNumber":13,"author":{"gitId":"ninijiaying"},"content":"        ArrayList\u003cTask\u003e tList \u003d tasks.tasks;"},{"lineNumber":14,"author":{"gitId":"ninijiaying"},"content":"        if(command.equals(\"list\")) {"},{"lineNumber":15,"author":{"gitId":"ninijiaying"},"content":"            System.out.println(\"     Here are the tasks in your list:\");"},{"lineNumber":16,"author":{"gitId":"ninijiaying"},"content":"            int i \u003d 1;"},{"lineNumber":17,"author":{"gitId":"ninijiaying"},"content":"            for(Task s : tList) {"},{"lineNumber":18,"author":{"gitId":"ninijiaying"},"content":"                if(s !\u003d null) {"},{"lineNumber":19,"author":{"gitId":"ninijiaying"},"content":"                    System.out.println(\"     \" + i + \".\" + s.toString());"},{"lineNumber":20,"author":{"gitId":"ninijiaying"},"content":"                    i++;"},{"lineNumber":21,"author":{"gitId":"ninijiaying"},"content":"                } else {"},{"lineNumber":22,"author":{"gitId":"ninijiaying"},"content":"                    break;"},{"lineNumber":23,"author":{"gitId":"ninijiaying"},"content":"                }"},{"lineNumber":24,"author":{"gitId":"ninijiaying"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"ninijiaying"},"content":"        } else if(command.split(\" \")[0].equals(\"done\")) {"},{"lineNumber":26,"author":{"gitId":"ninijiaying"},"content":"            int n \u003d Integer.parseInt(command.split(\" \")[1]);"},{"lineNumber":27,"author":{"gitId":"ninijiaying"},"content":"            tList.get(n-1).markAsDone();"},{"lineNumber":28,"author":{"gitId":"ninijiaying"},"content":"            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":29,"author":{"gitId":"ninijiaying"},"content":"            System.out.println(\"       \" + tList.get(n-1).toString());"},{"lineNumber":30,"author":{"gitId":"ninijiaying"},"content":"            Task t \u003d tList.get(n-1);"},{"lineNumber":31,"author":{"gitId":"ninijiaying"},"content":"            tasks.tasks \u003d tList;"},{"lineNumber":32,"author":{"gitId":"ninijiaying"},"content":"            String old \u003d null;"},{"lineNumber":33,"author":{"gitId":"ninijiaying"},"content":"            if(t instanceof ToDo) {"},{"lineNumber":34,"author":{"gitId":"ninijiaying"},"content":"                old \u003d \"T | 0 | \" + t.name;"},{"lineNumber":35,"author":{"gitId":"ninijiaying"},"content":"            } else if(t instanceof Deadline) {"},{"lineNumber":36,"author":{"gitId":"ninijiaying"},"content":"                old \u003d \"D | 0 | \" + t.name;"},{"lineNumber":37,"author":{"gitId":"ninijiaying"},"content":"            } else if(t instanceof Event) {"},{"lineNumber":38,"author":{"gitId":"ninijiaying"},"content":"                old \u003d \"E | 0 | \" + t.name;"},{"lineNumber":39,"author":{"gitId":"ninijiaying"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"ninijiaying"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(\"data/duke.txt\"));"},{"lineNumber":41,"author":{"gitId":"ninijiaying"},"content":"            String oldContent \u003d \"\";"},{"lineNumber":42,"author":{"gitId":"ninijiaying"},"content":"            String line \u003d reader.readLine();"},{"lineNumber":43,"author":{"gitId":"ninijiaying"},"content":"            while (line !\u003d null) {"},{"lineNumber":44,"author":{"gitId":"ninijiaying"},"content":"                oldContent \u003d oldContent + line + System.lineSeparator();"},{"lineNumber":45,"author":{"gitId":"ninijiaying"},"content":"                line \u003d reader.readLine();"},{"lineNumber":46,"author":{"gitId":"ninijiaying"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"ninijiaying"},"content":"            String newContent \u003d null;"},{"lineNumber":48,"author":{"gitId":"ninijiaying"},"content":"            if(t instanceof ToDo) {"},{"lineNumber":49,"author":{"gitId":"ninijiaying"},"content":"                newContent \u003d oldContent.replace(old, \"T | 1 | \" + t.name);"},{"lineNumber":50,"author":{"gitId":"ninijiaying"},"content":"            } else if(t instanceof Deadline) {"},{"lineNumber":51,"author":{"gitId":"ninijiaying"},"content":"                newContent \u003d oldContent.replace(old, \"D | 1 | \" + t.name);"},{"lineNumber":52,"author":{"gitId":"ninijiaying"},"content":"            } else if(t instanceof Event) {"},{"lineNumber":53,"author":{"gitId":"ninijiaying"},"content":"                newContent \u003d oldContent.replace(old, \"E | 1 | \" + t.name);"},{"lineNumber":54,"author":{"gitId":"ninijiaying"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"ninijiaying"},"content":"            FileWriter writer \u003d new FileWriter(\"data/duke.txt\");"},{"lineNumber":56,"author":{"gitId":"ninijiaying"},"content":"            writer.write(newContent);"},{"lineNumber":57,"author":{"gitId":"ninijiaying"},"content":"            reader.close();"},{"lineNumber":58,"author":{"gitId":"ninijiaying"},"content":"            writer.close();"},{"lineNumber":59,"author":{"gitId":"ninijiaying"},"content":"        } else if(command.split(\" \")[0].equals(\"delete\")) {"},{"lineNumber":60,"author":{"gitId":"ninijiaying"},"content":"            int n \u003d Integer.parseInt(command.split(\" \")[1]);"},{"lineNumber":61,"author":{"gitId":"ninijiaying"},"content":"            System.out.println(\"     Noted. I\u0027ve removed this task:\");"},{"lineNumber":62,"author":{"gitId":"ninijiaying"},"content":"            System.out.println(\"       \" + tList.get(n-1).toString());"},{"lineNumber":63,"author":{"gitId":"ninijiaying"},"content":"            System.out.println(\"     Now you have \" + (tList.size()-1) + \" tasks in the list.\");"},{"lineNumber":64,"author":{"gitId":"ninijiaying"},"content":"            tList.remove(n-1);"},{"lineNumber":65,"author":{"gitId":"ninijiaying"},"content":"            tasks.tasks \u003d tList;"},{"lineNumber":66,"author":{"gitId":"ninijiaying"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(\"data/duke.txt\"));"},{"lineNumber":67,"author":{"gitId":"ninijiaying"},"content":"            String oldContent \u003d \"\";"},{"lineNumber":68,"author":{"gitId":"ninijiaying"},"content":"            String line \u003d reader.readLine();"},{"lineNumber":69,"author":{"gitId":"ninijiaying"},"content":"            int counter \u003d 0;"},{"lineNumber":70,"author":{"gitId":"ninijiaying"},"content":"            while (line !\u003d null) {"},{"lineNumber":71,"author":{"gitId":"ninijiaying"},"content":"                if(counter !\u003d n-1) {"},{"lineNumber":72,"author":{"gitId":"ninijiaying"},"content":"                    oldContent \u003d oldContent + line + System.lineSeparator();"},{"lineNumber":73,"author":{"gitId":"ninijiaying"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"ninijiaying"},"content":"                counter++;"},{"lineNumber":75,"author":{"gitId":"ninijiaying"},"content":"                line \u003d reader.readLine();"},{"lineNumber":76,"author":{"gitId":"ninijiaying"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"ninijiaying"},"content":"            FileWriter writer \u003d new FileWriter(\"data/duke.txt\");"},{"lineNumber":78,"author":{"gitId":"ninijiaying"},"content":"            writer.write(oldContent);"},{"lineNumber":79,"author":{"gitId":"ninijiaying"},"content":"            reader.close();"},{"lineNumber":80,"author":{"gitId":"ninijiaying"},"content":"            writer.close();"},{"lineNumber":81,"author":{"gitId":"ninijiaying"},"content":"        }else if(command.split(\" \")[0].equals(\"todo\")) {"},{"lineNumber":82,"author":{"gitId":"ninijiaying"},"content":"            int iend \u003d command.indexOf(\" \");"},{"lineNumber":83,"author":{"gitId":"ninijiaying"},"content":"            String n \u003d command.substring(iend+1);"},{"lineNumber":84,"author":{"gitId":"ninijiaying"},"content":"            tList.add(new ToDo(n));"},{"lineNumber":85,"author":{"gitId":"ninijiaying"},"content":"            try{"},{"lineNumber":86,"author":{"gitId":"ninijiaying"},"content":"                tList.get(tList.size()-1).addTask(tList.size());"},{"lineNumber":87,"author":{"gitId":"ninijiaying"},"content":"                BufferedWriter writer \u003d new BufferedWriter("},{"lineNumber":88,"author":{"gitId":"ninijiaying"},"content":"                        new FileWriter(\"data/duke.txt\", true));"},{"lineNumber":89,"author":{"gitId":"ninijiaying"},"content":"                writer.write(\"T | 0 | \" + n + \"\\n\");"},{"lineNumber":90,"author":{"gitId":"ninijiaying"},"content":"                writer.close();"},{"lineNumber":91,"author":{"gitId":"ninijiaying"},"content":"                tasks.tasks \u003d tList;"},{"lineNumber":92,"author":{"gitId":"ninijiaying"},"content":"            } catch(DukeException e){"},{"lineNumber":93,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":94,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":95,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":96,"author":{"gitId":"ninijiaying"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"ninijiaying"},"content":"        } else if(command.split(\" \")[0].equals(\"deadline\")) {"},{"lineNumber":98,"author":{"gitId":"ninijiaying"},"content":"            try{"},{"lineNumber":99,"author":{"gitId":"ninijiaying"},"content":"                int iend1 \u003d command.indexOf(\" \");"},{"lineNumber":100,"author":{"gitId":"ninijiaying"},"content":"                int iend \u003d command.indexOf(\"/\");"},{"lineNumber":101,"author":{"gitId":"ninijiaying"},"content":"                String subString1\u003d command.substring(iend1+1 , iend-1);"},{"lineNumber":102,"author":{"gitId":"ninijiaying"},"content":"                String subString2\u003d command.substring(iend+4);"},{"lineNumber":103,"author":{"gitId":"ninijiaying"},"content":"                int year \u003d Integer.valueOf(subString2.substring(0, 4));"},{"lineNumber":104,"author":{"gitId":"ninijiaying"},"content":"                int mon \u003d Integer.valueOf(subString2.substring(5, 7));"},{"lineNumber":105,"author":{"gitId":"ninijiaying"},"content":"                int day \u003d Integer.valueOf(subString2.substring(8));"},{"lineNumber":106,"author":{"gitId":"ninijiaying"},"content":"                tList.add(new Deadline(subString1, LocalDate.of(year, mon, day)));"},{"lineNumber":107,"author":{"gitId":"ninijiaying"},"content":"                tList.get(tList.size()-1).addTask(tList.size());"},{"lineNumber":108,"author":{"gitId":"ninijiaying"},"content":"                BufferedWriter writer \u003d new BufferedWriter("},{"lineNumber":109,"author":{"gitId":"ninijiaying"},"content":"                        new FileWriter(\"data/duke.txt\", true));"},{"lineNumber":110,"author":{"gitId":"ninijiaying"},"content":"                writer.write(\"D | 0 | \" + subString1 + \" | \" + subString2 + \"\\n\");"},{"lineNumber":111,"author":{"gitId":"ninijiaying"},"content":"                writer.close();"},{"lineNumber":112,"author":{"gitId":"ninijiaying"},"content":"                tasks.tasks \u003d tList;"},{"lineNumber":113,"author":{"gitId":"ninijiaying"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"ninijiaying"},"content":"            catch(DukeException e){"},{"lineNumber":115,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":116,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":117,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":118,"author":{"gitId":"ninijiaying"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"ninijiaying"},"content":"            catch(StringIndexOutOfBoundsException e){"},{"lineNumber":120,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":121,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(\"     ☹ OOPS!!! The due date of a deadline cannot be empty. (Format: /by + date[YYYY-MM-DD])\");"},{"lineNumber":122,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":123,"author":{"gitId":"ninijiaying"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"ninijiaying"},"content":"        } else if(command.split(\" \")[0].equals(\"event\")) {"},{"lineNumber":125,"author":{"gitId":"ninijiaying"},"content":"            try{"},{"lineNumber":126,"author":{"gitId":"ninijiaying"},"content":"                int iend1 \u003d command.indexOf(\" \");"},{"lineNumber":127,"author":{"gitId":"ninijiaying"},"content":"                int iend \u003d command.indexOf(\"/\");"},{"lineNumber":128,"author":{"gitId":"ninijiaying"},"content":"                String subString1\u003d command.substring(iend1+1 , iend-1);"},{"lineNumber":129,"author":{"gitId":"ninijiaying"},"content":"                String subString2\u003d command.substring(iend+4);"},{"lineNumber":130,"author":{"gitId":"ninijiaying"},"content":"                int year \u003d Integer.valueOf(subString2.substring(0, 4));"},{"lineNumber":131,"author":{"gitId":"ninijiaying"},"content":"                int mon \u003d Integer.valueOf(subString2.substring(5, 7));"},{"lineNumber":132,"author":{"gitId":"ninijiaying"},"content":"                int day \u003d Integer.valueOf(subString2.substring(8));"},{"lineNumber":133,"author":{"gitId":"ninijiaying"},"content":"                tList.add(new Event(subString1, LocalDate.of(year, mon, day)));"},{"lineNumber":134,"author":{"gitId":"ninijiaying"},"content":"                tList.get(tList.size()-1).addTask(tList.size());"},{"lineNumber":135,"author":{"gitId":"ninijiaying"},"content":"                BufferedWriter writer \u003d new BufferedWriter("},{"lineNumber":136,"author":{"gitId":"ninijiaying"},"content":"                        new FileWriter(\"data/duke.txt\", true));"},{"lineNumber":137,"author":{"gitId":"ninijiaying"},"content":"                writer.write(\"E | 0 | \" + subString1 + \" | \" + subString2 + \"\\n\");"},{"lineNumber":138,"author":{"gitId":"ninijiaying"},"content":"                writer.close();"},{"lineNumber":139,"author":{"gitId":"ninijiaying"},"content":"                tasks.tasks \u003d tList;"},{"lineNumber":140,"author":{"gitId":"ninijiaying"},"content":"            } catch(DukeException e){"},{"lineNumber":141,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":142,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":143,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":144,"author":{"gitId":"ninijiaying"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"ninijiaying"},"content":"            catch(StringIndexOutOfBoundsException e){"},{"lineNumber":146,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":147,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(\"     ☹ OOPS!!! The start and end date of an event cannot be empty.(Format: /at + duration[YYYY-MM-DD])\");"},{"lineNumber":148,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":149,"author":{"gitId":"ninijiaying"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"ninijiaying"},"content":"        } else if(command.split(\" \")[0].equals(\"find\")) {"},{"lineNumber":151,"author":{"gitId":"ninijiaying"},"content":"            String match \u003d command.split(\" \")[1];"},{"lineNumber":152,"author":{"gitId":"ninijiaying"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(\"data/duke.txt\"));"},{"lineNumber":153,"author":{"gitId":"ninijiaying"},"content":"            String line \u003d reader.readLine();"},{"lineNumber":154,"author":{"gitId":"ninijiaying"},"content":"            int counter \u003d 0;"},{"lineNumber":155,"author":{"gitId":"ninijiaying"},"content":"            int secondCounter \u003d 1;"},{"lineNumber":156,"author":{"gitId":"ninijiaying"},"content":"            System.out.println(\"     Here are the matching tasks in your list:\");"},{"lineNumber":157,"author":{"gitId":"ninijiaying"},"content":"            while (line !\u003d null) {"},{"lineNumber":158,"author":{"gitId":"ninijiaying"},"content":"                if(line.indexOf(match) !\u003d -1) {"},{"lineNumber":159,"author":{"gitId":"ninijiaying"},"content":"                    System.out.println(\"     \" + secondCounter + \".\" + tasks.tasks.get(counter).toString());"},{"lineNumber":160,"author":{"gitId":"ninijiaying"},"content":"                    secondCounter++;"},{"lineNumber":161,"author":{"gitId":"ninijiaying"},"content":"                }"},{"lineNumber":162,"author":{"gitId":"ninijiaying"},"content":"                line \u003d reader.readLine();"},{"lineNumber":163,"author":{"gitId":"ninijiaying"},"content":"                counter++;"},{"lineNumber":164,"author":{"gitId":"ninijiaying"},"content":"            }"},{"lineNumber":165,"author":{"gitId":"ninijiaying"},"content":"        } else if(command.equals(\"bye\")) {"},{"lineNumber":166,"author":{"gitId":"ninijiaying"},"content":"            System.out.println(\"     Bye. Hope to see you again soon!\");"},{"lineNumber":167,"author":{"gitId":"ninijiaying"},"content":"        } else {"},{"lineNumber":168,"author":{"gitId":"ninijiaying"},"content":"            System.out.println(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":169,"author":{"gitId":"ninijiaying"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":172,"author":{"gitId":"ninijiaying"},"content":"    public boolean isExit() {"},{"lineNumber":173,"author":{"gitId":"ninijiaying"},"content":"        return (command.equals(\"bye\"));"},{"lineNumber":174,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"ninijiaying"},"content":"}"}],"authorContributionMap":{"ninijiaying":175}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ninijiaying"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"ninijiaying"},"content":"public class Deadline extends Task{"},{"lineNumber":4,"author":{"gitId":"ninijiaying"},"content":"    protected LocalDate by;"},{"lineNumber":5,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":6,"author":{"gitId":"ninijiaying"},"content":"    public Deadline(String name, LocalDate by) {"},{"lineNumber":7,"author":{"gitId":"ninijiaying"},"content":"        super(name);"},{"lineNumber":8,"author":{"gitId":"ninijiaying"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ninijiaying"},"content":"    public Deadline(String name, LocalDate by, boolean done) {"},{"lineNumber":11,"author":{"gitId":"ninijiaying"},"content":"        super(name);"},{"lineNumber":12,"author":{"gitId":"ninijiaying"},"content":"        this.by \u003d by;"},{"lineNumber":13,"author":{"gitId":"ninijiaying"},"content":"        this.done \u003d done;"},{"lineNumber":14,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":16,"author":{"gitId":"ninijiaying"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"ninijiaying"},"content":"    public void addTask(int count) throws DukeException {"},{"lineNumber":18,"author":{"gitId":"ninijiaying"},"content":"        if(this.name.equals(\"\")) {"},{"lineNumber":19,"author":{"gitId":"ninijiaying"},"content":"            throw new DukeException(\"     ☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":20,"author":{"gitId":"ninijiaying"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"ninijiaying"},"content":"            super.addTask(count);"},{"lineNumber":22,"author":{"gitId":"ninijiaying"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":25,"author":{"gitId":"ninijiaying"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"ninijiaying"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"ninijiaying"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.getMonth() + \" \" + by.getDayOfMonth()+ \" \"+ by.getYear() + \")\";"},{"lineNumber":28,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"ninijiaying"},"content":"}"},{"lineNumber":30,"author":{"gitId":"ninijiaying"},"content":""}],"authorContributionMap":{"ninijiaying":30}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ninijiaying"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"ninijiaying"},"content":"import java.util.*;"},{"lineNumber":3,"author":{"gitId":"ninijiaying"},"content":"import java.io.*;"},{"lineNumber":4,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"ninijiaying"},"content":"    private Storage storage;"},{"lineNumber":7,"author":{"gitId":"ninijiaying"},"content":"    private TaskList tasks;"},{"lineNumber":8,"author":{"gitId":"ninijiaying"},"content":"    private Ui ui;"},{"lineNumber":9,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":10,"author":{"gitId":"ninijiaying"},"content":"    public Duke(String filePath) {"},{"lineNumber":11,"author":{"gitId":"ninijiaying"},"content":"        ui \u003d new Ui();"},{"lineNumber":12,"author":{"gitId":"ninijiaying"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":13,"author":{"gitId":"ninijiaying"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"ninijiaying"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":15,"author":{"gitId":"ninijiaying"},"content":"        } catch (DukeException | IOException e) {"},{"lineNumber":16,"author":{"gitId":"ninijiaying"},"content":"            ui.showLoadingError();"},{"lineNumber":17,"author":{"gitId":"ninijiaying"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":18,"author":{"gitId":"ninijiaying"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":21,"author":{"gitId":"ninijiaying"},"content":"    public void run() {"},{"lineNumber":22,"author":{"gitId":"ninijiaying"},"content":"        ui.showWelcome();"},{"lineNumber":23,"author":{"gitId":"ninijiaying"},"content":"        boolean isExit \u003d false;"},{"lineNumber":24,"author":{"gitId":"ninijiaying"},"content":"        while (!isExit) {"},{"lineNumber":25,"author":{"gitId":"ninijiaying"},"content":"            try {"},{"lineNumber":26,"author":{"gitId":"ninijiaying"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":27,"author":{"gitId":"ninijiaying"},"content":"                ui.showLine(); // show the divider line (\"_______\")"},{"lineNumber":28,"author":{"gitId":"ninijiaying"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":29,"author":{"gitId":"ninijiaying"},"content":"                c.execute(tasks, ui, storage);"},{"lineNumber":30,"author":{"gitId":"ninijiaying"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":31,"author":{"gitId":"ninijiaying"},"content":"            } catch (DukeException | IOException e) {"},{"lineNumber":32,"author":{"gitId":"ninijiaying"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":33,"author":{"gitId":"ninijiaying"},"content":"            } finally {"},{"lineNumber":34,"author":{"gitId":"ninijiaying"},"content":"                ui.showLine();"},{"lineNumber":35,"author":{"gitId":"ninijiaying"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"ninijiaying"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":40,"author":{"gitId":"ninijiaying"},"content":"        new Duke(\"data/tasks.txt\").run();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ninijiaying":39,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ninijiaying"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"ninijiaying"},"content":"    public DukeException(String message) {"},{"lineNumber":3,"author":{"gitId":"ninijiaying"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"ninijiaying"},"content":"}"}],"authorContributionMap":{"ninijiaying":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ninijiaying"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"ninijiaying"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"ninijiaying"},"content":"    protected LocalDate at;"},{"lineNumber":5,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":6,"author":{"gitId":"ninijiaying"},"content":"    public Event(String name, LocalDate at) {"},{"lineNumber":7,"author":{"gitId":"ninijiaying"},"content":"        super(name);"},{"lineNumber":8,"author":{"gitId":"ninijiaying"},"content":"        this.at \u003d at;"},{"lineNumber":9,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":11,"author":{"gitId":"ninijiaying"},"content":"    public Event(String name, LocalDate at, boolean done) {"},{"lineNumber":12,"author":{"gitId":"ninijiaying"},"content":"        super(name);"},{"lineNumber":13,"author":{"gitId":"ninijiaying"},"content":"        this.at \u003d at;"},{"lineNumber":14,"author":{"gitId":"ninijiaying"},"content":"        this.done \u003d done;"},{"lineNumber":15,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":17,"author":{"gitId":"ninijiaying"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"ninijiaying"},"content":"    public void addTask(int count) throws DukeException {"},{"lineNumber":19,"author":{"gitId":"ninijiaying"},"content":"        if(this.name.equals(\"\")) {"},{"lineNumber":20,"author":{"gitId":"ninijiaying"},"content":"            throw new DukeException(\"     ☹ OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":21,"author":{"gitId":"ninijiaying"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"ninijiaying"},"content":"            super.addTask(count);"},{"lineNumber":23,"author":{"gitId":"ninijiaying"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":26,"author":{"gitId":"ninijiaying"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"ninijiaying"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"ninijiaying"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.getMonth() + \" \" + at.getDayOfMonth() + \" \" + at.getYear() + \")\";"},{"lineNumber":29,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"ninijiaying"},"content":"}"},{"lineNumber":31,"author":{"gitId":"ninijiaying"},"content":""}],"authorContributionMap":{"ninijiaying":31}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ninijiaying"},"content":"public class Parser {"},{"lineNumber":2,"author":{"gitId":"ninijiaying"},"content":"    public String commandName;"},{"lineNumber":3,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":4,"author":{"gitId":"ninijiaying"},"content":"    public static Command parse(String fullCommand) throws DukeException {"},{"lineNumber":5,"author":{"gitId":"ninijiaying"},"content":"        return new Command(fullCommand);"},{"lineNumber":6,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"ninijiaying"},"content":"}"}],"authorContributionMap":{"ninijiaying":7}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ninijiaying"},"content":"import java.io.*;"},{"lineNumber":2,"author":{"gitId":"ninijiaying"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"ninijiaying"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"ninijiaying"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":6,"author":{"gitId":"ninijiaying"},"content":"public class Storage {"},{"lineNumber":7,"author":{"gitId":"ninijiaying"},"content":"    public String filePath;"},{"lineNumber":8,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":9,"author":{"gitId":"ninijiaying"},"content":"    public Storage(String filePath) {"},{"lineNumber":10,"author":{"gitId":"ninijiaying"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":11,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":13,"author":{"gitId":"ninijiaying"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException, IOException {"},{"lineNumber":14,"author":{"gitId":"ninijiaying"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"ninijiaying"},"content":"        File myObj \u003d new File(\"data/duke.txt\");"},{"lineNumber":16,"author":{"gitId":"ninijiaying"},"content":"        if(myObj.exists()) {"},{"lineNumber":17,"author":{"gitId":"ninijiaying"},"content":"            Scanner myReader \u003d new Scanner(myObj);"},{"lineNumber":18,"author":{"gitId":"ninijiaying"},"content":"            while (myReader.hasNextLine()) {"},{"lineNumber":19,"author":{"gitId":"ninijiaying"},"content":"                String data \u003d myReader.nextLine();"},{"lineNumber":20,"author":{"gitId":"ninijiaying"},"content":"                Character type \u003d data.charAt(0);"},{"lineNumber":21,"author":{"gitId":"ninijiaying"},"content":"                boolean done \u003d false;"},{"lineNumber":22,"author":{"gitId":"ninijiaying"},"content":"                if(data.charAt(4)\u003d\u003d\u00271\u0027) {"},{"lineNumber":23,"author":{"gitId":"ninijiaying"},"content":"                    done \u003d true;"},{"lineNumber":24,"author":{"gitId":"ninijiaying"},"content":"                }"},{"lineNumber":25,"author":{"gitId":"ninijiaying"},"content":"                data \u003d data.substring(8);"},{"lineNumber":26,"author":{"gitId":"ninijiaying"},"content":"                int mid \u003d data.indexOf(\"|\");"},{"lineNumber":27,"author":{"gitId":"ninijiaying"},"content":"                String name;"},{"lineNumber":28,"author":{"gitId":"ninijiaying"},"content":"                String date \u003d null;"},{"lineNumber":29,"author":{"gitId":"ninijiaying"},"content":"                int year \u003d -999;"},{"lineNumber":30,"author":{"gitId":"ninijiaying"},"content":"                int mon \u003d -999;"},{"lineNumber":31,"author":{"gitId":"ninijiaying"},"content":"                int day \u003d -999;"},{"lineNumber":32,"author":{"gitId":"ninijiaying"},"content":"                if(mid \u003e 0) {"},{"lineNumber":33,"author":{"gitId":"ninijiaying"},"content":"                    name \u003d data.substring(0, mid-1);"},{"lineNumber":34,"author":{"gitId":"ninijiaying"},"content":"                    date \u003d data.substring(mid+2);"},{"lineNumber":35,"author":{"gitId":"ninijiaying"},"content":"                    year \u003d Integer.valueOf(date.substring(0, 4));"},{"lineNumber":36,"author":{"gitId":"ninijiaying"},"content":"                    mon \u003d Integer.valueOf(date.substring(5, 7));"},{"lineNumber":37,"author":{"gitId":"ninijiaying"},"content":"                    day \u003d Integer.valueOf(date.substring(8));"},{"lineNumber":38,"author":{"gitId":"ninijiaying"},"content":"                } else {"},{"lineNumber":39,"author":{"gitId":"ninijiaying"},"content":"                    name \u003d data;"},{"lineNumber":40,"author":{"gitId":"ninijiaying"},"content":"                }"},{"lineNumber":41,"author":{"gitId":"ninijiaying"},"content":"                if(type \u003d\u003d \u0027T\u0027) {"},{"lineNumber":42,"author":{"gitId":"ninijiaying"},"content":"                    tasks.add(new ToDo(name, done));"},{"lineNumber":43,"author":{"gitId":"ninijiaying"},"content":"                } else if(type \u003d\u003d \u0027D\u0027) {"},{"lineNumber":44,"author":{"gitId":"ninijiaying"},"content":"                    LocalDate d \u003d LocalDate.of(year, mon, day);"},{"lineNumber":45,"author":{"gitId":"ninijiaying"},"content":"                    tasks.add(new Deadline(name, d, done));"},{"lineNumber":46,"author":{"gitId":"ninijiaying"},"content":"                } else if(type \u003d\u003d \u0027E\u0027) {"},{"lineNumber":47,"author":{"gitId":"ninijiaying"},"content":"                    LocalDate d \u003d LocalDate.of(year, mon, day);"},{"lineNumber":48,"author":{"gitId":"ninijiaying"},"content":"                    tasks.add(new Event(name, d, done));"},{"lineNumber":49,"author":{"gitId":"ninijiaying"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":51,"author":{"gitId":"ninijiaying"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"ninijiaying"},"content":"            myReader.close();"},{"lineNumber":53,"author":{"gitId":"ninijiaying"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"ninijiaying"},"content":"            myObj.createNewFile();"},{"lineNumber":55,"author":{"gitId":"ninijiaying"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":57,"author":{"gitId":"ninijiaying"},"content":"        return tasks;"},{"lineNumber":58,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"ninijiaying"},"content":"}"}],"authorContributionMap":{"ninijiaying":59}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ninijiaying"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"ninijiaying"},"content":"    public boolean done;"},{"lineNumber":3,"author":{"gitId":"ninijiaying"},"content":"    public String name;"},{"lineNumber":4,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"ninijiaying"},"content":"    public Task(String name) {"},{"lineNumber":6,"author":{"gitId":"ninijiaying"},"content":"        this.done \u003d false;"},{"lineNumber":7,"author":{"gitId":"ninijiaying"},"content":"        this.name \u003d name;"},{"lineNumber":8,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":10,"author":{"gitId":"ninijiaying"},"content":"    public void markAsDone() {"},{"lineNumber":11,"author":{"gitId":"ninijiaying"},"content":"        this.done \u003d true;"},{"lineNumber":12,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":14,"author":{"gitId":"ninijiaying"},"content":"    public void addTask(int count) throws DukeException{"},{"lineNumber":15,"author":{"gitId":"ninijiaying"},"content":"        if(this.name.equals(\"todo\")) {"},{"lineNumber":16,"author":{"gitId":"ninijiaying"},"content":"            throw new DukeException(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":17,"author":{"gitId":"ninijiaying"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"ninijiaying"},"content":"            System.out.println(\"     Got it. I\u0027ve added this task:\");"},{"lineNumber":19,"author":{"gitId":"ninijiaying"},"content":"            System.out.println(\"       \" + this.toString());"},{"lineNumber":20,"author":{"gitId":"ninijiaying"},"content":"            if (count \u003d\u003d 1) {"},{"lineNumber":21,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(\"     Now you have \" + count + \" task in the list.\");"},{"lineNumber":22,"author":{"gitId":"ninijiaying"},"content":"            } else {"},{"lineNumber":23,"author":{"gitId":"ninijiaying"},"content":"                System.out.println(\"     Now you have \" + count + \" tasks in the list.\");"},{"lineNumber":24,"author":{"gitId":"ninijiaying"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"ninijiaying"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":27,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":29,"author":{"gitId":"ninijiaying"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"ninijiaying"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"ninijiaying"},"content":"        String outString;"},{"lineNumber":32,"author":{"gitId":"ninijiaying"},"content":"        if(this.done) {"},{"lineNumber":33,"author":{"gitId":"ninijiaying"},"content":"            outString \u003d \"[X] \" + this.name;"},{"lineNumber":34,"author":{"gitId":"ninijiaying"},"content":"        } else {"},{"lineNumber":35,"author":{"gitId":"ninijiaying"},"content":"            outString \u003d \"[ ] \" + this.name;"},{"lineNumber":36,"author":{"gitId":"ninijiaying"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"ninijiaying"},"content":"        return outString;"},{"lineNumber":38,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ninijiaying"},"content":"}"}],"authorContributionMap":{"ninijiaying":39}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ninijiaying"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"ninijiaying"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"ninijiaying"},"content":"    public ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":5,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":6,"author":{"gitId":"ninijiaying"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":7,"author":{"gitId":"ninijiaying"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":8,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":10,"author":{"gitId":"ninijiaying"},"content":"    public TaskList() {"},{"lineNumber":11,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":12,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ninijiaying"},"content":"}"}],"authorContributionMap":{"ninijiaying":13}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ninijiaying"},"content":"public class ToDo extends Task{"},{"lineNumber":2,"author":{"gitId":"ninijiaying"},"content":"    public ToDo(String name) {"},{"lineNumber":3,"author":{"gitId":"ninijiaying"},"content":"        super(name);"},{"lineNumber":4,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"ninijiaying"},"content":"    public ToDo(String name, boolean done) {"},{"lineNumber":6,"author":{"gitId":"ninijiaying"},"content":"        super(name);"},{"lineNumber":7,"author":{"gitId":"ninijiaying"},"content":"        this.done \u003d done;"},{"lineNumber":8,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ninijiaying"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"ninijiaying"},"content":"    public void addTask(int count) throws DukeException{"},{"lineNumber":11,"author":{"gitId":"ninijiaying"},"content":"        if(this.name.equals(\"todo\")) {"},{"lineNumber":12,"author":{"gitId":"ninijiaying"},"content":"            throw new DukeException(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":13,"author":{"gitId":"ninijiaying"},"content":"        } else {"},{"lineNumber":14,"author":{"gitId":"ninijiaying"},"content":"            super.addTask(count);"},{"lineNumber":15,"author":{"gitId":"ninijiaying"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":18,"author":{"gitId":"ninijiaying"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"ninijiaying"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"ninijiaying"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":21,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"ninijiaying"},"content":"}"}],"authorContributionMap":{"ninijiaying":22}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ninijiaying"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"ninijiaying"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"ninijiaying"},"content":"    public String readCommand() {"},{"lineNumber":6,"author":{"gitId":"ninijiaying"},"content":"        System.out.println(\"Enter a command:\");"},{"lineNumber":7,"author":{"gitId":"ninijiaying"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":8,"author":{"gitId":"ninijiaying"},"content":"        String commands \u003d in.nextLine();"},{"lineNumber":9,"author":{"gitId":"ninijiaying"},"content":"        return commands;"},{"lineNumber":10,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":12,"author":{"gitId":"ninijiaying"},"content":"    public void showLine() {"},{"lineNumber":13,"author":{"gitId":"ninijiaying"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":14,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":16,"author":{"gitId":"ninijiaying"},"content":"    public void showError(String message) {"},{"lineNumber":17,"author":{"gitId":"ninijiaying"},"content":"        System.out.println(message);"},{"lineNumber":18,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":20,"author":{"gitId":"ninijiaying"},"content":"    public void showWelcome() {"},{"lineNumber":21,"author":{"gitId":"ninijiaying"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":22,"author":{"gitId":"ninijiaying"},"content":"        System.out.println(\"     Hello! I\u0027m Duke\");"},{"lineNumber":23,"author":{"gitId":"ninijiaying"},"content":"        System.out.println(\"     What can I do for you?\");"},{"lineNumber":24,"author":{"gitId":"ninijiaying"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":25,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":27,"author":{"gitId":"ninijiaying"},"content":"    public void showLoadingError() {"},{"lineNumber":28,"author":{"gitId":"ninijiaying"},"content":""},{"lineNumber":29,"author":{"gitId":"ninijiaying"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"ninijiaying"},"content":"}"}],"authorContributionMap":{"ninijiaying":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ninijiaying"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"ninijiaying"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"ninijiaying"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"ninijiaying"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"ninijiaying"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"ninijiaying"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"ninijiaying"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"ninijiaying"},"content":"list"},{"lineNumber":9,"author":{"gitId":"ninijiaying"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"ninijiaying"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":11,"author":{"gitId":"ninijiaying"},"content":"bye"}],"authorContributionMap":{"ninijiaying":11}}]
