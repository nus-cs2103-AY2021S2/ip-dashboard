[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"# Justin project"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"This is a instruction page for a greenfield Java project. It\u0027s named Justin which stands for JUSt a TImetable(New). Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"1. After that, locate the `src/main/java/justin/Launcher.java` file, right-click it, and choose `Run Launcher.main()`. "},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"1. Alternatively, you can run the jar file named justin.jar if you have JDK 11"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"1. If the setup is correct, you should see something like the below:"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"![Justin Image](https://github.com/mrweikiat/ip/blob/master/docs/Ui.png)"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"## Commands in Justin "},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"Features "},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"1. Instructions can be displayed by using the command key: help"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"   * This will display all the basic commands that Justin can do"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"1. Justin can show you all the tasks User added by the command key: list"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"1. User can add a todo task by using the command key: todo\u003cspace\u003etd/[Task Name]"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"   * eg: User wants to add a todo task"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"      1. User keys in: todo finish iP "},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"      1. Justin adds the new todo task and display the newly added task"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"1. User can add a deadline task by using the command key: deadline\u003cspace\u003ed/[Task Name]\u003cspace\u003e/by\u003cspace\u003e[YYYY-MM-DD]"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"   * eg: User wants to add a deadline task"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"      1. User keys in: deadline need some sleep /by 2020-02-14"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"      1. Justin adds the new deadline task and display the newly added task"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"1. User can add an event task by using the command key: event\u003cspace\u003ee/[Task Name]\u003cspace\u003e/at\u003cspace\u003e[YYYY-MM-DD HH:MM]"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"   * eg: User wants to add an event task"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"      1. User keys in: event fly me to the moon /at 2020-07-16 21:02"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"      1. Justin adds the new event task and display the newly added task"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"1. User can find tasks by using the command: find\u003cspace\u003e[keyword]"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"   * eg: User wants to find a particuler task in the list"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"      1. User keys in: find where is my beer"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"      1. Justin will return a list of tasks that matches or contain the keywords of User\u0027s input"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"1. User can delete a task on the list by using the command: delete\u003cspace\u003e[Number]"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"   * eg: User use the command list to view all tasks on the list"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"      1. After viewing the list, user decides to delete third task"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"      1. User key in command: delete 3"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"      1. Justin will delete the task and display the contents of the deleted task"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"1. Lastly, User can exit the application by using the command: bye"}],"authorContributionMap":{"mrweikiat":37,"-":12}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"    //JavaFX"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"    mainClassName \u003d \"justin.Launcher\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"    archiveBaseName \u003d \"justin\""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"    mainClassName \u003d \"justin.Launcher\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":"    enableAssertions \u003d true"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"mrweikiat":22,"-":44}},{"path":"data/justin.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"D|0|catch dog|2021-02-03"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"E|1|catch bird|2019-06-10 19:00"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"D|0|catch myself|2020-10-20"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"T|0|catch joker"}],"authorContributionMap":{"mrweikiat":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"# Justin project"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"This is a instruction page for a greenfield Java project. It\u0027s named Justin which stands for JUSt a TImetable(New). Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"1. After that, locate the `src/main/java/justin/Launcher.java` file, right-click it, and choose `Run Launcher.main()`. "},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"1. Alternatively, you can run the jar file named justin.jar if you have JDK 11"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"1. If the setup is correct, you should see something like the below:"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"![Justin Image](https://github.com/mrweikiat/ip/blob/master/docs/Ui.png)"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"## Commands in Justin "},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"### Content Page"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"* help"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"* list"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"* todo"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"* deadline"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"* event"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"* find"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"* delete"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"* bye"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"### Features "},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"`help`"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"   * Instructions can be displayed by using the command key: help"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"      * This will display all the basic commands that Justin can do"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":" "},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"*Expected input*"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"help"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"*Expected output*"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"To add a todo, use command"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"eg: todo code cs2103"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"To add a deadline, use command:"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"eg: deadline fly kite /by 2020-06-10"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":"To add a event, use command:"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"event finish iP /at 2020-02-18 18:00"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"To find similar tasks, use eg: find my CAP"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"`list`"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"   * Justin can show you all the tasks User added by the command key: list"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"         * User can add a todo task by using the command key: todo td/[Task Name]"},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"         * eg: User wants to add a todo task"},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"              1. User keys in: todo finish iP "},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":"              1. Justin adds the new todo task and display the newly added task"},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"             "},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":"*Expected input*"},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":"list"},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":"*Expected output*"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":"Here are the tasks in your list:"},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":"1. [T][COMPLETED] finish iP "},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"2. [E][INCOMPLETE] finish tP (at: Jun 19 2020 18:00)"},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":"`deadline`"},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":"   * User can add a deadline task by using the command key: deadline\u003cspace\u003ed/[Task Name] /by [YYYY-MM-DD]"},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":"      * eg: User wants to add a deadline task"},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":"         1. User keys in: deadline need some sleep /by 2020-02-14"},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":"         1. Justin adds the new deadline task and display the newly added task"},{"lineNumber":79,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":"*Expected input*"},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":82,"author":{"gitId":"mrweikiat"},"content":"deadline catch dog /by 2020-06-10"},{"lineNumber":83,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":"*Expected output*"},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":"Got it, I\u0027ve added this task:"},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":"   [D][INCOMPLETE] catch dog (by: Jun 10 2020)"},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":"Now you have 1 task in the list"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":91,"author":{"gitId":"mrweikiat"},"content":"`event`"},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":"   * User can add an event task by using the command key: event e/[Task Name] /at [YYYY-MM-DD HH:MM]"},{"lineNumber":93,"author":{"gitId":"mrweikiat"},"content":"      * eg: User wants to add an event task"},{"lineNumber":94,"author":{"gitId":"mrweikiat"},"content":"         1. User keys in: event fly me to the moon /at 2020-07-16 21:02"},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":"         2. Justin adds the new event task and display the newly added task"},{"lineNumber":96,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":97,"author":{"gitId":"mrweikiat"},"content":"*Expected input*"},{"lineNumber":98,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":99,"author":{"gitId":"mrweikiat"},"content":"event catch cat /at 2020-06-10 18:00"},{"lineNumber":100,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":101,"author":{"gitId":"mrweikiat"},"content":"*Expected output*"},{"lineNumber":102,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":103,"author":{"gitId":"mrweikiat"},"content":"Got it, I\u0027ve added this task:"},{"lineNumber":104,"author":{"gitId":"mrweikiat"},"content":"   [E][INCOMPLETE] catch cat (by: Jun 10 2020 18:00)"},{"lineNumber":105,"author":{"gitId":"mrweikiat"},"content":"Now you have 1 task in the list"},{"lineNumber":106,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":107,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":108,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":109,"author":{"gitId":"mrweikiat"},"content":"`find`"},{"lineNumber":110,"author":{"gitId":"mrweikiat"},"content":"   * User can find tasks by using the command: find [keyword]"},{"lineNumber":111,"author":{"gitId":"mrweikiat"},"content":"      * eg: User wants to find a particuler task in the list"},{"lineNumber":112,"author":{"gitId":"mrweikiat"},"content":"         1. User keys in: find where is my beer"},{"lineNumber":113,"author":{"gitId":"mrweikiat"},"content":"         2. Justin will return a list of tasks that matches or contain the keywords of User\u0027s input"},{"lineNumber":114,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":115,"author":{"gitId":"mrweikiat"},"content":"*Expected input*"},{"lineNumber":116,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":117,"author":{"gitId":"mrweikiat"},"content":"find catch"},{"lineNumber":118,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":119,"author":{"gitId":"mrweikiat"},"content":"*Expected output*"},{"lineNumber":120,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":121,"author":{"gitId":"mrweikiat"},"content":"Here are the matching tasks in your list"},{"lineNumber":122,"author":{"gitId":"mrweikiat"},"content":"1. [D][INCOMPLETE] catch dog (by: Jun 10 2020)"},{"lineNumber":123,"author":{"gitId":"mrweikiat"},"content":"2. [T][COMPLETED] catch cat "},{"lineNumber":124,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":125,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":126,"author":{"gitId":"mrweikiat"},"content":"`delete`"},{"lineNumber":127,"author":{"gitId":"mrweikiat"},"content":"   * User can delete a task on the list by using the command: delete [Number]"},{"lineNumber":128,"author":{"gitId":"mrweikiat"},"content":"      * eg: User use the command list to view all tasks on the list"},{"lineNumber":129,"author":{"gitId":"mrweikiat"},"content":"         1. After viewing the list, user decides to delete third task"},{"lineNumber":130,"author":{"gitId":"mrweikiat"},"content":"         2. User key in command: delete 3"},{"lineNumber":131,"author":{"gitId":"mrweikiat"},"content":"         3. Justin will delete the task and display the contents of the deleted task"},{"lineNumber":132,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":133,"author":{"gitId":"mrweikiat"},"content":"*Expected input*"},{"lineNumber":134,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":135,"author":{"gitId":"mrweikiat"},"content":"delete 3"},{"lineNumber":136,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":137,"author":{"gitId":"mrweikiat"},"content":"*Expected output*"},{"lineNumber":138,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":139,"author":{"gitId":"mrweikiat"},"content":"Noted. I\u0027ve removed this task"},{"lineNumber":140,"author":{"gitId":"mrweikiat"},"content":"   [E][INCOMPLETE] catch cat (by: Jun 10 2020 18:00)"},{"lineNumber":141,"author":{"gitId":"mrweikiat"},"content":"Now you have 1 task in the list"},{"lineNumber":142,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":143,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":144,"author":{"gitId":"mrweikiat"},"content":"`bye`"},{"lineNumber":145,"author":{"gitId":"mrweikiat"},"content":"   * Lastly, User can exit the application by using the command: bye"},{"lineNumber":146,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":147,"author":{"gitId":"mrweikiat"},"content":"*Expected input*"},{"lineNumber":148,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":149,"author":{"gitId":"mrweikiat"},"content":"bye"},{"lineNumber":150,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":151,"author":{"gitId":"mrweikiat"},"content":"*Expected output*"},{"lineNumber":152,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":153,"author":{"gitId":"mrweikiat"},"content":"See you soon again!"},{"lineNumber":154,"author":{"gitId":"mrweikiat"},"content":"````"},{"lineNumber":155,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"mrweikiat":146,"-":9}},{"path":"src/main/java/justin/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":" * This class creates a Deadline class"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":" * that extends from Task class"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":" * @author Goh Wei Kiat aka github : mrweikiat"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project \u0027IP\u0027"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"public class Deadline extends Task {"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"    protected String by;"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"    protected LocalDate date;"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"     * This method creates a new Deadline class"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"     * @param description of the given task"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"     * @param by the date given by user"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"        super(description);"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"        this.by \u003d by;"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"        this.date \u003d LocalDate.parse(by);"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"    public String toString() {"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":36}},{"path":"src/main/java/justin/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"    public static DialogBox getJustinDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":61}},{"path":"src/main/java/justin/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":" * This class creates an Event"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":" * that is an extension of Task Class"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":" * @author Goh Wei Kiat aka github : mrweikiat"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project \u0027IP\u0027"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"public class Event extends Task {"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"    protected String dateTime;"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"    protected String date;"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"    protected String time;"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"    protected LocalDate date1;"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"    protected LocalTime time1;"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"     * This method creates an event class"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"     * @param description of the given task"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"     * @param dateTime of the given task"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"    public Event(String description, String dateTime) {"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"        super(description);"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"        String[] splits \u003d dateTime.split(\"\\\\s+\");"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"        this.date \u003d splits[0];"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"        this.time \u003d splits[1];"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"        this.date1 \u003d LocalDate.parse(date);"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"        this.time1 \u003d LocalTime.parse(time);"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" +"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"                time1.format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\";"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"}"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":""}],"authorContributionMap":{"mrweikiat":47}},{"path":"src/main/java/justin/Justin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":" * justin.Justin is a chatbot that help users plan and organise tasks"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":" * justin.Justin stands for JUSt a TImetable(New) : JUSTIN"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":" * justin.Justin is able to create and manage new tasks"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":" *   1) Mark tasks off as done"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":" *   2) Set tasks as To Do\u0027s - [keyword] [name]"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":" *   3) Set tasks as justin.Deadline\u0027s - keyword  : [keyword] [name] /by [day]"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":" *   4) Set tasks as justin.Event\u0027s - keyword : [keyword] [name] /at [day time]"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":" *   5) Supports deletion of completed tasks with command delete [int]"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":" * @author Goh Wei Kiat aka github : mrweikiat"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project \u0027IP\u0027"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"public class Justin {"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"    private Storage storage;"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"    private TaskList tasks;"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"    private Ui ui;"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"    String userDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"    String filePath \u003d userDir + File.separator + \"data\" + File.separator + \"justin.txt\";"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"     * This is method creates a class Justin that will take in user inputs to execute commands"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"    public Justin() {"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"        ui \u003d new Ui();"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"        this.storage \u003d new Storage(filePath);"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"        tasks \u003d storage.loadFile(filePath);"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"     /**"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"     * Main method inputs the file path to justin.txt"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"      * to retrieve any list data stored within"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"     * @param args unused"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"    public static void main(String[] args) {"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"        Justin justin \u003d new Justin();"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"     * Method that takes in input from user via GUI"},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"     * and input into parser class"},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"     * to get commands for Justin to execute"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"     * @param text of the user input"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":"     * @return The description of the command and outputs"},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"    public String getResponse(String text) {"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"        ArrayList\u003cTask\u003e l \u003d tasks.getList();"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":"        Parser pr \u003d new Parser(text);"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":"        String response \u003d \"\";"},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":"            String command \u003d pr.checkCommand();"},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":"            assert command !\u003d null;"},{"lineNumber":79,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":"            switch (command) {"},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":82,"author":{"gitId":"mrweikiat"},"content":"                case \"HELP\":"},{"lineNumber":83,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":"                    response \u003d ui.showHelpMessage();"},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"                    break;"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":"                case \"BYE\":"},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":"                    storage.saveFile(tasks, storage.getFilePath());"},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":91,"author":{"gitId":"mrweikiat"},"content":"                case \"LIST\":"},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":93,"author":{"gitId":"mrweikiat"},"content":"                    response \u003d ui.editResponseMessage(ui.showListMessage());"},{"lineNumber":94,"author":{"gitId":"mrweikiat"},"content":"                    response +\u003d ui.printList(tasks);"},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":"                    break;"},{"lineNumber":96,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":97,"author":{"gitId":"mrweikiat"},"content":"                case \"DONE\":"},{"lineNumber":98,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":99,"author":{"gitId":"mrweikiat"},"content":"                    String num \u003d text.substring(5); // take out the int value of the task to be completed"},{"lineNumber":100,"author":{"gitId":"mrweikiat"},"content":"                    response \u003d ui.showDoneMessage(tasks, num);"},{"lineNumber":101,"author":{"gitId":"mrweikiat"},"content":"                    break;"},{"lineNumber":102,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":103,"author":{"gitId":"mrweikiat"},"content":"                case \"DEADLINE\":"},{"lineNumber":104,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":105,"author":{"gitId":"mrweikiat"},"content":"                    response \u003d tasks.addDeadline(text);"},{"lineNumber":106,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":107,"author":{"gitId":"mrweikiat"},"content":"                    break;"},{"lineNumber":108,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":109,"author":{"gitId":"mrweikiat"},"content":"                case \"TODO\":"},{"lineNumber":110,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":111,"author":{"gitId":"mrweikiat"},"content":"                    String descriptionToDo \u003d text.substring(text.indexOf(\" \") + 1); // take out the item from the text"},{"lineNumber":112,"author":{"gitId":"mrweikiat"},"content":"                    response \u003d tasks.addToDo(descriptionToDo);"},{"lineNumber":113,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":114,"author":{"gitId":"mrweikiat"},"content":"                    break;"},{"lineNumber":115,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":116,"author":{"gitId":"mrweikiat"},"content":"                case \"EVENT\":"},{"lineNumber":117,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":118,"author":{"gitId":"mrweikiat"},"content":"                    response \u003d tasks.addEvent(text);"},{"lineNumber":119,"author":{"gitId":"mrweikiat"},"content":"                    break;"},{"lineNumber":120,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":121,"author":{"gitId":"mrweikiat"},"content":"                case \"DELETE\":"},{"lineNumber":122,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":123,"author":{"gitId":"mrweikiat"},"content":"                    String numDelete \u003d text.substring(7); // take out the int value of the task to be completed"},{"lineNumber":124,"author":{"gitId":"mrweikiat"},"content":"                    try {"},{"lineNumber":125,"author":{"gitId":"mrweikiat"},"content":"                        response +\u003d tasks.delete(numDelete);"},{"lineNumber":126,"author":{"gitId":"mrweikiat"},"content":"                    } catch (JustinException e) {"},{"lineNumber":127,"author":{"gitId":"mrweikiat"},"content":"                        response +\u003d e.getMessage();"},{"lineNumber":128,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":129,"author":{"gitId":"mrweikiat"},"content":"                    break;"},{"lineNumber":130,"author":{"gitId":"mrweikiat"},"content":"                case \"FIND\": // for level 9"},{"lineNumber":131,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":132,"author":{"gitId":"mrweikiat"},"content":"                    String findText \u003d text.substring(text.indexOf(\" \") + 1);"},{"lineNumber":133,"author":{"gitId":"mrweikiat"},"content":"                    response \u003d ui.printFoundTask(tasks.find(findText));"},{"lineNumber":134,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":135,"author":{"gitId":"mrweikiat"},"content":"                    break;"},{"lineNumber":136,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":137,"author":{"gitId":"mrweikiat"},"content":"                default:"},{"lineNumber":138,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":139,"author":{"gitId":"mrweikiat"},"content":"                    tasks.addTask(text);"},{"lineNumber":140,"author":{"gitId":"mrweikiat"},"content":"                    response \u003d \"added: \" + text;"},{"lineNumber":141,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":142,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":143,"author":{"gitId":"mrweikiat"},"content":"        } catch (JustinException m) {"},{"lineNumber":144,"author":{"gitId":"mrweikiat"},"content":"            response \u003d m.getMessage();"},{"lineNumber":145,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":147,"author":{"gitId":"mrweikiat"},"content":"        return response;"},{"lineNumber":148,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":150,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"mrweikiat"},"content":"     * This method prints the welcome message of the GUI"},{"lineNumber":152,"author":{"gitId":"mrweikiat"},"content":"     * @return the text to be printed"},{"lineNumber":153,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":155,"author":{"gitId":"mrweikiat"},"content":"    public String getWelcome() {"},{"lineNumber":156,"author":{"gitId":"mrweikiat"},"content":"        return ui.welcomeMessage();"},{"lineNumber":157,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":158,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":160,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":161,"author":{"gitId":"mrweikiat"},"content":"     * This method prints the terminate message of the Application"},{"lineNumber":162,"author":{"gitId":"mrweikiat"},"content":"     * @return the text to be printed"},{"lineNumber":163,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":164,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":165,"author":{"gitId":"mrweikiat"},"content":"    public String getTerminate() {"},{"lineNumber":166,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":167,"author":{"gitId":"mrweikiat"},"content":"        return ui.terminateMessage();"},{"lineNumber":168,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"mrweikiat"},"content":"}"},{"lineNumber":170,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":171,"author":{"gitId":"mrweikiat"},"content":""}],"authorContributionMap":{"mrweikiat":171}},{"path":"src/main/java/justin/JustinException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":" * This class creates the exception message"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":" * for the JustionException class"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":" * @author Goh Wei Kiat aka github : mrweikiat"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project \u0027IP\u0027"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"public class JustinException extends Exception {"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"     * This method returns the message"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"     * intended for the Exception"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"     * @param message The intented exception message"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"    public JustinException(String message) {"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"        super(message);"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":23}},{"path":"src/main/java/justin/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"public class Launcher {"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"    public static void main(String[] args) {"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"        Application.launch(Main.class, args );"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"}"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":""}],"authorContributionMap":{"mrweikiat":78}},{"path":"src/main/java/justin/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"    private Justin justin \u003d new Justin();"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJustin(justin);"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().getWelcomeMessage();"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":33}},{"path":"src/main/java/justin/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"import justin.Justin;"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"import java.util.concurrent.Executors;"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"import java.util.concurrent.ScheduledExecutorService;"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"import java.util.concurrent.TimeUnit;"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"    private TextField userInput;"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"    private Button sendButton;"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"    private Justin justin;"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser3.png\"));"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"    private Image justinImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaJustin.png\"));"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"    public void initialize() {"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"    public void setJustin(Justin j) {"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"        justin \u003d j;"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"    @FXML"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"    private void handleUserInput() {"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":"        String response \u003d justin.getResponse(input);"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"            terminate();"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"                    DialogBox.getJustinDialog(response, justinImage)"},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"            );"},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"        userInput.clear();"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"     * This method creates the dialog box"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":"     * for the welcome message"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"    public void getWelcomeMessage() {"},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":"        String welcome \u003d justin.getWelcome();"},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":"        dialogContainer.getChildren().add(DialogBox.getJustinDialog(welcome, justinImage));"},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":"     * This method terminates the app"},{"lineNumber":79,"author":{"gitId":"mrweikiat"},"content":"     * once bye has been input"},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":82,"author":{"gitId":"mrweikiat"},"content":"    @FXML"},{"lineNumber":83,"author":{"gitId":"mrweikiat"},"content":"    public void terminate() {"},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":"        String exit \u003d justin.getTerminate();"},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"        dialogContainer.getChildren().add(DialogBox.getJustinDialog(exit, justinImage));"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":"        ScheduledExecutorService executorService \u003d Executors.newSingleThreadScheduledExecutor();"},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":"        executorService.schedule(() -\u003e System.exit(0), 5, TimeUnit.SECONDS);"},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":90}},{"path":"src/main/java/justin/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import justin.JustinException;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":" * This class creates a Parser class"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":" * that takes in a String input"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":" * and generate a command to be executed"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":" * @author Goh Wei Kiat aka github : mrweikiat"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project \u0027IP\u0027"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"public class Parser {"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"    private String fullText;"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"     * This method creates a Parser class"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"     * @param fullText of the user input"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"    public Parser(String fullText) {"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"        this.fullText \u003d fullText;"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"     * This method checks the user input"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"     * and generate a command"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"     * to be executed"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"     * @return String The command to be executed"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"     * @throws JustinException command not valid"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"    public String checkCommand() throws JustinException {"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"            validate(fullText);"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"            if (fullText.equals(\"bye\")) {"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"                return \"BYE\";"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"            } else if (fullText.equals(\"list\")) {"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"                return \"LIST\";"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"            } else if (fullText.contains(\"done\")) {"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"                return \"DONE\";"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"            } else if (fullText.contains(\"deadline\")) {"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"                return \"DEADLINE\";"},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"            } else if (fullText.contains(\"todo\")) {"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"                return \"TODO\";"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"            } else if (fullText.contains(\"event\")) {"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"                return \"EVENT\";"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":"            else if (fullText.contains(\"delete\")) {"},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"                return \"DELETE\";"},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":"            } else if (fullText.contains(\"find\")) {"},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":"                return \"FIND\";"},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":"            } else if (fullText.contains(\"help\")) {"},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":79,"author":{"gitId":"mrweikiat"},"content":"                return \"HELP\";"},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":"            } else if (fullText.contains(\"empty\")) {"},{"lineNumber":82,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":83,"author":{"gitId":"mrweikiat"},"content":"                return \"EMPTY\";"},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"            } else {"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":"                return \"ADD\";"},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":"        } catch (JustinException m) {"},{"lineNumber":91,"author":{"gitId":"mrweikiat"},"content":"            throw new JustinException(m.getMessage());"},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":"    static void validate(String text) throws JustinException {"},{"lineNumber":96,"author":{"gitId":"mrweikiat"},"content":"        if (text.length() \u003c 5 \u0026\u0026 text.contains(\"todo\") ) { // case 1"},{"lineNumber":97,"author":{"gitId":"mrweikiat"},"content":"            throw new JustinException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":98,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"mrweikiat"},"content":"        else if (text.contains(\"blah\")) { // case 2"},{"lineNumber":100,"author":{"gitId":"mrweikiat"},"content":"            throw new JustinException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":101,"author":{"gitId":"mrweikiat"},"content":"        } else if (text.length() \u003c 10 \u0026\u0026 text.contains(\"deadline\")) { // case 3"},{"lineNumber":102,"author":{"gitId":"mrweikiat"},"content":"            throw new JustinException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":103,"author":{"gitId":"mrweikiat"},"content":"        } else if (text.length() \u003c 6 \u0026\u0026 text.contains(\"event\")) { // case 4"},{"lineNumber":104,"author":{"gitId":"mrweikiat"},"content":"            throw new JustinException(\"☹ OOPS!!! The description of a event cannot be empty.\");"},{"lineNumber":105,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":108,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":108}},{"path":"src/main/java/justin/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"import java.nio.file.Paths;"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":" * This class creates a storage class that hold information of the task list"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":" * @author Goh Wei Kiat aka github : mrweikiat"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project \u0027IP\u0027"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"public class Storage {"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"    protected String filePath;"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"    protected File file;"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"     * This method takes in a String filepath and creates a new Storage class with a file that contains path to"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"     * the txt file storing the list information"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"     * @param filePath The absolute filepath of justin.txt"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"    public Storage(String filePath) {"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"        this.file \u003d new File(filePath);"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"     * This method calls to a storage class and return"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"     * the absolute file path in String"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"     * @return String containing abosulute file path to justin.txt"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"    public String getFilePath() {"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"        return this.filePath;"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"     * This method taks in the filepath containing list of tasks in .txt and"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"     * returns a TaskList contain all the different classes of Tasks"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":"     * @param filePath The absolute filepath of justin.txt"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"     * @return TaskList This returns a loaded Tasklist"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":"    public TaskList loadFile(String filePath)  {"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"        TaskList holder \u003d new TaskList();"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"        assert file !\u003d null : \"justin.txt does not exist!\";"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"        if (file.exists()) {"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":"            try {"},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"                for (String line : Files.readAllLines(Paths.get(filePath))) {"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"                    String[] splits \u003d line.split(\"\\\\|\", 5);"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"                    if (splits[0].equals(\"T\")) {"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":"                        Todo td \u003d new Todo(splits[2]);"},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":"                        if (splits[1].equals(\"1\")) {"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"                            td.markAsDone();"},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":"                        }"},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":"                        holder.getList().add(td);"},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":"                    } else if (splits[0].equals(\"D\")) {"},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":"                        Deadline dl \u003d new Deadline(splits[2], splits[3]);"},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":"                        if (splits[1].equals(\"1\")) {"},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":"                            dl.markAsDone();"},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":"                        }"},{"lineNumber":79,"author":{"gitId":"mrweikiat"},"content":"                        holder.getList().add(dl);"},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":"                    } else if (splits[0].equals(\"E\")) {"},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":"                        Event e \u003d new Event(splits[2], splits[3]);"},{"lineNumber":82,"author":{"gitId":"mrweikiat"},"content":"                        if (splits[1].equals(\"1\")) {"},{"lineNumber":83,"author":{"gitId":"mrweikiat"},"content":"                            e.markAsDone();"},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":"                        }"},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"                        holder.getList().add(e);"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":"                    else {"},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":"                        Task t \u003d new Task(splits[1]);"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":"                        holder.getList().add(t);"},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":91,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":93,"author":{"gitId":"mrweikiat"},"content":"                }"},{"lineNumber":94,"author":{"gitId":"mrweikiat"},"content":"            } catch (IOException e) {"},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(\"file not found\");"},{"lineNumber":96,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"mrweikiat"},"content":"        } else {"},{"lineNumber":98,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":99,"author":{"gitId":"mrweikiat"},"content":"            try {"},{"lineNumber":100,"author":{"gitId":"mrweikiat"},"content":"                file.getParentFile().mkdirs();"},{"lineNumber":101,"author":{"gitId":"mrweikiat"},"content":"                file.createNewFile();"},{"lineNumber":102,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(\"New file created\");"},{"lineNumber":103,"author":{"gitId":"mrweikiat"},"content":"            } catch (IOException e) {"},{"lineNumber":104,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(\"Error creating file\");"},{"lineNumber":105,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":107,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":109,"author":{"gitId":"mrweikiat"},"content":"        return holder;"},{"lineNumber":110,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":111,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":113,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"mrweikiat"},"content":"     * This method takes in the absolute file path of justin.txt and the current tasklist"},{"lineNumber":115,"author":{"gitId":"mrweikiat"},"content":"     * and attempts to save the information of each tasks into the .txt file"},{"lineNumber":116,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"mrweikiat"},"content":"     * @param tasks The TaskList class containing arraylist of Tasks"},{"lineNumber":118,"author":{"gitId":"mrweikiat"},"content":"     * @param filePath The absolute filepath of justin.txt"},{"lineNumber":119,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":121,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":122,"author":{"gitId":"mrweikiat"},"content":"    // method to save contents of list onto justin.txt"},{"lineNumber":123,"author":{"gitId":"mrweikiat"},"content":"    public static void saveFile(TaskList tasks, String filePath) {"},{"lineNumber":124,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":125,"author":{"gitId":"mrweikiat"},"content":"        try {"},{"lineNumber":126,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":127,"author":{"gitId":"mrweikiat"},"content":"            StringBuffer sb \u003d new StringBuffer(\"\"); // create empty sb to store content of list"},{"lineNumber":128,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":129,"author":{"gitId":"mrweikiat"},"content":"            for (int i \u003d 0; i \u003c tasks.getList().size(); i++) {"},{"lineNumber":130,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":131,"author":{"gitId":"mrweikiat"},"content":"                String holder \u003d \"\"; // to hold content of current line to be stored into sb"},{"lineNumber":132,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":133,"author":{"gitId":"mrweikiat"},"content":"                if (tasks.getList().get(i) instanceof Todo) { // is a t0do class"},{"lineNumber":134,"author":{"gitId":"mrweikiat"},"content":"                    if (tasks.getList().get(i).isDone) {"},{"lineNumber":135,"author":{"gitId":"mrweikiat"},"content":"                        holder \u003d \"T\" + \"|\" + \"1\" + \"|\" + tasks.getList().get(i).description;"},{"lineNumber":136,"author":{"gitId":"mrweikiat"},"content":"                    } else {"},{"lineNumber":137,"author":{"gitId":"mrweikiat"},"content":"                        holder \u003d \"T\" + \"|\" + \"0\" + \"|\" + tasks.getList().get(i).description;"},{"lineNumber":138,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":139,"author":{"gitId":"mrweikiat"},"content":"                } else if (tasks.getList().get(i) instanceof Deadline) { // is a deadline class"},{"lineNumber":140,"author":{"gitId":"mrweikiat"},"content":"                    if (tasks.getList().get(i).isDone) {"},{"lineNumber":141,"author":{"gitId":"mrweikiat"},"content":"                        holder \u003d \"D\" + \"|\" + \"1\" + \"|\" + tasks.getList().get(i).description +"},{"lineNumber":142,"author":{"gitId":"mrweikiat"},"content":"                                \"|\" + ((Deadline) tasks.getList().get(i)).by;"},{"lineNumber":143,"author":{"gitId":"mrweikiat"},"content":"                    } else {"},{"lineNumber":144,"author":{"gitId":"mrweikiat"},"content":"                        holder \u003d \"D\" + \"|\" + \"0\" + \"|\" + tasks.getList().get(i).description +"},{"lineNumber":145,"author":{"gitId":"mrweikiat"},"content":"                                \"|\" + ((Deadline) tasks.getList().get(i)).by;"},{"lineNumber":146,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":147,"author":{"gitId":"mrweikiat"},"content":"                } else if (tasks.getList().get(i) instanceof Event) {"},{"lineNumber":148,"author":{"gitId":"mrweikiat"},"content":"                    if (tasks.getList().get(i).isDone) {"},{"lineNumber":149,"author":{"gitId":"mrweikiat"},"content":"                        holder \u003d \"E\" + \"|\" + \"1\" + \"|\" + tasks.getList().get(i).description +"},{"lineNumber":150,"author":{"gitId":"mrweikiat"},"content":"                                \"|\" + ((Event) tasks.getList().get(i)).dateTime;"},{"lineNumber":151,"author":{"gitId":"mrweikiat"},"content":"                    } else {"},{"lineNumber":152,"author":{"gitId":"mrweikiat"},"content":"                        holder \u003d \"E\" + \"|\" + \"1\" + \"|\" + tasks.getList().get(i).description +"},{"lineNumber":153,"author":{"gitId":"mrweikiat"},"content":"                                \"|\" + ((Event) tasks.getList().get(i)).dateTime;"},{"lineNumber":154,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":155,"author":{"gitId":"mrweikiat"},"content":"                } else {"},{"lineNumber":156,"author":{"gitId":"mrweikiat"},"content":"                    if (tasks.getList().get(i).isDone) {"},{"lineNumber":157,"author":{"gitId":"mrweikiat"},"content":"                        holder \u003d \"1\" + \"|\" + tasks.getList().get(i).description;"},{"lineNumber":158,"author":{"gitId":"mrweikiat"},"content":"                    } else {"},{"lineNumber":159,"author":{"gitId":"mrweikiat"},"content":"                        holder \u003d \"1\" + \"|\" + tasks.getList().get(i).description;"},{"lineNumber":160,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":161,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":162,"author":{"gitId":"mrweikiat"},"content":"                }"},{"lineNumber":163,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":164,"author":{"gitId":"mrweikiat"},"content":"                if (i \u003c tasks.getList().size()) {"},{"lineNumber":165,"author":{"gitId":"mrweikiat"},"content":"                    sb.append((holder + \"\\n\"));"},{"lineNumber":166,"author":{"gitId":"mrweikiat"},"content":"                } else {"},{"lineNumber":167,"author":{"gitId":"mrweikiat"},"content":"                    sb.append(holder);"},{"lineNumber":168,"author":{"gitId":"mrweikiat"},"content":"                }"},{"lineNumber":169,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":170,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":171,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":172,"author":{"gitId":"mrweikiat"},"content":"            // write content of sb into file"},{"lineNumber":173,"author":{"gitId":"mrweikiat"},"content":"            FileWriter myWriter \u003d new FileWriter(new File(filePath));"},{"lineNumber":174,"author":{"gitId":"mrweikiat"},"content":"            myWriter.write(sb.toString());"},{"lineNumber":175,"author":{"gitId":"mrweikiat"},"content":"            myWriter.close();"},{"lineNumber":176,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":177,"author":{"gitId":"mrweikiat"},"content":"        } catch(IOException e) {"},{"lineNumber":178,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(\"Unable to write to file justin.txt\");"},{"lineNumber":179,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":182,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":183,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":184,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":184}},{"path":"src/main/java/justin/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":" * This class create a Task that contains"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":" * description in String"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":" * and"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":" * boolean operator that holds the completion"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":" * status of the task"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":" * @author Goh Wei Kiat aka github : mrweikiat"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project \u0027IP\u0027"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"public class Task {"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"    protected String description;"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"    protected boolean isDone;"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"     * This method creates a Task class with"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"     * a String description"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"     * @param description of the given task"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"    public Task(String description) {"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"        this.description \u003d description;"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"        this.isDone \u003d false;"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"     * This method gets the boolean isDone of"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"     * a task and returns the status"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"     * in ticks or crosses"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"     * @return a String indicated completion of task"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"    public String getStatusIcon() {"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"        return (isDone ? \"COMPLETED\" : \"INCOMPLETE\"); //return tick or X symbols"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"    // method to mark task as done"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"    public void markAsDone() {"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"        assert this.isDone \u003d\u003d false : \"Task is already done\";"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"        this.isDone \u003d true;"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":"     * This method returns whether the task is done"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"     * @return boolean value of done status"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"    public boolean getDone() {"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":"        return isDone;"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"     * This method returns the string of description of task"},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"     * @return the description of task"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":"    public String getDescription() {"},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"        return this.description;"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"    public String toString() {"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":71}},{"path":"src/main/java/justin/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":" * This class creates a TaskList class that stores an ArrayList of tasks"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":" * @author Goh Wei Kiat aka github : mrweikiat"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project \u0027IP\u0027"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"public class TaskList {"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"    ArrayList\u003cTask\u003e list;"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"    public TaskList() {"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"        this.list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"        return this.list;"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"     * This method adds a deadline to a task class"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"     * @param text of the User input"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"     * @return text to be printed by Justin"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"    public String addDeadline(String text) {"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"        String newText \u003d text.substring(9); // remove deadline from the string text"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"        String description \u003d newText.substring(0, newText.indexOf(\"/\") - 1);"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"        String date \u003d newText.substring(newText.indexOf(\"/\") + 4);"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"            boolean ifExist \u003d false; // checking if there is an instance of a default tasks"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"            String holder \u003d \"\";"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"            checkDuplicates(description, list);"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"                if (list.get(i).description.equals(description)) { // meaning this is the task we want to change"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"                    Deadline dl \u003d new Deadline(description, date);"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"                    if (list.get(i).isDone) {"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"                        dl.markAsDone();"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":"                    //printLineBreaker();"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"                    holder +\u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"                    list.set(i, dl);// insert into the list"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"                    holder +\u003d \" \" + dl.toString() + \"\\n\";"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":"                    holder +\u003d \"Now you have \" + list.size() + \" tasks in the list\\n\";"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"                    //printLineBreaker();"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"                    ifExist \u003d true;"},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"            if (!ifExist) {"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":"                Deadline dl \u003d new Deadline(description, date);"},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"                printLineBreaker();"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":"                holder +\u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"                list.add(dl);"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":"                holder +\u003d \" \" + dl.toString() + \"\\n\";"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"                holder +\u003d \"Now you have \" + list.size() + \" tasks in the list\\n\";"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"            return holder;"},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":"        } catch (JustinException e) {"},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":"            return e.getMessage();"},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"mrweikiat"},"content":"     * This method adds a new tod0 class"},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":"     * @param description of the given task"},{"lineNumber":82,"author":{"gitId":"mrweikiat"},"content":"     * @return The dialog for Justin"},{"lineNumber":83,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"    public String addToDo(String description) {"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":"        try {"},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":"            boolean ifExist \u003d false; // checking if there is an instance of a default tasks"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":"            checkDuplicates(description, list);"},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":91,"author":{"gitId":"mrweikiat"},"content":"            String holder \u003d \"\";"},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":93,"author":{"gitId":"mrweikiat"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) { // there is an instance of the item in list"},{"lineNumber":94,"author":{"gitId":"mrweikiat"},"content":"                if (list.get(i).description.equals(description)) {"},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":"                    Todo td \u003d new Todo(description);"},{"lineNumber":96,"author":{"gitId":"mrweikiat"},"content":"                    // bringing over information from superclass"},{"lineNumber":97,"author":{"gitId":"mrweikiat"},"content":"                    if (list.get(i).isDone) {"},{"lineNumber":98,"author":{"gitId":"mrweikiat"},"content":"                        td.markAsDone();"},{"lineNumber":99,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":100,"author":{"gitId":"mrweikiat"},"content":"                    list.set(i, td); // insert into list"},{"lineNumber":101,"author":{"gitId":"mrweikiat"},"content":"                    holder +\u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":102,"author":{"gitId":"mrweikiat"},"content":"                    holder +\u003d \" \" + td.toString() + \"\\n\";"},{"lineNumber":103,"author":{"gitId":"mrweikiat"},"content":"                    holder +\u003d \"Now you have \" + list.size() + \" tasks in the list\\n\";"},{"lineNumber":104,"author":{"gitId":"mrweikiat"},"content":"                    ifExist \u003d true;"},{"lineNumber":105,"author":{"gitId":"mrweikiat"},"content":"                }"},{"lineNumber":106,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":108,"author":{"gitId":"mrweikiat"},"content":"            if (!ifExist) {"},{"lineNumber":109,"author":{"gitId":"mrweikiat"},"content":"                Todo td \u003d new Todo(description);"},{"lineNumber":110,"author":{"gitId":"mrweikiat"},"content":"                list.add(td);"},{"lineNumber":111,"author":{"gitId":"mrweikiat"},"content":"                holder +\u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":112,"author":{"gitId":"mrweikiat"},"content":"                holder +\u003d \" \" + td.toString() + \"\\n\";"},{"lineNumber":113,"author":{"gitId":"mrweikiat"},"content":"                holder +\u003d \"Now you have \" + list.size() + \" tasks in the list\\n\";"},{"lineNumber":114,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":116,"author":{"gitId":"mrweikiat"},"content":"            return holder;"},{"lineNumber":117,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":118,"author":{"gitId":"mrweikiat"},"content":"        } catch (JustinException e) {"},{"lineNumber":119,"author":{"gitId":"mrweikiat"},"content":"            return e.getMessage();"},{"lineNumber":120,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":123,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"mrweikiat"},"content":"     * This method adds a new event to the ArrayList"},{"lineNumber":125,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":126,"author":{"gitId":"mrweikiat"},"content":"     * @param text of the User input"},{"lineNumber":127,"author":{"gitId":"mrweikiat"},"content":"     * @return The string output for Justin"},{"lineNumber":128,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":130,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":131,"author":{"gitId":"mrweikiat"},"content":"    public String addEvent(String text) {"},{"lineNumber":132,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":133,"author":{"gitId":"mrweikiat"},"content":"        String eventText \u003d text.substring(text.indexOf(\" \") + 1); // removing the event to get description"},{"lineNumber":134,"author":{"gitId":"mrweikiat"},"content":"        String description \u003d eventText.substring(0, eventText.indexOf(\"/\") - 1);"},{"lineNumber":135,"author":{"gitId":"mrweikiat"},"content":"        String date \u003d eventText.substring(eventText.indexOf(\"/\") + 4);"},{"lineNumber":136,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":137,"author":{"gitId":"mrweikiat"},"content":"        try {"},{"lineNumber":138,"author":{"gitId":"mrweikiat"},"content":"            boolean ifExist \u003d false;"},{"lineNumber":139,"author":{"gitId":"mrweikiat"},"content":"            checkDuplicates(description, list);"},{"lineNumber":140,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":141,"author":{"gitId":"mrweikiat"},"content":"            String holder \u003d \"\";"},{"lineNumber":142,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":143,"author":{"gitId":"mrweikiat"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":144,"author":{"gitId":"mrweikiat"},"content":"                if(list.get(i).description.equals(description)) {"},{"lineNumber":145,"author":{"gitId":"mrweikiat"},"content":"                    Event e \u003d new Event(description, date);"},{"lineNumber":146,"author":{"gitId":"mrweikiat"},"content":"                    if (list.get(i).isDone) {"},{"lineNumber":147,"author":{"gitId":"mrweikiat"},"content":"                        e.markAsDone();"},{"lineNumber":148,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":149,"author":{"gitId":"mrweikiat"},"content":"                    list.set(i, e);"},{"lineNumber":150,"author":{"gitId":"mrweikiat"},"content":"                    holder +\u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":151,"author":{"gitId":"mrweikiat"},"content":"                    holder +\u003d \" \" + e.toString() + \"\\n\";"},{"lineNumber":152,"author":{"gitId":"mrweikiat"},"content":"                    holder +\u003d \"Now you have \" + list.size() + \" tasks in the list\\n\";"},{"lineNumber":153,"author":{"gitId":"mrweikiat"},"content":"                    ifExist \u003d true;"},{"lineNumber":154,"author":{"gitId":"mrweikiat"},"content":"                }"},{"lineNumber":155,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":156,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":157,"author":{"gitId":"mrweikiat"},"content":"            if (!ifExist) {"},{"lineNumber":158,"author":{"gitId":"mrweikiat"},"content":"                Event e \u003d new Event(description, date);"},{"lineNumber":159,"author":{"gitId":"mrweikiat"},"content":"                list.add(e);"},{"lineNumber":160,"author":{"gitId":"mrweikiat"},"content":"                holder +\u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":161,"author":{"gitId":"mrweikiat"},"content":"                holder +\u003d \" \" + e.toString() + \"\\n\";"},{"lineNumber":162,"author":{"gitId":"mrweikiat"},"content":"                holder +\u003d \"Now you have \" + list.size() + \" tasks in the list\\n\";"},{"lineNumber":163,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":164,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":165,"author":{"gitId":"mrweikiat"},"content":"            return holder;"},{"lineNumber":166,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":167,"author":{"gitId":"mrweikiat"},"content":"        } catch (JustinException e) {"},{"lineNumber":168,"author":{"gitId":"mrweikiat"},"content":"            return e.getMessage();"},{"lineNumber":169,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":171,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":173,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":174,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"mrweikiat"},"content":"     * This method deletes a task entry at position num from the list"},{"lineNumber":176,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":177,"author":{"gitId":"mrweikiat"},"content":"     * @param num position of the task to be deleted"},{"lineNumber":178,"author":{"gitId":"mrweikiat"},"content":"     * @throws JustinException cannot delete an invalid entry task"},{"lineNumber":179,"author":{"gitId":"mrweikiat"},"content":"     * @return text for Justin to output"},{"lineNumber":180,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":181,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":182,"author":{"gitId":"mrweikiat"},"content":"    public String delete(String num) throws JustinException {"},{"lineNumber":183,"author":{"gitId":"mrweikiat"},"content":"        try {"},{"lineNumber":184,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":185,"author":{"gitId":"mrweikiat"},"content":"            String holder \u003d \"\";"},{"lineNumber":186,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":187,"author":{"gitId":"mrweikiat"},"content":"            int listNum \u003d Integer.parseInt(num); // changes to int"},{"lineNumber":188,"author":{"gitId":"mrweikiat"},"content":"            Task newTask \u003d list.remove(listNum-1); // delete the entry of choice"},{"lineNumber":189,"author":{"gitId":"mrweikiat"},"content":"            holder +\u003d \"Noted. I\u0027ve removed this task:\\n\";"},{"lineNumber":190,"author":{"gitId":"mrweikiat"},"content":"            holder +\u003d \" \" + newTask.toString() + \"\\n\";"},{"lineNumber":191,"author":{"gitId":"mrweikiat"},"content":"            holder +\u003d \"Now you have \" + list.size() + \" tasks in the list\\n\";"},{"lineNumber":192,"author":{"gitId":"mrweikiat"},"content":"            return holder;"},{"lineNumber":193,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":194,"author":{"gitId":"mrweikiat"},"content":"        } catch(IndexOutOfBoundsException e) {"},{"lineNumber":195,"author":{"gitId":"mrweikiat"},"content":"            throw new JustinException(\"OOPS!!! Cannot delete what you don\u0027t have!\");"},{"lineNumber":196,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":199,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":200,"author":{"gitId":"mrweikiat"},"content":"     * This method returns the string of list of found tasks"},{"lineNumber":201,"author":{"gitId":"mrweikiat"},"content":"     * @param key to be checked with the tasks"},{"lineNumber":202,"author":{"gitId":"mrweikiat"},"content":"     * @return the string of list of found tasks"},{"lineNumber":203,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":204,"author":{"gitId":"mrweikiat"},"content":"    public String find(String key) {"},{"lineNumber":205,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":206,"author":{"gitId":"mrweikiat"},"content":"        String holder \u003d \"\";"},{"lineNumber":207,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":208,"author":{"gitId":"mrweikiat"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":209,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":210,"author":{"gitId":"mrweikiat"},"content":"            String description \u003d list.get(i).getDescription();"},{"lineNumber":211,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":212,"author":{"gitId":"mrweikiat"},"content":"            if (description.contains(key)) {"},{"lineNumber":213,"author":{"gitId":"mrweikiat"},"content":"                holder +\u003d (i+1) + \". \" +list.get(i).toString() + \"\\n\";"},{"lineNumber":214,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":215,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":217,"author":{"gitId":"mrweikiat"},"content":"        return holder;"},{"lineNumber":218,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":220,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":221,"author":{"gitId":"mrweikiat"},"content":"    public static void printLineBreaker() {"},{"lineNumber":222,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":223,"author":{"gitId":"mrweikiat"},"content":"        for (int i \u003d 0; i \u003c 50; i++) {"},{"lineNumber":224,"author":{"gitId":"mrweikiat"},"content":"            System.out.print(\"-\");"},{"lineNumber":225,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"mrweikiat"},"content":"        System.out.println();"},{"lineNumber":227,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":229,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":230,"author":{"gitId":"mrweikiat"},"content":"     * This method checks if there are duplicate tasks in tasklist"},{"lineNumber":231,"author":{"gitId":"mrweikiat"},"content":"     * @param description of the task"},{"lineNumber":232,"author":{"gitId":"mrweikiat"},"content":"     * @param tasks to get the description of current task"},{"lineNumber":233,"author":{"gitId":"mrweikiat"},"content":"     * @throws JustinException cannot add duplicate tasks"},{"lineNumber":234,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":235,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":236,"author":{"gitId":"mrweikiat"},"content":"    static void checkDuplicates(String description, ArrayList\u003cTask\u003e tasks) throws JustinException  {"},{"lineNumber":237,"author":{"gitId":"mrweikiat"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":238,"author":{"gitId":"mrweikiat"},"content":"            if (description.equals(tasks.get(i).getDescription())) {"},{"lineNumber":239,"author":{"gitId":"mrweikiat"},"content":"                throw new JustinException(\"OOPS!!! You cannot add duplicate Tasks!!!!\");"},{"lineNumber":240,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":241,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":242,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":243,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":245,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":246,"author":{"gitId":"mrweikiat"},"content":"     * This method marks a task as done"},{"lineNumber":247,"author":{"gitId":"mrweikiat"},"content":"     * @param num the task number to be marked"},{"lineNumber":248,"author":{"gitId":"mrweikiat"},"content":"     * @return the int of the marked task"},{"lineNumber":249,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":250,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":251,"author":{"gitId":"mrweikiat"},"content":"    public int markDone(String num) {"},{"lineNumber":252,"author":{"gitId":"mrweikiat"},"content":"        int listNum \u003d Integer.parseInt(num); // changes to int"},{"lineNumber":253,"author":{"gitId":"mrweikiat"},"content":"        list.get(listNum - 1).markAsDone();"},{"lineNumber":254,"author":{"gitId":"mrweikiat"},"content":"        return listNum;"},{"lineNumber":255,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":257,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":258,"author":{"gitId":"mrweikiat"},"content":"     * This method adds a normal task to the task list"},{"lineNumber":259,"author":{"gitId":"mrweikiat"},"content":"     * @param text description of the task"},{"lineNumber":260,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":261,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":262,"author":{"gitId":"mrweikiat"},"content":"    public void addTask(String text) {"},{"lineNumber":263,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":264,"author":{"gitId":"mrweikiat"},"content":"        Task holder \u003d new Task(text);"},{"lineNumber":265,"author":{"gitId":"mrweikiat"},"content":"        list.add(holder); // position corresponds to item number"},{"lineNumber":266,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":267,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":268,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":268}},{"path":"src/main/java/justin/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import justin.Task;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":" * This class creates a TOD0 class"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":" * that extends"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":" * from task class"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":" * @author Goh Wei Kiat aka github : mrweikiat"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project \u0027IP\u0027"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"public class Todo extends Task {"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"     * This method creates a new TOD0 class"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"     * @param description of the given class"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"    public Todo(String description) {"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"        super(description);"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":31}},{"path":"src/main/java/justin/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":" * This class contains all the UI methods"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":" * that runs in the Main Justin.java class"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":" * @author Goh Wei Kiat aka github : mrweikiat"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project \u0027IP\u0027"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"public class Ui {"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"    Scanner sc;"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"    static String line \u003d \"-------------------------------------------------------------------------------------------\";"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"    public Ui() {"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"    public String readCommand() {"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"        return sc.nextLine();"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"     * This method outputs the welcome message"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"     * when the user first start the program"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"     * This method outputs the helper"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"     * message when the user"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"     * first start the program"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"     * Then Justin will run"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"     * @return the message to print for Justin"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"    public String showHelpMessage() {"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"        String textHolder \u003d \"\";"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"        textHolder +\u003d \"To add a todo, use command: \\n\" +"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"                \"eg: todo code cs2103\\n\";"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"        textHolder +\u003d \"To add a deadline, use command: \\n\" +"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"                \"eg: deadline fly kite /by 2020-06-10\\n\";"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":"        textHolder +\u003d \"To add a event, use command: \\n\" +"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"                \"eg: event finish iP /at 2020-02-18 18:00\\n\";"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"        textHolder +\u003d \"To find similar tasks, use eg: find my CAP\\n\";"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":"        return textHolder;"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"    public void showEndMessage() {"},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":"     * This method will show the list message for the task"},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"     * @return the UI message for task list"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":"    public String showListMessage() {"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"        return \"Here are the tasks in your list:\\n\";"},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":"     * This method prints the done message"},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":"     * @param tasks tasklist of tasks"},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":"     * @param num the desired task to be marked as done"},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":"     * @return the UI message for done task"},{"lineNumber":79,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":"    public String showDoneMessage(TaskList tasks, String num) {"},{"lineNumber":82,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":83,"author":{"gitId":"mrweikiat"},"content":"        String holder \u003d \"\";"},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":"        int listNum \u003d tasks.markDone(num);"},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"        holder +\u003d \"Nice! I\u0027ve marked this task as done:\\n\";"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":"        holder +\u003d tasks.getList().get(listNum-1).toString() + \"\\n\";"},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":"        return holder;"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":"    public void printLine() {"},{"lineNumber":93,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(line);"},{"lineNumber":94,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":96,"author":{"gitId":"mrweikiat"},"content":"    public void printErrorMessage(String message) {"},{"lineNumber":97,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":98,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(message);"},{"lineNumber":99,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":100,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":102,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"mrweikiat"},"content":"     * This method prints the list in the tasklist"},{"lineNumber":104,"author":{"gitId":"mrweikiat"},"content":"     * @param tasks containing all the tasks"},{"lineNumber":105,"author":{"gitId":"mrweikiat"},"content":"     * @return a Text of tasks descriptions"},{"lineNumber":106,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":108,"author":{"gitId":"mrweikiat"},"content":"    public String printList(TaskList tasks) {"},{"lineNumber":109,"author":{"gitId":"mrweikiat"},"content":"        String holder \u003d \"\";"},{"lineNumber":110,"author":{"gitId":"mrweikiat"},"content":"        for (int i \u003d 0; i \u003c tasks.getList().size(); i++) {"},{"lineNumber":111,"author":{"gitId":"mrweikiat"},"content":"            holder +\u003d (i+1) + \". \" + tasks.getList().get(i).toString() + \"\\n\";"},{"lineNumber":112,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":114,"author":{"gitId":"mrweikiat"},"content":"        return holder;"},{"lineNumber":115,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":117,"author":{"gitId":"mrweikiat"},"content":"    public void printExceptionMessage(String m) {"},{"lineNumber":118,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":119,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(m);"},{"lineNumber":120,"author":{"gitId":"mrweikiat"},"content":"        printSpace();"},{"lineNumber":121,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":122,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":124,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"mrweikiat"},"content":"     * This method prints the UI for task list"},{"lineNumber":126,"author":{"gitId":"mrweikiat"},"content":"     * @param text of the task"},{"lineNumber":127,"author":{"gitId":"mrweikiat"},"content":"     * @return the UI message for task list"},{"lineNumber":128,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":130,"author":{"gitId":"mrweikiat"},"content":"    public String printFoundTask(String text) {"},{"lineNumber":131,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":132,"author":{"gitId":"mrweikiat"},"content":"        String holder \u003d \"\";"},{"lineNumber":133,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":134,"author":{"gitId":"mrweikiat"},"content":"        if (text.isEmpty()) {"},{"lineNumber":135,"author":{"gitId":"mrweikiat"},"content":"            holder +\u003d \"OOPS!! There are no such tasks in the list! Try searching using another\" +"},{"lineNumber":136,"author":{"gitId":"mrweikiat"},"content":"                    \" key word instead!\";"},{"lineNumber":137,"author":{"gitId":"mrweikiat"},"content":"        } else {"},{"lineNumber":138,"author":{"gitId":"mrweikiat"},"content":"            holder +\u003d \"Here are the matching tasks in your list\\n\";"},{"lineNumber":139,"author":{"gitId":"mrweikiat"},"content":"            holder \u003d holder + text;"},{"lineNumber":140,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":142,"author":{"gitId":"mrweikiat"},"content":"        return holder;"},{"lineNumber":143,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":144,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":146,"author":{"gitId":"mrweikiat"},"content":"    public void printSpace() {"},{"lineNumber":147,"author":{"gitId":"mrweikiat"},"content":"        System.out.println();"},{"lineNumber":148,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":150,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"mrweikiat"},"content":"     * This method prints the welcome message"},{"lineNumber":152,"author":{"gitId":"mrweikiat"},"content":"     * @return the welcome message to display"},{"lineNumber":153,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":155,"author":{"gitId":"mrweikiat"},"content":"    public String welcomeMessage() {"},{"lineNumber":156,"author":{"gitId":"mrweikiat"},"content":"        String msg \u003d \"Welcome! I am Justin,\\n\";"},{"lineNumber":157,"author":{"gitId":"mrweikiat"},"content":"        msg +\u003d \"Your personal Timetable planner\\n\";"},{"lineNumber":158,"author":{"gitId":"mrweikiat"},"content":"        msg +\u003d \"Type command \u0027help\u0027 to see what you can do\\n\";"},{"lineNumber":159,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":160,"author":{"gitId":"mrweikiat"},"content":"        return msg;"},{"lineNumber":161,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":163,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"mrweikiat"},"content":"     * This method returns the terminating message"},{"lineNumber":165,"author":{"gitId":"mrweikiat"},"content":"     * @return the terminating message after \u0027bye\u0027 is input"},{"lineNumber":166,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":168,"author":{"gitId":"mrweikiat"},"content":"    public String terminateMessage() {"},{"lineNumber":169,"author":{"gitId":"mrweikiat"},"content":"        return \"See you again soon!\";"},{"lineNumber":170,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":172,"author":{"gitId":"mrweikiat"},"content":"    private String responseMessage \u003d \"\";"},{"lineNumber":173,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":174,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"mrweikiat"},"content":"     * This method returns the response message"},{"lineNumber":176,"author":{"gitId":"mrweikiat"},"content":"     * @return response message"},{"lineNumber":177,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":178,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":179,"author":{"gitId":"mrweikiat"},"content":"    public String getResponseMessage() {"},{"lineNumber":180,"author":{"gitId":"mrweikiat"},"content":"        return responseMessage;"},{"lineNumber":181,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":183,"author":{"gitId":"mrweikiat"},"content":"    /**"},{"lineNumber":184,"author":{"gitId":"mrweikiat"},"content":"     * This method edit adds the response message to the text"},{"lineNumber":185,"author":{"gitId":"mrweikiat"},"content":"     * @param newText of the output"},{"lineNumber":186,"author":{"gitId":"mrweikiat"},"content":"     * @return a new String with response message"},{"lineNumber":187,"author":{"gitId":"mrweikiat"},"content":"     */"},{"lineNumber":188,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":189,"author":{"gitId":"mrweikiat"},"content":"    public String editResponseMessage(String newText) {"},{"lineNumber":190,"author":{"gitId":"mrweikiat"},"content":"        String holder \u003d getResponseMessage();"},{"lineNumber":191,"author":{"gitId":"mrweikiat"},"content":"        holder +\u003d newText;"},{"lineNumber":192,"author":{"gitId":"mrweikiat"},"content":"        return holder;"},{"lineNumber":193,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":195,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":195}},{"path":"src/main/java/justin/gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":":init"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":":win9xME_args"},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":"@rem Slurp the command line arguments."},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":"set _SKIP\u003d2"},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":":win9xME_args_slurp"},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":79,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":82,"author":{"gitId":"mrweikiat"},"content":":execute"},{"lineNumber":83,"author":{"gitId":"mrweikiat"},"content":"@rem Setup the command line"},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":"@rem Execute Gradle"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":91,"author":{"gitId":"mrweikiat"},"content":":end"},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":93,"author":{"gitId":"mrweikiat"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":94,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":":fail"},{"lineNumber":96,"author":{"gitId":"mrweikiat"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":97,"author":{"gitId":"mrweikiat"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":98,"author":{"gitId":"mrweikiat"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":99,"author":{"gitId":"mrweikiat"},"content":"exit /b 1"},{"lineNumber":100,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":101,"author":{"gitId":"mrweikiat"},"content":":mainEnd"},{"lineNumber":102,"author":{"gitId":"mrweikiat"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":103,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":104,"author":{"gitId":"mrweikiat"},"content":":omega"}],"authorContributionMap":{"mrweikiat":104}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" prefHeight\u003d\"194.0\" prefWidth\u003d\"600.0\" style\u003d\"-fx-background-color: #ffffff; -fx-border-color: #EBECF0; -fx-border-width: 10;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"100.0\" prefWidth\u003d\"300.0\" style\u003d\"-fx-background-color: #ffffff;\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"         \u003cfont\u003e"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"            \u003cFont name\u003d\"Comic Sans MS Bold\" size\u003d\"9.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"         \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"    \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"    \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"    \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"mrweikiat":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"justin.MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"         \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"            \u003cFont name\u003d\"Comic Sans MS Bold Italic\" size\u003d\"12.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"         \u003c/font\u003e\u003c/Button\u003e"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"            \u003ccontent\u003e"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #EBECF0;\" /\u003e"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"            \u003c/content\u003e"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"    \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"mrweikiat":23}},{"path":"src/test/java/justin/JustinTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":" * This class performs JUnit tests on the Justin.java class"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":" * ensure that the correct input and output are expected"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":" * @author Goh Wei Kiat aka github : mrweikiat"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project \u0027IP\u0027"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"public class JustinTest {"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"    public void dummyTest() {"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"        assertEquals(2,2);"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":24}},{"path":"src/test/java/justin/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":" * This class performs JUnit test on the Parser.java"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":" * class to ensure input and output are of expected values"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":" * @author Goh Wei Kiat aka github : mrweikiat"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project \u0027IP\u0027"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"public class ParserTest {"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"    String command \u003d \"\";"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"    public void checkCommandTest() throws JustinException {"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"        String expectedOutput2 \u003d \"BYE\";"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"        String expectedOutput \u003d \"TODO\";"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"        Parser parserCheck1 \u003d new Parser(\"todo test command\");"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"        Parser parserCheck2 \u003d new Parser(\"bye\");"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"        assertEquals(expectedOutput, parserCheck1.checkCommand());"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"        assertEquals(expectedOutput2, parserCheck2.checkCommand());"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":34}},{"path":"src/test/java/justin/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"import java.io.BufferedReader;"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"import java.io.FileReader;"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":" * This class performs JUnit test on Storage.java"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":" * to ensure that input and output are of"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":" * expected values"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":" * @author Goh Wei Kiat aka github : mrweikiat"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project \u0027IP\u0027"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"public class StorageTest {"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"    String testPath \u003d \"./testdata/\";"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"    String testFileName \u003d \"data.txt\";"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"    String saveData \u003d \"savedata.txt\";"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"    String filePathLoad \u003d testPath + testFileName;"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"    String filePathSave \u003d testPath + saveData;"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"    public void testLoadFile() throws IOException {"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"        Storage storage \u003d new Storage(filePathLoad);"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"        String testerLoadFile \u003d \"[T][✓] storage test\";"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"        TaskList taskList \u003d storage.loadFile(filePathLoad);"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"        String testDataValue \u003d taskList.getList().get(0).toString();"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"        assertEquals(testerLoadFile, testDataValue );"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"    public void testSaveFile() throws IOException {"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"        Storage storageSave \u003d new Storage(filePathSave);"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"        taskList.addToDo(\"storage test\");"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"        taskList.getList().get(0).markAsDone();"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"        storageSave.saveFile(taskList, filePathSave);"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(filePathSave));"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"        String results \u003d \"\" ;"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"        String line;"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"        while ((line \u003d br.readLine()) !\u003d null) {"},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"            results +\u003d line;"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"        assertEquals(\"T|1|storage test\", results);"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":74}},{"path":"src/test/java/justin/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"package justin;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"import java.io.BufferedReader;"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"import java.io.FileReader;"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":" * This class performs JUnit tests on Task.java"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":" * to ensure that input and output are of"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":" * expected values"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":" *"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":" * @author Goh Wei Kiat aka github : mrweikiat"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":" * @version CS2103T AY20/21 Semester 2, Individual Project \u0027IP\u0027"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":" */"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"public class TaskTest {"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"    public void testTaskGetDescription() {"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"        Task t \u003d new Task(\"testing task\");"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"        assertEquals(\"testing task\", t.getDescription());"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"    public void testTaskMarkAsDone() {"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"        Task t \u003d new Task(\"testing task\");"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"        t.markAsDone();"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"        assertEquals(\"[✓] testing task\", t.toString());"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":42}},{"path":"src/test/testdata/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"T|1|storage test"}],"authorContributionMap":{"mrweikiat":1}},{"path":"src/test/testdata/savedata.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"T|1|storage test"}],"authorContributionMap":{"mrweikiat":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"catch dog"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"catch cat"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"catch mouse"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"list"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"todo catch dog"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"deadline catch cat /by Sunday"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"event catch mouse /at Mon 2-4pm"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"list"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"blah"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"bye"}],"authorContributionMap":{"mrweikiat":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"mrweikiat":1,"-":20}}]
