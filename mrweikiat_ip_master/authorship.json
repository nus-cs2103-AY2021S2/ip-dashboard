[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"    protected String at;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"    public Event(String description, String at) {"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"        this.at \u003d at;"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":14}},{"path":"src/main/java/Justin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"public class Justin {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"        /*"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"         * Justin is a chatbot that help users plan and organise tasks"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"         * Justin stands for JUSt a TImetable(New) : JUSTIN"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"         *"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"         * Justin is able to create and manage new tasks"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"         *   1) Mark tasks off as done"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"         *   2) Set tasks as To Do\u0027s - \u003ckeyword\u003e \u003cname\u003e"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"         *   3) Set tasks as Deadline\u0027s - keyword  : \u003ckeyword\u003e \u003cname\u003e /by \u003cday\u003e"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"         *   4) Set tasks as Event\u0027s - keyword : \u003ckeyword\u003e \u003cname\u003e /at \u003cday time\u003e"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"         *   5) Supports deletion of completed tasks with command delete \u003cint\u003e"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"         *"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"         * Justin also supports viewing the entire tasks list with the command list - keyword : \u003ckeyword\u003e"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"         * To end off the session user can input bye to terminate program - keyword : \u003ckeyword\u003e"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"         *"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"         * @author Goh Wei Kiat aka github : mrweikiat"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"         * @version CS2103T AY20/21 Semester 2, Individual Project \u0027IP\u0027"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"         */"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"        String logoNew \u003d \"     ,--.                    ,--.   ,--.          \\n\" +"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"                \"     |  | ,--.,--.  ,---.  ,-\u0027  \u0027-. `--\u0027 ,--,--,  \\n\" +"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"                \",--. |  | |  ||  | (  .-\u0027  \u0027-.  .-\u0027 ,--. |      \\\\ \\n\" +"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"                \"|  \u0027-\u0027  / \u0027  \u0027\u0027  \u0027 .-\u0027  `)   |  |   |  | |  ||  |  \\n\" +"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"                \" `-----\u0027   `----\u0027  `----\u0027    `--\u0027   `--\u0027 `--\u0027\u0027--\u0027  \\n\";"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"        // Starting line for UI"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(logoNew);"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"        printLineBreaker();"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(\"Hello I\u0027m Justin\");"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"        printLineBreaker();"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"        // Condition for Duke to stop"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"        boolean terminate \u003d false;"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"        // create LinkedList to store information of user inputs"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"        //Duke will keep repeating until command given \"Bye\""},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"        while (!terminate) {"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"            String text \u003d sc.nextLine();"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":"            try {"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"                validate(text);"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":"                if (text.equals(\"bye\")) {"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"                    printLineBreaker();"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"                    printLineBreaker();"},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"                    terminate \u003d true; // terminates Duke"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"                } else if (text.equals(\"list\")) {"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"                    // print all the tasks stored currently in the list"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":"                    printLineBreaker();"},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"                    System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"                        System.out.println(i+1 + \". \" + tasks.get(i).toString());"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":"                    printLineBreaker();"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":"                } else if (text.contains(\"done\")) {"},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":"                    String num \u003d text.substring(5); // take out the int value of the task to be completed"},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":"                    int listNum \u003d Integer.parseInt(num); // changes to int"},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":"                    Task hold \u003d tasks.get(listNum-1);"},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":"                    hold.markAsDone();"},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":79,"author":{"gitId":"mrweikiat"},"content":"                    // format"},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":"                    printLineBreaker();"},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":82,"author":{"gitId":"mrweikiat"},"content":"                    System.out.println(tasks.get(listNum-1).toString());"},{"lineNumber":83,"author":{"gitId":"mrweikiat"},"content":"                    printLineBreaker();"},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"                } else if (text.contains(\"deadline\")) {"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":"                    // insert code for deadline"},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":"                    String newText \u003d text.substring(9); // remove deadline from the string text"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":"                    //System.out.println(newText); // for debugging"},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":91,"author":{"gitId":"mrweikiat"},"content":"                    // set delimiter to take out the description of the deadline"},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":"                    String description \u003d newText.substring(0, newText.indexOf(\"/\")-1);"},{"lineNumber":93,"author":{"gitId":"mrweikiat"},"content":"                    //System.out.println(description); // for debugging"},{"lineNumber":94,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":"                    // set delimiter to take out date of the deadline"},{"lineNumber":96,"author":{"gitId":"mrweikiat"},"content":"                    String date \u003d newText.substring(newText.indexOf(\"/\")+4);"},{"lineNumber":97,"author":{"gitId":"mrweikiat"},"content":"                    //System.out.println(date); // for debugging"},{"lineNumber":98,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":99,"author":{"gitId":"mrweikiat"},"content":"                    printLineBreaker();"},{"lineNumber":100,"author":{"gitId":"mrweikiat"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":101,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":102,"author":{"gitId":"mrweikiat"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":103,"author":{"gitId":"mrweikiat"},"content":"                        if (tasks.get(i).description.equals(description)) { // meaning this is the task we want to change"},{"lineNumber":104,"author":{"gitId":"mrweikiat"},"content":"                            Deadline dl \u003d new Deadline(description, date);"},{"lineNumber":105,"author":{"gitId":"mrweikiat"},"content":"                            if (tasks.get(i).isDone) {"},{"lineNumber":106,"author":{"gitId":"mrweikiat"},"content":"                                dl.markAsDone();"},{"lineNumber":107,"author":{"gitId":"mrweikiat"},"content":"                            }"},{"lineNumber":108,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":109,"author":{"gitId":"mrweikiat"},"content":"                            tasks.set(i, dl);// insert into the list"},{"lineNumber":110,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":111,"author":{"gitId":"mrweikiat"},"content":"                            System.out.println(\" \" + dl.toString());"},{"lineNumber":112,"author":{"gitId":"mrweikiat"},"content":"                            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");"},{"lineNumber":113,"author":{"gitId":"mrweikiat"},"content":"                            printLineBreaker();"},{"lineNumber":114,"author":{"gitId":"mrweikiat"},"content":"                        }"},{"lineNumber":115,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":116,"author":{"gitId":"mrweikiat"},"content":"                } else if (text.contains(\"todo\")) {"},{"lineNumber":117,"author":{"gitId":"mrweikiat"},"content":"                    String description \u003d text.substring(text.indexOf(\" \")+1); // take out the item from the text"},{"lineNumber":118,"author":{"gitId":"mrweikiat"},"content":"                    //System.out.println(description); // for debugging"},{"lineNumber":119,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":120,"author":{"gitId":"mrweikiat"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) { // there is an instance of the item in list"},{"lineNumber":121,"author":{"gitId":"mrweikiat"},"content":"                        if (tasks.get(i).description.equals(description)) {"},{"lineNumber":122,"author":{"gitId":"mrweikiat"},"content":"                            Todo td \u003d new Todo(description);"},{"lineNumber":123,"author":{"gitId":"mrweikiat"},"content":"                            // bringing over information from superclass"},{"lineNumber":124,"author":{"gitId":"mrweikiat"},"content":"                            if (tasks.get(i).isDone) {"},{"lineNumber":125,"author":{"gitId":"mrweikiat"},"content":"                                td.markAsDone();"},{"lineNumber":126,"author":{"gitId":"mrweikiat"},"content":"                            }"},{"lineNumber":127,"author":{"gitId":"mrweikiat"},"content":"                            tasks.set(i, td); // insert into list"},{"lineNumber":128,"author":{"gitId":"mrweikiat"},"content":"                            // formatting"},{"lineNumber":129,"author":{"gitId":"mrweikiat"},"content":"                            printLineBreaker();"},{"lineNumber":130,"author":{"gitId":"mrweikiat"},"content":"                            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":131,"author":{"gitId":"mrweikiat"},"content":"                            System.out.println(\" \" + td.toString());"},{"lineNumber":132,"author":{"gitId":"mrweikiat"},"content":"                            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");"},{"lineNumber":133,"author":{"gitId":"mrweikiat"},"content":"                            printLineBreaker();"},{"lineNumber":134,"author":{"gitId":"mrweikiat"},"content":"                        }"},{"lineNumber":135,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":136,"author":{"gitId":"mrweikiat"},"content":"                } else if (text.contains(\"event\")) {"},{"lineNumber":137,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":138,"author":{"gitId":"mrweikiat"},"content":"                    String newText \u003d text.substring(text.indexOf(\" \")+1); // removing the event to get description"},{"lineNumber":139,"author":{"gitId":"mrweikiat"},"content":"                    System.out.println(newText); // for debugging"},{"lineNumber":140,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":141,"author":{"gitId":"mrweikiat"},"content":"                    // set delimiter to obtain the description and the at"},{"lineNumber":142,"author":{"gitId":"mrweikiat"},"content":"                    String description \u003d newText.substring(0, newText.indexOf(\"/\")-1);"},{"lineNumber":143,"author":{"gitId":"mrweikiat"},"content":"                    String date \u003d newText.substring(newText.indexOf(\"/\")+4);"},{"lineNumber":144,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":145,"author":{"gitId":"mrweikiat"},"content":"                    //System.out.println(description + \" \" + date); // for debugging"},{"lineNumber":146,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":147,"author":{"gitId":"mrweikiat"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":148,"author":{"gitId":"mrweikiat"},"content":"                        if(tasks.get(i).description.equals(description)) {"},{"lineNumber":149,"author":{"gitId":"mrweikiat"},"content":"                            Event e \u003d new Event(description, date);"},{"lineNumber":150,"author":{"gitId":"mrweikiat"},"content":"                            // bringing over info from superclass"},{"lineNumber":151,"author":{"gitId":"mrweikiat"},"content":"                            if (tasks.get(i).isDone) {"},{"lineNumber":152,"author":{"gitId":"mrweikiat"},"content":"                                e.markAsDone();"},{"lineNumber":153,"author":{"gitId":"mrweikiat"},"content":"                            }"},{"lineNumber":154,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":155,"author":{"gitId":"mrweikiat"},"content":"                            tasks.set(i, e); // insert into list"},{"lineNumber":156,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":157,"author":{"gitId":"mrweikiat"},"content":"                            //formatting"},{"lineNumber":158,"author":{"gitId":"mrweikiat"},"content":"                            printLineBreaker();"},{"lineNumber":159,"author":{"gitId":"mrweikiat"},"content":"                            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":160,"author":{"gitId":"mrweikiat"},"content":"                            System.out.println(\" \" + e.toString());"},{"lineNumber":161,"author":{"gitId":"mrweikiat"},"content":"                            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");"},{"lineNumber":162,"author":{"gitId":"mrweikiat"},"content":"                            printLineBreaker();"},{"lineNumber":163,"author":{"gitId":"mrweikiat"},"content":"                        }"},{"lineNumber":164,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":165,"author":{"gitId":"mrweikiat"},"content":"                }"},{"lineNumber":166,"author":{"gitId":"mrweikiat"},"content":"                else if (text.contains(\"delete\")) {"},{"lineNumber":167,"author":{"gitId":"mrweikiat"},"content":"                    String num \u003d text.substring(7); // take out the int value of the task to be completed"},{"lineNumber":168,"author":{"gitId":"mrweikiat"},"content":"                    int listNum \u003d Integer.parseInt(num); // changes to int"},{"lineNumber":169,"author":{"gitId":"mrweikiat"},"content":"                    System.out.println(listNum);"},{"lineNumber":170,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":171,"author":{"gitId":"mrweikiat"},"content":"                    Task newTask \u003d tasks.remove(listNum-1); // delete the entry of choice"},{"lineNumber":172,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":173,"author":{"gitId":"mrweikiat"},"content":"                    //format"},{"lineNumber":174,"author":{"gitId":"mrweikiat"},"content":"                    printLineBreaker();"},{"lineNumber":175,"author":{"gitId":"mrweikiat"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":176,"author":{"gitId":"mrweikiat"},"content":"                    System.out.println(\" \" + newTask.toString());"},{"lineNumber":177,"author":{"gitId":"mrweikiat"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");"},{"lineNumber":178,"author":{"gitId":"mrweikiat"},"content":"                    printLineBreaker();"},{"lineNumber":179,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":180,"author":{"gitId":"mrweikiat"},"content":"                }"},{"lineNumber":181,"author":{"gitId":"mrweikiat"},"content":"                // adding of tasks"},{"lineNumber":182,"author":{"gitId":"mrweikiat"},"content":"                else {"},{"lineNumber":183,"author":{"gitId":"mrweikiat"},"content":"                    printLineBreaker();"},{"lineNumber":184,"author":{"gitId":"mrweikiat"},"content":"                    System.out.println(\"added: \" + text);"},{"lineNumber":185,"author":{"gitId":"mrweikiat"},"content":"                    printLineBreaker();"},{"lineNumber":186,"author":{"gitId":"mrweikiat"},"content":"                    // create new instance of task and add to the list"},{"lineNumber":187,"author":{"gitId":"mrweikiat"},"content":"                    Task holder \u003d new Task(text);"},{"lineNumber":188,"author":{"gitId":"mrweikiat"},"content":"                    tasks.add(holder); // position corresponds to item number"},{"lineNumber":189,"author":{"gitId":"mrweikiat"},"content":"                }"},{"lineNumber":190,"author":{"gitId":"mrweikiat"},"content":"            } catch (Exception m) {"},{"lineNumber":191,"author":{"gitId":"mrweikiat"},"content":"                printLineBreaker();"},{"lineNumber":192,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(m.getMessage());"},{"lineNumber":193,"author":{"gitId":"mrweikiat"},"content":"                printLineBreaker();"},{"lineNumber":194,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":195,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":197,"author":{"gitId":"mrweikiat"},"content":"        sc.close();"},{"lineNumber":198,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":201,"author":{"gitId":"mrweikiat"},"content":"    //  ***** level 5 *****"},{"lineNumber":202,"author":{"gitId":"mrweikiat"},"content":"    static void validate(String text) throws JustinException {"},{"lineNumber":203,"author":{"gitId":"mrweikiat"},"content":"        if (text.length() \u003c 5 \u0026\u0026 text.contains(\"todo\") ) { // case 1"},{"lineNumber":204,"author":{"gitId":"mrweikiat"},"content":"            throw new JustinException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":205,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":206,"author":{"gitId":"mrweikiat"},"content":"        else if (text.contains(\"blah\")) { // case 2"},{"lineNumber":207,"author":{"gitId":"mrweikiat"},"content":"            throw new JustinException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":208,"author":{"gitId":"mrweikiat"},"content":"        } else if (text.length() \u003c 10 \u0026\u0026 text.contains(\"deadline\")) { // case 3"},{"lineNumber":209,"author":{"gitId":"mrweikiat"},"content":"            throw new JustinException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":210,"author":{"gitId":"mrweikiat"},"content":"        } else if (text.length() \u003c 6 \u0026\u0026 text.contains(\"event\")) { // case 4"},{"lineNumber":211,"author":{"gitId":"mrweikiat"},"content":"            throw new JustinException(\"☹ OOPS!!! The description of a event cannot be empty.\");"},{"lineNumber":212,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":215,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":216,"author":{"gitId":"mrweikiat"},"content":"    public static void printLineBreaker() {"},{"lineNumber":217,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":218,"author":{"gitId":"mrweikiat"},"content":"        for (int i \u003d 0; i \u003c 50; i++) {"},{"lineNumber":219,"author":{"gitId":"mrweikiat"},"content":"            System.out.print(\"-\");"},{"lineNumber":220,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"mrweikiat"},"content":"        System.out.println();"},{"lineNumber":222,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"mrweikiat":220,"-":3}},{"path":"src/main/java/JustinException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"public class JustinException extends Exception {"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"    public JustinException(String message) {"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"    public String getStatusIcon() {"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"    // method to mark task as done"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"    public void markAsDone() {"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"        this.isDone \u003d true;"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":23}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"    public Todo(String description) {"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"catch dog"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"catch cat"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"catch mouse"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"list"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"todo catch dog"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"deadline catch cat /by Sunday"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"event catch mouse /at Mon 2-4pm"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"list"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"blah"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"bye"}],"authorContributionMap":{"mrweikiat":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"mrweikiat":1,"-":20}}]
