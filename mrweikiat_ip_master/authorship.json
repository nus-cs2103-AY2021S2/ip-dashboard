[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"E|1|catch dog|2019-12-10 18:00"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"D|0|catch mouse|2020-02-02"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"T|1|catch cat"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"1|catch eagle"}],"authorContributionMap":{"mrweikiat":4}},{"path":"data/justin.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"D|0|catch dog|2021-02-03"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"1|catch cat"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"E|1|catch bird|2019-06-10 19:00"}],"authorContributionMap":{"mrweikiat":3}},{"path":"src/main/justin/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"    protected String by;"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"    protected LocalDate date;"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"        this.by \u003d by;"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"        this.date \u003d LocalDate.parse(by);"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":19}},{"path":"src/main/justin/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"    protected String dateTime;"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"    protected String date;"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"    protected String time;"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"    protected LocalDate date1;"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"    protected LocalTime time1;"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"    public Event(String description, String dateTime) {"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"        String[] splits \u003d dateTime.split(\"\\\\s+\");"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"        this.date \u003d splits[0];"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"        this.time \u003d splits[1];"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"        this.date1 \u003d LocalDate.parse(date);"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"        this.time1 \u003d LocalTime.parse(time);"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" +"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"                time1.format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\";"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":28}},{"path":"src/main/justin/Justin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"public class Justin {"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"    private Storage storage;"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"    private TaskList tasks;"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"    private Ui ui;"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"    public Justin(String filePath) {"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"        ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"        this.storage \u003d new Storage(filePath);"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"        tasks \u003d storage.loadFile(filePath);"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"    public void run() {"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"        /*"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"         * Justin is a chatbot that help users plan and organise tasks"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"         * Justin stands for JUSt a TImetable(New) : JUSTIN"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"         *"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"         * Justin is able to create and manage new tasks"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"         *   1) Mark tasks off as done"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"         *   2) Set tasks as To Do\u0027s - \u003ckeyword\u003e \u003cname\u003e"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"         *   3) Set tasks as Deadline\u0027s - keyword  : \u003ckeyword\u003e \u003cname\u003e /by \u003cday\u003e"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"         *   4) Set tasks as Event\u0027s - keyword : \u003ckeyword\u003e \u003cname\u003e /at \u003cday time\u003e"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"         *   5) Supports deletion of completed tasks with command delete \u003cint\u003e"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"         *"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"         * Justin also supports viewing the entire tasks list with the command list - keyword : \u003ckeyword\u003e"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"         * To end off the session user can input bye to terminate program - keyword : \u003ckeyword\u003e"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"         *"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"         * @author Goh Wei Kiat aka github : mrweikiat"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"         * @version CS2103T AY20/21 Semester 2, Individual Project \u0027IP\u0027"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"         */"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"        // Starting line for UI"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"        ui.showWelcomeMessage();"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"        ui.showHelpMessage();"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"        // Condition for Duke to stop"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"        boolean terminate \u003d false;"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"        //Duke will keep repeating until command given \"Bye\""},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"        while (!terminate) {"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"            String text \u003d sc.nextLine();"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"            Parser pr \u003d new Parser(text);"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"            try {"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"                String command \u003d pr.checkCommand();"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"                switch (command) {"},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":"                    case \"BYE\":"},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":"                        storage.saveFile(tasks, storage.getFilePath());"},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"                        terminate \u003d true; // terminates Duke"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":"                        ui.showEndMessage();"},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"                        break;"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"                    case \"LIST\":"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":"                        ui.showListMessage();"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"                        ui.printList(tasks);"},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":"                        break;"},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":"                    case \"DONE\":"},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":"                        String num \u003d text.substring(5); // take out the int value of the task to be completed"},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":"                        int listNum \u003d Integer.parseInt(num); // changes to int"},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":"                        Task hold \u003d tasks.getList().get(listNum - 1);"},{"lineNumber":79,"author":{"gitId":"mrweikiat"},"content":"                        hold.markAsDone();"},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":"                        ui.showDoneMessage(tasks, listNum);"},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":"                        break;"},{"lineNumber":82,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":83,"author":{"gitId":"mrweikiat"},"content":"                    case \"DEADLINE\":"},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"                        String newText \u003d text.substring(9); // remove deadline from the string text"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":"                        // set delimiter to take out the description of the deadline"},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":"                        String description \u003d newText.substring(0, newText.indexOf(\"/\") - 1);"},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":"                        // set delimiter to take out date of the deadline"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":"                        String date \u003d newText.substring(newText.indexOf(\"/\") + 4);"},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":91,"author":{"gitId":"mrweikiat"},"content":"                        ui.printLine();"},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":"                        tasks.addDeadline(description, date);"},{"lineNumber":93,"author":{"gitId":"mrweikiat"},"content":"                        ui.printLine();"},{"lineNumber":94,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":"                        break;"},{"lineNumber":96,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":97,"author":{"gitId":"mrweikiat"},"content":"                    case \"TODO\":"},{"lineNumber":98,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":99,"author":{"gitId":"mrweikiat"},"content":"                        String descriptionToDo \u003d text.substring(text.indexOf(\" \") + 1); // take out the item from the text"},{"lineNumber":100,"author":{"gitId":"mrweikiat"},"content":"                        tasks.addToDo(descriptionToDo);"},{"lineNumber":101,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":102,"author":{"gitId":"mrweikiat"},"content":"                        break;"},{"lineNumber":103,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":104,"author":{"gitId":"mrweikiat"},"content":"                    case \"EVENT\":"},{"lineNumber":105,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":106,"author":{"gitId":"mrweikiat"},"content":"                        String eventText \u003d text.substring(text.indexOf(\" \") + 1); // removing the event to get description"},{"lineNumber":107,"author":{"gitId":"mrweikiat"},"content":"                        // set delimiter to obtain the description and the at"},{"lineNumber":108,"author":{"gitId":"mrweikiat"},"content":"                        String descriptionEvent \u003d eventText.substring(0, eventText.indexOf(\"/\") - 1);"},{"lineNumber":109,"author":{"gitId":"mrweikiat"},"content":"                        String dateEvent \u003d eventText.substring(eventText.indexOf(\"/\") + 4);"},{"lineNumber":110,"author":{"gitId":"mrweikiat"},"content":"                        // splitting the date and time respectively"},{"lineNumber":111,"author":{"gitId":"mrweikiat"},"content":"                        tasks.addEvent(descriptionEvent, dateEvent);"},{"lineNumber":112,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":113,"author":{"gitId":"mrweikiat"},"content":"                        break;"},{"lineNumber":114,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":115,"author":{"gitId":"mrweikiat"},"content":"                    case \"DELETE\":"},{"lineNumber":116,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":117,"author":{"gitId":"mrweikiat"},"content":"                        String numDelete \u003d text.substring(7); // take out the int value of the task to be completed"},{"lineNumber":118,"author":{"gitId":"mrweikiat"},"content":"                        tasks.delete(numDelete);"},{"lineNumber":119,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":120,"author":{"gitId":"mrweikiat"},"content":"                        break;"},{"lineNumber":121,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":122,"author":{"gitId":"mrweikiat"},"content":"                    case \"FIND\": // for level 9"},{"lineNumber":123,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":124,"author":{"gitId":"mrweikiat"},"content":"                        String findText \u003d text.substring(text.indexOf(\" \")+1); // key for searching"},{"lineNumber":125,"author":{"gitId":"mrweikiat"},"content":"                        ui.printFoundTask(tasks.find(findText));"},{"lineNumber":126,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":127,"author":{"gitId":"mrweikiat"},"content":"                        break;"},{"lineNumber":128,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":129,"author":{"gitId":"mrweikiat"},"content":"                    default:"},{"lineNumber":130,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":131,"author":{"gitId":"mrweikiat"},"content":"                        ui.printLine();"},{"lineNumber":132,"author":{"gitId":"mrweikiat"},"content":"                        System.out.println(\"added: \" + text);"},{"lineNumber":133,"author":{"gitId":"mrweikiat"},"content":"                        ui.printLine();"},{"lineNumber":134,"author":{"gitId":"mrweikiat"},"content":"                        // create new instance of task and add to the list"},{"lineNumber":135,"author":{"gitId":"mrweikiat"},"content":"                        Task holder \u003d new Task(text);"},{"lineNumber":136,"author":{"gitId":"mrweikiat"},"content":"                        tasks.getList().add(holder); // position corresponds to item number"},{"lineNumber":137,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":138,"author":{"gitId":"mrweikiat"},"content":"                }"},{"lineNumber":139,"author":{"gitId":"mrweikiat"},"content":"            } catch (JustinException m) {"},{"lineNumber":140,"author":{"gitId":"mrweikiat"},"content":"                ui.printErrorMessage(m.getMessage());"},{"lineNumber":141,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":143,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":144,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"mrweikiat"},"content":"        sc.close();"},{"lineNumber":146,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":148,"author":{"gitId":"mrweikiat"},"content":"        public static void main(String[]args){"},{"lineNumber":149,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":150,"author":{"gitId":"mrweikiat"},"content":"            String userDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":151,"author":{"gitId":"mrweikiat"},"content":"            String filePath \u003d userDir + File.separator + \"data\" + File.separator + \"justin.txt\";"},{"lineNumber":152,"author":{"gitId":"mrweikiat"},"content":"            new Justin(filePath).run();"},{"lineNumber":153,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":154,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"mrweikiat"},"content":"}"},{"lineNumber":156,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":157,"author":{"gitId":"mrweikiat"},"content":""}],"authorContributionMap":{"mrweikiat":157}},{"path":"src/main/justin/JustinException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"public class JustinException extends Exception {"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"    public JustinException(String message) {"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":5}},{"path":"src/main/justin/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"public class Parser {"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"    private String fullText;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"    public Parser(String fullText) {"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"        this.fullText \u003d fullText;"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"    public String checkCommand() throws JustinException {"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"        try {"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"            validate(fullText);"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"            if (fullText.equals(\"bye\")) {"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"                return \"BYE\";"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"            } else if (fullText.equals(\"list\")) {"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"                return \"LIST\";"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"            } else if (fullText.contains(\"done\")) {"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"                return \"DONE\";"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"            } else if (fullText.contains(\"deadline\")) {"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"                return \"DEADLINE\";"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"            } else if (fullText.contains(\"todo\")) {"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"                return \"TODO\";"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"            } else if (fullText.contains(\"event\")) {"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"                return \"EVENT\";"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"            else if (fullText.contains(\"delete\")) {"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"                return \"DELETE\";"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"            } else if (fullText.contains(\"find\")) {"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"                return \"FIND\";"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"            else {"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":"                return \"ADD\";"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"        } catch (JustinException m) {"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":"            throw new JustinException(m.getMessage());"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"    static void validate(String text) throws JustinException {"},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"        if (text.length() \u003c 5 \u0026\u0026 text.contains(\"todo\") ) { // case 1"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":"            throw new JustinException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":"        else if (text.contains(\"blah\")) { // case 2"},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"            throw new JustinException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":"        } else if (text.length() \u003c 10 \u0026\u0026 text.contains(\"deadline\")) { // case 3"},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"            throw new JustinException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":"        } else if (text.length() \u003c 6 \u0026\u0026 text.contains(\"event\")) { // case 4"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"            throw new JustinException(\"☹ OOPS!!! The description of a event cannot be empty.\");"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":72}},{"path":"src/main/justin/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"import java.io.FileWriter;"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"public class Storage {"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"    protected String filePath;"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"    protected File file;"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"    public Storage(String filePath) {"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"        this.file \u003d new File(filePath);"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":"    public String getFilePath() {"},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"        return this.filePath;"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"    public TaskList loadFile(String filePath)  {"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"        TaskList holder \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":"        if (file.exists()) {"},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"            try {"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"                for (String line : Files.readAllLines(Paths.get(filePath))) {"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"                    //System.out.println(line); // for debugging"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"                    // create an linkedlist to store the split lines"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":"                    String[] splits \u003d line.split(\"\\\\|\", 5);"},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"                    // splits[0] is the holder"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"                    // T is t0do"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"                    // E is event"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"                    // D is deadline"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"                    // else just a vanilla task"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"                    if (splits[0].equals(\"T\")) {"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"                        Todo td \u003d new Todo(splits[2]);"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"                        if (splits[1].equals(\"1\")) {"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"                            td.markAsDone();"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"                        }"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"                        holder.getList().add(td);"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"                    } else if (splits[0].equals(\"D\")) {"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"                        Deadline dl \u003d new Deadline(splits[2], splits[3]);"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"                        if (splits[1].equals(\"1\")) {"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":"                            dl.markAsDone();"},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"                        }"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"                        holder.getList().add(dl);"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"                    } else if (splits[0].equals(\"E\")) {"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":"                        Event e \u003d new Event(splits[2], splits[3]);"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"                        if (splits[1].equals(\"1\")) {"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"                            e.markAsDone();"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"                        }"},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"                        holder.getList().add(e);"},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":"                    else {"},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"                        Task t \u003d new Task(splits[1]);"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":"                        holder.getList().add(t);"},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":"                }"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"            } catch (IOException e) {"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(\"file not found\");"},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"        } else {"},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":"            try {"},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":"                file.getParentFile().mkdirs();"},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":"                file.createNewFile();"},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(\"New file created\");"},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":"            } catch (IOException e) {"},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(\"Error creating file\");"},{"lineNumber":79,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":83,"author":{"gitId":"mrweikiat"},"content":"        return holder;"},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":"    // method to save contents of list onto justin.txt"},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":"    public static void saveFile(TaskList task, String filePath) {"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":"        try {"},{"lineNumber":91,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":"            StringBuffer sb \u003d new StringBuffer(\"\"); // create empty sb to store content of list"},{"lineNumber":93,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":94,"author":{"gitId":"mrweikiat"},"content":"            for (int i \u003d 0; i \u003c task.getList().size(); i++) {"},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":96,"author":{"gitId":"mrweikiat"},"content":"                String holder \u003d \"\"; // to hold content of current line to be stored into sb"},{"lineNumber":97,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":98,"author":{"gitId":"mrweikiat"},"content":"                if (task.getList().get(i) instanceof Todo) { // is a t0do class"},{"lineNumber":99,"author":{"gitId":"mrweikiat"},"content":"                    if (task.getList().get(i).isDone) {"},{"lineNumber":100,"author":{"gitId":"mrweikiat"},"content":"                        holder \u003d \"T\" + \"|\" + \"1\" + \"|\" + task.getList().get(i).description;"},{"lineNumber":101,"author":{"gitId":"mrweikiat"},"content":"                    } else {"},{"lineNumber":102,"author":{"gitId":"mrweikiat"},"content":"                        holder \u003d \"T\" + \"|\" + \"0\" + \"|\" + task.getList().get(i).description;"},{"lineNumber":103,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":104,"author":{"gitId":"mrweikiat"},"content":"                } else if (task.getList().get(i) instanceof Deadline) { // is a deadline class"},{"lineNumber":105,"author":{"gitId":"mrweikiat"},"content":"                    if (task.getList().get(i).isDone) {"},{"lineNumber":106,"author":{"gitId":"mrweikiat"},"content":"                        holder \u003d \"D\" + \"|\" + \"1\" + \"|\" + task.getList().get(i).description + \"|\" + ((Deadline) task.getList().get(i)).by;"},{"lineNumber":107,"author":{"gitId":"mrweikiat"},"content":"                    } else {"},{"lineNumber":108,"author":{"gitId":"mrweikiat"},"content":"                        holder \u003d \"D\" + \"|\" + \"0\" + \"|\" + task.getList().get(i).description + \"|\" + ((Deadline) task.getList().get(i)).by;"},{"lineNumber":109,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":110,"author":{"gitId":"mrweikiat"},"content":"                } else if (task.getList().get(i) instanceof Event) {"},{"lineNumber":111,"author":{"gitId":"mrweikiat"},"content":"                    if (task.getList().get(i).isDone) {"},{"lineNumber":112,"author":{"gitId":"mrweikiat"},"content":"                        holder \u003d \"E\" + \"|\" + \"1\" + \"|\" + task.getList().get(i).description + \"|\" + ((Event) task.getList().get(i)).dateTime;"},{"lineNumber":113,"author":{"gitId":"mrweikiat"},"content":"                    } else {"},{"lineNumber":114,"author":{"gitId":"mrweikiat"},"content":"                        holder \u003d \"E\" + \"|\" + \"1\" + \"|\" + task.getList().get(i).description + \"|\" + ((Event) task.getList().get(i)).dateTime;"},{"lineNumber":115,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":116,"author":{"gitId":"mrweikiat"},"content":"                } else {"},{"lineNumber":117,"author":{"gitId":"mrweikiat"},"content":"                    // vanilla event"},{"lineNumber":118,"author":{"gitId":"mrweikiat"},"content":"                    if (task.getList().get(i).isDone) {"},{"lineNumber":119,"author":{"gitId":"mrweikiat"},"content":"                        holder \u003d \"1\" + \"|\" + task.getList().get(i).description;"},{"lineNumber":120,"author":{"gitId":"mrweikiat"},"content":"                    } else {"},{"lineNumber":121,"author":{"gitId":"mrweikiat"},"content":"                        holder \u003d \"1\" + \"|\" + task.getList().get(i).description;"},{"lineNumber":122,"author":{"gitId":"mrweikiat"},"content":"                    }"},{"lineNumber":123,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":124,"author":{"gitId":"mrweikiat"},"content":"                }"},{"lineNumber":125,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":126,"author":{"gitId":"mrweikiat"},"content":"                if (i \u003c task.getList().size()) {"},{"lineNumber":127,"author":{"gitId":"mrweikiat"},"content":"                    sb.append((holder + \"\\n\"));"},{"lineNumber":128,"author":{"gitId":"mrweikiat"},"content":"                } else {"},{"lineNumber":129,"author":{"gitId":"mrweikiat"},"content":"                    sb.append(holder);"},{"lineNumber":130,"author":{"gitId":"mrweikiat"},"content":"                }"},{"lineNumber":131,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":132,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":134,"author":{"gitId":"mrweikiat"},"content":"            // write content of sb into file"},{"lineNumber":135,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":136,"author":{"gitId":"mrweikiat"},"content":"            FileWriter myWriter \u003d new FileWriter(new File(filePath));"},{"lineNumber":137,"author":{"gitId":"mrweikiat"},"content":"            myWriter.write(sb.toString());"},{"lineNumber":138,"author":{"gitId":"mrweikiat"},"content":"            myWriter.close();"},{"lineNumber":139,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":140,"author":{"gitId":"mrweikiat"},"content":"        } catch(IOException e) {"},{"lineNumber":141,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(\"Unable to write to file justin.txt\");"},{"lineNumber":142,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":145,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":146,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":146}},{"path":"src/main/justin/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"    public String getStatusIcon() {"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"    // method to mark task as done"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"    public void markAsDone() {"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"        this.isDone \u003d true;"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"    // method to return isDone condition"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"    public boolean getDone() {"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"        return isDone;"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"    public String getDescription() {"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"        return this.description;"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":32}},{"path":"src/main/justin/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"    ArrayList\u003cTask\u003e list;"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"    public TaskList() {"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"        this.list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"        return this.list;"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"    public void addDeadline(String description, String date) {"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":"        boolean ifExist \u003d false; // checking if there is an instance of a default tasks"},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"            if (list.get(i).description.equals(description)) { // meaning this is the task we want to change"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":"                Deadline dl \u003d new Deadline(description, date);"},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"                if (list.get(i).isDone) {"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"                    dl.markAsDone();"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"                }"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"                printLineBreaker();"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"                list.set(i, dl);// insert into the list"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(\" \" + dl.toString());"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");"},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"                printLineBreaker();"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"                ifExist \u003d true;"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"        if (!ifExist) {"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"            Deadline dl \u003d new Deadline(description, date);"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"            printLineBreaker();"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"            list.add(dl);"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(\" \" + dl.toString());"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");"},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"    public void addToDo(String description) {"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"        boolean ifExist \u003d false; // checking if there is an instance of a default tasks"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) { // there is an instance of the item in list"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"            if (list.get(i).description.equals(description)) {"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"                Todo td \u003d new Todo(description);"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":"                // bringing over information from superclass"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"                if (list.get(i).isDone) {"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":"                    td.markAsDone();"},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"                }"},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"                list.set(i, td); // insert into list"},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"                // formatting"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":"                printLineBreaker();"},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(\" \" + td.toString());"},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":"                printLineBreaker();"},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"                ifExist \u003d true;"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":"        if (!ifExist) {"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"            // no instance of new task in exisiting list, must create new one"},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":"            Todo td \u003d new Todo(description);"},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":"            list.add(td);"},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":"            // formatting"},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":"            printLineBreaker();"},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(\" \" + td.toString());"},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");"},{"lineNumber":79,"author":{"gitId":"mrweikiat"},"content":"            printLineBreaker();"},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":82,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":"    public void addEvent(String description, String date) {"},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":"        boolean ifExist \u003d false;"},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":"            if(list.get(i).description.equals(description)) {"},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":"                Event e \u003d new Event(description, date);"},{"lineNumber":91,"author":{"gitId":"mrweikiat"},"content":"                // bringing over info from superclass"},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":"                if (list.get(i).isDone) {"},{"lineNumber":93,"author":{"gitId":"mrweikiat"},"content":"                    e.markAsDone();"},{"lineNumber":94,"author":{"gitId":"mrweikiat"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":96,"author":{"gitId":"mrweikiat"},"content":"                list.set(i, e); // insert into list"},{"lineNumber":97,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":98,"author":{"gitId":"mrweikiat"},"content":"                //formatting"},{"lineNumber":99,"author":{"gitId":"mrweikiat"},"content":"                printLineBreaker();"},{"lineNumber":100,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":101,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(\" \" + e.toString());"},{"lineNumber":102,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");"},{"lineNumber":103,"author":{"gitId":"mrweikiat"},"content":"                printLineBreaker();"},{"lineNumber":104,"author":{"gitId":"mrweikiat"},"content":"                ifExist \u003d true;"},{"lineNumber":105,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":108,"author":{"gitId":"mrweikiat"},"content":"        if (!ifExist) {"},{"lineNumber":109,"author":{"gitId":"mrweikiat"},"content":"            Event e \u003d new Event(description, date);"},{"lineNumber":110,"author":{"gitId":"mrweikiat"},"content":"            list.add(e);"},{"lineNumber":111,"author":{"gitId":"mrweikiat"},"content":"            //formatting"},{"lineNumber":112,"author":{"gitId":"mrweikiat"},"content":"            printLineBreaker();"},{"lineNumber":113,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":114,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(\" \" + e.toString());"},{"lineNumber":115,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");"},{"lineNumber":116,"author":{"gitId":"mrweikiat"},"content":"            printLineBreaker();"},{"lineNumber":117,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":120,"author":{"gitId":"mrweikiat"},"content":"    public void delete(String num) throws JustinException {"},{"lineNumber":121,"author":{"gitId":"mrweikiat"},"content":"        try {"},{"lineNumber":122,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":123,"author":{"gitId":"mrweikiat"},"content":"            int listNum \u003d Integer.parseInt(num); // changes to int"},{"lineNumber":124,"author":{"gitId":"mrweikiat"},"content":"            Task newTask \u003d list.remove(listNum-1); // delete the entry of choice"},{"lineNumber":125,"author":{"gitId":"mrweikiat"},"content":"            //format"},{"lineNumber":126,"author":{"gitId":"mrweikiat"},"content":"            printLineBreaker();"},{"lineNumber":127,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":128,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(\" \" + newTask.toString());"},{"lineNumber":129,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");"},{"lineNumber":130,"author":{"gitId":"mrweikiat"},"content":"            printLineBreaker();"},{"lineNumber":131,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":132,"author":{"gitId":"mrweikiat"},"content":"        } catch(IndexOutOfBoundsException e) {"},{"lineNumber":133,"author":{"gitId":"mrweikiat"},"content":"            throw new JustinException(\"OOPS!!! Cannot delete what you don\u0027t have!\");"},{"lineNumber":134,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":137,"author":{"gitId":"mrweikiat"},"content":"    public ArrayList\u003cString\u003e find(String key) {"},{"lineNumber":138,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":139,"author":{"gitId":"mrweikiat"},"content":"        boolean isFound \u003d false; // if any tasks matches description we can return a TaskList"},{"lineNumber":140,"author":{"gitId":"mrweikiat"},"content":"        ArrayList\u003cString\u003e holder \u003d new ArrayList\u003c\u003e();"},{"lineNumber":141,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":142,"author":{"gitId":"mrweikiat"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":143,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":144,"author":{"gitId":"mrweikiat"},"content":"            String description \u003d list.get(i).getDescription();"},{"lineNumber":145,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":146,"author":{"gitId":"mrweikiat"},"content":"            if (description.contains(key)) {"},{"lineNumber":147,"author":{"gitId":"mrweikiat"},"content":"                holder.add(list.get(i).toString());"},{"lineNumber":148,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":149,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":150,"author":{"gitId":"mrweikiat"},"content":"            isFound \u003d true; // there is at least ONE instance of description with key word"},{"lineNumber":151,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":153,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":154,"author":{"gitId":"mrweikiat"},"content":"        return holder;"},{"lineNumber":155,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":156,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":158,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":159,"author":{"gitId":"mrweikiat"},"content":"    public static void printLineBreaker() {"},{"lineNumber":160,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":161,"author":{"gitId":"mrweikiat"},"content":"        for (int i \u003d 0; i \u003c 50; i++) {"},{"lineNumber":162,"author":{"gitId":"mrweikiat"},"content":"            System.out.print(\"-\");"},{"lineNumber":163,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"mrweikiat"},"content":"        System.out.println();"},{"lineNumber":165,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":167,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":167}},{"path":"src/main/justin/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"    public Todo(String description) {"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":11}},{"path":"src/main/justin/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"    Scanner sc;"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"    static String line \u003d \"-------------------------------------------------------------------------------------------\";"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"    static String logo \u003d"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":12,"author":{"gitId":"mrweikiat"},"content":"            \"     ,--.                    ,--.   ,--.          \\n\" +"},{"lineNumber":13,"author":{"gitId":"mrweikiat"},"content":"            \"     |  | ,--.,--.  ,---.  ,-\u0027  \u0027-. `--\u0027 ,--,--,  \\n\" +"},{"lineNumber":14,"author":{"gitId":"mrweikiat"},"content":"            \",--. |  | |  ||  | (  .-\u0027  \u0027-.  .-\u0027 ,--. |      \\\\ \\n\" +"},{"lineNumber":15,"author":{"gitId":"mrweikiat"},"content":"            \"|  \u0027-\u0027  / \u0027  \u0027\u0027  \u0027 .-\u0027  `)   |  |   |  | |  ||  |  \\n\" +"},{"lineNumber":16,"author":{"gitId":"mrweikiat"},"content":"            \" `-----\u0027   `----\u0027  `----\u0027    `--\u0027   `--\u0027 `--\u0027\u0027--\u0027  \\n\";"},{"lineNumber":17,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":18,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":19,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":20,"author":{"gitId":"mrweikiat"},"content":"    public Ui() {"},{"lineNumber":21,"author":{"gitId":"mrweikiat"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":22,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":24,"author":{"gitId":"mrweikiat"},"content":"    public String readCommand() {"},{"lineNumber":25,"author":{"gitId":"mrweikiat"},"content":"        return sc.nextLine();"},{"lineNumber":26,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":28,"author":{"gitId":"mrweikiat"},"content":"    public void showWelcomeMessage() {"},{"lineNumber":29,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":30,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(logo);"},{"lineNumber":31,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":32,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":33,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":35,"author":{"gitId":"mrweikiat"},"content":"    public void showHelpMessage() {"},{"lineNumber":36,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(\"Hello I\u0027m Justin\");"},{"lineNumber":37,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":38,"author":{"gitId":"mrweikiat"},"content":"        printSpace();"},{"lineNumber":39,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(\"To add a todo: use command todo\u003cspace\u003etaskName\");"},{"lineNumber":40,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(\"To add a deadline: use command deadline\u003cspace\u003etaskName\u003cspace\u003e/by\u003cspace\u003eYYYY-MM-DD\");"},{"lineNumber":41,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(\"To add a event: use command event\u003cspace\u003etaskName\u003cspace\u003e/at\u003cspace\u003eYYYY-MM-DD\u003cspace\u003eHH:MM\");"},{"lineNumber":42,"author":{"gitId":"mrweikiat"},"content":"        printSpace();"},{"lineNumber":43,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":44,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":46,"author":{"gitId":"mrweikiat"},"content":"    public void showEndMessage() {"},{"lineNumber":47,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":48,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":49,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":50,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":52,"author":{"gitId":"mrweikiat"},"content":"    public void showListMessage() {"},{"lineNumber":53,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":54,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":55,"author":{"gitId":"mrweikiat"},"content":"        printSpace();"},{"lineNumber":56,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":58,"author":{"gitId":"mrweikiat"},"content":"    public void showDoneMessage(TaskList tasks, int listNum) {"},{"lineNumber":59,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":60,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":61,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(tasks.getList().get(listNum-1).toString());"},{"lineNumber":62,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":63,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":64,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":66,"author":{"gitId":"mrweikiat"},"content":"    public void printLine() {"},{"lineNumber":67,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(line);"},{"lineNumber":68,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":70,"author":{"gitId":"mrweikiat"},"content":"    public void printErrorMessage(String message) {"},{"lineNumber":71,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":72,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(message);"},{"lineNumber":73,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":74,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":76,"author":{"gitId":"mrweikiat"},"content":"    public void printList(TaskList tasks) {"},{"lineNumber":77,"author":{"gitId":"mrweikiat"},"content":"        for (int i \u003d 0; i \u003c tasks.getList().size(); i++) {"},{"lineNumber":78,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(i+1 + \". \" + tasks.getList().get(i).toString());"},{"lineNumber":79,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":81,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":83,"author":{"gitId":"mrweikiat"},"content":"    public void printExceptionMessage(String m) {"},{"lineNumber":84,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":85,"author":{"gitId":"mrweikiat"},"content":"        System.out.println(m);"},{"lineNumber":86,"author":{"gitId":"mrweikiat"},"content":"        printSpace();"},{"lineNumber":87,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":88,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":90,"author":{"gitId":"mrweikiat"},"content":"    public void printFoundTask(ArrayList\u003cString\u003e list) {"},{"lineNumber":91,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":92,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":93,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":94,"author":{"gitId":"mrweikiat"},"content":"        if (list.isEmpty()) {"},{"lineNumber":95,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(\"OOPS!! There are no such tasks in the list! Try searching using another\" +"},{"lineNumber":96,"author":{"gitId":"mrweikiat"},"content":"                    \" key word instead!\");"},{"lineNumber":97,"author":{"gitId":"mrweikiat"},"content":"        } else {"},{"lineNumber":98,"author":{"gitId":"mrweikiat"},"content":"            System.out.println(\"Here are the matching tasks in your list\");"},{"lineNumber":99,"author":{"gitId":"mrweikiat"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":100,"author":{"gitId":"mrweikiat"},"content":"                System.out.println(i+1 + \".\" + list.get(i));"},{"lineNumber":101,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":102,"author":{"gitId":"mrweikiat"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"mrweikiat"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":105,"author":{"gitId":"mrweikiat"},"content":"        printLine();"},{"lineNumber":106,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":107,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":109,"author":{"gitId":"mrweikiat"},"content":"    public void printSpace() {"},{"lineNumber":110,"author":{"gitId":"mrweikiat"},"content":"        System.out.println();"},{"lineNumber":111,"author":{"gitId":"mrweikiat"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"mrweikiat"},"content":""},{"lineNumber":113,"author":{"gitId":"mrweikiat"},"content":"}"}],"authorContributionMap":{"mrweikiat":113}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mrweikiat"},"content":"catch dog"},{"lineNumber":2,"author":{"gitId":"mrweikiat"},"content":"catch cat"},{"lineNumber":3,"author":{"gitId":"mrweikiat"},"content":"catch mouse"},{"lineNumber":4,"author":{"gitId":"mrweikiat"},"content":"list"},{"lineNumber":5,"author":{"gitId":"mrweikiat"},"content":"todo catch dog"},{"lineNumber":6,"author":{"gitId":"mrweikiat"},"content":"deadline catch cat /by Sunday"},{"lineNumber":7,"author":{"gitId":"mrweikiat"},"content":"event catch mouse /at Mon 2-4pm"},{"lineNumber":8,"author":{"gitId":"mrweikiat"},"content":"list"},{"lineNumber":9,"author":{"gitId":"mrweikiat"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"blah"},{"lineNumber":11,"author":{"gitId":"mrweikiat"},"content":"bye"}],"authorContributionMap":{"mrweikiat":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"mrweikiat"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"mrweikiat":1,"-":20}}]
