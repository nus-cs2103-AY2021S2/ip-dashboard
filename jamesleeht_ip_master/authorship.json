[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"    protected String by;"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"    public Deadline(String desc, String by) {"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"        super(desc);"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"        this.by \u003d by;"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    static public Deadline parse(String input) throws DukeException {"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"        String[] arr \u003d input.split(\"deadline\");"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"        if (arr.length \u003c 2) throw new DukeException(\"Deadline description cannot be empty\");"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"        String body \u003d arr[1].strip();"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"        if(!body.trim().isEmpty()) {"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"            String[] parts \u003d body.split(\"/by\");"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"            String desc \u003d parts[0].strip();"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"            String by \u003d parts[1].strip();"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"            return new Deadline(desc, by);"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"            throw new DukeException(\"Deadline description cannot be empty\");"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        return \"[D]\" + getStatusIcon() + \" \" + desc + \" (by: \" + by + \")\";"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"    "},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"        duke.start();"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"    "},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"    // Constants"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    // Attributes"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    private Scanner scanner;"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    private boolean isActive;"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    public Duke() {"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"        this.scanner \u003d new Scanner(System.in);"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"        this.isActive \u003d true;"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    public void start() {"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke\" + \"\\n\""},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"        + \"What can I do for you?\";"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"        print(greeting);"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        while(isActive) {"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"            try {"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"                listen();"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"            } catch (DukeException e) {"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"                print(e.getMessage());"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"    private void listen() throws DukeException {"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        String input \u003d scanner.nextLine();"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        if(input.equals(\"list\")) {"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"            printList();"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"        } else if (input.startsWith(\"done\")) {"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"            int itemNo \u003d Integer.parseInt(input.split(\" \")[1]);"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"            markAsDone(itemNo);"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"        } else if (input.startsWith(\"delete\")) {"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"            int itemNo \u003d Integer.parseInt(input.split(\" \")[1]);"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"            deleteFromList(itemNo);"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"        } else if (input.startsWith(\"todo\")) {"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"            addTask(Todo.parse(input));"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        } else if (input.startsWith(\"deadline\")) {"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"            addTask(Deadline.parse(input));"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        } else if (input.startsWith(\"event\")) {"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"            addTask(Event.parse(input));"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"        } else if (input.equals(\"bye\")) {"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"            bye();"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"        } else {"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"            String error \u003d \"Sorry! I don\u0027t know what that means.\";"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"            throw new DukeException(error);"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"    private void markAsDone(int itemNo) {"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"        Task selected \u003d taskList.get(itemNo - 1);"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"        selected.markAsDone();"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"        String output \u003d \"Marked as done: \\n\" + selected;"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"        print(output);"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"    private void deleteFromList(int itemNo) {"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        Task selected \u003d taskList.get(itemNo - 1);"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"        taskList.remove(itemNo - 1);"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        String output \u003d \"I removed this task: \\n\" + selected;"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"        print(output);"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"    private void printList() {"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"        String output \u003d \"\";"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"        for(int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"            output +\u003d (i + 1) + \". \" + taskList.get(i).toString() + \"\\n\";"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"        print(output);"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"    private void addTask(Task task) {"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"        this.taskList.add(task);"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"        String output \u003d \"I\u0027ve added this task: \\n\" + task.toString()"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"        + \"\\n There are now \" + taskList.size() + \" tasks in the list.\";"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"        print(output);"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"    private void bye() {"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"        this.isActive \u003d false;"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"        String output \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"        print(output);"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"    private void print(String input) {"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"        System.out.println(LINE + \"\\n\" + input + \"\\n\" + LINE + \"\\n\");"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":""}],"authorContributionMap":{"-":6,"jamesleeht":96}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"    public DukeException(String s) {"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"        super(s);"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"    protected String at;"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"    public Event(String desc, String at) {"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"        super(desc);"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"        this.at \u003d at;"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    static public Event parse(String input) throws DukeException {"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"        String[] arr \u003d input.split(\"event\");"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"        if (arr.length \u003c 2) throw new DukeException(\"Event description cannot be empty\");"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"        String body \u003d arr[1].strip();"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"        if(!body.trim().isEmpty()) {"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"            String[] parts \u003d body.split(\"/at\");"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"            String desc \u003d parts[0].strip();"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"            String at \u003d parts[1].strip();"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"            return new Event(desc, at);"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"            throw new DukeException(\"Event description cannot be empty\");"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        return \"[E]\" + getStatusIcon() + \" \" + desc + \" (at: \" + at + \")\";"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":28}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"public abstract class Task {"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"    protected String desc;"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"    public Task(String desc) {"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"        this.desc \u003d desc;"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"    public void markAsDone() {"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"        this.isDone \u003d true;"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    public String getStatusIcon() {"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); "},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"        return getStatusIcon() + \" \" + desc;"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"    public Todo(String desc) {"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"        super(desc);"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"    static public Todo parse(String input) throws DukeException {"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"        String[] arr \u003d input.split(\"todo\");"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"        if (arr.length \u003c 2) throw new DukeException(\"Todo description cannot be empty\");"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"        String body \u003d arr[1].strip();"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"        if (!body.trim().isEmpty()) {"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"            return new Todo(body);"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"        } else {"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"            throw new DukeException(\"Todo description cannot be empty\");"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"        return \"[T]\" + getStatusIcon() + \" \" + desc;"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"todo buy tomato"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"deadline return book /by june 6th"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"todo eat fruits"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"event sing a song /at 5oclock"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"list"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"done 3"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"list"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"bye"}],"authorContributionMap":{"jamesleeht":8}}]
