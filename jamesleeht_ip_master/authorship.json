[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"    private LocalDate by;"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"    public Deadline(String desc, String by) {"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"        super(desc);"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"        this.by \u003d LocalDate.parse(by);"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"    public Deadline(String desc, boolean isDone, String by) {"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"        super(desc, isDone);"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"        this.by \u003d LocalDate.parse(by);"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"     * Factory method to create Deadline task based on input"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"     * @param input User input"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"     * @return Deadline object"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"     * @throws DukeException If parsing input fails"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    static public Deadline parse(String input) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        String[] arr \u003d input.split(\"deadline\");"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"        if (arr.length \u003c 2) {"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"            throw new DukeException(\"Deadline description cannot be empty\");"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"        String body \u003d arr[1].strip();"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        if (!body.trim().isEmpty()) {"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"            String[] parts \u003d body.split(\"/by\");"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"            String desc \u003d parts[0].strip();"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"            String by \u003d parts[1].strip();"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"            return new Deadline(desc, by);"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"            throw new DukeException(\"Deadline description cannot be empty\");"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"     * Convert to file string for saving."},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"     * @return File string"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    public String toFileString() {"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"        return String.format(\"%s|%b|%s|%s\", \"D\", isDone, desc, by);"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"        return \"[D]\" + getStatusIcon() + \" \" + desc + \" (by: \" + by + \")\";"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":54}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"        duke.start();"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"    private boolean isActive;"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    private Storage storage;"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"    private TaskList taskList;"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"    private Ui ui;"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    private Parser parser;"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    public Duke() {"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"        this.isActive \u003d true;"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"        this.taskList \u003d new TaskList(storage.loadTasks());"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"        this.parser \u003d new Parser(taskList, ui);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    private void start() {"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"        ui.greet();"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        while (isActive) {"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"            String input \u003d ui.askForInput();"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"            try {"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"                isActive \u003d parser.parse(input);"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"                storage.saveTasks(taskList.getList());"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"            } catch (DukeException e) {"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"                ui.displayError(e.getMessage());"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":6,"jamesleeht":28}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"    public DukeException(String message) {"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"    private LocalDate at;"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"    public Event(String desc, String at) {"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"        super(desc);"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"        this.at \u003d LocalDate.parse(at);"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"    public Event(String desc, boolean isDone, String at) {"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"        super(desc, isDone);"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"        this.at \u003d LocalDate.parse(at);"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"     * Factory method to create Event task based on input"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"     * @param input User input"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"     * @return Event object"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"     * @throws DukeException If parsing input fails"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    static public Event parse(String input) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        String[] arr \u003d input.split(\"event\");"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"        if (arr.length \u003c 2) {"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"            throw new DukeException(\"Event description cannot be empty\");"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"        String body \u003d arr[1].strip();"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        if (!body.trim().isEmpty()) {"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"            String[] parts \u003d body.split(\"/at\");"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"            String desc \u003d parts[0].strip();"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"            String at \u003d parts[1].strip();"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"            return new Event(desc, at);"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"            throw new DukeException(\"Event description cannot be empty\");"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"     * Convert to file string for saving."},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"     * @return File string"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    public String toFileString() {"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"        return String.format(\"%s|%b|%s|%s\", \"E\", isDone, desc, at);"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"        return \"[E]\" + getStatusIcon() + \" \" + desc + \" (at: \" + at + \")\";"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":54}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":" * Parses commands and executes them."},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"    TaskList taskList;"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    Ui ui;"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"    public Parser(TaskList taskList, Ui ui) {"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"        this.ui \u003d ui;"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"     * Parses user input into commands that are executed."},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"     * @param input User input."},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"     * @return flag to stop the bot"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"     * @throws DukeException If input parsing fails."},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    public boolean parse(String input) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        if (input.equals(\"list\")) {"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"            ui.print(taskList.toString());"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        } else if (input.startsWith(\"find\")) {"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"            String searchTerm \u003d input.split(\" \")[1];"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"            TaskList findResult \u003d taskList.findTasks(searchTerm);"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"            ui.print(findResult.toString());"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        } else if (input.startsWith(\"done\")) {"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"            int itemNo \u003d Integer.parseInt(input.split(\" \")[1]);"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"            Task selected \u003d taskList.markAsDone(itemNo - 1);"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"            ui.displayDone(selected);"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        } else if (input.startsWith(\"delete\")) {"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"            int itemNo \u003d Integer.parseInt(input.split(\" \")[1]);"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"            Task selected \u003d taskList.delete(itemNo - 1);"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"            ui.displayDeleted(selected);"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"        } else if (input.startsWith(\"todo\")) {"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"            Task task \u003d Todo.parse(input);"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"            taskList.add(task);"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"            ui.displayAdded(task);"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        } else if (input.startsWith(\"deadline\")) {"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"            Task task \u003d Deadline.parse(input);"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"            taskList.add(task);"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"            ui.displayAdded(task);"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"        } else if (input.startsWith(\"event\")) {"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"            Task task \u003d Event.parse(input);"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"            taskList.add(task);"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"            ui.displayAdded(task);"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        } else if (input.equals(\"bye\")) {"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"            ui.bye();"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"            return false;"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"            String error \u003d \"Sorry! I don\u0027t know what that means.\";"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"            throw new DukeException(error);"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"        return true;"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":59}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"import java.io.FileWriter;"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":" * Handles loading and saving tasks from/to stored text file."},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":" */"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    private static final String path \u003d \"data/duke.txt\";"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    public Storage() {"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"            new File(\"data\").mkdir();"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"            File file \u003d new File(path);"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"            file.createNewFile();"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"        } catch (IOException e) {"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"            e.printStackTrace();"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"     * Loads list of tasks from file"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"     * @return List of tasks"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    public List\u003cTask\u003e loadTasks() {"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"        List\u003cTask\u003e tl \u003d new ArrayList\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"        List\u003cString\u003e lines \u003d getLines();"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"        for (String line : lines) {"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"            try {"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"                Task task \u003d parseLine(line);"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"                tl.add(task);"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"            } catch (DukeException e) {"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"                e.printStackTrace();"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        return tl;"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"     * Save list of tasks to file"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"     * @param list List of tasks."},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"    public void saveTasks(List\u003cTask\u003e list) {"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"            lines.add(list.get(i).toFileString());"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"        writeLines(lines);"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"    private List\u003cString\u003e getLines() {"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(path));"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"            return lines;"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        } catch (IOException e) {"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"            e.printStackTrace();"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"            return null;"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"    private Task parseLine(String line) throws DukeException {"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"        String[] parts \u003d line.split(\"\\\\|\");"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"        String type \u003d parts[0];"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"        boolean isDone \u003d Boolean.valueOf(parts[1]);"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        String desc \u003d parts[2];"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"        switch (type) {"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"            case \"T\":"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"                return new Todo(desc, isDone);"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"            case \"D\":"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"                return new Deadline(desc, isDone, parts[3]);"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"            case \"E\":"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"                return new Event(desc, isDone, parts[3]);"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"            default:"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"                throw new DukeException(\"String parsing failed\");"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"    private void writeLines(List\u003cString\u003e lines) {"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"        try {"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"            FileWriter fw \u003d new FileWriter(path);"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"            StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"            for (int i \u003d 0; i \u003c lines.size(); i++) {"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"                sb.append(lines.get(i));"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"                if (i !\u003d lines.size() - 1) {"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"                    sb.append(\"\\n\");"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"                }"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"            fw.write(sb.toString());"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"            fw.close();"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"        } catch (IOException e) {"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"            e.printStackTrace();"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":100}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"    protected String desc;"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"    public Task(String desc) {"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"        this.desc \u003d desc;"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"    public Task(String desc, boolean isDone) {"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"        this.desc \u003d desc;"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"     * Mark task as done."},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    public void markAsDone() {"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"     * Get status icon representing done state."},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"     * @return Status icon"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    public String getStatusIcon() {"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"     * Convert to file string for saving."},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"     * @return File string"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"    public String toFileString() {"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        return String.format(\"%s|%b|%s\", \"X\", isDone, desc);"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        return getStatusIcon() + \" \" + desc;"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":44}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":" * Wrapper class around list of tasks to handle operations."},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"     * Get underlying list of tasks."},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"     * @return List of tasks"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    public List\u003cTask\u003e getList() {"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"        return tasks;"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"     * Find tasks that match the search term."},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"     * @param term Search term"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"     * @return TaskList containing filtered results."},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    public TaskList findTasks(String term) {"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        List\u003cTask\u003e result \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"        for (Task task : tasks) {"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"            if(task.desc.contains(term)) {"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"                result.add(task);"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"        return new TaskList(result);"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"     * Get specific task by index."},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"     * @param index Index of task"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"     * @return Task at that index"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    public Task get(int index) {"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"        Task selected \u003d tasks.get(index);"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"        return selected;"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"    public int size() {"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        return tasks.size();"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"     * Mark task as done."},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"     * @param index Index of task"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"     * @return Done task."},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"    public Task markAsDone(int index) {"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        Task selected \u003d tasks.get(index);"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"        selected.markAsDone();"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"        return selected;"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"     * Delete task."},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"     * @param index Index of task"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"     * @return Deleted task."},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"    public Task delete(int index) {"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        Task selected \u003d tasks.get(index);"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"        tasks.remove(index);"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"        return selected;"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"     * Add task."},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"     * @param task Task to be added"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"     * @return Done task."},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"    public void add(Task task) {"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"        this.tasks.add(task);"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"    @Override"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"        String output \u003d \"\";"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"            output +\u003d (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"        return output;"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":97}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"    public Todo(String desc) {"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"        super(desc);"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"    public Todo(String desc, boolean isDone) {"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"        super(desc, isDone);"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"     * Factory method to create Todo task based on input"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"     * @param input User input"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"     * @return Todo object"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"     * @throws DukeException If parsing input fails"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    static public Todo parse(String input) throws DukeException {"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"        String[] arr \u003d input.split(\"todo\");"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"        if (arr.length \u003c 2) {"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"            throw new DukeException(\"Todo description cannot be empty\");"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        String body \u003d arr[1].strip();"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"        if (!body.trim().isEmpty()) {"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"            return new Todo(body);"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"            throw new DukeException(\"Todo description cannot be empty\");"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"     * Convert to file string for saving."},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"     * @return File string"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    public String toFileString() {"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        return String.format(\"%s|%b|%s\", \"T\", isDone, desc);"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        return \"[T]\" + getStatusIcon() + \" \" + desc;"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":46}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":" * Handles I/O with the user."},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"    private Scanner scanner;"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    public Ui() {"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"        scanner \u003d new Scanner(System.in);"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"     * Asks for user input."},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"     * @return User input"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    public String askForInput() {"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"        return scanner.nextLine();"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"     * Greets the user."},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    public void greet() {"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke\" + \"\\n\" + \"What can I do for you?\";"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"        print(greeting);"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"     * Says bye to the user."},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    public void bye() {"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"        String output \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        print(output);"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"     * Display found tasks."},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"     * Display added task."},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"     * @param task Added task"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"    public void displayAdded(Task task) {"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"        String output \u003d \"I\u0027ve added this task: \\n\" + task.toString();"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        print(output);"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"     * Display done task."},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"     * @param task Done task"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"    public void displayDone(Task task) {"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"        String output \u003d \"Marked as done: \\n\" + task;"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"        print(output);"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"     * Display deleted task."},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"     * @param task Deleted task"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"    public void displayDeleted(Task task) {"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"        String output \u003d \"I removed this task: \\n\" + task;"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"        print(output);"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"     * Display error message."},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"     * @param message Error message"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"    public void displayError(String message) {"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"        String output \u003d \"ERROR: \" + message;"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"        print(output);"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"     * Print message wrapped with lines."},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"     * @param input input to print"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"    public void print(String input) {"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"        System.out.println(LINE + \"\\n\" + input + \"\\n\" + LINE + \"\\n\");"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":87}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"public class DeadlineTest {"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    public void parse_emptyInput_exceptionThrown() {"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"            Deadline.parse(\"\");"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"        });"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"        String expected \u003d \"Deadline description cannot be empty\";"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"        String actual \u003d exception.getMessage();"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(actual, expected);"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":18}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"public class DukeTest {"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    public void dummyTest() {"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(2, 2);"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":12}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"    public EventTest() {"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    public void parse_emptyInput_exceptionThrown() {"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"            Event.parse(\"\");"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"        });"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"        String expected \u003d \"Event description cannot be empty\";"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"        String actual \u003d exception.getMessage();"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(actual, expected);"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":""},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"}"}],"authorContributionMap":{"jamesleeht":23}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"T|false|buy tomato"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"D|false|return book|2020-06-06"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"T|true|eat fruits"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"E|false|sing a song|2020-05-09"}],"authorContributionMap":{"jamesleeht":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"todo buy tomato"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"deadline return book /by 2020-06-06"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"todo eat fruits"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"event sing a song /at 2020-05-09"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"list"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"done 3"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"list"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"bye"}],"authorContributionMap":{"jamesleeht":8}}]
