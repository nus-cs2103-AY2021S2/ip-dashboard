[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"# Duke"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"![Checkstyle](https://github.com/lirc572/ip/workflows/Checkstyle/badge.svg)"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"![Text UI Test](https://github.com/lirc572/ip/workflows/Text%20UI%20Test/badge.svg)"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"![Unit Test](https://github.com/lirc572/ip/workflows/Unit%20Test/badge.svg)"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"![Create JAR](https://github.com/lirc572/ip/workflows/Create%20JAR/badge.svg)"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"Duke is the ultimate personal assistant chatbot."},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"## Setting up in IntelliJ"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"1. Open the project in IntelliJ as follows:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":18,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"1. After that, locate the `src/main/java/com/lirc572/ip/Duke.java` file, right-click it, and choose `Run ...`. If the setup is correct, you should see something like the below:"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    ____________________________________________________________"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"      ____        _        "},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     |  _ \\ _   _| | _____ "},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"     | | | | | | | |/ / _ \\"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"     | |_| | |_| |   \u003c  __/"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"     |____/ \\__,_|_|\\_\\___|"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"     Who is the ultimate Personal Assistant Chatbot that helps keep track of various things?"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"     Sou, watashi desu!"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    ____________________________________________________________"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"   ```"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"## Setting up in Visual Studio Code"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"Prerequisites: JDK 11, update Visual Studio Code to the most recent version."},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"1. Open VSCode"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"1. Open the project in VS Code as follows:"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"   1. Click `File`."},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"   1. Click `Open Folder...`."},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"   1. Select the project directory, and click `Select Folder`."},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"   1. If there is a prompt asking you to install the recommended extensions, click `Install`."},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"1. After that, locate the `src/main/java/com/lirc572/ip/Duke.java` file, right-click it, and choose `Run`. If the setup is correct, you should see something like the below:"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"    ____________________________________________________________"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"      ____        _        "},{"lineNumber":52,"author":{"gitId":"-"},"content":"     |  _ \\ _   _| | _____ "},{"lineNumber":53,"author":{"gitId":"-"},"content":"     | | | | | | | |/ / _ \\"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     | |_| | |_| |   \u003c  __/"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     |____/ \\__,_|_|\\_\\___|"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"     Who is the ultimate Personal Assistant Chatbot that helps keep track of various things?"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"     Sou, watashi desu!"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"    ____________________________________________________________"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"lirc572":45,"-":17}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    mainClassName \u003d \"com.lirc572.ip.Duke\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"lirc572":2,"-":44}},{"path":"src/main/java/com/lirc572/ip/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":" * Represents a deadline task (task with a deadline)."},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"     * Format of datetime for parsing and printing."},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    private final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"     * The deadline of the task."},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    private LocalDateTime dueTime;"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"     * Constructs a new DeadlineTask with the specified name."},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"     * @param name The name of the task."},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    public DeadlineTask(String name) {"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"        super(name);"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"     * Constructs a new DeadlineTask with the specified name and deadline."},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"     * @param name The name of the task."},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"     * @param dueTime The deadline of the task."},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    public DeadlineTask(String name, String dueTime) {"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        super(name);"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        if (dueTime !\u003d null) {"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"            this.setDueTime(dueTime);"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"     * Sets the deadline of the DeadlineTask."},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"     * @param dueTime The new deadline."},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    public void setDueTime(String dueTime) {"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        this.dueTime \u003d LocalDateTime.parse(dueTime, this.format);"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"     * Returns the deadline of the DeadlineTask."},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"     * @return The deadline of the DeadlineTask."},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"    public String getDueTime() {"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        return this.dueTime \u003d\u003d null ? null : this.dueTime.format(this.format);"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"     * Returns the string representation of the DeadlineTask for storage."},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"     * @return The string representation of the DeadlineTask for storage."},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"    public String getSavedString() {"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        return String.format("},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"                \"D | %d | %s | %s\","},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"                this.getIsDone() ? 1 : 0,"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"                this.getName(),"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"                this.getDueTime() \u003d\u003d null ? \"null\" : this.getDueTime()"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        );"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"    @Override"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"    public String toString() {"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        return \"[D]\""},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"            + super.toString()"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"            + (this.dueTime !\u003d null ? String.format(\" (by: %s)\", this.getDueTime()) : \"\");"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":82}},{"path":"src/main/java/com/lirc572/ip/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":" * The entry point of the program."},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"     * The task list."},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"    private final TaskList tasks;"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"     * Constructs a Duke object."},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"    public Duke() {"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"        Storage.readFromFile(this.tasks);"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"     * Starts the REPL."},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    public void run() {"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"        Ui.printHorizontalLine();"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"        Ui.printEmptyLine();"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"        Ui.printLogo();"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"        Ui.printEmptyLine();"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        Ui.printLine(\"Who is the ultimate Personal Assistant Chatbot that helps keep track of various things?\");"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        Ui.printLine(\"Sou, watashi desu!\");"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        Ui.printHorizontalLine();"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"        Ui.printEmptyLine();"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        for (; ; ) {"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"            try {"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"                if (!Parser.processCommand(sc.nextLine(), this.tasks)) {"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"                    break;"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"            } catch (Exception e) {"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"                Ui.printError(e);"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"                Ui.printHorizontalLine();"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"                Ui.printEmptyLine();"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        sc.close();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"     * Constructs a Duke object and run it."},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"     * @param args Command line arguments."},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"    public static void main(String[] args) {"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        new Duke().run();"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"lirc572":55,"-":3}},{"path":"src/main/java/com/lirc572/ip/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":" * Represents an event task (task with a time)."},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"public class EventTask extends Task {"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"     * Format of datetime for parsing and printing."},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    private final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"     * the time of the event."},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    private LocalDateTime eventTime;"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"     * Constructs a new EventTask with the specified name."},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"     * @param name The name of the event."},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    public EventTask(String name) {"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"        super(name);"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"     * Constructs a new EventTask with the specified name and time."},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"     * @param name The name of the event."},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"     * @param eventTime The time of the event."},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    public EventTask(String name, String eventTime) {"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        super(name);"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        if (eventTime !\u003d null) {"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"            this.setEventTime(eventTime);"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"     * Sets the time of the EventTask."},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"     * @param eventTime The new time of the event."},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    public void setEventTime(String eventTime) {"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        this.eventTime \u003d LocalDateTime.parse(eventTime, this.format);"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"     * Returns the time of the EventTask."},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"     * @return The time of the EventTask."},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    public String getEventTime() {"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        return this.eventTime \u003d\u003d null ? null : this.eventTime.format(this.format);"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"     * Returns the string representation of the DeadlineTask for storage."},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"     * @return The string representation of the DeadlineTask for storage."},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"    public String getSavedString() {"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        return String.format("},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"                \"E | %d | %s | %s\","},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"                this.getIsDone() ? 1 : 0,"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"                this.getName(),"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"                this.getEventTime() \u003d\u003d null ? \"null\" : this.getEventTime()"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        );"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"    public String toString() {"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        return \"[E]\""},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"                + super.toString()"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"                + (this.eventTime !\u003d null ? String.format(\" (at: %s)\", this.getEventTime()) : \"\");"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":81}},{"path":"src/main/java/com/lirc572/ip/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import java.util.Set;"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import java.util.regex.Matcher;"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import java.util.regex.Pattern;"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":" * Contains static methods for parsing commands."},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"public class Parser {"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"     * All exit commands are listed here."},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"    private static final Set\u003cString\u003e EXIT_COMMANDS \u003d Set.of("},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"            \"bye\", \"exit\", \"quit\""},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    );"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"     * Tokenizes a command."},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"     * @param command A line of command."},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     * @return The tokenized command as a String array."},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    public static String[] tokenizeCommand(String command) {"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cString\u003e tokens \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"        boolean isNewToken \u003d true;"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"        boolean unmatchedQuote \u003d false;"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"        char quotationMark \u003d \u0027 \u0027;"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        for (char ch : command.toCharArray()) {"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"            if (!unmatchedQuote) {"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"                // if not a whitespace character"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"                if (ch !\u003d \u0027 \u0027 \u0026\u0026 ch !\u003d \u0027\\t\u0027) {"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"                    // if right after a whitespace character"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"                    if (isNewToken) {"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"                        // start of a quoted token"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"                        if (ch \u003d\u003d \u0027\"\u0027 || ch \u003d\u003d \u0027\\\u0027\u0027) {"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"                            quotationMark \u003d ch;"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"                            unmatchedQuote \u003d true;"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"                            tokens.add(\"\");"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"                        } else {"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"                            tokens.add(String.valueOf(ch));"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"                            isNewToken \u003d false;"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"                        }"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"                    } else {"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"                        tokens.set(tokens.size() - 1, tokens.get(tokens.size() - 1) + ch);"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"                    }"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"                } else {"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"                    isNewToken \u003d true;"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"            } else {"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"                if (ch !\u003d quotationMark) {"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"                    tokens.set(tokens.size() - 1, tokens.get(tokens.size() - 1) + ch);"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"                } else {"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"                    unmatchedQuote \u003d false;"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"                    isNewToken \u003d true;"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        String[] result \u003d new String[tokens.size()];"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        return tokens.toArray(result);"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"     * Processes a command."},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"     * @param command The command to process."},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"     * @return Whether the program should continue (\u003ccode\u003etrue\u003c/code\u003e if not an exit command)."},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"    public static boolean processCommand(String command, TaskList tasks) throws Exception {"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        String[] tokens \u003d tokenizeCommand(command);"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"        Ui.printHorizontalLine();"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        if (EXIT_COMMANDS.contains(command)) {"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"            Ui.printLine(\"Bye. Hope to see you again soon!\");"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        } else {"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"            if (tokens[0].equals(\"list\")) {"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"                Ui.printLine(\"Here are the tasks in your list:\");"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"                tasks.printAll();"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"            } else if (tokens[0].equals(\"done\")) {"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"                if (tokens.length \u003c 2) {"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"                    throw new Exception(\"Please provide a valid task number!\");"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"                try {"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"                    int taskNumber \u003d Integer.parseInt(tokens[1]);"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"                    if (taskNumber \u003c 1) {"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"                        throw new Exception(\"Please provide a valid task number!\");"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"                    }"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"                    if (taskNumber \u003c\u003d tasks.getSize()) {"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"                        tasks.markAsDone(taskNumber);"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"                        Ui.printLine(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"                        Ui.printLine(String.format(\"  %s\", tasks.getTaskString(taskNumber)));"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"                    } else {"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"                        throw new Exception(\"Task does not exist!\");"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"                    }"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"                    throw new Exception(\"Please provide a valid task number!\");"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"            } else if (tokens[0].equals(\"delete\")) {"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"                if (tokens.length \u003c 2) {"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"                    throw new Exception(\"Please provide a valid task number!\");"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"                try {"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"                    int taskNumber \u003d Integer.parseInt(tokens[1]);"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"                    if (taskNumber \u003c 1) {"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"                        throw new Exception(\"Please provide a valid task number!\");"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"                    }"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"                    if (taskNumber \u003c\u003d tasks.getSize()) {"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"                        String taskString \u003d tasks.delete(taskNumber);"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"                        Ui.printLine(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"                        Ui.printLine(String.format(\"  %s\", taskString));"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"                        Ui.printLine(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"                    } else {"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"                        throw new Exception(\"Task does not exist!\");"},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"                    }"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"                    throw new Exception(\"Please provide a valid task number!\");"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"            } else if (tokens[0].equals(\"todo\")) {"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"                if (tokens.length \u003c 2) {"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"                    throw new Exception(\"Please provide a task name!\");"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"                Task task \u003d new TodoTask(tokens[1]);"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"                tasks.add(task);"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"                Ui.printLine(\"Got it! I\u0027ve added this task:\");"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"                Ui.printLine(\"  \" + task);"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"                Ui.printLine(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"            } else if (tokens[0].equals(\"deadline\")) {"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"                if (tokens.length \u003c 2) {"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"                    throw new Exception(\"Please provide a task name!\");"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"                boolean dueTimeNotProvided \u003d true;"},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":"                for (int index \u003d 2; index \u003c tokens.length; index++) {"},{"lineNumber":135,"author":{"gitId":"lirc572"},"content":"                    if (tokens[index].equals(\"/by\")) {"},{"lineNumber":136,"author":{"gitId":"lirc572"},"content":"                        dueTimeNotProvided \u003d false;"},{"lineNumber":137,"author":{"gitId":"lirc572"},"content":"                        if (index + 1 \u003c tokens.length) {"},{"lineNumber":138,"author":{"gitId":"lirc572"},"content":"                            try {"},{"lineNumber":139,"author":{"gitId":"lirc572"},"content":"                                Task task \u003d new DeadlineTask(tokens[1], tokens[index + 1]);"},{"lineNumber":140,"author":{"gitId":"lirc572"},"content":"                                tasks.add(task);"},{"lineNumber":141,"author":{"gitId":"lirc572"},"content":"                                Ui.printLine(\"Got it! I\u0027ve added this task:\");"},{"lineNumber":142,"author":{"gitId":"lirc572"},"content":"                                Ui.printLine(\"  \" + task);"},{"lineNumber":143,"author":{"gitId":"lirc572"},"content":"                                Ui.printLine(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));"},{"lineNumber":144,"author":{"gitId":"lirc572"},"content":"                            } catch (DateTimeParseException e) {"},{"lineNumber":145,"author":{"gitId":"lirc572"},"content":"                                throw new Exception(\"Datetime in the wrong format!\");"},{"lineNumber":146,"author":{"gitId":"lirc572"},"content":"                            }"},{"lineNumber":147,"author":{"gitId":"lirc572"},"content":"                        } else {"},{"lineNumber":148,"author":{"gitId":"lirc572"},"content":"                            throw new Exception(\"Please provide a valid due time!\");"},{"lineNumber":149,"author":{"gitId":"lirc572"},"content":"                        }"},{"lineNumber":150,"author":{"gitId":"lirc572"},"content":"                        break;"},{"lineNumber":151,"author":{"gitId":"lirc572"},"content":"                    }"},{"lineNumber":152,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":153,"author":{"gitId":"lirc572"},"content":"                if (dueTimeNotProvided) {"},{"lineNumber":154,"author":{"gitId":"lirc572"},"content":"                    Task task \u003d new DeadlineTask(tokens[1]);"},{"lineNumber":155,"author":{"gitId":"lirc572"},"content":"                    tasks.add(task);"},{"lineNumber":156,"author":{"gitId":"lirc572"},"content":"                    Ui.printLine(\"Got it! I\u0027ve added this task:\");"},{"lineNumber":157,"author":{"gitId":"lirc572"},"content":"                    Ui.printLine(\"  \" + task);"},{"lineNumber":158,"author":{"gitId":"lirc572"},"content":"                    Ui.printLine(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));"},{"lineNumber":159,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":160,"author":{"gitId":"lirc572"},"content":"            } else if (tokens[0].equals(\"event\")) {"},{"lineNumber":161,"author":{"gitId":"lirc572"},"content":"                if (tokens.length \u003c 2) {"},{"lineNumber":162,"author":{"gitId":"lirc572"},"content":"                    throw new Exception(\"Please provide a task name!\");"},{"lineNumber":163,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":164,"author":{"gitId":"lirc572"},"content":"                boolean eventTimeNotProvided \u003d true;"},{"lineNumber":165,"author":{"gitId":"lirc572"},"content":"                for (int index \u003d 2; index \u003c tokens.length; index++) {"},{"lineNumber":166,"author":{"gitId":"lirc572"},"content":"                    if (tokens[index].equals(\"/at\")) {"},{"lineNumber":167,"author":{"gitId":"lirc572"},"content":"                        eventTimeNotProvided \u003d false;"},{"lineNumber":168,"author":{"gitId":"lirc572"},"content":"                        if (index + 1 \u003c tokens.length) {"},{"lineNumber":169,"author":{"gitId":"lirc572"},"content":"                            try {"},{"lineNumber":170,"author":{"gitId":"lirc572"},"content":"                                Task task \u003d new EventTask(tokens[1], tokens[index + 1]);"},{"lineNumber":171,"author":{"gitId":"lirc572"},"content":"                                tasks.add(task);"},{"lineNumber":172,"author":{"gitId":"lirc572"},"content":"                                Ui.printLine(\"Got it! I\u0027ve added this task:\");"},{"lineNumber":173,"author":{"gitId":"lirc572"},"content":"                                Ui.printLine(\"  \" + task);"},{"lineNumber":174,"author":{"gitId":"lirc572"},"content":"                                Ui.printLine(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));"},{"lineNumber":175,"author":{"gitId":"lirc572"},"content":"                            } catch (DateTimeParseException e) {"},{"lineNumber":176,"author":{"gitId":"lirc572"},"content":"                                throw new Exception(\"Datetime in the wrong format!\");"},{"lineNumber":177,"author":{"gitId":"lirc572"},"content":"                            }"},{"lineNumber":178,"author":{"gitId":"lirc572"},"content":"                        } else {"},{"lineNumber":179,"author":{"gitId":"lirc572"},"content":"                            throw new Exception(\"Please provide a valid event time!\");"},{"lineNumber":180,"author":{"gitId":"lirc572"},"content":"                        }"},{"lineNumber":181,"author":{"gitId":"lirc572"},"content":"                        break;"},{"lineNumber":182,"author":{"gitId":"lirc572"},"content":"                    }"},{"lineNumber":183,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":184,"author":{"gitId":"lirc572"},"content":"                if (eventTimeNotProvided) {"},{"lineNumber":185,"author":{"gitId":"lirc572"},"content":"                    Task task \u003d new EventTask(tokens[1]);"},{"lineNumber":186,"author":{"gitId":"lirc572"},"content":"                    tasks.add(task);"},{"lineNumber":187,"author":{"gitId":"lirc572"},"content":"                    Ui.printLine(\"Got it! I\u0027ve added this task:\");"},{"lineNumber":188,"author":{"gitId":"lirc572"},"content":"                    Ui.printLine(\"  \" + task);"},{"lineNumber":189,"author":{"gitId":"lirc572"},"content":"                    Ui.printLine(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));"},{"lineNumber":190,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":191,"author":{"gitId":"lirc572"},"content":"            } else if (tokens[0].equals(\"find\")) {"},{"lineNumber":192,"author":{"gitId":"lirc572"},"content":"                if (tokens.length \u003c 2) {"},{"lineNumber":193,"author":{"gitId":"lirc572"},"content":"                    throw new Exception(\"Please provide a valid regex expression!\");"},{"lineNumber":194,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":195,"author":{"gitId":"lirc572"},"content":"                ArrayList\u003cString\u003e matchedTaskStrings \u003d new ArrayList\u003c\u003e();"},{"lineNumber":196,"author":{"gitId":"lirc572"},"content":"                ArrayList\u003cInteger\u003e matchedTaskIndices \u003d new ArrayList\u003c\u003e();"},{"lineNumber":197,"author":{"gitId":"lirc572"},"content":"                Pattern pattern \u003d Pattern.compile(tokens[1], Pattern.CASE_INSENSITIVE);"},{"lineNumber":198,"author":{"gitId":"lirc572"},"content":"                for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) { // i is one-based!"},{"lineNumber":199,"author":{"gitId":"lirc572"},"content":"                    Matcher matcher \u003d pattern.matcher(tasks.getTaskName(i));"},{"lineNumber":200,"author":{"gitId":"lirc572"},"content":"                    if (matcher.find()) {"},{"lineNumber":201,"author":{"gitId":"lirc572"},"content":"                        matchedTaskStrings.add(tasks.getTaskString(i));"},{"lineNumber":202,"author":{"gitId":"lirc572"},"content":"                        matchedTaskIndices.add(i);"},{"lineNumber":203,"author":{"gitId":"lirc572"},"content":"                    }"},{"lineNumber":204,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":205,"author":{"gitId":"lirc572"},"content":"                Ui.printLine(\"Here are the matching tasks in your list:\");"},{"lineNumber":206,"author":{"gitId":"lirc572"},"content":"                for (int i \u003d 0; i \u003c matchedTaskIndices.size(); i++) {"},{"lineNumber":207,"author":{"gitId":"lirc572"},"content":"                    Ui.printLine(String.format(\"%d.%s\", matchedTaskIndices.get(i), matchedTaskStrings.get(i)));"},{"lineNumber":208,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":209,"author":{"gitId":"lirc572"},"content":"            } else {"},{"lineNumber":210,"author":{"gitId":"lirc572"},"content":"                throw new Exception(\"Unknown command!\");"},{"lineNumber":211,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":212,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"lirc572"},"content":"        Storage.saveToFile(tasks);"},{"lineNumber":214,"author":{"gitId":"lirc572"},"content":"        Ui.printHorizontalLine();"},{"lineNumber":215,"author":{"gitId":"lirc572"},"content":"        Ui.printEmptyLine();"},{"lineNumber":216,"author":{"gitId":"lirc572"},"content":"        return !EXIT_COMMANDS.contains(command);"},{"lineNumber":217,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":218}},{"path":"src/main/java/com/lirc572/ip/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import java.util.regex.Pattern;"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":" * Contains storage related static methods."},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"     * The name of the file to store data."},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"    public static final String FILE_NAME \u003d \"tasks.data\";"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"     * Saves the task list to file."},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"     * @param tasks The task list to be stored."},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"    public static void saveToFile(TaskList tasks) {"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"            File fileObj \u003d new File(FILE_NAME);"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"            fileObj.createNewFile();"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_NAME);"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"            fileWriter.write(tasks.toSavedString());"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"            fileWriter.close();"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"            Ui.printError(e);"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"     * Reads the task list from file."},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"    public static void readFromFile(TaskList tasks) {"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"            File fileObj \u003d new File(FILE_NAME);"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"            fileObj.createNewFile();"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"            Scanner fileReader \u003d new Scanner(fileObj);"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"            StringBuilder data \u003d new StringBuilder();"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"            while (fileReader.hasNextLine()) {"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"                data.append(fileReader.nextLine() + \"\\n\");"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"            fileReader.close();"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"            String[] lines \u003d data.toString().split(\"\\n\");"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"            for (String line : lines) {"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"                String[] sections \u003d line.split(Pattern.quote(\" | \"));"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"                if (sections[0].equals(\"T\")) {"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"                    Task task \u003d new TodoTask(sections[2]);"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"                    if (sections[1].equals(\"1\")) {"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"                        task.setIsDone(true);"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"                    }"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"                    tasks.add(task);"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"                } else if (sections[0].equals(\"D\")) {"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"                    Task task \u003d new DeadlineTask(sections[2], sections[3].equals(\"null\") ? null : sections[3]);"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"                    if (sections[1].equals(\"1\")) {"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"                        task.setIsDone(true);"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"                    }"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"                    tasks.add(task);"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"                } else if (sections[0].equals(\"E\")) {"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"                    Task task \u003d new EventTask(sections[2], sections[3].equals(\"null\") ? null : sections[3]);"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"                    if (sections[1].equals(\"1\")) {"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"                        task.setIsDone(true);"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"                    }"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"                    tasks.add(task);"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        } catch (IOException e) {"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"            Ui.printError(e);"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":76}},{"path":"src/main/java/com/lirc572/ip/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":" * Represents a general task."},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"     * Whether the task is done."},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"    private boolean isDone;"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"     * The name of the task."},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    private final String name;"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"     * Constructs a new Task with the specified name."},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"     * @param name The name of the task."},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    public Task(String name) {"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"        this.name \u003d name;"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"        this.isDone \u003d false;"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"     * Returns the name of the Task."},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"     * @return The name of the Task."},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"    public String getName() {"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        return this.name;"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"     * Returns whether the task is done."},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"     * @return Whether the task is done."},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"    public boolean getIsDone() {"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"        return this.isDone;"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"     * Sets whether the task is done."},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"     * @param isDone Whether the task is done."},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    public void setIsDone(boolean isDone) {"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"     * Returns the string representation of the Task for storage."},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"     * @return The string representation of the Task for storage."},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"    public String getSavedString() {"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        return String.format("},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"                \"%d | %s\","},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"                this.getIsDone() ? 1 : 0,"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"                this.getName()"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        );"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"    public String toString() {"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        return String.format(\"[%s] %s\", this.getIsDone() ? \"X\" : \" \", this.getName());"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":71}},{"path":"src/main/java/com/lirc572/ip/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import java.util.function.Consumer;"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":" * Represents a task list."},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"     * An ArrayList of all tasks."},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"     * Constructs a new empty TaskList."},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    public TaskList() {"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"     * Constructs a new TaskList with the specified tasks."},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"     * @param tasks The tasks to be put into the TaskList."},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"     * Clears the task list and put the specified tasks into it as replacement."},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"     * @param tasks The new tasks to put into the task list."},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"    public void replaceWith(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"     * Adds the specified task to the task list."},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"     * @param task The task to be added to the task list."},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    public void add(Task task) {"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        this.tasks.add(task);"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"     * Performs the given action for each element of the Iterable until all elements have been processed."},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"     * This method simply wraps around the forEach() method of the ArrayList \u003ccode\u003etasks\u003c/code\u003e."},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"     * @param action The action to be performed for each element."},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    public void forEach(Consumer\u003c? super Task\u003e action) {"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        tasks.forEach(action);"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"     * Prints all tasks in a formatted manner."},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"    public void printAll() {"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        int index \u003d 0;"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        for (Task task : this.tasks) {"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"            Ui.printLine(String.format(\"%d.%s\", ++index, task.toString()));"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"     * Returns the string representation of the TaskList for storage."},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"     * @return The string representation of the TaskList for storage."},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"    public String toSavedString() {"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        // Convert task list to a string"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        StringBuilder data \u003d new StringBuilder();"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        for (Task task : this.tasks) {"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"            data.append(task.getSavedString() + \"\\n\");"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"        return data.toString();"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"     * Returns the number of tasks in the task list."},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"     * @return The number of tasks in the task list."},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"    public int getSize() {"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        return this.tasks.size();"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"     * Marks the task with the specified index as done."},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"     * @param index The index of the task to be marked as done (one-based)."},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"    public void markAsDone(int index) {"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"        this.tasks.get(index - 1).setIsDone(true);"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"     * Returns the string representation of the task with the specified index."},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"     * @param index The index of the task to get (one-based)."},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"     * @return The string representation of the specified task."},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"    public String getTaskString(int index) {"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"        return this.tasks.get(index - 1).toString();"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"     * Returns the name of the specified task."},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"     * @param index The index of the task."},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"     * @return The name of the task."},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"    public String getTaskName(int index) {"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"        return this.tasks.get(index - 1).getName();"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"     * Deletes the task with the specified index."},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"     * @param index The index of the task to be deleted (one-based)."},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"     * @return The string representation of the task deleted."},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"    public String delete(int index) {"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"        String taskString \u003d this.getTaskString(index);"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"        this.tasks.remove(index - 1);"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"        return taskString;"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":133}},{"path":"src/main/java/com/lirc572/ip/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":" * Represents a todo task (nothing more than a general task)."},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"public class TodoTask extends Task {"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"     * Constructs a new TodoTask with the specified name."},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"     * @param name The name of the task."},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"    public TodoTask(String name) {"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"        super(name);"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"     * Returns the string representation of the TodoTask for storage."},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"     * @return The string representation of the TodoTask for storage."},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    public String getSavedString() {"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"        return String.format("},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"                \"T | %d | %s\","},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"                this.getIsDone() ? 1 : 0,"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"                this.getName()"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"        );"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":35}},{"path":"src/main/java/com/lirc572/ip/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":" * Contains static methods for drawing UI."},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"     * The logo of Duke."},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"    private static final String logo \u003d \" ____        _        \\n\""},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"     * Prints one line of string with spaces in front."},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"     * @param line The line to print."},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    public static void printLine(String line) {"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"        System.out.println(\"     \" + line);"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"     * Prints a horizontal line."},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"    public static void printHorizontalLine() {"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"        System.out.println(\"    \" + \"____________________________________________________________\");"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"     * Prints an empty line."},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    public static void printEmptyLine() {"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        System.out.println();"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"     * Prints the Duke logo."},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    public static void printLogo() {"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        for (String line : logo.split(\"\\n\")) {"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"            printLine(line);"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"     * Prints the specified error message."},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"     * @param errorMessage The error message to print."},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"    public static void printError(String errorMessage) {"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        printLine(\"Error: \" + errorMessage);"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"     * Prints the error message of the specified Exception."},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"     * @param e The Exception whose error message is to be printed."},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"    public static void printError(Exception e) {"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        printError(e.getMessage());"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":66}},{"path":"src/test/java/com/lirc572/ip/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":" * Tests Parser class."},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"public class ParserTest {"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"     * Stringifies an array of Strings"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"     * @param stringArray The String array to be stringified"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"     * @return The string representation of the array"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    private String stringifyStringArray(String[] stringArray) {"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"        StringBuilder result \u003d new StringBuilder(\"{ \");"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"        for (String element: stringArray) {"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"            result.append(element).append(\", \");"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"        return result.substring(0, result.length() - 2) + \" }\";"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"     * Tests stringifyStringArray() method."},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    public void testStringifyStringArray() {"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        final String[][] inputs \u003d new String[][]{"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"            {\"abc\"},"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"            {\"abc\", \"def\"},"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"            {\"abc\", \"def\", \"geh\"}"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        };"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        final String[] outputs \u003d {"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"            \"{ abc }\","},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"            \"{ abc, def }\","},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"            \"{ abc, def, geh }\""},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        };"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"        for (int i \u003d 0; i \u003c inputs.length; i++) {"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"            assertEquals(outputs[i], stringifyStringArray(inputs[i]));"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"     * Tests Parser.tokenizeCommand() method."},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    public void testTokenizeCommand() {"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        final String[] inputs \u003d {"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"            \"\","},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"            \"abc\","},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"            \"abc def\","},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"            \"abc def geh\","},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"            \"todo  \\\"New todo\\\"\","},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"            \"deadline \\\"submit homework\\\" /by 12:00\","},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"            \"event say_hi /at \\\"Sunday morning\\\"\","},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"            \"todo  \u0027New todo\u0027\","},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"            \"deadline \u0027submit homework\u0027 /by 12:00\","},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"            \"event say_hi /at \u0027Sunday morning\u0027\","},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"            \"deadline \\\"CS2103T IP\\\" /at \u0027Wednesday 12:59\u0027\","},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"            \"deadline \\\"CS2103T IP\\\" /at \\\"Wednesday 12:59\\\"\","},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"            \"todo  \\\"New \u0027todo\u0027\\\"\","},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"            \"todo  \\\"have lunch at Prince George\u0027s Park\\\"\","},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"            \"todo  \u0027tell Bob: \\\"Nice to meet you!\\\"\u0027\","},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        };"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        final String[][] outputs \u003d new String[][]{"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"            {},"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"            {\"abc\"},"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"            {\"abc\", \"def\"},"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"            {\"abc\", \"def\", \"geh\"},"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"            {\"todo\", \"New todo\"},"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"            {\"deadline\", \"submit homework\", \"/by\", \"12:00\"},"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"            {\"event\", \"say_hi\", \"/at\", \"Sunday morning\"},"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"            {\"todo\", \"New todo\"},"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"            {\"deadline\", \"submit homework\", \"/by\", \"12:00\"},"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"            {\"event\", \"say_hi\", \"/at\", \"Sunday morning\"},"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"            {\"deadline\", \"CS2103T IP\", \"/at\", \"Wednesday 12:59\"},"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"            {\"deadline\", \"CS2103T IP\", \"/at\", \"Wednesday 12:59\"},"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"            {\"todo\", \"New \u0027todo\u0027\"},"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"            {\"todo\", \"have lunch at Prince George\u0027s Park\"},"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"            {\"todo\", \"tell Bob: \\\"Nice to meet you!\\\"\"},"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"        };"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"        for (int i \u003d 0; i \u003c inputs.length; i++) {"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"            assertArrayEquals(outputs[i], Parser.tokenizeCommand(inputs[i]));"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":92}},{"path":"src/test/java/com/lirc572/ip/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":" * Tests TaskList class."},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"public class TaskListTest {"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"     * Tests TaskList.toSavedString() method."},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    public void testToSavedString() {"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"        tasks.add(new TodoTask(\"hello\"));"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"T | 0 | hello\\n\", tasks.toSavedString());"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"        tasks.add(new TodoTask(\"hi\"));"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"T | 0 | hello\\nT | 0 | hi\\n\", tasks.toSavedString());"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":24}},{"path":"src/test/java/com/lirc572/ip/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":" * Tests Task class."},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"public class TaskTest {"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"     * Tests Task.getName() method."},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"    public void testGetName() {"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"lirc572\", new Task(\"lirc572\").getName());"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"275cril\", new Task(\"275cril\").getName());"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"     * Tests Task.getIsDone() and Task.setIsDone() methods."},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    public void testGetIsDone_setIsDone() {"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"        Task task \u003d new Task(\"lirc572\");"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"        assertFalse(task.getIsDone());"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"        task.setIsDone(true);"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"        assertTrue(task.getIsDone());"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        task.setIsDone(false);"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        assertFalse(task.getIsDone());"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"     * Tests Task.toString() method."},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"    public void testToString() {"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        Task task \u003d new Task(\"lirc572\");"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"[ ] lirc572\", task.toString());"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"        task.setIsDone(true);"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"[X] lirc572\", task.toString());"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"     * Tests Task.toSavedString() method."},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    public void testToSavedString() {"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        Task task \u003d new Task(\"lirc572\");"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"0 | lirc572\", task.getSavedString());"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        task.setIsDone(true);"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"1 | lirc572\", task.getSavedString());"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"list"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"todo \u0027borrow book\u0027"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"deadline \"return book\" /by Sunday"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"event homework /at 05:20"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"event birthday /at \u002711-08-2020 13:14\u0027"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"list"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"list"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"done 2"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"done 3"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"list"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"event haha"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"deadline hoho"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"deadline"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"todo"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"event"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"deadline submit_assignment /by"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"event lecture /at"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"excuseme"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"delete 3"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"list"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"delete 1"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"list"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"delete 4"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"delete 0"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"deadline \"prepare bob\u0027s birthday present\" /by \"20-05-2021 13:14\""},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"list"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"event \"next birthday\" /at \u002711-08-2021 13:14\u0027"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"event \"next next birthday\" /at \u002711-08-2022 13:14\u0027"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"list"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"find next"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"find \"birthday\""},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"find \"next birthday\""},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"find xyz"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"quit"}],"authorContributionMap":{"lirc572":35}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\com\\lirc572\\ip\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"REM remove saved data"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"if exist tasks.data del tasks.data"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"java -cp ..\\bin com.lirc572.ip.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"lirc572":5,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/com/lirc572/ip/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"# remove saved data"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"if [ -e \"./tasks.data\" ]"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"then"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"    rm tasks.data"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"fi"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"java -cp ../bin com.lirc572.ip.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"lirc572":8,"-":36}}]
