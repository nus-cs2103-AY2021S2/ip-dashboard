[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"# Elaina"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"[![Checkstyle](https://github.com/lirc572/ip/workflows/Checkstyle/badge.svg)](https://github.com/lirc572/ip/actions?query\u003dworkflow%3ACheckstyle)"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"[![Unit Test](https://github.com/lirc572/ip/workflows/Unit%20Test/badge.svg)](https://github.com/lirc572/ip/actions?query\u003dworkflow%3A%22Unit+Test%22)"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"[![Create JAR](https://github.com/lirc572/ip/workflows/Create%20JAR/badge.svg)](https://github.com/lirc572/ip/actions?query\u003dworkflow%3A%22Create+JAR%22)"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"[![Netlify Status](https://api.netlify.com/api/v1/badges/36845b44-bacc-4042-b40b-5fdd8695ae61/deploy-status)](https://app.netlify.com/sites/elaina/deploys)"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"Elaina is the ultimate personal assistant chatbot."},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"![Elaina screenshot](docs/Ui.png)"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"## Setting up in IntelliJ"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"1. Open the project in IntelliJ as follows:"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":19,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":20,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"1. After that, locate the `src/main/java/com/lirc572/ip/Starter.java` file, right-click it, and choose `Run ...`. If the setup is correct, you should see a GUI window pop up."},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"## Setting up in Visual Studio Code"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"Prerequisites: JDK 11, update Visual Studio Code to the most recent version."},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"1. Open VSCode"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"1. Open the project in VS Code as follows:"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"   1. Click `File`."},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"   1. Click `Open Folder...`."},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"   1. Select the project directory, and click `Select Folder`."},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"   1. If there is a prompt asking you to install the recommended extensions, click `Install`."},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"1. After that, open a terminal in the project directory and run `./gradlew run`. If the setup is correct, you should see a GUI window pop up."}],"authorContributionMap":{"lirc572":24,"-":10}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    mainClassName \u003d \"com.lirc572.ip.Starter\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    archiveBaseName \u003d \"elaina\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    project.configurations.implementation.canBeResolved \u003d true"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"    configurations \u003d [project.configurations.implementation]"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"lirc572":19,"-":43}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"# Elaina Docs"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"## Build Setup"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"```bash"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"# install dependencies"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"$ yarn install"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"# serve with hot reload"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"$ yarn dev"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"# build for production and launch server"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"$ yarn build"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"$ yarn serve"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"# clear build files"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"$ yarn clean"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"```"}],"authorContributionMap":{"lirc572":13,"-":5}},{"path":"docs/index.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"---"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"home: true"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"actionText: Get Started"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"actionLink: /pages/getting-started"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"altActionText: Learn More"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"altActionLink: /pages/introduction"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"features:"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"  - title: 😘 Cute Bot"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"    details: An all-in-one chatbot with a cute look and personality :)"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"  - title: 💻 Cross Platform"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    details: Runs on all major desktop Operating Systems"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"  - title: 🛠️ Productivity Features"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    details: Your powerful todo list"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"footer: Copyright © 2021-present lirc572"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"---"}],"authorContributionMap":{"lirc572":19}},{"path":"docs/pages/developer-guide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"# Developer Guide"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"## Development Environment Setup"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"We recommend developing Elaina with [IntelliJ Idea](#setup-for-intellij-idea) or [Visual Studio Code](#setup-for-visual-studio-code). Depending on which one you prefer, follow one of the sections below."},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"### Setup for IntelliJ Idea"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"See [Setting up in IntelliJ](https://github.com/lirc572/ip#setting-up-in-intellij)"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"### Setup for Visual Studio Code"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"See [Setting up in Visual Studio Code](https://github.com/lirc572/ip#setting-up-in-visual-studio-code)"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"## Documentation"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"Elaina\u0027s documentation uses [VitePress](https://vitepress.vuejs.org/), hosted on [Netlify](https://www.netlify.com/). The documentation sources are under the `/docs` directory. "},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"VitePress is used so that we can add custom [Vue.js components](https://vuejs.org/v2/guide/single-file-components.html) in the documentation. VitePress is simply awesome. We recommand using it for all future technical documentations. "},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"We use a simple [Netlify function](https://docs.netlify.com/functions/overview/) to create an API that provides a dowloadable link to the latest JAR release of Elaina."},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"::: tip Notes"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"[Node.js](https://nodejs.org/) version \u003e\u003d 12.0.0 is required to preview or build the documentation."},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"We use `yarn` to manage Node dependencies, but if you have a strong reason to use `npm` instead, make sure you do not commit your `package-lock.json`."},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":":::"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"### Install Node Dependencies"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"```bash"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"# cd to the /docs directory:"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"cd docs"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"# Install Node dependencies:"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"yarn install"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"```"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"### Run a Development Server of the Documentation"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"```bash"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"# Under the /docs directory"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"yarn dev"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"```"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"Then follow your command line output to open one of the preview URLs in your browser."},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"### Build the Documentation"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"```bash"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"# Under the /docs directory"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"yarn build"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"```"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"Then the static website will be generated under the `/docs/.vitepress/dist` directory."},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"### Preview the Built Documentation"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"```bash"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"# Under the /docs directory"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"# Make sure you run yarn build before this"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"yarn serve"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"```"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"It would launch a server that serves the content under the `/docs/.vitepress/dist` directory."},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"### Clean the Build Files"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"```bash"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"# Under the /docs directory"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"yarn clean"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"```"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"### Things to Note"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"- `docs/.vitepress/components/DownloadLink.vue` is a Vue.js component that calles our Netlify function to get the link to the latest release of Elaina executable."},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"- `docs/netlify/functions/jar_url.js` is the Netlify function that fetches the URL to the latest release of Elaina executable using GitHub REST API."},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"- `docs/CNAME` is there so that GitHub pages will automatically send a `301` response for requests made to the default GitHub pages URL to redirect to \u003celaina.lirc572.com\u003e if GitHub pages is enabled. GitHub may send you an email about incorrect DNS records, but it can be ignored since we only enabled GitHub pages for its redirection function."},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"## DevOps"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"We use [GitHub Actions](https://docs.github.com/actions) for automated testing and release. You are advised to learn the basics of GitHub Actions before making changes to the GitHub workflows."},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"### Continuous Integration"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"- Checkstyle:"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"  - `.github/workflows/checkstyle.yml` runs checkstyle on push"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"- Unit testing:"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"  - `.github/workflows/unit-test.yml` runs unit tests with JUnit on push"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"- Create release:"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"  - `.github/workflows/package.yml` creates a new release with an executable JAR file on push of tags with the name of `v*`"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"### Create a Release"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"To create a new release, simply create a new tag with version number in the format of `v*`, then push the tag to GitHub. GitHub Actions will handle the rest for you~"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"```bash"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"git tag v1.0"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"git push origin v1.0"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"```"}],"authorContributionMap":{"lirc572":103}},{"path":"docs/pages/download.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"# Download"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"Elaina works under Windows, Mac OSX and Linux, as long as you have a Java SE Runtime Environment of version 11 or above."},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"\u003cDownloadLink /\u003e"}],"authorContributionMap":{"lirc572":5}},{"path":"docs/pages/getting-started.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"# Getting Started"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"1. Download the latest `Elaina.jar` executable from [Download](/pages/download)"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"1. Move `Elaina.jar` to a desired location (note that a file named `tasks.data` will be created in the same folder to store data)"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"1. Double click on `Elaina.jar` or run `java -jar Elaina.jar` to open it"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"1. Type [commands](#commands) in the textfield at the bottom and send it by clicking on send button or pressing enter key"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"   - E.g. `todo Visit \"https://lirc572.com\"`"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"1. Exit when you are done by clicking on the close button at the top or typing `bye`"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"## Next Steps"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"Now that you have a basic understanding of how to start using Elaina, you can head over to the [User Guide](/pages/user-guide)"}],"authorContributionMap":{"lirc572":12}},{"path":"docs/pages/introduction.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"# What is Elaina"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"Elaina is the ultimate personal assistant chatbot that can boost your productivity. It runs on all major Desktop Operating Systems."},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"![Hero](/Ui.png)"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"\u003cstyle\u003e"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"img"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"{"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"  display: block;"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"  margin-left: auto;"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"  margin-right: auto;"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"  -moz-transition: all 0.5s ease;"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"  -webkit-transition: all 0.5s ease;"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"  -o-transition: all 0.5s ease;"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"  transition: all 0.5s ease;"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"}"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"img:hover"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"{"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"  -moz-transform: scale(1.05);"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"  -webkit-transform: scale(1.05);"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"  -o-transform: scale(1.05);"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"  transform: scale(1.05);"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"}"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"\u003c/style\u003e"}],"authorContributionMap":{"lirc572":25}},{"path":"docs/pages/troubleshooting.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"# Troubleshooting"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"## Cannot Open Elaina"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"Make sure you are running Java SE Version 11 or above. You can check your Java version in a terminal as follows:"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"```bash"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"$ java --version"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"java 11.0.9 2020-10-20 LTS"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"Java(TM) SE Runtime Environment 18.9 (build 11.0.9+7-LTS)"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.9+7-LTS, mixed mode)"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"```"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"## Elaina Shows Blank Screen"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"Make sure your are not running on a Mac VM. If you are, try disabling hardware acceleration."},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"References:"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"- \u003chttp://mail.openjdk.java.net/pipermail/openjfx-dev/2016-April/018974.html\u003e"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"- \u003chttps://communities.vmware.com/t5/VMware-Fusion-Discussions/JavaFX-8-apps-don-t-render-correctly-under-OS-X-10-10-and-10-11/m-p/2215478\u003e"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"- \u003chttps://stackoverflow.com/questions/18754803/how-to-disable-or-bypass-hardware-graphics-accelerationprism-in-javafx\u003e"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"## Links Do Not Work"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"If you are running Elaina on Linux, it is possible that your system is missing some libraries required. Try installing `libgnome` and see if the problem is solved."},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"## Other Problems"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"If you encounter any problems while using Elaina, feel free to contact our developers via [GitHub Issue](https://github.com/lirc572/ip/issues/new/choose)!"}],"authorContributionMap":{"lirc572":30}},{"path":"docs/pages/user-guide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"## Get Started"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"If you are new to Elaina, it is advised to read [Getting Started](/pages/getting-started) first!"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"## Features"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"### Commands"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"::: tip Notes"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"- each command consists of **tokens** that can be:"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"  - either a single word (characters without whitespaces)"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"  - or some words surrounded by single or double quotation marks"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"- `[...]`: optional arguments (tokens between square brackets are not necessary)"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"- `\u003cTASKNAME\u003e`: a *token* that represents the name of the task"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"- `\u003cDATETIME\u003e`: a *token* that represents a date time in the format of `dd-mm-yyyy HH:MM` **(must be surrounded by single or double quotation marks because of the space in between)**"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"- `\u003cNUM\u003e`: a number (e.g. `0`, `1`, `2`)"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"- `\u003cREGEX\u003e`: a *token* in the form of a [regular expression](https://www3.ntu.edu.sg/home/ehchua/programming/howto/Regexe.html)"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":":::"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"#### `todo` - add a new todo task"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"- Format: `todo \u003cTASKNAME\u003e`"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"- Description:"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"  - Create a new todo task with the specified name."},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"- Examples:"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"  - `todo sleep`"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"  - `todo \u0027do homework\u0027`"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"  - `todo \"do code review\"`"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"#### `event` - add a new event task"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"- Format: `event \u003cTASKNAME\u003e [/at \u003cDATETIME\u003e]`"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"- Description:"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"  - Create a new event task with the specified name (and date time if provided)."},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"- Examples:"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"  - `event tutorial`"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"  - `event \u0027CS2101 OP\u0027 /at \u002705-02-2021 10:00\u0027`"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"  - `event サヤの誕生日 /at \"08-03-2021 08:11\"`"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"#### `deadline` - add a new deadline task"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"- Format: `deadline \u003cTASKNAME\u003e [/by \u003cDATETIME\u003e]`"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"- Description:"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"  - Create a new deadline task with the specified name (and date time if provided)."},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"- Examples:"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"  - `deadline \"CS6666 Assignment\"`"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"  - `deadline \u0027CS2101 deadline\u0027 /by \u002719-02-2021 23:59\u0027`"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"  - `deadline \"Prepare Elaina\u0027s birthday present\" /by \"01-08-2021 05:20\"`"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"#### `clear` - clear chat history"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"- Format: `clear`"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"- Description:"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"  - Clear screen."},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"- Examples:"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"  - `clear`"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"#### `delete` - delete a task"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"- Format: `delete \u003cNUM\u003e`"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"- Description:"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"  - Delete a saved task of the given number."},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"- Examples:"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"  - `delete 0`"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"  - `delete 1`"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"#### `find` - search for tasks"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"- Format: `find \u003cREGEX\u003e`"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"- Description:"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"  - Search for tasks by [regular expression](https://www3.ntu.edu.sg/home/ehchua/programming/howto/Regexe.html)."},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"- Examples:"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"  - `find assignment`"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"  - `find \"https?:\\\\/\\\\/(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#\u003d]{1,256}\\\\.[a-zA-Z0-9()]{1,6}\\\\b([-a-zA-Z0-9()@:%_\\\\+.~#?\u0026//\u003d]*)\"`"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"#### `list` - list all tasks"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"- Format: `list`"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"- Description:"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"  - List all tasks that have been added."},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"- Examples:"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"  - `list`"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"#### `exit` / `bye` / `quit` / `sayonara` / `さよなら` - exit from Elaina"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"- Format: `exit` / `bye` / `quit` / `sayonara` / `さよなら`"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"- Description:"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"  - Exit from Elaina."},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"- Examples:"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"  - `exit`"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"  - `bye`"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"  - `quit`"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"  - `sayonara`"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"  - `さよなら`"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"#### `help` - show help message"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"- Format: `help`"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"- Description:"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"  - Show a help message."},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"- Examples:"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"  - `help`"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"### Others"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"- Clickable links"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"  - URLs starting with `http` and `https` are automatically converted to clickable links"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"## Appendix A: List of Commands"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"::: tip Notes"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"- each command consists of **tokens** that can be:"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"  - either a single word (characters without whitespaces)"},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"  - or some words surrounded by single or double quotation marks"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"- `[...]`: optional arguments (tokens between square brackets are not necessary)"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"- `\u003cTASKNAME\u003e`: a *token* that represents the name of the task"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"- `\u003cDATETIME\u003e`: a *token* that represents a date time in the format of `dd-mm-yyyy HH:MM` **(must be surrounded by single or double quotation marks because of the space in between)**"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"- `\u003cNUM\u003e`: a number (e.g. `0`, `1`, `2`)"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"- `\u003cREGEX\u003e`: a *token* in the form of a [regular expression](https://www3.ntu.edu.sg/home/ehchua/programming/howto/Regexe.html)"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":":::"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"Below is a list of all supported commands in alphabetical order:"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"| Command  | Format                                 | Description                            |"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"|:--------:|:--------------------------------------:|:--------------------------------------:|"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"| bye      | `bye`                                  | exit                                   |"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"| clear    | `clear`                                | clear screen                           |"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"| deadline | `deadline \u003cTASKNAME\u003e [/by \u003cDATETIME\u003e]` | add a new deadline task                |"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"| delete   | `delete \u003cNUM\u003e`                         | delete a task                          |"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"| done     | `done \u003cNUM\u003e`                           | mark a task as done                    |"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"| event    | `event \u003cTASKNAME\u003e [/at \u003cDATETIME\u003e]`    | add a new event task                   |"},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":"| exit     | `exit`                                 | exit                                   |"},{"lineNumber":135,"author":{"gitId":"lirc572"},"content":"| find     | `find \u003cREGEX\u003e`                         | search tasks by task name (with regex) |"},{"lineNumber":136,"author":{"gitId":"lirc572"},"content":"| help     | `help`                                 | show help                              |"},{"lineNumber":137,"author":{"gitId":"lirc572"},"content":"| list     | `list`                                 | list all tasks added                   |"},{"lineNumber":138,"author":{"gitId":"lirc572"},"content":"| quit     | `quit`                                 | exit                                   |"},{"lineNumber":139,"author":{"gitId":"lirc572"},"content":"| sayonara | `sayonara`                             | exit                                   |"},{"lineNumber":140,"author":{"gitId":"lirc572"},"content":"| todo     | `todo \u003cTASKNAME\u003e`                      | add a new todo task                    |"},{"lineNumber":141,"author":{"gitId":"lirc572"},"content":"| さよなら  | `さよなら`                             | exit                                   |"}],"authorContributionMap":{"lirc572":141}},{"path":"src/main/java/com/lirc572/ip/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":" * Represents a deadline task (task with a deadline)."},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"     * Format of datetime for parsing and printing."},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    private final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"     * The deadline of the task."},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    private LocalDateTime dueTime;"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"     * Constructs a new DeadlineTask with the specified name."},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"     * @param name The name of the task."},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    public DeadlineTask(String name) {"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"        super(name);"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"     * Constructs a new DeadlineTask with the specified name and deadline."},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"     * @param name The name of the task."},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"     * @param dueTime The deadline of the task."},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    public DeadlineTask(String name, String dueTime) {"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        super(name);"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        if (dueTime !\u003d null) {"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"            this.setDueTime(dueTime);"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"     * Sets the deadline of the DeadlineTask."},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"     * @param dueTime The new deadline."},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    public void setDueTime(String dueTime) {"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        this.dueTime \u003d LocalDateTime.parse(dueTime, this.format);"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"     * Returns the deadline of the DeadlineTask."},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"     * @return The deadline of the DeadlineTask."},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"    public String getDueTime() {"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        return this.dueTime \u003d\u003d null ? null : this.dueTime.format(this.format);"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"     * Returns the string representation of the DeadlineTask for storage."},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"     * @return The string representation of the DeadlineTask for storage."},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"    public String getSavedString() {"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        return String.format("},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"                \"D | %d | %s | %s\","},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"                this.getIsDone() ? 1 : 0,"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"                this.getName(),"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"                this.getDueTime() \u003d\u003d null ? \"null\" : this.getDueTime()"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        );"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"    @Override"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"    public String toString() {"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        return \"[D]\""},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"            + super.toString()"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"            + (this.dueTime !\u003d null ? String.format(\" (by: %s)\", this.getDueTime()) : \"\");"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":82}},{"path":"src/main/java/com/lirc572/ip/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import java.awt.Desktop;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import java.net.URISyntaxException;"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import java.net.URL;"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import java.util.regex.MatchResult;"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import java.util.regex.Pattern;"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import javafx.geometry.Insets;"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import javafx.geometry.Pos;"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import javafx.scene.Node;"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import javafx.scene.control.Hyperlink;"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import javafx.scene.effect.DropShadow;"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import javafx.scene.image.Image;"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"import javafx.scene.layout.StackPane;"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"import javafx.scene.paint.ImagePattern;"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"import javafx.scene.shape.Rectangle;"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"import javafx.scene.text.Text;"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"import javafx.scene.text.TextFlow;"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":" * Represent a dialog box in the dialog container."},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"public class DialogBox extends HBox {"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    private final double imageRadius \u003d 20.0;"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"    private TextFlow textFlow;"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"    private Circle imageCircle;"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"    private Rectangle rectangleBox;"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    private StackPane stackPane;"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"     * Constructs a new DialogBox object."},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"     * @param labelString text in the dialog box."},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"     * @param imageSrc path to the image in the dialog."},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    public DialogBox(String labelString, String imageSrc) {"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        this(new TextFlow(new Text(labelString)), imageSrc);"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"     * Constructs a new DialogBox object."},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"     * @param textFlow text in the dialog box."},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"     * @param imageSrc path to the image in the dialog."},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    public DialogBox(TextFlow textFlow, String imageSrc) {"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        this.textFlow \u003d textFlow;"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        this.imageCircle \u003d new Circle(this.imageRadius);"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        ImagePattern pattern \u003d new ImagePattern(new Image(this.getClass().getResourceAsStream(imageSrc)));"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        this.imageCircle.setFill(pattern);"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        this.imageCircle.setEffect(new DropShadow(15.0, Color.BLACK));"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        this.textFlow.setPadding(new Insets(0.0, 10.0, 0.0, 10.0));"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        this.rectangleBox \u003d new Rectangle(300.0, 20.0);"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        this.rectangleBox.setArcWidth(20.0);"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        this.rectangleBox.setArcHeight(20.0);"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        this.rectangleBox.setFill(Color.AQUA);"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        this.stackPane \u003d new StackPane();"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        this.stackPane.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        this.stackPane.getChildren().addAll(this.rectangleBox, this.textFlow);"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        this.rectangleBox.heightProperty().bind(this.stackPane.heightProperty());"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        this.setSpacing(5.0);"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"        // this.getChildren().addAll(this.textFlow, this.imageCircle);"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        this.getChildren().addAll(this.stackPane, this.imageCircle);"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"     * Constructs a new DialogBox object for the user (on the right)."},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"     * @param labelString text in the dialog box."},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"     * @param imageSrc path to the image in the dialog."},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"     * @return a new DialogBox object."},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"    public static DialogBox getUserDialogBox(String labelString, String imageSrc) {"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"        assert labelString.length() \u003e 0 : \"Dialogbox\u0027s text should not be empty\";"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"        return new DialogBox(convertStringToTextflow(labelString), imageSrc);"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"     * Constructs a new DialogBox object for the user (on the right)."},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"     * @param textFlow text in the dialog box."},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"     * @param imageSrc path to the image in the dialog."},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"     * @return a new DialogBox object."},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"    public static DialogBox getUserDialogBox(TextFlow textFlow, String imageSrc) {"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"        return new DialogBox(textFlow, imageSrc);"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"     * Constructs a new DialogBox object for Elaina (on the left)."},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"     * @param labelString text in the dialog box."},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"     * @param imageSrc path to the image in the dialog."},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"     * @return a new DialogBox object."},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"    public static DialogBox getElainaDialogBox(String labelString, String imageSrc) {"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"        assert labelString.length() \u003e 0 : \"Dialogbox\u0027s text should not be empty\";"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"        var dialogBox \u003d new DialogBox(convertStringToTextflow(labelString), imageSrc);"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"        dialogBox.flip();"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"        return dialogBox;"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"     * Constructs a new DialogBox object for Elaina (on the left)."},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"     * @param textFlow text in the dialog box."},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"     * @param imageSrc path to the image in the dialog."},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"     * @return a new DialogBox object."},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"    public static DialogBox getElainaDialogBox(TextFlow textFlow, String imageSrc) {"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"        var dialogBox \u003d new DialogBox(textFlow, imageSrc);"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"        dialogBox.flip();"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"        return dialogBox;"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"    private void flip() {"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"        this.stackPane.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"     * Converts a String to a TextFlow for DialogBox."},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":"     * @param str String to be converted."},{"lineNumber":135,"author":{"gitId":"lirc572"},"content":"     * @return The converted TextFlow."},{"lineNumber":136,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"lirc572"},"content":"    private static TextFlow convertStringToTextflow(String str) {"},{"lineNumber":138,"author":{"gitId":"lirc572"},"content":"        assert str.length() \u003e 0 : \"Dialogbox\u0027s text should not be empty\";"},{"lineNumber":139,"author":{"gitId":"lirc572"},"content":"        TextFlow result \u003d new TextFlow();"},{"lineNumber":140,"author":{"gitId":"lirc572"},"content":"        String[] matches \u003d Pattern.compile(\"https?:\\\\/\\\\/(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#\u003d]{1,256}\\\\.\""},{"lineNumber":141,"author":{"gitId":"lirc572"},"content":"                + \"[a-zA-Z0-9()]{1,6}\\\\b([-a-zA-Z0-9()@:%_\\\\+.~#?\u0026//\u003d]*)\")"},{"lineNumber":142,"author":{"gitId":"lirc572"},"content":"                .matcher(str)"},{"lineNumber":143,"author":{"gitId":"lirc572"},"content":"                .results()"},{"lineNumber":144,"author":{"gitId":"lirc572"},"content":"                .map(MatchResult::group)"},{"lineNumber":145,"author":{"gitId":"lirc572"},"content":"                .toArray(String[]::new);"},{"lineNumber":146,"author":{"gitId":"lirc572"},"content":"        for (String match : matches) {"},{"lineNumber":147,"author":{"gitId":"lirc572"},"content":"            int pos \u003d str.indexOf(match);"},{"lineNumber":148,"author":{"gitId":"lirc572"},"content":"            Hyperlink link \u003d new Hyperlink(match);"},{"lineNumber":149,"author":{"gitId":"lirc572"},"content":"            link.setOnMouseClicked((event) -\u003e {"},{"lineNumber":150,"author":{"gitId":"lirc572"},"content":"                if (Desktop.isDesktopSupported()) {"},{"lineNumber":151,"author":{"gitId":"lirc572"},"content":"                    new Thread(() -\u003e {"},{"lineNumber":152,"author":{"gitId":"lirc572"},"content":"                        try {"},{"lineNumber":153,"author":{"gitId":"lirc572"},"content":"                            Desktop.getDesktop().browse(new URL(match).toURI());"},{"lineNumber":154,"author":{"gitId":"lirc572"},"content":"                        } catch (IOException e) {"},{"lineNumber":155,"author":{"gitId":"lirc572"},"content":"                            e.printStackTrace();"},{"lineNumber":156,"author":{"gitId":"lirc572"},"content":"                        } catch (URISyntaxException e) {"},{"lineNumber":157,"author":{"gitId":"lirc572"},"content":"                            e.printStackTrace();"},{"lineNumber":158,"author":{"gitId":"lirc572"},"content":"                        }"},{"lineNumber":159,"author":{"gitId":"lirc572"},"content":"                    }).start();"},{"lineNumber":160,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":161,"author":{"gitId":"lirc572"},"content":"            });"},{"lineNumber":162,"author":{"gitId":"lirc572"},"content":"            result.getChildren().addAll(new Text(str.substring(0, pos)), link);"},{"lineNumber":163,"author":{"gitId":"lirc572"},"content":"            str \u003d str.substring(pos + match.length());"},{"lineNumber":164,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"lirc572"},"content":"        result.getChildren().add(new Text(str));"},{"lineNumber":166,"author":{"gitId":"lirc572"},"content":"        return result;"},{"lineNumber":167,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":168}},{"path":"src/main/java/com/lirc572/ip/Elaina.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import javafx.application.Platform;"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import javafx.geometry.Insets;"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import javafx.scene.input.KeyCode;"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import javafx.stage.Stage;"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":" * The entry point of the program."},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"public class Elaina extends Application {"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"    private AnchorPane mainLayout;"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    private Button sendButton;"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    private String userImageSrc;"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    private String elainaImageSrc;"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"    private String elainaImage2Src;"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    private String elainaIconSrc;"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"     * The task list."},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"    private final TaskList tasks;"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"     * Constructs an Elaina object."},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"    public Elaina() {"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        Storage.readFromFile(this.tasks);"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"    private void initializeImageSources() {"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        this.userImageSrc \u003d \"/images/dialogPic/User/majo_saya2.jpg\";"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        this.elainaImageSrc \u003d \"/images/dialogPic/Elaina/majo_elaina1.jpg\";"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        this.elainaImage2Src \u003d \"/images/dialogPic/Elaina/majo_elaina0.jpg\";"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        this.elainaIconSrc \u003d \"/images/dialogPic/Elaina/majo_elaina2.jpg\";"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    private void initializeComponents() {"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        this.scrollPane \u003d new ScrollPane();"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        this.dialogContainer \u003d new VBox();"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        this.scrollPane.setContent(dialogContainer);"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        this.userInput \u003d new TextField();"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        this.sendButton \u003d new Button(\"Send\");"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        this.mainLayout \u003d new AnchorPane();"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        this.mainLayout.getChildren().addAll(this.scrollPane, this.userInput, this.sendButton);"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"    private void initializeComponentProperties() {"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        this.mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        this.scrollPane.setPrefSize(385.0, 535.0);"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        this.scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        this.scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        this.scrollPane.setVvalue(1.0);"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        this.scrollPane.setFitToWidth(true);"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        // this.scrollPane.setStyle(\"-fx-background: #90EE90;\");"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        this.scrollPane.lookup(\".viewport\").setStyle("},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"            \"-fx-background-image: url(\u0027/images/background/bg2.jpg\u0027);\""},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"            + \"-fx-background-size: 800 600;\""},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"            + \"-fx-background-position: center;\""},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        );"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        this.dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        this.dialogContainer.setPadding(new Insets(10.0, 10.0, 10.0, 10.0));"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"        this.dialogContainer.setSpacing(10.0);"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        this.userInput.setPrefWidth(325.0);"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"        this.sendButton.setPrefWidth(55.0);"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"        AnchorPane.setTopAnchor(this.scrollPane, 1.0);"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"        AnchorPane.setBottomAnchor(this.sendButton, 1.0);"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"        AnchorPane.setRightAnchor(this.sendButton, 1.0);"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        AnchorPane.setLeftAnchor(this.userInput, 1.0);"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        AnchorPane.setBottomAnchor(this.userInput, 1.0);"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"    private void initializeEventListeners() {"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"        this.sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"            this.sendCommand();"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"        });"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"        this.userInput.setOnKeyReleased((event) -\u003e {"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"            if (event.getCode().equals(KeyCode.ENTER)) {"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"                this.sendCommand();"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"        });"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"        this.dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"    @Override"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"    public void start(Stage primaryStage) throws Exception {"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"        // Step 1. Setting up required components"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"        this.initializeImageSources();"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"        this.initializeComponents();"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"        Scene scene \u003d new Scene(this.mainLayout); // Setting the scene to be our Label"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"        primaryStage.setScene(scene); // Setting the stage to show our screen"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"        primaryStage.show(); // Render the stage."},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"        // Step 2. Formatting the window to look as expected"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"        primaryStage.setTitle(\"Elaina\");"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"        primaryStage.setResizable(false);"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"        primaryStage.setMinHeight(600.0);"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"        primaryStage.setMinWidth(400.0);"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"        primaryStage.getIcons().add(new Image(this.getClass().getResourceAsStream(this.elainaIconSrc)));"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"        this.initializeComponentProperties();"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"        // Step 3. Add functionality to handle user input."},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"        this.initializeEventListeners();"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"        // Step 4. Print welcome message."},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"        for (String line : this.getWelcomeText(false).split(\"\\n\")) {"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"            this.dialogContainer.getChildren().add(DialogBox.getElainaDialogBox(line, this.elainaImageSrc));"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":135,"author":{"gitId":"lirc572"},"content":"    private void sendCommand() {"},{"lineNumber":136,"author":{"gitId":"lirc572"},"content":"        String userText \u003d userInput.getText();"},{"lineNumber":137,"author":{"gitId":"lirc572"},"content":"        if (userText.trim().equals(\"\")) {"},{"lineNumber":138,"author":{"gitId":"lirc572"},"content":"            return;"},{"lineNumber":139,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"lirc572"},"content":"        String elainaText \u003d this.getResponse(userInput.getText());"},{"lineNumber":141,"author":{"gitId":"lirc572"},"content":"        if (elainaText.equals(\"clear\\n\")) {"},{"lineNumber":142,"author":{"gitId":"lirc572"},"content":"            this.dialogContainer.getChildren().clear();"},{"lineNumber":143,"author":{"gitId":"lirc572"},"content":"        } else {"},{"lineNumber":144,"author":{"gitId":"lirc572"},"content":"            this.dialogContainer.getChildren().addAll("},{"lineNumber":145,"author":{"gitId":"lirc572"},"content":"                    DialogBox.getUserDialogBox("},{"lineNumber":146,"author":{"gitId":"lirc572"},"content":"                            userText,"},{"lineNumber":147,"author":{"gitId":"lirc572"},"content":"                            this.userImageSrc"},{"lineNumber":148,"author":{"gitId":"lirc572"},"content":"                    ),"},{"lineNumber":149,"author":{"gitId":"lirc572"},"content":"                    DialogBox.getElainaDialogBox("},{"lineNumber":150,"author":{"gitId":"lirc572"},"content":"                            elainaText,"},{"lineNumber":151,"author":{"gitId":"lirc572"},"content":"                            elainaText.startsWith(\"Error: \")"},{"lineNumber":152,"author":{"gitId":"lirc572"},"content":"                                    ? this.elainaImage2Src"},{"lineNumber":153,"author":{"gitId":"lirc572"},"content":"                                    : this.elainaImageSrc"},{"lineNumber":154,"author":{"gitId":"lirc572"},"content":"                    )"},{"lineNumber":155,"author":{"gitId":"lirc572"},"content":"            );"},{"lineNumber":156,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"lirc572"},"content":"        this.userInput.clear();"},{"lineNumber":158,"author":{"gitId":"lirc572"},"content":"        if (elainaText.equals(\"Bye. Hope to see you again soon!\\n\")) {"},{"lineNumber":159,"author":{"gitId":"lirc572"},"content":"            Platform.exit();"},{"lineNumber":160,"author":{"gitId":"lirc572"},"content":"            System.exit(0);"},{"lineNumber":161,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":164,"author":{"gitId":"lirc572"},"content":"    private String getResponse(String input) {"},{"lineNumber":165,"author":{"gitId":"lirc572"},"content":"        String response \u003d null;"},{"lineNumber":166,"author":{"gitId":"lirc572"},"content":"        try {"},{"lineNumber":167,"author":{"gitId":"lirc572"},"content":"            response \u003d Parser.processCommand(input, this.tasks);"},{"lineNumber":168,"author":{"gitId":"lirc572"},"content":"        } catch (Exception e) {"},{"lineNumber":169,"author":{"gitId":"lirc572"},"content":"            String errorText \u003d \"\";"},{"lineNumber":170,"author":{"gitId":"lirc572"},"content":"            errorText +\u003d Ui.printError(e);"},{"lineNumber":171,"author":{"gitId":"lirc572"},"content":"            response \u003d errorText;"},{"lineNumber":172,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"lirc572"},"content":"        return response;"},{"lineNumber":174,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":176,"author":{"gitId":"lirc572"},"content":"    private String getWelcomeText(boolean withLogo) {"},{"lineNumber":177,"author":{"gitId":"lirc572"},"content":"        String welcomeText \u003d \"\";"},{"lineNumber":178,"author":{"gitId":"lirc572"},"content":"        if (withLogo) {"},{"lineNumber":179,"author":{"gitId":"lirc572"},"content":"            welcomeText +\u003d Ui.printLogo();"},{"lineNumber":180,"author":{"gitId":"lirc572"},"content":"            welcomeText +\u003d Ui.printEmptyLine();"},{"lineNumber":181,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"lirc572"},"content":"        welcomeText +\u003d Ui"},{"lineNumber":183,"author":{"gitId":"lirc572"},"content":"                .printLine(\"Who is the ultimate Personal Assistant Chatbot that helps keep track of various things?\");"},{"lineNumber":184,"author":{"gitId":"lirc572"},"content":"        welcomeText +\u003d Ui.printLine(\"\\u305D\\u3046\\u3001\\u79C1\\u3067\\u3059\\uFF01\"); // \"Sou, watashi desu!\""},{"lineNumber":185,"author":{"gitId":"lirc572"},"content":"        welcomeText +\u003d Ui.printLine(\"My official website: https://elaina.lirc572.com\");"},{"lineNumber":186,"author":{"gitId":"lirc572"},"content":"        return welcomeText;"},{"lineNumber":187,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":189,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":190,"author":{"gitId":"lirc572"},"content":"     * Constructs an Elaina object and run it."},{"lineNumber":191,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":192,"author":{"gitId":"lirc572"},"content":"     * @param args Command line arguments."},{"lineNumber":193,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":194,"author":{"gitId":"lirc572"},"content":"    public static void main(String[] args) {"},{"lineNumber":195,"author":{"gitId":"lirc572"},"content":"        // Start in GUI mode"},{"lineNumber":196,"author":{"gitId":"lirc572"},"content":"        launch();"},{"lineNumber":197,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"lirc572":197,"-":1}},{"path":"src/main/java/com/lirc572/ip/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":" * Represents an event task (task with a time)."},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"public class EventTask extends Task {"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"     * Format of datetime for parsing and printing."},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    private final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"     * the time of the event."},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    private LocalDateTime eventTime;"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"     * Constructs a new EventTask with the specified name."},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"     * @param name The name of the event."},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    public EventTask(String name) {"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"        super(name);"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"     * Constructs a new EventTask with the specified name and time."},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"     * @param name The name of the event."},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"     * @param eventTime The time of the event."},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    public EventTask(String name, String eventTime) {"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        super(name);"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        if (eventTime !\u003d null) {"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"            this.setEventTime(eventTime);"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"     * Sets the time of the EventTask."},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"     * @param eventTime The new time of the event."},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    public void setEventTime(String eventTime) {"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        this.eventTime \u003d LocalDateTime.parse(eventTime, this.format);"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"     * Returns the time of the EventTask."},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"     * @return The time of the EventTask."},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    public String getEventTime() {"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        return this.eventTime \u003d\u003d null ? null : this.eventTime.format(this.format);"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"     * Returns the string representation of the DeadlineTask for storage."},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"     * @return The string representation of the DeadlineTask for storage."},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"    public String getSavedString() {"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        return String.format("},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"                \"E | %d | %s | %s\","},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"                this.getIsDone() ? 1 : 0,"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"                this.getName(),"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"                this.getEventTime() \u003d\u003d null ? \"null\" : this.getEventTime()"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        );"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"    public String toString() {"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        return \"[E]\""},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"                + super.toString()"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"                + (this.eventTime !\u003d null ? String.format(\" (at: %s)\", this.getEventTime()) : \"\");"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":81}},{"path":"src/main/java/com/lirc572/ip/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import java.util.Set;"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import java.util.regex.Matcher;"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import java.util.regex.Pattern;"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":" * Contains static methods for parsing commands."},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"public class Parser {"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"     * All exit commands are listed here."},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"    private static final Set\u003cString\u003e EXIT_COMMANDS \u003d Set.of("},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"        \"bye\","},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"        \"exit\","},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"        \"quit\","},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"        \"sayonara\","},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"        \"\\u3055\\u3088\\u306A\\u3089\""},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    );"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"     * Tokenizes a command."},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"     * @param command A line of command."},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"     * @return The tokenized command as a String array."},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    public static String[] tokenizeCommand(String command) {"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cString\u003e tokens \u003d new ArrayList\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        boolean isNewToken \u003d true;"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        boolean unmatchedQuote \u003d false;"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"        char quotationMark \u003d \u0027 \u0027;"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        for (char ch : command.toCharArray()) {"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"            if (!unmatchedQuote) {"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"                // if not a whitespace character"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"                if (ch !\u003d \u0027 \u0027 \u0026\u0026 ch !\u003d \u0027\\t\u0027) {"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"                    // if right after a whitespace character"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"                    if (isNewToken) {"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"                        // start of a quoted token"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"                        if (ch \u003d\u003d \u0027\"\u0027 || ch \u003d\u003d \u0027\\\u0027\u0027) {"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"                            quotationMark \u003d ch;"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"                            unmatchedQuote \u003d true;"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"                            tokens.add(\"\");"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"                        } else {"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"                            tokens.add(String.valueOf(ch));"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"                            isNewToken \u003d false;"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"                        }"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"                    } else {"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"                        tokens.set(tokens.size() - 1, tokens.get(tokens.size() - 1) + ch);"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"                    }"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"                } else {"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"                    isNewToken \u003d true;"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"            } else {"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"                if (ch !\u003d quotationMark) {"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"                    tokens.set(tokens.size() - 1, tokens.get(tokens.size() - 1) + ch);"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"                } else {"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"                    unmatchedQuote \u003d false;"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"                    isNewToken \u003d true;"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        String[] result \u003d new String[tokens.size()];"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        return tokens.toArray(result);"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"    private static String processExitCommand(String[] tokens, TaskList tasks) throws Exception {"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        return Ui.printLine(\"Bye. Hope to see you again soon!\");"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"    private static String processClearCommand(String[] tokens, TaskList tasks) throws Exception {"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        return Ui.printLine(\"clear\");"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"    private static String processHelpCommand(String[] tokens, TaskList tasks) throws Exception {"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        return Ui.printLine("},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"            \"For a detailed user guide, \""},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"            + \"please refer to https://elaina.lirc572.com/pages/user-guide.html\""},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"        );"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"    private static String processListCommand(String[] tokens, TaskList tasks) throws Exception {"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"        return Ui.printLine(\"Here are the tasks in your list:\") + tasks.printAll();"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"    private static String processDoneCommand(String[] tokens, TaskList tasks) throws Exception {"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        String response \u003d \"\";"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        if (tokens.length \u003c 2) {"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"            throw new Exception(\"Please provide a valid task number!\");"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"            int taskNumber \u003d Integer.parseInt(tokens[1]);"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"            if (taskNumber \u003c 1) {"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"                throw new Exception(\"Please provide a valid task number!\");"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"            if (taskNumber \u003c\u003d tasks.getSize()) {"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"                tasks.markAsDone(taskNumber);"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"                response +\u003d Ui.printLine(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"                response +\u003d Ui.printLine(String.format(\"  %s\", tasks.getTaskString(taskNumber)));"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"            } else {"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"                throw new Exception(\"Task does not exist!\");"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"            throw new Exception(\"Please provide a valid task number!\");"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"        return response;"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"    private static String processDeleteCommand(String[] tokens, TaskList tasks) throws Exception {"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"        String response \u003d \"\";"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"        if (tokens.length \u003c 2) {"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"            throw new Exception(\"Please provide a valid task number!\");"},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"        try {"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"            int taskNumber \u003d Integer.parseInt(tokens[1]);"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"            if (taskNumber \u003c 1) {"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"                throw new Exception(\"Please provide a valid task number!\");"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"            if (taskNumber \u003c\u003d tasks.getSize()) {"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"                String taskString \u003d tasks.delete(taskNumber);"},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"                response +\u003d Ui.printLine(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"                response +\u003d Ui.printLine(String.format(\"  %s\", taskString));"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"                response +\u003d Ui.printLine(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"            } else {"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"                throw new Exception(\"Task does not exist!\");"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"            throw new Exception(\"Please provide a valid task number!\");"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"        return response;"},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":136,"author":{"gitId":"lirc572"},"content":"    private static String processTodoCommand(String[] tokens, TaskList tasks) throws Exception {"},{"lineNumber":137,"author":{"gitId":"lirc572"},"content":"        String response \u003d \"\";"},{"lineNumber":138,"author":{"gitId":"lirc572"},"content":"        if (tokens.length \u003c 2) {"},{"lineNumber":139,"author":{"gitId":"lirc572"},"content":"            throw new Exception(\"Please provide a task name!\");"},{"lineNumber":140,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"lirc572"},"content":"        Task task \u003d new TodoTask(tokens[1]);"},{"lineNumber":142,"author":{"gitId":"lirc572"},"content":"        tasks.add(task);"},{"lineNumber":143,"author":{"gitId":"lirc572"},"content":"        response +\u003d Ui.printLine(\"Got it! I\u0027ve added this task:\");"},{"lineNumber":144,"author":{"gitId":"lirc572"},"content":"        response +\u003d Ui.printLine(\"  \" + task);"},{"lineNumber":145,"author":{"gitId":"lirc572"},"content":"        response +\u003d Ui.printLine(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));"},{"lineNumber":146,"author":{"gitId":"lirc572"},"content":"        return response;"},{"lineNumber":147,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":149,"author":{"gitId":"lirc572"},"content":"    private static String processDeadlineCommand(String[] tokens, TaskList tasks) throws Exception {"},{"lineNumber":150,"author":{"gitId":"lirc572"},"content":"        String response \u003d \"\";"},{"lineNumber":151,"author":{"gitId":"lirc572"},"content":"        if (tokens.length \u003c 2) {"},{"lineNumber":152,"author":{"gitId":"lirc572"},"content":"            throw new Exception(\"Please provide a task name!\");"},{"lineNumber":153,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"lirc572"},"content":"        boolean dueTimeNotProvided \u003d true;"},{"lineNumber":155,"author":{"gitId":"lirc572"},"content":"        for (int index \u003d 2; index \u003c tokens.length; index++) {"},{"lineNumber":156,"author":{"gitId":"lirc572"},"content":"            if (tokens[index].equals(\"/by\")) {"},{"lineNumber":157,"author":{"gitId":"lirc572"},"content":"                dueTimeNotProvided \u003d false;"},{"lineNumber":158,"author":{"gitId":"lirc572"},"content":"                if (index + 1 \u003c tokens.length) {"},{"lineNumber":159,"author":{"gitId":"lirc572"},"content":"                    try {"},{"lineNumber":160,"author":{"gitId":"lirc572"},"content":"                        Task task \u003d new DeadlineTask(tokens[1], tokens[index + 1]);"},{"lineNumber":161,"author":{"gitId":"lirc572"},"content":"                        tasks.add(task);"},{"lineNumber":162,"author":{"gitId":"lirc572"},"content":"                        response +\u003d Ui.printLine(\"Got it! I\u0027ve added this task:\");"},{"lineNumber":163,"author":{"gitId":"lirc572"},"content":"                        response +\u003d Ui.printLine(\"  \" + task);"},{"lineNumber":164,"author":{"gitId":"lirc572"},"content":"                        response +\u003d Ui.printLine("},{"lineNumber":165,"author":{"gitId":"lirc572"},"content":"                                String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));"},{"lineNumber":166,"author":{"gitId":"lirc572"},"content":"                    } catch (DateTimeParseException e) {"},{"lineNumber":167,"author":{"gitId":"lirc572"},"content":"                        throw new Exception(\"Datetime in the wrong format!\");"},{"lineNumber":168,"author":{"gitId":"lirc572"},"content":"                    }"},{"lineNumber":169,"author":{"gitId":"lirc572"},"content":"                } else {"},{"lineNumber":170,"author":{"gitId":"lirc572"},"content":"                    throw new Exception(\"Please provide a valid due time!\");"},{"lineNumber":171,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":172,"author":{"gitId":"lirc572"},"content":"                break;"},{"lineNumber":173,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":174,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"lirc572"},"content":"        if (dueTimeNotProvided) {"},{"lineNumber":176,"author":{"gitId":"lirc572"},"content":"            Task task \u003d new DeadlineTask(tokens[1]);"},{"lineNumber":177,"author":{"gitId":"lirc572"},"content":"            tasks.add(task);"},{"lineNumber":178,"author":{"gitId":"lirc572"},"content":"            response +\u003d Ui.printLine(\"Got it! I\u0027ve added this task:\");"},{"lineNumber":179,"author":{"gitId":"lirc572"},"content":"            response +\u003d Ui.printLine(\"  \" + task);"},{"lineNumber":180,"author":{"gitId":"lirc572"},"content":"            response +\u003d Ui.printLine(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));"},{"lineNumber":181,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"lirc572"},"content":"        return response;"},{"lineNumber":183,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":185,"author":{"gitId":"lirc572"},"content":"    private static String processEventCommand(String[] tokens, TaskList tasks) throws Exception {"},{"lineNumber":186,"author":{"gitId":"lirc572"},"content":"        String response \u003d \"\";"},{"lineNumber":187,"author":{"gitId":"lirc572"},"content":"        if (tokens.length \u003c 2) {"},{"lineNumber":188,"author":{"gitId":"lirc572"},"content":"            throw new Exception(\"Please provide a task name!\");"},{"lineNumber":189,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"lirc572"},"content":"        boolean eventTimeNotProvided \u003d true;"},{"lineNumber":191,"author":{"gitId":"lirc572"},"content":"        for (int index \u003d 2; index \u003c tokens.length; index++) {"},{"lineNumber":192,"author":{"gitId":"lirc572"},"content":"            if (tokens[index].equals(\"/at\")) {"},{"lineNumber":193,"author":{"gitId":"lirc572"},"content":"                eventTimeNotProvided \u003d false;"},{"lineNumber":194,"author":{"gitId":"lirc572"},"content":"                if (index + 1 \u003c tokens.length) {"},{"lineNumber":195,"author":{"gitId":"lirc572"},"content":"                    try {"},{"lineNumber":196,"author":{"gitId":"lirc572"},"content":"                        Task task \u003d new EventTask(tokens[1], tokens[index + 1]);"},{"lineNumber":197,"author":{"gitId":"lirc572"},"content":"                        tasks.add(task);"},{"lineNumber":198,"author":{"gitId":"lirc572"},"content":"                        response +\u003d Ui.printLine(\"Got it! I\u0027ve added this task:\");"},{"lineNumber":199,"author":{"gitId":"lirc572"},"content":"                        response +\u003d Ui.printLine(\"  \" + task);"},{"lineNumber":200,"author":{"gitId":"lirc572"},"content":"                        response +\u003d Ui.printLine("},{"lineNumber":201,"author":{"gitId":"lirc572"},"content":"                                String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));"},{"lineNumber":202,"author":{"gitId":"lirc572"},"content":"                    } catch (DateTimeParseException e) {"},{"lineNumber":203,"author":{"gitId":"lirc572"},"content":"                        throw new Exception(\"Datetime in the wrong format!\");"},{"lineNumber":204,"author":{"gitId":"lirc572"},"content":"                    }"},{"lineNumber":205,"author":{"gitId":"lirc572"},"content":"                } else {"},{"lineNumber":206,"author":{"gitId":"lirc572"},"content":"                    throw new Exception(\"Please provide a valid event time!\");"},{"lineNumber":207,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":208,"author":{"gitId":"lirc572"},"content":"                break;"},{"lineNumber":209,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":210,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"lirc572"},"content":"        if (eventTimeNotProvided) {"},{"lineNumber":212,"author":{"gitId":"lirc572"},"content":"            Task task \u003d new EventTask(tokens[1]);"},{"lineNumber":213,"author":{"gitId":"lirc572"},"content":"            tasks.add(task);"},{"lineNumber":214,"author":{"gitId":"lirc572"},"content":"            response +\u003d Ui.printLine(\"Got it! I\u0027ve added this task:\");"},{"lineNumber":215,"author":{"gitId":"lirc572"},"content":"            response +\u003d Ui.printLine(\"  \" + task);"},{"lineNumber":216,"author":{"gitId":"lirc572"},"content":"            response +\u003d Ui.printLine(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));"},{"lineNumber":217,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"lirc572"},"content":"        return response;"},{"lineNumber":219,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":221,"author":{"gitId":"lirc572"},"content":"    private static String processFindCommand(String[] tokens, TaskList tasks) throws Exception {"},{"lineNumber":222,"author":{"gitId":"lirc572"},"content":"        String response \u003d \"\";"},{"lineNumber":223,"author":{"gitId":"lirc572"},"content":"        if (tokens.length \u003c 2) {"},{"lineNumber":224,"author":{"gitId":"lirc572"},"content":"            throw new Exception(\"Please provide a valid regex expression!\");"},{"lineNumber":225,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cString\u003e matchedTaskStrings \u003d new ArrayList\u003c\u003e();"},{"lineNumber":227,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cInteger\u003e matchedTaskIndices \u003d new ArrayList\u003c\u003e();"},{"lineNumber":228,"author":{"gitId":"lirc572"},"content":"        Pattern pattern \u003d Pattern.compile(tokens[1], Pattern.CASE_INSENSITIVE);"},{"lineNumber":229,"author":{"gitId":"lirc572"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) { // i is one-based!"},{"lineNumber":230,"author":{"gitId":"lirc572"},"content":"            Matcher matcher \u003d pattern.matcher(tasks.getTaskName(i));"},{"lineNumber":231,"author":{"gitId":"lirc572"},"content":"            if (matcher.find()) {"},{"lineNumber":232,"author":{"gitId":"lirc572"},"content":"                matchedTaskStrings.add(tasks.getTaskString(i));"},{"lineNumber":233,"author":{"gitId":"lirc572"},"content":"                matchedTaskIndices.add(i);"},{"lineNumber":234,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":235,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":236,"author":{"gitId":"lirc572"},"content":"        response +\u003d Ui.printLine(\"Here are the matching tasks in your list:\");"},{"lineNumber":237,"author":{"gitId":"lirc572"},"content":"        for (int i \u003d 0; i \u003c matchedTaskIndices.size(); i++) {"},{"lineNumber":238,"author":{"gitId":"lirc572"},"content":"            response +\u003d Ui"},{"lineNumber":239,"author":{"gitId":"lirc572"},"content":"                    .printLine(String.format(\"%d.%s\", matchedTaskIndices.get(i), matchedTaskStrings.get(i)));"},{"lineNumber":240,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":241,"author":{"gitId":"lirc572"},"content":"        return response;"},{"lineNumber":242,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":243,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":244,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":245,"author":{"gitId":"lirc572"},"content":"     * Processes a command."},{"lineNumber":246,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":247,"author":{"gitId":"lirc572"},"content":"     * @param command The command to process."},{"lineNumber":248,"author":{"gitId":"lirc572"},"content":"     * @return The response."},{"lineNumber":249,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":250,"author":{"gitId":"lirc572"},"content":"    public static String processCommand(String command, TaskList tasks) throws Exception {"},{"lineNumber":251,"author":{"gitId":"lirc572"},"content":"        assert command.length() \u003e 0 : \"Command should not be empty\";"},{"lineNumber":252,"author":{"gitId":"lirc572"},"content":"        String[] tokens \u003d tokenizeCommand(command);"},{"lineNumber":253,"author":{"gitId":"lirc572"},"content":"        String response \u003d \"\";"},{"lineNumber":254,"author":{"gitId":"lirc572"},"content":"        if (EXIT_COMMANDS.contains(command)) {"},{"lineNumber":255,"author":{"gitId":"lirc572"},"content":"            response +\u003d processExitCommand(tokens, tasks);"},{"lineNumber":256,"author":{"gitId":"lirc572"},"content":"        } else {"},{"lineNumber":257,"author":{"gitId":"lirc572"},"content":"            if (tokens[0].equals(\"clear\")) {"},{"lineNumber":258,"author":{"gitId":"lirc572"},"content":"                response +\u003d processClearCommand(tokens, tasks);"},{"lineNumber":259,"author":{"gitId":"lirc572"},"content":"            } else if (tokens[0].equals(\"help\")) {"},{"lineNumber":260,"author":{"gitId":"lirc572"},"content":"                response +\u003d processHelpCommand(tokens, tasks);"},{"lineNumber":261,"author":{"gitId":"lirc572"},"content":"            } else if (tokens[0].equals(\"list\")) {"},{"lineNumber":262,"author":{"gitId":"lirc572"},"content":"                response +\u003d processListCommand(tokens, tasks);"},{"lineNumber":263,"author":{"gitId":"lirc572"},"content":"            } else if (tokens[0].equals(\"done\")) {"},{"lineNumber":264,"author":{"gitId":"lirc572"},"content":"                response +\u003d processDoneCommand(tokens, tasks);"},{"lineNumber":265,"author":{"gitId":"lirc572"},"content":"            } else if (tokens[0].equals(\"delete\")) {"},{"lineNumber":266,"author":{"gitId":"lirc572"},"content":"                response +\u003d processDeleteCommand(tokens, tasks);"},{"lineNumber":267,"author":{"gitId":"lirc572"},"content":"            } else if (tokens[0].equals(\"todo\")) {"},{"lineNumber":268,"author":{"gitId":"lirc572"},"content":"                response +\u003d processTodoCommand(tokens, tasks);"},{"lineNumber":269,"author":{"gitId":"lirc572"},"content":"            } else if (tokens[0].equals(\"deadline\")) {"},{"lineNumber":270,"author":{"gitId":"lirc572"},"content":"                response +\u003d processDeadlineCommand(tokens, tasks);"},{"lineNumber":271,"author":{"gitId":"lirc572"},"content":"            } else if (tokens[0].equals(\"event\")) {"},{"lineNumber":272,"author":{"gitId":"lirc572"},"content":"                response +\u003d processEventCommand(tokens, tasks);"},{"lineNumber":273,"author":{"gitId":"lirc572"},"content":"            } else if (tokens[0].equals(\"find\")) {"},{"lineNumber":274,"author":{"gitId":"lirc572"},"content":"                response +\u003d processFindCommand(tokens, tasks);"},{"lineNumber":275,"author":{"gitId":"lirc572"},"content":"            } else {"},{"lineNumber":276,"author":{"gitId":"lirc572"},"content":"                throw new Exception(\"Unknown command!\");"},{"lineNumber":277,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":278,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":279,"author":{"gitId":"lirc572"},"content":"        Storage.saveToFile(tasks);"},{"lineNumber":280,"author":{"gitId":"lirc572"},"content":"        return response;"},{"lineNumber":281,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":282,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":282}},{"path":"src/main/java/com/lirc572/ip/Starter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"public class Starter {"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"    public static void main(final String[] args) {"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"        Elaina.main(args);"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":7}},{"path":"src/main/java/com/lirc572/ip/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import java.io.FileOutputStream;"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import java.io.OutputStreamWriter;"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import java.io.Writer;"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import java.util.regex.Pattern;"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":" * Contains storage related static methods."},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"     * The name of the file to store data."},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"    public static final String FILE_NAME \u003d \"tasks.data\";"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"     * Saves the task list to file."},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     * @param tasks The task list to be stored."},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    public static void saveToFile(TaskList tasks) {"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"        assert FILE_NAME.length() \u003e 0 : \"FILE_NAME cannot be empty\";"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"            File fileObj \u003d new File(FILE_NAME);"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"            fileObj.createNewFile();"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"            // FileWriter fileWriter \u003d new FileWriter(FILE_NAME);"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"            Writer fileWriter \u003d new OutputStreamWriter(new FileOutputStream(FILE_NAME), StandardCharsets.UTF_8);"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"            fileWriter.write(tasks.toSavedString());"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"            fileWriter.close();"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"            Ui.printError(e);"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"     * Reads the task list from file."},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"    public static void readFromFile(TaskList tasks) {"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        assert FILE_NAME.length() \u003e 0 : \"FILE_NAME cannot be empty\";"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"            File fileObj \u003d new File(FILE_NAME);"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"            fileObj.createNewFile();"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"            Scanner fileReader \u003d new Scanner(fileObj);"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"            StringBuilder data \u003d new StringBuilder();"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"            while (fileReader.hasNextLine()) {"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"                data.append(fileReader.nextLine() + \"\\n\");"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"            fileReader.close();"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"            addToTaskList(data.toString(), tasks);"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        } catch (IOException e) {"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"            Ui.printError(e);"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"    private static void addToTaskList(String data, TaskList tasks) {"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        String[] lines \u003d data.split(\"\\n\");"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        for (String line : lines) {"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"            String[] sections \u003d line.split(Pattern.quote(\" | \"));"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"            if (sections[0].equals(\"T\")) {"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"                Task task \u003d new TodoTask(sections[2]);"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"                if (sections[1].equals(\"1\")) {"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"                    task.setIsDone(true);"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"                tasks.add(task);"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"            } else if (sections[0].equals(\"D\")) {"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"                Task task \u003d new DeadlineTask(sections[2], sections[3].equals(\"null\") ? null : sections[3]);"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"                if (sections[1].equals(\"1\")) {"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"                    task.setIsDone(true);"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"                tasks.add(task);"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"            } else if (sections[0].equals(\"E\")) {"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"                Task task \u003d new EventTask(sections[2], sections[3].equals(\"null\") ? null : sections[3]);"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"                if (sections[1].equals(\"1\")) {"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"                    task.setIsDone(true);"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"                tasks.add(task);"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":86}},{"path":"src/main/java/com/lirc572/ip/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":" * Represents a general task."},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"     * Whether the task is done."},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"    private boolean isDone;"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"     * The name of the task."},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    private final String name;"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"     * Constructs a new Task with the specified name."},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"     * @param name The name of the task."},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    public Task(String name) {"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"        this.name \u003d name;"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"        this.isDone \u003d false;"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"     * Returns the name of the Task."},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"     * @return The name of the Task."},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"    public String getName() {"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        return this.name;"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"     * Returns whether the task is done."},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"     * @return Whether the task is done."},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"    public boolean getIsDone() {"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"        return this.isDone;"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"     * Sets whether the task is done."},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"     * @param isDone Whether the task is done."},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    public void setIsDone(boolean isDone) {"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"     * Returns the string representation of the Task for storage."},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"     * @return The string representation of the Task for storage."},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"    public String getSavedString() {"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        return String.format("},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"                \"%d | %s\","},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"                this.getIsDone() ? 1 : 0,"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"                this.getName()"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        );"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"    public String toString() {"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        return String.format(\"[%s] %s\", this.getIsDone() ? \"X\" : \" \", this.getName());"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":71}},{"path":"src/main/java/com/lirc572/ip/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import java.util.function.Consumer;"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":" * Represents a task list."},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"     * An ArrayList of all tasks."},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"     * Constructs a new empty TaskList."},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    public TaskList() {"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"     * Constructs a new TaskList with the specified tasks."},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"     * @param tasks The tasks to be put into the TaskList."},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"     * Clears the task list and put the specified tasks into it as replacement."},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"     * @param tasks The new tasks to put into the task list."},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"    public void replaceWith(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"     * Adds the specified task to the task list."},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"     * @param task The task to be added to the task list."},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    public void add(Task task) {"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        this.tasks.add(task);"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"     * Performs the given action for each element of the Iterable until all elements have been processed."},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"     * This method simply wraps around the forEach() method of the ArrayList \u003ccode\u003etasks\u003c/code\u003e."},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"     * @param action The action to be performed for each element."},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    public void forEach(Consumer\u003c? super Task\u003e action) {"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        tasks.forEach(action);"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"     * Prints all tasks in a formatted manner."},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"    public String printAll() {"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        int index \u003d 0;"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        String res \u003d \"\";"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        for (Task task : this.tasks) {"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"            res +\u003d Ui.printLine(String.format(\"%d.%s\", ++index, task.toString()));"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        return res;"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"     * Returns the string representation of the TaskList for storage."},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"     * @return The string representation of the TaskList for storage."},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"    public String toSavedString() {"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        // Convert task list to a string"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        StringBuilder data \u003d new StringBuilder();"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        for (Task task : this.tasks) {"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"            data.append(task.getSavedString() + \"\\n\");"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        return data.toString();"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"     * Returns the number of tasks in the task list."},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"     * @return The number of tasks in the task list."},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"    public int getSize() {"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"        return this.tasks.size();"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"     * Marks the task with the specified index as done."},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"     * @param index The index of the task to be marked as done (one-based)."},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"    public void markAsDone(int index) {"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"        this.tasks.get(index - 1).setIsDone(true);"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"     * Returns the string representation of the task with the specified index."},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"     * @param index The index of the task to get (one-based)."},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"     * @return The string representation of the specified task."},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"    public String getTaskString(int index) {"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"        return this.tasks.get(index - 1).toString();"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"     * Returns the name of the specified task."},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"     * @param index The index of the task."},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"     * @return The name of the task."},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"    public String getTaskName(int index) {"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"        return this.tasks.get(index - 1).getName();"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"     * Deletes the task with the specified index."},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"     * @param index The index of the task to be deleted (one-based)."},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"     * @return The string representation of the task deleted."},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"    public String delete(int index) {"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"        String taskString \u003d this.getTaskString(index);"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"        this.tasks.remove(index - 1);"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"        return taskString;"},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":135}},{"path":"src/main/java/com/lirc572/ip/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":" * Represents a todo task (nothing more than a general task)."},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"public class TodoTask extends Task {"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"     * Constructs a new TodoTask with the specified name."},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"     * @param name The name of the task."},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"    public TodoTask(String name) {"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"        super(name);"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"     * Returns the string representation of the TodoTask for storage."},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"     * @return The string representation of the TodoTask for storage."},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    public String getSavedString() {"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"        return String.format("},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"                \"T | %d | %s\","},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"                this.getIsDone() ? 1 : 0,"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"                this.getName()"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"        );"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":35}},{"path":"src/main/java/com/lirc572/ip/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":" * Contains static methods for drawing UI."},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"     * The logo of Duke."},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"    private static final String logo \u003d \" ____        _        \\n\""},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"     * Prints one line of string with spaces in front."},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"     * @param line The line to print."},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    public static String printLine(String line) {"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"        return line + \"\\n\";"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"     * Prints a horizontal line."},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"    public static String printHorizontalLine() {"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"        return \"________________________________________\\n\";"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"     * Prints an empty line."},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    public static String printEmptyLine() {"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        return \"\\n\";"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"     * Prints the Duke logo."},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    public static String printLogo() {"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        String res \u003d \"\";"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        for (String line : logo.split(\"\\n\")) {"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"            res +\u003d printLine(line);"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        return res;"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"     * Prints the specified error message."},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"     * @param errorMessage The error message to print."},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    public static String printError(String errorMessage) {"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        return printLine(\"Error: \" + errorMessage);"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"     * Prints the error message of the specified Exception."},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"     * @param e The Exception whose error message is to be printed."},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"    public static String printError(Exception e) {"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        return printError(e.getMessage());"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":68}},{"path":"src/test/java/com/lirc572/ip/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":" * Tests Parser class."},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"public class ParserTest {"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"     * Stringifies an array of Strings"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"     * @param stringArray The String array to be stringified"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"     * @return The string representation of the array"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    private String stringifyStringArray(String[] stringArray) {"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"        StringBuilder result \u003d new StringBuilder(\"{ \");"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"        for (String element: stringArray) {"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"            result.append(element).append(\", \");"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"        return result.substring(0, result.length() - 2) + \" }\";"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"     * Tests stringifyStringArray() method."},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    public void testStringifyStringArray() {"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        final String[][] inputs \u003d new String[][]{"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"            {\"abc\"},"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"            {\"abc\", \"def\"},"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"            {\"abc\", \"def\", \"geh\"}"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        };"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        final String[] outputs \u003d {"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"            \"{ abc }\","},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"            \"{ abc, def }\","},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"            \"{ abc, def, geh }\""},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        };"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"        for (int i \u003d 0; i \u003c inputs.length; i++) {"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"            assertEquals(outputs[i], stringifyStringArray(inputs[i]));"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"     * Tests Parser.tokenizeCommand() method."},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    public void testTokenizeCommand() {"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        final String[] inputs \u003d {"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"            \"\","},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"            \"abc\","},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"            \"abc def\","},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"            \"abc def geh\","},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"            \"todo  \\\"New todo\\\"\","},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"            \"deadline \\\"submit homework\\\" /by 12:00\","},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"            \"event say_hi /at \\\"Sunday morning\\\"\","},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"            \"todo  \u0027New todo\u0027\","},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"            \"deadline \u0027submit homework\u0027 /by 12:00\","},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"            \"event say_hi /at \u0027Sunday morning\u0027\","},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"            \"deadline \\\"CS2103T IP\\\" /at \u0027Wednesday 12:59\u0027\","},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"            \"deadline \\\"CS2103T IP\\\" /at \\\"Wednesday 12:59\\\"\","},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"            \"todo  \\\"New \u0027todo\u0027\\\"\","},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"            \"todo  \\\"have lunch at Prince George\u0027s Park\\\"\","},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"            \"todo  \u0027tell Bob: \\\"Nice to meet you!\\\"\u0027\","},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        };"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        final String[][] outputs \u003d new String[][]{"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"            {},"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"            {\"abc\"},"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"            {\"abc\", \"def\"},"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"            {\"abc\", \"def\", \"geh\"},"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"            {\"todo\", \"New todo\"},"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"            {\"deadline\", \"submit homework\", \"/by\", \"12:00\"},"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"            {\"event\", \"say_hi\", \"/at\", \"Sunday morning\"},"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"            {\"todo\", \"New todo\"},"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"            {\"deadline\", \"submit homework\", \"/by\", \"12:00\"},"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"            {\"event\", \"say_hi\", \"/at\", \"Sunday morning\"},"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"            {\"deadline\", \"CS2103T IP\", \"/at\", \"Wednesday 12:59\"},"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"            {\"deadline\", \"CS2103T IP\", \"/at\", \"Wednesday 12:59\"},"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"            {\"todo\", \"New \u0027todo\u0027\"},"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"            {\"todo\", \"have lunch at Prince George\u0027s Park\"},"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"            {\"todo\", \"tell Bob: \\\"Nice to meet you!\\\"\"},"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"        };"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"        for (int i \u003d 0; i \u003c inputs.length; i++) {"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"            assertArrayEquals(outputs[i], Parser.tokenizeCommand(inputs[i]));"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":92}},{"path":"src/test/java/com/lirc572/ip/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":" * Tests TaskList class."},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"public class TaskListTest {"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"     * Tests TaskList.toSavedString() method."},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    public void testToSavedString() {"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"        tasks.add(new TodoTask(\"hello\"));"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"T | 0 | hello\\n\", tasks.toSavedString());"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"        tasks.add(new TodoTask(\"hi\"));"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"T | 0 | hello\\nT | 0 | hi\\n\", tasks.toSavedString());"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":24}},{"path":"src/test/java/com/lirc572/ip/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package com.lirc572.ip;"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":" * Tests Task class."},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":" */"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"public class TaskTest {"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"     * Tests Task.getName() method."},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"    public void testGetName() {"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"lirc572\", new Task(\"lirc572\").getName());"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"275cril\", new Task(\"275cril\").getName());"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"     * Tests Task.getIsDone() and Task.setIsDone() methods."},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    public void testGetIsDone_setIsDone() {"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"        Task task \u003d new Task(\"lirc572\");"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"        assertFalse(task.getIsDone());"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"        task.setIsDone(true);"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"        assertTrue(task.getIsDone());"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        task.setIsDone(false);"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        assertFalse(task.getIsDone());"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"     * Tests Task.toString() method."},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"    public void testToString() {"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        Task task \u003d new Task(\"lirc572\");"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"[ ] lirc572\", task.toString());"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"        task.setIsDone(true);"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"[X] lirc572\", task.toString());"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":""},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"     * Tests Task.toSavedString() method."},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    public void testToSavedString() {"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        Task task \u003d new Task(\"lirc572\");"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"0 | lirc572\", task.getSavedString());"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        task.setIsDone(true);"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"1 | lirc572\", task.getSavedString());"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"}"}],"authorContributionMap":{"lirc572":57}}]
