[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"# Duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"1. After the importing is complete, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"-":24,"AiwassPrime":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    mainClassName \u003d \"seedu.duke.Duke.Duke\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":45,"AiwassPrime":1}},{"path":"src/main/java/duke/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":" * Type of \"add\" command."},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"public enum CommandType {"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"    Todo,"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"    Deadline,"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"    Event"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":10}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":" * This is the Main class for Duke."},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"        UI.mainLoop();"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":4,"AiwassPrime":7}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":" * Handles all exception thrown by duke."},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"     * DukeException builder."},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"     * @param message Exception message."},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"    public DukeException(String message) {"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"        super(message);"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":16}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.command.*;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":" * A class that identify the keyword of given string."},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"     * Returns the command according to the first word."},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"     * Arguments are not parsed in this method."},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"     * @param str Input string."},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"     * @return Commands."},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException If the first word is not any known command type."},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    public static Command parseCommand(String str) throws DukeException {"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"        int strLength \u003d str.length();"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"        if (str.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"            return new ExitCommand();"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"        } else if (str.equalsIgnoreCase(\"list\")) {"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"            return new ListCommand();"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"        } else if (str.length() \u003e\u003d 9 \u0026\u0026 str.substring(0, 9).equalsIgnoreCase(\"deadline \")) {"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"            return new AddCommand(str, CommandType.Deadline);"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"        } else if (strLength \u003e\u003d 7 \u0026\u0026 str.substring(0, 7).equalsIgnoreCase(\"delete \")) {"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"            return new DeleteCommand(str);"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"        } else if (strLength \u003e\u003d 6 \u0026\u0026 str.substring(0, 6).equalsIgnoreCase(\"event \")) {"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"            return new AddCommand(str, CommandType.Event);"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"        } else if (strLength \u003e\u003d 5 \u0026\u0026 str.substring(0, 5).equalsIgnoreCase(\"todo \")) {"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"            return new AddCommand(str, CommandType.Todo);"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"        } else if (strLength \u003e\u003d 5 \u0026\u0026 str.substring(0, 5).equalsIgnoreCase(\"done \")) {"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"            return new DoneCommand(str);"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"        } else if (strLength \u003e\u003d 5 \u0026\u0026 str.substring(0, 5).equalsIgnoreCase(\"find \")) {"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"            return new FindCommand(str);"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(\"Invalid command\");"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":40}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"import java.time.LocalDateTime;"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"import java.util.Objects;"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"import java.util.Scanner;"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":" * A class that handles all I/O related matter."},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"public class Storage {"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    // Output date and time in this manner."},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    private static final DateTimeFormatter FORMAT_PRINT \u003d"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    private static File file;"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    private static Scanner sc;"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"     * Converts data that saved in data.txt to Task object."},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"     * @param command Strings in the format of my own design."},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"     * @return Tasks to be stored in the TaskList."},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"    public static Task loadData(String command) {"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"        if (command.charAt(0) \u003d\u003d \u0027T\u0027) {"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"            Todo result \u003d new Todo(command.substring(8));"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"            if (command.charAt(4) !\u003d \u00270\u0027) {"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"                result.markAsDone();"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"            return result;"},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"        } else if (command.charAt(0) \u003d\u003d \u0027D\u0027) {"},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"            int position \u003d command.indexOf(\"@@@\");"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"            Deadline result \u003d new Deadline(command.substring(8, position - 1),"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"                    LocalDateTime.from(FORMAT_PRINT.parse(command.substring(position + 3))));"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"            if (command.charAt(4) !\u003d \u00270\u0027) {"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"                result.markAsDone();"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"            return result;"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"            int position \u003d command.indexOf(\"@@@\");"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"            Event result \u003d new Event(command.substring(8, position - 1),"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"                    LocalDateTime.from(FORMAT_PRINT.parse(command.substring(position + 3))));"},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"            if (command.charAt(4) !\u003d \u00270\u0027) {"},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"                result.markAsDone();"},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"            return result;"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":"     * Converts Task to string in a designed manner."},{"lineNumber":63,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"AiwassPrime"},"content":"     * @param task Task that need to be saved."},{"lineNumber":65,"author":{"gitId":"AiwassPrime"},"content":"     * @return Output string that need to be written into save data."},{"lineNumber":66,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"AiwassPrime"},"content":"    public static String saveData(Task task) {"},{"lineNumber":68,"author":{"gitId":"AiwassPrime"},"content":"        if (task.getSaveType() \u003d\u003d \"T\") {"},{"lineNumber":69,"author":{"gitId":"AiwassPrime"},"content":"            return task.getSaveType() + \" | \" + (task.getStatus() ? \"1\" : \"0\")"},{"lineNumber":70,"author":{"gitId":"AiwassPrime"},"content":"                    + \" | \" + task.getDescription() + \"\\n\";"},{"lineNumber":71,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":72,"author":{"gitId":"AiwassPrime"},"content":"            return task.getSaveType() + \" | \" + (task.getStatus() ? \"1\" : \"0\")"},{"lineNumber":73,"author":{"gitId":"AiwassPrime"},"content":"                    + \" | \" + task.getDescription() + \" @@@\" + task.getSaveTime() + \"\\n\";"},{"lineNumber":74,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":77,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"AiwassPrime"},"content":"     * Initialize the save data file and scanner of that file."},{"lineNumber":79,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"AiwassPrime"},"content":"     * @throws IOException When unable to create a file due to any security reason."},{"lineNumber":81,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"AiwassPrime"},"content":"    public static void init() throws IOException {"},{"lineNumber":83,"author":{"gitId":"AiwassPrime"},"content":"        File dir \u003d new File(\"data\");"},{"lineNumber":84,"author":{"gitId":"AiwassPrime"},"content":"        if (!dir.exists()) {"},{"lineNumber":85,"author":{"gitId":"AiwassPrime"},"content":"            dir.mkdirs();"},{"lineNumber":86,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"AiwassPrime"},"content":"        file \u003d new File(\"data\" + File.separatorChar + \"data.txt\");"},{"lineNumber":88,"author":{"gitId":"AiwassPrime"},"content":"        if (!file.exists()) {"},{"lineNumber":89,"author":{"gitId":"AiwassPrime"},"content":"            file.createNewFile();"},{"lineNumber":90,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"AiwassPrime"},"content":"        sc \u003d new Scanner(file);"},{"lineNumber":92,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":94,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"AiwassPrime"},"content":"     * Loads the entire save data to a TaskList by calling multiple loadData."},{"lineNumber":96,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"AiwassPrime"},"content":"     * @return TaskList that presents the initial state of Duke robot."},{"lineNumber":98,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"AiwassPrime"},"content":"    public static TaskList loadToList() {"},{"lineNumber":100,"author":{"gitId":"AiwassPrime"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":101,"author":{"gitId":"AiwassPrime"},"content":"        while (Objects.requireNonNull(sc).hasNextLine()) {"},{"lineNumber":102,"author":{"gitId":"AiwassPrime"},"content":"            list.addJob(loadData(sc.nextLine()));"},{"lineNumber":103,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"AiwassPrime"},"content":"        return list;"},{"lineNumber":105,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":107,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"AiwassPrime"},"content":"     * Initialises the writer and writes to save data file by calling multiple saveData."},{"lineNumber":109,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":110,"author":{"gitId":"AiwassPrime"},"content":"     * @param list Data need to be converted and written."},{"lineNumber":111,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"AiwassPrime"},"content":"    public static void writeToData(TaskList list) {"},{"lineNumber":113,"author":{"gitId":"AiwassPrime"},"content":"        String saveData \u003d \"\";"},{"lineNumber":114,"author":{"gitId":"AiwassPrime"},"content":"        for (int i \u003d 0; i \u003c list.getSize(); i++) {"},{"lineNumber":115,"author":{"gitId":"AiwassPrime"},"content":"            saveData \u003d saveData.concat(saveData(list.getJob(i)));"},{"lineNumber":116,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":118,"author":{"gitId":"AiwassPrime"},"content":"            FileWriter writer \u003d new FileWriter(file);"},{"lineNumber":119,"author":{"gitId":"AiwassPrime"},"content":"            writer.write(saveData);"},{"lineNumber":120,"author":{"gitId":"AiwassPrime"},"content":"            writer.close();"},{"lineNumber":121,"author":{"gitId":"AiwassPrime"},"content":"        } catch (IOException e) {"},{"lineNumber":122,"author":{"gitId":"AiwassPrime"},"content":"            System.out.println(\"Unable to save file.\");"},{"lineNumber":123,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":125}},{"path":"src/main/java/duke/StringParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":" * A class that deals with all special string matter for Duke."},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"public class StringParser {"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"    // User should type in date and time in this manner."},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    private static final DateTimeFormatter FORMAT_SCAN \u003d"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     * Parses user type in date and time."},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"     * @param str Parsed user input."},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"     * @return LocalDateTime that represent the time."},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    public static LocalDateTime parseTime(String str) {"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"        return LocalDateTime.from(FORMAT_SCAN.parse(str));"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"     * String splitter, when characters exceed length, split the string into two lines."},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"     * @param str Input string."},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"     * @param length Desired length of a line."},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"     * @return Spitted string."},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    public static String newLiner(String str, int length) {"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"        assert length \u003e 0;"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"        StringBuilder resultStr \u003d new StringBuilder();"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"        while (str.length() \u003e length) {"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"            resultStr.append(str, 0, length).append(\"\\n\");"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"            str \u003d str.substring(length);"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"        return resultStr.toString() + str + \"\\n\";"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"     * To generate underline."},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"     * @param length Length of underline."},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"     * @return Underline."},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"    public static String generateUnderline(int length) {"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"        return \"_\".repeat(length) + \"\\n\";"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"     * Simply check if a given string are made in \u0027 \u0027."},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"     * @param str Input string."},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"     * @return Boolean value of the answer."},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"    public static boolean isBlank(String str) {"},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"        for (int i \u003d 0; i \u003c str.length(); i++) {"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"            if (str.charAt(i) !\u003d \u0027 \u0027) {"},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":"                return false;"},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"AiwassPrime"},"content":"        return true;"},{"lineNumber":65,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":66}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" * ArrayList adapted to Duke."},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    private final ArrayList\u003cTask\u003e list;"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"    public TaskList() {"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"         this.list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    public void addJob(Task t) {"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"        this.list.add(t);"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    public Task getJob(int index) {"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"        return this.list.get(index);"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    public int getSize() {"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"        return this.list.size();"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    public void replaceJob(int index, Task newTask) {"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"        this.list.remove(index);"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"        this.list.add(index, newTask);"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"    public void deleteJob(int index) {"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"        this.list.remove(index);"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"     * Formats the list to its output format."},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"     * @param length For newLiner."},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"     * @return String in correct format."},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"    public String formatList(int length) {"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"        StringBuilder resultStr \u003d new StringBuilder();"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"            resultStr.append(StringParser.newLiner((i + 1) + \".\""},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"                    + list.get(i).toString(), length));"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"        return resultStr.toString();"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":53}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":" * User interface of Duke."},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"public class UI {"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"    // Set the desire length of a line."},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_OF_LINE \u003d 80;"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"    // Welcome page."},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"    private static final String welcome \u003d \" __________________________ \\n\""},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"            + \"|  HI! THIS IS             |\\n\""},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"            + \"|   ____        _          |\\n\""},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"            + \"|  |  _ \\\\ _   _| | _____   |\\n\""},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"            + \"|  | | | | | | | |/ / _ \\\\  |\\n\""},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"            + \"|  | |_| | |_| |   \u003c  __/  |\\n\""},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"            + \"|  |____/ \\\\__,_|_|\\\\_\\\\___|  |\\n\""},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"            + \"|                          |\\n\""},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"            + \"|  What can I do for you?  |\\n\""},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"            + \"|__________________________|\\n\";"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    // Goodbye page."},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"    private static final String bye \u003d \" __________________________ \\n\""},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"            + \"|  GOOD BYE!               |\\n\""},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"            + \"|   ____        _          |\\n\""},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"            + \"|  |  _ \\\\ _   _| | _____   |\\n\""},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"            + \"|  | | | | | | | |/ / _ \\\\  |\\n\""},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"            + \"|  | |_| | |_| |   \u003c  __/  |\\n\""},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"            + \"|  |____/ \\\\__,_|_|\\\\_\\\\___|  |\\n\""},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"            + \"|                          |\\n\""},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"            + \"|  Always be with you.     |\\n\""},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"            + \"|__________________________|\\n\";"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"    // Underline."},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"    private static final String horizontalLine \u003d StringParser.generateUnderline(LENGTH_OF_LINE);"},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"    private static TaskList list \u003d new TaskList();"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"     * Print DukeException."},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"     * @param e DukeException."},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"    private static void printError(DukeException e) {"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"        System.out.print(e.getMessage() + \"\\n\");"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"     * Loads the save data and greets."},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"    private static void loadAndSayHello() {"},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"        list \u003d Storage.loadToList();"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"        System.out.println(welcome);"},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":63,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"AiwassPrime"},"content":"     * Saves the data to save data file and says goodbye."},{"lineNumber":65,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"AiwassPrime"},"content":"    private static void saveAndGoodBye() {"},{"lineNumber":67,"author":{"gitId":"AiwassPrime"},"content":"        Storage.writeToData(list);"},{"lineNumber":68,"author":{"gitId":"AiwassPrime"},"content":"        System.out.println(bye);"},{"lineNumber":69,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":71,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"AiwassPrime"},"content":"     * Main loop for Duke."},{"lineNumber":73,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"AiwassPrime"},"content":"    public static void mainLoop() {"},{"lineNumber":75,"author":{"gitId":"AiwassPrime"},"content":"        boolean isExit \u003d false;"},{"lineNumber":76,"author":{"gitId":"AiwassPrime"},"content":"        String commandStr;"},{"lineNumber":77,"author":{"gitId":"AiwassPrime"},"content":"        Command command;"},{"lineNumber":78,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":79,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":80,"author":{"gitId":"AiwassPrime"},"content":"            Storage.init();"},{"lineNumber":81,"author":{"gitId":"AiwassPrime"},"content":"        } catch (IOException e) {"},{"lineNumber":82,"author":{"gitId":"AiwassPrime"},"content":"            e.printStackTrace();"},{"lineNumber":83,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":85,"author":{"gitId":"AiwassPrime"},"content":"        loadAndSayHello();"},{"lineNumber":86,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":87,"author":{"gitId":"AiwassPrime"},"content":"        while (!isExit) {"},{"lineNumber":88,"author":{"gitId":"AiwassPrime"},"content":"            commandStr \u003d sc.nextLine();"},{"lineNumber":89,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":90,"author":{"gitId":"AiwassPrime"},"content":"            System.out.print(horizontalLine);"},{"lineNumber":91,"author":{"gitId":"AiwassPrime"},"content":"            try {"},{"lineNumber":92,"author":{"gitId":"AiwassPrime"},"content":"                command \u003d Parser.parseCommand(commandStr);"},{"lineNumber":93,"author":{"gitId":"AiwassPrime"},"content":"                command.executeAndPrint(list, LENGTH_OF_LINE);"},{"lineNumber":94,"author":{"gitId":"AiwassPrime"},"content":"                isExit \u003d command.isExit();"},{"lineNumber":95,"author":{"gitId":"AiwassPrime"},"content":"                if (!isExit) {"},{"lineNumber":96,"author":{"gitId":"AiwassPrime"},"content":"                    System.out.print(horizontalLine);"},{"lineNumber":97,"author":{"gitId":"AiwassPrime"},"content":"                }"},{"lineNumber":98,"author":{"gitId":"AiwassPrime"},"content":"            } catch (DukeException e) {"},{"lineNumber":99,"author":{"gitId":"AiwassPrime"},"content":"                printError(e);"},{"lineNumber":100,"author":{"gitId":"AiwassPrime"},"content":"                System.out.print(horizontalLine);"},{"lineNumber":101,"author":{"gitId":"AiwassPrime"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"AiwassPrime"},"content":"        saveAndGoodBye();"},{"lineNumber":104,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":106,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":106}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.CommandType;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.StringParser;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Event;"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Todo;"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"import java.time.DateTimeException;"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":" * Command type add."},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"public class AddCommand extends Command {"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"    private final String command;"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    private final CommandType cmdType;"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"     * Add command builder."},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"     * @param command Input string."},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"     * @param cmdType Determine whether this command is TODO, EVENT or DEADLINE."},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    public AddCommand(String command, CommandType cmdType) {"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"        this.command \u003d command;"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"        this.cmdType \u003d cmdType;"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"     * Check the validity of this command and build a todo task."},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"     * @return Todo task."},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When command argument is invalid."},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"    private Task convertToTodo() throws DukeException {"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"        if (command.length() \u003c\u003d 5) {"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(\"Invalid argument: Argument field cannot be empty.\");"},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"            String subStr \u003d command.substring(5);"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"            if (StringParser.isBlank(subStr)) {"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"                throw new DukeException(\"Invalid argument: Content field is blank\");"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"            } else {"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"                return new Todo(command.substring(5));"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"     * Check the validity of this command and build a event task."},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"     * @return Event task."},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When command argument is invalid."},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"    private Task convertToEvent() throws DukeException {"},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"        if (command.length() \u003c\u003d 9) {"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(\"Invalid argument: Argument field cannot be empty.\");"},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":"            int indexOfAt \u003d command.toLowerCase().indexOf(\"/at\");"},{"lineNumber":63,"author":{"gitId":"AiwassPrime"},"content":"            String subStrContent \u003d command.substring(6, indexOfAt - 1);"},{"lineNumber":64,"author":{"gitId":"AiwassPrime"},"content":"            String subStrTime \u003d command.substring(indexOfAt + 4);"},{"lineNumber":65,"author":{"gitId":"AiwassPrime"},"content":"            if (StringParser.isBlank(subStrContent)) {"},{"lineNumber":66,"author":{"gitId":"AiwassPrime"},"content":"                throw new DukeException(\"Void argument: Content field is blank\");"},{"lineNumber":67,"author":{"gitId":"AiwassPrime"},"content":"            } else if (StringParser.isBlank(subStrTime)) {"},{"lineNumber":68,"author":{"gitId":"AiwassPrime"},"content":"                throw new DukeException(\"Void argument: Time field is blank\");"},{"lineNumber":69,"author":{"gitId":"AiwassPrime"},"content":"            } else {"},{"lineNumber":70,"author":{"gitId":"AiwassPrime"},"content":"                try {"},{"lineNumber":71,"author":{"gitId":"AiwassPrime"},"content":"                    return new Event(subStrContent, StringParser.parseTime(subStrTime));"},{"lineNumber":72,"author":{"gitId":"AiwassPrime"},"content":"                } catch (DateTimeException e) {"},{"lineNumber":73,"author":{"gitId":"AiwassPrime"},"content":"                    throw new DukeException(\"Incorrect time format: Correct format is yyyy-MM-dd HHmm\");"},{"lineNumber":74,"author":{"gitId":"AiwassPrime"},"content":"                }"},{"lineNumber":75,"author":{"gitId":"AiwassPrime"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":79,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"AiwassPrime"},"content":"     * Check the validity of this command and build a deadline task."},{"lineNumber":81,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"AiwassPrime"},"content":"     * @return Deadline task."},{"lineNumber":83,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When command argument is invalid."},{"lineNumber":84,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"AiwassPrime"},"content":"    private Task convertToDeadline() throws DukeException {"},{"lineNumber":86,"author":{"gitId":"AiwassPrime"},"content":"        if (command.length() \u003c\u003d 6) {"},{"lineNumber":87,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(\"Invalid argument: Argument field cannot be empty.\");"},{"lineNumber":88,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":89,"author":{"gitId":"AiwassPrime"},"content":"            int indexOfBy \u003d command.toLowerCase().indexOf(\"/by\");"},{"lineNumber":90,"author":{"gitId":"AiwassPrime"},"content":"            String subStrContent \u003d command.substring(9, indexOfBy - 1);"},{"lineNumber":91,"author":{"gitId":"AiwassPrime"},"content":"            String subStrTime \u003d command.substring(indexOfBy + 4);"},{"lineNumber":92,"author":{"gitId":"AiwassPrime"},"content":"            if (StringParser.isBlank(subStrContent)) {"},{"lineNumber":93,"author":{"gitId":"AiwassPrime"},"content":"                throw new DukeException(\"Void argument: Content field is blank\");"},{"lineNumber":94,"author":{"gitId":"AiwassPrime"},"content":"            } else if (StringParser.isBlank(subStrTime)) {"},{"lineNumber":95,"author":{"gitId":"AiwassPrime"},"content":"                throw new DukeException(\"Void argument: Time field is blank\");"},{"lineNumber":96,"author":{"gitId":"AiwassPrime"},"content":"            } else {"},{"lineNumber":97,"author":{"gitId":"AiwassPrime"},"content":"                try {"},{"lineNumber":98,"author":{"gitId":"AiwassPrime"},"content":"                    return new Deadline(subStrContent, StringParser.parseTime(subStrTime));"},{"lineNumber":99,"author":{"gitId":"AiwassPrime"},"content":"                } catch (DateTimeException e) {"},{"lineNumber":100,"author":{"gitId":"AiwassPrime"},"content":"                    throw new DukeException(\"Incorrect time format: Correct format is yyyy-MM-dd HHmm\");"},{"lineNumber":101,"author":{"gitId":"AiwassPrime"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"AiwassPrime"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":106,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"AiwassPrime"},"content":"     * Execute and print command according to its command type."},{"lineNumber":108,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"AiwassPrime"},"content":"     * @param list Passes TaskList in case of reading and writing to the list."},{"lineNumber":110,"author":{"gitId":"AiwassPrime"},"content":"     * @param length For printer to call newLiner, make Duke looks nice."},{"lineNumber":111,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When encounter an error in command argument."},{"lineNumber":112,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":114,"author":{"gitId":"AiwassPrime"},"content":"    public void executeAndPrint(TaskList list, int length) throws DukeException {"},{"lineNumber":115,"author":{"gitId":"AiwassPrime"},"content":"        Task task;"},{"lineNumber":116,"author":{"gitId":"AiwassPrime"},"content":"        switch (this.cmdType) {"},{"lineNumber":117,"author":{"gitId":"AiwassPrime"},"content":"        case Todo:"},{"lineNumber":118,"author":{"gitId":"AiwassPrime"},"content":"            task \u003d convertToTodo();"},{"lineNumber":119,"author":{"gitId":"AiwassPrime"},"content":"            break;"},{"lineNumber":120,"author":{"gitId":"AiwassPrime"},"content":"        case Event:"},{"lineNumber":121,"author":{"gitId":"AiwassPrime"},"content":"            task \u003d convertToEvent();"},{"lineNumber":122,"author":{"gitId":"AiwassPrime"},"content":"            break;"},{"lineNumber":123,"author":{"gitId":"AiwassPrime"},"content":"        case Deadline:"},{"lineNumber":124,"author":{"gitId":"AiwassPrime"},"content":"            task \u003d convertToDeadline();"},{"lineNumber":125,"author":{"gitId":"AiwassPrime"},"content":"            break;"},{"lineNumber":126,"author":{"gitId":"AiwassPrime"},"content":"        default:"},{"lineNumber":127,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(\"Unexpected value: \" + this.cmdType);"},{"lineNumber":128,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"AiwassPrime"},"content":"        list.addJob(task);"},{"lineNumber":130,"author":{"gitId":"AiwassPrime"},"content":"        System.out.print(\"Task added:\\n\" + StringParser.newLiner(task.toString(), length)"},{"lineNumber":131,"author":{"gitId":"AiwassPrime"},"content":"                + \"Now you have \" + list.getSize()"},{"lineNumber":132,"author":{"gitId":"AiwassPrime"},"content":"                + (list.getSize() \u003d\u003d 1 ? \" task in the list\\n\" : \" tasks in the list\\n\"));"},{"lineNumber":133,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":135,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":136,"author":{"gitId":"AiwassPrime"},"content":"    public boolean isExit() {"},{"lineNumber":137,"author":{"gitId":"AiwassPrime"},"content":"        return false;"},{"lineNumber":138,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":140,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":141,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":142,"author":{"gitId":"AiwassPrime"},"content":"        switch (this.cmdType) {"},{"lineNumber":143,"author":{"gitId":"AiwassPrime"},"content":"        case Todo:"},{"lineNumber":144,"author":{"gitId":"AiwassPrime"},"content":"            return \"Test usage: this is a TODO command\";"},{"lineNumber":145,"author":{"gitId":"AiwassPrime"},"content":"        case Deadline:"},{"lineNumber":146,"author":{"gitId":"AiwassPrime"},"content":"            return \"Test usage: this is a DEADLINE command\";"},{"lineNumber":147,"author":{"gitId":"AiwassPrime"},"content":"        case Event:"},{"lineNumber":148,"author":{"gitId":"AiwassPrime"},"content":"            return \"Test usage: this is an EVENT command\";"},{"lineNumber":149,"author":{"gitId":"AiwassPrime"},"content":"        default:"},{"lineNumber":150,"author":{"gitId":"AiwassPrime"},"content":"            return \"Error: this will never happen\";"},{"lineNumber":151,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":153}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":" * Abstract class for Tasks."},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"public abstract class Command {"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"     * Command execution prototype."},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"     * @param list Passes TaskList in case of reading and writing to the list."},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"     * @param length For printer to call newLiner, make Duke looks nice."},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When encounter an error in command argument."},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    public abstract void executeAndPrint(TaskList list, int length) throws DukeException;"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"    public abstract boolean isExit();"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":20}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.StringParser;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":" * Command type delete."},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"    private final String command;"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     * Delete command builder."},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"     * @param command Input string."},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    public DeleteCommand(String command) {"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"        this.command \u003d command;"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"     * Execute and print a delete command."},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"     * @param list Passes TaskList in case of reading and writing to the list."},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"     * @param length For printer to call newLiner, make Duke looks nice."},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When encounter an error in command argument."},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    public void executeAndPrint(TaskList list, int length) throws DukeException {"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"        int index;"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"            index \u003d Integer.parseInt(command.substring(7)) - 1;"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(\"Invalid Argument: Input must to be integer\");"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"        if (index \u003c list.getSize() \u0026\u0026 index \u003e\u003d 0) {"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"            Task currTask \u003d list.getJob(index);"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"            list.deleteJob(index);"},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"            System.out.print(\"This task is deleted: \\n\""},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"                    + StringParser.newLiner(currTask.toString(), length)"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"                    + \"Now you have \" + list.getSize()"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"                    + (list.getSize() \u003d\u003d 1 ? \" task in the list\\n\" : \" tasks in the list\\n\"));"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"            System.out.print(\"No such task in the list\\n\");"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"    public boolean isExit() {"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"        return false;"},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"        return \"Test usage: this is a DELETE command\";"},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":60}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.StringParser;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":" * Command type done."},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"public class DoneCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"    private final String command;"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     * Done command builder."},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"     * @param command Input string."},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    public DoneCommand(String command) {"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"        this.command \u003d command;"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"     * Execute and print a done command."},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"     * @param list Passes TaskList in case of reading and writing to the list."},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"     * @param length For printer to call newLiner, make Duke looks nice."},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When encounter an error in command argument."},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    public void executeAndPrint(TaskList list, int length) throws DukeException {"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"        int index;"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"            index \u003d Integer.parseInt(command.substring(5)) - 1;"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(\"Invalid Argument: Input must to be integer\");"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"        if (index \u003c list.getSize() \u0026\u0026 index \u003e\u003d 0) {"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"            Task currTask \u003d list.getJob(index);"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"            currTask.markAsDone();"},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"            list.replaceJob(index, currTask);"},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"            System.out.print(\"This task is marked as done: \\n\""},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"                    + StringParser.newLiner(currTask.toString(), length));"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"            System.out.print(\"No such task in the list\\n\");"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"    public boolean isExit() {"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"        return false;"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"        return \"Test usage: this is a DONE command\";"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":59}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":" * Command type exit."},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"public class ExitCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"     * Execute and print a exit command."},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"     * @param list Passes TaskList in case of reading and writing to the list."},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"     * @param length For printer to call newLiner, make Duke looks nice."},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When encounter an error in command argument."},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"    public void executeAndPrint(TaskList list, int length) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    public boolean isExit() {"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"        return true;"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"        return \"Test usage: this is an EXIT command\";"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":31}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.StringParser;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" * Command type find."},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"public class FindCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    private final String command;"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"     * Find command builder."},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"     * @param command Input string."},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"    public FindCommand(String command) {"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"        this.command \u003d command;"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"     * Execute and print a find command."},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"     * @param list Passes TaskList in case of reading and writing to the list."},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"     * @param length For printer to call newLiner, make Duke looks nice."},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When encounter an error in command argument."},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"    public void executeAndPrint(TaskList list, int length) throws DukeException {"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"        if (command.length() \u003c\u003d 5) {"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(\"Invalid argument: Argument field cannot be empty.\");"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"            String subStr \u003d command.substring(5);"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"            if (StringParser.isBlank(subStr)) {"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"                throw new DukeException(\"Invalid argument: Content field is blank\");"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"            } else {"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"                TaskList tempList \u003d new TaskList();"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"                for (int i \u003d 0; i \u003c list.getSize(); i++) {"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"                    if (list.getJob(i).getDescription().contains(subStr)) {"},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"                        tempList.addJob(list.getJob(i));"},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"                    }"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"                }"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"                if (tempList.getSize() \u003d\u003d 0) {"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"                    System.out.print(\"No result found\\n\");"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"                } else {"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"                    System.out.print(\"Here are the matching tasks in the list:\\n\""},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"                            + tempList.formatList(length));"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"    public boolean isExit() {"},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"        return false;"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":59}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.StringParser;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" * Command type list."},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"     * Execute and print a list command."},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"     * @param list Passes TaskList in case of reading and writing to the list."},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     * @param length For printer to call newLiner, make Duke looks nice."},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When encounter an error in command argument."},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    public void executeAndPrint(TaskList list, int length) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"        if (list.getSize() \u003d\u003d 0) {"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"            System.out.print(\"List is empty\\n\");"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"            System.out.print(list.formatList(length));"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"    public boolean isExit() {"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"        return false;"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"        return \"Test usage: this is a LIST command\";"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":37}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":" * Task type deadline."},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"    private final LocalDateTime by;"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    private final DateTimeFormatter formatter \u003d"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"        this.by \u003d by;"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    public String getSaveTime() {"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"        return by.format(formatter);"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    public String getSaveType() {"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"        return \"E\";"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"        return \"[D]\" + super.toString()"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"                + \" (by: \" + by.format(formatter) + \")\";"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":35}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":" * Task type event."},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"    private final LocalDateTime at;"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    private final DateTimeFormatter formatter \u003d"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    public Event(String description, LocalDateTime at) {"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"        this.at \u003d at;"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    public String getSaveTime() {"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"        return at.format(formatter);"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    public String getSaveType() {"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"        return \"E\";"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"        return \"[E]\" + super.toString()"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"                + \" (at: \" + at.format(formatter) + \")\";"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":35}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":" * Abstract class for Tasks."},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"    private final String description;"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"    private boolean isDone;"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"     * Task builder prototype."},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"     * Sets isDone to false by default."},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"     * @param description Parsed string contains description of this task."},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"    public Task(String description) {"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"        this.isDone \u003d false;"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    public String getDescription() {"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"        return this.description;"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    public boolean getStatus() {"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"        return isDone;"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    public abstract String getSaveTime();"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    public abstract String getSaveType();"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"    public void markAsDone() {"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"        this.isDone \u003d true;"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"     * Y is done, N is not done."},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"     * @return String that represents the status to show for printing."},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"    public String getStatusIcon() {"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"        // Tick and cross is not displayed correctly in my local environment."},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"        return (isDone ? \"Y\" : \"N\");"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":53}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":" * Task type todo."},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"    public Todo(String description) {"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"    public String getSaveTime() {"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"        return \"\";"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    public String getSaveType() {"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"        return \"T\";"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":26}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":"import duke.Parser;"},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"public class ParserTest {"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"    private class DummyTaskList extends TaskList {"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"        DummyTaskList() {"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"            super();"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_Bye() throws DukeException {"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is an EXIT command\","},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"bye\", new TaskList()).toString());"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is an EXIT command\","},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"BYE\", new TaskList()).toString());"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is an EXIT command\","},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"bYe\", new TaskList()).toString());"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_List() throws DukeException {"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a LIST command\","},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"list\", new TaskList()).toString());"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a LIST command\","},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"LIST\", new TaskList()).toString());"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a LIST command\","},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"LisT\", new TaskList()).toString());"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_Deadline() throws DukeException {"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DEADLINE command\","},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"deadline \", new TaskList()).toString());"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DEADLINE command\","},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"DEADLINE \", new TaskList()).toString());"},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DEADLINE command\","},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"DeadLINe \", new TaskList()).toString());"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_Event() throws DukeException {"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is an EVENT command\","},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"event \", new TaskList()).toString());"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is an EVENT command\","},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"EVENT \", new TaskList()).toString());"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is an EVENT command\","},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"EvenT \", new TaskList()).toString());"},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_Todo() throws DukeException {"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a TODO command\","},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"todo \", new TaskList()).toString());"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a TODO command\","},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"TODO \", new TaskList()).toString());"},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a TODO command\","},{"lineNumber":63,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"TodO \", new TaskList()).toString());"},{"lineNumber":64,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":66,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_Delete() throws DukeException {"},{"lineNumber":68,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DELETE command\","},{"lineNumber":69,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"delete \", new TaskList()).toString());"},{"lineNumber":70,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DELETE command\","},{"lineNumber":71,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"DELETE \", new TaskList()).toString());"},{"lineNumber":72,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DELETE command\","},{"lineNumber":73,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"dElEte \", new TaskList()).toString());"},{"lineNumber":74,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":76,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":77,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_Done() throws DukeException {"},{"lineNumber":78,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DONE command\","},{"lineNumber":79,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"done \", new TaskList()).toString());"},{"lineNumber":80,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DONE command\","},{"lineNumber":81,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"DONE \", new TaskList()).toString());"},{"lineNumber":82,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DONE command\","},{"lineNumber":83,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"DoNe \", new TaskList()).toString());"},{"lineNumber":84,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":86,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":87,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_invalidCommandOneLetter_exceptionThrown() {"},{"lineNumber":88,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":89,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"\","},{"lineNumber":90,"author":{"gitId":"AiwassPrime"},"content":"                    Parser.parseCommand(\"a\", new TaskList()).toString());"},{"lineNumber":91,"author":{"gitId":"AiwassPrime"},"content":"            fail();"},{"lineNumber":92,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DukeException e) {"},{"lineNumber":93,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"Invalid command\", e.getMessage());"},{"lineNumber":94,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":97,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":98,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_invalidCommandZeroLetter_exceptionThrown() {"},{"lineNumber":99,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":100,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"\","},{"lineNumber":101,"author":{"gitId":"AiwassPrime"},"content":"                    Parser.parseCommand(\"\", new TaskList()).toString());"},{"lineNumber":102,"author":{"gitId":"AiwassPrime"},"content":"            fail();"},{"lineNumber":103,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DukeException e) {"},{"lineNumber":104,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"Invalid command\", e.getMessage());"},{"lineNumber":105,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":108,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":109,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_invalidCommandLongLetter_exceptionThrown() {"},{"lineNumber":110,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":111,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"\","},{"lineNumber":112,"author":{"gitId":"AiwassPrime"},"content":"                    Parser.parseCommand(\"frhyuighrdiughiudfhgvijverhfiueeidfhaijfjiorejgiorshjglrkehgjklergaa\" +"},{"lineNumber":113,"author":{"gitId":"AiwassPrime"},"content":"                                    \"ghdfjkhvehrghiuyerhgidfbvijergfvnjrkdbgnvjkdfbnvjkfdnvjkdfbvnjkdfbvjdfkbjkdf\" +"},{"lineNumber":114,"author":{"gitId":"AiwassPrime"},"content":"                                    \"vnjdfkvbjkdfbfjrighuiohguidsfhguitrnvbuirthgjithgijtnbjitrhgjidfhahjueriutdf\","},{"lineNumber":115,"author":{"gitId":"AiwassPrime"},"content":"                            new TaskList()).toString());"},{"lineNumber":116,"author":{"gitId":"AiwassPrime"},"content":"            fail();"},{"lineNumber":117,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DukeException e) {"},{"lineNumber":118,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"Invalid command\", e.getMessage());"},{"lineNumber":119,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":122,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":123,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_invalidCommandWithoutSpace_exceptionThrown() {"},{"lineNumber":124,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":125,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"\","},{"lineNumber":126,"author":{"gitId":"AiwassPrime"},"content":"                    Parser.parseCommand(\"done\","},{"lineNumber":127,"author":{"gitId":"AiwassPrime"},"content":"                            new TaskList()).toString());"},{"lineNumber":128,"author":{"gitId":"AiwassPrime"},"content":"            fail();"},{"lineNumber":129,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DukeException e) {"},{"lineNumber":130,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"Invalid command\", e.getMessage());"},{"lineNumber":131,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":134,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":135,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_invalidCommandSpaceBeforeCommand_exceptionThrown() {"},{"lineNumber":136,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":137,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"\","},{"lineNumber":138,"author":{"gitId":"AiwassPrime"},"content":"                    Parser.parseCommand(\" done \","},{"lineNumber":139,"author":{"gitId":"AiwassPrime"},"content":"                            new TaskList()).toString());"},{"lineNumber":140,"author":{"gitId":"AiwassPrime"},"content":"            fail();"},{"lineNumber":141,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DukeException e) {"},{"lineNumber":142,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"Invalid command\", e.getMessage());"},{"lineNumber":143,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":146,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":147,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_invalidCommandSpaceInBetweenCommand_exceptionThrown() {"},{"lineNumber":148,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":149,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"\","},{"lineNumber":150,"author":{"gitId":"AiwassPrime"},"content":"                    Parser.parseCommand(\"d one \","},{"lineNumber":151,"author":{"gitId":"AiwassPrime"},"content":"                            new TaskList()).toString());"},{"lineNumber":152,"author":{"gitId":"AiwassPrime"},"content":"            fail();"},{"lineNumber":153,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DukeException e) {"},{"lineNumber":154,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"Invalid command\", e.getMessage());"},{"lineNumber":155,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":158,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":159,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_invalidCommandTwoCommandsConcat_exceptionThrown() {"},{"lineNumber":160,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":161,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"\","},{"lineNumber":162,"author":{"gitId":"AiwassPrime"},"content":"                    Parser.parseCommand(\"byelist\","},{"lineNumber":163,"author":{"gitId":"AiwassPrime"},"content":"                            new TaskList()).toString());"},{"lineNumber":164,"author":{"gitId":"AiwassPrime"},"content":"            fail();"},{"lineNumber":165,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DukeException e) {"},{"lineNumber":166,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"Invalid command\", e.getMessage());"},{"lineNumber":167,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":169}},{"path":"src/test/java/StringParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"import duke.StringParser;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"public class StringParserTest {"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"    public void newLiner_shortString() {"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"bye\\n\","},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"                StringParser.newLiner(\"bye\", 5));"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    public void newLiner_longString() {"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"11111\\n22222\\n33333\\n44444\\n555\\n\","},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"                StringParser.newLiner(\"11111222223333344444555\", 5));"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    public void newLiner_lengthEqualOne() {"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"1\\n2\\n3\\n4\\n5\\n\","},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"                StringParser.newLiner(\"12345\", 1));"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"    public void newLiner_SpecialString() {"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"1\\n2\\n345\\n\","},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"                StringParser.newLiner(\"1\\n2345\", 3));"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"    public void newLiner_lengthEqualZero_exceptionThrown() {"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"1\\n2\\n3\\n4\\n5\\n\","},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"                    StringParser.newLiner(\"12345\", 0));"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"            fail();"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"        } catch (AssertionError e) {"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(AssertionError.class, e.getClass());"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"    public void underlineGenerator_zeroRepeat() {"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"\\n\","},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"                StringParser.generateUnderline(0));"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"    public void isBlank_zeroString() {"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"        assertTrue(StringParser.isBlank(\"\"));"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"    public void isBlank_blank() {"},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"        assertFalse(StringParser.isBlank(\"  aaa   \"));"},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"    public void isBlank_specialString() {"},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":"        assertFalse(StringParser.isBlank(\"\\n\\n\\n\\n\\n  \"));"},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":63}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"abc"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":"todo abc"},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"todo  "},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"todoa"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"tod"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"todo fneujiwhtfjkrewahgtfijarhjkldhgfiuerjngfijdsakhgmkdsanvijuerngjksadfghjkasdfbnghiejrabghkdfjabgkndfsghijrkaghiuyreabguieranvjrehgijrekgbjkdfahgbjhierbgiuvjrebghijrbfgjkearbvireghjergb"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"deadline def /by 123aaa"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"deadline qwer /at axcdgfer"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"deadline/by"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"deadline /by abc"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"deadline asnf by abca"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"deadline a /bysafefdc"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"event abc /at avb"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"eventa dnuf"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"event def /at basjf"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"done"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"done "},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"done  "},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"done 1"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"list "},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"delete"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"delete "},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"delete  "},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"delete 1"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"delete 100"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"delete -5"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"delete 1"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"delete 1"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"delete 1"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"delete 1"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"done 1"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"bye"}],"authorContributionMap":{"AiwassPrime":40}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":20,"AiwassPrime":1}}]
