[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"# Duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"1. After the importing is complete, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"-":24,"AiwassPrime":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":45,"AiwassPrime":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"![UiWindow](Ui.png)"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"Duke is a chat bot that can help you to manage tasks."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"### `todo` - Add a todo task"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"Add a todo task with user\u0027s description. The task will be added to the list."},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"Format: `todo DESCRIPTION`"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"Example of usage: "},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"todo Go shopping"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"Expected outcome:"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"Task added:"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"[T][N] Go shopping."},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"Now you have 1 task in the list."},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"### `event` - Add an event task"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"Add an event task with user\u0027s description. The task will be added to the list."},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"Format: `event DESCRIPTION /at yyyy-MM-dd HHmm`"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"Example of usage: "},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"event Meeting /at 2020-02-20 2000"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"Expected outcome:"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"Task added:"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"[E][N] Meeting. (at: Feb 20 2020, 20:00)."},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"Now you have 2 task in the list."},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"### `deadline` - Add a deadline task"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"Add a deadline task with user\u0027s description. The task will be added to the list."},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"Format: `deadline DESCRIPTION /by yyyy-MM-dd HHmm`"},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"Example of usage: "},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"deadline Assignment /by 2020-02-20 1200"},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":63,"author":{"gitId":"AiwassPrime"},"content":"Expected outcome:"},{"lineNumber":64,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":65,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":66,"author":{"gitId":"AiwassPrime"},"content":"Task added:"},{"lineNumber":67,"author":{"gitId":"AiwassPrime"},"content":"[D][N] Assignment. (at: Feb 20 2020, 12:00)."},{"lineNumber":68,"author":{"gitId":"AiwassPrime"},"content":"Now you have 3 task in the list."},{"lineNumber":69,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":70,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":71,"author":{"gitId":"AiwassPrime"},"content":"### `list` - Show all tasks added"},{"lineNumber":72,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":73,"author":{"gitId":"AiwassPrime"},"content":"Show all tasks have been added."},{"lineNumber":74,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":75,"author":{"gitId":"AiwassPrime"},"content":"Format: `list`"},{"lineNumber":76,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":77,"author":{"gitId":"AiwassPrime"},"content":"Example of usage: "},{"lineNumber":78,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":79,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":80,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":81,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":82,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":83,"author":{"gitId":"AiwassPrime"},"content":"Expected outcome:"},{"lineNumber":84,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":85,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":86,"author":{"gitId":"AiwassPrime"},"content":"1.[T][N] Go shopping."},{"lineNumber":87,"author":{"gitId":"AiwassPrime"},"content":"2.[E][N] Meeting. (at: Feb 20 2020, 20:00)."},{"lineNumber":88,"author":{"gitId":"AiwassPrime"},"content":"3.[D][N] Assignment. (at: Feb 20 2020, 12:00)."},{"lineNumber":89,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":90,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":91,"author":{"gitId":"AiwassPrime"},"content":"### `done` - Mark a task as done"},{"lineNumber":92,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":93,"author":{"gitId":"AiwassPrime"},"content":"Mark the task at the specified index as done."},{"lineNumber":94,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":95,"author":{"gitId":"AiwassPrime"},"content":"Format: `done INDEX`"},{"lineNumber":96,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":97,"author":{"gitId":"AiwassPrime"},"content":"Example of usage: "},{"lineNumber":98,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":99,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":100,"author":{"gitId":"AiwassPrime"},"content":"done 1"},{"lineNumber":101,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"AiwassPrime"},"content":"Expected outcome:"},{"lineNumber":104,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":105,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":106,"author":{"gitId":"AiwassPrime"},"content":"This task is marked as done:"},{"lineNumber":107,"author":{"gitId":"AiwassPrime"},"content":"[T][Y] Go shopping."},{"lineNumber":108,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":109,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":110,"author":{"gitId":"AiwassPrime"},"content":"### `delete` - Delete the task from the list"},{"lineNumber":111,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":112,"author":{"gitId":"AiwassPrime"},"content":"Delete the task at the specified index."},{"lineNumber":113,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":114,"author":{"gitId":"AiwassPrime"},"content":"Format: `delete INDEX`"},{"lineNumber":115,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":116,"author":{"gitId":"AiwassPrime"},"content":"Example of usage: "},{"lineNumber":117,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":118,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":119,"author":{"gitId":"AiwassPrime"},"content":"delete 2"},{"lineNumber":120,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":121,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":122,"author":{"gitId":"AiwassPrime"},"content":"Expected outcome:"},{"lineNumber":123,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":124,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":125,"author":{"gitId":"AiwassPrime"},"content":"This task is deleted:"},{"lineNumber":126,"author":{"gitId":"AiwassPrime"},"content":"[E][N] Meeting. (at: Feb 20 2020, 20:00)."},{"lineNumber":127,"author":{"gitId":"AiwassPrime"},"content":"Now you have 2 tasks in the list."},{"lineNumber":128,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":129,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":130,"author":{"gitId":"AiwassPrime"},"content":"### `find` - Find the task from the list with given keyword"},{"lineNumber":131,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":132,"author":{"gitId":"AiwassPrime"},"content":"Find tasks that contains the given keyword from the list."},{"lineNumber":133,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":134,"author":{"gitId":"AiwassPrime"},"content":"Format: `find KEYWORD`"},{"lineNumber":135,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":136,"author":{"gitId":"AiwassPrime"},"content":"Example of usage: "},{"lineNumber":137,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":138,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":139,"author":{"gitId":"AiwassPrime"},"content":"find Go"},{"lineNumber":140,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":141,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":142,"author":{"gitId":"AiwassPrime"},"content":"Expected outcome:"},{"lineNumber":143,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":144,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":145,"author":{"gitId":"AiwassPrime"},"content":"Here are the matching tasks in the list:"},{"lineNumber":146,"author":{"gitId":"AiwassPrime"},"content":"1.[T][Y] Go shopping."},{"lineNumber":147,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":148,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":149,"author":{"gitId":"AiwassPrime"},"content":"### `go` - Add a place"},{"lineNumber":150,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":151,"author":{"gitId":"AiwassPrime"},"content":"Add a place with user\u0027s description. The place will be added to another list."},{"lineNumber":152,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":153,"author":{"gitId":"AiwassPrime"},"content":"Format: `go PLACE /do DESCRIPTION`"},{"lineNumber":154,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":155,"author":{"gitId":"AiwassPrime"},"content":"Example of usage: "},{"lineNumber":156,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":157,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":158,"author":{"gitId":"AiwassPrime"},"content":"go NUS /do Lecture"},{"lineNumber":159,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":160,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":161,"author":{"gitId":"AiwassPrime"},"content":"Expected outcome:"},{"lineNumber":162,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":163,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":164,"author":{"gitId":"AiwassPrime"},"content":"Place added:"},{"lineNumber":165,"author":{"gitId":"AiwassPrime"},"content":"Lecture: NUS"},{"lineNumber":166,"author":{"gitId":"AiwassPrime"},"content":"Now you have 1 place in the list."},{"lineNumber":167,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":168,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":169,"author":{"gitId":"AiwassPrime"},"content":"### `place` - List all places"},{"lineNumber":170,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":171,"author":{"gitId":"AiwassPrime"},"content":"Show all places have been added."},{"lineNumber":172,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":173,"author":{"gitId":"AiwassPrime"},"content":"Format: `place`"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":178,"author":{"gitId":"AiwassPrime"},"content":"place"},{"lineNumber":179,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":184,"author":{"gitId":"AiwassPrime"},"content":"Lecture: NUS"},{"lineNumber":185,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":186,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":187,"author":{"gitId":"AiwassPrime"},"content":"### `bye` - Close Duke"},{"lineNumber":188,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":189,"author":{"gitId":"AiwassPrime"},"content":"Close Duke and save."},{"lineNumber":190,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":191,"author":{"gitId":"AiwassPrime"},"content":"Format: `bye`"},{"lineNumber":192,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":193,"author":{"gitId":"AiwassPrime"},"content":"Example of usage: "},{"lineNumber":194,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":195,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":196,"author":{"gitId":"AiwassPrime"},"content":"bye"},{"lineNumber":197,"author":{"gitId":"AiwassPrime"},"content":"```"},{"lineNumber":198,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":199,"author":{"gitId":"AiwassPrime"},"content":"Expected outcome: Duke will save all data and exit."},{"lineNumber":200,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":201,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":202,"author":{"gitId":"AiwassPrime"},"content":"## Author"},{"lineNumber":203,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":204,"author":{"gitId":"AiwassPrime"},"content":"Wang Yuanzhe"}],"authorContributionMap":{"-":13,"AiwassPrime":191}},{"path":"src/main/java/duke/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":" * Type of \"add\" command."},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"public enum CommandType {"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"    Todo,"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"    Deadline,"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"    Event"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":10}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":" * This is the Main class for Duke."},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"    public static String getGreeting() {"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"        return UI.loadAndSayHello();"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    public static String getGoodbye() {"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"        return UI.saveAndGoodBye();"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"    public String getResponse(String input) {"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"        return UI.respond(input);"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":3,"AiwassPrime":17}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":" * Handles all exception thrown by duke."},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"     * DukeException builder."},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"     * @param message Exception message."},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"    public DukeException(String message) {"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"        super(message);"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":16}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.controllers.Main;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"public class Launcher {"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"    public static void main(String[] args) {"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":13}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.command.AddCommand;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import duke.command.DoneCommand;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"import duke.command.ExitCommand;"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"import duke.command.FindCommand;"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"import duke.command.GoCommand;"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"import duke.command.ListCommand;"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"import duke.command.PlaceCommand;"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":" * A class that identify the keyword of given string."},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"public class Parser {"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    // Length of command."},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_DEADLINE \u003d \"deadline \".length();"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_DELETE \u003d \"delete \".length();"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_EVENT \u003d \"event \".length();"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_TODO \u003d \"todo \".length();"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_DONE \u003d \"done \".length();"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_FIND \u003d \"find \".length();"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_GO \u003d \"go \".length();"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"    private static final String STRING_BYE \u003d \"bye\";"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    private static final String STRING_LIST \u003d \"list\";"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"    private static final String STRING_DEADLINE \u003d \"deadline \";"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    private static final String STRING_DELETE \u003d \"delete \";"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"    private static final String STRING_EVENT \u003d \"event \";"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    private static final String STRING_TODO \u003d \"todo \";"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"    private static final String STRING_DONE \u003d \"done \";"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"    private static final String STRING_FIND \u003d \"find \";"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"    private static final String STRING_GO \u003d \"go \";"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"    private static final String STRING_PLACE \u003d \"place\";"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"    private static final String ERROR_INVALID \u003d \"Invalid command.\";"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"     * Returns the command according to the first word."},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"     * Arguments are not parsed in this method."},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"     * @param str Input string."},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"     * @return Commands."},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException If the first word is not any known command type."},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"    public static Command parseCommand(String str) throws DukeException {"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"        int strLength \u003d str.length();"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"        if (str.equalsIgnoreCase(STRING_BYE)) {"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"            return new ExitCommand();"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"        } else if (str.equalsIgnoreCase(STRING_LIST)) {"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"            return new ListCommand();"},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"        } else if (str.length() \u003e\u003d LENGTH_DEADLINE"},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"                \u0026\u0026 str.substring(0, LENGTH_DEADLINE).equalsIgnoreCase(STRING_DEADLINE)) {"},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"            return new AddCommand(str, CommandType.Deadline);"},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"        } else if (strLength \u003e\u003d LENGTH_DELETE"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"                \u0026\u0026 str.substring(0, LENGTH_DELETE).equalsIgnoreCase(STRING_DELETE)) {"},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"            return new DeleteCommand(str);"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"        } else if (strLength \u003e\u003d LENGTH_EVENT"},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":"                \u0026\u0026 str.substring(0, LENGTH_EVENT).equalsIgnoreCase(STRING_EVENT)) {"},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":"            return new AddCommand(str, CommandType.Event);"},{"lineNumber":63,"author":{"gitId":"AiwassPrime"},"content":"        } else if (str.equalsIgnoreCase(STRING_PLACE)) {"},{"lineNumber":64,"author":{"gitId":"AiwassPrime"},"content":"            return new PlaceCommand();"},{"lineNumber":65,"author":{"gitId":"AiwassPrime"},"content":"        } else if (strLength \u003e\u003d LENGTH_TODO"},{"lineNumber":66,"author":{"gitId":"AiwassPrime"},"content":"                \u0026\u0026 str.substring(0, LENGTH_TODO).equalsIgnoreCase(STRING_TODO)) {"},{"lineNumber":67,"author":{"gitId":"AiwassPrime"},"content":"            return new AddCommand(str, CommandType.Todo);"},{"lineNumber":68,"author":{"gitId":"AiwassPrime"},"content":"        } else if (strLength \u003e\u003d LENGTH_DONE"},{"lineNumber":69,"author":{"gitId":"AiwassPrime"},"content":"                \u0026\u0026 str.substring(0, LENGTH_DONE).equalsIgnoreCase(STRING_DONE)) {"},{"lineNumber":70,"author":{"gitId":"AiwassPrime"},"content":"            return new DoneCommand(str);"},{"lineNumber":71,"author":{"gitId":"AiwassPrime"},"content":"        } else if (strLength \u003e\u003d LENGTH_FIND"},{"lineNumber":72,"author":{"gitId":"AiwassPrime"},"content":"                \u0026\u0026 str.substring(0, LENGTH_FIND).equalsIgnoreCase(STRING_FIND)) {"},{"lineNumber":73,"author":{"gitId":"AiwassPrime"},"content":"            return new FindCommand(str);"},{"lineNumber":74,"author":{"gitId":"AiwassPrime"},"content":"        } else if (strLength \u003e\u003d LENGTH_GO"},{"lineNumber":75,"author":{"gitId":"AiwassPrime"},"content":"                \u0026\u0026 str.substring(0, LENGTH_GO).equalsIgnoreCase(STRING_GO)) {"},{"lineNumber":76,"author":{"gitId":"AiwassPrime"},"content":"            return new GoCommand(str);"},{"lineNumber":77,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":78,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_INVALID);"},{"lineNumber":79,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":81}},{"path":"src/main/java/duke/PlaceList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.place.Place;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" * ArrayList adapted to Duke."},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"public class PlaceList {"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    private final ArrayList\u003cPlace\u003e list;"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"    public PlaceList() {"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"        this.list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    public void addPlace(Place p) {"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"        this.list.add(p);"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    public Place getPlace(int index) {"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"        return this.list.get(index);"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    public int getSize() {"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"        return this.list.size();"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"     * Formats the list to its output format."},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"     * @return String in correct format."},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"    public String formatList() {"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"        StringBuilder resultStr \u003d new StringBuilder();"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"            resultStr.append(list.get(i).toString());"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"        return resultStr.toString();"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":42}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"import java.util.Objects;"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"import duke.place.Place;"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Deadline;"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Event;"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Task;"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Todo;"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":" * A class that handles all I/O related matter."},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"public class Storage {"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    private static final int POSITION_DONE \u003d 4;"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    private static final int POSITION_AT \u003d 8;"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    private static final char MARK_TASK \u003d \u0027T\u0027;"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"    private static final char MARK_DEADLINE \u003d \u0027D\u0027;"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    private static final char MARK_DONE \u003d \u00270\u0027;"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"    private static final String MARK_AT \u003d \"@@@\";"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    private static final String MARK_SEPARATE \u003d \" | \";"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"    private static final String MARK_STATUS_ZERO \u003d \"0\";"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    private static final String MARK_STATUS_ONE \u003d \"1\";"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"    private static final String FILE_PATH \u003d \"data\";"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"    private static final String FILE_NAME_TASK \u003d \"taskData.txt\";"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"    private static final String FILE_NAME_PLACE \u003d \"placeData.txt\";"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"    private static final String ERROR_SAVE \u003d \"Unable to save file.\";"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"    // Output date and time in this manner."},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"    private static final DateTimeFormatter FORMAT_PRINT \u003d"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"    private static File taskFile;"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"    private static File placeFile;"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"    private static Scanner scannerTask;"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"    private static Scanner scannerPlace;"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"     * Converts data that saved in taskData.txt to Task object."},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"     * @param command Strings in the format of my own design."},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"     * @return Tasks to be stored in the TaskList."},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"    public static Task loadTaskData(String command) {"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"        if (command.charAt(0) \u003d\u003d MARK_TASK) {"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"            Todo result \u003d new Todo(command.substring(POSITION_AT));"},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":"            if (command.charAt(POSITION_DONE) !\u003d MARK_DONE) {"},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":"                result.markAsDone();"},{"lineNumber":63,"author":{"gitId":"AiwassPrime"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"AiwassPrime"},"content":"            return result;"},{"lineNumber":65,"author":{"gitId":"AiwassPrime"},"content":"        } else if (command.charAt(0) \u003d\u003d MARK_DEADLINE) {"},{"lineNumber":66,"author":{"gitId":"AiwassPrime"},"content":"            int position \u003d command.indexOf(MARK_AT);"},{"lineNumber":67,"author":{"gitId":"AiwassPrime"},"content":"            Deadline result \u003d new Deadline(command.substring(POSITION_AT, position - 1),"},{"lineNumber":68,"author":{"gitId":"AiwassPrime"},"content":"                    LocalDateTime.from(FORMAT_PRINT.parse(command.substring(position + MARK_AT.length()))));"},{"lineNumber":69,"author":{"gitId":"AiwassPrime"},"content":"            if (command.charAt(POSITION_DONE) !\u003d MARK_DONE) {"},{"lineNumber":70,"author":{"gitId":"AiwassPrime"},"content":"                result.markAsDone();"},{"lineNumber":71,"author":{"gitId":"AiwassPrime"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"AiwassPrime"},"content":"            return result;"},{"lineNumber":73,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":74,"author":{"gitId":"AiwassPrime"},"content":"            int position \u003d command.indexOf(MARK_AT);"},{"lineNumber":75,"author":{"gitId":"AiwassPrime"},"content":"            Event result \u003d new Event(command.substring(POSITION_AT, position - 1),"},{"lineNumber":76,"author":{"gitId":"AiwassPrime"},"content":"                    LocalDateTime.from(FORMAT_PRINT.parse(command.substring(position + MARK_AT.length()))));"},{"lineNumber":77,"author":{"gitId":"AiwassPrime"},"content":"            if (command.charAt(POSITION_DONE) !\u003d MARK_DONE) {"},{"lineNumber":78,"author":{"gitId":"AiwassPrime"},"content":"                result.markAsDone();"},{"lineNumber":79,"author":{"gitId":"AiwassPrime"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"AiwassPrime"},"content":"            return result;"},{"lineNumber":81,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":84,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"AiwassPrime"},"content":"     * Converts data that saved in placeData.txt to Place object."},{"lineNumber":86,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"AiwassPrime"},"content":"     * @param command Strings in the format of my own design."},{"lineNumber":88,"author":{"gitId":"AiwassPrime"},"content":"     * @return Tasks to be stored in the PlaceList."},{"lineNumber":89,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"AiwassPrime"},"content":"    public static Place loadPlaceData(String command) {"},{"lineNumber":91,"author":{"gitId":"AiwassPrime"},"content":"        int position \u003d command.indexOf(MARK_SEPARATE);"},{"lineNumber":92,"author":{"gitId":"AiwassPrime"},"content":"        return new Place(command.substring(0, position),"},{"lineNumber":93,"author":{"gitId":"AiwassPrime"},"content":"                command.substring(position + MARK_SEPARATE.length()));"},{"lineNumber":94,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":96,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"AiwassPrime"},"content":"     * Converts Task to string in a designed manner."},{"lineNumber":98,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"AiwassPrime"},"content":"     * @param task Task that need to be saved."},{"lineNumber":100,"author":{"gitId":"AiwassPrime"},"content":"     * @return Output string that need to be written into save data."},{"lineNumber":101,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"AiwassPrime"},"content":"    public static String saveTaskData(Task task) {"},{"lineNumber":103,"author":{"gitId":"AiwassPrime"},"content":"        if (task.getSaveType().charAt(0) \u003d\u003d MARK_TASK) {"},{"lineNumber":104,"author":{"gitId":"AiwassPrime"},"content":"            return task.getSaveType() + MARK_SEPARATE"},{"lineNumber":105,"author":{"gitId":"AiwassPrime"},"content":"                    + (task.getStatus() ? MARK_STATUS_ONE : MARK_STATUS_ZERO)"},{"lineNumber":106,"author":{"gitId":"AiwassPrime"},"content":"                    + MARK_SEPARATE + task.getDescription() + \"\\n\";"},{"lineNumber":107,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":108,"author":{"gitId":"AiwassPrime"},"content":"            return task.getSaveType() + MARK_SEPARATE"},{"lineNumber":109,"author":{"gitId":"AiwassPrime"},"content":"                    + (task.getStatus() ? MARK_STATUS_ONE : MARK_STATUS_ZERO)"},{"lineNumber":110,"author":{"gitId":"AiwassPrime"},"content":"                    + MARK_SEPARATE + task.getDescription() + \" \""},{"lineNumber":111,"author":{"gitId":"AiwassPrime"},"content":"                    + MARK_AT + task.getSaveTime() + System.lineSeparator();"},{"lineNumber":112,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":115,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"AiwassPrime"},"content":"     * Converts Place to string in a designed manner."},{"lineNumber":117,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"AiwassPrime"},"content":"     * @param place Place that need to be saved."},{"lineNumber":119,"author":{"gitId":"AiwassPrime"},"content":"     * @return Output string that need to be written into save data."},{"lineNumber":120,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"AiwassPrime"},"content":"    public static String savePlaceData(Place place) {"},{"lineNumber":122,"author":{"gitId":"AiwassPrime"},"content":"        return place.getDescription() + MARK_SEPARATE + place.getLocation() + System.lineSeparator();"},{"lineNumber":123,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":125,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":126,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":127,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"AiwassPrime"},"content":"     * Initialize the save data file and scanner of that file."},{"lineNumber":129,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"AiwassPrime"},"content":"     * @throws IOException When unable to create a file due to any security reason."},{"lineNumber":131,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"AiwassPrime"},"content":"    public static void init() throws IOException {"},{"lineNumber":133,"author":{"gitId":"AiwassPrime"},"content":"        File dir \u003d new File(FILE_PATH);"},{"lineNumber":134,"author":{"gitId":"AiwassPrime"},"content":"        if (!dir.exists()) {"},{"lineNumber":135,"author":{"gitId":"AiwassPrime"},"content":"            dir.mkdirs();"},{"lineNumber":136,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"AiwassPrime"},"content":"        taskFile \u003d new File(FILE_PATH + File.separatorChar + FILE_NAME_TASK);"},{"lineNumber":138,"author":{"gitId":"AiwassPrime"},"content":"        if (!taskFile.exists()) {"},{"lineNumber":139,"author":{"gitId":"AiwassPrime"},"content":"            taskFile.createNewFile();"},{"lineNumber":140,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"AiwassPrime"},"content":"        placeFile \u003d new File(FILE_PATH + File.separatorChar + FILE_NAME_PLACE);"},{"lineNumber":142,"author":{"gitId":"AiwassPrime"},"content":"        if (!placeFile.exists()) {"},{"lineNumber":143,"author":{"gitId":"AiwassPrime"},"content":"            placeFile.createNewFile();"},{"lineNumber":144,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"AiwassPrime"},"content":"        assert placeFile.exists() : \"Cannot save data.\";"},{"lineNumber":146,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":147,"author":{"gitId":"AiwassPrime"},"content":"        scannerTask \u003d new Scanner(taskFile);"},{"lineNumber":148,"author":{"gitId":"AiwassPrime"},"content":"        scannerPlace \u003d new Scanner(placeFile);"},{"lineNumber":149,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":150,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":152,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"AiwassPrime"},"content":"     * Loads the entire save data to a TaskList by calling multiple loadTaskData."},{"lineNumber":154,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":155,"author":{"gitId":"AiwassPrime"},"content":"     * @return TaskList that presents the initial state of Duke robot."},{"lineNumber":156,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"AiwassPrime"},"content":"    public static TaskList loadToTaskList() {"},{"lineNumber":158,"author":{"gitId":"AiwassPrime"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":159,"author":{"gitId":"AiwassPrime"},"content":"        while (Objects.requireNonNull(scannerTask).hasNextLine()) {"},{"lineNumber":160,"author":{"gitId":"AiwassPrime"},"content":"            list.addJob(loadTaskData(scannerTask.nextLine()));"},{"lineNumber":161,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"AiwassPrime"},"content":"        return list;"},{"lineNumber":163,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":165,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":166,"author":{"gitId":"AiwassPrime"},"content":"     * Loads the entire save data to a PlaceList by calling multiple loadPlaceData."},{"lineNumber":167,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":168,"author":{"gitId":"AiwassPrime"},"content":"     * @return PlaceList that presents the initial state of Duke robot."},{"lineNumber":169,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":170,"author":{"gitId":"AiwassPrime"},"content":"    public static PlaceList loadToPlaceList() {"},{"lineNumber":171,"author":{"gitId":"AiwassPrime"},"content":"        PlaceList list \u003d new PlaceList();"},{"lineNumber":172,"author":{"gitId":"AiwassPrime"},"content":"        while (Objects.requireNonNull(scannerPlace).hasNextLine()) {"},{"lineNumber":173,"author":{"gitId":"AiwassPrime"},"content":"            list.addPlace(loadPlaceData(scannerPlace.nextLine()));"},{"lineNumber":174,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"AiwassPrime"},"content":"        return list;"},{"lineNumber":176,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":178,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":179,"author":{"gitId":"AiwassPrime"},"content":"     * Initialises the writer and writes to save data file by calling multiple saveData."},{"lineNumber":180,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":181,"author":{"gitId":"AiwassPrime"},"content":"     * @param listT Data need to be converted and written to TaskList."},{"lineNumber":182,"author":{"gitId":"AiwassPrime"},"content":"     * @param listP Data need to be converted and written to PlaceList."},{"lineNumber":183,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"AiwassPrime"},"content":"    public static void writeToData(TaskList listT, PlaceList listP) {"},{"lineNumber":185,"author":{"gitId":"AiwassPrime"},"content":"        String saveTaskData \u003d \"\";"},{"lineNumber":186,"author":{"gitId":"AiwassPrime"},"content":"        String savePlaceData \u003d \"\";"},{"lineNumber":187,"author":{"gitId":"AiwassPrime"},"content":"        for (int i \u003d 0; i \u003c listT.getSize(); i++) {"},{"lineNumber":188,"author":{"gitId":"AiwassPrime"},"content":"            saveTaskData \u003d saveTaskData.concat(saveTaskData(listT.getJob(i)));"},{"lineNumber":189,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"AiwassPrime"},"content":"        for (int j \u003d 0; j \u003c listP.getSize(); j++) {"},{"lineNumber":191,"author":{"gitId":"AiwassPrime"},"content":"            savePlaceData \u003d savePlaceData.concat(savePlaceData(listP.getPlace(j)));"},{"lineNumber":192,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":194,"author":{"gitId":"AiwassPrime"},"content":"            FileWriter writerTask \u003d new FileWriter(taskFile);"},{"lineNumber":195,"author":{"gitId":"AiwassPrime"},"content":"            FileWriter writerPlace \u003d new FileWriter(placeFile);"},{"lineNumber":196,"author":{"gitId":"AiwassPrime"},"content":"            writerTask.write(saveTaskData);"},{"lineNumber":197,"author":{"gitId":"AiwassPrime"},"content":"            writerPlace.write(savePlaceData);"},{"lineNumber":198,"author":{"gitId":"AiwassPrime"},"content":"            writerTask.close();"},{"lineNumber":199,"author":{"gitId":"AiwassPrime"},"content":"            writerPlace.close();"},{"lineNumber":200,"author":{"gitId":"AiwassPrime"},"content":"        } catch (IOException e) {"},{"lineNumber":201,"author":{"gitId":"AiwassPrime"},"content":"            System.out.println(ERROR_SAVE);"},{"lineNumber":202,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":203,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":204}},{"path":"src/main/java/duke/StringParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":" * A class that deals with all special string matter for Duke."},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"public class StringParser {"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"    // User should type in date and time in this manner."},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    private static final DateTimeFormatter FORMAT_SCAN \u003d"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     * Parses user type in date and time."},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"     * @param str Parsed user input."},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"     * @return LocalDateTime that represent the time."},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    public static LocalDateTime parseTime(String str) {"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"        return LocalDateTime.from(FORMAT_SCAN.parse(str));"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"     * To generate underline."},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"     * @param length Length of underline."},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"     * @return Underline."},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    public static String generateUnderline(int length) {"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"        return \"_\".repeat(length) + System.lineSeparator();"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"     * Simply check if a given string are made in \u0027 \u0027."},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"     * @param str Input string."},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"     * @return Boolean value of the answer."},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"    public static boolean isBlank(String str) {"},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"        for (int i \u003d 0; i \u003c str.length(); i++) {"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"            if (str.charAt(i) !\u003d \u0027 \u0027) {"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"                return false;"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"        return true;"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":50}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" * ArrayList adapted to Duke."},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    private final ArrayList\u003cTask\u003e list;"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"    public TaskList() {"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"        this.list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    public void addJob(Task t) {"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"        this.list.add(t);"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    public Task getJob(int index) {"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"        return this.list.get(index);"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    public int getSize() {"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"        return this.list.size();"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"     * Replaces Task at index with newTask."},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"     * @param index Target Task."},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"     * @param newTask New Task to add."},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"    public void replaceJob(int index, Task newTask) {"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"        assert this.list.get(index) !\u003d null : \"Index not handled correctly by done command.\";"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"        this.list.remove(index);"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"        this.list.add(index, newTask);"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"     * Deletes Task at index."},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"     * @param index Target Task."},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"    public void deleteJob(int index) {"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"        assert this.list.get(index) !\u003d null : \"Index not handled correctly by delete command.\";"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"        this.list.remove(index);"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"     * Formats the list to its output format."},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"     * @return String in correct format."},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"    public String formatList() {"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"        StringBuilder resultStr \u003d new StringBuilder();"},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"            resultStr.append(i + 1).append(\".\").append(list.get(i).toString());"},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":"        return resultStr.toString();"},{"lineNumber":63,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":64}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" * User interface of Duke."},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"public class UI {"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    // Welcome page."},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"    private static final String WELCOME \u003d \" __________________________ \" + System.lineSeparator()"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"            + \"| HI! THIS IS DUKE.          |\" + System.lineSeparator()"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"            + \"| What can I do for you?  |\" + System.lineSeparator()"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"            + \"|__________________________|\" + System.lineSeparator();"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    // Goodbye page."},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"    private static final String BYE \u003d \" __________________________ \" + System.lineSeparator()"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"            + \"|  GOOD BYE!                   |\" + System.lineSeparator()"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"            + \"|  Duke always be with you. |\" + System.lineSeparator()"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"            + \"|__________________________|\" + System.lineSeparator();"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    private static TaskList listT \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    private static PlaceList listP \u003d new PlaceList();"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"     * Print DukeException."},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"     * @param e DukeException."},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    static String printError(DukeException e) {"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"        return e.getMessage() + System.lineSeparator();"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"     * Loads the save data and greets."},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"    public static String loadAndSayHello() {"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"            Storage.init();"},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"        } catch (IOException e) {"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"            e.printStackTrace();"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"        listT \u003d Storage.loadToTaskList();"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"        listP \u003d Storage.loadToPlaceList();"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"        return WELCOME;"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"     * Saves the data to save data file and says goodbye."},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"    public static String saveAndGoodBye() {"},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"        Storage.writeToData(listT, listP);"},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"        return BYE;"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":"     * Responds according to input string."},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"AiwassPrime"},"content":"     * @param commandStr Input command string."},{"lineNumber":64,"author":{"gitId":"AiwassPrime"},"content":"     * @return Duke\u0027s respond."},{"lineNumber":65,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"AiwassPrime"},"content":"    public static String respond(String commandStr) {"},{"lineNumber":67,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"AiwassPrime"},"content":"            Command command \u003d Parser.parseCommand(commandStr);"},{"lineNumber":69,"author":{"gitId":"AiwassPrime"},"content":"            return command.executeAndPrint(listT, listP);"},{"lineNumber":70,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DukeException e) {"},{"lineNumber":71,"author":{"gitId":"AiwassPrime"},"content":"            return printError(e);"},{"lineNumber":72,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":75,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":75}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.CommandType;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"import duke.PlaceList;"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"import duke.StringParser;"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Deadline;"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Event;"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Task;"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Todo;"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":" * Command type add."},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"public class AddCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_TODO \u003d \"todo \".length();"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_EVENT \u003d \"event \".length();"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_DEADLINE \u003d \"deadline \".length();"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_SEPARATOR \u003d 5;"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    private static final String ERROR_EMPTY_ARGUMENT \u003d \"Invalid argument: Argument field cannot be empty.\";"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    private static final String ERROR_EMPTY_CONTENT \u003d \"Invalid argument: Content field is blank.\";"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"    private static final String ERROR_EMPTY_TIME \u003d \"Void argument: Time field is blank.\";"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    private static final String ERROR_UNDETECTED_AT \u003d \"Invalid argument: /at not detected or no argument before /at.\";"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"    private static final String ERROR_UNDETECTED_BY \u003d \"Invalid argument: /by not detected or no argument before /by.\";"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    private static final String ERROR_INCORRECT_FORMAT \u003d \"Incorrect time format: Correct format is yyyy-MM-dd HHmm.\";"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    private static final String MARK_AT \u003d \" /at \";"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"    private static final String MARK_BY \u003d \" /by \";"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"    private final String command;"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"    private final CommandType cmdType;"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"     * Constructs an add command."},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"     * @param command Input string."},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"     * @param cmdType Determine whether this command is TODO, EVENT or DEADLINE."},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"    public AddCommand(String command, CommandType cmdType) {"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"        this.command \u003d command;"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"        this.cmdType \u003d cmdType;"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"     * Checks the validity of this command and build a todo task."},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"     * @return Todo task."},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When command argument is invalid."},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"    private Task convertToTodo() throws DukeException {"},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"        if (command.length() \u003c\u003d LENGTH_TODO) {"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_EMPTY_ARGUMENT);"},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":"        String subStr \u003d command.substring(LENGTH_TODO);"},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":"        if (StringParser.isBlank(subStr)) {"},{"lineNumber":63,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_EMPTY_CONTENT);"},{"lineNumber":64,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":66,"author":{"gitId":"AiwassPrime"},"content":"        return new Todo(command.substring(LENGTH_TODO));"},{"lineNumber":67,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":69,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"AiwassPrime"},"content":"     * Checks the validity of this command and build a event task."},{"lineNumber":71,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"AiwassPrime"},"content":"     * @return Event task."},{"lineNumber":73,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When command argument is invalid."},{"lineNumber":74,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"AiwassPrime"},"content":"    private Task convertToEvent() throws DukeException {"},{"lineNumber":76,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":77,"author":{"gitId":"AiwassPrime"},"content":"        if (command.length() \u003c\u003d LENGTH_EVENT) {"},{"lineNumber":78,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_EMPTY_ARGUMENT);"},{"lineNumber":79,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":81,"author":{"gitId":"AiwassPrime"},"content":"        int indexOfAt \u003d command.toLowerCase().indexOf(MARK_AT);"},{"lineNumber":82,"author":{"gitId":"AiwassPrime"},"content":"        if (indexOfAt \u003c LENGTH_EVENT) {"},{"lineNumber":83,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_UNDETECTED_AT);"},{"lineNumber":84,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":86,"author":{"gitId":"AiwassPrime"},"content":"        String subStrContent \u003d command.substring(LENGTH_EVENT, indexOfAt);"},{"lineNumber":87,"author":{"gitId":"AiwassPrime"},"content":"        String subStrTime \u003d command.substring(indexOfAt + LENGTH_SEPARATOR);"},{"lineNumber":88,"author":{"gitId":"AiwassPrime"},"content":"        if (StringParser.isBlank(subStrContent)) {"},{"lineNumber":89,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_EMPTY_CONTENT);"},{"lineNumber":90,"author":{"gitId":"AiwassPrime"},"content":"        } else if (StringParser.isBlank(subStrTime)) {"},{"lineNumber":91,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_EMPTY_TIME);"},{"lineNumber":92,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":94,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"AiwassPrime"},"content":"            return new Event(subStrContent, StringParser.parseTime(subStrTime));"},{"lineNumber":96,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":97,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_INCORRECT_FORMAT);"},{"lineNumber":98,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":101,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"AiwassPrime"},"content":"     * Checks the validity of this command and build a deadline task."},{"lineNumber":103,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":104,"author":{"gitId":"AiwassPrime"},"content":"     * @return Deadline task."},{"lineNumber":105,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When command argument is invalid."},{"lineNumber":106,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"AiwassPrime"},"content":"    private Task convertToDeadline() throws DukeException {"},{"lineNumber":108,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":109,"author":{"gitId":"AiwassPrime"},"content":"        if (command.length() \u003c\u003d LENGTH_DEADLINE) {"},{"lineNumber":110,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_EMPTY_ARGUMENT);"},{"lineNumber":111,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"AiwassPrime"},"content":"        int indexOfBy \u003d command.toLowerCase().indexOf(MARK_BY);"},{"lineNumber":113,"author":{"gitId":"AiwassPrime"},"content":"        if (indexOfBy \u003c LENGTH_DEADLINE) {"},{"lineNumber":114,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_UNDETECTED_BY);"},{"lineNumber":115,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":117,"author":{"gitId":"AiwassPrime"},"content":"        String subStrContent \u003d command.substring(LENGTH_DEADLINE, indexOfBy);"},{"lineNumber":118,"author":{"gitId":"AiwassPrime"},"content":"        String subStrTime \u003d command.substring(indexOfBy + LENGTH_SEPARATOR);"},{"lineNumber":119,"author":{"gitId":"AiwassPrime"},"content":"        if (StringParser.isBlank(subStrContent)) {"},{"lineNumber":120,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_EMPTY_CONTENT);"},{"lineNumber":121,"author":{"gitId":"AiwassPrime"},"content":"        } else if (StringParser.isBlank(subStrTime)) {"},{"lineNumber":122,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_EMPTY_TIME);"},{"lineNumber":123,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":125,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":126,"author":{"gitId":"AiwassPrime"},"content":"            return new Deadline(subStrContent, StringParser.parseTime(subStrTime));"},{"lineNumber":127,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":128,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_INCORRECT_FORMAT);"},{"lineNumber":129,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":132,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"AiwassPrime"},"content":"     * Executes and prints command according to its command type."},{"lineNumber":134,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"AiwassPrime"},"content":"     * @param listT Passes TaskList in case of reading and writing to the list."},{"lineNumber":136,"author":{"gitId":"AiwassPrime"},"content":"     * @param listP Passes PlaceList in case of reading and writing to the list."},{"lineNumber":137,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When encounter an error in command argument."},{"lineNumber":138,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":140,"author":{"gitId":"AiwassPrime"},"content":"    public String executeAndPrint(TaskList listT, PlaceList listP) throws DukeException {"},{"lineNumber":141,"author":{"gitId":"AiwassPrime"},"content":"        Task task;"},{"lineNumber":142,"author":{"gitId":"AiwassPrime"},"content":"        switch (this.cmdType) {"},{"lineNumber":143,"author":{"gitId":"AiwassPrime"},"content":"        case Todo:"},{"lineNumber":144,"author":{"gitId":"AiwassPrime"},"content":"            task \u003d convertToTodo();"},{"lineNumber":145,"author":{"gitId":"AiwassPrime"},"content":"            break;"},{"lineNumber":146,"author":{"gitId":"AiwassPrime"},"content":"        case Event:"},{"lineNumber":147,"author":{"gitId":"AiwassPrime"},"content":"            task \u003d convertToEvent();"},{"lineNumber":148,"author":{"gitId":"AiwassPrime"},"content":"            break;"},{"lineNumber":149,"author":{"gitId":"AiwassPrime"},"content":"        case Deadline:"},{"lineNumber":150,"author":{"gitId":"AiwassPrime"},"content":"            task \u003d convertToDeadline();"},{"lineNumber":151,"author":{"gitId":"AiwassPrime"},"content":"            break;"},{"lineNumber":152,"author":{"gitId":"AiwassPrime"},"content":"        default:"},{"lineNumber":153,"author":{"gitId":"AiwassPrime"},"content":"            assert false : \"This line will never be reached.\";"},{"lineNumber":154,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(\"Unexpected value: \" + this.cmdType);"},{"lineNumber":155,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"AiwassPrime"},"content":"        listT.addJob(task);"},{"lineNumber":157,"author":{"gitId":"AiwassPrime"},"content":"        return \"Task added:\" + System.lineSeparator() + task.toString()"},{"lineNumber":158,"author":{"gitId":"AiwassPrime"},"content":"                + \"Now you have \" + listT.getSize()"},{"lineNumber":159,"author":{"gitId":"AiwassPrime"},"content":"                + (listT.getSize() \u003d\u003d 1"},{"lineNumber":160,"author":{"gitId":"AiwassPrime"},"content":"                        ? \" task in the list.\" + System.lineSeparator()"},{"lineNumber":161,"author":{"gitId":"AiwassPrime"},"content":"                        : \" tasks in the list.\" + System.lineSeparator());"},{"lineNumber":162,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":164,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":165,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":166,"author":{"gitId":"AiwassPrime"},"content":"        switch (this.cmdType) {"},{"lineNumber":167,"author":{"gitId":"AiwassPrime"},"content":"        case Todo:"},{"lineNumber":168,"author":{"gitId":"AiwassPrime"},"content":"            return \"Test usage: this is a TODO command.\";"},{"lineNumber":169,"author":{"gitId":"AiwassPrime"},"content":"        case Deadline:"},{"lineNumber":170,"author":{"gitId":"AiwassPrime"},"content":"            return \"Test usage: this is a DEADLINE command.\";"},{"lineNumber":171,"author":{"gitId":"AiwassPrime"},"content":"        case Event:"},{"lineNumber":172,"author":{"gitId":"AiwassPrime"},"content":"            return \"Test usage: this is an EVENT command.\";"},{"lineNumber":173,"author":{"gitId":"AiwassPrime"},"content":"        default:"},{"lineNumber":174,"author":{"gitId":"AiwassPrime"},"content":"            assert false : \"This line will never be reached.\";"},{"lineNumber":175,"author":{"gitId":"AiwassPrime"},"content":"            return \"Error: this will never happen.\";"},{"lineNumber":176,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":178}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.PlaceList;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" * Abstract class for Tasks."},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"     * Command execution prototype."},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"     * @param listT Passes TaskList in case of reading and writing to the list."},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     * @param listP Passes PlaceList in case of reading and writing to the list."},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When encounter an error in command argument."},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"    public abstract String executeAndPrint(TaskList listT, PlaceList listP) throws DukeException;"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":21}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.PlaceList;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":" * Command type delete."},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_DELETE \u003d \"delete \".length();"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    private static final String ERROR_INCORRECT_FORMAT \u003d \"Invalid Argument: Input must to be integer\";"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"    private static final String MESSAGE_OBJECT_NOT_FOUND \u003d \"No such task in the list\";"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    private final String command;"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"     * Constructs a delete command."},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"     * @param command Input string."},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    public DeleteCommand(String command) {"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"        this.command \u003d command;"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"     * Execute and print a delete command."},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"     * @param listT Passes TaskList in case of reading and writing to the list."},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"     * @param listP Passes PlaceList in case of reading and writing to the list."},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When encounter an error in command argument."},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"    public String executeAndPrint(TaskList listT, PlaceList listP) throws DukeException {"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"        int index;"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"            index \u003d Integer.parseInt(command.substring(LENGTH_DELETE)) - 1;"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_INCORRECT_FORMAT);"},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"        if (index \u003c listT.getSize() \u0026\u0026 index \u003e\u003d 0) {"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"            Task currTask \u003d listT.getJob(index);"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"            listT.deleteJob(index);"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"            return \"This task is deleted: \\n\""},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"                    + currTask.toString()"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"                    + \"Now you have \" + listT.getSize()"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"                    + (listT.getSize() \u003d\u003d 1"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"                            ? \" task in the list.\" + System.lineSeparator()"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"                            : \" tasks in the list.\" + System.lineSeparator());"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"            return MESSAGE_OBJECT_NOT_FOUND + System.lineSeparator();"},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"        return \"Test usage: this is a DELETE command.\";"},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":62}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.PlaceList;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":" * Command type done."},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"public class DoneCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_DONE \u003d \"done \".length();"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    private static final String ERROR_INCORRECT_FORMAT \u003d \"Invalid Argument: Input must to be integer\";"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"    private static final String MESSAGE_OBJECT_NOT_FOUND \u003d \"No such task in the list\";"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    private final String command;"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"     * Constructs a done command."},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"     * @param command Input string."},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    public DoneCommand(String command) {"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"        this.command \u003d command;"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"     * Execute and print a done command."},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"     * @param listT Passes TaskList in case of reading and writing to the list."},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"     * @param listP Passes PlaceList in case of reading and writing to the list."},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When encounter an error in command argument."},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"    public String executeAndPrint(TaskList listT, PlaceList listP) throws DukeException {"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"        int index;"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"            index \u003d Integer.parseInt(command.substring(LENGTH_DONE)) - 1;"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_INCORRECT_FORMAT);"},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"        if (index \u003c listT.getSize() \u0026\u0026 index \u003e\u003d 0) {"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"            Task currTask \u003d listT.getJob(index);"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"            currTask.markAsDone();"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"            listT.replaceJob(index, currTask);"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"            return \"This task is marked as done: \" + System.lineSeparator()"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"                    + currTask.toString();"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"            return MESSAGE_OBJECT_NOT_FOUND + System.lineSeparator();"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"        return \"Test usage: this is a DONE command.\";"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":59}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.PlaceList;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" * Command type exit."},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"public class ExitCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"     * Execute and print a exit command."},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"     * @param listT Passes TaskList in case of reading and writing to the list."},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     * @param listP Passes PlaceList in case of reading and writing to the list."},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When encounter an error in command argument."},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    public String executeAndPrint(TaskList listT, PlaceList listP) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"        return \"\";"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"        return \"Test usage: this is an EXIT command.\";"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":28}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.PlaceList;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.StringParser;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":" * Command type find."},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"public class FindCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_FIND \u003d \"find \".length();"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    private static final String ERROR_EMPTY_ARGUMENT \u003d \"Invalid argument: Argument field cannot be empty.\";"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"    private static final String ERROR_EMPTY_CONTENT \u003d \"Invalid argument: Content field is blank.\";"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"    private static final String MESSAGE_OBJECT_NOT_FOUND \u003d \"No result found\";"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"    private final String command;"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"     * Constructs a find command."},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"     * @param command Input string."},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    public FindCommand(String command) {"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"        this.command \u003d command;"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"     * Execute and print a find command."},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"     * @param listT Passes TaskList in case of reading and writing to the list."},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"     * @param listP Passes PlaceList in case of reading and writing to the list."},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When encounter an error in command argument."},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"    public String executeAndPrint(TaskList listT, PlaceList listP) throws DukeException {"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"        if (command.length() \u003c\u003d LENGTH_FIND) {"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_EMPTY_ARGUMENT);"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"        String subStr \u003d command.substring(LENGTH_FIND);"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"        if (StringParser.isBlank(subStr)) {"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_EMPTY_CONTENT);"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"        TaskList tempList \u003d new TaskList();"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"        for (int i \u003d 0; i \u003c listT.getSize(); i++) {"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"            if (listT.getJob(i).getDescription().contains(subStr)) {"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"                tempList.addJob(listT.getJob(i));"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"        if (tempList.getSize() \u003d\u003d 0) {"},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"            return MESSAGE_OBJECT_NOT_FOUND + System.lineSeparator();"},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"            return \"Here are the matching tasks in the list:\" + System.lineSeparator()"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"                    + tempList.formatList();"},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":62}},{"path":"src/main/java/duke/command/GoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.PlaceList;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.StringParser;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"import duke.place.Place;"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"public class GoCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_GO \u003d \"go \".length();"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    private static final int LENGTH_SEPARATOR \u003d 5;"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"    private static final String ERROR_EMPTY_ARGUMENT \u003d \"Invalid argument: Argument field cannot be empty.\";"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    private static final String ERROR_EMPTY_CONTENT \u003d \"Invalid argument: Content field is blank.\";"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"    private static final String ERROR_EMPTY_TIME \u003d \"Void argument: Time field is blank.\";"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"    private static final String ERROR_UNDETECTED_AT \u003d \"Invalid argument: /at not detected or no argument before /at.\";"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"    private static final String MARK_DO \u003d \" /do \";"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    private final String command;"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"     * Constructs a go command."},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"     * @param command Input string."},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    public GoCommand(String command) {"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"        this.command \u003d command;"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    private Place convertToPlace() throws DukeException {"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"        if (command.length() \u003c\u003d LENGTH_GO) {"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_EMPTY_ARGUMENT);"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"        int indexOfAt \u003d command.toLowerCase().indexOf(MARK_DO);"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"        if (indexOfAt \u003c LENGTH_GO) {"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_UNDETECTED_AT);"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"        String subStrContent \u003d command.substring(LENGTH_GO, indexOfAt);"},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"        String subStrPlace \u003d command.substring(indexOfAt + LENGTH_SEPARATOR);"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"        if (StringParser.isBlank(subStrContent)) {"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_EMPTY_CONTENT);"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"        } else if (StringParser.isBlank(subStrPlace)) {"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"            throw new DukeException(ERROR_EMPTY_TIME);"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"        return new Place(subStrContent, subStrPlace);"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"     * Execute and print a go command."},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"     * @param listT Passes TaskList in case of reading and writing to the list."},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"     * @param listP Passes PlaceList in case of reading and writing to the list."},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When encounter an error in command argument."},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":"    public String executeAndPrint(TaskList listT, PlaceList listP) throws DukeException {"},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":"        Place place \u003d convertToPlace();"},{"lineNumber":63,"author":{"gitId":"AiwassPrime"},"content":"        listP.addPlace(place);"},{"lineNumber":64,"author":{"gitId":"AiwassPrime"},"content":"        return \"Place added:\" + System.lineSeparator() + place.toString()"},{"lineNumber":65,"author":{"gitId":"AiwassPrime"},"content":"                + \"Now you have \" + listP.getSize()"},{"lineNumber":66,"author":{"gitId":"AiwassPrime"},"content":"                + (listP.getSize() \u003d\u003d 1"},{"lineNumber":67,"author":{"gitId":"AiwassPrime"},"content":"                    ? \" place in the list.\" + System.lineSeparator()"},{"lineNumber":68,"author":{"gitId":"AiwassPrime"},"content":"                    : \" places in the list.\" + System.lineSeparator());"},{"lineNumber":69,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":70}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.PlaceList;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" * Command type list."},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    private static final String MESSAGE_LIST_EMPTY \u003d \"List is empty\";"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"     * Execute and print a list command."},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"     * @param listT Passes TaskList in case of reading and writing to the list."},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"     * @param listP Passes PlaceList in case of reading and writing to the list."},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When encounter an error in command argument."},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    public String executeAndPrint(TaskList listT, PlaceList listP) throws DukeException {"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"        if (listT.getSize() \u003d\u003d 0) {"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"            return MESSAGE_LIST_EMPTY + System.lineSeparator();"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"            return listT.formatList();"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"        return \"Test usage: this is a LIST command.\";"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":34}},{"path":"src/main/java/duke/command/PlaceCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import duke.PlaceList;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"public class PlaceCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"    private static final String MESSAGE_LIST_EMPTY \u003d \"List is empty\";"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"     * Execute and print a list command."},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"     * @param listT Passes TaskList in case of reading and writing to the list."},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"     * @param listP Passes PlaceList in case of reading and writing to the list."},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     * @throws DukeException When encounter an error in command argument."},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"    public String executeAndPrint(TaskList listT, PlaceList listP) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"        if (listP.getSize() \u003d\u003d 0) {"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"            return MESSAGE_LIST_EMPTY + System.lineSeparator();"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"            return listP.formatList();"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":26}},{"path":"src/main/java/duke/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.controllers;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":61}},{"path":"src/main/java/duke/controllers/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.controllers;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":33}},{"path":"src/main/java/duke/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.controllers;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import javafx.application.Platform;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"    private AnchorPane anchorPane;"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    private TextField userInput;"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"    private Button sendButton;"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"    private Duke duke;"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    private boolean isExit \u003d false;"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"     * Initializes the displayed screen to the specified state."},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"    @FXML"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"    public void initialize() {"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"                DialogBox.getDukeDialog(Duke.getGreeting(), dukeImage)"},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"        );"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"        duke \u003d d;"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"    @FXML"},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"    private void handleUserInput() {"},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"        if (response.length() !\u003d 0) {"},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":"            );"},{"lineNumber":63,"author":{"gitId":"AiwassPrime"},"content":"            userInput.clear();"},{"lineNumber":64,"author":{"gitId":"AiwassPrime"},"content":"        } else {"},{"lineNumber":65,"author":{"gitId":"AiwassPrime"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":66,"author":{"gitId":"AiwassPrime"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":67,"author":{"gitId":"AiwassPrime"},"content":"                    DialogBox.getDukeDialog(Duke.getGoodbye(), dukeImage)"},{"lineNumber":68,"author":{"gitId":"AiwassPrime"},"content":"            );"},{"lineNumber":69,"author":{"gitId":"AiwassPrime"},"content":"            Platform.exit();"},{"lineNumber":70,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":72}},{"path":"src/main/java/duke/place/Place.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.place;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":" * Abstract class for Tasks."},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"public class Place {"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"    private final String description;"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"    private final String location;"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"     * Place builder prototype."},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"     * @param description Parsed string contains description of this task."},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"    public Place(String description, String location) {"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"        this.location \u003d location;"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    public String getDescription() {"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"        return this.description;"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    public String getLocation() {"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"        return this.location;"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"        return location + \": \" + description + System.lineSeparator();"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":34}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":" * Task type deadline."},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"    private final LocalDateTime by;"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    private final DateTimeFormatter formatter \u003d"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     * Builder for Deadline."},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"     * @param description Task description."},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"     * @param by Finish by this time."},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"        super(description);"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"        this.by \u003d by;"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"    public String getSaveTime() {"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"        return by.format(formatter);"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    public String getSaveType() {"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"        return \"D\";"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"        return \"[D]\" + super.toString()"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"                + \" (by: \" + by.format(formatter) + \").\" + System.lineSeparator();"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":" * Task type event."},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"    private final LocalDateTime at;"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    private final DateTimeFormatter formatter \u003d"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     * Builder for Event."},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"     * @param description Task description."},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"     * @param at Finish by this time."},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"    public Event(String description, LocalDateTime at) {"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"        super(description);"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"        this.at \u003d at;"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"    public String getSaveTime() {"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"        return at.format(formatter);"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    public String getSaveType() {"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"        return \"E\";"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"        return \"[E]\" + super.toString()"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"                + \" (at: \" + at.format(formatter) + \").\" + System.lineSeparator();"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":" * Abstract class for Tasks."},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"    private final String description;"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"    private boolean isDone;"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"     * Task builder prototype."},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"     * Sets isDone to false by default."},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"     * @param description Parsed string contains description of this task."},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"    public Task(String description) {"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"        this.isDone \u003d false;"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    public String getDescription() {"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"        return this.description;"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"    public boolean getStatus() {"},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"        return isDone;"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    public abstract String getSaveTime();"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    public abstract String getSaveType();"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"    public void markAsDone() {"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"        this.isDone \u003d true;"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"     * Y is done, N is not done."},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":"     * @return String that represents the status to show for printing."},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"    public String getStatusIcon() {"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"        // Tick and cross is not displayed correctly in my local environment."},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"        return (isDone ? \"Y\" : \"N\");"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description + \".\";"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":53}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":" * Task type todo."},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":" */"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"    public Todo(String description) {"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"    public String getSaveTime() {"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"        return \"\";"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    public String getSaveType() {"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"        return \"T\";"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"        return \"[T]\" + super.toString() + System.lineSeparator();"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":26}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"  \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"  \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"  \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"  \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"AiwassPrime":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"\u003cAnchorPane fx:id\u003d\"anchorPane\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controllers.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"AiwassPrime":19}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"import duke.DukeException;"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"import duke.Parser;"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"public class ParserTest {"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_bye() throws DukeException {"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is an EXIT command\","},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"bye\").toString());"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is an EXIT command\","},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"BYE\").toString());"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is an EXIT command\","},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"bYe\").toString());"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_list() throws DukeException {"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a LIST command\","},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"list\").toString());"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a LIST command\","},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"LIST\").toString());"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a LIST command\","},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"LisT\").toString());"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_deadline() throws DukeException {"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DEADLINE command\","},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"deadline \").toString());"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DEADLINE command\","},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"DEADLINE \").toString());"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DEADLINE command\","},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"DeadLINe \").toString());"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":42,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_event() throws DukeException {"},{"lineNumber":44,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is an EVENT command\","},{"lineNumber":45,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"event \").toString());"},{"lineNumber":46,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is an EVENT command\","},{"lineNumber":47,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"EVENT \").toString());"},{"lineNumber":48,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is an EVENT command\","},{"lineNumber":49,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"EvenT \").toString());"},{"lineNumber":50,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":52,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":53,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_todo() throws DukeException {"},{"lineNumber":54,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a TODO command\","},{"lineNumber":55,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"todo \").toString());"},{"lineNumber":56,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a TODO command\","},{"lineNumber":57,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"TODO \").toString());"},{"lineNumber":58,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a TODO command\","},{"lineNumber":59,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"TodO \").toString());"},{"lineNumber":60,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":62,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":63,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_delete() throws DukeException {"},{"lineNumber":64,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DELETE command\","},{"lineNumber":65,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"delete \").toString());"},{"lineNumber":66,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DELETE command\","},{"lineNumber":67,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"DELETE \").toString());"},{"lineNumber":68,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DELETE command\","},{"lineNumber":69,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"dElEte \").toString());"},{"lineNumber":70,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":72,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":73,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_done() throws DukeException {"},{"lineNumber":74,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DONE command\","},{"lineNumber":75,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"done \").toString());"},{"lineNumber":76,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DONE command\","},{"lineNumber":77,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"DONE \").toString());"},{"lineNumber":78,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"Test usage: this is a DONE command\","},{"lineNumber":79,"author":{"gitId":"AiwassPrime"},"content":"                Parser.parseCommand(\"DoNe \").toString());"},{"lineNumber":80,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":82,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":83,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_invalidCommandOneLetter_exceptionThrown() {"},{"lineNumber":84,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":85,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"\","},{"lineNumber":86,"author":{"gitId":"AiwassPrime"},"content":"                    Parser.parseCommand(\"a\").toString());"},{"lineNumber":87,"author":{"gitId":"AiwassPrime"},"content":"            fail();"},{"lineNumber":88,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DukeException e) {"},{"lineNumber":89,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"Invalid command\", e.getMessage());"},{"lineNumber":90,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":93,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":94,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_invalidCommandZeroLetter_exceptionThrown() {"},{"lineNumber":95,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"\","},{"lineNumber":97,"author":{"gitId":"AiwassPrime"},"content":"                    Parser.parseCommand(\"\").toString());"},{"lineNumber":98,"author":{"gitId":"AiwassPrime"},"content":"            fail();"},{"lineNumber":99,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DukeException e) {"},{"lineNumber":100,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"Invalid command\", e.getMessage());"},{"lineNumber":101,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":104,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":105,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_invalidCommandLongLetter_exceptionThrown() {"},{"lineNumber":106,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":107,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"\","},{"lineNumber":108,"author":{"gitId":"AiwassPrime"},"content":"                    Parser.parseCommand(\"frhyuighrdiughiudfhgvijverhfiueeidfhaijfjiorejgiorshjglrkehgjklergaa\""},{"lineNumber":109,"author":{"gitId":"AiwassPrime"},"content":"                            + \"ghdfjkhvehrghiuyerhgidfbvijergfvnjrkdbgnvjkdfbnvjkfdnvjkdfbvnjkdfbvjdfkbjkdf\""},{"lineNumber":110,"author":{"gitId":"AiwassPrime"},"content":"                            + \"vnjdfkvbjkdfbfjrighuiohguidsfhguitrnvbuirthgjithgijtnbjitrhgjidfhahjueriutdf\")"},{"lineNumber":111,"author":{"gitId":"AiwassPrime"},"content":"                            .toString());"},{"lineNumber":112,"author":{"gitId":"AiwassPrime"},"content":"            fail();"},{"lineNumber":113,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DukeException e) {"},{"lineNumber":114,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"Invalid command\", e.getMessage());"},{"lineNumber":115,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":118,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":119,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_invalidCommandWithoutSpace_exceptionThrown() {"},{"lineNumber":120,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":121,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"\","},{"lineNumber":122,"author":{"gitId":"AiwassPrime"},"content":"                    Parser.parseCommand(\"done\").toString());"},{"lineNumber":123,"author":{"gitId":"AiwassPrime"},"content":"            fail();"},{"lineNumber":124,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DukeException e) {"},{"lineNumber":125,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"Invalid command\", e.getMessage());"},{"lineNumber":126,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":129,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":130,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_invalidCommandSpaceBeforeCommand_exceptionThrown() {"},{"lineNumber":131,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":132,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"\","},{"lineNumber":133,"author":{"gitId":"AiwassPrime"},"content":"                    Parser.parseCommand(\" done \").toString());"},{"lineNumber":134,"author":{"gitId":"AiwassPrime"},"content":"            fail();"},{"lineNumber":135,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DukeException e) {"},{"lineNumber":136,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"Invalid command\", e.getMessage());"},{"lineNumber":137,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":140,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":141,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_invalidCommandSpaceInBetweenCommand_exceptionThrown() {"},{"lineNumber":142,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":143,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"\","},{"lineNumber":144,"author":{"gitId":"AiwassPrime"},"content":"                    Parser.parseCommand(\"d one \").toString());"},{"lineNumber":145,"author":{"gitId":"AiwassPrime"},"content":"            fail();"},{"lineNumber":146,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DukeException e) {"},{"lineNumber":147,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"Invalid command\", e.getMessage());"},{"lineNumber":148,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":151,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":152,"author":{"gitId":"AiwassPrime"},"content":"    public void parseCommand_invalidCommandTwoCommandsConcat_exceptionThrown() {"},{"lineNumber":153,"author":{"gitId":"AiwassPrime"},"content":"        try {"},{"lineNumber":154,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"\","},{"lineNumber":155,"author":{"gitId":"AiwassPrime"},"content":"                    Parser.parseCommand(\"byelist\").toString());"},{"lineNumber":156,"author":{"gitId":"AiwassPrime"},"content":"            fail();"},{"lineNumber":157,"author":{"gitId":"AiwassPrime"},"content":"        } catch (DukeException e) {"},{"lineNumber":158,"author":{"gitId":"AiwassPrime"},"content":"            assertEquals(\"Invalid command\", e.getMessage());"},{"lineNumber":159,"author":{"gitId":"AiwassPrime"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":161}},{"path":"src/test/java/StringParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"import duke.StringParser;"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"public class StringParserTest {"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"    public void underlineGenerator_zeroRepeat() {"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"        assertEquals(\"\\n\","},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"                StringParser.generateUnderline(0));"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"    public void isBlank_zeroString() {"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"        assertTrue(StringParser.isBlank(\"\"));"},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"    public void isBlank_blank() {"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"        assertFalse(StringParser.isBlank(\"  aaa   \"));"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":""},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"    public void isBlank_specialString() {"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"        assertFalse(StringParser.isBlank(\"\\n\\n\\n\\n\\n  \"));"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"}"}],"authorContributionMap":{"AiwassPrime":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AiwassPrime"},"content":"abc"},{"lineNumber":2,"author":{"gitId":"AiwassPrime"},"content":"todo abc"},{"lineNumber":3,"author":{"gitId":"AiwassPrime"},"content":"todo  "},{"lineNumber":4,"author":{"gitId":"AiwassPrime"},"content":"todoa"},{"lineNumber":5,"author":{"gitId":"AiwassPrime"},"content":"tod"},{"lineNumber":6,"author":{"gitId":"AiwassPrime"},"content":"todo fneujiwhtfjkrewahgtfijarhjkldhgfiuerjngfijdsakhgmkdsanvijuerngjksadfghjkasdfbnghiejrabghkdfjabgkndfsghijrkaghiuyreabguieranvjrehgijrekgbjkdfahgbjhierbgiuvjrebghijrbfgjkearbvireghjergb"},{"lineNumber":7,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":8,"author":{"gitId":"AiwassPrime"},"content":"deadline def /by 123aaa"},{"lineNumber":9,"author":{"gitId":"AiwassPrime"},"content":"deadline qwer /at axcdgfer"},{"lineNumber":10,"author":{"gitId":"AiwassPrime"},"content":"deadline/by"},{"lineNumber":11,"author":{"gitId":"AiwassPrime"},"content":"deadline /by abc"},{"lineNumber":12,"author":{"gitId":"AiwassPrime"},"content":"deadline asnf by abca"},{"lineNumber":13,"author":{"gitId":"AiwassPrime"},"content":"deadline a /bysafefdc"},{"lineNumber":14,"author":{"gitId":"AiwassPrime"},"content":"event abc /at avb"},{"lineNumber":15,"author":{"gitId":"AiwassPrime"},"content":"eventa dnuf"},{"lineNumber":16,"author":{"gitId":"AiwassPrime"},"content":"event def /at basjf"},{"lineNumber":17,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"done"},{"lineNumber":19,"author":{"gitId":"AiwassPrime"},"content":"done "},{"lineNumber":20,"author":{"gitId":"AiwassPrime"},"content":"done  "},{"lineNumber":21,"author":{"gitId":"AiwassPrime"},"content":"done 1"},{"lineNumber":22,"author":{"gitId":"AiwassPrime"},"content":"list "},{"lineNumber":23,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":24,"author":{"gitId":"AiwassPrime"},"content":"delete"},{"lineNumber":25,"author":{"gitId":"AiwassPrime"},"content":"delete "},{"lineNumber":26,"author":{"gitId":"AiwassPrime"},"content":"delete  "},{"lineNumber":27,"author":{"gitId":"AiwassPrime"},"content":"delete 1"},{"lineNumber":28,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":29,"author":{"gitId":"AiwassPrime"},"content":"delete 100"},{"lineNumber":30,"author":{"gitId":"AiwassPrime"},"content":"delete -5"},{"lineNumber":31,"author":{"gitId":"AiwassPrime"},"content":"delete 1"},{"lineNumber":32,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":33,"author":{"gitId":"AiwassPrime"},"content":"delete 1"},{"lineNumber":34,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":35,"author":{"gitId":"AiwassPrime"},"content":"delete 1"},{"lineNumber":36,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":37,"author":{"gitId":"AiwassPrime"},"content":"delete 1"},{"lineNumber":38,"author":{"gitId":"AiwassPrime"},"content":"done 1"},{"lineNumber":39,"author":{"gitId":"AiwassPrime"},"content":"list"},{"lineNumber":40,"author":{"gitId":"AiwassPrime"},"content":"bye"}],"authorContributionMap":{"AiwassPrime":40}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"AiwassPrime"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":20,"AiwassPrime":1}}]
