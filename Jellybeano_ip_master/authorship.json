[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"}"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"}"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"}"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"}"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"    mainClassName \u003d \"duke/Launcher\""},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"}"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"    archiveBaseName \u003d \"Duke\""},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"}"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"}"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"}"}],"authorContributionMap":{"Jellybeano":61}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"A simple and *definitely non-sarcastic* guide to **Duwuke**, your friendly neighbourhood chatbot."},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"### Friendly"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"Never have to worry about a boring chatbot experience with **Duwuke!**"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"### Keep track of your events and deadlines"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"A beautiful interface reminds you of all the things you have yet to fail at doing!"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"### Tag your to-do list"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"What better way to motivate yourself to complete tasks than adding some tags!"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"### `list` - Display the current todo list"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"The current todo list, if any, will be displayed for easy reference."},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"Example of usage:"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"`list`"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"Expected Outcome:"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"`Here are the tasks in your list uwu:`"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"`1. [T][X] Watch normies enjoy their weekend while coding alone`"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"### `done` - Mark a task as completed"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"Choose any one task to mark as done, based on their numbering in the list,"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"and feel a sense of accomplishment."},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"Example of usage:"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"`done 1`"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"Expected outcome:"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"`Sugoi! I\u0027ve marked this task as done uwu:`"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"`[T][X] Let down the expectations of people around you`"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"### `bye` - Quit the application"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"Entering this command closes the application."},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"Example of usage:"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"`bye`"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"Expected outcome:"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"`exit application`"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"### `todo` - Input a new task "},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"Adds a new task to the list. "},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"`todo Envy the success of others while not performing self-improvement`"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"`Hai. I\u0027ve added this task:`"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"`[T][] Envy the success of others while not performing self-improvement`"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"`Now you have 1 task(s) in the list uwu`"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"### `deadline` - Input a new deadline"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"Adds a new deadline into the list, with a time to complete the task by."},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"Time should be provided in the YYYY-MM-DD HH:MM format."},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"If no time is given, it is automatically assumed to be 0000 hours."},{"lineNumber":80,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":"Example of usage:"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"Jellybeano"},"content":"`deadline Submit 2103 iP /by 2021-02-19 23:59`"},{"lineNumber":84,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"Expected outcome:"},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"`Hai. I\u0027ve added this task:`"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":"`[D][] Submit 2103 iP (by:Feb 19 2021 2359PM)`"},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":91,"author":{"gitId":"Jellybeano"},"content":"`Now you have 1 task(s) in the list uwu`"},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":"### `event` - Input a new event"},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":"Adds a new event into the list, with a time for when it occurs."},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":"Time should be provided in the YYYY-MM-DD HH:MM format."},{"lineNumber":98,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":99,"author":{"gitId":"Jellybeano"},"content":"If no time is given, it is automatically assumed to be 0000 hours."},{"lineNumber":100,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":101,"author":{"gitId":"Jellybeano"},"content":"Example of usage:"},{"lineNumber":102,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":103,"author":{"gitId":"Jellybeano"},"content":"`event Watch movie alone /at 2021-02-14 18:00`"},{"lineNumber":104,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":105,"author":{"gitId":"Jellybeano"},"content":"Expected outcome:"},{"lineNumber":106,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":107,"author":{"gitId":"Jellybeano"},"content":"`Hai. I\u0027ve added this task:`"},{"lineNumber":108,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":109,"author":{"gitId":"Jellybeano"},"content":"`[E][] Watch movie alone (at:Feb 14 2021 0600PM)`"},{"lineNumber":110,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":111,"author":{"gitId":"Jellybeano"},"content":"`Now you have 1 task(s) in the list uwu`"},{"lineNumber":112,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":113,"author":{"gitId":"Jellybeano"},"content":"### `delete` - Deletes a task"},{"lineNumber":114,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":115,"author":{"gitId":"Jellybeano"},"content":"Delete a selected task from the list, based on their numbering in the list ."},{"lineNumber":116,"author":{"gitId":"Jellybeano"},"content":"This action is irreversible."},{"lineNumber":117,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":118,"author":{"gitId":"Jellybeano"},"content":"Example of usage:"},{"lineNumber":119,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":120,"author":{"gitId":"Jellybeano"},"content":"`delete 1`"},{"lineNumber":121,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":122,"author":{"gitId":"Jellybeano"},"content":"Expected outcome:"},{"lineNumber":123,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":124,"author":{"gitId":"Jellybeano"},"content":"`Noted. I\u0027ve removed this task uwu:`"},{"lineNumber":125,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":126,"author":{"gitId":"Jellybeano"},"content":"`[T][] Lie down and cry`"},{"lineNumber":127,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":128,"author":{"gitId":"Jellybeano"},"content":"`Now you have 0 task(s) in the list uwu`"},{"lineNumber":129,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":130,"author":{"gitId":"Jellybeano"},"content":"### `find` - find a related task"},{"lineNumber":131,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":132,"author":{"gitId":"Jellybeano"},"content":"Searches through the list and returns any tasks containing the keyword."},{"lineNumber":133,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":134,"author":{"gitId":"Jellybeano"},"content":"Example of usage:"},{"lineNumber":135,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":136,"author":{"gitId":"Jellybeano"},"content":"`find milk`"},{"lineNumber":137,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":138,"author":{"gitId":"Jellybeano"},"content":"Expected outcome:"},{"lineNumber":139,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":140,"author":{"gitId":"Jellybeano"},"content":"`Here are the matching tasks in your list uwu:`"},{"lineNumber":141,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":142,"author":{"gitId":"Jellybeano"},"content":"`1. [T][X] buy milk`"},{"lineNumber":143,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":144,"author":{"gitId":"Jellybeano"},"content":"`2. [T][] finish milk before it expires`"},{"lineNumber":145,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":146,"author":{"gitId":"Jellybeano"},"content":"### `tag` - Add a tag to any task"},{"lineNumber":147,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":148,"author":{"gitId":"Jellybeano"},"content":"Adds a #tag to any specified task, based on their numbering in the list."},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"Jellybeano"},"content":"`tag 1 hopefully`"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"Jellybeano"},"content":"`I see! What an interesting tag uwu`"},{"lineNumber":157,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":158,"author":{"gitId":"Jellybeano"},"content":"`[T][] Achieve something in life #hopefully`"}],"authorContributionMap":{"Jellybeano":138,"-":20}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":":init"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":":win9xME_args"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"@rem Slurp the command line arguments."},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"set _SKIP\u003d2"},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":":win9xME_args_slurp"},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":80,"author":{"gitId":"Jellybeano"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":82,"author":{"gitId":"Jellybeano"},"content":":execute"},{"lineNumber":83,"author":{"gitId":"Jellybeano"},"content":"@rem Setup the command line"},{"lineNumber":84,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"@rem Execute Gradle"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":":end"},{"lineNumber":91,"author":{"gitId":"Jellybeano"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":":fail"},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":98,"author":{"gitId":"Jellybeano"},"content":"exit /b 1"},{"lineNumber":99,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":100,"author":{"gitId":"Jellybeano"},"content":":mainEnd"},{"lineNumber":101,"author":{"gitId":"Jellybeano"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":102,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":103,"author":{"gitId":"Jellybeano"},"content":":omega"}],"authorContributionMap":{"Jellybeano":103}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"     * The date/time that the Deadline should be done by"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"    private LocalDateTime doneBy;"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"     * Initiates a deadline, time is set to 0000 if no time is provided."},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"     * @param s      The task."},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"     * @param doneBy The date and time to finish the task by."},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"    public Deadline(String s, String doneBy) {"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"        super(s);"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"        String[] split \u003d doneBy.split(\"\\\\s+\");"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"        if (split.length \u003d\u003d 1) {"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"            this.doneBy \u003d LocalDate.parse(doneBy).atTime(0, 0);"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"        } else if (split.length \u003d\u003d 2) {"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"            this.doneBy \u003d LocalDate.parse(split[0]).atTime(LocalTime.parse(split[1]));"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"            throw new DateTimeParseException(\"\", \"\", 1);"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"        assert(this.doneBy !\u003d null);"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"     * Returns a String form of the current Deadline to be saved onto the hard disk."},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"     * @return the Deadline as a String to be saved."},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"    public String saveToData() {"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"        if (this.isDone) {"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"            return (\"D | 1 | \" + todo + \" | \" + doneBy.toString().replace(\"T\", \" \")"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"                    + \" | \" + saveTags());"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"            return (\"D | 0 | \" + todo + \" | \" + doneBy.toString().replace(\"T\", \" \")"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"                    + \" | \" + saveTags());"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"        if (!this.isDone) {"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"            return (\"[D][ ] \" + this.todo + \" (by:\" + dateFormat(this.doneBy) + \")\""},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"                    + \" \" + showTags());"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"            return (\"[D][X] \" + this.todo + \" (by:\" + dateFormat(this.doneBy) + \")\""},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"                    + \" \" + showTags());"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"}"}],"authorContributionMap":{"Jellybeano":59}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"import javafx.geometry.Insets;"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":" * An example of a custom control using FXML."},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":" * containing text from the speaker."},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":" */"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"public class DialogBox extends HBox {"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"    private Label dialog;"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"    private ImageView displayPicture;"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"            fxmlLoader.load();"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"            e.printStackTrace();"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"        dialog.setText(text);"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"        displayPicture.setImage(img);"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"    private void flip() {"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"        Collections.reverse(tmp);"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"     * Generates the Dialog Box to represent user speech."},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"     * @param text The text to be displayed."},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"     * @param img The image of the User."},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"     * @return A DialogBox with the required specifications."},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"        DialogBox userMessage \u003d new DialogBox(text, img);"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"        userMessage.setBackground(new Background(new BackgroundFill(Color.LAVENDERBLUSH,"},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"                CornerRadii.EMPTY,"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"                Insets.EMPTY)));"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"        return userMessage;"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"     * Generates the Dialog Box to represent Duwuke speech."},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"     * @param text The text to be displayed."},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":"     * @param imgHappy The image of Duwuke."},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"     * @param imgAngry The image of Duwuke with an additional angry motif."},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"     * @return A DialogBox with the required specifications."},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"Jellybeano"},"content":"    public static DialogBox getDukeDialog(String text, Image imgHappy, Image imgAngry) {"},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":"        var db \u003d (text.substring(0, 6).equals(\"GRR!!!\"))"},{"lineNumber":82,"author":{"gitId":"Jellybeano"},"content":"                ? new DialogBox(text, imgAngry)"},{"lineNumber":83,"author":{"gitId":"Jellybeano"},"content":"                : new DialogBox(text, imgHappy);"},{"lineNumber":84,"author":{"gitId":"Jellybeano"},"content":"        db.flip();"},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.LIGHTCYAN,"},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":"                CornerRadii.EMPTY,"},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"                Insets.EMPTY)));"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":"        return db;"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":"}"}],"authorContributionMap":{"Jellybeano":90}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.Scene;"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"import javafx.stage.Stage;"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"public class Duke extends Application {"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"    private final Storage storage;"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"    private TaskList taskList;"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    private final Ui ui;"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"    private Parser parser;"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"    private Stage stage;"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"    private Button sendButton;"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/User.jpg\"));"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/Duwuke.jpg\"));"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"    private final Image dukeAngryImage \u003d new Image(this.getClass().getResourceAsStream(\"/DuwukeAngry.jpg\"));"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"     * Instantiates a Duke object."},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"    public Duke() {"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"        ui \u003d new Ui();"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"        storage \u003d new Storage(\"test/duke.txt\");"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"            taskList \u003d storage.load();"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"        } catch (Exception e) {"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"            ui.showLoadingError();"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"     * Performs actions as required based on the current user input, then clears it."},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"    private void handleUserInput() {"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"        String userText \u003d userInput.getText();"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"        String dukeText \u003d parser.parse(taskList, userInput.getText());"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"        storage.saveAsFile(taskList);"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"                DialogBox.getUserDialog(userText, user),"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"                DialogBox.getDukeDialog(dukeText, duke, dukeAngryImage)"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"        );"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"        if (userText.equals(\"bye\")) {"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"            stage.close();"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"        userInput.clear();"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"     * Sets the correct GUI values for the Stage."},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"     * @param scene The current scene."},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"    private void setStage(Scene scene) {"},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"        stage.setScene(scene);"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"        stage.show();"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"        stage.setTitle(\"Duwuke\");"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"        stage.setResizable(false);"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"     * Sets the correct GUI values for the MainLayout."},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"     * @param mainLayout The current MainLayout."},{"lineNumber":80,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":"    private void setMainLayout(AnchorPane mainLayout) {"},{"lineNumber":82,"author":{"gitId":"Jellybeano"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":83,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":"     * Sets the correct GUI values for the ScrollPane."},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":"    private void setScrollPane() {"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":91,"author":{"gitId":"Jellybeano"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":"     * Sets the correct GUI values for any DialogContainer."},{"lineNumber":98,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"Jellybeano"},"content":"    private void setDialogContainer() {"},{"lineNumber":100,"author":{"gitId":"Jellybeano"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":101,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":103,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"Jellybeano"},"content":"     * Sets the correct GUI values for the input bar."},{"lineNumber":105,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"Jellybeano"},"content":"    private void setInputBar() {"},{"lineNumber":107,"author":{"gitId":"Jellybeano"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":108,"author":{"gitId":"Jellybeano"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":109,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":111,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"Jellybeano"},"content":"     * Sets the correct GUI values for the AnchorPane."},{"lineNumber":113,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"Jellybeano"},"content":"    private void setAnchorPane() {"},{"lineNumber":115,"author":{"gitId":"Jellybeano"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":116,"author":{"gitId":"Jellybeano"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":117,"author":{"gitId":"Jellybeano"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":118,"author":{"gitId":"Jellybeano"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);"},{"lineNumber":119,"author":{"gitId":"Jellybeano"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":120,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":122,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"Jellybeano"},"content":"     * Generates the GUI and its various components for Duwuke."},{"lineNumber":124,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"Jellybeano"},"content":"    public void generateGui() {"},{"lineNumber":126,"author":{"gitId":"Jellybeano"},"content":"        parser \u003d new Parser();"},{"lineNumber":127,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":128,"author":{"gitId":"Jellybeano"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":129,"author":{"gitId":"Jellybeano"},"content":"        userInput \u003d new TextField();"},{"lineNumber":130,"author":{"gitId":"Jellybeano"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":131,"author":{"gitId":"Jellybeano"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":132,"author":{"gitId":"Jellybeano"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":133,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":134,"author":{"gitId":"Jellybeano"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":135,"author":{"gitId":"Jellybeano"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":136,"author":{"gitId":"Jellybeano"},"content":"        Scene scene \u003d new Scene(mainLayout);"},{"lineNumber":137,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":138,"author":{"gitId":"Jellybeano"},"content":"        setStage(scene);"},{"lineNumber":139,"author":{"gitId":"Jellybeano"},"content":"        setMainLayout(mainLayout);"},{"lineNumber":140,"author":{"gitId":"Jellybeano"},"content":"        setScrollPane();"},{"lineNumber":141,"author":{"gitId":"Jellybeano"},"content":"        setDialogContainer();"},{"lineNumber":142,"author":{"gitId":"Jellybeano"},"content":"        setInputBar();"},{"lineNumber":143,"author":{"gitId":"Jellybeano"},"content":"        setAnchorPane();"},{"lineNumber":144,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":145,"author":{"gitId":"Jellybeano"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(ui.greet(), duke, dukeAngryImage));"},{"lineNumber":146,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":148,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"Jellybeano"},"content":"     * Creates the GUI and waits for input."},{"lineNumber":150,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"Jellybeano"},"content":"    public void showGui() {"},{"lineNumber":152,"author":{"gitId":"Jellybeano"},"content":"        generateGui();"},{"lineNumber":153,"author":{"gitId":"Jellybeano"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());"},{"lineNumber":154,"author":{"gitId":"Jellybeano"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());"},{"lineNumber":155,"author":{"gitId":"Jellybeano"},"content":"        dialogContainer.heightProperty().addListener((observable -\u003e scrollPane.setVvalue(1.0)));"},{"lineNumber":156,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":158,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":159,"author":{"gitId":"Jellybeano"},"content":"     * Starts and runs Duke."},{"lineNumber":160,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":161,"author":{"gitId":"Jellybeano"},"content":"     * @param stage The stage for Duke GUI."},{"lineNumber":162,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"Jellybeano"},"content":"    @Override"},{"lineNumber":164,"author":{"gitId":"Jellybeano"},"content":"    public void start(Stage stage) {"},{"lineNumber":165,"author":{"gitId":"Jellybeano"},"content":"        this.stage \u003d stage;"},{"lineNumber":166,"author":{"gitId":"Jellybeano"},"content":"        showGui();"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Jellybeano":167,"-":2}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"     * The time at which the Event happens"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"    private LocalDateTime time;"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"     * Initiates a Event, time is set to 0000 if none is provided."},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"     * @param s    The task."},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"     * @param time The time when the task occurs."},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"     * @throws DateTimeParseException"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"    public Event(String s, String time) throws DateTimeParseException {"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"        super(s);"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"        String[] split \u003d time.split(\"\\\\s+\");"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"        if (split.length \u003d\u003d 1) {"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"            this.time \u003d LocalDate.parse(time).atTime(0, 0);"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"        } else if (split.length \u003d\u003d 2) {"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"            this.time \u003d LocalDate.parse(split[0]).atTime(LocalTime.parse(split[1]));"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"            throw new DateTimeParseException(\"\", \"\", 1);"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"        assert(this.time !\u003d null);"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"     * Returns a String form of the current Event to be saved onto the hard disk."},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"     * @return the Event as a String to be saved."},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"    public String saveToData() {"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"        if (this.isDone) {"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"            return (\"E | 1 | \" + todo + \" | \" + time.toString().replace(\"T\", \" \")"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"                    + \" | \" + saveTags());"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"            return (\"E | 0 | \" + todo + \" | \" + time.toString().replace(\"T\", \" \")"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"                    + \" | \" + saveTags());"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"        if (!this.isDone) {"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"            return (\"[E][ ] \" + this.todo + \" (at:\" + dateFormat(this.time) + \")\""},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"                    + \" \" + showTags());"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"            return (\"[E][X] \" + this.todo + \" (at:\" + dateFormat(this.time) + \")\""},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"                    + \" \" + showTags());"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"}"}],"authorContributionMap":{"Jellybeano":59}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"        Application.launch(Duke.class, args);"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"}"}],"authorContributionMap":{"Jellybeano":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"            stage.show();"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"}"}],"authorContributionMap":{"Jellybeano":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duwuke.jpg\"));"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"    private Image dukeAngryImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DuwukeAngry.jpg\"));"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"        duke \u003d d;"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"    @FXML"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"    private void handleUserInput() {"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"}"}],"authorContributionMap":{"Jellybeano":46}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"    private TaskList taskList;"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"    private Ui ui;"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"    private String[] split;"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"    private String input;"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"     * Parses a given input and returns Strings as necessary based on the input."},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"     * The main driver of the Duke class."},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"     * @param t The current TaskList."},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"     * @param i Input that is being read in."},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    public String parse(TaskList t, String i) {"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"        ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"        taskList \u003d t;"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"        split \u003d i.split(\"\\\\s+\");"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"        input \u003d i;"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"        switch (split[0]) {"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"        case \"list\":"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"            return listCommand();"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"        case \"done\":"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"            return doneCommand();"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"        case \"bye\":"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"            return byeCommand();"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"        case \"todo\":"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"            return todoCommand();"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"        case \"deadline\":"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"            return deadlineCommand();"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"        case \"event\":"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"            return eventCommand();"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"        case \"delete\":"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"            return deleteCommand();"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"        case \"find\":"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"            return findCommand();"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"        case \"tag\":"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"            return tagCommand();"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"        default:"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"            return errorCommand();"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"     * Returns the result of parsing a list command."},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"     * @return A reply to the user."},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"    private String listCommand() {"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"        if (taskList.size() \u003d\u003d 0) {"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"            return ui.emptyListMessage();"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"            return ui.showList(taskList);"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"     * Returns the result of parsing a done command."},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"     * @return A reply to the user."},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"    private String doneCommand() {"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"        try {"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"            int done \u003d Integer.parseInt(split[1]) - 1;"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"            if (taskList.get(done).getDone()) {"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"                return ui.errorMessage(\"alreadyDone\");"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"            taskList.get(done).setDone();"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"            return ui.setDone(taskList.get(done));"},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":"        } catch (Exception e) {"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"            return ui.errorMessage(\"invalidDone\");"},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"Jellybeano"},"content":"     * Returns the result of parsing a bye command."},{"lineNumber":83,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"Jellybeano"},"content":"     * @return A reply to the user."},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":"    private String byeCommand() {"},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"        return ui.byeBye();"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"Jellybeano"},"content":"     * Returns the result of parsing a todo command."},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":"     * @return A reply to the user."},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":"    private String todoCommand() {"},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":"        try {"},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":"            String name \u003d input.substring(5);"},{"lineNumber":98,"author":{"gitId":"Jellybeano"},"content":"            if (name.trim().length() \u003d\u003d 0) {"},{"lineNumber":99,"author":{"gitId":"Jellybeano"},"content":"                return ui.errorMessage(\"invalidTodo\");"},{"lineNumber":100,"author":{"gitId":"Jellybeano"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"Jellybeano"},"content":"            if (name.contains(\"|\")) {"},{"lineNumber":102,"author":{"gitId":"Jellybeano"},"content":"                return ui.errorMessage(\"invalidBug\");"},{"lineNumber":103,"author":{"gitId":"Jellybeano"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"Jellybeano"},"content":"            taskList.add(new Task(input.substring(5)));"},{"lineNumber":105,"author":{"gitId":"Jellybeano"},"content":"            return (ui.taskAdded(taskList.get(taskList.size() - 1)) + \"\\n\""},{"lineNumber":106,"author":{"gitId":"Jellybeano"},"content":"                    + ui.showTaskListSize(taskList.size()));"},{"lineNumber":107,"author":{"gitId":"Jellybeano"},"content":"        } catch (Exception e) {"},{"lineNumber":108,"author":{"gitId":"Jellybeano"},"content":"            return ui.errorMessage(\"invalidTodo\");"},{"lineNumber":109,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":112,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"Jellybeano"},"content":"     * Returns the result of parsing a deadline command."},{"lineNumber":114,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"Jellybeano"},"content":"     * @return A reply to the user."},{"lineNumber":116,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"Jellybeano"},"content":"    private String deadlineCommand() {"},{"lineNumber":118,"author":{"gitId":"Jellybeano"},"content":"        try {"},{"lineNumber":119,"author":{"gitId":"Jellybeano"},"content":"            String[] splitagain2 \u003d input.substring(9).split(\"/by\");"},{"lineNumber":120,"author":{"gitId":"Jellybeano"},"content":"            String name \u003d splitagain2[0];"},{"lineNumber":121,"author":{"gitId":"Jellybeano"},"content":"            if (name.trim().length() \u003d\u003d 0) {"},{"lineNumber":122,"author":{"gitId":"Jellybeano"},"content":"                return ui.errorMessage(\"invalidDeadline\");"},{"lineNumber":123,"author":{"gitId":"Jellybeano"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"Jellybeano"},"content":"            if (name.contains(\"|\")) {"},{"lineNumber":125,"author":{"gitId":"Jellybeano"},"content":"                return ui.errorMessage(\"invalidBug\");"},{"lineNumber":126,"author":{"gitId":"Jellybeano"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"Jellybeano"},"content":"            taskList.add(new Deadline(splitagain2[0], splitagain2[1].substring(1)));"},{"lineNumber":128,"author":{"gitId":"Jellybeano"},"content":"            return (ui.taskAdded(taskList.get(taskList.size() - 1)) + \"\\n\""},{"lineNumber":129,"author":{"gitId":"Jellybeano"},"content":"                    + ui.showTaskListSize(taskList.size()));"},{"lineNumber":130,"author":{"gitId":"Jellybeano"},"content":"        } catch (DateTimeParseException de) {"},{"lineNumber":131,"author":{"gitId":"Jellybeano"},"content":"            return ui.errorMessage(\"dateTimeError\");"},{"lineNumber":132,"author":{"gitId":"Jellybeano"},"content":"        } catch (Exception e) {"},{"lineNumber":133,"author":{"gitId":"Jellybeano"},"content":"            return ui.errorMessage(\"invalidDeadline\");"},{"lineNumber":134,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":137,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"Jellybeano"},"content":"     * Returns the result of parsing a event command."},{"lineNumber":139,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":140,"author":{"gitId":"Jellybeano"},"content":"     * @return A reply to the user."},{"lineNumber":141,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"Jellybeano"},"content":"    private String eventCommand() {"},{"lineNumber":143,"author":{"gitId":"Jellybeano"},"content":"        try {"},{"lineNumber":144,"author":{"gitId":"Jellybeano"},"content":"            String[] splitagain2 \u003d input.substring(6).split(\"/at\");"},{"lineNumber":145,"author":{"gitId":"Jellybeano"},"content":"            String name \u003d splitagain2[0];"},{"lineNumber":146,"author":{"gitId":"Jellybeano"},"content":"            if (name.trim().length() \u003d\u003d 0) {"},{"lineNumber":147,"author":{"gitId":"Jellybeano"},"content":"                return ui.errorMessage(\"invalidEvent\");"},{"lineNumber":148,"author":{"gitId":"Jellybeano"},"content":"            }"},{"lineNumber":149,"author":{"gitId":"Jellybeano"},"content":"            if (name.contains(\"|\")) {"},{"lineNumber":150,"author":{"gitId":"Jellybeano"},"content":"                return ui.errorMessage(\"invalidBug\");"},{"lineNumber":151,"author":{"gitId":"Jellybeano"},"content":"            }"},{"lineNumber":152,"author":{"gitId":"Jellybeano"},"content":"            taskList.add(new Event(splitagain2[0], splitagain2[1].substring(1)));"},{"lineNumber":153,"author":{"gitId":"Jellybeano"},"content":"            return (ui.taskAdded(taskList.get(taskList.size() - 1)) + \"\\n\""},{"lineNumber":154,"author":{"gitId":"Jellybeano"},"content":"                    + ui.showTaskListSize(taskList.size()));"},{"lineNumber":155,"author":{"gitId":"Jellybeano"},"content":"        } catch (DateTimeParseException de) {"},{"lineNumber":156,"author":{"gitId":"Jellybeano"},"content":"            return ui.errorMessage(\"dateTimeError\");"},{"lineNumber":157,"author":{"gitId":"Jellybeano"},"content":"        } catch (Exception e) {"},{"lineNumber":158,"author":{"gitId":"Jellybeano"},"content":"            return ui.errorMessage(\"invalidEvent\");"},{"lineNumber":159,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":162,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":163,"author":{"gitId":"Jellybeano"},"content":"     * Returns the result of parsing a delete command."},{"lineNumber":164,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":165,"author":{"gitId":"Jellybeano"},"content":"     * @return A reply to the user."},{"lineNumber":166,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"Jellybeano"},"content":"    private String deleteCommand() {"},{"lineNumber":168,"author":{"gitId":"Jellybeano"},"content":"        try {"},{"lineNumber":169,"author":{"gitId":"Jellybeano"},"content":"            Task toDelete \u003d taskList.get(Integer.parseInt(split[1]) - 1);"},{"lineNumber":170,"author":{"gitId":"Jellybeano"},"content":"            taskList.remove(toDelete);"},{"lineNumber":171,"author":{"gitId":"Jellybeano"},"content":"            return (ui.deleteTask(toDelete) + \"\\n\""},{"lineNumber":172,"author":{"gitId":"Jellybeano"},"content":"                    + ui.showTaskListSize(taskList.size()));"},{"lineNumber":173,"author":{"gitId":"Jellybeano"},"content":"        } catch (Exception e) {"},{"lineNumber":174,"author":{"gitId":"Jellybeano"},"content":"            return ui.errorMessage(\"invalidDelete\");"},{"lineNumber":175,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":178,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":179,"author":{"gitId":"Jellybeano"},"content":"     * Returns the result of parsing a find command."},{"lineNumber":180,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":181,"author":{"gitId":"Jellybeano"},"content":"     * @return A reply to the user."},{"lineNumber":182,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"Jellybeano"},"content":"    private String findCommand() {"},{"lineNumber":184,"author":{"gitId":"Jellybeano"},"content":"        try {"},{"lineNumber":185,"author":{"gitId":"Jellybeano"},"content":"            String toFind \u003d input.substring(5);"},{"lineNumber":186,"author":{"gitId":"Jellybeano"},"content":"            if (toFind.trim().length() \u003d\u003d 0) {"},{"lineNumber":187,"author":{"gitId":"Jellybeano"},"content":"                return ui.errorMessage(\"badFind\");"},{"lineNumber":188,"author":{"gitId":"Jellybeano"},"content":"            }"},{"lineNumber":189,"author":{"gitId":"Jellybeano"},"content":"            TaskList toReturn \u003d new TaskList();"},{"lineNumber":190,"author":{"gitId":"Jellybeano"},"content":"            for (Task t : taskList.getList()) {"},{"lineNumber":191,"author":{"gitId":"Jellybeano"},"content":"                if (t.getTodo().contains(toFind)) {"},{"lineNumber":192,"author":{"gitId":"Jellybeano"},"content":"                    toReturn.add(t);"},{"lineNumber":193,"author":{"gitId":"Jellybeano"},"content":"                }"},{"lineNumber":194,"author":{"gitId":"Jellybeano"},"content":"            }"},{"lineNumber":195,"author":{"gitId":"Jellybeano"},"content":"            return ui.showSearchList(toReturn);"},{"lineNumber":196,"author":{"gitId":"Jellybeano"},"content":"        } catch (Exception e) {"},{"lineNumber":197,"author":{"gitId":"Jellybeano"},"content":"            return ui.errorMessage(\"invalidFind\");"},{"lineNumber":198,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":201,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":202,"author":{"gitId":"Jellybeano"},"content":"     * Returns the result of parsing a tag command."},{"lineNumber":203,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":204,"author":{"gitId":"Jellybeano"},"content":"     * @return A reply to the user."},{"lineNumber":205,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":206,"author":{"gitId":"Jellybeano"},"content":"    private String tagCommand() {"},{"lineNumber":207,"author":{"gitId":"Jellybeano"},"content":"        try {"},{"lineNumber":208,"author":{"gitId":"Jellybeano"},"content":"            int indexToTag \u003d Integer.parseInt(split[1]) - 1;"},{"lineNumber":209,"author":{"gitId":"Jellybeano"},"content":"            if (indexToTag \u003e\u003d taskList.size()) {"},{"lineNumber":210,"author":{"gitId":"Jellybeano"},"content":"                return ui.errorMessage(\"invalidIndex\");"},{"lineNumber":211,"author":{"gitId":"Jellybeano"},"content":"            }"},{"lineNumber":212,"author":{"gitId":"Jellybeano"},"content":"            Task toTag \u003d taskList.get(Integer.parseInt(split[1]) - 1);"},{"lineNumber":213,"author":{"gitId":"Jellybeano"},"content":"            if (split.length \u003c 3) {"},{"lineNumber":214,"author":{"gitId":"Jellybeano"},"content":"                return ui.errorMessage(\"badTag\");"},{"lineNumber":215,"author":{"gitId":"Jellybeano"},"content":"            }"},{"lineNumber":216,"author":{"gitId":"Jellybeano"},"content":"            String newTag \u003d split[2];"},{"lineNumber":217,"author":{"gitId":"Jellybeano"},"content":"            toTag.setTag(newTag);"},{"lineNumber":218,"author":{"gitId":"Jellybeano"},"content":"            return ui.setTag(toTag);"},{"lineNumber":219,"author":{"gitId":"Jellybeano"},"content":"        } catch (Exception e) {"},{"lineNumber":220,"author":{"gitId":"Jellybeano"},"content":"            return ui.errorMessage(\"badTag\");"},{"lineNumber":221,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":222,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":224,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":225,"author":{"gitId":"Jellybeano"},"content":"     * Returns the result of parsing a unknown input."},{"lineNumber":226,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":227,"author":{"gitId":"Jellybeano"},"content":"     * @return A reply to the user."},{"lineNumber":228,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":229,"author":{"gitId":"Jellybeano"},"content":"    private String errorCommand() {"},{"lineNumber":230,"author":{"gitId":"Jellybeano"},"content":"        return ui.errorMessage(\"unknownInput\");"},{"lineNumber":231,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":233,"author":{"gitId":"Jellybeano"},"content":"}"}],"authorContributionMap":{"Jellybeano":233}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"import java.nio.file.Files;"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"import java.nio.file.Path;"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"import java.nio.file.Paths;"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"     * The path of the storage file where the TaskList is stored."},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"    private String filePath;"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    public Storage(String filePath) {"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"     * Sets the appropriate tags onto the task given."},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"     * @param task The task to update tags."},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"     * @param tags The tags to be put onto the task."},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"    public void updateTags(Task task, String tags) {"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"        if (tags \u003d\u003d null || tags \u003d\u003d \"\") {"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"            return;"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"        String[] split \u003d tags.split(\"\\\\s+\");"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"        for (String s : split) {"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"            task.setTag(s);"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"     * Loads a TaskList from storage, if it exists."},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"     * Else creates a new storage file."},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"     * @return the TaskList stored on the hard disk."},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"    public TaskList load() {"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"        File taskData \u003d new File(filePath);"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"        TaskList leest \u003d new TaskList();"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"            Scanner s \u003d new Scanner(taskData);"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"            while (s.hasNext()) {"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"                String[] line \u003d s.nextLine().split(\" \\\\| \");"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"                switch (line[0]) {"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"                case \"T\":"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"                    leest.add(loadTask(line));"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"                    break;"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"                case \"D\":"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"                    leest.add(loadDeadline(line));"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"                    break;"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"                case \"E\":"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"                    leest.add(loadEvent(line));"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"                    break;"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"                default:"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"            try {"},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"                taskData.createNewFile();"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"            } catch (IOException f) {"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"                try {"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"                    Path path \u003d Paths.get(\"test/\");"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"                    Files.createDirectories(path);"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"                    taskData.createNewFile();"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"                } catch (IOException g) {"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"                    System.err.println(\"Failed to create directory uwu\");"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"        return leest;"},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"Jellybeano"},"content":"     * Loads a task from storage."},{"lineNumber":83,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"Jellybeano"},"content":"     * @param line The line representing a task stored in the Duke.txt file."},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"     * @return The line as a Task."},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"    private Task loadTask(String[] line) {"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":"        Task task \u003d new Task(line[2]);"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":"        if (line[1].equals(\"1\")) {"},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":"            task.setDone();"},{"lineNumber":91,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":"        if (line.length \u003e 3) {"},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":"            updateTags(task, line[3]);"},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":"        return task;"},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":98,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"Jellybeano"},"content":"     * Loads a deadline from storage."},{"lineNumber":100,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"Jellybeano"},"content":"     * @param line The line representing a deadline stored in the Duke.txt file."},{"lineNumber":102,"author":{"gitId":"Jellybeano"},"content":"     * @return The line as a Deadline."},{"lineNumber":103,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"Jellybeano"},"content":"    private Deadline loadDeadline(String[] line) {"},{"lineNumber":105,"author":{"gitId":"Jellybeano"},"content":"        Deadline deadline \u003d new Deadline(line[2], line[3]);"},{"lineNumber":106,"author":{"gitId":"Jellybeano"},"content":"        if (line[1].equals(\"1\")) {"},{"lineNumber":107,"author":{"gitId":"Jellybeano"},"content":"            deadline.setDone();"},{"lineNumber":108,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"Jellybeano"},"content":"        if (line.length \u003e 4) {"},{"lineNumber":110,"author":{"gitId":"Jellybeano"},"content":"            updateTags(deadline, line[4]);"},{"lineNumber":111,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"Jellybeano"},"content":"        return deadline;"},{"lineNumber":113,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":115,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"Jellybeano"},"content":"     * Loads a event from storage."},{"lineNumber":117,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"Jellybeano"},"content":"     * @param line The line representing an event stored in the Duke.txt file."},{"lineNumber":119,"author":{"gitId":"Jellybeano"},"content":"     * @return The line as an Event."},{"lineNumber":120,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"Jellybeano"},"content":"    private Event loadEvent(String[] line) {"},{"lineNumber":122,"author":{"gitId":"Jellybeano"},"content":"        Event event \u003d new Event(line[2], line[3]);"},{"lineNumber":123,"author":{"gitId":"Jellybeano"},"content":"        if (line[1].equals(\"1\")) {"},{"lineNumber":124,"author":{"gitId":"Jellybeano"},"content":"            event.setDone();"},{"lineNumber":125,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"Jellybeano"},"content":"        if (line.length \u003e 4) {"},{"lineNumber":127,"author":{"gitId":"Jellybeano"},"content":"            updateTags(event, line[4]);"},{"lineNumber":128,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"Jellybeano"},"content":"        return event;"},{"lineNumber":130,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":132,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"Jellybeano"},"content":"     * Writes the task to a file, erasing any previous data."},{"lineNumber":134,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"Jellybeano"},"content":"     * @param filePath  The storage file to be written to."},{"lineNumber":136,"author":{"gitId":"Jellybeano"},"content":"     * @param textToAdd The data to be written."},{"lineNumber":137,"author":{"gitId":"Jellybeano"},"content":"     * @throws IOException If the file does not exist."},{"lineNumber":138,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"Jellybeano"},"content":"    private void writeToFile(String filePath, String textToAdd) throws IOException {"},{"lineNumber":140,"author":{"gitId":"Jellybeano"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":141,"author":{"gitId":"Jellybeano"},"content":"        fw.write(textToAdd + \"\\n\");"},{"lineNumber":142,"author":{"gitId":"Jellybeano"},"content":"        fw.close();"},{"lineNumber":143,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":145,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"Jellybeano"},"content":"     * Appends the task to a file."},{"lineNumber":147,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":148,"author":{"gitId":"Jellybeano"},"content":"     * @param filePath  The storage file to be written to."},{"lineNumber":149,"author":{"gitId":"Jellybeano"},"content":"     * @param textToAdd The data to be written."},{"lineNumber":150,"author":{"gitId":"Jellybeano"},"content":"     * @throws IOException If the file does not exist."},{"lineNumber":151,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"Jellybeano"},"content":"    private void appendToFile(String filePath, String textToAdd) throws IOException {"},{"lineNumber":153,"author":{"gitId":"Jellybeano"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);"},{"lineNumber":154,"author":{"gitId":"Jellybeano"},"content":"        fw.write(textToAdd + \"\\n\");"},{"lineNumber":155,"author":{"gitId":"Jellybeano"},"content":"        fw.close();"},{"lineNumber":156,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":158,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":159,"author":{"gitId":"Jellybeano"},"content":"     * Saves the given TaskList to a file."},{"lineNumber":160,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":161,"author":{"gitId":"Jellybeano"},"content":"     * @param l The TaskList to be saved."},{"lineNumber":162,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"Jellybeano"},"content":"    public void saveAsFile(TaskList l) {"},{"lineNumber":164,"author":{"gitId":"Jellybeano"},"content":"        boolean isFirst \u003d true;"},{"lineNumber":165,"author":{"gitId":"Jellybeano"},"content":"        if (l.isEmpty()) {"},{"lineNumber":166,"author":{"gitId":"Jellybeano"},"content":"            try {"},{"lineNumber":167,"author":{"gitId":"Jellybeano"},"content":"                writeToFile(filePath, \" \");"},{"lineNumber":168,"author":{"gitId":"Jellybeano"},"content":"            } catch (IOException e) {"},{"lineNumber":169,"author":{"gitId":"Jellybeano"},"content":"                System.out.println(\"Something went wrong uwu: \" + e.getMessage());"},{"lineNumber":170,"author":{"gitId":"Jellybeano"},"content":"            }"},{"lineNumber":171,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"Jellybeano"},"content":"        for (Task t : l.getList()) {"},{"lineNumber":173,"author":{"gitId":"Jellybeano"},"content":"            try {"},{"lineNumber":174,"author":{"gitId":"Jellybeano"},"content":"                if (isFirst) {"},{"lineNumber":175,"author":{"gitId":"Jellybeano"},"content":"                    writeToFile(filePath, t.saveToData());"},{"lineNumber":176,"author":{"gitId":"Jellybeano"},"content":"                    isFirst \u003d false;"},{"lineNumber":177,"author":{"gitId":"Jellybeano"},"content":"                } else {"},{"lineNumber":178,"author":{"gitId":"Jellybeano"},"content":"                    appendToFile(filePath, t.saveToData());"},{"lineNumber":179,"author":{"gitId":"Jellybeano"},"content":"                }"},{"lineNumber":180,"author":{"gitId":"Jellybeano"},"content":"            } catch (IOException e) {"},{"lineNumber":181,"author":{"gitId":"Jellybeano"},"content":"                System.out.println(\"Something went wrong uwu: \" + e.getMessage());"},{"lineNumber":182,"author":{"gitId":"Jellybeano"},"content":"            }"},{"lineNumber":183,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":186,"author":{"gitId":"Jellybeano"},"content":"}"}],"authorContributionMap":{"Jellybeano":186}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"    protected String todo;"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"    protected boolean isDone;"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"    protected List\u003cString\u003e tags;"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"     * Instantiates a task."},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"     * @param s The name of the task to be added."},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"    public Task(String s) {"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"        this.todo \u003d s;"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"        this.isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"        this.tags \u003d new ArrayList\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"    public void setDone() {"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"        this.isDone \u003d true;"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"    public boolean getDone() {"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"        return this.isDone;"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"    public String getTodo() {"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"        return this.todo;"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"     * Returns a String form of the current Task to be saved onto the hard disk."},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"     * @return the Task as a String to be saved."},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"    public String saveToData() {"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"        if (this.isDone) {"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"            return (\"T | 1 | \" + todo + \" | \" + saveTags());"},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"        } else {"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"            return (\"T | 0 | \" + todo + \" | \" + saveTags());"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"     * Returns a nicely formatted String from the given LocalDateTime."},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"     * @param date Date to be formatted."},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"     * @return inputted date as a String."},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"    public String dateFormat(LocalDateTime date) {"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"        return (date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hhmm a\")));"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"    public void setTag(String tag) {"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"        this.tags.add(tag);"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"     * Returns the current tags as a String."},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"     * @return Current tags."},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"    protected String showTags() {"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"        String toReturn \u003d \"\";"},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"        for (String s : tags) {"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"            toReturn +\u003d (\"#\" + s + \" \");"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"        return toReturn;"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"     * Returns the current tags as a String to be saved."},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"     * @return A string to be saved in Duke.txt."},{"lineNumber":80,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":"    protected String saveTags() {"},{"lineNumber":82,"author":{"gitId":"Jellybeano"},"content":"        String toReturn \u003d \"\";"},{"lineNumber":83,"author":{"gitId":"Jellybeano"},"content":"        for (String s : tags) {"},{"lineNumber":84,"author":{"gitId":"Jellybeano"},"content":"            toReturn +\u003d (s + \" \");"},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":"        return toReturn;"},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":"    @Override"},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":"    public String toString() {"},{"lineNumber":91,"author":{"gitId":"Jellybeano"},"content":"        if (!this.isDone) {"},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":"            return (\"[T][ ] \" + todo + \" \" + showTags());"},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":"        } else {"},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":"            return (\"[T][X] \" + todo + \" \" + showTags());"},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":98,"author":{"gitId":"Jellybeano"},"content":"}"}],"authorContributionMap":{"Jellybeano":98}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"    private List\u003cTask\u003e taskList;"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"    public TaskList() {"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"    public void add(Task t) {"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"        this.taskList.add(t);"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"    public boolean isEmpty() {"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"        return this.taskList.isEmpty();"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"    public int size() {"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"        return this.taskList.size();"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"    public Task get(int i) {"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"        return this.taskList.get(i);"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"    public void remove(Task t) {"},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"        this.taskList.remove(t);"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"    public List\u003cTask\u003e getList() {"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"        return this.taskList;"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"}"}],"authorContributionMap":{"Jellybeano":38}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"    public Ui() {"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"     * Greets the user."},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"    public String greet() {"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"        return (\"Nyahello! I\u0027m Duwuke, your neighbourhood disgusting weeb bot!\\n\""},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"                + \"Visit https://jellybeano.github.io/ip/ for friendly user guide!\");"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"    public String showLoadingError() {"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"        return (\"Something went wrong with the storage loading uwu\");"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"    public String emptyListMessage() {"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"        return (\"OOPS!!! Your list is currently empty uwu.\");"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"    public String showTaskListSize(int listSize) {"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"        return (\"Now you have \" + listSize + \" task(s) in the list uwu\");"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":"     * Prints an error message as required."},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"     * @param s The error message to be printed."},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"    public String errorMessage(String s) {"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":"        switch (s) {"},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"        case \"unknownInput\":"},{"lineNumber":37,"author":{"gitId":"Jellybeano"},"content":"            return (\"GRR!!! Could you enter a proper input, kind sir? uwu.\");"},{"lineNumber":38,"author":{"gitId":"Jellybeano"},"content":"        case \"invalidDelete\":"},{"lineNumber":39,"author":{"gitId":"Jellybeano"},"content":"            return (\"GRR!!! Please indicate a valid task to delete uwu\");"},{"lineNumber":40,"author":{"gitId":"Jellybeano"},"content":"        case \"invalidEvent\":"},{"lineNumber":41,"author":{"gitId":"Jellybeano"},"content":"            return (\"GRR!!! Please define your event properly uwu.\");"},{"lineNumber":42,"author":{"gitId":"Jellybeano"},"content":"        case \"dateTimeError\":"},{"lineNumber":43,"author":{"gitId":"Jellybeano"},"content":"            return (\"GRR!!! Please define your todo date/time in the \""},{"lineNumber":44,"author":{"gitId":"Jellybeano"},"content":"                    + \"YYYY-MM-DD HH:MM format uwu.\");"},{"lineNumber":45,"author":{"gitId":"Jellybeano"},"content":"        case \"invalidDeadline\":"},{"lineNumber":46,"author":{"gitId":"Jellybeano"},"content":"            return (\"GRR!!! Please define your deadline properly uwu.\");"},{"lineNumber":47,"author":{"gitId":"Jellybeano"},"content":"        case \"invalidTodo\":"},{"lineNumber":48,"author":{"gitId":"Jellybeano"},"content":"            return (\"GRR!!! Please define your todo properly uwu.\");"},{"lineNumber":49,"author":{"gitId":"Jellybeano"},"content":"        case \"invalidDone\":"},{"lineNumber":50,"author":{"gitId":"Jellybeano"},"content":"            return (\"GRR!!! Please indicate a valid task to complete uwu.\");"},{"lineNumber":51,"author":{"gitId":"Jellybeano"},"content":"        case \"alreadyDone\":"},{"lineNumber":52,"author":{"gitId":"Jellybeano"},"content":"            return (\"GRR!!! That task is already done uwu.\");"},{"lineNumber":53,"author":{"gitId":"Jellybeano"},"content":"        case \"invalidIndex\":"},{"lineNumber":54,"author":{"gitId":"Jellybeano"},"content":"            return (\"GRR!!! Please indicate a valid index uwu.\");"},{"lineNumber":55,"author":{"gitId":"Jellybeano"},"content":"        case \"invalidFind\":"},{"lineNumber":56,"author":{"gitId":"Jellybeano"},"content":"            return (\"GRR!!! Please follow the find format properly uwu.\");"},{"lineNumber":57,"author":{"gitId":"Jellybeano"},"content":"        case \"badTag\":"},{"lineNumber":58,"author":{"gitId":"Jellybeano"},"content":"            return (\"GRR!!! Please provide a tag uwu.\");"},{"lineNumber":59,"author":{"gitId":"Jellybeano"},"content":"        case \"badFind\":"},{"lineNumber":60,"author":{"gitId":"Jellybeano"},"content":"            return (\"GRR!!! Are you finding things in the list or bugs in the code? uwu\");"},{"lineNumber":61,"author":{"gitId":"Jellybeano"},"content":"        case \"invalidBug\":"},{"lineNumber":62,"author":{"gitId":"Jellybeano"},"content":"            return (\"GRR!!! Please don\u0027t use weird characters like | uwu.\");"},{"lineNumber":63,"author":{"gitId":"Jellybeano"},"content":"        default:"},{"lineNumber":64,"author":{"gitId":"Jellybeano"},"content":"            return \"GRR!!! Something went really really wrong uwu.\";"},{"lineNumber":65,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":68,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"Jellybeano"},"content":"     * Returns String for when a task is deleted."},{"lineNumber":70,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"Jellybeano"},"content":"     * @param t"},{"lineNumber":72,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"Jellybeano"},"content":"    public String deleteTask(Task t) {"},{"lineNumber":74,"author":{"gitId":"Jellybeano"},"content":"        return (\"Noted. I\u0027ve removed this task uwu:\\n\" + t);"},{"lineNumber":75,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":77,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"Jellybeano"},"content":"     * Returns String for when a task is added."},{"lineNumber":79,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"Jellybeano"},"content":"     * @param t"},{"lineNumber":81,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"Jellybeano"},"content":"    public String taskAdded(Task t) {"},{"lineNumber":83,"author":{"gitId":"Jellybeano"},"content":"        return (\"Hai. I\u0027ve added this task:\\n\" + t);"},{"lineNumber":84,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":86,"author":{"gitId":"Jellybeano"},"content":"    public String byeBye() {"},{"lineNumber":87,"author":{"gitId":"Jellybeano"},"content":"        return (\"Bye, hope to see you again! uwu\");"},{"lineNumber":88,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":90,"author":{"gitId":"Jellybeano"},"content":"    public String setDone(Task t) {"},{"lineNumber":91,"author":{"gitId":"Jellybeano"},"content":"        return (\"Sugoi! I\u0027ve marked this task as done uwu:\\n\" + t);"},{"lineNumber":92,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":94,"author":{"gitId":"Jellybeano"},"content":"    public String setTag(Task t) {"},{"lineNumber":95,"author":{"gitId":"Jellybeano"},"content":"        return (\"I see! What an interesting tag uwu\\n\" + t);"},{"lineNumber":96,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":98,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"Jellybeano"},"content":"     * Prints the given TaskList in a user-friendly format."},{"lineNumber":100,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"Jellybeano"},"content":"     * @param tl The TaskList to be printed."},{"lineNumber":102,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"Jellybeano"},"content":"    public String showList(TaskList tl) {"},{"lineNumber":104,"author":{"gitId":"Jellybeano"},"content":"        String toReturn \u003d (\"Here are the tasks in your list uwu:\\n\");"},{"lineNumber":105,"author":{"gitId":"Jellybeano"},"content":"        int counter \u003d 1;"},{"lineNumber":106,"author":{"gitId":"Jellybeano"},"content":"        for (Task t : tl.getList()) {"},{"lineNumber":107,"author":{"gitId":"Jellybeano"},"content":"            toReturn +\u003d (counter + \". \" + t + \"\\n\");"},{"lineNumber":108,"author":{"gitId":"Jellybeano"},"content":"            counter++;"},{"lineNumber":109,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"Jellybeano"},"content":"        return toReturn;"},{"lineNumber":111,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":113,"author":{"gitId":"Jellybeano"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"Jellybeano"},"content":"     * Prints a \u0027no matching tasks\u0027 message if none are found."},{"lineNumber":115,"author":{"gitId":"Jellybeano"},"content":"     * Else prints the taks out."},{"lineNumber":116,"author":{"gitId":"Jellybeano"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"Jellybeano"},"content":"     * @param tl The tasklist to be printed."},{"lineNumber":118,"author":{"gitId":"Jellybeano"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"Jellybeano"},"content":"    public String showSearchList(TaskList tl) {"},{"lineNumber":120,"author":{"gitId":"Jellybeano"},"content":"        if (tl.isEmpty()) {"},{"lineNumber":121,"author":{"gitId":"Jellybeano"},"content":"            return (\"There are no matching tasks uwu. \""},{"lineNumber":122,"author":{"gitId":"Jellybeano"},"content":"                    + \"(just like how whoever wrote this has no friends.)\");"},{"lineNumber":123,"author":{"gitId":"Jellybeano"},"content":"        } else {"},{"lineNumber":124,"author":{"gitId":"Jellybeano"},"content":"            String toReturn \u003d (\"Here are the matching tasks in your list uwu: \\n\");"},{"lineNumber":125,"author":{"gitId":"Jellybeano"},"content":"            int counter \u003d 1;"},{"lineNumber":126,"author":{"gitId":"Jellybeano"},"content":"            for (Task t : tl.getList()) {"},{"lineNumber":127,"author":{"gitId":"Jellybeano"},"content":"                toReturn +\u003d (counter + \". \" + t + \"\\n\");"},{"lineNumber":128,"author":{"gitId":"Jellybeano"},"content":"                counter++;"},{"lineNumber":129,"author":{"gitId":"Jellybeano"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"Jellybeano"},"content":"            return toReturn;"},{"lineNumber":131,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":134,"author":{"gitId":"Jellybeano"},"content":"}"}],"authorContributionMap":{"Jellybeano":134}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Jellybeano":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Jellybeano":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":"public class DukeTest {"},{"lineNumber":9,"author":{"gitId":"Jellybeano"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"Jellybeano"},"content":"    public void dummyTest() {"},{"lineNumber":11,"author":{"gitId":"Jellybeano"},"content":"        assertEquals(2,2);"},{"lineNumber":12,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":14,"author":{"gitId":"Jellybeano"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"Jellybeano"},"content":"    public void eventCreation_properDate_success() {"},{"lineNumber":16,"author":{"gitId":"Jellybeano"},"content":"        assertEquals(new Event(\"Eat Breakfast\", \"2020-01-01\").toString(),"},{"lineNumber":17,"author":{"gitId":"Jellybeano"},"content":"                \"[E][ ] Eat Breakfast (at:Jan 1 2020 1200 AM)\");"},{"lineNumber":18,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":20,"author":{"gitId":"Jellybeano"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"Jellybeano"},"content":"    public void eventCreation_invalidDate_exceptionThrown() {"},{"lineNumber":22,"author":{"gitId":"Jellybeano"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"Jellybeano"},"content":"            assertEquals(\"[E][ ] Eat Breakfast  (at:Jan 1 2020 1800 PM)\","},{"lineNumber":24,"author":{"gitId":"Jellybeano"},"content":"                    new Event(\"Eat Breakfast\", \"tmr 6pm\").toString());"},{"lineNumber":25,"author":{"gitId":"Jellybeano"},"content":"            fail();"},{"lineNumber":26,"author":{"gitId":"Jellybeano"},"content":"        } catch (Exception e) {"},{"lineNumber":27,"author":{"gitId":"Jellybeano"},"content":"            assertEquals(\"Text \u0027tmr\u0027 could not be parsed at index 0\", e.getMessage());"},{"lineNumber":28,"author":{"gitId":"Jellybeano"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":31,"author":{"gitId":"Jellybeano"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"Jellybeano"},"content":"    public void taskList_emptyList_shouldBeEmpty() {"},{"lineNumber":33,"author":{"gitId":"Jellybeano"},"content":"        assertEquals( true, new TaskList().isEmpty());"},{"lineNumber":34,"author":{"gitId":"Jellybeano"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Jellybeano"},"content":""},{"lineNumber":36,"author":{"gitId":"Jellybeano"},"content":"}"}],"authorContributionMap":{"Jellybeano":36}},{"path":"test/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"T | 1 | _ | "}],"authorContributionMap":{"Jellybeano":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jellybeano"},"content":"todo watch anime"},{"lineNumber":2,"author":{"gitId":"Jellybeano"},"content":"deadline finish CS2103 project /by Thursday"},{"lineNumber":3,"author":{"gitId":"Jellybeano"},"content":"event Usada Pekora livestream /at Mon 2-4pm JST"},{"lineNumber":4,"author":{"gitId":"Jellybeano"},"content":"list"},{"lineNumber":5,"author":{"gitId":"Jellybeano"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"Jellybeano"},"content":"list"},{"lineNumber":7,"author":{"gitId":"Jellybeano"},"content":"bye"},{"lineNumber":8,"author":{"gitId":"Jellybeano"},"content":""}],"authorContributionMap":{"Jellybeano":8}}]
