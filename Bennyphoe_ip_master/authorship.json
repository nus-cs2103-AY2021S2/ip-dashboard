[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"    mainClassName \u003d \"mainclasses.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":45,"Bennyphoe":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature 1"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"Add Tasks:"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"* Todo"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"* Deadline"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"* Event"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"### Feature 2"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"List Tasks"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"### Feature 3"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"Set task as done"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"### Feature 4"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"Delete Task"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"### Feature 5"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"Find tasks with specific keyword"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"### Feature 6"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"Sort Tasks chronologically (Deadline only)"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"### Feature 7"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"Save Tasks"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"Describe action and its outcome."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"1) todo return book"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"2) list"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"1) Got it. I\u0027ve added this task:  "},{"lineNumber":45,"author":{"gitId":"Bennyphoe"},"content":"[T][ ] return book  "},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"Now you have 1 tasks in the list  "},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"   "},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"2) Here are the tasks in your list:  "},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":" 1.[T][ ] return book"}],"authorContributionMap":{"-":17,"Bennyphoe":33}},{"path":"src/main/java/Helper/SortByDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package Helper;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import mainclasses.Task;"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import java.util.Comparator;"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"public class SortByDateTime implements Comparator\u003cTask\u003e {"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"    public int compare(Task a, Task b)"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"    {"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"        if (a.getDate().compareTo(b.getDate()) \u003e 0) {"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"            return 1;"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"        } else if (a.getDate().compareTo(b.getDate()) \u003c 0) {"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"            return -1;"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"        } else {"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"            return a.getTime().compareTo(b.getTime());"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":20}},{"path":"src/main/java/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package controllers;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":" */"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Bennyphoe"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"Bennyphoe"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":56,"author":{"gitId":"Bennyphoe"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"Bennyphoe"},"content":"        DialogBox db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"Bennyphoe"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"Bennyphoe"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":61}},{"path":"src/main/java/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package controllers;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"import javafx.fxml.Initializable;"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"import mainclasses.Duke;"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"import java.net.URL;"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"import java.util.ResourceBundle;"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":" */"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"public class MainWindow extends AnchorPane implements Initializable {"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"    private TextField userInput;"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"    private Button sendButton;"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"    private Duke duke;"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserImage.png\"));"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeImage.png\"));"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"    public void initialize() {"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"        duke \u003d d;"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":45,"author":{"gitId":"Bennyphoe"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"    @FXML"},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"    private void handleUserInput() {"},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":51,"author":{"gitId":"Bennyphoe"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":53,"author":{"gitId":"Bennyphoe"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":"        );"},{"lineNumber":55,"author":{"gitId":"Bennyphoe"},"content":"        userInput.clear();"},{"lineNumber":56,"author":{"gitId":"Bennyphoe"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":57,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":59,"author":{"gitId":"Bennyphoe"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"Bennyphoe"},"content":"    public void initialize(URL location, ResourceBundle resources) {"},{"lineNumber":61,"author":{"gitId":"Bennyphoe"},"content":"        String initialResponse \u003d \"Hello! I\u0027m Benny \\n\" + \"What can I do for you?\";"},{"lineNumber":62,"author":{"gitId":"Bennyphoe"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(initialResponse, dukeImage));"},{"lineNumber":63,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":64}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"        super(errorMessage);"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":7}},{"path":"src/main/java/mainclasses/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package mainclasses;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import java.util.Date;"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"    public Deadline(String description, LocalDate deadline, LocalTime time) {"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"        this.date \u003d deadline;"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"        this.type \u003d TaskEnum.D;"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"        this.time \u003d time;"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"    public String getDescription() {"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"K:mm a\");"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"        return this.description + \" (by: \" + this.date.format(dateFormatter) + \" \" + this.time.format(timeFormatter) + \")\";"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":25}},{"path":"src/main/java/mainclasses/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package mainclasses;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"    private Ui ui;"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"    private TaskList taskList;"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"    private Storage storage;"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"    private Parser parser;"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"    public Duke(String filePath) {"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"        this.storage \u003d new Storage(filePath);"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"        storage.loadFile(filePath);"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"        this.taskList \u003d new TaskList(storage.initialiseStorage(file));"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"        this.parser \u003d new Parser(this.taskList, storage);"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"        this.ui \u003d new Ui(parser);"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"    public String getResponse(String input) {"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"        return this.ui.executeInput(input);"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"    public String getInitialGreeting() {"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"        return this.ui.initialStatements();"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":32,"-":1}},{"path":"src/main/java/mainclasses/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package mainclasses;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"public class Event extends Task{"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"    public Event(String description, LocalDate eventDate, LocalTime eventTime) {"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"        this.date \u003d eventDate;"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"        this.type \u003d TaskEnum.E;"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"        this.time \u003d eventTime;"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"    public String getDescription() {"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"K:mm a\");"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"        return this.description + \" (at: \" + this.date.format(dateFormatter) + \" \" + this.time.format(timeFormatter) + \")\";"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":25}},{"path":"src/main/java/mainclasses/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package mainclasses;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":10}},{"path":"src/main/java/mainclasses/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package mainclasses;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import controllers.MainWindow;"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"    private Duke duke \u003d new Duke(\"./data/tasks.txt\");"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"            stage.setTitle(\"BennyList\");"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":33}},{"path":"src/main/java/mainclasses/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package mainclasses;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"    private TaskList taskList;"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"    public Parser(TaskList taskList, Storage storage) {"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"        this.storage \u003d storage;"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"     * Returns a boolean if the user inputs \"bye\""},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"     * @param userInput takes in user input as a String"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"     * @return a boolean to indicate whether user wants to quit the application"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"    public String determineAction(String userInput) {"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"        List\u003cTask\u003e tasks \u003d this.taskList.getNewStorage();"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"        String[] inputBreakdown \u003d userInput.split(\" \");"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"        if (inputBreakdown[0].equals(\"bye\")) {"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"            storage.updateHardDrive(storage.getFilePath(), this.taskList);"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"            return (\"Bye. Hope to see you again!\");"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"        } else if (inputBreakdown[0].equals(\"list\")) {"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"            return taskList.listTask(tasks);"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"        } else if (inputBreakdown[0].equals(\"done\")) {"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"            int selectedIndex \u003d Integer.valueOf(inputBreakdown[1]) - 1;"},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":"            return taskList.setTaskAsDone(selectedIndex);"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"        } else if (inputBreakdown[0].equals(\"delete\")) {"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"            return taskList.deleteTask(userInput);"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"        } else if (inputBreakdown[0].equals(\"find\")) {"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"            return taskList.findTasksWithKeyword(inputBreakdown[1]);"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"        } else if (inputBreakdown[0].equals(\"sort\")) {"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"            return taskList.sortTask(inputBreakdown[1], inputBreakdown[2]);"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"            return taskList.addTask(userInput);"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"     * Validate user inputs and throws an exception if user input is invalid"},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"     * @param userInput takes in user input as a String"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":"     * @throws DukeException Exception that contains error message"},{"lineNumber":51,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"    public void checkInput (String userInput) throws DukeException {"},{"lineNumber":53,"author":{"gitId":"Bennyphoe"},"content":"        String[] input \u003d userInput.split(\" \");"},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":"        List\u003cString\u003e possibleActionInputs \u003d new ArrayList\u003c\u003e();"},{"lineNumber":55,"author":{"gitId":"Bennyphoe"},"content":"        List\u003cString\u003e possibleSingleInputs \u003d new ArrayList\u003c\u003e();"},{"lineNumber":56,"author":{"gitId":"Bennyphoe"},"content":"        List\u003cString\u003e possibleTaskInputs \u003d new ArrayList\u003c\u003e();"},{"lineNumber":57,"author":{"gitId":"Bennyphoe"},"content":"        List\u003cString\u003e possibleSortInputs \u003d new ArrayList\u003c\u003e();"},{"lineNumber":58,"author":{"gitId":"Bennyphoe"},"content":"        possibleActionInputs.add(\"done\");"},{"lineNumber":59,"author":{"gitId":"Bennyphoe"},"content":"        possibleActionInputs.add(\"delete\");"},{"lineNumber":60,"author":{"gitId":"Bennyphoe"},"content":"        possibleSortInputs.add(\"find\");"},{"lineNumber":61,"author":{"gitId":"Bennyphoe"},"content":"        possibleSortInputs.add(\"sort\");"},{"lineNumber":62,"author":{"gitId":"Bennyphoe"},"content":"        possibleSingleInputs.add(\"bye\");"},{"lineNumber":63,"author":{"gitId":"Bennyphoe"},"content":"        possibleTaskInputs.add(\"todo\");"},{"lineNumber":64,"author":{"gitId":"Bennyphoe"},"content":"        possibleTaskInputs.add(\"event\");"},{"lineNumber":65,"author":{"gitId":"Bennyphoe"},"content":"        possibleTaskInputs.add(\"deadline\");"},{"lineNumber":66,"author":{"gitId":"Bennyphoe"},"content":"        possibleSingleInputs.add(\"list\");"},{"lineNumber":67,"author":{"gitId":"Bennyphoe"},"content":"        boolean isUnrecognisedInput \u003d !possibleActionInputs.contains(input[0]) \u0026\u0026 !possibleSingleInputs.contains(input[0])"},{"lineNumber":68,"author":{"gitId":"Bennyphoe"},"content":"                \u0026\u0026 !possibleTaskInputs.contains(input[0]) \u0026\u0026 !possibleSortInputs.contains(input[0]);"},{"lineNumber":69,"author":{"gitId":"Bennyphoe"},"content":"        boolean hasNoDescription \u003d (possibleTaskInputs.contains(input[0]) || possibleActionInputs.contains(input[0]))"},{"lineNumber":70,"author":{"gitId":"Bennyphoe"},"content":"                \u0026\u0026 input.length \u003d\u003d 1;"},{"lineNumber":71,"author":{"gitId":"Bennyphoe"},"content":"        boolean hasDescriptionForSingleAction \u003d possibleSingleInputs.contains(input[0]) \u0026\u0026 input.length \u003e 1;"},{"lineNumber":72,"author":{"gitId":"Bennyphoe"},"content":"        if (isUnrecognisedInput) {"},{"lineNumber":73,"author":{"gitId":"Bennyphoe"},"content":"            throw new DukeException(\"user action is not recognised!\");"},{"lineNumber":74,"author":{"gitId":"Bennyphoe"},"content":"        } else if (hasNoDescription) {"},{"lineNumber":75,"author":{"gitId":"Bennyphoe"},"content":"            throw new DukeException(\"no description added!\");"},{"lineNumber":76,"author":{"gitId":"Bennyphoe"},"content":"        } else if (hasDescriptionForSingleAction) {"},{"lineNumber":77,"author":{"gitId":"Bennyphoe"},"content":"            throw new DukeException(\"no description should be added for this command!\");"},{"lineNumber":78,"author":{"gitId":"Bennyphoe"},"content":"        } else if (possibleTaskInputs.contains(input[0])) {"},{"lineNumber":79,"author":{"gitId":"Bennyphoe"},"content":"            switch(input[0]) {"},{"lineNumber":80,"author":{"gitId":"Bennyphoe"},"content":"            case \"deadline\":"},{"lineNumber":81,"author":{"gitId":"Bennyphoe"},"content":"                if (!userInput.contains(\"/by\")) {"},{"lineNumber":82,"author":{"gitId":"Bennyphoe"},"content":"                    throw new DukeException(\"Deadline entries must have a /by phrase!\");"},{"lineNumber":83,"author":{"gitId":"Bennyphoe"},"content":"                } else {"},{"lineNumber":84,"author":{"gitId":"Bennyphoe"},"content":"                    break;"},{"lineNumber":85,"author":{"gitId":"Bennyphoe"},"content":"                }"},{"lineNumber":86,"author":{"gitId":"Bennyphoe"},"content":"            case \"event\":"},{"lineNumber":87,"author":{"gitId":"Bennyphoe"},"content":"                if (!userInput.contains(\"/at\")) {"},{"lineNumber":88,"author":{"gitId":"Bennyphoe"},"content":"                    throw new DukeException(\"Event entries must have a /at phrase!\");"},{"lineNumber":89,"author":{"gitId":"Bennyphoe"},"content":"                } else {"},{"lineNumber":90,"author":{"gitId":"Bennyphoe"},"content":"                    break;"},{"lineNumber":91,"author":{"gitId":"Bennyphoe"},"content":"                }"},{"lineNumber":92,"author":{"gitId":"Bennyphoe"},"content":"            default:"},{"lineNumber":93,"author":{"gitId":"Bennyphoe"},"content":"                System.out.println(\"Todo entered by user!\");"},{"lineNumber":94,"author":{"gitId":"Bennyphoe"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"Bennyphoe"},"content":"        } else if (possibleActionInputs.contains(input[0])) {"},{"lineNumber":96,"author":{"gitId":"Bennyphoe"},"content":"            if (input.length \u003e 2) {"},{"lineNumber":97,"author":{"gitId":"Bennyphoe"},"content":"                throw new DukeException(\"enter a specific number\");"},{"lineNumber":98,"author":{"gitId":"Bennyphoe"},"content":"            } else {"},{"lineNumber":99,"author":{"gitId":"Bennyphoe"},"content":"                try {"},{"lineNumber":100,"author":{"gitId":"Bennyphoe"},"content":"                    int number \u003d Integer.parseInt(input[1]);"},{"lineNumber":101,"author":{"gitId":"Bennyphoe"},"content":"                    if (number \u003c 0 || number \u003e this.taskList.getNewStorage().size()) {"},{"lineNumber":102,"author":{"gitId":"Bennyphoe"},"content":"                        throw new DukeException(\"number entered does not match the list of tasks in list\");"},{"lineNumber":103,"author":{"gitId":"Bennyphoe"},"content":"                    }"},{"lineNumber":104,"author":{"gitId":"Bennyphoe"},"content":"                } catch (NumberFormatException ex) {"},{"lineNumber":105,"author":{"gitId":"Bennyphoe"},"content":"                    throw new DukeException(\"Enter a number!\");"},{"lineNumber":106,"author":{"gitId":"Bennyphoe"},"content":"                }"},{"lineNumber":107,"author":{"gitId":"Bennyphoe"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"Bennyphoe"},"content":"        } else if (possibleSortInputs.contains(input[0])) {"},{"lineNumber":109,"author":{"gitId":"Bennyphoe"},"content":"            if (input[0].equals(\"sort\")) {"},{"lineNumber":110,"author":{"gitId":"Bennyphoe"},"content":"                System.out.println(\"Sorting\");"},{"lineNumber":111,"author":{"gitId":"Bennyphoe"},"content":"            } else {"},{"lineNumber":112,"author":{"gitId":"Bennyphoe"},"content":"                if (input.length \u003e 2) {"},{"lineNumber":113,"author":{"gitId":"Bennyphoe"},"content":"                    throw new DukeException(\"You can only search by a single word!\");"},{"lineNumber":114,"author":{"gitId":"Bennyphoe"},"content":"                }"},{"lineNumber":115,"author":{"gitId":"Bennyphoe"},"content":"                try {"},{"lineNumber":116,"author":{"gitId":"Bennyphoe"},"content":"                    int number \u003d Integer.parseInt(input[1]);"},{"lineNumber":117,"author":{"gitId":"Bennyphoe"},"content":"                    throw new DukeException(\"A number should not be entered for find\");"},{"lineNumber":118,"author":{"gitId":"Bennyphoe"},"content":"                } catch (NumberFormatException ex) { //If the code comes here means the userInput is not a number which is correct"},{"lineNumber":119,"author":{"gitId":"Bennyphoe"},"content":"                    System.out.println(\"Finding...\");"},{"lineNumber":120,"author":{"gitId":"Bennyphoe"},"content":"                }"},{"lineNumber":121,"author":{"gitId":"Bennyphoe"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":123,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":126,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":127,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":127}},{"path":"src/main/java/mainclasses/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package mainclasses;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import java.io.*;"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"import java.time.LocalTime;"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"    private String filePath;"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"    public Storage() {"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"    public Storage(String filePath) {"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"     * Loads a file that is specified in String parameter. If the directory of the file"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"     * does not exist, the directory will be created. If the file itself does not exist"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"     * the file will be created"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"     * @param path an absolute pathway to where the file is located"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"    public void loadFile(String path) {"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"        int indexOfLastSlash \u003d path.lastIndexOf(\u0027/\u0027);"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"        String pathDirectory \u003d path.substring(0, indexOfLastSlash);"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"        loadDirectory(pathDirectory);"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"        File file \u003d new File(path);"},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"            file.createNewFile();"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"    private void loadDirectory(String path) {"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"        File file \u003d new File(path);"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"        if (!file.exists()) {"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"            file.mkdir();"},{"lineNumber":45,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"     * Reads a file provided in the parameter and returns a list of Tasks based on the input on the file"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":"     * @param file the file to be read from"},{"lineNumber":51,"author":{"gitId":"Bennyphoe"},"content":"     * @return a List of Task that is currently stored in the file"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"Bennyphoe"},"content":"    public List\u003cTask\u003e initialiseStorage(File file) {"},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":55,"author":{"gitId":"Bennyphoe"},"content":"        FileReader fileReader \u003d null;"},{"lineNumber":56,"author":{"gitId":"Bennyphoe"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"Bennyphoe"},"content":"            fileReader \u003d new FileReader(file);"},{"lineNumber":58,"author":{"gitId":"Bennyphoe"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"},{"lineNumber":59,"author":{"gitId":"Bennyphoe"},"content":"            while (true) {"},{"lineNumber":60,"author":{"gitId":"Bennyphoe"},"content":"                String value \u003d bufferedReader.readLine();"},{"lineNumber":61,"author":{"gitId":"Bennyphoe"},"content":"                if (value \u003d\u003d null) {"},{"lineNumber":62,"author":{"gitId":"Bennyphoe"},"content":"                    break;"},{"lineNumber":63,"author":{"gitId":"Bennyphoe"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"Bennyphoe"},"content":"                String[] values \u003d value.split(\" \\\\| \");"},{"lineNumber":65,"author":{"gitId":"Bennyphoe"},"content":"                String type \u003d values[0];"},{"lineNumber":66,"author":{"gitId":"Bennyphoe"},"content":"                String done \u003d values[1];"},{"lineNumber":67,"author":{"gitId":"Bennyphoe"},"content":"                String description \u003d values[2];"},{"lineNumber":68,"author":{"gitId":"Bennyphoe"},"content":"                String date \u003d null;"},{"lineNumber":69,"author":{"gitId":"Bennyphoe"},"content":"                if (values.length \u003d\u003d 4) {"},{"lineNumber":70,"author":{"gitId":"Bennyphoe"},"content":"                    date \u003d values[3];"},{"lineNumber":71,"author":{"gitId":"Bennyphoe"},"content":"                } else {"},{"lineNumber":72,"author":{"gitId":"Bennyphoe"},"content":"                    date \u003d null;"},{"lineNumber":73,"author":{"gitId":"Bennyphoe"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"Bennyphoe"},"content":"                Task task \u003d setUpTask(type, done, description, date);"},{"lineNumber":75,"author":{"gitId":"Bennyphoe"},"content":"                list.add(task);"},{"lineNumber":76,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":77,"author":{"gitId":"Bennyphoe"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"Bennyphoe"},"content":"            bufferedReader.close();"},{"lineNumber":79,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":80,"author":{"gitId":"Bennyphoe"},"content":"        } catch (IOException e) {"},{"lineNumber":81,"author":{"gitId":"Bennyphoe"},"content":"            e.printStackTrace();"},{"lineNumber":82,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"Bennyphoe"},"content":"        return list;"},{"lineNumber":84,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":85,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":87,"author":{"gitId":"Bennyphoe"},"content":"    private Task setUpTask(String type, String done, String description, String dateString) {"},{"lineNumber":88,"author":{"gitId":"Bennyphoe"},"content":"        LocalDate date \u003d LocalDate.of(0, 1, 1);"},{"lineNumber":89,"author":{"gitId":"Bennyphoe"},"content":"        LocalTime time \u003d LocalTime.of(0, 0, 0);"},{"lineNumber":90,"author":{"gitId":"Bennyphoe"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":91,"author":{"gitId":"Bennyphoe"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"H:mm\");"},{"lineNumber":92,"author":{"gitId":"Bennyphoe"},"content":"        if (dateString !\u003d null) {"},{"lineNumber":93,"author":{"gitId":"Bennyphoe"},"content":"            String[] dateTime \u003d dateString.split(\" \");"},{"lineNumber":94,"author":{"gitId":"Bennyphoe"},"content":"            date \u003d LocalDate.parse(dateTime[0], dateFormatter);"},{"lineNumber":95,"author":{"gitId":"Bennyphoe"},"content":"            time \u003d LocalTime.parse(dateTime[1], timeFormatter);"},{"lineNumber":96,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":98,"author":{"gitId":"Bennyphoe"},"content":"        Task task \u003d new Task();"},{"lineNumber":99,"author":{"gitId":"Bennyphoe"},"content":"        switch (type) {"},{"lineNumber":100,"author":{"gitId":"Bennyphoe"},"content":"        case \"T\":"},{"lineNumber":101,"author":{"gitId":"Bennyphoe"},"content":"            task \u003d new Todo(description);"},{"lineNumber":102,"author":{"gitId":"Bennyphoe"},"content":"            break;"},{"lineNumber":103,"author":{"gitId":"Bennyphoe"},"content":"        case \"E\":"},{"lineNumber":104,"author":{"gitId":"Bennyphoe"},"content":"            task \u003d new Event(description, date, time);"},{"lineNumber":105,"author":{"gitId":"Bennyphoe"},"content":"            break;"},{"lineNumber":106,"author":{"gitId":"Bennyphoe"},"content":"        case \"D\":"},{"lineNumber":107,"author":{"gitId":"Bennyphoe"},"content":"            task \u003d new Deadline(description, date, time);"},{"lineNumber":108,"author":{"gitId":"Bennyphoe"},"content":"            break;"},{"lineNumber":109,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":111,"author":{"gitId":"Bennyphoe"},"content":"        if (done.equals(\"1\")) {"},{"lineNumber":112,"author":{"gitId":"Bennyphoe"},"content":"            task.setDone(true);"},{"lineNumber":113,"author":{"gitId":"Bennyphoe"},"content":"        } else {"},{"lineNumber":114,"author":{"gitId":"Bennyphoe"},"content":"            assert(done.equals(\"0\"));"},{"lineNumber":115,"author":{"gitId":"Bennyphoe"},"content":"            task.setDone(false);"},{"lineNumber":116,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":118,"author":{"gitId":"Bennyphoe"},"content":"        return task;"},{"lineNumber":119,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":121,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"Bennyphoe"},"content":"     * updates the hard drive with the updated list of Task whenever the user exits the program"},{"lineNumber":123,"author":{"gitId":"Bennyphoe"},"content":"     * @param fileName the path directory of the file"},{"lineNumber":124,"author":{"gitId":"Bennyphoe"},"content":"     * @param taskList the updated List of task"},{"lineNumber":125,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"Bennyphoe"},"content":"    public void updateHardDrive(String fileName, TaskList taskList) {"},{"lineNumber":127,"author":{"gitId":"Bennyphoe"},"content":"        try {"},{"lineNumber":128,"author":{"gitId":"Bennyphoe"},"content":"            Files.delete(Paths.get(fileName));"},{"lineNumber":129,"author":{"gitId":"Bennyphoe"},"content":"            loadFile(fileName);"},{"lineNumber":130,"author":{"gitId":"Bennyphoe"},"content":"            FileWriter fileWriter \u003d new FileWriter(fileName);"},{"lineNumber":131,"author":{"gitId":"Bennyphoe"},"content":"            for (int i \u003d 0; i \u003c taskList.getNewStorage().size(); i++) {"},{"lineNumber":132,"author":{"gitId":"Bennyphoe"},"content":"                fileWriter.write(printInHardDrive(taskList.getNewStorage().get(i)));"},{"lineNumber":133,"author":{"gitId":"Bennyphoe"},"content":"            }"},{"lineNumber":134,"author":{"gitId":"Bennyphoe"},"content":"            fileWriter.close();"},{"lineNumber":135,"author":{"gitId":"Bennyphoe"},"content":"        } catch (IOException ex) {"},{"lineNumber":136,"author":{"gitId":"Bennyphoe"},"content":"            ex.printStackTrace();"},{"lineNumber":137,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":140,"author":{"gitId":"Bennyphoe"},"content":"    private String printInHardDrive(Task task) {"},{"lineNumber":141,"author":{"gitId":"Bennyphoe"},"content":"        assert(task !\u003d null);"},{"lineNumber":142,"author":{"gitId":"Bennyphoe"},"content":"        if (task.getDate() !\u003d null || task.getTime() !\u003d null) {"},{"lineNumber":143,"author":{"gitId":"Bennyphoe"},"content":"            if (task.getDone()) {"},{"lineNumber":144,"author":{"gitId":"Bennyphoe"},"content":"                return task.getType() + \" | 1 | \" + task.getOnlyDescription() + \" | \" + task.getDate() + \" \" + task.getTime() + \"\\n\";"},{"lineNumber":145,"author":{"gitId":"Bennyphoe"},"content":"            } else {"},{"lineNumber":146,"author":{"gitId":"Bennyphoe"},"content":"                return task.getType() + \" | 0 | \" + task.getOnlyDescription() + \" | \" + task.getDate() + \" \" + task.getTime() + \"\\n\";"},{"lineNumber":147,"author":{"gitId":"Bennyphoe"},"content":"            }"},{"lineNumber":148,"author":{"gitId":"Bennyphoe"},"content":"        } else {"},{"lineNumber":149,"author":{"gitId":"Bennyphoe"},"content":"            if (task.getDone()) {"},{"lineNumber":150,"author":{"gitId":"Bennyphoe"},"content":"                return task.getType() + \" | 1 | \" + task.getDescription() + \"\\n\";"},{"lineNumber":151,"author":{"gitId":"Bennyphoe"},"content":"            } else {"},{"lineNumber":152,"author":{"gitId":"Bennyphoe"},"content":"                return task.getType() + \" | 0 | \" + task.getDescription() + \"\\n\";"},{"lineNumber":153,"author":{"gitId":"Bennyphoe"},"content":"            }"},{"lineNumber":154,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":157,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"Bennyphoe"},"content":"     * Returns the file path stored in Storage instance"},{"lineNumber":159,"author":{"gitId":"Bennyphoe"},"content":"     * @return the file path stored in Storage"},{"lineNumber":160,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":161,"author":{"gitId":"Bennyphoe"},"content":"    public String getFilePath() {"},{"lineNumber":162,"author":{"gitId":"Bennyphoe"},"content":"        return filePath;"},{"lineNumber":163,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":165,"author":{"gitId":"Bennyphoe"},"content":"    public void setFilePath(String filePath) {"},{"lineNumber":166,"author":{"gitId":"Bennyphoe"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":167,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":168}},{"path":"src/main/java/mainclasses/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package mainclasses;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"    protected boolean done;"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"    protected TaskEnum type;"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"    protected LocalDate date;"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"    protected LocalTime time;"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"    public Task() {"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"    public Task(String input) {"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"        this.description \u003d input;"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"        done \u003d false;"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"    public String getDescription() {"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"        return this.description;"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"    protected String getOnlyDescription() {"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"        return this.description;"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"    public boolean getDone() {"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"        return this.done;"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"    public void setDone(boolean set) {"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"        this.done \u003d set;"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"    public void setDescription(String description) {"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"        this.description \u003d description;"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"    public boolean isDone() {"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"        return done;"},{"lineNumber":45,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"    public TaskEnum getType() {"},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"        return type;"},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":51,"author":{"gitId":"Bennyphoe"},"content":"    public void setType(TaskEnum type) {"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":"        this.type \u003d type;"},{"lineNumber":53,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":55,"author":{"gitId":"Bennyphoe"},"content":"    public LocalDate getDate() {"},{"lineNumber":56,"author":{"gitId":"Bennyphoe"},"content":"        return date;"},{"lineNumber":57,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":59,"author":{"gitId":"Bennyphoe"},"content":"    public void setDate(LocalDate date) {"},{"lineNumber":60,"author":{"gitId":"Bennyphoe"},"content":"        this.date \u003d date;"},{"lineNumber":61,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":63,"author":{"gitId":"Bennyphoe"},"content":"    public LocalTime getTime() {"},{"lineNumber":64,"author":{"gitId":"Bennyphoe"},"content":"        return time;"},{"lineNumber":65,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":67,"author":{"gitId":"Bennyphoe"},"content":"    public void setTime(LocalTime time) {"},{"lineNumber":68,"author":{"gitId":"Bennyphoe"},"content":"        this.time \u003d time;"},{"lineNumber":69,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":70}},{"path":"src/main/java/mainclasses/TaskEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package mainclasses;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"public enum TaskEnum {"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"    T,"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"    D,"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"    E"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":7}},{"path":"src/main/java/mainclasses/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package mainclasses;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import Helper.SortByDateTime;"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"import java.util.Collections;"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"public class TaskList {"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"    private List\u003cTask\u003e newStorage;"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"    public TaskList(List\u003cTask\u003e initialisedStorage) {"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"        this.newStorage \u003d initialisedStorage;"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"     * Prints the task in a list format, includes description, task type and whether task is completed"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"     * @param num int index of task in the list"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"     * @param task the task to be printed out"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"    public String printTask(int num, Task task) {"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"        if (task.getDone()) {"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"            return num + 1 + \".\" + \"[\" + task.type + \"]\" + \"[X] \" + this.newStorage.get(num).getDescription();"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"            return num + 1 + \".\" + \"[\" + task.type + \"]\" + \"[ ] \" + this.newStorage.get(num).getDescription();"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":"    public String printTaskFromExternalList(List\u003cTask\u003e tasks) {"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"        String newString \u003d \"\";"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"            if (tasks.get(i).getDone()) {"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"                newString +\u003d i + 1 + \".\" + \"[\" + tasks.get(i).type + \"]\" + \"[X] \" + tasks.get(i).getDescription() + \"\\n\";"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"            } else {"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"                newString +\u003d i + 1 + \".\" + \"[\" + tasks.get(i).type + \"]\" + \"[ ] \" + tasks.get(i).getDescription() + \"\\n\";"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"        return newString;"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"     * Prints the task which includes description, task type and whether task is completed"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"     * @param task the task to be printed out"},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"    public String printTaskWithNoNum(Task task) {"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":"        return \"[\" + task.type + \"]\" + \"[ ] \" + task.getDescription();"},{"lineNumber":51,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":53,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":"     * Adds a task to the list of task in storage"},{"lineNumber":55,"author":{"gitId":"Bennyphoe"},"content":"     * @param userInput the user input in text string format"},{"lineNumber":56,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"Bennyphoe"},"content":"    public String addTask(String userInput) {"},{"lineNumber":58,"author":{"gitId":"Bennyphoe"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"},{"lineNumber":59,"author":{"gitId":"Bennyphoe"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"Hmm\");"},{"lineNumber":60,"author":{"gitId":"Bennyphoe"},"content":"        Task task;"},{"lineNumber":61,"author":{"gitId":"Bennyphoe"},"content":"        String[] input \u003d userInput.split(\" \");"},{"lineNumber":62,"author":{"gitId":"Bennyphoe"},"content":"        if (input[0].equals(\"todo\")) {"},{"lineNumber":63,"author":{"gitId":"Bennyphoe"},"content":"            String description \u003d userInput.substring(userInput.indexOf(\"todo\") + 5);"},{"lineNumber":64,"author":{"gitId":"Bennyphoe"},"content":"            task \u003d new Todo(description);"},{"lineNumber":65,"author":{"gitId":"Bennyphoe"},"content":"        } else if (input[0].equals(\"deadline\")) {"},{"lineNumber":66,"author":{"gitId":"Bennyphoe"},"content":"            String description \u003d userInput.substring(userInput.indexOf(\"deadline\") + 9, userInput.indexOf(\"/by\") - 1);"},{"lineNumber":67,"author":{"gitId":"Bennyphoe"},"content":"            String deadlineDate \u003d userInput.substring(userInput.indexOf(\"/by\") + 4, userInput.indexOf(\"/by\") + 14);"},{"lineNumber":68,"author":{"gitId":"Bennyphoe"},"content":"            LocalDate date \u003d LocalDate.parse(deadlineDate, formatter);"},{"lineNumber":69,"author":{"gitId":"Bennyphoe"},"content":"            String deadLineTime \u003d userInput.substring(userInput.indexOf(\"/by\") + 15);"},{"lineNumber":70,"author":{"gitId":"Bennyphoe"},"content":"            LocalTime time \u003d LocalTime.parse(deadLineTime, timeFormatter);"},{"lineNumber":71,"author":{"gitId":"Bennyphoe"},"content":"            task \u003d new Deadline(description, date, time);"},{"lineNumber":72,"author":{"gitId":"Bennyphoe"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"Bennyphoe"},"content":"            String description \u003d userInput.substring(userInput.indexOf(\"event\") + 6, userInput.indexOf(\"/at\") - 1);"},{"lineNumber":74,"author":{"gitId":"Bennyphoe"},"content":"            String eventDate \u003d userInput.substring(userInput.indexOf(\"/at\") + 4, userInput.indexOf(\"/at\") + 14);"},{"lineNumber":75,"author":{"gitId":"Bennyphoe"},"content":"            LocalDate date \u003d LocalDate.parse(eventDate, formatter);"},{"lineNumber":76,"author":{"gitId":"Bennyphoe"},"content":"            String eventTime \u003d userInput.substring(userInput.indexOf(\"/at\") + 15);"},{"lineNumber":77,"author":{"gitId":"Bennyphoe"},"content":"            LocalTime time \u003d LocalTime.parse(eventTime, timeFormatter);"},{"lineNumber":78,"author":{"gitId":"Bennyphoe"},"content":"            task \u003d new Event(description, date, time);"},{"lineNumber":79,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"Bennyphoe"},"content":"        newStorage.add(task);"},{"lineNumber":81,"author":{"gitId":"Bennyphoe"},"content":"        return (\"Got it. I\u0027ve added this task: \\n\") + printTaskWithNoNum(task) + \"\\n\""},{"lineNumber":82,"author":{"gitId":"Bennyphoe"},"content":"                + (\"Now you have \" + this.newStorage.size() + \" tasks in the list.\");"},{"lineNumber":83,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":85,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"Bennyphoe"},"content":"     * List out of the task that are in the task list storage"},{"lineNumber":87,"author":{"gitId":"Bennyphoe"},"content":"     * @param tasks List of tasks"},{"lineNumber":88,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"Bennyphoe"},"content":"    public String listTask(List\u003cTask\u003e tasks) {"},{"lineNumber":90,"author":{"gitId":"Bennyphoe"},"content":"        String newListString \u003d \"\";"},{"lineNumber":91,"author":{"gitId":"Bennyphoe"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":92,"author":{"gitId":"Bennyphoe"},"content":"            newListString +\u003d (printTask(i, tasks.get(i)) + \"\\n\");"},{"lineNumber":93,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"Bennyphoe"},"content":"        return (\"Here are the tasks in your list: \\n\") + newListString;"},{"lineNumber":95,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":97,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"Bennyphoe"},"content":"     * Set a specific task as completed based on the index of task in task list storage"},{"lineNumber":99,"author":{"gitId":"Bennyphoe"},"content":"     * @param value int index of the task in list"},{"lineNumber":100,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"Bennyphoe"},"content":"    public String setTaskAsDone(int value) {"},{"lineNumber":102,"author":{"gitId":"Bennyphoe"},"content":"        this.newStorage.get(value).setDone(true);"},{"lineNumber":103,"author":{"gitId":"Bennyphoe"},"content":"        return (\"Nice! I\u0027ve marked this task as done: \\n\") + printTask(value, newStorage.get(value));"},{"lineNumber":104,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":106,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"Bennyphoe"},"content":"     * Deletes a task based on string input of user"},{"lineNumber":108,"author":{"gitId":"Bennyphoe"},"content":"     * @param userInput user input in string text"},{"lineNumber":109,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"Bennyphoe"},"content":"    public String deleteTask(String userInput) {"},{"lineNumber":111,"author":{"gitId":"Bennyphoe"},"content":"        String[] inputBreakdown \u003d userInput.split(\" \");"},{"lineNumber":112,"author":{"gitId":"Bennyphoe"},"content":"        int taskToBeDeleted \u003d Integer.valueOf(inputBreakdown[1]) - 1;"},{"lineNumber":113,"author":{"gitId":"Bennyphoe"},"content":"        Task task \u003d this.newStorage.get(taskToBeDeleted);"},{"lineNumber":114,"author":{"gitId":"Bennyphoe"},"content":"        this.newStorage.remove(taskToBeDeleted);"},{"lineNumber":115,"author":{"gitId":"Bennyphoe"},"content":"        return (\"Noted. I\u0027ve removed this task: \\n\") + printTaskWithNoNum(task) + \"\\n\""},{"lineNumber":116,"author":{"gitId":"Bennyphoe"},"content":"                + (\"Now you have \" + this.newStorage.size() + \" tasks in the list.\");"},{"lineNumber":117,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":119,"author":{"gitId":"Bennyphoe"},"content":"    public List\u003cTask\u003e getNewStorage() {"},{"lineNumber":120,"author":{"gitId":"Bennyphoe"},"content":"        return newStorage;"},{"lineNumber":121,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":123,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"Bennyphoe"},"content":"     * Finds Tasks which description contains a certain keyword"},{"lineNumber":125,"author":{"gitId":"Bennyphoe"},"content":"     * @param keyWord This is the keyword used to filter the list of tasks"},{"lineNumber":126,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"Bennyphoe"},"content":"    public String findTasksWithKeyword(String keyWord) {"},{"lineNumber":128,"author":{"gitId":"Bennyphoe"},"content":"        List\u003cTask\u003e tasks \u003d this.getNewStorage();"},{"lineNumber":129,"author":{"gitId":"Bennyphoe"},"content":"        String newStringLine \u003d \"Here are the matching tasks in your list:\" + \"\\n\";"},{"lineNumber":130,"author":{"gitId":"Bennyphoe"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":131,"author":{"gitId":"Bennyphoe"},"content":"            if (tasks.get(i).getDescription().contains(keyWord)) {"},{"lineNumber":132,"author":{"gitId":"Bennyphoe"},"content":"                newStringLine +\u003d (printTask(i, tasks.get(i)) + \"\\n\");"},{"lineNumber":133,"author":{"gitId":"Bennyphoe"},"content":"            }"},{"lineNumber":134,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"Bennyphoe"},"content":"        return newStringLine;"},{"lineNumber":136,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":138,"author":{"gitId":"Bennyphoe"},"content":"    public String sortTask(String taskType, String sortBy) {"},{"lineNumber":139,"author":{"gitId":"Bennyphoe"},"content":"        TaskEnum taskTypeEnum \u003d TaskEnum.valueOf(taskType);"},{"lineNumber":140,"author":{"gitId":"Bennyphoe"},"content":"        List\u003cTask\u003e tasksToBeSorted \u003d new ArrayList\u003c\u003e();"},{"lineNumber":141,"author":{"gitId":"Bennyphoe"},"content":"        for (Task task : this.getNewStorage()) {"},{"lineNumber":142,"author":{"gitId":"Bennyphoe"},"content":"            if (task.getType() \u003d\u003d taskTypeEnum) {"},{"lineNumber":143,"author":{"gitId":"Bennyphoe"},"content":"                tasksToBeSorted.add(task);"},{"lineNumber":144,"author":{"gitId":"Bennyphoe"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"Bennyphoe"},"content":"        String newStringLine \u003d \"Here are the tasks sorted by \" + sortBy + \"\\n\";"},{"lineNumber":147,"author":{"gitId":"Bennyphoe"},"content":"        if (sortBy.equals(\"date\")) {"},{"lineNumber":148,"author":{"gitId":"Bennyphoe"},"content":"            tasksToBeSorted \u003d sortByDateTime(tasksToBeSorted);"},{"lineNumber":149,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"Bennyphoe"},"content":"        newStringLine +\u003d printTaskFromExternalList(tasksToBeSorted);"},{"lineNumber":151,"author":{"gitId":"Bennyphoe"},"content":"        return newStringLine;"},{"lineNumber":152,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":154,"author":{"gitId":"Bennyphoe"},"content":"    private List\u003cTask\u003e sortByDateTime(List\u003cTask\u003e tasks) {"},{"lineNumber":155,"author":{"gitId":"Bennyphoe"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":156,"author":{"gitId":"Bennyphoe"},"content":"        Collections.sort(tasks, new SortByDateTime());"},{"lineNumber":157,"author":{"gitId":"Bennyphoe"},"content":"        taskList \u003d tasks;"},{"lineNumber":158,"author":{"gitId":"Bennyphoe"},"content":"        return taskList;"},{"lineNumber":159,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":161,"author":{"gitId":"Bennyphoe"},"content":"    public void setNewStorage(List\u003cTask\u003e newStorage) {"},{"lineNumber":162,"author":{"gitId":"Bennyphoe"},"content":"        this.newStorage \u003d newStorage;"},{"lineNumber":163,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":164}},{"path":"src/main/java/mainclasses/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package mainclasses;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"    public Todo(String input) {"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"        super(input);"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"        this.type \u003d TaskEnum.T;"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"        this.date \u003d null;"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"        this.time \u003d null;"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"    public String getDescription() {"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"        return this.description;"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":16}},{"path":"src/main/java/mainclasses/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"package mainclasses;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"public class Ui {"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"    private Scanner sc;"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"    private Parser parser;"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"     * UI class"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"     * @param parser"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"    public Ui(Parser parser) {"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"        this.parser \u003d parser;"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"     * Allows user to enter string text into the command line"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"    public String executeInput(String userInput) {"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"        String output \u003d \"\";"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":"            parser.checkInput(userInput);"},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"            output \u003d parser.determineAction(userInput);"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"        } catch (DukeException ex) {"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"            System.out.println(ex.getMessage());"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"        return output;"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":"     * Initialise the first dialog from Duke"},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"    public String initialStatements() {"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":"        return (\"Hello! I\u0027m Benny \\n\") + (\"What can I do for you?\");"},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":41}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Bennyphoe":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"controllers.MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"            \u003ccontent\u003e"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":"            \u003c/content\u003e"},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"    \u003c/children\u003e"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Bennyphoe":20}},{"path":"src/test/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"import org.junit.jupiter.api.BeforeAll;"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"class TaskListTest {"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"    private static List\u003cTask\u003e testList;"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"    @BeforeAll"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"    static void setUpList() {"},{"lineNumber":15,"author":{"gitId":"Bennyphoe"},"content":"        testList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":18,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":19,"author":{"gitId":"Bennyphoe"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"Bennyphoe"},"content":"    void addTask_newToDo_success() {"},{"lineNumber":21,"author":{"gitId":"Bennyphoe"},"content":"        TaskList taskList \u003d new TaskList(testList);"},{"lineNumber":22,"author":{"gitId":"Bennyphoe"},"content":"        taskList.addTask(\"todo borrow book\");"},{"lineNumber":23,"author":{"gitId":"Bennyphoe"},"content":"        assertEquals(1, taskList.getNewStorage().size());"},{"lineNumber":24,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":26,"author":{"gitId":"Bennyphoe"},"content":"    /*"},{"lineNumber":27,"author":{"gitId":"Bennyphoe"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"Bennyphoe"},"content":"    void listTask_noInputs_success() {"},{"lineNumber":29,"author":{"gitId":"Bennyphoe"},"content":"        TaskList taskList \u003d new TaskList(testList);"},{"lineNumber":30,"author":{"gitId":"Bennyphoe"},"content":"        taskList.addTask(\"todo borrow book\");"},{"lineNumber":31,"author":{"gitId":"Bennyphoe"},"content":"        String expectedOutput \u003d \"Here are the tasks in your list:\" + \"\\n\" +"},{"lineNumber":32,"author":{"gitId":"Bennyphoe"},"content":"                \"1. [T][ ] borrow book\";"},{"lineNumber":33,"author":{"gitId":"Bennyphoe"},"content":"        assertEquals(expectedOutput, taskList.listTask(taskList.getNewStorage()));"},{"lineNumber":34,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":35,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Bennyphoe"},"content":"    */"},{"lineNumber":37,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":38,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":39,"author":{"gitId":"Bennyphoe"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"Bennyphoe"},"content":"    void setTaskAsDone() {"},{"lineNumber":41,"author":{"gitId":"Bennyphoe"},"content":"        TaskList taskList \u003d new TaskList(testList);"},{"lineNumber":42,"author":{"gitId":"Bennyphoe"},"content":"        taskList.setTaskAsDone(0);"},{"lineNumber":43,"author":{"gitId":"Bennyphoe"},"content":"        assertTrue(taskList.getNewStorage().get(0).getDone());"},{"lineNumber":44,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":46,"author":{"gitId":"Bennyphoe"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"Bennyphoe"},"content":"    void deleteTask() {"},{"lineNumber":48,"author":{"gitId":"Bennyphoe"},"content":"        TaskList taskList \u003d new TaskList(testList);"},{"lineNumber":49,"author":{"gitId":"Bennyphoe"},"content":"        taskList.deleteTask(\"delete 1\");"},{"lineNumber":50,"author":{"gitId":"Bennyphoe"},"content":"        assertEquals(0, taskList.getNewStorage().size());"},{"lineNumber":51,"author":{"gitId":"Bennyphoe"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":53,"author":{"gitId":"Bennyphoe"},"content":""},{"lineNumber":54,"author":{"gitId":"Bennyphoe"},"content":"}"}],"authorContributionMap":{"Bennyphoe":54}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Bennyphoe"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Bennyphoe"},"content":"list"},{"lineNumber":3,"author":{"gitId":"Bennyphoe"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"Bennyphoe"},"content":"list"},{"lineNumber":5,"author":{"gitId":"Bennyphoe"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":6,"author":{"gitId":"Bennyphoe"},"content":"list"},{"lineNumber":7,"author":{"gitId":"Bennyphoe"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"Bennyphoe"},"content":"list"},{"lineNumber":9,"author":{"gitId":"Bennyphoe"},"content":"delete 1"},{"lineNumber":10,"author":{"gitId":"Bennyphoe"},"content":"list"},{"lineNumber":11,"author":{"gitId":"Bennyphoe"},"content":"event school event"},{"lineNumber":12,"author":{"gitId":"Bennyphoe"},"content":"deadline reach school"},{"lineNumber":13,"author":{"gitId":"Bennyphoe"},"content":"blah"},{"lineNumber":14,"author":{"gitId":"Bennyphoe"},"content":"todo"}],"authorContributionMap":{"Bennyphoe":14}}]
