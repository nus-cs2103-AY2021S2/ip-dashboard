[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":" * Deadlines are Tasks that must be completed before a certain date."},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    protected LocalDate by;"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"        this.by \u003d by;"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates a string representation of the Event object."},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string representation of the Event."},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")) + \")\";"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"    private Storage storage;"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"    private TaskList tasks;"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    String name;"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    public Duke(String filepath) {"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"        ui \u003d new Ui();"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"        storage \u003d new Storage(filepath);"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"        tasks \u003d new TaskList(storage.load());"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        name \u003d \"Link\";"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    public void run() {"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        int listCounter;"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        String userInput;"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"        ui.println(\"Hello! I\u0027m \" + name);"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"        ui.println(\"How are you feeling today?\");"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"            while (ui.canRead()) {"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"                userInput \u003d ui.read();"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"                if (userInput.equals(\"bye\")) {"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"                    break;"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"                }"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"                while (!userInput.equals(\"bye\")) {"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"                    listCounter \u003d 1;"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"                    String copy \u003d userInput;"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"                    String[] parts \u003d copy.split(\" \");"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"                    String keyword \u003d parts[0];"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"                    if (userInput.equals(\"list\")) {"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"                        ui.println(\"Here are the tasks in your list:\");"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"                        while (tasks.size() !\u003d listCounter) {"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"                            ui.println(listCounter + \".\" + tasks.get(listCounter - 1).toString());"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"                            listCounter++;"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"                        }"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"                        ui.println(listCounter + \".\" + tasks.get(listCounter - 1).toString());"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"                        userInput \u003d ui.read();"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"                    } else if (keyword.equals(\"done\")) {"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"                        if (parts.length \u003e 2) {"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"                            throw new InsufficientArgumentsException(\"Wrong arguments\");"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"                        }"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"                        int index \u003d Integer.parseInt(parts[1]);"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"                        ui.println(tasks.get(index - 1).markAsDone());"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"                        storage.save();"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"                        if (ui.canRead()) {"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"                            userInput \u003d ui.read();"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"                            if (userInput.equals(\"bye\")) {"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"                                break;"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"                            }"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"                        }"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"                    } else if (keyword.equals(\"todo\") || keyword.equals(\"deadline\") || keyword.equals(\"event\")) {"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"                        if (parts.length \u003d\u003d 1) {"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"                            throw new InsufficientArgumentsException(\"Insufficient arguments provided\");"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"                        }"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"                        ui.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"                        StringBuilder str \u003d new StringBuilder();"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"                        if (keyword.equals(\"todo\")) {"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"                            for (int i \u003d 1; i \u003c parts.length; i++) {"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"                                str.append(\" \");"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"                                str.append(parts[i]);"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"                            }"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"                            String taskString \u003d str.toString();"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"                            Todo todo \u003d new Todo(taskString);"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"                            tasks.add(todo);"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"                            ui.println(todo.toString());"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"                        } else {"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"                            int slashIndex \u003d 0;"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"                            for (int i \u003d 0; i \u003c parts.length; i++) {"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"                                if (parts[i].contains(Character.toString(\u0027/\u0027))) {"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"                                    slashIndex \u003d i;"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"                                }"},{"lineNumber":82,"author":{"gitId":"fairyinabottle4"},"content":"                            }"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"                            for (int j \u003d 1; j \u003c slashIndex; j++) {"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"                                str.append(\" \");"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"                                str.append(parts[j]);"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"                            }"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"                            String taskString \u003d str.toString();"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"                            StringBuilder byStringBuilder \u003d new StringBuilder();"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"                            for (int k \u003d slashIndex + 1; k \u003c parts.length; k++) {"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"                                if (k !\u003d slashIndex + 1) {"},{"lineNumber":91,"author":{"gitId":"fairyinabottle4"},"content":"                                    byStringBuilder.append(\" \");"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"                                }"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"                                byStringBuilder.append(parts[k]);"},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"                            }"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":"                            String DateString \u003d byStringBuilder.toString();"},{"lineNumber":96,"author":{"gitId":"fairyinabottle4"},"content":"                            LocalDate date \u003d LocalDate.parse(DateString);"},{"lineNumber":97,"author":{"gitId":"fairyinabottle4"},"content":"                            if (keyword.equals(\"deadline\")) {"},{"lineNumber":98,"author":{"gitId":"fairyinabottle4"},"content":"                                Deadline deadline \u003d new Deadline(taskString, date);"},{"lineNumber":99,"author":{"gitId":"fairyinabottle4"},"content":"                                tasks.add(deadline);"},{"lineNumber":100,"author":{"gitId":"fairyinabottle4"},"content":"                                ui.println(deadline.toString());"},{"lineNumber":101,"author":{"gitId":"fairyinabottle4"},"content":"                            } else {"},{"lineNumber":102,"author":{"gitId":"fairyinabottle4"},"content":"                                Event event \u003d new Event(taskString, date);"},{"lineNumber":103,"author":{"gitId":"fairyinabottle4"},"content":"                                tasks.add(event);"},{"lineNumber":104,"author":{"gitId":"fairyinabottle4"},"content":"                                ui.println(event.toString());"},{"lineNumber":105,"author":{"gitId":"fairyinabottle4"},"content":"                            }"},{"lineNumber":106,"author":{"gitId":"fairyinabottle4"},"content":"                        }"},{"lineNumber":107,"author":{"gitId":"fairyinabottle4"},"content":"                        ui.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":108,"author":{"gitId":"fairyinabottle4"},"content":"                        storage.save();"},{"lineNumber":109,"author":{"gitId":"fairyinabottle4"},"content":"                        if (ui.canRead()) {"},{"lineNumber":110,"author":{"gitId":"fairyinabottle4"},"content":"                            userInput \u003d ui.read();"},{"lineNumber":111,"author":{"gitId":"fairyinabottle4"},"content":"                            if (userInput.equals(\"bye\")) {"},{"lineNumber":112,"author":{"gitId":"fairyinabottle4"},"content":"                                break;"},{"lineNumber":113,"author":{"gitId":"fairyinabottle4"},"content":"                            }"},{"lineNumber":114,"author":{"gitId":"fairyinabottle4"},"content":"                        }"},{"lineNumber":115,"author":{"gitId":"fairyinabottle4"},"content":"                    } else if (keyword.equals(\"delete\")) {"},{"lineNumber":116,"author":{"gitId":"fairyinabottle4"},"content":"                        if (parts.length \u003e 2) {"},{"lineNumber":117,"author":{"gitId":"fairyinabottle4"},"content":"                            throw new InsufficientArgumentsException(\"Wrong arguments\");"},{"lineNumber":118,"author":{"gitId":"fairyinabottle4"},"content":"                        }"},{"lineNumber":119,"author":{"gitId":"fairyinabottle4"},"content":"                        int index \u003d Integer.parseInt(parts[1]);"},{"lineNumber":120,"author":{"gitId":"fairyinabottle4"},"content":"                        ui.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":121,"author":{"gitId":"fairyinabottle4"},"content":"                        ui.println(tasks.get(index - 1).toString());"},{"lineNumber":122,"author":{"gitId":"fairyinabottle4"},"content":"                        tasks.remove(index-1);"},{"lineNumber":123,"author":{"gitId":"fairyinabottle4"},"content":"                        ui.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":124,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":125,"author":{"gitId":"fairyinabottle4"},"content":"                        storage.save();"},{"lineNumber":126,"author":{"gitId":"fairyinabottle4"},"content":"                        if (ui.canRead()) {"},{"lineNumber":127,"author":{"gitId":"fairyinabottle4"},"content":"                            userInput \u003d ui.read();"},{"lineNumber":128,"author":{"gitId":"fairyinabottle4"},"content":"                            if (userInput.equals(\"bye\")) {"},{"lineNumber":129,"author":{"gitId":"fairyinabottle4"},"content":"                                break;"},{"lineNumber":130,"author":{"gitId":"fairyinabottle4"},"content":"                            }"},{"lineNumber":131,"author":{"gitId":"fairyinabottle4"},"content":"                        }"},{"lineNumber":132,"author":{"gitId":"fairyinabottle4"},"content":"                    } else if (keyword.equals(\"find\")) {"},{"lineNumber":133,"author":{"gitId":"fairyinabottle4"},"content":"                        if (parts.length \u003d\u003d 1) {"},{"lineNumber":134,"author":{"gitId":"fairyinabottle4"},"content":"                            throw new InsufficientArgumentsException(\"Insufficient arguments provided\");"},{"lineNumber":135,"author":{"gitId":"fairyinabottle4"},"content":"                        }"},{"lineNumber":136,"author":{"gitId":"fairyinabottle4"},"content":"                        ui.println(\"Here are the matching tasks in your list\");"},{"lineNumber":137,"author":{"gitId":"fairyinabottle4"},"content":"                        StringBuilder str \u003d new StringBuilder();"},{"lineNumber":138,"author":{"gitId":"fairyinabottle4"},"content":"                        for (int i \u003d 1; i \u003c parts.length; i++) {"},{"lineNumber":139,"author":{"gitId":"fairyinabottle4"},"content":"                            str.append(\" \");"},{"lineNumber":140,"author":{"gitId":"fairyinabottle4"},"content":"                            str.append(parts[i]);"},{"lineNumber":141,"author":{"gitId":"fairyinabottle4"},"content":"                        }"},{"lineNumber":142,"author":{"gitId":"fairyinabottle4"},"content":"                        String findString \u003d str.toString();"},{"lineNumber":143,"author":{"gitId":"fairyinabottle4"},"content":"                        for (Task t: TaskList.getTasklist()) {"},{"lineNumber":144,"author":{"gitId":"fairyinabottle4"},"content":"                            if (t.toString().contains(findString)) {"},{"lineNumber":145,"author":{"gitId":"fairyinabottle4"},"content":"                                ui.println(t.toString());"},{"lineNumber":146,"author":{"gitId":"fairyinabottle4"},"content":"                            }"},{"lineNumber":147,"author":{"gitId":"fairyinabottle4"},"content":"                        }"},{"lineNumber":148,"author":{"gitId":"fairyinabottle4"},"content":"                        if (ui.canRead()) {"},{"lineNumber":149,"author":{"gitId":"fairyinabottle4"},"content":"                            userInput \u003d ui.read();"},{"lineNumber":150,"author":{"gitId":"fairyinabottle4"},"content":"                            if (userInput.equals(\"bye\")) {"},{"lineNumber":151,"author":{"gitId":"fairyinabottle4"},"content":"                                break;"},{"lineNumber":152,"author":{"gitId":"fairyinabottle4"},"content":"                            }"},{"lineNumber":153,"author":{"gitId":"fairyinabottle4"},"content":"                        }"},{"lineNumber":154,"author":{"gitId":"fairyinabottle4"},"content":"                    } else {"},{"lineNumber":155,"author":{"gitId":"fairyinabottle4"},"content":"                        throw new IllegalKeywordException(\"Invalid keyword\");"},{"lineNumber":156,"author":{"gitId":"fairyinabottle4"},"content":"                    }"},{"lineNumber":157,"author":{"gitId":"fairyinabottle4"},"content":"                }"},{"lineNumber":158,"author":{"gitId":"fairyinabottle4"},"content":"                if (userInput.equals(\"bye\")) {"},{"lineNumber":159,"author":{"gitId":"fairyinabottle4"},"content":"                    break;"},{"lineNumber":160,"author":{"gitId":"fairyinabottle4"},"content":"                }"},{"lineNumber":161,"author":{"gitId":"fairyinabottle4"},"content":"            }"},{"lineNumber":162,"author":{"gitId":"fairyinabottle4"},"content":"            ui.println(\"Bye. Talk to me anytime!\");"},{"lineNumber":163,"author":{"gitId":"fairyinabottle4"},"content":"        } catch (InsufficientArgumentsException err) {"},{"lineNumber":164,"author":{"gitId":"fairyinabottle4"},"content":"            ui.println(\"Number of arguments is invalid. Try again\");"},{"lineNumber":165,"author":{"gitId":"fairyinabottle4"},"content":"        } catch(IllegalKeywordException err) {"},{"lineNumber":166,"author":{"gitId":"fairyinabottle4"},"content":"            ui.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":167,"author":{"gitId":"fairyinabottle4"},"content":"        } catch (NumberFormatException n) {"},{"lineNumber":168,"author":{"gitId":"fairyinabottle4"},"content":"            ui.println(\"Done command must be followed by a number\");"},{"lineNumber":169,"author":{"gitId":"fairyinabottle4"},"content":"        } catch (IOException e) {"},{"lineNumber":170,"author":{"gitId":"fairyinabottle4"},"content":"            ui.println(\"Error writing to file\");"},{"lineNumber":171,"author":{"gitId":"fairyinabottle4"},"content":"            e.printStackTrace();"},{"lineNumber":172,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":175,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":177,"author":{"gitId":"fairyinabottle4"},"content":"        new Duke(\"duke.txt\").run();"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":176,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":" * Events are Tasks that take place at a certain and date."},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    protected LocalDate time;"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    public Event(String description, LocalDate time) {"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"        this.time \u003d time;"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates a string representation of the Event object."},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string representation of the Event."},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")) + \")\";"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":24}},{"path":"src/main/java/IllegalKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"public class IllegalKeywordException extends Exception {"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"    IllegalKeywordException(String e) {"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"        super(e);"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":5}},{"path":"src/main/java/InsufficientArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"public class InsufficientArgumentsException extends Exception{"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"    InsufficientArgumentsException(String e) {"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"        super(e);"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":5}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":" * Parser helps to extract the information in txt files stored in strings into"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":" * a desired format."},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"     * Takes in a line from the txt file and outputs the description of a Todo object."},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"     * @param str The line read in from the txt file."},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string that is the description of the Todo object."},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    public String parseTodoDescription(String str) {"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"        return str.substring(str.indexOf(\"  \") + 2);"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"     * Takes in a line from the txt file and outputs the description of"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"     * a Event or Deadline object."},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"     * @param str The line read in from the txt file."},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string that is the description of a Event or Deadline object."},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    public String parseDeadlineEventDescription(String str) {"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"        return str.substring(str.indexOf(\"  \") + 2, str.indexOf(\" (\") + 1);"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"     * Takes in a line from the txt file and outputs the date of a Deadline object"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"     * as a string."},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"     * @param str The line read in from the txt file."},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string that is the date of a Deadline object."},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"    public String parseDateTimeDeadline(String str) {"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"        return str.substring(str.indexOf(\"by: \") + 4, str.indexOf(\")\"));"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"     * Takes in a line from the txt file and outputs the date of a Event object"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"     * as a string."},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"     * @param str The line read in from the txt file."},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string that is the date of an Event object."},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"    public String parseDateTimeEvent(String str) {"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"        return str.substring(str.indexOf(\"at: \") + 4, str.indexOf(\")\"));"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":45}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import java.io.PrintWriter;"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":" * Handles the reading and writing of information to an external file."},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    private String filepath;"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    "},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"    private Parser parser;"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    Storage(String filepath) {"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"        this.filepath \u003d filepath;"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"        parser \u003d new Parser();"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"     * Reads the existing txt file and stores the text into Task objects."},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"     * If the file does not exist, it creates a new file."},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"     * @return the list of tasks that contains the task objects."},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"    public ArrayList\u003cTask\u003e load() {"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"            File myFile \u003d new File(\"duke.txt\");"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"            if (myFile.createNewFile()) {"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"                System.out.println(\"File created: \" + myFile.getName());"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"            } else {"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"                System.out.println(\"File already exists\");"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"                Scanner myReader \u003d new Scanner(myFile);"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"                while (myReader.hasNextLine()) {"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"                    String type \u003d myReader.nextLine();"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"                    if (type.contains(\"[T]\")) {"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"                        String description \u003d parser.parseTodoDescription(type);"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"                        tasks.add(new Todo(description));"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"                    } else if (type.contains(\"[D]\")) {"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"                        String description \u003d parser.parseDeadlineEventDescription(type);"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"                        String dateString \u003d parser.parseDateTimeDeadline(type);"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"                        LocalDate date \u003d LocalDate.parse(dateString,"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"                                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"                        tasks.add(new Deadline(description, date));"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"                    } else if (type.contains(\"[E]\")) {"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"                        String description \u003d parser.parseDeadlineEventDescription(type);"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"                        String timeString \u003d parser.parseDateTimeEvent(type);"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"                        LocalDate time \u003d LocalDate.parse(timeString,"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"                                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"                        tasks.add(new Event(description, time));"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"                    }"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"                }"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"                myReader.close();"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"        } catch (IOException e){"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"            System.out.println(\"An error occurred\");"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"            e.printStackTrace();"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"        return tasks;"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"     * Saves the current information into a txt file."},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"     * @throws FileNotFoundException"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"    public void save() throws FileNotFoundException {"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"        PrintWriter myWriter \u003d new PrintWriter(\"duke.txt\");"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"        for (Task t : TaskList.getTasklist()) {"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"            myWriter.println(t.toString());"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"        myWriter.flush();"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"        myWriter.close();"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":80}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":" * A task object that describes what the task is."},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    protected int taskType;"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    public Task(String description) {"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"     * Indicates whether a task is completed. If that is the case, a tick will be displayed."},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a tick if isDone is true. Else, it will return an empty space."},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    public String getStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"        return (isDone ? \"\\u2713\" : \" \"); //return tick or X symbols"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"     * Changes the status of a Task from undone to done."},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string representation of the Task object with an updated status."},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"    public String markAsDone() {"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"        isDone \u003d true;"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        return toString();"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates a string representation of the Task object."},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string representation of the Task object."},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"    public String toString() {"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"        String indicator \u003d getStatusIcon();"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"        return \"[\" + indicator + \"]  \" + description;"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"    public int getTaskType() {"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"        return this.taskType;"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":48}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":" * Abstracts the data structure and relevant methods used to store the Task objects."},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":" * An ArrayList is used for this purpose."},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    private static ArrayList\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    TaskList() {"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"     * Adds a task object to the data structure."},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"     * @param task A task object."},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    public void add(Task task) {"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        tasks.add(task);"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"     * Find out the number of items in the data structure."},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"     * @return the number of task objects in the ArrayList."},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"    public int size() {"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        return tasks.size();"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"     * Obtain an item at a specific index in the data structure."},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"     * @param index Index where the item is to be retrieved."},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"     * @return the task object at the specific index in the ArrayList."},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"    public Task get(int index) {"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"        return tasks.get(index);"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"     * Deletes an item at a specific index in the data structure."},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"     * @param index Index where the task object is to be deleted."},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"    public void remove(int index) {"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"        tasks.remove(index);"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"     * Allows other classes to ask for a copy of the data structure."},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"     * @return the ArrayList."},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"    public static ArrayList\u003cTask\u003e getTasklist() {"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"        return tasks;"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":59}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":" * Todos are Tasks that must be done but without a time constraint."},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"public class Todo extends Task {"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"    public Todo(String description) {"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates a string representation of the Todo object."},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string representation of the Todo object."},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":18}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":" * Ui is a class that handles the input/output of Duke."},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"    Scanner sc;"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    Ui() {"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"     * Reads the next line as a string in the scanner input."},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string that is in the scanner input."},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    public String read() {"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        return sc.nextLine();"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"     * Checks if the next line is available. Usually used before read()."},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"     * @return whether the scanner contains the next line."},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"    public boolean canRead() {"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"        return sc.hasNextLine();"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"     * Prints the input string to the console."},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"     * @param str The string to be printed to the console."},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    public void println(String str) {"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"        System.out.println(str);"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":36}},{"path":"test/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"class EventTest {"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    void testToString() {"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"        Event event \u003d new Event(\"project meeting\", LocalDate.parse(\"2021-03-03\"));"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(\"[E][ ]  project meeting (at: 03/03/2021)\", event.toString());"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":14}},{"path":"test/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"class ParserTest {"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"    void parseDateTimeDeadline() {"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"        String sample \u003d \"[D][ ]   return book   (by: 31/01/2021)\";"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(\"31/01/2021\", parser.parseDateTimeDeadline(sample));"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    void parseDateTimeEvent() {"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"        String sample \u003d \"[E][✓]   project meeting   (at: 01/02/2021)\";"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(\"01/02/2021\", parser.parseDateTimeEvent(sample));"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    void parseTodoDescription() {"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        String sample \u003d \"[T][ ]   borrow book\";"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(\" borrow book\", parser.parseTodoDescription(sample));"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"    void parseDeadlineEventDescription() {"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"        String sample \u003d \"[D][ ]   return book   (by: 31/01/2021)\";"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(\" return book   \", parser.parseDeadlineEventDescription(sample));"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"list"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"bye"}],"authorContributionMap":{"fairyinabottle4":6}}]
