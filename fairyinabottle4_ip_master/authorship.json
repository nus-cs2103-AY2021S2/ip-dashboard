[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":17,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"Hello user! Duke is your friendly chatbot to help you manage and organize your tasks efficiently. "},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"With a simple user interface and customizable avatar, it is an indispensable part of everyday life."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"## Quick Start"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"1. Ensure that you have Java `11` or above installed in your Computer."},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"2. Download the latest Duke.jar from this repository."},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"3. Copy the file to the directory you want to use as the home folder for Duke."},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    * A data folder will also be created in the same directory to store Duke files. "},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"4. Double-click the file to start the app. The window below should appear."},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"   ![startingscreen](./screenshots/startpage.PNG)"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"5. Type the command in the chat box and press `Enter` or click Send to execute it."},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"### Add tasks to Duke!"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"You are able to add 3 types of tasks to Duke."},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"They are:"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"* Todo"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"  * Specify description."},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"* Deadline"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"  * Specify description \u0026 date the task must be completed before."},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"* Event"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"  * Specify description \u0026 date the event will take place on."},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"For each type of task, a certain syntax format"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"must be followed. See usage section."},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"### Delete tasks"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"Tasks can also be deleted from the list with the `delete` command"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"and by specifying the index number of the desired task."},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"### Display all tasks"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"The list of tasks can be displayed with the `list` command."},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"### Find a certain task"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"The list of tasks that matches your requirement can also be"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"searched for and displayed, by using the `find` command"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"along with the keyword you wish to search for."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"### `todo` - Adds a Todo task"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"Creates and adds a Todo task to the list. Also tells you the number of tasks you have in the list after adding."},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"Example of usage:"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"`todo borrow book`"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"Expected outcome:"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"![todo](./screenshots/todo.PNG)"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"### `deadline` - Adds a Deadline task"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"Creates and adds a Deadline task to the list. Also tells you the number of tasks you have in the list after adding. "},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"`deadline return book /by 2021-03-03`"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"You must use the `/by` keyword and follow the date format yyyy-MM-dd exactly!"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"![deadline](./screenshots/deadline.PNG)"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"### `event` - Adds an Event task"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"Creates and adds an Event task to the list. Also tells you the number of tasks you have in the list after adding."},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"Example of usage:"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"`event project meeting /at 2021-04-04`"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"You must use the `/at` keyword and follow the date format yyyy-MM-dd exactly!"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":82,"author":{"gitId":"fairyinabottle4"},"content":"Expected outcome:"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"![event](./screenshots/event.PNG)"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"### `list` - Displays all tasks"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"Displays all the tasks in the list."},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"Example of usage:"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"`list`"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"Expected outcome:"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":96,"author":{"gitId":"fairyinabottle4"},"content":"![list](./screenshots/list.PNG)"},{"lineNumber":97,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":98,"author":{"gitId":"fairyinabottle4"},"content":"### `done` - Mark a task as complete"},{"lineNumber":99,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":100,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":101,"author":{"gitId":"fairyinabottle4"},"content":"Marks a task as complete with a tick in the box."},{"lineNumber":102,"author":{"gitId":"fairyinabottle4"},"content":"The index of the item you wish to mark must be provided."},{"lineNumber":103,"author":{"gitId":"fairyinabottle4"},"content":"**The tasks will appear in chronological order! All todo tasks will be placed at the top.**"},{"lineNumber":104,"author":{"gitId":"fairyinabottle4"},"content":"* The index of the item is displayed when the list command is used. "},{"lineNumber":105,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":106,"author":{"gitId":"fairyinabottle4"},"content":"Example of usage:"},{"lineNumber":107,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":108,"author":{"gitId":"fairyinabottle4"},"content":"`done 1`"},{"lineNumber":109,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":110,"author":{"gitId":"fairyinabottle4"},"content":"Expected outcome:"},{"lineNumber":111,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":112,"author":{"gitId":"fairyinabottle4"},"content":"![done](./screenshots/done.PNG)"},{"lineNumber":113,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":114,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":115,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":116,"author":{"gitId":"fairyinabottle4"},"content":"### `delete` - Removes a task"},{"lineNumber":117,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":118,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":119,"author":{"gitId":"fairyinabottle4"},"content":"Deletes the desired from the list. The index of the item"},{"lineNumber":120,"author":{"gitId":"fairyinabottle4"},"content":"you wish to delete must be provided."},{"lineNumber":121,"author":{"gitId":"fairyinabottle4"},"content":"* The index of the item is displayed when the list command is used."},{"lineNumber":122,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":123,"author":{"gitId":"fairyinabottle4"},"content":"Example of usage:"},{"lineNumber":124,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":125,"author":{"gitId":"fairyinabottle4"},"content":"`delete 2`"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"fairyinabottle4"},"content":"![delete](./screenshots/delete.PNG)"},{"lineNumber":130,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":131,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":132,"author":{"gitId":"fairyinabottle4"},"content":"Wwhen the `list` command is used again,"},{"lineNumber":133,"author":{"gitId":"fairyinabottle4"},"content":"the deleted task will no longer appear."},{"lineNumber":134,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":135,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":136,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":137,"author":{"gitId":"fairyinabottle4"},"content":"### `find` - Searches for a task"},{"lineNumber":138,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":139,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":140,"author":{"gitId":"fairyinabottle4"},"content":"Searches the list for tasks that match with the keyword"},{"lineNumber":141,"author":{"gitId":"fairyinabottle4"},"content":"provided."},{"lineNumber":142,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":143,"author":{"gitId":"fairyinabottle4"},"content":"Example of usage:"},{"lineNumber":144,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":145,"author":{"gitId":"fairyinabottle4"},"content":"`find book`"},{"lineNumber":146,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":147,"author":{"gitId":"fairyinabottle4"},"content":"Expected outcome:"},{"lineNumber":148,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":149,"author":{"gitId":"fairyinabottle4"},"content":"![find](./screenshots/find.PNG)"},{"lineNumber":150,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":151,"author":{"gitId":"fairyinabottle4"},"content":"### `bye` - Exits the program"},{"lineNumber":152,"author":{"gitId":"fairyinabottle4"},"content":"Exits the program after a short delay, in which tasks are saved. "},{"lineNumber":153,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":154,"author":{"gitId":"fairyinabottle4"},"content":"![find](./screenshots/bye.png)"},{"lineNumber":155,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":156,"author":{"gitId":"fairyinabottle4"},"content":"## Command Summary"},{"lineNumber":157,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":158,"author":{"gitId":"fairyinabottle4"},"content":"**Action**  | **Format, Examples**"},{"lineNumber":159,"author":{"gitId":"fairyinabottle4"},"content":"--------|-----------------"},{"lineNumber":160,"author":{"gitId":"fairyinabottle4"},"content":"**Add todo task** | `todo description` \u003cbr /\u003e e.g., `todo Laundry`"},{"lineNumber":161,"author":{"gitId":"fairyinabottle4"},"content":"**Add deadline task** | `deadline description /by yyyy-MM-dd` \u003cbr /\u003e e.g., `deadline return book /by 2021-03-03 `"},{"lineNumber":162,"author":{"gitId":"fairyinabottle4"},"content":"**Add event task** | `event description /at yyyy-MM-dd` \u003cbr /\u003e e.g., `event project meeting /at 2021-04-04`"},{"lineNumber":163,"author":{"gitId":"fairyinabottle4"},"content":"**List** | `list`"},{"lineNumber":164,"author":{"gitId":"fairyinabottle4"},"content":"**Done** | `done`"},{"lineNumber":165,"author":{"gitId":"fairyinabottle4"},"content":"**Delete** | `delete index` \u003cbr /\u003e e.g., `delete 2`"},{"lineNumber":166,"author":{"gitId":"fairyinabottle4"},"content":"**Find** | `find keyword` \u003cbr /\u003e e.g., `find project`"},{"lineNumber":167,"author":{"gitId":"fairyinabottle4"},"content":"**Exit** | `bye`"}],"authorContributionMap":{"fairyinabottle4":147,"-":20}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":" * Handles commands that adds Tasks to the list"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"public class AddCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates and initializes an AddCommand object."},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"     * @param input The command that the user wishes to use."},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"     * @param parts The entire array of strings passed in by user."},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"     * @param tasks The list of tasks currently used."},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    AddCommand(String input, String[] parts, TaskList tasks) {"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"        super(input, parts, tasks);"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    public AddCommand() {"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"        super();"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns a string representation of the Task after it has been added to the list."},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"     * @return A string representation of the Task added to the list."},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"     * @throws DukeException If no arguments are provided."},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"    public String execute() throws DukeException {"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        assert tasks !\u003d null : \"tasks cannot be null\";"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"            if (parts.length \u003d\u003d 1) {"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"                throw new DukeException(\"Insufficient arguments provided\");"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"            if (input.equals(\"todo\")) {"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"                return new TodoCommand(input, parts, tasks).getString();"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"            } else {"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"                int slashIndex \u003d getSlashIndex();"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"                String taskString \u003d getTaskString(slashIndex);"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"                String dateString \u003d parts[slashIndex + 1];"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"                String prepositionString \u003d parts[slashIndex];"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"                LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"                if (input.equals(\"deadline\") \u0026\u0026 prepositionString.equals(\"/by\")) {"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"                    return new DeadlineCommand(taskString, date, tasks).getString();"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"                }"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"                if (input.equals(\"event\") \u0026\u0026 prepositionString.equals(\"/at\")) {"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"                    return new EventCommand(taskString, date, tasks).getString();"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"                } else {"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"                    throw new DukeException(\"Wrong preposition used!\\n Use \u0027by\u0027 for Deadlines \" +"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"                            \"and \u0027at\u0027 for Events\");"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"                }"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"            throw new DukeException(\"Input is not in the right format\");"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"            throw new DukeException(\"Date is not in the right format\");"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns the description of the task entered by the user."},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"     * @param slashIndex The position where the slash is located."},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"     * @return A string that describes the task entered by the user."},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"    public String getTaskString(int slashIndex) {"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"        StringBuilder str \u003d new StringBuilder();"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"        for (int j \u003d 1; j \u003c slashIndex; j++) {"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"            str.append(\" \");"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"            str.append(parts[j]);"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"        return str.toString();"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"     * Calculates the position of the slash in the command entered."},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"     * @return Integer which represents the index of the slash."},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"fairyinabottle4"},"content":"    public int getSlashIndex() {"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"        int slashIndex \u003d 0;"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"            if (parts[i].contains(Character.toString(\u0027/\u0027))) {"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"                slashIndex \u003d i;"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"        return slashIndex;"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":91}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"public class ByeCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"    public String execute() {"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"        Main.exit();"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"        return Ui.showGoodbyeText();"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":8}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":" * An abstract class which provides the template for all commands the user can make."},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"public abstract class Command {"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"    protected String input;"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"    protected String[] parts;"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"    protected TaskList tasks;"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    Command (String input, String[] parts, TaskList tasks) {"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"        this.input \u003d input;"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"        this.parts \u003d parts;"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    public Command() {"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns a string representation of the Task after the execution of a process."},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"     * The process is determined by the user input."},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"     * @return A string representation of task."},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"     * @throws DukeException If no arguments are provided."},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    public abstract String execute() throws DukeException;"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":27}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":" * Deadlines are Tasks that must be completed before a certain date."},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"public class Deadline extends Task implements EventDeadline {"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    protected LocalDate by;"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates and initializes a Deadline object."},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"     * @param description The description of the Deadline."},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"     * @param by The date which the Deadline must meet."},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    Deadline(String description, LocalDate by) {"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"        this.by \u003d by;"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"        super.taskType \u003d DEADLINE_NUMBER;"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns the date of the Event object."},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"     * @return The LocalDate of the Deadline object."},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"    public LocalDate getDateInfo() {"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        return this.by;"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates A string representation of the Deadline object."},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"     * @return A string representation of the Deadline."},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")) + \")\";"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":41}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":" * Handles the addition of Deadline objects."},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"public class DeadlineCommand extends AddCommand {"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"    private String taskString;"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"    private LocalDate date;"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates and initializes a DeadlineCommand to add a Deadline Object"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"     * @param taskString The description of the Deadline object."},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"     * @param date The date which the Deadline must meet."},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"     * @param tasks List that stores all tasks."},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    DeadlineCommand(String taskString, LocalDate date, TaskList tasks) {"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"        super.tasks \u003d tasks;"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        this.taskString \u003d taskString;"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"        this.date \u003d date;"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns a string representation of the Deadline object just added."},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"     * @return A string which represents the Deadline just added."},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    public String getString() {"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"        Deadline deadline \u003d new Deadline(taskString, date);"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        tasks.add(deadline);"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"        return Ui.showAddText() + deadline.toString() + tasks.getSizeString();"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":32}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":" * Handles the delete command, where the user removes an item from the list."},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"    DeleteCommand(String input, String[] parts, TaskList tasks) {"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"        super(input, parts, tasks);"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns a string representation of the Task after it is deleted from the list."},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"     * @return A string representation of the Task deleted."},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"     * @throws DukeException If no arguments are provided."},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    public String execute() throws DukeException {"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        if (parts.length \u003d\u003d 1) { //no parameter provided"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"            throw new DukeException(\"Insufficient Arguments Provided\");"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"        if (parts.length \u003e 2) { //too many parameters provided"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"            throw new DukeException(\"Too many arguments provided\");"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"        if (!Parser.isNumber(parts[1])) { //if parameter is not a number"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"            throw new DukeException(\"Parameter must be an argument\");"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        assert tasks !\u003d null : \"tasks cannot be null\";"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"        int index \u003d Integer.parseInt(parts[1]) - 1;"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"        if (index \u003e tasks.getSize() - 1 || index \u003c 0) {"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"            throw new DukeException(\"Task does not exist\");"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"        Task toBeRemoved \u003d tasks.get(index - 1);"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"        tasks.remove(index - 1);"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        return Ui.showDeleteText() + toBeRemoved.toString() + tasks.getSizeString();"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":38}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":61}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":" * Handles the command where the user indicates completion of a task."},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"public class DoneCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"    DoneCommand(String input, String[] parts, TaskList tasks) {"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"        super(input, parts, tasks);"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns a string representation of the Task after it is marked a task as done."},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"     * @return A string representation of the Task that is marked as done."},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"     * @exception DukeException If no arguments are provided."},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    public String execute() throws DukeException {"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        if (parts.length \u003d\u003d 1) { //no parameter provided"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"            throw new DukeException(\"Insufficient Arguments Provided\");"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"        if (parts.length \u003e 2) { //too many parameters provided"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"            throw new DukeException(\"Too many arguments provided\");"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"        if (!Parser.isNumber(parts[1])) { //if parameter is not a number"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"            throw new DukeException(\"Parameter must be an number\");"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        int index \u003d Integer.parseInt(parts[1]) - 1;"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"        assert tasks !\u003d null : \"tasks cannot be null\";"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        if (index \u003e tasks.getSize() || index \u003c 0) {"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"            throw new DukeException(\"Task does not exist\");"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"        Task toMark \u003d TaskList.getTasklist().get(index - 1);"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        toMark.markAsDone();"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"        TaskList.getTasklist().get(index - 1).markAsDone();"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"        return Ui.showDoneText() + toMark.toString();"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":40}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":" * Encapsulates the behaviour of the Duke application"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"    private Storage storage;"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    private TaskList tasks;"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    private Ui ui;"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    private String name;"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates and initializes a new Duke object."},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"     * @param filepath The path containing the file which stores app data."},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    public Duke(String filepath) {"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"        ui \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"        storage \u003d new Storage(filepath);"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        tasks \u003d new TaskList(storage.load());"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        name \u003d \"Link\";"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"     * Gets the appropriate response based on the user input."},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"     * @param input The command selected by the user."},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"     * @param parts The array of strings in the user input, including the arguments for the command selected."},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"     * @return A string that is determined by the user input command."},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"    public String getResponse(String input, String[] parts) {"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"            int listCounter \u003d 1;"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"            switch (input) {"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"            case \"done\":"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"                String doneString \u003d new DoneCommand(input, parts, tasks).execute();"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"                storage.save();"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"                return doneString;"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"            case \"todo\":"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"            case \"deadline\":"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"            case \"event\":"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"                String addString \u003d new AddCommand(input, parts, tasks).execute();"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"                storage.save();"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"                return addString;"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"            case \"delete\":"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"                String deleteString \u003d new DeleteCommand(input, parts, tasks).execute();"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"                storage.save();"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"                return deleteString;"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"            case \"list\":"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"                String listString \u003d new ListCommand(input, parts, tasks, listCounter).execute();"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"                storage.save();"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"                return listString;"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"            case \"find\":"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"                String findString \u003d new FindCommand(input, parts, tasks).execute();"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"                storage.save();"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"                return findString;"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"            case \"bye\":"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"                String byeString \u003d new ByeCommand().execute();"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"                storage.save();"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"                return byeString;"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"            default:"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"                throw new DukeException(\"Unable to match any command\");"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"        } catch (DukeException | FileNotFoundException e) {"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"            return Ui.showErrorMessage(e.toString());"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":""}],"authorContributionMap":{"fairyinabottle4":72,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"     * Create a new DukeException to be thrown."},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"     * @param msg The error message."},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"    public DukeException(String msg) {"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"        super(msg);"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns a string representation of the DukeException."},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"     * @return Error message in chat box."},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"        return super.getMessage();"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":19}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":" * Events are Tasks that take place at a certain and date."},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"public class Event extends Task implements EventDeadline {"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    protected LocalDate date;"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates and initializes an Event object."},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"     * @param description The description of the Event."},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"     * @param date The date which the Event takes place."},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    Event(String description, LocalDate date) {"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"        this.date \u003d date;"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"        super.taskType \u003d EVENT_NUMBER;"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates a string representation of the Event object."},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string representation of the Event."},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")) + \")\";"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns the date of the Event object."},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"     * @return The LocalDate of the Event object."},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"    public LocalDate getDateInfo() {"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"        return this.date;"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":44}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":" * Handles the addition of Events by the user."},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"public class EventCommand extends AddCommand {"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"    private String taskString;"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"    private LocalDate date;"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    EventCommand(String taskString, LocalDate date, TaskList tasks) {"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"        super.tasks \u003d tasks;"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"        this.taskString \u003d taskString;"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"        this.date \u003d date;"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns a string representation of the Event object just added."},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"     * @return A string which represents the Event just added."},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    public String getString() {"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"        Event event \u003d new Event(taskString, date);"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"        tasks.add(event);"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        return Ui.showAddText() + event.toString() + tasks.getSizeString();"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":26}},{"path":"src/main/java/EventDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"public interface EventDeadline {"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"    LocalDate getDateInfo();"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":5}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":" * Handles the find command, where the user searches for tasks based on provided keywords."},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"public class FindCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"    FindCommand(String input, String[] parts, TaskList tasks) {"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"        super(input, parts, tasks);"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns a string representation of the Tasks after they have been found and"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"     * matched with the given criteria."},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"     * @return A string representation of one or more tasks that matches the user\u0027s requirements."},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"     * @throws DukeException If no arguments are provided."},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"    public String execute() throws DukeException {"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"        if (parts.length \u003d\u003d 1) {"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"            throw new DukeException(\"Insufficient arguments provided\");"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"        assert tasks !\u003d null : \"tasks cannot be null\";"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"        StringBuilder keyString \u003d new StringBuilder();"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        StringBuilder findStringBuilder \u003d new StringBuilder();"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"            keyString.append(\" \");"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"            keyString.append(parts[i]);"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        String findString \u003d keyString.toString();"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"        for (Task t: TaskList.getTasklist()) {"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"            if (t.toString().contains(findString)) {"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"                findStringBuilder.append(t.toString()).append(\"\\n\");"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"        return Ui.showFindText() + findStringBuilder.toString();"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":37}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":10}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":" * Handles the list command, where the user wants to display all the tasks currently in the list."},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"public class ListCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"    private int listCounter;"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"    ListCommand(String input, String[] parts, TaskList tasks, int listCounter) {"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"        super(input, parts, tasks);"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"        this.listCounter \u003d listCounter;"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns a string representation of one or more Tasks that are stored in the list."},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"     * @return A string representation of all the Tasks currently stored in the list."},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"    public String execute() throws DukeException {"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"        if (parts.length \u003e 1) {"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"            throw new DukeException(\"Too many arguments. Provide just one number\");"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"        assert tasks !\u003d null : \"tasks cannot be null\";"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        StringBuilder listStringBuilder \u003d new StringBuilder();"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        for (Task t : TaskList.getTasklist()) {"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"            listStringBuilder.append(listCounter).append(\".\").append(t.toString());"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"            listStringBuilder.append(\"\\n\");"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"            listCounter++;"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"        return Ui.showListText() + listStringBuilder.toString();"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":32}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.application.Platform;"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.util.Duration;"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    private Duke duke \u003d new Duke(\"duke.txt\");"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"     * Pauses for 2 seconds then exits the program if no other threads are running."},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    public static void exit() {"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"        PauseTransition pause \u003d new PauseTransition(Duration.seconds(2));"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        pause.setOnFinished(event -\u003e {"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"            Platform.exit();"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"        });"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"        pause.play();"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"    public void start(Stage stage) {"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"            stage.setScene(scene);"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().initialize(duke);"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"            stage.show();"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"            e.printStackTrace();"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":43}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"     * Initializes UI elements."},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"     * Displays the welcome message."},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"     * @param d The Duke object that handles the behaviour of the app."},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"    public void initialize(Duke d) {"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"        assert duke !\u003d null : \"Duke cannot be null\";"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        duke \u003d d;"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"        String welcomeMessage \u003d Ui.showWelcomeText();"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"                DialogBox.getDukeDialog(welcomeMessage, dukeImage)"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"        );"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"    @FXML"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"    private void handleUserInput() {"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"        String[] parts \u003d input.split(\" \");"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"        String keyword \u003d parts[0];"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"        String response \u003d duke.getResponse(keyword, parts);"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"        );"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"        userInput.clear();"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":60}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":" * Parser helps to extract the information in txt files stored in strings into"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":" * a desired format."},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"     * Takes in a line from the txt file and outputs the description of a Todo object."},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"     * @param str The line read in from the txt file."},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string that is the description of the Todo object."},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"    public String parseTodoDescription(String str) {"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"        return str.substring(str.indexOf(\"  \") + 2);"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"     * Takes in a line from the txt file and outputs the description of"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"     * a Event or Deadline object."},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"     * @param str The line read in from the txt file."},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string that is the description of a Event or Deadline object."},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"    public String parseDeadlineEventDescription(String str) {"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        return str.substring(str.indexOf(\"  \") + 2, str.indexOf(\" (\") + 1);"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"     * Takes in a line from the txt file and outputs the date of a Deadline object"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"     * as a string."},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"     * @param str The line read in from the txt file."},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string that is the date of a Deadline object."},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"    public String parseDateTimeDeadline(String str) {"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        return str.substring(str.indexOf(\"by: \") + 4, str.indexOf(\")\"));"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"     * Takes in a line from the txt file and outputs the date of a Event object"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"     * as a string."},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"     * @param str The line read in from the txt file."},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string that is the date of an Event object."},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"    public String parseDateTimeEvent(String str) {"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"        return str.substring(str.indexOf(\"at: \") + 4, str.indexOf(\")\"));"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"     * Checks whether a string is a number in String type."},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"     * @param str The string to be checked."},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"     * @return True if the string is a number in String type, false otherwise."},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"    public static boolean isNumber(String str) {"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"            Integer.parseInt(str);"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"            return false;"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"        return true;"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":64}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import java.io.PrintWriter;"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":" * Handles the reading and writing of information to an external file."},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    private String filepath;"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    private Parser parser;"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"     * Create and initialize a Storage object."},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"     * @param filepath The path of the file to be written to and read from."},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    Storage(String filepath) {"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        this.filepath \u003d filepath;"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"        parser \u003d new Parser();"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"     * Reads the existing txt file and stores the text into Task objects."},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"     * If the file does not exist, it creates a new file."},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"     * @return the list of tasks that contains the task objects."},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"    public ArrayList\u003cTask\u003e load() {"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        assert tasks !\u003d null : \"tasks cannot be null\";"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"            File myFile \u003d new File(\"duke.txt\");"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"            myFile.createNewFile();"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"            decideTaskType(myFile);"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"        } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"            System.out.println(\"An error occurred\");"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"            e.printStackTrace();"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"        return tasks;"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"     * Decides based on the text file, what type of Task should be stored."},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"     * @param myFile The file to read."},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"     * @throws FileNotFoundException If file is not found."},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"    public void decideTaskType(File myFile) throws FileNotFoundException {"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"        Scanner myReader \u003d new Scanner(myFile);"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"        while (myReader.hasNextLine()) {"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"            String type \u003d myReader.nextLine();"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"            if (type.contains(\"[T]\")) {"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"                loadTodo(type);"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"            } else if (type.contains(\"[D]\")) {"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"                loadDeadline(type);"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"            } else if (type.contains(\"[E]\")) {"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"                loadEvent(type);"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"        myReader.close();"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"     * Saves the current information into a txt file."},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"     * @throws FileNotFoundException If a file duke.txt is not found."},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"    public void save() throws FileNotFoundException {"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"        PrintWriter myWriter \u003d new PrintWriter(\"duke.txt\");"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"        for (Task t : TaskList.getTasklist()) {"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"            myWriter.println(t.toString());"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"        myWriter.flush();"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"        myWriter.close();"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"     * Loads a Todo object from the file."},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"     * @param type A String that determines what type of Task is read."},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"    private void loadTodo(String type) {"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"        String description \u003d parser.parseTodoDescription(type);"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"        Task toAdd \u003d new Todo(description);"},{"lineNumber":91,"author":{"gitId":"fairyinabottle4"},"content":"        if (type.contains(\"\\u2713\")) {"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"            toAdd.markAsDone();"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"        tasks.add(toAdd);"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":97,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"fairyinabottle4"},"content":"     * Loads a Deadline object from the file."},{"lineNumber":99,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"fairyinabottle4"},"content":"     * @param type A String that determines what type of Task is read."},{"lineNumber":101,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"fairyinabottle4"},"content":"    private void loadDeadline(String type) {"},{"lineNumber":103,"author":{"gitId":"fairyinabottle4"},"content":"        String description \u003d parser.parseDeadlineEventDescription(type);"},{"lineNumber":104,"author":{"gitId":"fairyinabottle4"},"content":"        String dateString \u003d parser.parseDateTimeDeadline(type);"},{"lineNumber":105,"author":{"gitId":"fairyinabottle4"},"content":"        LocalDate date \u003d LocalDate.parse(dateString,"},{"lineNumber":106,"author":{"gitId":"fairyinabottle4"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"},{"lineNumber":107,"author":{"gitId":"fairyinabottle4"},"content":"        Task toAdd \u003d new Deadline(description, date);"},{"lineNumber":108,"author":{"gitId":"fairyinabottle4"},"content":"        if (type.contains(\"\\u2713\")) {"},{"lineNumber":109,"author":{"gitId":"fairyinabottle4"},"content":"            toAdd.markAsDone();"},{"lineNumber":110,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"fairyinabottle4"},"content":"        tasks.add(toAdd);"},{"lineNumber":112,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":114,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"fairyinabottle4"},"content":"     * Loads an Event object from the file."},{"lineNumber":116,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"fairyinabottle4"},"content":"     * @param type A String that determines what type of Task is read."},{"lineNumber":118,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"fairyinabottle4"},"content":"    private void loadEvent(String type) {"},{"lineNumber":120,"author":{"gitId":"fairyinabottle4"},"content":"        String description \u003d parser.parseDeadlineEventDescription(type);"},{"lineNumber":121,"author":{"gitId":"fairyinabottle4"},"content":"        String timeString \u003d parser.parseDateTimeEvent(type);"},{"lineNumber":122,"author":{"gitId":"fairyinabottle4"},"content":"        LocalDate time \u003d LocalDate.parse(timeString,"},{"lineNumber":123,"author":{"gitId":"fairyinabottle4"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"},{"lineNumber":124,"author":{"gitId":"fairyinabottle4"},"content":"        Task toAdd \u003d new Event(description, time);"},{"lineNumber":125,"author":{"gitId":"fairyinabottle4"},"content":"        if (type.contains(\"\\u2713\")) {"},{"lineNumber":126,"author":{"gitId":"fairyinabottle4"},"content":"            toAdd.markAsDone();"},{"lineNumber":127,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"fairyinabottle4"},"content":"        tasks.add(toAdd);"},{"lineNumber":129,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":130}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":" * A task object that describes what the task is."},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"    protected static int TODO_NUMBER \u003d 0;"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"    protected static int DEADLINE_NUMBER \u003d 1;"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    protected static int EVENT_NUMBER \u003d 2;"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    protected String description;"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    protected boolean isDone;"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    protected int taskType;"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"    Task(String description) {"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"        this.isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"     * Indicates whether a task is completed. If that is the case, a tick will be displayed."},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a tick if isDone is true. Else, it will return an empty space."},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"    public String getStatusIcon() {"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        return (isDone ? \"\\u2713\" : \" \");"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"     * Changes the status of a Task from undone to done."},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"    public void markAsDone() {"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        this.isDone \u003d true;"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"     * Gets the type of task."},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"     * @return an integer representing the type of task."},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"    public int getTaskType() {"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"        return this.taskType;"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates a string representation of the Task object."},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string representation of the Task object."},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"    public String toString() {"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"        String indicator \u003d getStatusIcon();"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"        return \"[\" + indicator + \"]  \" + description;"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":58}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.Comparator;"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":" * Abstracts the data structure and relevant methods used to store the Task objects."},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":" * An ArrayList is used for this purpose."},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    private static ArrayList\u003cTask\u003e todoArray;"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    private static ArrayList\u003cEventDeadline\u003e eventDeadlineArray;"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"    private static ArrayList\u003c? extends Task\u003e overallArray;"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"        overallArray \u003d tasks;"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"        todoArray \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        eventDeadlineArray \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"        for (Task t : tasks) {"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"            if (t.getTaskType() \u003d\u003d 0) {"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"                todoArray.add(t);"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"                mergeArrays();"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"            if (t.getTaskType() \u003d\u003d 1 || t.getTaskType() \u003d\u003d 2) {"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"                eventDeadlineArray.add((EventDeadline) t);"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"                mergeArrays();"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"                sortByDate(eventDeadlineArray);"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"    TaskList() {"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"        overallArray \u003d new ArrayList\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"     * Adds a task object to the data structure."},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"     * @param task A task object."},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"    public void add(Task task) {"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"        System.out.println(task.getTaskType());"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"        if (task.getTaskType() \u003d\u003d 0) {"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"            todoArray.add(task);"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"            mergeArrays();"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"        if (task.getTaskType() \u003d\u003d 1 || task.getTaskType() \u003d\u003d 2) {"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"            eventDeadlineArray.add((EventDeadline) task);"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"            mergeArrays();"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"            sortByDate(eventDeadlineArray);"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"     * Find out the number of items in the data structure."},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"     * @return an int of the number of tasks in the ArrayList."},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"    public int getSize() {"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"        return overallArray.size();"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"     * Find out the number of items in the data structure."},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a String of the number of task objects in the ArrayList."},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"    public String getSizeString() {"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"        return \"\\n\" + \"Now you have \" + overallArray.size() + \" tasks in your list.\";"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"     * Obtain an item at a specific index in the data structure."},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"     * @param index Index where the item is to be retrieved."},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"     * @return the task object at the specific index in the ArrayList."},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"    public Task get(int index) {"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"        return overallArray.get(index);"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":82,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"     * Deletes an item at a specific index in the data structure."},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"     * @param index Index where the task object is to be deleted."},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"    public void remove(int index) {"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"        Task toRemove \u003d overallArray.get(index);"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"        if (toRemove.getTaskType() \u003d\u003d 0) {"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"            todoArray.remove(toRemove);"},{"lineNumber":91,"author":{"gitId":"fairyinabottle4"},"content":"            System.out.println(toRemove.toString());"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"            mergeArrays();"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"        if (toRemove.getTaskType() \u003d\u003d 1 || toRemove.getTaskType() \u003d\u003d 2) {"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":"            eventDeadlineArray.remove((EventDeadline) toRemove);"},{"lineNumber":96,"author":{"gitId":"fairyinabottle4"},"content":"            mergeArrays();"},{"lineNumber":97,"author":{"gitId":"fairyinabottle4"},"content":"            sortByDate(eventDeadlineArray);"},{"lineNumber":98,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":101,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"fairyinabottle4"},"content":"     * Allows other classes to ask for a copy of the data structure."},{"lineNumber":103,"author":{"gitId":"fairyinabottle4"},"content":"     * @return the ArrayList."},{"lineNumber":104,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"fairyinabottle4"},"content":"    public static ArrayList\u003c? extends Task\u003e getTasklist() {"},{"lineNumber":106,"author":{"gitId":"fairyinabottle4"},"content":"        return overallArray;"},{"lineNumber":107,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":109,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":110,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"fairyinabottle4"},"content":"     * Combines the Todo array with the EventDeadline array."},{"lineNumber":112,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"fairyinabottle4"},"content":"    public void mergeArrays() {"},{"lineNumber":114,"author":{"gitId":"fairyinabottle4"},"content":"        sortByDate(eventDeadlineArray);"},{"lineNumber":115,"author":{"gitId":"fairyinabottle4"},"content":"        ArrayList\u003cTask\u003e todoClone \u003d new ArrayList\u003c\u003e(todoArray);"},{"lineNumber":116,"author":{"gitId":"fairyinabottle4"},"content":"        for (EventDeadline e : eventDeadlineArray) {"},{"lineNumber":117,"author":{"gitId":"fairyinabottle4"},"content":"            todoClone.add((Task) e);"},{"lineNumber":118,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"fairyinabottle4"},"content":"        overallArray \u003d todoClone;"},{"lineNumber":120,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":122,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":123,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"fairyinabottle4"},"content":"     * Sorts the Events and Deadlines in the list according to date in ascending order."},{"lineNumber":125,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":126,"author":{"gitId":"fairyinabottle4"},"content":"     * @param list The list used to store Events and Deadlines"},{"lineNumber":127,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"fairyinabottle4"},"content":"    public static void sortByDate(ArrayList\u003c? extends EventDeadline\u003e list) {"},{"lineNumber":129,"author":{"gitId":"fairyinabottle4"},"content":"        Collections.sort(list, (Comparator\u003cEventDeadline\u003e) (o1, o2) -\u003e {"},{"lineNumber":130,"author":{"gitId":"fairyinabottle4"},"content":"            int compareDate \u003d 0;"},{"lineNumber":131,"author":{"gitId":"fairyinabottle4"},"content":"            compareDate \u003d o1.getDateInfo().compareTo(o2.getDateInfo());"},{"lineNumber":132,"author":{"gitId":"fairyinabottle4"},"content":"            return compareDate;"},{"lineNumber":133,"author":{"gitId":"fairyinabottle4"},"content":"        });"},{"lineNumber":134,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":135}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":" * Todos are Tasks that must be done but without a time constraint."},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"public class Todo extends Task {"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"    Todo(String description) {"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"        super.taskType \u003d TODO_NUMBER;"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates a string representation of the Todo object."},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a string representation of the Todo object."},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":20}},{"path":"src/main/java/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":" * Handles the todo command, where user adds a Todo object to the list."},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"public class TodoCommand extends AddCommand {"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"    TodoCommand(String input, String[] parts, TaskList tasks) {"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"        super(input, parts, tasks);"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns a string representation of the Todo object just added."},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"     * @return A string which represents the Todo just added."},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    public String getString() {"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"        assert tasks !\u003d null : \"tasks cannot be null\";"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"        StringBuilder str \u003d new StringBuilder();"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"            str.append(\" \");"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"            str.append(parts[i]);"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"        String taskString \u003d str.toString();"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"        Todo todo \u003d new Todo(taskString);"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        tasks.add(todo);"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        return Ui.showAddText() + todo.toString() + tasks.getSizeString();"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":29}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":" * Ui is a class that handles the input/output of Duke."},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":" */"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"    Ui() {"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns the text when a task is marked as done."},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"     * @return String that displays the message when a task is marked as done."},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    public static String showDoneText() {"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"        return \"Here, I\u0027ve marked this task as done: \\n\";"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns the text when a task is added to the list."},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"     * @return String that displays the task just added to the list."},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    public static String showAddText() {"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        return \"Here, I\u0027ve added this task to the list: \\n\";"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns the text when a list of tasks is requested."},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"     * @return String that precedes the list of tasks."},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"    public static String showListText() {"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"        return \"Here are the tasks in your list: \\n\";"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns the text when a list of tasks that matches to keyword is requested."},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"     * @return String that precedes the list of tasks that matches to keyword."},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"    public static String showFindText() {"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"        return \"Here are the tasks that matches the keyword: \\n\";"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns the app welcome message when the app is first opened."},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"     * @return String that displays the Duke welcome message"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"    public static String showWelcomeText() {"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"        return \"Welcome! What can I do for you today?\";"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"    public static String showDeleteText() {"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"        return \"Here, I\u0027ve deleted this task from the list: \\n\";"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"    public static String showGoodbyeText() {"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"        return \"See you next time!\";"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"    public static String showErrorMessage(String e) {"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"        return \"Oh no. There is something wrong :(\\n\" + e;"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":65}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"fairyinabottle4":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"fairyinabottle4":19}},{"path":"test/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"class EventTest {"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    void testToString() {"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"        Event event \u003d new Event(\"project meeting\", LocalDate.parse(\"2021-03-03\"));"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(\"[E][ ]  project meeting (at: 03/03/2021)\", event.toString());"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":14}},{"path":"test/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"class ParserTest {"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"    void parseDateTimeDeadline() {"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"        String sample \u003d \"[D][ ]   return book   (by: 31/01/2021)\";"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(\"31/01/2021\", parser.parseDateTimeDeadline(sample));"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    void parseDateTimeEvent() {"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"        String sample \u003d \"[E][✓]   project meeting   (at: 01/02/2021)\";"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(\"01/02/2021\", parser.parseDateTimeEvent(sample));"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    void parseTodoDescription() {"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        String sample \u003d \"[T][ ]   borrow book\";"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(\" borrow book\", parser.parseTodoDescription(sample));"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":""},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"    void parseDeadlineEventDescription() {"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"        String sample \u003d \"[D][ ]   return book   (by: 31/01/2021)\";"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(\" return book   \", parser.parseDeadlineEventDescription(sample));"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"}"}],"authorContributionMap":{"fairyinabottle4":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"list"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"bye"}],"authorContributionMap":{"fairyinabottle4":6}}]
