[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"umergta"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"umergta":1,"-":45}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":""},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":""},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":"    private String deadlineDateString;"},{"lineNumber":8,"author":{"gitId":"umergta"},"content":"    private LocalDate deadlineDate;"},{"lineNumber":9,"author":{"gitId":"umergta"},"content":""},{"lineNumber":10,"author":{"gitId":"umergta"},"content":"    Deadline(String deadlineDateString, String deadlineDetail) {"},{"lineNumber":11,"author":{"gitId":"umergta"},"content":"        super(deadlineDetail);"},{"lineNumber":12,"author":{"gitId":"umergta"},"content":"        try {"},{"lineNumber":13,"author":{"gitId":"umergta"},"content":"            this.deadlineDate \u003d Task.dateStringToDate(deadlineDateString);"},{"lineNumber":14,"author":{"gitId":"umergta"},"content":"            this.deadlineDateString \u003d deadlineDate.getMonth().toString().toLowerCase() + \" \" +"},{"lineNumber":15,"author":{"gitId":"umergta"},"content":"                    deadlineDate.getDayOfMonth() + \" \" + deadlineDate.getYear();"},{"lineNumber":16,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"umergta"},"content":"        catch (DateTimeException e) {"},{"lineNumber":18,"author":{"gitId":"umergta"},"content":"            System.err.println(\"Please input date in yyyy-MM-dd format.\");"},{"lineNumber":19,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"umergta"},"content":""},{"lineNumber":22,"author":{"gitId":"umergta"},"content":"    public String getDeadline() {"},{"lineNumber":23,"author":{"gitId":"umergta"},"content":"        return this.deadlineDateString;"},{"lineNumber":24,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"umergta"},"content":""},{"lineNumber":26,"author":{"gitId":"umergta"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"umergta"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"umergta"},"content":"        return \"[D] | \" + super.toString() + \" | by: \" + this.deadlineDateString;"},{"lineNumber":29,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"umergta"},"content":"}"}],"authorContributionMap":{"umergta":30}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":""},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":""},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":" * Duke represents a (CLI) task list application."},{"lineNumber":8,"author":{"gitId":"umergta"},"content":" * It takes in the following types of tasks: todo, deadline, event."},{"lineNumber":9,"author":{"gitId":"umergta"},"content":" * It processes these commands too: list, delete, done, bye"},{"lineNumber":10,"author":{"gitId":"umergta"},"content":" * Task lists of individual users are saved locally and retrieved by running this class."},{"lineNumber":11,"author":{"gitId":"umergta"},"content":" */"},{"lineNumber":12,"author":{"gitId":"umergta"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"umergta"},"content":"    private final Ui ui;"},{"lineNumber":15,"author":{"gitId":"umergta"},"content":"    private TaskList tasks;"},{"lineNumber":16,"author":{"gitId":"umergta"},"content":"    private Storage storage;"},{"lineNumber":17,"author":{"gitId":"umergta"},"content":"    private final Parser parser;"},{"lineNumber":18,"author":{"gitId":"umergta"},"content":""},{"lineNumber":19,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"umergta"},"content":"     * Constructor for Duke class."},{"lineNumber":21,"author":{"gitId":"umergta"},"content":"     * Initializes Ui object to print Ui."},{"lineNumber":22,"author":{"gitId":"umergta"},"content":"     * Initializes parser object to make sense of data passed in and output accordingly."},{"lineNumber":23,"author":{"gitId":"umergta"},"content":"     * initializes storage object and initializes user\u0027s saved task list into a TaskList object."},{"lineNumber":24,"author":{"gitId":"umergta"},"content":"     * @param filePath of where user\u0027s task list is saved."},{"lineNumber":25,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"umergta"},"content":"    public Duke(String filePath) {"},{"lineNumber":27,"author":{"gitId":"umergta"},"content":"        ui \u003d new Ui();"},{"lineNumber":28,"author":{"gitId":"umergta"},"content":"        parser \u003d new Parser();"},{"lineNumber":29,"author":{"gitId":"umergta"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"umergta"},"content":"            storage \u003d new Storage(filePath);"},{"lineNumber":31,"author":{"gitId":"umergta"},"content":"            tasks \u003d new TaskList(storage.getTaskList());"},{"lineNumber":32,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"umergta"},"content":"        catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"umergta"},"content":"            System.err.println(e.getMessage());"},{"lineNumber":35,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"umergta"},"content":""},{"lineNumber":38,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"umergta"},"content":"     * entry point for the Duke program."},{"lineNumber":40,"author":{"gitId":"umergta"},"content":"     * Initializes new Duke object with filePath: \"data/tasks.txt\" and calls run method."},{"lineNumber":41,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"umergta"},"content":"     * @param args arguments for main method"},{"lineNumber":43,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"umergta"},"content":"    public static void main(String[] args) {"},{"lineNumber":45,"author":{"gitId":"umergta"},"content":"        new Duke(\"data/tasks.txt\").run();"},{"lineNumber":46,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"umergta"},"content":""},{"lineNumber":48,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"umergta"},"content":"     * Processes the user input and print out messages and Ui accordingly."},{"lineNumber":50,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"umergta"},"content":"     * @throws DukeException If invalid command. Valid commands: todo, event, deadline, delete, done, list, bye"},{"lineNumber":52,"author":{"gitId":"umergta"},"content":"     * @throws DukeException If there is no message after the todo command."},{"lineNumber":53,"author":{"gitId":"umergta"},"content":"     * @see Scanner"},{"lineNumber":54,"author":{"gitId":"umergta"},"content":"     * @see Ui"},{"lineNumber":55,"author":{"gitId":"umergta"},"content":"     * @see Parser"},{"lineNumber":56,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"umergta"},"content":"    public void run() {"},{"lineNumber":58,"author":{"gitId":"umergta"},"content":"        ui.printWelcomeGreeting();"},{"lineNumber":59,"author":{"gitId":"umergta"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":60,"author":{"gitId":"umergta"},"content":"        boolean isBye \u003d false;"},{"lineNumber":61,"author":{"gitId":"umergta"},"content":"        while (!isBye) {"},{"lineNumber":62,"author":{"gitId":"umergta"},"content":"            String command \u003d sc.nextLine();"},{"lineNumber":63,"author":{"gitId":"umergta"},"content":"            String[] commandArr \u003d command.split(\" \");"},{"lineNumber":64,"author":{"gitId":"umergta"},"content":"            Task newTask;"},{"lineNumber":65,"author":{"gitId":"umergta"},"content":"            ui.printHorizontalRule();"},{"lineNumber":66,"author":{"gitId":"umergta"},"content":"            try {"},{"lineNumber":67,"author":{"gitId":"umergta"},"content":"                final String EXIT_COMMAND \u003d \"bye\";"},{"lineNumber":68,"author":{"gitId":"umergta"},"content":"                final String LIST_COMMAND \u003d \"list\";"},{"lineNumber":69,"author":{"gitId":"umergta"},"content":"                final String DONE_COMMAND \u003d \"done\";"},{"lineNumber":70,"author":{"gitId":"umergta"},"content":"                final String DELETE_COMMAND \u003d \"delete\";"},{"lineNumber":71,"author":{"gitId":"umergta"},"content":"                final String ADD_TODO_COMMAND \u003d \"todo\";"},{"lineNumber":72,"author":{"gitId":"umergta"},"content":"                final String ADD_DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":73,"author":{"gitId":"umergta"},"content":"                final String ADD_EVENT_COMMAND \u003d \"event\";"},{"lineNumber":74,"author":{"gitId":"umergta"},"content":"                final String FIND_COMMAND \u003d \"find\";"},{"lineNumber":75,"author":{"gitId":"umergta"},"content":"                switch (commandArr[0]) {"},{"lineNumber":76,"author":{"gitId":"umergta"},"content":"                case EXIT_COMMAND:"},{"lineNumber":77,"author":{"gitId":"umergta"},"content":"                    ui.printExitMessage();"},{"lineNumber":78,"author":{"gitId":"umergta"},"content":"                    sc.close();"},{"lineNumber":79,"author":{"gitId":"umergta"},"content":"                    storage.writeData(tasks.getTaskList());"},{"lineNumber":80,"author":{"gitId":"umergta"},"content":"                    isBye \u003d true;"},{"lineNumber":81,"author":{"gitId":"umergta"},"content":"                    break;"},{"lineNumber":82,"author":{"gitId":"umergta"},"content":"                case LIST_COMMAND:"},{"lineNumber":83,"author":{"gitId":"umergta"},"content":"                    ui.printTaskList(tasks);"},{"lineNumber":84,"author":{"gitId":"umergta"},"content":"                    break;"},{"lineNumber":85,"author":{"gitId":"umergta"},"content":"                case DONE_COMMAND:"},{"lineNumber":86,"author":{"gitId":"umergta"},"content":"                    int taskNumber \u003d Integer.parseInt(commandArr[1]);"},{"lineNumber":87,"author":{"gitId":"umergta"},"content":"                    ui.printDoneTask(tasks, taskNumber);"},{"lineNumber":88,"author":{"gitId":"umergta"},"content":"                    break;"},{"lineNumber":89,"author":{"gitId":"umergta"},"content":"                case ADD_TODO_COMMAND:"},{"lineNumber":90,"author":{"gitId":"umergta"},"content":"                    if (commandArr.length \u003d\u003d 1) {"},{"lineNumber":91,"author":{"gitId":"umergta"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":92,"author":{"gitId":"umergta"},"content":"                    }"},{"lineNumber":93,"author":{"gitId":"umergta"},"content":"                    else {"},{"lineNumber":94,"author":{"gitId":"umergta"},"content":"                        newTask \u003d parser.parseAddTodo(command);"},{"lineNumber":95,"author":{"gitId":"umergta"},"content":"                        ui.printAddedTask(tasks, newTask);"},{"lineNumber":96,"author":{"gitId":"umergta"},"content":"                    }"},{"lineNumber":97,"author":{"gitId":"umergta"},"content":"                    break;"},{"lineNumber":98,"author":{"gitId":"umergta"},"content":"                case ADD_DEADLINE_COMMAND:"},{"lineNumber":99,"author":{"gitId":"umergta"},"content":"                    newTask \u003d parser.parseAddDeadline(command);"},{"lineNumber":100,"author":{"gitId":"umergta"},"content":"                    ui.printAddedTask(tasks, newTask);"},{"lineNumber":101,"author":{"gitId":"umergta"},"content":"                    break;"},{"lineNumber":102,"author":{"gitId":"umergta"},"content":"                case ADD_EVENT_COMMAND:"},{"lineNumber":103,"author":{"gitId":"umergta"},"content":"                    newTask \u003d parser.parseAddEvent(command);"},{"lineNumber":104,"author":{"gitId":"umergta"},"content":"                    ui.printAddedTask(tasks, newTask);"},{"lineNumber":105,"author":{"gitId":"umergta"},"content":"                    break;"},{"lineNumber":106,"author":{"gitId":"umergta"},"content":"                case DELETE_COMMAND:"},{"lineNumber":107,"author":{"gitId":"umergta"},"content":"                    int taskNumToBeDeleted \u003d parser.parseDeleteCommand(command);"},{"lineNumber":108,"author":{"gitId":"umergta"},"content":"                    ui.printDeletedTask(tasks, taskNumToBeDeleted);"},{"lineNumber":109,"author":{"gitId":"umergta"},"content":"                    break;"},{"lineNumber":110,"author":{"gitId":"umergta"},"content":"                case FIND_COMMAND:"},{"lineNumber":111,"author":{"gitId":"umergta"},"content":"                    TaskList tasksFound \u003d parser.parseFindCommand(command, tasks);"},{"lineNumber":112,"author":{"gitId":"umergta"},"content":"                    ui.printFoundTasks(tasksFound);"},{"lineNumber":113,"author":{"gitId":"umergta"},"content":"                    break;"},{"lineNumber":114,"author":{"gitId":"umergta"},"content":"                default:"},{"lineNumber":115,"author":{"gitId":"umergta"},"content":"                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":116,"author":{"gitId":"umergta"},"content":"                }"},{"lineNumber":117,"author":{"gitId":"umergta"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"umergta"},"content":"            catch (DukeException ex) {"},{"lineNumber":119,"author":{"gitId":"umergta"},"content":"                System.err.println(ex.getMessage());"},{"lineNumber":120,"author":{"gitId":"umergta"},"content":"            }"},{"lineNumber":121,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"umergta"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"umergta":122,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":""},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"public class DukeException extends IllegalArgumentException {"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":"    public DukeException(String message) {"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":""},{"lineNumber":8,"author":{"gitId":"umergta"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"umergta"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"umergta"},"content":"        return this.getMessage();"},{"lineNumber":11,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"umergta"},"content":"}"}],"authorContributionMap":{"umergta":12}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":""},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":""},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":"    private String eventDateString;"},{"lineNumber":8,"author":{"gitId":"umergta"},"content":"    private LocalDate eventDate;"},{"lineNumber":9,"author":{"gitId":"umergta"},"content":""},{"lineNumber":10,"author":{"gitId":"umergta"},"content":"    Event(String eventDateString, String eventDetail) {"},{"lineNumber":11,"author":{"gitId":"umergta"},"content":"        super(eventDetail);"},{"lineNumber":12,"author":{"gitId":"umergta"},"content":"        try {"},{"lineNumber":13,"author":{"gitId":"umergta"},"content":"            this.eventDate \u003d Task.dateStringToDate(eventDateString);"},{"lineNumber":14,"author":{"gitId":"umergta"},"content":"            this.eventDateString \u003d eventDate.getMonth().toString().toLowerCase() + \" \" +"},{"lineNumber":15,"author":{"gitId":"umergta"},"content":"                    eventDate.getDayOfMonth() + \" \" + eventDate.getYear();"},{"lineNumber":16,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"umergta"},"content":"        catch (DateTimeException e) {"},{"lineNumber":18,"author":{"gitId":"umergta"},"content":"            System.err.println(\"Please input date in yyyy-MM-dd format.\");"},{"lineNumber":19,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"umergta"},"content":""},{"lineNumber":22,"author":{"gitId":"umergta"},"content":"    public String getEventDateString() {"},{"lineNumber":23,"author":{"gitId":"umergta"},"content":"        return this.eventDateString;"},{"lineNumber":24,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"umergta"},"content":""},{"lineNumber":26,"author":{"gitId":"umergta"},"content":"    public LocalDate getEventDate() {"},{"lineNumber":27,"author":{"gitId":"umergta"},"content":"        return this.eventDate;"},{"lineNumber":28,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"umergta"},"content":""},{"lineNumber":30,"author":{"gitId":"umergta"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"umergta"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"umergta"},"content":"        return \"[E] | \" + super.toString() + \" | at: \" + this.eventDateString;"},{"lineNumber":33,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"umergta"},"content":"}"}],"authorContributionMap":{"umergta":34}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":""},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"import java.time.Month;"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":""},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":" * Represents a parser that makes sense of user input by reformatting data, making objects etc."},{"lineNumber":8,"author":{"gitId":"umergta"},"content":" * Processes commands and returns parsed information"},{"lineNumber":9,"author":{"gitId":"umergta"},"content":" */"},{"lineNumber":10,"author":{"gitId":"umergta"},"content":"public class Parser {"},{"lineNumber":11,"author":{"gitId":"umergta"},"content":""},{"lineNumber":12,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"umergta"},"content":"     * Returns formattedDate in \"yyyy-MM-DD\" format from unformatted \"month day yyyy\"."},{"lineNumber":14,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"umergta"},"content":"     * @param unformattedDate String in \"month day year\" format."},{"lineNumber":16,"author":{"gitId":"umergta"},"content":"     * @return formatted date in \"yyyy-MM-DD\" format."},{"lineNumber":17,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"umergta"},"content":"    public String parseDate(String unformattedDate) {"},{"lineNumber":19,"author":{"gitId":"umergta"},"content":"        String[] dateArr \u003d unformattedDate.split(\" \");"},{"lineNumber":20,"author":{"gitId":"umergta"},"content":"        String monthString \u003d String.format(\"%02d\", Month.valueOf(dateArr[0].toUpperCase()).getValue());"},{"lineNumber":21,"author":{"gitId":"umergta"},"content":"        String day \u003d String.format(\"%02d\", Integer.parseInt(dateArr[1]));"},{"lineNumber":22,"author":{"gitId":"umergta"},"content":"        String year \u003d dateArr[2];"},{"lineNumber":23,"author":{"gitId":"umergta"},"content":"        String formattedDate \u003d year + \"-\" + monthString + \"-\" + day;"},{"lineNumber":24,"author":{"gitId":"umergta"},"content":"        return formattedDate;"},{"lineNumber":25,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"umergta"},"content":""},{"lineNumber":27,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"umergta"},"content":"     * Processes a \"todo\" command and returns a ToDo object."},{"lineNumber":29,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"umergta"},"content":"     * @param command command passed in by the user."},{"lineNumber":31,"author":{"gitId":"umergta"},"content":"     * @return ToDo object."},{"lineNumber":32,"author":{"gitId":"umergta"},"content":"     * @see Deadline"},{"lineNumber":33,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"umergta"},"content":"    public ToDo parseAddTodo(String command) {"},{"lineNumber":35,"author":{"gitId":"umergta"},"content":"        System.out.println(command.substring(5));"},{"lineNumber":36,"author":{"gitId":"umergta"},"content":"        ToDo newTodo \u003d new ToDo(command.substring(5));"},{"lineNumber":37,"author":{"gitId":"umergta"},"content":"        return newTodo;"},{"lineNumber":38,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"umergta"},"content":""},{"lineNumber":40,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"umergta"},"content":"     * Processes a \"deadline\" command and returns a Deadline object."},{"lineNumber":42,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"umergta"},"content":"     * @param command command passed in by the user."},{"lineNumber":44,"author":{"gitId":"umergta"},"content":"     * @return Deadline object."},{"lineNumber":45,"author":{"gitId":"umergta"},"content":"     * @see Deadline"},{"lineNumber":46,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"umergta"},"content":"    public Deadline parseAddDeadline(String command) {"},{"lineNumber":48,"author":{"gitId":"umergta"},"content":"        String[] deadlineAndTask \u003d command.split(\" /by \");"},{"lineNumber":49,"author":{"gitId":"umergta"},"content":"        return new Deadline(deadlineAndTask[1], deadlineAndTask[0].substring(9));"},{"lineNumber":50,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"umergta"},"content":""},{"lineNumber":52,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"umergta"},"content":"     * Processes a \"event\" command and returns an Event object."},{"lineNumber":54,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"umergta"},"content":"     * @param command command passed in by the user."},{"lineNumber":56,"author":{"gitId":"umergta"},"content":"     * @return Event object."},{"lineNumber":57,"author":{"gitId":"umergta"},"content":"     * @see Event"},{"lineNumber":58,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"umergta"},"content":"    public Event parseAddEvent(String command) {"},{"lineNumber":60,"author":{"gitId":"umergta"},"content":"        String[] eventTimeAndTask \u003d command.split(\" /at \");"},{"lineNumber":61,"author":{"gitId":"umergta"},"content":"        //offset of 6 to remove \"event \" frm statement"},{"lineNumber":62,"author":{"gitId":"umergta"},"content":"        return new Event(eventTimeAndTask[1], eventTimeAndTask[0].substring(6));"},{"lineNumber":63,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"umergta"},"content":""},{"lineNumber":65,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"umergta"},"content":"     * Processes a \"delete\" command and returns the index of the Task to be deleted from Task List."},{"lineNumber":67,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"umergta"},"content":"     * @param command command passed in by the user."},{"lineNumber":69,"author":{"gitId":"umergta"},"content":"     * @return Index of Task to be deleted."},{"lineNumber":70,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"umergta"},"content":"    public int parseDeleteCommand(String command) {"},{"lineNumber":72,"author":{"gitId":"umergta"},"content":"        return Integer.parseInt(command.split(\" \")[1]);"},{"lineNumber":73,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"umergta"},"content":""},{"lineNumber":75,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"umergta"},"content":"     * Processes a \"find\" command and returns a TaskList object containing all Tasks that match the string searched."},{"lineNumber":77,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"umergta"},"content":"     * @param command  command passed in by the user."},{"lineNumber":79,"author":{"gitId":"umergta"},"content":"     * @param userList TaskList of the user."},{"lineNumber":80,"author":{"gitId":"umergta"},"content":"     * @return TaskList containing tasks for which the keywords are matched."},{"lineNumber":81,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"umergta"},"content":"    public TaskList parseFindCommand(String command, TaskList userList) {"},{"lineNumber":83,"author":{"gitId":"umergta"},"content":"        String keywords \u003d command.substring(5);"},{"lineNumber":84,"author":{"gitId":"umergta"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();"},{"lineNumber":85,"author":{"gitId":"umergta"},"content":"        for (Task task : userList.getTaskList()) {"},{"lineNumber":86,"author":{"gitId":"umergta"},"content":"            if (task.getTaskDetail().contains(keywords)) {"},{"lineNumber":87,"author":{"gitId":"umergta"},"content":"                results.add(task);"},{"lineNumber":88,"author":{"gitId":"umergta"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"umergta"},"content":"        return new TaskList(results);"},{"lineNumber":91,"author":{"gitId":"umergta"},"content":""},{"lineNumber":92,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"umergta"},"content":""},{"lineNumber":94,"author":{"gitId":"umergta"},"content":"}"},{"lineNumber":95,"author":{"gitId":"umergta"},"content":""}],"authorContributionMap":{"umergta":95}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":""},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"umergta"},"content":""},{"lineNumber":9,"author":{"gitId":"umergta"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"umergta"},"content":" * Represents the storage for user\u0027s task list."},{"lineNumber":11,"author":{"gitId":"umergta"},"content":" * Reads and writes data into user\u0027s saved file that stores task list."},{"lineNumber":12,"author":{"gitId":"umergta"},"content":" */"},{"lineNumber":13,"author":{"gitId":"umergta"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"umergta"},"content":"    private final String filePath;"},{"lineNumber":15,"author":{"gitId":"umergta"},"content":"    private final Parser parser \u003d new Parser();"},{"lineNumber":16,"author":{"gitId":"umergta"},"content":""},{"lineNumber":17,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"umergta"},"content":"     * Constructor for Storage object."},{"lineNumber":19,"author":{"gitId":"umergta"},"content":"     * Makes file tasks.txt if non-existent. Else, validates existence of file"},{"lineNumber":20,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"umergta"},"content":"     * @param filePath"},{"lineNumber":22,"author":{"gitId":"umergta"},"content":"     * @throws IOException if filePath is not \"data/tasks.txt\""},{"lineNumber":23,"author":{"gitId":"umergta"},"content":"     * @see Files"},{"lineNumber":24,"author":{"gitId":"umergta"},"content":"     * @see Paths"},{"lineNumber":25,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"umergta"},"content":"    public Storage(String filePath) throws IOException {"},{"lineNumber":27,"author":{"gitId":"umergta"},"content":"        String parentPath \u003d filePath.split(\"tasks.txt\")[0];"},{"lineNumber":28,"author":{"gitId":"umergta"},"content":"        if (!Files.exists(Paths.get(parentPath))) {"},{"lineNumber":29,"author":{"gitId":"umergta"},"content":"            Files.createDirectories(Paths.get(parentPath));"},{"lineNumber":30,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"umergta"},"content":"        if (!Files.exists(Paths.get(filePath))) {"},{"lineNumber":32,"author":{"gitId":"umergta"},"content":"            Files.createFile(Paths.get(filePath));"},{"lineNumber":33,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"umergta"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":35,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"umergta"},"content":""},{"lineNumber":37,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"umergta"},"content":"     * Returns user\u0027s task list that is in the saved file on user\u0027s local disk."},{"lineNumber":39,"author":{"gitId":"umergta"},"content":"     * Initializes objects using the String data in tasks.txt file."},{"lineNumber":40,"author":{"gitId":"umergta"},"content":"     * Parses the data saved and adds correct form of tasks in the TaskList object"},{"lineNumber":41,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"umergta"},"content":"     * @return ArrayList of user\u0027s tasks."},{"lineNumber":43,"author":{"gitId":"umergta"},"content":"     * @throws IOException if incorrect data in file or incorrectly parsed."},{"lineNumber":44,"author":{"gitId":"umergta"},"content":"     * @see Parser"},{"lineNumber":45,"author":{"gitId":"umergta"},"content":"     * @see TaskList"},{"lineNumber":46,"author":{"gitId":"umergta"},"content":"     * @see Task"},{"lineNumber":47,"author":{"gitId":"umergta"},"content":"     * @see ToDo"},{"lineNumber":48,"author":{"gitId":"umergta"},"content":"     * @see Event"},{"lineNumber":49,"author":{"gitId":"umergta"},"content":"     * @see Deadline"},{"lineNumber":50,"author":{"gitId":"umergta"},"content":"     * @see Paths"},{"lineNumber":51,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"umergta"},"content":"    public ArrayList\u003cTask\u003e getTaskList() throws IOException {"},{"lineNumber":53,"author":{"gitId":"umergta"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":54,"author":{"gitId":"umergta"},"content":"        List\u003cString\u003e fileLines \u003d Files.readAllLines(Paths.get(filePath));"},{"lineNumber":55,"author":{"gitId":"umergta"},"content":"        for (int i \u003d 0; i \u003c fileLines.size(); i++) {"},{"lineNumber":56,"author":{"gitId":"umergta"},"content":"            String line \u003d fileLines.get(i);"},{"lineNumber":57,"author":{"gitId":"umergta"},"content":"            String[] userTask \u003d line.split(\" \\\\| \");"},{"lineNumber":58,"author":{"gitId":"umergta"},"content":"            String eventType \u003d userTask[0];"},{"lineNumber":59,"author":{"gitId":"umergta"},"content":"            Task taskInList;"},{"lineNumber":60,"author":{"gitId":"umergta"},"content":"            try {"},{"lineNumber":61,"author":{"gitId":"umergta"},"content":"                switch (eventType) {"},{"lineNumber":62,"author":{"gitId":"umergta"},"content":"                case (\"[T]\"):"},{"lineNumber":63,"author":{"gitId":"umergta"},"content":"                    taskInList \u003d new ToDo(userTask[2]);"},{"lineNumber":64,"author":{"gitId":"umergta"},"content":"                    taskList.add(taskInList);"},{"lineNumber":65,"author":{"gitId":"umergta"},"content":"                    break;"},{"lineNumber":66,"author":{"gitId":"umergta"},"content":"                case (\"[E]\"):"},{"lineNumber":67,"author":{"gitId":"umergta"},"content":"                    String eventDuration \u003d parser.parseDate(userTask[3].split(\"at: \")[1]);"},{"lineNumber":68,"author":{"gitId":"umergta"},"content":"                    String eventDetail \u003d userTask[2];"},{"lineNumber":69,"author":{"gitId":"umergta"},"content":"                    taskInList \u003d new Event(eventDuration, eventDetail);"},{"lineNumber":70,"author":{"gitId":"umergta"},"content":"                    taskList.add(taskInList);"},{"lineNumber":71,"author":{"gitId":"umergta"},"content":"                    break;"},{"lineNumber":72,"author":{"gitId":"umergta"},"content":"                case (\"[D]\"):"},{"lineNumber":73,"author":{"gitId":"umergta"},"content":"                    String deadline \u003d parser.parseDate(userTask[3].split(\"by: \")[1]);"},{"lineNumber":74,"author":{"gitId":"umergta"},"content":"                    String deadlineDetail \u003d userTask[2];"},{"lineNumber":75,"author":{"gitId":"umergta"},"content":"                    taskInList \u003d new Deadline(deadline, deadlineDetail);"},{"lineNumber":76,"author":{"gitId":"umergta"},"content":"                    taskList.add(taskInList);"},{"lineNumber":77,"author":{"gitId":"umergta"},"content":"                    break;"},{"lineNumber":78,"author":{"gitId":"umergta"},"content":"                default:"},{"lineNumber":79,"author":{"gitId":"umergta"},"content":""},{"lineNumber":80,"author":{"gitId":"umergta"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"umergta"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"umergta"},"content":"            catch (Exception e) {"},{"lineNumber":83,"author":{"gitId":"umergta"},"content":"                System.err.println(e.getMessage());"},{"lineNumber":84,"author":{"gitId":"umergta"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"umergta"},"content":"        return taskList;"},{"lineNumber":87,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"umergta"},"content":""},{"lineNumber":89,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"umergta"},"content":"     * Writes user\u0027s task list into tasks.txt local file."},{"lineNumber":91,"author":{"gitId":"umergta"},"content":"     * If the task list isnt been able to be written into filePath, IOException thrown."},{"lineNumber":92,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"umergta"},"content":"     * @param data : the user\u0027s task list"},{"lineNumber":94,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"umergta"},"content":"    public void writeData(List\u003cTask\u003e data) {"},{"lineNumber":96,"author":{"gitId":"umergta"},"content":"        String stringOfData \u003d \"\";"},{"lineNumber":97,"author":{"gitId":"umergta"},"content":"        for (int i \u003d 0; i \u003c data.size(); i++) {"},{"lineNumber":98,"author":{"gitId":"umergta"},"content":"            if (i \u003d\u003d data.size() - 1) {"},{"lineNumber":99,"author":{"gitId":"umergta"},"content":"                stringOfData +\u003d data.get(i).toString();"},{"lineNumber":100,"author":{"gitId":"umergta"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"umergta"},"content":"            else {"},{"lineNumber":102,"author":{"gitId":"umergta"},"content":"                stringOfData +\u003d data.get(i).toString() + \"\\n\";"},{"lineNumber":103,"author":{"gitId":"umergta"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"umergta"},"content":"        try {"},{"lineNumber":106,"author":{"gitId":"umergta"},"content":"            Files.writeString(Paths.get(this.filePath), stringOfData);"},{"lineNumber":107,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"umergta"},"content":"        catch (IOException e) {"},{"lineNumber":109,"author":{"gitId":"umergta"},"content":"            System.err.println(e);"},{"lineNumber":110,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"umergta"},"content":""},{"lineNumber":113,"author":{"gitId":"umergta"},"content":"}"}],"authorContributionMap":{"umergta":113}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":""},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":""},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":"    private boolean isDone;"},{"lineNumber":8,"author":{"gitId":"umergta"},"content":"    private final String taskDetail;"},{"lineNumber":9,"author":{"gitId":"umergta"},"content":""},{"lineNumber":10,"author":{"gitId":"umergta"},"content":"    Task(String taskDetail) {"},{"lineNumber":11,"author":{"gitId":"umergta"},"content":"        this.taskDetail \u003d taskDetail;"},{"lineNumber":12,"author":{"gitId":"umergta"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"umergta"},"content":""},{"lineNumber":15,"author":{"gitId":"umergta"},"content":"    public boolean getTaskStatus() {"},{"lineNumber":16,"author":{"gitId":"umergta"},"content":"        return this.isDone;"},{"lineNumber":17,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"umergta"},"content":""},{"lineNumber":19,"author":{"gitId":"umergta"},"content":"    public String getTaskDetail() {"},{"lineNumber":20,"author":{"gitId":"umergta"},"content":"        return this.taskDetail;"},{"lineNumber":21,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"umergta"},"content":""},{"lineNumber":23,"author":{"gitId":"umergta"},"content":"    public void markAsDone() {"},{"lineNumber":24,"author":{"gitId":"umergta"},"content":"        this.isDone \u003d true;"},{"lineNumber":25,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"umergta"},"content":""},{"lineNumber":27,"author":{"gitId":"umergta"},"content":"    public String getStatusIcon() {"},{"lineNumber":28,"author":{"gitId":"umergta"},"content":"        //return tick or X symbols"},{"lineNumber":29,"author":{"gitId":"umergta"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":30,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"umergta"},"content":""},{"lineNumber":32,"author":{"gitId":"umergta"},"content":"    //    accept dates in a format such as yyyy-mm-dd format (e.g., 2019-10-15) and"},{"lineNumber":33,"author":{"gitId":"umergta"},"content":"//    print in a different format such as MMM dd yyyy e.g., (Oct 15 2019)"},{"lineNumber":34,"author":{"gitId":"umergta"},"content":"    protected static LocalDate dateStringToDate(String inputDate) {"},{"lineNumber":35,"author":{"gitId":"umergta"},"content":"        String customInputDate \u003d inputDate.replaceAll(\"-\", \" \");"},{"lineNumber":36,"author":{"gitId":"umergta"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy MM dd\");"},{"lineNumber":37,"author":{"gitId":"umergta"},"content":"        LocalDate date \u003d LocalDate.parse(customInputDate, format);"},{"lineNumber":38,"author":{"gitId":"umergta"},"content":"        return date;"},{"lineNumber":39,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"umergta"},"content":""},{"lineNumber":41,"author":{"gitId":"umergta"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"umergta"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"umergta"},"content":"        return \"[\" + this.getStatusIcon() + \"] | \" + this.getTaskDetail();"},{"lineNumber":44,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"umergta"},"content":""},{"lineNumber":46,"author":{"gitId":"umergta"},"content":"}"}],"authorContributionMap":{"umergta":46}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":""},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":""},{"lineNumber":5,"author":{"gitId":"umergta"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"umergta"},"content":" * Represents the user\u0027s list of tasks."},{"lineNumber":7,"author":{"gitId":"umergta"},"content":" * Task objects are stored in the object"},{"lineNumber":8,"author":{"gitId":"umergta"},"content":" */"},{"lineNumber":9,"author":{"gitId":"umergta"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"umergta"},"content":"    private final ArrayList\u003cTask\u003e userList;"},{"lineNumber":11,"author":{"gitId":"umergta"},"content":""},{"lineNumber":12,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"umergta"},"content":"     * Constructor for TaskList"},{"lineNumber":14,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"umergta"},"content":"     * @param userList is an arrayList of Tasks"},{"lineNumber":16,"author":{"gitId":"umergta"},"content":"     * @see ArrayList"},{"lineNumber":17,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"umergta"},"content":"    public TaskList(ArrayList\u003cTask\u003e userList) {"},{"lineNumber":19,"author":{"gitId":"umergta"},"content":"        this.userList \u003d userList;"},{"lineNumber":20,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"umergta"},"content":""},{"lineNumber":22,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"umergta"},"content":"     * Overloaded constructor for TaskList object."},{"lineNumber":24,"author":{"gitId":"umergta"},"content":"     * Used when no ArrayList\u003cTask\u003e is passed in as a Parameter"},{"lineNumber":25,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"umergta"},"content":"    TaskList() {"},{"lineNumber":27,"author":{"gitId":"umergta"},"content":"        this.userList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"umergta"},"content":""},{"lineNumber":30,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"umergta"},"content":"     * Returns the user\u0027s TaskList."},{"lineNumber":32,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"umergta"},"content":"     * @return userList."},{"lineNumber":34,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"umergta"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":36,"author":{"gitId":"umergta"},"content":"        return this.userList;"},{"lineNumber":37,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"umergta"},"content":""},{"lineNumber":39,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"umergta"},"content":"     * Returns size of the taskList."},{"lineNumber":41,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"umergta"},"content":"     * @return length of the user\u0027s list."},{"lineNumber":43,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"umergta"},"content":"    public int getTaskListSize() {"},{"lineNumber":45,"author":{"gitId":"umergta"},"content":"        return this.userList.size();"},{"lineNumber":46,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"umergta"},"content":""},{"lineNumber":48,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"umergta"},"content":"     * Returns task at specified index."},{"lineNumber":50,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"umergta"},"content":"     * @param index Task at the index in the TaskList."},{"lineNumber":52,"author":{"gitId":"umergta"},"content":"     * @return Task task at given index."},{"lineNumber":53,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"umergta"},"content":"    public Task getTask(int index) {"},{"lineNumber":55,"author":{"gitId":"umergta"},"content":"        return this.userList.get(index);"},{"lineNumber":56,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"umergta"},"content":""},{"lineNumber":58,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"umergta"},"content":"     * Adds a task into the TaskList."},{"lineNumber":60,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"umergta"},"content":"     * @param task task to be added into the list."},{"lineNumber":62,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"umergta"},"content":"    public void addTask(Task task) {"},{"lineNumber":64,"author":{"gitId":"umergta"},"content":"        this.userList.add(task);"},{"lineNumber":65,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"umergta"},"content":""},{"lineNumber":67,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"umergta"},"content":"     * Removes a task at the particular index of the task list."},{"lineNumber":69,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"umergta"},"content":"     * @param taskNumber index of the task to be deleted in the task list."},{"lineNumber":71,"author":{"gitId":"umergta"},"content":"     * @return The task that got removed."},{"lineNumber":72,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"umergta"},"content":"    public Task removeTask(int taskNumber) {"},{"lineNumber":74,"author":{"gitId":"umergta"},"content":"        Task deletedTask \u003d this.userList.remove(taskNumber);"},{"lineNumber":75,"author":{"gitId":"umergta"},"content":"        return deletedTask;"},{"lineNumber":76,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"umergta"},"content":""},{"lineNumber":78,"author":{"gitId":"umergta"},"content":"}"}],"authorContributionMap":{"umergta":78}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":""},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":"    ToDo(String toDoDetail) {"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":"        super(toDoDetail);"},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":""},{"lineNumber":8,"author":{"gitId":"umergta"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"umergta"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"umergta"},"content":"        return \"[T]\" + \" | \" + super.toString();"},{"lineNumber":11,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"umergta"},"content":"}"}],"authorContributionMap":{"umergta":12}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":""},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":" * Represents the Ui of Duke CLI application with methods to print the output according to the input given."},{"lineNumber":5,"author":{"gitId":"umergta"},"content":" */"},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":"    private static final String HORIZONTAL_RULE \u003d \"____________________________________________________________\";"},{"lineNumber":8,"author":{"gitId":"umergta"},"content":""},{"lineNumber":9,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"umergta"},"content":"     * Prints the welcome greeting when user first runs the Duke program"},{"lineNumber":11,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"umergta"},"content":"    public void printWelcomeGreeting() {"},{"lineNumber":13,"author":{"gitId":"umergta"},"content":"        System.out.println(HORIZONTAL_RULE + \"\\nHello! I am Duke\\n\" + \"What can I do for you?\\n\" + HORIZONTAL_RULE);"},{"lineNumber":14,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"umergta"},"content":""},{"lineNumber":16,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"umergta"},"content":"     * Prints the exit message when user executes command to quit the duke application."},{"lineNumber":18,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"umergta"},"content":"    public void printExitMessage() {"},{"lineNumber":20,"author":{"gitId":"umergta"},"content":"        System.out.println(\"GoodBye. Hope to see you again soon!\\n\" + HORIZONTAL_RULE);"},{"lineNumber":21,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"umergta"},"content":""},{"lineNumber":23,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"umergta"},"content":"     * Prints a horizontal line (string of \"-\" of 80 characters)"},{"lineNumber":25,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"umergta"},"content":"    public void printHorizontalRule() {"},{"lineNumber":27,"author":{"gitId":"umergta"},"content":"        System.out.println(HORIZONTAL_RULE);"},{"lineNumber":28,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"umergta"},"content":""},{"lineNumber":30,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"umergta"},"content":"     * Prints the tasks is users TaskList line by line"},{"lineNumber":32,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"umergta"},"content":"     * @param userList TaskList of the user"},{"lineNumber":34,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"umergta"},"content":"    public void printTaskList(TaskList userList) {"},{"lineNumber":36,"author":{"gitId":"umergta"},"content":"        for (int i \u003d 0; i \u003c userList.getTaskListSize(); i++) {"},{"lineNumber":37,"author":{"gitId":"umergta"},"content":"            System.out.println(i + 1 + \".\" + userList.getTask(i).toString());"},{"lineNumber":38,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"umergta"},"content":"        System.out.println(HORIZONTAL_RULE);"},{"lineNumber":40,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"umergta"},"content":""},{"lineNumber":42,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"umergta"},"content":"     * Prints the message when a task is assigned as \"done\"."},{"lineNumber":44,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"umergta"},"content":"     * @param userTaskList TaskList of the user."},{"lineNumber":46,"author":{"gitId":"umergta"},"content":"     * @param taskNumber   Task number in the list that was marked as done."},{"lineNumber":47,"author":{"gitId":"umergta"},"content":"     * @see TaskList"},{"lineNumber":48,"author":{"gitId":"umergta"},"content":"     * @see Task"},{"lineNumber":49,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"umergta"},"content":"    public void printDoneTask(TaskList userTaskList, int taskNumber) {"},{"lineNumber":51,"author":{"gitId":"umergta"},"content":"        Task doneTask \u003d userTaskList.getTask(taskNumber - 1);"},{"lineNumber":52,"author":{"gitId":"umergta"},"content":"        doneTask.markAsDone();"},{"lineNumber":53,"author":{"gitId":"umergta"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":54,"author":{"gitId":"umergta"},"content":"        System.out.println(\"[\" + doneTask.getStatusIcon() + \"] \" + doneTask.getTaskDetail());"},{"lineNumber":55,"author":{"gitId":"umergta"},"content":"        System.out.println(HORIZONTAL_RULE);"},{"lineNumber":56,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"umergta"},"content":""},{"lineNumber":58,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"umergta"},"content":"     * Prints the message when a task is added to the Task list."},{"lineNumber":60,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"umergta"},"content":"     * @param userTaskList Task list of the user."},{"lineNumber":62,"author":{"gitId":"umergta"},"content":"     * @param task         Task to be added to the Task list."},{"lineNumber":63,"author":{"gitId":"umergta"},"content":"     * @see TaskList"},{"lineNumber":64,"author":{"gitId":"umergta"},"content":"     * @see Task"},{"lineNumber":65,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"umergta"},"content":"    public void printAddedTask(TaskList userTaskList, Task task) {"},{"lineNumber":67,"author":{"gitId":"umergta"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":68,"author":{"gitId":"umergta"},"content":"        System.out.println(task);"},{"lineNumber":69,"author":{"gitId":"umergta"},"content":"        userTaskList.addTask(task);"},{"lineNumber":70,"author":{"gitId":"umergta"},"content":"        System.out.println(\"Now you have \" + (userTaskList.getTaskListSize()) + \" tasks in the list.\");"},{"lineNumber":71,"author":{"gitId":"umergta"},"content":"        System.out.println(HORIZONTAL_RULE);"},{"lineNumber":72,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"umergta"},"content":""},{"lineNumber":74,"author":{"gitId":"umergta"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"umergta"},"content":"     * Prints the message when task is deleted from Task List."},{"lineNumber":76,"author":{"gitId":"umergta"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"umergta"},"content":"     * @param userTaskList Task list of the user."},{"lineNumber":78,"author":{"gitId":"umergta"},"content":"     * @param taskNumber   Task to be added to the Task list."},{"lineNumber":79,"author":{"gitId":"umergta"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"umergta"},"content":"    public void printDeletedTask(TaskList userTaskList, int taskNumber) {"},{"lineNumber":81,"author":{"gitId":"umergta"},"content":"        Task taskToBeDeleted \u003d userTaskList.removeTask(taskNumber - 1);"},{"lineNumber":82,"author":{"gitId":"umergta"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task\");"},{"lineNumber":83,"author":{"gitId":"umergta"},"content":"        System.out.println(taskToBeDeleted);"},{"lineNumber":84,"author":{"gitId":"umergta"},"content":"        System.out.println(\"Now you have \" + (userTaskList.getTaskListSize()) + \" tasks in the list.\");"},{"lineNumber":85,"author":{"gitId":"umergta"},"content":"        System.out.println(HORIZONTAL_RULE);"},{"lineNumber":86,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"umergta"},"content":""},{"lineNumber":88,"author":{"gitId":"umergta"},"content":"    public void printFoundTasks(TaskList tasksFound) {"},{"lineNumber":89,"author":{"gitId":"umergta"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":90,"author":{"gitId":"umergta"},"content":"        if (tasksFound.getTaskListSize() \u003d\u003d 0) {"},{"lineNumber":91,"author":{"gitId":"umergta"},"content":"            System.out.println(\"Sorry. No tasks found :-(\");"},{"lineNumber":92,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"umergta"},"content":"        else {"},{"lineNumber":94,"author":{"gitId":"umergta"},"content":"            this.printTaskList(tasksFound);"},{"lineNumber":95,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"umergta"},"content":"}"}],"authorContributionMap":{"umergta":97}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":""},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":""},{"lineNumber":5,"author":{"gitId":"umergta"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;"},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":""},{"lineNumber":8,"author":{"gitId":"umergta"},"content":"public class ParserTest {"},{"lineNumber":9,"author":{"gitId":"umergta"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"umergta"},"content":"    public void testParseDate() {"},{"lineNumber":11,"author":{"gitId":"umergta"},"content":"        assertEquals(\"2021-01-01\", new Parser().parseDate(\"january 1 2021\"));"},{"lineNumber":12,"author":{"gitId":"umergta"},"content":"        assertEquals(\"2020-02-02\", new Parser().parseDate(\"february 2 2020\"));"},{"lineNumber":13,"author":{"gitId":"umergta"},"content":"        assertEquals(\"2020-10-03\", new Parser().parseDate(\"october 3 2020\"));"},{"lineNumber":14,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"umergta"},"content":""},{"lineNumber":16,"author":{"gitId":"umergta"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"umergta"},"content":"    public void testParseAddToDo() {"},{"lineNumber":18,"author":{"gitId":"umergta"},"content":"        assertEquals(\"testing todo\", new Parser().parseAddTodo(\"todo testing todo\").getTaskDetail());"},{"lineNumber":19,"author":{"gitId":"umergta"},"content":"        assertEquals(\"i want to do this!\", new Parser().parseAddTodo(\"todo i want to do this!\").getTaskDetail());"},{"lineNumber":20,"author":{"gitId":"umergta"},"content":"        assertEquals(\"I WANT TO DO NOTHING\", new Parser().parseAddTodo(\"todo I WANT TO DO NOTHING\").getTaskDetail());"},{"lineNumber":21,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"umergta"},"content":""},{"lineNumber":23,"author":{"gitId":"umergta"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"umergta"},"content":"    public void testParseAddEvent() {"},{"lineNumber":25,"author":{"gitId":"umergta"},"content":"        assertEquals(\"testing event addition\","},{"lineNumber":26,"author":{"gitId":"umergta"},"content":"                new Parser().parseAddEvent(\"event testing event addition /at 2020-01-01\").getTaskDetail());"},{"lineNumber":27,"author":{"gitId":"umergta"},"content":"        assertEquals(\"january 1 2020\", new Parser().parseAddEvent(\"event test /at 2020-01-01\").getEventDateString());"},{"lineNumber":28,"author":{"gitId":"umergta"},"content":"        assertEquals(\"testing event\","},{"lineNumber":29,"author":{"gitId":"umergta"},"content":"                new Parser().parseAddEvent(\"event testing event /at 2021-04-06\").getTaskDetail());"},{"lineNumber":30,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"umergta"},"content":""},{"lineNumber":32,"author":{"gitId":"umergta"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"umergta"},"content":"    public void testParseAddDeadline() {"},{"lineNumber":34,"author":{"gitId":"umergta"},"content":"        assertEquals(\"testing deadline addition\".length(),"},{"lineNumber":35,"author":{"gitId":"umergta"},"content":"                new Parser().parseAddDeadline(\"deadline testing deadline addition /by 2020-01-01\").getTaskDetail().length());"},{"lineNumber":36,"author":{"gitId":"umergta"},"content":"        assertEquals(\"january 1 2020\", new Parser().parseAddDeadline(\"deadline test /by 2020-01-01\").getDeadline());"},{"lineNumber":37,"author":{"gitId":"umergta"},"content":"        assertEquals(\"testing deadline\","},{"lineNumber":38,"author":{"gitId":"umergta"},"content":"                new Parser().parseAddDeadline(\"deadline testing deadline /by 2021-04-06\").getTaskDetail());"},{"lineNumber":39,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"umergta"},"content":""},{"lineNumber":41,"author":{"gitId":"umergta"},"content":"}"}],"authorContributionMap":{"umergta":41}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":""},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":""},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":"import java.io.PrintStream;"},{"lineNumber":8,"author":{"gitId":"umergta"},"content":""},{"lineNumber":9,"author":{"gitId":"umergta"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"umergta"},"content":""},{"lineNumber":11,"author":{"gitId":"umergta"},"content":"public class UiTest {"},{"lineNumber":12,"author":{"gitId":"umergta"},"content":"    private static final String HORIZONTAL_RULE \u003d \"____________________________________________________________\";"},{"lineNumber":13,"author":{"gitId":"umergta"},"content":"    private final PrintStream standardOut \u003d System.out;"},{"lineNumber":14,"author":{"gitId":"umergta"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"},{"lineNumber":15,"author":{"gitId":"umergta"},"content":"    @BeforeEach"},{"lineNumber":16,"author":{"gitId":"umergta"},"content":"    public void setUp() {"},{"lineNumber":17,"author":{"gitId":"umergta"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));"},{"lineNumber":18,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"umergta"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"umergta"},"content":"    public void testPrintWelcomeGreeting(){"},{"lineNumber":21,"author":{"gitId":"umergta"},"content":"        new Ui().printWelcomeGreeting();"},{"lineNumber":22,"author":{"gitId":"umergta"},"content":"        assertEquals(HORIZONTAL_RULE + \"\\nHello! I am Duke\\n\" + \"What can I do for you?\\n\" + HORIZONTAL_RULE,"},{"lineNumber":23,"author":{"gitId":"umergta"},"content":"                outputStreamCaptor.toString().trim());"},{"lineNumber":24,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"umergta"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"umergta"},"content":"    public void testPrintExitMessage(){"},{"lineNumber":27,"author":{"gitId":"umergta"},"content":"        new Ui().printExitMessage();"},{"lineNumber":28,"author":{"gitId":"umergta"},"content":"        assertEquals(\"GoodBye. Hope to see you again soon!\\n\" + HORIZONTAL_RULE, outputStreamCaptor.toString().trim());"},{"lineNumber":29,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"umergta"},"content":"}"}],"authorContributionMap":{"umergta":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":"todo borrow another book"},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":"list"},{"lineNumber":8,"author":{"gitId":"umergta"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"umergta"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"umergta"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":11,"author":{"gitId":"umergta"},"content":"list"},{"lineNumber":12,"author":{"gitId":"umergta"},"content":"bye"}],"authorContributionMap":{"umergta":12}}]
