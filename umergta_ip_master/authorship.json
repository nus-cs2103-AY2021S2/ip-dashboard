[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"//Deadlines: tasks that need to be done before a specific date/time"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":"public class Deadline extends Task{"},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"    private String deadline;"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":"    Deadline(String deadline, String deadlineDetail){"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":"        super(deadlineDetail);"},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"umergta"},"content":"    public String getDeadline(){"},{"lineNumber":9,"author":{"gitId":"umergta"},"content":"        return this.deadline;"},{"lineNumber":10,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"umergta"},"content":""},{"lineNumber":12,"author":{"gitId":"umergta"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"umergta"},"content":"    public String toString(){"},{"lineNumber":14,"author":{"gitId":"umergta"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.deadline + \")\";"},{"lineNumber":15,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"umergta"},"content":"}"}],"authorContributionMap":{"umergta":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"umergta"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":"    private static final String HORIZONTAL_RULE \u003d \"____________________________________________________________\";"},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"    private static ArrayList\u003cTask\u003e userList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"umergta"},"content":"        Duke.basicProgram();"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"umergta"},"content":"    private static void basicProgram(){"},{"lineNumber":11,"author":{"gitId":"umergta"},"content":"        final String greeting \u003d HORIZONTAL_RULE + \"\\nHello! I am Duke\\n\" + \"What can I do for you?\\n\" + HORIZONTAL_RULE;"},{"lineNumber":12,"author":{"gitId":"umergta"},"content":"        final String addTaskMessage \u003d \"Got it. I\u0027ve added this task\";"},{"lineNumber":13,"author":{"gitId":"umergta"},"content":"        final String exitCommand \u003d \"bye\";"},{"lineNumber":14,"author":{"gitId":"umergta"},"content":"        final String listCommand \u003d \"list\";"},{"lineNumber":15,"author":{"gitId":"umergta"},"content":"        final String doneCommand \u003d \"done\";"},{"lineNumber":16,"author":{"gitId":"umergta"},"content":"        final String deleteCommand \u003d \"delete\";"},{"lineNumber":17,"author":{"gitId":"umergta"},"content":"        final String addTodoCommand \u003d \"todo\";"},{"lineNumber":18,"author":{"gitId":"umergta"},"content":"        final String addDeadlineCommand \u003d \"deadline\";"},{"lineNumber":19,"author":{"gitId":"umergta"},"content":"        final String addEventCommand \u003d \"event\";"},{"lineNumber":20,"author":{"gitId":"umergta"},"content":"        System.out.println(greeting);"},{"lineNumber":21,"author":{"gitId":"umergta"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":22,"author":{"gitId":"umergta"},"content":"        boolean isBye \u003d false;"},{"lineNumber":23,"author":{"gitId":"umergta"},"content":"        while (!isBye) {"},{"lineNumber":24,"author":{"gitId":"umergta"},"content":"            //task taken in"},{"lineNumber":25,"author":{"gitId":"umergta"},"content":"            String command \u003d sc.nextLine();"},{"lineNumber":26,"author":{"gitId":"umergta"},"content":"            String[] commandArr \u003d command.split(\" \");"},{"lineNumber":27,"author":{"gitId":"umergta"},"content":"            Task newTask;"},{"lineNumber":28,"author":{"gitId":"umergta"},"content":"            System.out.println(HORIZONTAL_RULE);"},{"lineNumber":29,"author":{"gitId":"umergta"},"content":"            try {"},{"lineNumber":30,"author":{"gitId":"umergta"},"content":"                switch (commandArr[0]) {"},{"lineNumber":31,"author":{"gitId":"umergta"},"content":"                    case exitCommand:"},{"lineNumber":32,"author":{"gitId":"umergta"},"content":"                        System.out.println(command + \". Hope to see you again soon!\\n\" + HORIZONTAL_RULE);"},{"lineNumber":33,"author":{"gitId":"umergta"},"content":"                        sc.close();"},{"lineNumber":34,"author":{"gitId":"umergta"},"content":"                        isBye \u003d true;"},{"lineNumber":35,"author":{"gitId":"umergta"},"content":"                        break;"},{"lineNumber":36,"author":{"gitId":"umergta"},"content":"                    case listCommand:"},{"lineNumber":37,"author":{"gitId":"umergta"},"content":"                        Duke.printUserList();"},{"lineNumber":38,"author":{"gitId":"umergta"},"content":"                        System.out.println(HORIZONTAL_RULE);"},{"lineNumber":39,"author":{"gitId":"umergta"},"content":"                        break;"},{"lineNumber":40,"author":{"gitId":"umergta"},"content":"                    case doneCommand:"},{"lineNumber":41,"author":{"gitId":"umergta"},"content":"                        int taskNumber \u003d Integer.parseInt(commandArr[1]);"},{"lineNumber":42,"author":{"gitId":"umergta"},"content":"                        Duke.printDoneTask(taskNumber);"},{"lineNumber":43,"author":{"gitId":"umergta"},"content":"                        break;"},{"lineNumber":44,"author":{"gitId":"umergta"},"content":"                    case addTodoCommand:"},{"lineNumber":45,"author":{"gitId":"umergta"},"content":"                        if(commandArr.length \u003d\u003d 1){"},{"lineNumber":46,"author":{"gitId":"umergta"},"content":"                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":47,"author":{"gitId":"umergta"},"content":"                        }"},{"lineNumber":48,"author":{"gitId":"umergta"},"content":"                        else {"},{"lineNumber":49,"author":{"gitId":"umergta"},"content":"                            newTask \u003d new ToDo(command.split(\"todo \")[1]);"},{"lineNumber":50,"author":{"gitId":"umergta"},"content":"                            Duke.printAddedTask(newTask);"},{"lineNumber":51,"author":{"gitId":"umergta"},"content":"//                            userList.add(newTask);"},{"lineNumber":52,"author":{"gitId":"umergta"},"content":"                        }"},{"lineNumber":53,"author":{"gitId":"umergta"},"content":"                        break;"},{"lineNumber":54,"author":{"gitId":"umergta"},"content":"                    case addDeadlineCommand:"},{"lineNumber":55,"author":{"gitId":"umergta"},"content":"                        String[] deadlineAndTask \u003d command.split(\"/by \");"},{"lineNumber":56,"author":{"gitId":"umergta"},"content":"                        //offset of 9 to remove the \"deadline \" from the statement"},{"lineNumber":57,"author":{"gitId":"umergta"},"content":"                        newTask \u003d new Deadline(deadlineAndTask[1], deadlineAndTask[0].substring(9));"},{"lineNumber":58,"author":{"gitId":"umergta"},"content":"                        Duke.printAddedTask(newTask);"},{"lineNumber":59,"author":{"gitId":"umergta"},"content":"                        break;"},{"lineNumber":60,"author":{"gitId":"umergta"},"content":"                    case addEventCommand:"},{"lineNumber":61,"author":{"gitId":"umergta"},"content":"                        String[] eventTimeAndTask \u003d command.split(\"/at\");"},{"lineNumber":62,"author":{"gitId":"umergta"},"content":"                        //offset of 6 to remove \"event \" frm statement"},{"lineNumber":63,"author":{"gitId":"umergta"},"content":"                        newTask \u003d new Event(eventTimeAndTask[1], eventTimeAndTask[0].substring(6));"},{"lineNumber":64,"author":{"gitId":"umergta"},"content":"                        Duke.printAddedTask(newTask);"},{"lineNumber":65,"author":{"gitId":"umergta"},"content":"//                        userList.add(newTask);"},{"lineNumber":66,"author":{"gitId":"umergta"},"content":"                        break;"},{"lineNumber":67,"author":{"gitId":"umergta"},"content":"                    case deleteCommand:"},{"lineNumber":68,"author":{"gitId":"umergta"},"content":"                        int taskNumToBeDeleted \u003d Integer.parseInt(commandArr[1]);"},{"lineNumber":69,"author":{"gitId":"umergta"},"content":"                        Duke.printDeletedTask(taskNumToBeDeleted);"},{"lineNumber":70,"author":{"gitId":"umergta"},"content":"                        break;"},{"lineNumber":71,"author":{"gitId":"umergta"},"content":"                    default:"},{"lineNumber":72,"author":{"gitId":"umergta"},"content":"                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":73,"author":{"gitId":"umergta"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"umergta"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"umergta"},"content":"            catch(DukeException ex){"},{"lineNumber":76,"author":{"gitId":"umergta"},"content":"                System.err.println(ex.getMessage());"},{"lineNumber":77,"author":{"gitId":"umergta"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"umergta"},"content":"    private static void printUserList(){"},{"lineNumber":81,"author":{"gitId":"umergta"},"content":"        for(int i \u003d 0; i\u003c userList.size();i++){"},{"lineNumber":82,"author":{"gitId":"umergta"},"content":"            System.out.println(i+1 +\". \" + userList.get(i).toString());"},{"lineNumber":83,"author":{"gitId":"umergta"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"umergta"},"content":""},{"lineNumber":86,"author":{"gitId":"umergta"},"content":"    private static void printDoneTask(int taskNumber){"},{"lineNumber":87,"author":{"gitId":"umergta"},"content":"        Task doneTask \u003d userList.get(taskNumber - 1);"},{"lineNumber":88,"author":{"gitId":"umergta"},"content":"        doneTask.markAsDone();"},{"lineNumber":89,"author":{"gitId":"umergta"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":90,"author":{"gitId":"umergta"},"content":"        System.out.println(\"[\" + doneTask.getStatusIcon() + \"] \" + doneTask.getTaskDetail());"},{"lineNumber":91,"author":{"gitId":"umergta"},"content":"        System.out.println(HORIZONTAL_RULE);"},{"lineNumber":92,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"umergta"},"content":""},{"lineNumber":94,"author":{"gitId":"umergta"},"content":"    private static void printAddedTask(Task task){"},{"lineNumber":95,"author":{"gitId":"umergta"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":96,"author":{"gitId":"umergta"},"content":"        System.out.println(task);"},{"lineNumber":97,"author":{"gitId":"umergta"},"content":"        userList.add(task);"},{"lineNumber":98,"author":{"gitId":"umergta"},"content":"        System.out.println(\"Now you have \" + (userList.size()) + \" tasks in the list.\");"},{"lineNumber":99,"author":{"gitId":"umergta"},"content":"        System.out.println(HORIZONTAL_RULE);"},{"lineNumber":100,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"umergta"},"content":""},{"lineNumber":102,"author":{"gitId":"umergta"},"content":"    private static void printDeletedTask(int taskNumber){"},{"lineNumber":103,"author":{"gitId":"umergta"},"content":"        Task taskToBeDeleted \u003d userList.remove(taskNumber - 1);"},{"lineNumber":104,"author":{"gitId":"umergta"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task\");"},{"lineNumber":105,"author":{"gitId":"umergta"},"content":"        System.out.println(taskToBeDeleted);"},{"lineNumber":106,"author":{"gitId":"umergta"},"content":"        System.out.println(\"Now you have \" + (userList.size()) + \" tasks in the list.\");"},{"lineNumber":107,"author":{"gitId":"umergta"},"content":"        System.out.println(HORIZONTAL_RULE);"},{"lineNumber":108,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"umergta"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"umergta":105,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"public class DukeException extends IllegalArgumentException {"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":"    public DukeException(String message){"},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"    public String toString(){"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":"        return this.getMessage();"},{"lineNumber":8,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"umergta"},"content":"}"}],"authorContributionMap":{"umergta":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"//tasks that start at a specific time and ends at a specific time"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":"public class Event extends Task{"},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"    private String eventDuration;"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":"    Event(String eventDuration, String eventDetail){"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":"        super(eventDetail);"},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"        this.eventDuration \u003d eventDuration;"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"umergta"},"content":""},{"lineNumber":9,"author":{"gitId":"umergta"},"content":"    public String getEventDuration(){"},{"lineNumber":10,"author":{"gitId":"umergta"},"content":"        return this.eventDuration;"},{"lineNumber":11,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"umergta"},"content":""},{"lineNumber":13,"author":{"gitId":"umergta"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"umergta"},"content":"    public String toString(){"},{"lineNumber":15,"author":{"gitId":"umergta"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + this.eventDuration + \")\";"},{"lineNumber":16,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"umergta"},"content":"}"}],"authorContributionMap":{"umergta":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":"    private boolean isDone;"},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"    private String taskDetail;"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":"    Task(String taskDetail){"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":"        this.taskDetail \u003d taskDetail;"},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"        this.isDone \u003d false;"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"umergta"},"content":""},{"lineNumber":9,"author":{"gitId":"umergta"},"content":"    public boolean getTaskStatus(){"},{"lineNumber":10,"author":{"gitId":"umergta"},"content":"        return this.isDone;"},{"lineNumber":11,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"umergta"},"content":""},{"lineNumber":13,"author":{"gitId":"umergta"},"content":"    public String getTaskDetail(){"},{"lineNumber":14,"author":{"gitId":"umergta"},"content":"        return this.taskDetail;"},{"lineNumber":15,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"umergta"},"content":""},{"lineNumber":17,"author":{"gitId":"umergta"},"content":"    public void markAsDone(){"},{"lineNumber":18,"author":{"gitId":"umergta"},"content":"        this.isDone \u003d true;"},{"lineNumber":19,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"umergta"},"content":""},{"lineNumber":21,"author":{"gitId":"umergta"},"content":"    public void markAsUndone(){"},{"lineNumber":22,"author":{"gitId":"umergta"},"content":"        this.isDone \u003d false;"},{"lineNumber":23,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"umergta"},"content":""},{"lineNumber":25,"author":{"gitId":"umergta"},"content":"    public String getStatusIcon() {"},{"lineNumber":26,"author":{"gitId":"umergta"},"content":"        //return tick or X symbols"},{"lineNumber":27,"author":{"gitId":"umergta"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":28,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"umergta"},"content":""},{"lineNumber":30,"author":{"gitId":"umergta"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"umergta"},"content":"    public String toString(){"},{"lineNumber":32,"author":{"gitId":"umergta"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getTaskDetail();"},{"lineNumber":33,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"umergta"},"content":""},{"lineNumber":35,"author":{"gitId":"umergta"},"content":"}"}],"authorContributionMap":{"umergta":35}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"//tasks without any date/time attached to it"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":"public class ToDo extends Task{"},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"    //invoke super constructor"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":"    ToDo(String toDoDetail){"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":"        super(toDoDetail);"},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"umergta"},"content":"    public String toString(){"},{"lineNumber":9,"author":{"gitId":"umergta"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"umergta"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"umergta"},"content":"}"}],"authorContributionMap":{"umergta":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"umergta"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"umergta"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"umergta"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"umergta"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"umergta"},"content":"todo borrow another book"},{"lineNumber":6,"author":{"gitId":"umergta"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"umergta"},"content":"list"},{"lineNumber":8,"author":{"gitId":"umergta"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"umergta"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"umergta"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":11,"author":{"gitId":"umergta"},"content":"list"},{"lineNumber":12,"author":{"gitId":"umergta"},"content":"bye"}],"authorContributionMap":{"umergta":12}}]
