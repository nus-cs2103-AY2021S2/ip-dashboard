[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"1. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"chewwh09":2,"-":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Parser;"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Storage;"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"import duke.logging.TaskList;"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Ui;"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":" * A personal chat bot that helps a person keep track of various things."},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"    private final Storage storage;"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"    private TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"    private final Ui ui;"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"     * Constructs a Duke chat bot."},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"     * @param filePath The filepath where the data are going to be stored at."},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"    public Duke(String filePath) {"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"        ui \u003d new Ui();"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"     * Run the Duke chat bot."},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"    public void run() {"},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"        ui.showWelcome(tasks);"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"        while (sc.hasNext()) {"},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"            try {"},{"lineNumber":43,"author":{"gitId":"chewwh09"},"content":"                String[] fullCommand \u003d ui.readCommand(sc);"},{"lineNumber":44,"author":{"gitId":"chewwh09"},"content":"                ui.printLine();"},{"lineNumber":45,"author":{"gitId":"chewwh09"},"content":"                Command command \u003d Parser.parse(fullCommand);"},{"lineNumber":46,"author":{"gitId":"chewwh09"},"content":"                command.execute(tasks, ui, storage);"},{"lineNumber":47,"author":{"gitId":"chewwh09"},"content":"                if (command.isExit()) {"},{"lineNumber":48,"author":{"gitId":"chewwh09"},"content":"                    break;"},{"lineNumber":49,"author":{"gitId":"chewwh09"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"chewwh09"},"content":"            } catch (Exception e) {"},{"lineNumber":51,"author":{"gitId":"chewwh09"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":52,"author":{"gitId":"chewwh09"},"content":"            } finally {"},{"lineNumber":53,"author":{"gitId":"chewwh09"},"content":"                ui.printLine();"},{"lineNumber":54,"author":{"gitId":"chewwh09"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"chewwh09"},"content":"        sc.close();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":59,"author":{"gitId":"chewwh09"},"content":"    public static void main(String[] args) {"},{"lineNumber":60,"author":{"gitId":"chewwh09"},"content":"        new Duke(\"data/duke.txt\").run();"},{"lineNumber":61,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"chewwh09":59,"-":3}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Storage;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import duke.logging.TaskList;"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Ui;"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":" * The AddCommand class denotes an add command to the Duke chat bot."},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"public class AddCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"    private final String type;"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"     * Constructs an AddCommand."},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"     * @param type              The type of task to be added into the list."},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"     * @param taskDescription   The description of the task."},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"    public AddCommand(String type, String taskDescription) {"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"        super(taskDescription);"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"        this.type \u003d type;"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"     * Executing the command"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"     * @param taskList A list of recorded tasks."},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"     * @param ui       A user interface."},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"     * @param storage  A list of recorded user inputs data."},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"            if (type.equals(\"deadline\")) {"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"                storage.append(taskList.addTask(\"deadline\", taskDescription, ui));"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"            } else if (type.equals(\"event\")) {"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"                storage.append(taskList.addTask(\"event\", taskDescription, ui));"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"            } else if (type.equals(\"todo\")) {"},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"                storage.append(taskList.addTask(\"todo\", taskDescription, ui));"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"            System.out.println(\"     The date time format is wrong. \" +"},{"lineNumber":43,"author":{"gitId":"chewwh09"},"content":"                    \"It supposed to be yyyy-MM-dd or yyyy/MM/dd\");"},{"lineNumber":44,"author":{"gitId":"chewwh09"},"content":"        } catch (Exception e) {"},{"lineNumber":45,"author":{"gitId":"chewwh09"},"content":"            System.out.println(\"     \" + e.getMessage());"},{"lineNumber":46,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":49,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"chewwh09"},"content":"     * Do not exit the Duke program"},{"lineNumber":51,"author":{"gitId":"chewwh09"},"content":"     * @return   A signal that indicate a continuation of the Duke program."},{"lineNumber":52,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"chewwh09"},"content":"    public boolean isExit() {"},{"lineNumber":54,"author":{"gitId":"chewwh09"},"content":"        return false;"},{"lineNumber":55,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":56}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Storage;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import duke.logging.TaskList;"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Ui;"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":" * The ByeCommand class denotes an bye command to the Duke chat bot."},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"public class ByeCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"     * Constructs an DeleteCommand."},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"     * @param taskDescription The description of the task."},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"    public ByeCommand(String taskDescription) {"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"        super(taskDescription);"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"     * Executing the command"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"     * @param taskList A list of recorded tasks."},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"     * @param ui       A user interface."},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"     * @param storage  A list of recorded user inputs data."},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"        ui.byeCommandInteraction();"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"     * Exit the Duke program"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"     * @return   A signal that indicate the termination of the Duke program."},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"    public boolean isExit() {"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"        return true;"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":37}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Storage;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import duke.logging.TaskList;"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Ui;"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":" * The Command class denotes a command to the Duke chat bot."},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"    protected final String taskDescription;"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"     * Constructs a command"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"     * @param taskDescription The description of the task."},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"    public Command(String taskDescription) {"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"     * Executing the command"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"     * @param taskList A list of recorded tasks."},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"     * @param ui       A user interface."},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"     * @param storage  A list of recorded user inputs data."},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage);"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"     * Determine whether the command will terminate the program."},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"     * @return   A signal to terminate the program."},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"    public abstract boolean isExit();"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":34}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Storage;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import duke.logging.TaskList;"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Ui;"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":" * The DeleteCommand class denotes a delete command to the Duke chat bot."},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"     * Constructs an DeleteCommand."},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"     * @param taskDescription   The description of the task."},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"    public DeleteCommand(String taskDescription) {"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"        super(taskDescription);"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"     * Executing the command"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"     * @param taskList A list of recorded tasks."},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"     * @param ui       A user interface."},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"     * @param storage  A list of recorded user inputs data."},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"            storage.overwrite(taskList.delete(taskDescription, ui));"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"        } catch (Exception ex) {"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"            System.out.println(\"     \" + ex.getMessage());"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"     * Do not exit the Duke program"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"     * @return   A signal that indicate a continuation of the Duke program."},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"    public boolean isExit() {"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"        return false;"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":42}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Storage;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import duke.logging.TaskList;"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Ui;"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":" * The DoneCommand class denotes a done command to the Duke chat bot."},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"public class DoneCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"     * Constructs an DoneCommand."},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"     * @param taskDescription   The description of the task."},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"    public DoneCommand(String taskDescription) {"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"        super(taskDescription);"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"     * Executing the command"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"     * @param taskList A list of recorded tasks."},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"     * @param ui       A user interface."},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"     * @param storage  A list of recorded user inputs data."},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"            storage.overwrite(taskList.done(taskDescription, ui));"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"        } catch (Exception ex) {"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"            System.out.println(\"     \" + ex.getMessage());"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"     * Do not exit the Duke program"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"     * @return   A signal that indicate a continuation of the Duke program."},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"    public boolean isExit() {"},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"        return false;"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":41}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import duke.exception.InvalidDescriptionException;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Storage;"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import duke.logging.TaskList;"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Ui;"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":" * The FindCommand class denotes a find command to the Duke chat bot."},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"public class FindCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"     * Constructs a FindCommand"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"     * @param taskDescription    The description of the task."},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"    public FindCommand(String taskDescription) {"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"        super(taskDescription);"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"     * Executing the command"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"     * @param taskList A list of recorded tasks."},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"     * @param ui       A user interface."},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"     * @param storage  A list of recorded user inputs data."},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"            taskList.find(taskDescription, ui);"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"        } catch (InvalidDescriptionException ex) {"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"            System.out.println(\"     \" + ex.getMessage());"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"     * Do not exit the Duke program"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"     * @return   A signal that indicate a continuation of the Duke program."},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"    public boolean isExit() {"},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"        return false;"},{"lineNumber":43,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":44}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Storage;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import duke.logging.TaskList;"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Ui;"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":" * The ListCommand class denotes a list command to the Duke chat bot."},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"     * Constructs an ListCommand."},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"     * @param taskDescription   The description of the task."},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"    public ListCommand(String taskDescription) {"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"        super(taskDescription);"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"     * Executing the command"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"     * @param taskList A list of recorded tasks."},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"     * @param ui       A user interface."},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"     * @param storage  A list of recorded user inputs data."},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"        ui.listCommandInteraction(taskList);"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"     * Do not exit the Duke program"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"     * @return   A signal that indicate a continuation of the Duke program."},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"    public boolean isExit() {"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"        return false;"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":37}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Storage;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import duke.logging.TaskList;"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import duke.logging.Ui;"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"import duke.exception.InvalidInputException;"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":" * The UnknownCommand class denotes an unknown command to the Duke chat bot."},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"public class UnknownCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"     * Constructs an UnknownCommand."},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"     * @param taskDescription   The description of the task."},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"    public UnknownCommand(String taskDescription) {"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"        super(taskDescription);"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"     * Executing the command"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"     * @param taskList A list of recorded tasks."},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"     * @param ui       A user interface."},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"     * @param storage  A list of recorded user inputs data."},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"            ui.unknownCommandInteraction();"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"        } catch (InvalidInputException ex) {"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"            System.out.println(ex.getMessage());"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"     * Do not exit the Duke program"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"     * @return   A signal that indicate a continuation of the Duke program."},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"    public boolean isExit() {"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"        return false;"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":42}},{"path":"src/main/java/duke/exception/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":" * An exception raised when user inputs a command format that doesn\u0027t correspond to our commands."},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"public class InvalidDescriptionException extends Exception {"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"     * Constructs an InvalidDescriotionException."},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"     * @param message   A message that can be displayed when this exception is thrown."},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"    public InvalidDescriptionException(String message) {"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"        super(message);"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":14}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":" *  An exception raised when user inputs a command that doesn\u0027t exist in Duke chat bot."},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"public class InvalidInputException extends Exception {"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"     * Constructs a InvalidInputException"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"     * @param message  A message that can be displayed when this exception is thrown."},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"    public InvalidInputException(String message) {"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"        super(message);"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":14}},{"path":"src/main/java/duke/logging/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.logging;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import duke.command.*;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":" * The Parser class denotes a parser."},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"     * Parse a certain string and determine which command is being called."},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"     * @param fullCommand   The string to be parsed."},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"     * @return              A command to be executed."},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"    public static Command parse(String[] fullCommand) {"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"        String type \u003d fullCommand[0];"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"        String taskDescription \u003d fullCommand[1];"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"        if (type.equals(\"list\")) {"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"            return new ListCommand(taskDescription);"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"        } else if (type.equals(\"bye\")) {"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"            return new ByeCommand(taskDescription);"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"        } else if (type.equals(\"todo\") || type.equals(\"deadline\") || type.equals(\"event\")) {"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"            return new AddCommand(type, taskDescription);"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"        } else if (type.equals(\"done\")) {"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"            return new DoneCommand(taskDescription);"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"        } else if (type.equals(\"delete\")) {"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"            return new DeleteCommand(taskDescription);"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"        } else if (type.equals(\"find\")) {"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"            return new FindCommand(taskDescription);"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"            return new UnknownCommand(taskDescription);"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":34}},{"path":"src/main/java/duke/logging/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.logging;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import duke.model.Deadline;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import duke.model.Event;"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import duke.model.Task;"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"import duke.model.ToDo;"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"import java.io.FileWriter;"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"import java.time.LocalDate;"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":" * A Storage class denotes a file storage."},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"public class Storage {"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"    private final File file;"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"     * Constructs a storage"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"     * @param filePath   he filepath where the data are going to be stored at."},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"    public Storage(String filePath) {"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"        this.file \u003d new File(filePath);"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"     * Load the tasks in the file."},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"     * @return                         A list of tasks in the file."},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"     * @throws FileNotFoundException   If file isn\u0027t found."},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"        Scanner sc \u003d new Scanner(file);"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"        while (sc.hasNext()) {"},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"            Task task;"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"            String data \u003d sc.nextLine();"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"            String[] strings \u003d data.split(\"// \");"},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"            char taskType \u003d strings[0].charAt(0);"},{"lineNumber":43,"author":{"gitId":"chewwh09"},"content":"            boolean isCompleted \u003d Integer.parseInt(strings[1].substring(0, 1)) \u003d\u003d 1;"},{"lineNumber":44,"author":{"gitId":"chewwh09"},"content":"            String taskName \u003d strings[2].strip();"},{"lineNumber":45,"author":{"gitId":"chewwh09"},"content":"            if (taskType \u003d\u003d \u0027T\u0027) {"},{"lineNumber":46,"author":{"gitId":"chewwh09"},"content":"                task \u003d new ToDo(isCompleted, taskName);"},{"lineNumber":47,"author":{"gitId":"chewwh09"},"content":"            } else if (taskType \u003d\u003d \u0027D\u0027) {"},{"lineNumber":48,"author":{"gitId":"chewwh09"},"content":"                task \u003d new Deadline(isCompleted, taskName, LocalDate.parse(strings[3].strip()));"},{"lineNumber":49,"author":{"gitId":"chewwh09"},"content":"            } else {"},{"lineNumber":50,"author":{"gitId":"chewwh09"},"content":"                task \u003d new Event(isCompleted, taskName, LocalDate.parse(strings[3].strip()));"},{"lineNumber":51,"author":{"gitId":"chewwh09"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"chewwh09"},"content":"            tasks.add(task);"},{"lineNumber":53,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"chewwh09"},"content":"        return tasks;"},{"lineNumber":55,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":57,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"chewwh09"},"content":"     * Overwrite the entire task\u0027s file content."},{"lineNumber":59,"author":{"gitId":"chewwh09"},"content":"     * @param tasks         A list of tasks."},{"lineNumber":60,"author":{"gitId":"chewwh09"},"content":"     * @throws IOException  If file cannot be written or open."},{"lineNumber":61,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"chewwh09"},"content":"    public void overwrite(ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":63,"author":{"gitId":"chewwh09"},"content":"        FileWriter fw \u003d new FileWriter(file);"},{"lineNumber":64,"author":{"gitId":"chewwh09"},"content":"        for (Task task : tasks) {"},{"lineNumber":65,"author":{"gitId":"chewwh09"},"content":"            fw.write(task.generateFileFormatString() + \"\\n\");"},{"lineNumber":66,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"chewwh09"},"content":"        fw.close();"},{"lineNumber":68,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":70,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"chewwh09"},"content":"     * Append to the back of the task\u0027s file."},{"lineNumber":72,"author":{"gitId":"chewwh09"},"content":"     * @param task          A list of tasks"},{"lineNumber":73,"author":{"gitId":"chewwh09"},"content":"     * @throws IOException  If file cannot be written or open."},{"lineNumber":74,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"chewwh09"},"content":"    public void append(Task task) throws IOException {"},{"lineNumber":76,"author":{"gitId":"chewwh09"},"content":"        FileWriter fw \u003d new FileWriter(file, true);"},{"lineNumber":77,"author":{"gitId":"chewwh09"},"content":"        fw.write(task.generateFileFormatString() + \"\\n\");"},{"lineNumber":78,"author":{"gitId":"chewwh09"},"content":"        fw.close();"},{"lineNumber":79,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":80}},{"path":"src/main/java/duke/logging/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.logging;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import duke.exception.InvalidDescriptionException;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import duke.model.Deadline;"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import duke.model.Event;"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"import duke.model.Task;"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"import duke.model.ToDo;"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"import java.time.LocalDate;"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":" * A TaskList call denotes a system with a list of task and has the ability to make changes to the list."},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"public class TaskList {"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"     * Construct a TaskList."},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"     * @param tasks   A list of tasks."},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"     * Print out all the tasks in the list."},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"    public void list() {"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"        System.out.println(\"     Here are the tasks in your list:\");"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"            System.out.println(\"     \" + (i + 1) + \".\" + tasks.get(i));"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"     * Add the task into the list."},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"     * @param type                          The type of task to be added into the list."},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"     * @param taskDescription               The description of the task."},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"     * @param ui                            A user interface."},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"     * @return                              The task that has been added to the list."},{"lineNumber":43,"author":{"gitId":"chewwh09"},"content":"     * @throws InvalidDescriptionException  If the format of the command is wrong."},{"lineNumber":44,"author":{"gitId":"chewwh09"},"content":"     * @throws DateTimeParseException       If the format of the dateTime is wrong."},{"lineNumber":45,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"chewwh09"},"content":"    public Task addTask(String type, String taskDescription, Ui ui)"},{"lineNumber":47,"author":{"gitId":"chewwh09"},"content":"            throws InvalidDescriptionException, DateTimeParseException {"},{"lineNumber":48,"author":{"gitId":"chewwh09"},"content":"        Task task;"},{"lineNumber":49,"author":{"gitId":"chewwh09"},"content":"        if (taskDescription.length() \u003d\u003d 0) {"},{"lineNumber":50,"author":{"gitId":"chewwh09"},"content":"            throw new InvalidDescriptionException(\"☹ OOPS!!! The description of \" + type + \" cannot be empty.\");"},{"lineNumber":51,"author":{"gitId":"chewwh09"},"content":"        } else if (type.equals(\"todo\")) {"},{"lineNumber":52,"author":{"gitId":"chewwh09"},"content":"            task \u003d new ToDo(false, taskDescription);"},{"lineNumber":53,"author":{"gitId":"chewwh09"},"content":"        } else if ((type.equals(\"deadline\") \u0026\u0026 !taskDescription.contains(\"/by\"))"},{"lineNumber":54,"author":{"gitId":"chewwh09"},"content":"                || (type.equals(\"event\")) \u0026\u0026 !taskDescription.contains(\"/at\")) {"},{"lineNumber":55,"author":{"gitId":"chewwh09"},"content":"            throw new InvalidDescriptionException(\"☹ OOPS!!! The description format of \" + type + \" is wrong.\");"},{"lineNumber":56,"author":{"gitId":"chewwh09"},"content":"        } else {"},{"lineNumber":57,"author":{"gitId":"chewwh09"},"content":"            int index \u003d type.equals(\"deadline\")"},{"lineNumber":58,"author":{"gitId":"chewwh09"},"content":"                    ? taskDescription.indexOf(\"/by\")"},{"lineNumber":59,"author":{"gitId":"chewwh09"},"content":"                    : taskDescription.indexOf(\"/at\");"},{"lineNumber":60,"author":{"gitId":"chewwh09"},"content":"            String taskName \u003d taskDescription.substring(0, index);"},{"lineNumber":61,"author":{"gitId":"chewwh09"},"content":"            String dateTimeString \u003d taskDescription.substring(index + 4).strip()"},{"lineNumber":62,"author":{"gitId":"chewwh09"},"content":"                    .replace(\"/\", \"-\");"},{"lineNumber":63,"author":{"gitId":"chewwh09"},"content":"            LocalDate dateTime \u003d LocalDate.parse(dateTimeString);"},{"lineNumber":64,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":65,"author":{"gitId":"chewwh09"},"content":"            if (type.equals(\"deadline\")) {"},{"lineNumber":66,"author":{"gitId":"chewwh09"},"content":"                task \u003d new Deadline(false, taskName, dateTime);"},{"lineNumber":67,"author":{"gitId":"chewwh09"},"content":"            } else {"},{"lineNumber":68,"author":{"gitId":"chewwh09"},"content":"                task \u003d new Event(false, taskName, dateTime);"},{"lineNumber":69,"author":{"gitId":"chewwh09"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"chewwh09"},"content":"        tasks.add(task);"},{"lineNumber":72,"author":{"gitId":"chewwh09"},"content":"        ui.addCommandInteraction(task, tasks);"},{"lineNumber":73,"author":{"gitId":"chewwh09"},"content":"        return task;"},{"lineNumber":74,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":76,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"chewwh09"},"content":"     * Delete a task from the list."},{"lineNumber":78,"author":{"gitId":"chewwh09"},"content":"     * @param taskDescription               The description of the task."},{"lineNumber":79,"author":{"gitId":"chewwh09"},"content":"     * @param ui                            A user interface."},{"lineNumber":80,"author":{"gitId":"chewwh09"},"content":"     * @return                              The list of tasks remaining."},{"lineNumber":81,"author":{"gitId":"chewwh09"},"content":"     * @throws InvalidDescriptionException  If the format of the command is wrong."},{"lineNumber":82,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"chewwh09"},"content":"    public ArrayList\u003cTask\u003e delete(String taskDescription, Ui ui) throws InvalidDescriptionException{"},{"lineNumber":84,"author":{"gitId":"chewwh09"},"content":"        try {"},{"lineNumber":85,"author":{"gitId":"chewwh09"},"content":"            int index \u003d Integer.parseInt(taskDescription.substring(0, 1)) - 1;"},{"lineNumber":86,"author":{"gitId":"chewwh09"},"content":"            Task task \u003d tasks.get(index);"},{"lineNumber":87,"author":{"gitId":"chewwh09"},"content":"            tasks.remove(index);"},{"lineNumber":88,"author":{"gitId":"chewwh09"},"content":"            ui.deleteCommandInteraction(task, tasks);"},{"lineNumber":89,"author":{"gitId":"chewwh09"},"content":"            return tasks;"},{"lineNumber":90,"author":{"gitId":"chewwh09"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":91,"author":{"gitId":"chewwh09"},"content":"            throw new InvalidDescriptionException(\"☹ OOPS!!! The task description is wrong\");"},{"lineNumber":92,"author":{"gitId":"chewwh09"},"content":"        } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":93,"author":{"gitId":"chewwh09"},"content":"            throw new InvalidDescriptionException(\"☹ OOPS!!! The number you entered is either too big \""},{"lineNumber":94,"author":{"gitId":"chewwh09"},"content":"                    + \"or smaller than 0. There are currently \" + tasks.size() + \" tasks\");"},{"lineNumber":95,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":98,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"chewwh09"},"content":"     * Completed a task in the list."},{"lineNumber":100,"author":{"gitId":"chewwh09"},"content":"     * @param taskDescription                 The description of the task."},{"lineNumber":101,"author":{"gitId":"chewwh09"},"content":"     * @param ui                              A user interface."},{"lineNumber":102,"author":{"gitId":"chewwh09"},"content":"     * @return                                The list of tasks."},{"lineNumber":103,"author":{"gitId":"chewwh09"},"content":"     * @throws InvalidDescriptionException    If the format of the command is wrong."},{"lineNumber":104,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"chewwh09"},"content":"    public ArrayList\u003cTask\u003e done(String taskDescription, Ui ui) throws InvalidDescriptionException {"},{"lineNumber":106,"author":{"gitId":"chewwh09"},"content":"        try {"},{"lineNumber":107,"author":{"gitId":"chewwh09"},"content":"            int index \u003d Integer.parseInt(taskDescription.substring(0, 1)) - 1;"},{"lineNumber":108,"author":{"gitId":"chewwh09"},"content":"            Task task \u003d tasks.get(index);"},{"lineNumber":109,"author":{"gitId":"chewwh09"},"content":"            task.completeTask();"},{"lineNumber":110,"author":{"gitId":"chewwh09"},"content":"            ui.doneCommandInteraction(task);"},{"lineNumber":111,"author":{"gitId":"chewwh09"},"content":"            return tasks;"},{"lineNumber":112,"author":{"gitId":"chewwh09"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":113,"author":{"gitId":"chewwh09"},"content":"            throw new InvalidDescriptionException(\"☹ OOPS!!! The task description is wrong\");"},{"lineNumber":114,"author":{"gitId":"chewwh09"},"content":"        } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":115,"author":{"gitId":"chewwh09"},"content":"            throw new InvalidDescriptionException(\"☹ OOPS!!! The number you entered is either too big \""},{"lineNumber":116,"author":{"gitId":"chewwh09"},"content":"                    + \"or smaller than 0. There are currently \" + tasks.size() + \" tasks\");"},{"lineNumber":117,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":120,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"chewwh09"},"content":"     * Find a task that has it\u0027s name matching the task description."},{"lineNumber":122,"author":{"gitId":"chewwh09"},"content":"     * @param taskDescription                 The description of the task."},{"lineNumber":123,"author":{"gitId":"chewwh09"},"content":"     * @param ui                              A user interface."},{"lineNumber":124,"author":{"gitId":"chewwh09"},"content":"     * @throws InvalidDescriptionException    If the task description is empty."},{"lineNumber":125,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"chewwh09"},"content":"    public void find(String taskDescription, Ui ui) throws InvalidDescriptionException {"},{"lineNumber":127,"author":{"gitId":"chewwh09"},"content":"        if (taskDescription.length() \u003d\u003d 0) {"},{"lineNumber":128,"author":{"gitId":"chewwh09"},"content":"            throw new InvalidDescriptionException(\"☹ OOPS!!! The description cannot be empty.\");"},{"lineNumber":129,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"chewwh09"},"content":"        System.out.println(taskDescription.length());"},{"lineNumber":131,"author":{"gitId":"chewwh09"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":132,"author":{"gitId":"chewwh09"},"content":"        for (Task task: tasks) {"},{"lineNumber":133,"author":{"gitId":"chewwh09"},"content":"            if (task.containSubstring(taskDescription.strip())) {"},{"lineNumber":134,"author":{"gitId":"chewwh09"},"content":"                matchingTasks.add(task);"},{"lineNumber":135,"author":{"gitId":"chewwh09"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"chewwh09"},"content":"        ui.findCommandInteraction(matchingTasks);"},{"lineNumber":138,"author":{"gitId":"chewwh09"},"content":"        for (Task task: matchingTasks) {"},{"lineNumber":139,"author":{"gitId":"chewwh09"},"content":"            System.out.println(\"     \" + task);"},{"lineNumber":140,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":142}},{"path":"src/main/java/duke/logging/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.logging;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import duke.exception.InvalidInputException;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import duke.model.Task;"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":" * A Ui class denotes a user interface system."},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"public class Ui {"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"     * A welcome message from Duke chat bot."},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"     * @param tasks    A list of tasks in Duke chat bot."},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"    public void showWelcome(TaskList tasks) {"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"        tasks.list();"},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"        System.out.println(\"\\n     What can I do for you?\");"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"        System.out.println(\"     _______________________________________\\n\");"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"     * Print a straight line."},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"    public void printLine() {"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"        System.out.println(\"     _______________________________________\");"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"     * Read the user input."},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"     * @param sc  A scanner to read user input."},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"     * @return    The user input."},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"    public String[] readCommand(Scanner sc) {"},{"lineNumber":43,"author":{"gitId":"chewwh09"},"content":"        String[] userInput \u003d new String[2];"},{"lineNumber":44,"author":{"gitId":"chewwh09"},"content":"        userInput[0] \u003d sc.next();"},{"lineNumber":45,"author":{"gitId":"chewwh09"},"content":"        userInput[1] \u003d sc.nextLine().strip();"},{"lineNumber":46,"author":{"gitId":"chewwh09"},"content":"        return userInput;"},{"lineNumber":47,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":49,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"chewwh09"},"content":"     * An add command interaction which complements with the add command."},{"lineNumber":51,"author":{"gitId":"chewwh09"},"content":"     * @param task    The task to be added to the list."},{"lineNumber":52,"author":{"gitId":"chewwh09"},"content":"     * @param tasks   The list of tasks in Duke chat bot."},{"lineNumber":53,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"chewwh09"},"content":"    public void addCommandInteraction(Task task, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":55,"author":{"gitId":"chewwh09"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");"},{"lineNumber":56,"author":{"gitId":"chewwh09"},"content":"        System.out.println(\"     \" + task);"},{"lineNumber":57,"author":{"gitId":"chewwh09"},"content":"        System.out.println(\"     Now you have \" + tasks.size() + \" task(s) in the list\");"},{"lineNumber":58,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":60,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"chewwh09"},"content":"     * A delete command interaction which complements with the delete command."},{"lineNumber":62,"author":{"gitId":"chewwh09"},"content":"     * @param task    The task to be added to the list."},{"lineNumber":63,"author":{"gitId":"chewwh09"},"content":"     * @param tasks   The list of tasks in Duke chat bot."},{"lineNumber":64,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"chewwh09"},"content":"    public void deleteCommandInteraction(Task task, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":66,"author":{"gitId":"chewwh09"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task: \");"},{"lineNumber":67,"author":{"gitId":"chewwh09"},"content":"        System.out.println(\"     \" + task);"},{"lineNumber":68,"author":{"gitId":"chewwh09"},"content":"        System.out.println(\"     Now you have \" + tasks.size() + \" task(s) in the list\");"},{"lineNumber":69,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":71,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"chewwh09"},"content":"     * A done command interaction which complements with the done command."},{"lineNumber":73,"author":{"gitId":"chewwh09"},"content":"     * @param task    The task to be added to the list."},{"lineNumber":74,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"chewwh09"},"content":"    public void doneCommandInteraction(Task task) {"},{"lineNumber":76,"author":{"gitId":"chewwh09"},"content":"        System.out.println(\"     Nice! I\u0027ve marked this task as done:\\n     \" + task);"},{"lineNumber":77,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":79,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"chewwh09"},"content":"     * A list command interaction which complements with the list command."},{"lineNumber":81,"author":{"gitId":"chewwh09"},"content":"     * @param task    The task to be added to the list."},{"lineNumber":82,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"chewwh09"},"content":"    public void listCommandInteraction(TaskList task) {"},{"lineNumber":84,"author":{"gitId":"chewwh09"},"content":"        task.list();"},{"lineNumber":85,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":87,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"chewwh09"},"content":"     * A bye command interaction which complements with the bye command."},{"lineNumber":89,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"chewwh09"},"content":"    public void byeCommandInteraction() {"},{"lineNumber":91,"author":{"gitId":"chewwh09"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");"},{"lineNumber":92,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":94,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"chewwh09"},"content":"     * A unknown command interaction which complements with an unknown command."},{"lineNumber":96,"author":{"gitId":"chewwh09"},"content":"     * @throws InvalidInputException  Always throws an InvalidInputException."},{"lineNumber":97,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"chewwh09"},"content":"    public void unknownCommandInteraction() throws InvalidInputException {"},{"lineNumber":99,"author":{"gitId":"chewwh09"},"content":"        throw new InvalidInputException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":100,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":102,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"chewwh09"},"content":"     * A find command interaction which complements with a find command."},{"lineNumber":104,"author":{"gitId":"chewwh09"},"content":"     * @param matchingTasks    All the matching tasks found."},{"lineNumber":105,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"chewwh09"},"content":"    public void findCommandInteraction(ArrayList\u003cTask\u003e matchingTasks) {"},{"lineNumber":107,"author":{"gitId":"chewwh09"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {"},{"lineNumber":108,"author":{"gitId":"chewwh09"},"content":"            System.out.println(\"     ☹ No match found ☹\");"},{"lineNumber":109,"author":{"gitId":"chewwh09"},"content":"        } else {"},{"lineNumber":110,"author":{"gitId":"chewwh09"},"content":"            System.out.println(\"     Here are the matching tasks in your list:\");"},{"lineNumber":111,"author":{"gitId":"chewwh09"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":113}},{"path":"src/main/java/duke/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.model;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":" * A Deadline class denotes a deadline."},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"public class Deadline extends Task{"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"    private final LocalDate dateTime;"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"     * Construct a deadline."},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"     * @param isCompleted   Checked if the task is completed."},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"     * @param taskName     The task name."},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"     * @param dateTime     The date and time of the deadline."},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"    public Deadline(boolean isCompleted, String taskName, LocalDate dateTime) {"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"        super(\u0027D\u0027, isCompleted, taskName);"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"     * Generate a string to store in a file."},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"     * @return   A string that will be store in a file."},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"    public String generateFileFormatString() {"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"        return super.generateFileFormatString() + \" // \""},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"                + this.dateTime;"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"     * A string representation of a deadline."},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"     * @return  A string representing a deadline."},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"                this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":42}},{"path":"src/main/java/duke/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.model;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":" * An Event class denotes an event."},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"    private final LocalDate dateTime;"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"     * Constructs an Event."},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"     * @param isCompleted   Checked if the task is completed."},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"     * @param taskName     The task name."},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"     * @param dateTime     The date and time of the event."},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"    public Event(boolean isCompleted, String taskName, LocalDate dateTime) {"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"        super(\u0027E\u0027, isCompleted, taskName);"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"     * Generate a string to store in a file."},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"     * @return   A string that will be store in a file."},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"    public String generateFileFormatString() {"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"        return super.generateFileFormatString() + \" // \""},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":"                + this.dateTime;"},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"     * A string representation of an event."},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"     * @return  A string representing an event."},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(),"},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"                this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":42}},{"path":"src/main/java/duke/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.model;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":" * A task class denotes a task."},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"    private final char taskType;"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"    private boolean isCompleted;"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"    private final String taskName;"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"     * Construct a task."},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"     * @param taskType    The type of the task."},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"     * @param isCompleted  Checked if the task is completed."},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":"     * @param taskName    The task name."},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"    public Task(char taskType, boolean isCompleted, String taskName) {"},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"        this.isCompleted \u003d isCompleted;"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"     * Generate a string to store in a file."},{"lineNumber":25,"author":{"gitId":"chewwh09"},"content":"     * @return   A string that will be store in a file."},{"lineNumber":26,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"chewwh09"},"content":"    public String generateFileFormatString() {"},{"lineNumber":28,"author":{"gitId":"chewwh09"},"content":"        return String.format(\"%c // %d // %s\", taskType, isCompleted ? 1 : 0, taskName);"},{"lineNumber":29,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":31,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"chewwh09"},"content":"     * Completed the task."},{"lineNumber":33,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"chewwh09"},"content":"    public void completeTask() {"},{"lineNumber":35,"author":{"gitId":"chewwh09"},"content":"        this.isCompleted \u003d true;"},{"lineNumber":36,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":38,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"chewwh09"},"content":"     * Determine if the task name contains str substring."},{"lineNumber":40,"author":{"gitId":"chewwh09"},"content":"     * @param str    A substring."},{"lineNumber":41,"author":{"gitId":"chewwh09"},"content":"     * @return       True if the task name contains the substring, otherwise false."},{"lineNumber":42,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"chewwh09"},"content":"    public boolean containSubstring(String str) {"},{"lineNumber":44,"author":{"gitId":"chewwh09"},"content":"        return this.taskName.contains(str);"},{"lineNumber":45,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":47,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"chewwh09"},"content":"     * A string representation of a task."},{"lineNumber":49,"author":{"gitId":"chewwh09"},"content":"     * @return  A string representing a task."},{"lineNumber":50,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"chewwh09"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"chewwh09"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"chewwh09"},"content":"        return String.format(\"[%c] %s\", isCompleted ? \u0027X\u0027: \u0027 \u0027, this.taskName);"},{"lineNumber":54,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":55}},{"path":"src/main/java/duke/model/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.model;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":" * A ToDo class denotes a to-do item."},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":" */"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"     * Constructs a ToDo."},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"     * @param isCompleted   Checked if the task is completed."},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"     * @param taskName     The task name."},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"    public ToDo(Boolean isCompleted, String taskName) {"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"        super(\u0027T\u0027, isCompleted, taskName);"},{"lineNumber":14,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":16,"author":{"gitId":"chewwh09"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"chewwh09"},"content":"     * A string representation of a to-do item."},{"lineNumber":18,"author":{"gitId":"chewwh09"},"content":"     * @return  A string representing a to-do item."},{"lineNumber":19,"author":{"gitId":"chewwh09"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"chewwh09"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"chewwh09"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"chewwh09"},"content":"        return String.format(\"[T]%s\", super.toString());"},{"lineNumber":23,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":24}},{"path":"src/test/java/duke/model/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.model;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"    public void testGenerateFileFormatString() {"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"        assertEquals(\"D // 0 // project1 // 2019-12-01\","},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"                new Deadline(false, \"project1\", LocalDate.parse(\"2019-12-01\")).generateFileFormatString());"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":13}},{"path":"src/test/java/duke/model/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"package duke.model;"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":""},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"public class EventTest {"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"    public void createNewEvent() {"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"        assertEquals(\"[T][X] read book\","},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"                (new ToDo(true, \"read book\")).toString());"},{"lineNumber":11,"author":{"gitId":"chewwh09"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"chewwh09"},"content":"}"}],"authorContributionMap":{"chewwh09":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chewwh09"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"chewwh09"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"chewwh09"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"chewwh09"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"chewwh09"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"chewwh09"},"content":"list"},{"lineNumber":7,"author":{"gitId":"chewwh09"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"chewwh09"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"chewwh09"},"content":"list"},{"lineNumber":10,"author":{"gitId":"chewwh09"},"content":"bye"}],"authorContributionMap":{"chewwh09":10}}]
