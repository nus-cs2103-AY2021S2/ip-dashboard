[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasaaanlim"},"content":"public class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"jasaaanlim"},"content":"    protected String by;"},{"lineNumber":3,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":4,"author":{"gitId":"jasaaanlim"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":5,"author":{"gitId":"jasaaanlim"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"jasaaanlim"},"content":"        this.by \u003d by;"},{"lineNumber":7,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":9,"author":{"gitId":"jasaaanlim"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"jasaaanlim"},"content":"        return \"[D]\" + super.toString() + \" \" + \"(by: \" + this.by + \")\";"},{"lineNumber":11,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jasaaanlim"},"content":"}"}],"authorContributionMap":{"jasaaanlim":12}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasaaanlim"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"jasaaanlim"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"jasaaanlim"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"jasaaanlim"},"content":"import java.util.regex.Matcher;"},{"lineNumber":5,"author":{"gitId":"jasaaanlim"},"content":"import java.util.regex.Pattern;"},{"lineNumber":6,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"jasaaanlim"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"jasaaanlim"},"content":"        String input;"},{"lineNumber":11,"author":{"gitId":"jasaaanlim"},"content":"        String splitInput[];"},{"lineNumber":12,"author":{"gitId":"jasaaanlim"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"jasaaanlim"},"content":"        "},{"lineNumber":14,"author":{"gitId":"jasaaanlim"},"content":"        printMessage(\"Hey! It\u0027s PAson, ready to help :)\\nHow can I help you today?\");"},{"lineNumber":15,"author":{"gitId":"jasaaanlim"},"content":"        while(scanner.hasNext()) {"},{"lineNumber":16,"author":{"gitId":"jasaaanlim"},"content":"            try {"},{"lineNumber":17,"author":{"gitId":"jasaaanlim"},"content":"                input \u003d scanner.nextLine();"},{"lineNumber":18,"author":{"gitId":"jasaaanlim"},"content":"                splitInput \u003d input.split(\" \");"},{"lineNumber":19,"author":{"gitId":"jasaaanlim"},"content":"                String command \u003d splitInput[0].toLowerCase();"},{"lineNumber":20,"author":{"gitId":"jasaaanlim"},"content":"                switch (command) {"},{"lineNumber":21,"author":{"gitId":"jasaaanlim"},"content":"                    case \"bye\":"},{"lineNumber":22,"author":{"gitId":"jasaaanlim"},"content":"                        printMessage(\"Bye! I shall go rest now. PAge me when you need me!\");"},{"lineNumber":23,"author":{"gitId":"jasaaanlim"},"content":"                        return;"},{"lineNumber":24,"author":{"gitId":"jasaaanlim"},"content":"                    case \"list\":"},{"lineNumber":25,"author":{"gitId":"jasaaanlim"},"content":"                        listTasks();"},{"lineNumber":26,"author":{"gitId":"jasaaanlim"},"content":"                        break;"},{"lineNumber":27,"author":{"gitId":"jasaaanlim"},"content":"                    case \"done\":"},{"lineNumber":28,"author":{"gitId":"jasaaanlim"},"content":"                        doneTask(Integer.parseInt(splitInput[1]));"},{"lineNumber":29,"author":{"gitId":"jasaaanlim"},"content":"                        break;"},{"lineNumber":30,"author":{"gitId":"jasaaanlim"},"content":"                    case \"delete\":"},{"lineNumber":31,"author":{"gitId":"jasaaanlim"},"content":"                        deleteTask(Integer.parseInt(splitInput[1]));"},{"lineNumber":32,"author":{"gitId":"jasaaanlim"},"content":"                        break;"},{"lineNumber":33,"author":{"gitId":"jasaaanlim"},"content":"                    case \"todo\":"},{"lineNumber":34,"author":{"gitId":"jasaaanlim"},"content":"                        addToDo(input);"},{"lineNumber":35,"author":{"gitId":"jasaaanlim"},"content":"                        break;"},{"lineNumber":36,"author":{"gitId":"jasaaanlim"},"content":"                    case \"deadline\":"},{"lineNumber":37,"author":{"gitId":"jasaaanlim"},"content":"                        addDeadline(input);"},{"lineNumber":38,"author":{"gitId":"jasaaanlim"},"content":"                        break;"},{"lineNumber":39,"author":{"gitId":"jasaaanlim"},"content":"                    case \"event\":"},{"lineNumber":40,"author":{"gitId":"jasaaanlim"},"content":"                        addEvent(input);"},{"lineNumber":41,"author":{"gitId":"jasaaanlim"},"content":"                        break;"},{"lineNumber":42,"author":{"gitId":"jasaaanlim"},"content":"                    default:"},{"lineNumber":43,"author":{"gitId":"jasaaanlim"},"content":"                        throw new DukeException(\"I can\u0027t help you with this command yet. Sorry!\");"},{"lineNumber":44,"author":{"gitId":"jasaaanlim"},"content":"                }"},{"lineNumber":45,"author":{"gitId":"jasaaanlim"},"content":"            } catch(Exception e) {"},{"lineNumber":46,"author":{"gitId":"jasaaanlim"},"content":"                printMessage(\"Oops! \" + e.getMessage());"},{"lineNumber":47,"author":{"gitId":"jasaaanlim"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"jasaaanlim"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":51,"author":{"gitId":"jasaaanlim"},"content":"    public static void printMessage(String message) {"},{"lineNumber":52,"author":{"gitId":"jasaaanlim"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":53,"author":{"gitId":"jasaaanlim"},"content":"        System.out.println(message);"},{"lineNumber":54,"author":{"gitId":"jasaaanlim"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":57,"author":{"gitId":"jasaaanlim"},"content":"    public static void doneTask(int index) {"},{"lineNumber":58,"author":{"gitId":"jasaaanlim"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"jasaaanlim"},"content":"            if(tasks.get(index - 1).isDone()) {"},{"lineNumber":60,"author":{"gitId":"jasaaanlim"},"content":"                throw new DukeException(\"You\u0027ve already marked this task as done.\");"},{"lineNumber":61,"author":{"gitId":"jasaaanlim"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"jasaaanlim"},"content":"            tasks.get(index - 1).markAsDone();"},{"lineNumber":63,"author":{"gitId":"jasaaanlim"},"content":"            printMessage(\"Good job! I\u0027ve marked this task as done:\\n\" + tasks.get(index - 1));"},{"lineNumber":64,"author":{"gitId":"jasaaanlim"},"content":"        } catch(IndexOutOfBoundsException e) {"},{"lineNumber":65,"author":{"gitId":"jasaaanlim"},"content":"            printMessage(\"Oops! We couldn\u0027t find this task. Please enter the correct task number.\");"},{"lineNumber":66,"author":{"gitId":"jasaaanlim"},"content":"        } catch(Exception e) {"},{"lineNumber":67,"author":{"gitId":"jasaaanlim"},"content":"            printMessage(\"Oops! \" + e.getMessage());"},{"lineNumber":68,"author":{"gitId":"jasaaanlim"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":71,"author":{"gitId":"jasaaanlim"},"content":"    public static void listTasks() {"},{"lineNumber":72,"author":{"gitId":"jasaaanlim"},"content":"        if(tasks.size() \u003d\u003d 0) {"},{"lineNumber":73,"author":{"gitId":"jasaaanlim"},"content":"            printMessage(\"There are no tasks in your list. Time to add some!\");"},{"lineNumber":74,"author":{"gitId":"jasaaanlim"},"content":"        } else {"},{"lineNumber":75,"author":{"gitId":"jasaaanlim"},"content":"            System.out.println(\"____________________________________________________________\");"},{"lineNumber":76,"author":{"gitId":"jasaaanlim"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":77,"author":{"gitId":"jasaaanlim"},"content":"            for(int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":78,"author":{"gitId":"jasaaanlim"},"content":"                System.out.println((i+1)+\". \" + tasks.get(i));"},{"lineNumber":79,"author":{"gitId":"jasaaanlim"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"jasaaanlim"},"content":"            System.out.println(\"____________________________________________________________\");"},{"lineNumber":81,"author":{"gitId":"jasaaanlim"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":84,"author":{"gitId":"jasaaanlim"},"content":"    public static void deleteTask(int index) {"},{"lineNumber":85,"author":{"gitId":"jasaaanlim"},"content":"        index \u003d index - 1;"},{"lineNumber":86,"author":{"gitId":"jasaaanlim"},"content":"        try {"},{"lineNumber":87,"author":{"gitId":"jasaaanlim"},"content":"            if(index \u003e tasks.size() - 1 || index \u003c 0) {"},{"lineNumber":88,"author":{"gitId":"jasaaanlim"},"content":"                throw new DukeException(\"You\u0027ve entered an invalid task number.\");"},{"lineNumber":89,"author":{"gitId":"jasaaanlim"},"content":"            } else {"},{"lineNumber":90,"author":{"gitId":"jasaaanlim"},"content":"                printMessage(\"Okay! I\u0027ve removed this task:\\n\\t\" + tasks.get(index) + \"\\nNow there are \" + (tasks.size() - 1) + \" tasks in your list.\");"},{"lineNumber":91,"author":{"gitId":"jasaaanlim"},"content":"                tasks.remove(index);"},{"lineNumber":92,"author":{"gitId":"jasaaanlim"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"jasaaanlim"},"content":"        } catch(Exception e) {"},{"lineNumber":94,"author":{"gitId":"jasaaanlim"},"content":"            printMessage(\"Oops! \" + e.getMessage());"},{"lineNumber":95,"author":{"gitId":"jasaaanlim"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":98,"author":{"gitId":"jasaaanlim"},"content":"    public static void addToDo(String input) {"},{"lineNumber":99,"author":{"gitId":"jasaaanlim"},"content":"        try {"},{"lineNumber":100,"author":{"gitId":"jasaaanlim"},"content":"            Pattern p \u003d Pattern.compile(\"(todo) ([\\\\w ]*)\");"},{"lineNumber":101,"author":{"gitId":"jasaaanlim"},"content":"            Matcher m \u003d p.matcher(input);"},{"lineNumber":102,"author":{"gitId":"jasaaanlim"},"content":"            if(!m.find()) {"},{"lineNumber":103,"author":{"gitId":"jasaaanlim"},"content":"                throw new DukeException(\"Please include a description for your todo task.\");"},{"lineNumber":104,"author":{"gitId":"jasaaanlim"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"jasaaanlim"},"content":"            ToDo newToDo \u003d new ToDo(m.group(2));"},{"lineNumber":106,"author":{"gitId":"jasaaanlim"},"content":"            tasks.add(newToDo);"},{"lineNumber":107,"author":{"gitId":"jasaaanlim"},"content":"            printMessage(\"Done! I\u0027ve added a new todo:\\n\\t\" + newToDo + \"\\nNow there are \" + tasks.size() + \" tasks in your list.\");"},{"lineNumber":108,"author":{"gitId":"jasaaanlim"},"content":"        } catch(Exception e) {"},{"lineNumber":109,"author":{"gitId":"jasaaanlim"},"content":"            printMessage(\"Oops! \" + e.getMessage());"},{"lineNumber":110,"author":{"gitId":"jasaaanlim"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":113,"author":{"gitId":"jasaaanlim"},"content":"    public static void addDeadline(String input) {"},{"lineNumber":114,"author":{"gitId":"jasaaanlim"},"content":"        try {"},{"lineNumber":115,"author":{"gitId":"jasaaanlim"},"content":"            String[] splitInput;"},{"lineNumber":116,"author":{"gitId":"jasaaanlim"},"content":"            splitInput \u003d input.substring(8).trim().split(\" /by \");"},{"lineNumber":117,"author":{"gitId":"jasaaanlim"},"content":"            if(splitInput.length \u003d\u003d 2) {"},{"lineNumber":118,"author":{"gitId":"jasaaanlim"},"content":"                Deadline newDeadline \u003d new Deadline(splitInput[0], splitInput[1]);"},{"lineNumber":119,"author":{"gitId":"jasaaanlim"},"content":"                tasks.add(newDeadline);"},{"lineNumber":120,"author":{"gitId":"jasaaanlim"},"content":"                printMessage(\"Done! I\u0027ve added a new deadline:\\n\\t\" + newDeadline + \"\\nNow there are \" + tasks.size() + \" tasks in your list.\");"},{"lineNumber":121,"author":{"gitId":"jasaaanlim"},"content":"            } else if(splitInput.length \u003d\u003d 1) {"},{"lineNumber":122,"author":{"gitId":"jasaaanlim"},"content":"                throw new DukeException(\"Please enter a by date for \u0027\" + splitInput[0] + \"\u0027\");"},{"lineNumber":123,"author":{"gitId":"jasaaanlim"},"content":"            } else if(splitInput.length \u003d\u003d 0) {"},{"lineNumber":124,"author":{"gitId":"jasaaanlim"},"content":"                throw new DukeException(\"Please enter a description followed by the date in the format: deadline \u003cdescription\u003e /by \u003cwhen\u003e\");"},{"lineNumber":125,"author":{"gitId":"jasaaanlim"},"content":"            } else {"},{"lineNumber":126,"author":{"gitId":"jasaaanlim"},"content":"                throw new DukeException(\"You\u0027ve entered an invalid format. Please use: deadline \u003cdescription\u003e /by \u003cwhen\u003e\");"},{"lineNumber":127,"author":{"gitId":"jasaaanlim"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"jasaaanlim"},"content":"        } catch(DukeException e) {"},{"lineNumber":129,"author":{"gitId":"jasaaanlim"},"content":"            printMessage(\"Oops! \" + e.getMessage());"},{"lineNumber":130,"author":{"gitId":"jasaaanlim"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":133,"author":{"gitId":"jasaaanlim"},"content":"    public static void addEvent(String input) {"},{"lineNumber":134,"author":{"gitId":"jasaaanlim"},"content":"        try {"},{"lineNumber":135,"author":{"gitId":"jasaaanlim"},"content":"            String[] splitInput;"},{"lineNumber":136,"author":{"gitId":"jasaaanlim"},"content":"            splitInput \u003d input.substring(5).trim().split(\" /at \");"},{"lineNumber":137,"author":{"gitId":"jasaaanlim"},"content":"            if(splitInput.length \u003d\u003d 2) {"},{"lineNumber":138,"author":{"gitId":"jasaaanlim"},"content":"                Event newEvent \u003d new Event(splitInput[0], splitInput[1]);"},{"lineNumber":139,"author":{"gitId":"jasaaanlim"},"content":"                tasks.add(newEvent);"},{"lineNumber":140,"author":{"gitId":"jasaaanlim"},"content":"                printMessage(\"Done! I\u0027ve added a new event:\\n\\t\" + newEvent + \"\\nNow there are \" + tasks.size() + \" tasks in your list.\");"},{"lineNumber":141,"author":{"gitId":"jasaaanlim"},"content":"            } else if(splitInput.length \u003d\u003d 1) {"},{"lineNumber":142,"author":{"gitId":"jasaaanlim"},"content":"                System.out.println(splitInput[0]);"},{"lineNumber":143,"author":{"gitId":"jasaaanlim"},"content":"                throw new DukeException(\"Please enter a by date for \u0027\" + splitInput[0] + \"\u0027\");"},{"lineNumber":144,"author":{"gitId":"jasaaanlim"},"content":"            } else if(splitInput.length \u003d\u003d 0) {"},{"lineNumber":145,"author":{"gitId":"jasaaanlim"},"content":"                throw new DukeException(\"Please enter a description followed by the date in the format: event \u003cdescription\u003e /at \u003cwhen\u003e\");"},{"lineNumber":146,"author":{"gitId":"jasaaanlim"},"content":"            } else {"},{"lineNumber":147,"author":{"gitId":"jasaaanlim"},"content":"                throw new DukeException(\"You\u0027ve entered an invalid format. Please use: event \u003cdescription\u003e /at \u003cwhen\u003e\");"},{"lineNumber":148,"author":{"gitId":"jasaaanlim"},"content":"            }"},{"lineNumber":149,"author":{"gitId":"jasaaanlim"},"content":"        } catch(DukeException e) {"},{"lineNumber":150,"author":{"gitId":"jasaaanlim"},"content":"            printMessage(\"Oops! \" + e.getMessage());"},{"lineNumber":151,"author":{"gitId":"jasaaanlim"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jasaaanlim":147,"-":6}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasaaanlim"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"jasaaanlim"},"content":"    public DukeException(String string) {"},{"lineNumber":3,"author":{"gitId":"jasaaanlim"},"content":"        super(string);"},{"lineNumber":4,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"jasaaanlim"},"content":"}"}],"authorContributionMap":{"jasaaanlim":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasaaanlim"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"jasaaanlim"},"content":"    protected String at;"},{"lineNumber":3,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":4,"author":{"gitId":"jasaaanlim"},"content":"    public Event(String description, String at) {"},{"lineNumber":5,"author":{"gitId":"jasaaanlim"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"jasaaanlim"},"content":"        this.at \u003d at;"},{"lineNumber":7,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":9,"author":{"gitId":"jasaaanlim"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"jasaaanlim"},"content":"        return \"[E]\" + super.toString() + \" \" + \"(at: \" + this.at + \")\";"},{"lineNumber":11,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jasaaanlim"},"content":"}"}],"authorContributionMap":{"jasaaanlim":12}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasaaanlim"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"jasaaanlim"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"jasaaanlim"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":5,"author":{"gitId":"jasaaanlim"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"jasaaanlim"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"jasaaanlim"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":10,"author":{"gitId":"jasaaanlim"},"content":"    public String getDescription() {"},{"lineNumber":11,"author":{"gitId":"jasaaanlim"},"content":"        return this.description;"},{"lineNumber":12,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":14,"author":{"gitId":"jasaaanlim"},"content":"    public void markAsDone() {"},{"lineNumber":15,"author":{"gitId":"jasaaanlim"},"content":"        this.isDone \u003d true;"},{"lineNumber":16,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":18,"author":{"gitId":"jasaaanlim"},"content":"    public boolean isDone() {"},{"lineNumber":19,"author":{"gitId":"jasaaanlim"},"content":"        return this.isDone;"},{"lineNumber":20,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":22,"author":{"gitId":"jasaaanlim"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"jasaaanlim"},"content":"        return (this.isDone ? \"[\\u2713]\" : \"[\\u2718]\") + \" \" + this.description;"},{"lineNumber":24,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jasaaanlim"},"content":"}"}],"authorContributionMap":{"jasaaanlim":25}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jasaaanlim"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"jasaaanlim"},"content":"    public ToDo(String description) {"},{"lineNumber":3,"author":{"gitId":"jasaaanlim"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":6,"author":{"gitId":"jasaaanlim"},"content":"    public String toString() {"},{"lineNumber":7,"author":{"gitId":"jasaaanlim"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":8,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"jasaaanlim"},"content":"}"}],"authorContributionMap":{"jasaaanlim":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jasaaanlim"},"content":"list"},{"lineNumber":2,"author":{"gitId":"jasaaanlim"},"content":"todo Do CS2103T quiz"},{"lineNumber":3,"author":{"gitId":"jasaaanlim"},"content":"list"},{"lineNumber":4,"author":{"gitId":"jasaaanlim"},"content":"deadline Complete week 2 iP /by Sunday"},{"lineNumber":5,"author":{"gitId":"jasaaanlim"},"content":"list"},{"lineNumber":6,"author":{"gitId":"jasaaanlim"},"content":"event Birthday party /at Mon 2-4pm"},{"lineNumber":7,"author":{"gitId":"jasaaanlim"},"content":"list"},{"lineNumber":8,"author":{"gitId":"jasaaanlim"},"content":"done 1"},{"lineNumber":9,"author":{"gitId":"jasaaanlim"},"content":"list"},{"lineNumber":10,"author":{"gitId":"jasaaanlim"},"content":"done 2"},{"lineNumber":11,"author":{"gitId":"jasaaanlim"},"content":"list"},{"lineNumber":12,"author":{"gitId":"jasaaanlim"},"content":"done 3"},{"lineNumber":13,"author":{"gitId":"jasaaanlim"},"content":"list"},{"lineNumber":14,"author":{"gitId":"jasaaanlim"},"content":"fakecommand"},{"lineNumber":15,"author":{"gitId":"jasaaanlim"},"content":"todo"},{"lineNumber":16,"author":{"gitId":"jasaaanlim"},"content":"deadline Incomplete command"},{"lineNumber":17,"author":{"gitId":"jasaaanlim"},"content":"delete 0"},{"lineNumber":18,"author":{"gitId":"jasaaanlim"},"content":"delete 1"},{"lineNumber":19,"author":{"gitId":"jasaaanlim"},"content":"list"},{"lineNumber":20,"author":{"gitId":"jasaaanlim"},"content":"bye"}],"authorContributionMap":{"jasaaanlim":20}}]
