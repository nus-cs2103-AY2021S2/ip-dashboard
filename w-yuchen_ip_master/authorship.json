[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"}"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"}"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"    testImplementation \u0027org.hamcrest:hamcrest:2.2\u0027"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"}"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"run {"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"    enableAssertions \u003d true"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"}"},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"test {"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":"    useJUnitPlatform()"},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"    testLogging {"},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":40,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":41,"author":{"gitId":"w-yuchen"},"content":"        showExceptions true"},{"lineNumber":42,"author":{"gitId":"w-yuchen"},"content":"        exceptionFormat \"full\""},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":"        showCauses true"},{"lineNumber":44,"author":{"gitId":"w-yuchen"},"content":"        showStackTraces true"},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":"        showStandardStreams \u003d false"},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"w-yuchen"},"content":"}"},{"lineNumber":48,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":49,"author":{"gitId":"w-yuchen"},"content":"application {"},{"lineNumber":50,"author":{"gitId":"w-yuchen"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":51,"author":{"gitId":"w-yuchen"},"content":"}"},{"lineNumber":52,"author":{"gitId":"w-yuchen"},"content":"run {"},{"lineNumber":53,"author":{"gitId":"w-yuchen"},"content":"    standardInput \u003d System.in"},{"lineNumber":54,"author":{"gitId":"w-yuchen"},"content":"}"},{"lineNumber":55,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":56,"author":{"gitId":"w-yuchen"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"w-yuchen"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":58}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"# User Guide"},{"lineNumber":2,"content":""},{"lineNumber":3,"content":"Duke Task Manager is a small desktop application that allows one to keep track of todos, deadlines, and events. "},{"lineNumber":4,"content":""},{"lineNumber":5,"content":"![ui](./img/Ui.png)"},{"lineNumber":6,"content":""},{"lineNumber":7,"content":"## Features "},{"lineNumber":8,"content":""},{"lineNumber":9,"content":"* Keeping track of tasks"},{"lineNumber":10,"content":"* Saving all tasks to a file on the computer automatically"},{"lineNumber":11,"content":"* Listing all tasks"},{"lineNumber":12,"content":"* Deleting tasks"},{"lineNumber":13,"content":"* Marking tasks as done"},{"lineNumber":14,"content":"* Finding tasks with keywords"},{"lineNumber":15,"content":"* Delete multiple tasks at once"},{"lineNumber":16,"content":"* Marking multiple tasks at once"},{"lineNumber":17,"content":""},{"lineNumber":18,"content":"## Usage"},{"lineNumber":19,"content":""},{"lineNumber":20,"content":"All tasks saved are displayed in a simple to remember format: "},{"lineNumber":21,"content":""},{"lineNumber":22,"content":"*index*. [*type*][*done*]  *description* *(time)*"},{"lineNumber":23,"content":""},{"lineNumber":24,"content":"Field | Meaning"},{"lineNumber":25,"content":"-----|--------"},{"lineNumber":26,"content":"***index*** |Index of that item in the task list"},{"lineNumber":27,"content":"***type*** |Type of task:\u003cbr /\u003e**T**: Todo\u003cbr /\u003e**D**: Deadline\u003cbr /\u003e**E**: Event"},{"lineNumber":28,"content":"***done*** |Whether task is done, a done task is marked with X"},{"lineNumber":29,"content":"***description*** |Description for the task"},{"lineNumber":30,"content":"***time*** |*Only applicable to deadlines and events*\u003cbr /\u003eDeadline or event timing"},{"lineNumber":31,"content":""},{"lineNumber":32,"content":"### Adding task"},{"lineNumber":33,"content":"To add a task, follow the following formats: "},{"lineNumber":34,"content":""},{"lineNumber":35,"content":"#### Add todo: "},{"lineNumber":36,"content":"```"},{"lineNumber":37,"content":"todo [description]"},{"lineNumber":38,"content":"```"},{"lineNumber":39,"content":"E.g. ```todo do work``` adds a new todo task with description **do work**. "},{"lineNumber":40,"content":""},{"lineNumber":41,"content":"![todo](./img/todo.png)"},{"lineNumber":42,"content":""},{"lineNumber":43,"content":"#### Add deadline: "},{"lineNumber":44,"content":"```"},{"lineNumber":45,"content":"deadline [description] /by [date]"},{"lineNumber":46,"content":"```"},{"lineNumber":47,"content":"E.g. ```deadline finish assignment /by 2021-12-21``` adds a new deadline task with description **finish assignment** with deadline by **21 Dec 2021**. "},{"lineNumber":48,"content":""},{"lineNumber":49,"content":"![deadline](./img/deadline.png)"},{"lineNumber":50,"content":""},{"lineNumber":51,"content":"#### Add event: "},{"lineNumber":52,"content":"```"},{"lineNumber":53,"content":"event [description] /at [date]"},{"lineNumber":54,"content":"```"},{"lineNumber":55,"content":"E.g. ```event concert /at 2021 12 21``` adds a new event task with description **finish assignment** on **21 Dec 2021**."},{"lineNumber":56,"content":""},{"lineNumber":57,"content":"![event](./img/event.png)"},{"lineNumber":58,"content":""},{"lineNumber":59,"content":"##### For events and deadlines, the following date formats are allowed:"},{"lineNumber":60,"content":"* year-month-date, e.g. 2021-1-12"},{"lineNumber":61,"content":"* year month date, e.g. 2021 1 12"},{"lineNumber":62,"content":"* year/month/date, e.g. 2021/1/12"},{"lineNumber":63,"content":""},{"lineNumber":64,"content":""},{"lineNumber":65,"content":"Note that month has to be in **number**, e.g. Jun is not accepted but 7 is. "},{"lineNumber":66,"content":""},{"lineNumber":67,"content":"### Listing all tasks"},{"lineNumber":68,"content":"Either"},{"lineNumber":69,"content":"```"},{"lineNumber":70,"content":"list"},{"lineNumber":71,"content":"```"},{"lineNumber":72,"content":"or"},{"lineNumber":73,"content":"``` "},{"lineNumber":74,"content":"all"},{"lineNumber":75,"content":"```"},{"lineNumber":76,"content":" You will be able to see a list of all saved tasks: "},{"lineNumber":77,"content":" "},{"lineNumber":78,"content":" ![list](./img/list.png)"},{"lineNumber":79,"content":""},{"lineNumber":80,"content":"### Searching"},{"lineNumber":81,"content":"``` "},{"lineNumber":82,"content":"find [keyword]"},{"lineNumber":83,"content":"```"},{"lineNumber":84,"content":"where keyword is the content you wish to search for. "},{"lineNumber":85,"content":""},{"lineNumber":86,"content":"![find](./img/find.png)"},{"lineNumber":87,"content":""},{"lineNumber":88,"content":"### Setting a task to done"},{"lineNumber":89,"content":"``` "},{"lineNumber":90,"content":" done [index]"},{"lineNumber":91,"content":"```"},{"lineNumber":92,"content":"where index is the index of the task you wish to set to done. "},{"lineNumber":93,"content":""},{"lineNumber":94,"content":"![done](./img/done.png)"},{"lineNumber":95,"content":""},{"lineNumber":96,"content":"### Deleting tasks"},{"lineNumber":97,"content":"```"},{"lineNumber":98,"content":"delete [index]"},{"lineNumber":99,"content":"```"},{"lineNumber":100,"content":"where index is the index of the task you wish to remove. "},{"lineNumber":101,"content":""},{"lineNumber":102,"content":"![delete](./img/delete.png)"},{"lineNumber":103,"content":""},{"lineNumber":104,"content":"### Mass operations"},{"lineNumber":105,"content":"Sometimes, you may want to set multiple tasks to done or remove multiple items at once. For such cases, you can use **|**, also known as the **pipe**. "},{"lineNumber":106,"content":""},{"lineNumber":107,"content":"To use pipes: "},{"lineNumber":108,"content":"``` "},{"lineNumber":109,"content":"[filter] | [action]"},{"lineNumber":110,"content":"``` "},{"lineNumber":111,"content":""},{"lineNumber":112,"content":"filter is what you use to select the tasks you want, and action is what you want to do with all those tasks. "},{"lineNumber":113,"content":""},{"lineNumber":114,"content":"```[filter]``` supports ```list```, ```all```, and ```find```."},{"lineNumber":115,"content":" "},{"lineNumber":116,"content":"```[action]``` supports ```done``` and ```delete```. "},{"lineNumber":117,"content":""},{"lineNumber":118,"content":"For example: "},{"lineNumber":119,"content":""},{"lineNumber":120,"content":" ![pipe delete](./img/pipe_delete.png)"},{"lineNumber":121,"content":""},{"lineNumber":122,"content":"Here all tasks are deleted."},{"lineNumber":123,"content":""},{"lineNumber":124,"content":" ![pipe done](./img/pipe_done.png)"},{"lineNumber":125,"content":""},{"lineNumber":126,"content":"Here all events are set to done.  "},{"lineNumber":127,"content":""},{"lineNumber":128,"content":"### Exit Duke"},{"lineNumber":129,"content":"To exit, simply use: "},{"lineNumber":130,"content":"``` "},{"lineNumber":131,"content":"bye"},{"lineNumber":132,"content":"```"},{"lineNumber":133,"content":" ![bye](./img/bye.png)"},{"lineNumber":134,"content":""},{"lineNumber":135,"content":"## Credits"},{"lineNumber":136,"content":"Images from [Cult of the Party Parrot](https://cultofthepartyparrot.com/). "},{"lineNumber":137,"content":""},{"lineNumber":138,"content":"Font used are Ubuntu and Source Code Pro, both from [Google Fonts](https://fonts.google.com/). "}],"authorContributionMap":{"null":137,"w-yuchen":1}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":41,"author":{"gitId":"w-yuchen"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"w-yuchen"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"w-yuchen"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"w-yuchen"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"w-yuchen"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":51,"author":{"gitId":"w-yuchen"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":53,"author":{"gitId":"w-yuchen"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"w-yuchen"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"w-yuchen"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":57,"author":{"gitId":"w-yuchen"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":59,"author":{"gitId":"w-yuchen"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"w-yuchen"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"w-yuchen"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"w-yuchen"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"w-yuchen"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":65,"author":{"gitId":"w-yuchen"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":67,"author":{"gitId":"w-yuchen"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"w-yuchen"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":70,"author":{"gitId":"w-yuchen"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":72,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":73,"author":{"gitId":"w-yuchen"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"w-yuchen"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":76,"author":{"gitId":"w-yuchen"},"content":":end"},{"lineNumber":77,"author":{"gitId":"w-yuchen"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"w-yuchen"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":80,"author":{"gitId":"w-yuchen"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"w-yuchen"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"w-yuchen"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"w-yuchen"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"w-yuchen"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":86,"author":{"gitId":"w-yuchen"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"w-yuchen"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":89,"author":{"gitId":"w-yuchen"},"content":":omega"}],"authorContributionMap":{"w-yuchen":89}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"    private LocalDate deadline;"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"    Deadline(String name, String deadLine) throws DukeTimingException {"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"        super(name);"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"        List\u003cString\u003e formatterStrings \u003d Arrays.asList(\"yyyy-M-dd\", \"yyyy M dd\", \"yyyy/M/dd\","},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"                \"M dd YYYY\");"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"        for (String formatterString : formatterStrings) {"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"            try {"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(formatterString);"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"                this.deadline \u003d LocalDate.parse(deadLine, formatter);"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"                break;"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"            } catch (DateTimeParseException ignored) {"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"                //continue with loop"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"            }"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"        if (this.deadline \u003d\u003d null) {"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"            throw new DukeTimingException();"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd, YYYY\")) + \")\";"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"    public String toStorageString() {"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":"        return \"D|\" + super.toStorageString()"},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(\"yyyy-M-dd\"));"},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":39}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"import javafx.geometry.Pos;"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.Node;"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.control.Label;"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"public class DialogBox extends HBox {"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"    private Label text;"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"    private ImageView displayPicture;"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"     * Contructor for DialogeBox that contains text and picture for user and Duke."},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"     * @param l Displayed ext"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"     * @param iv Displayed image"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"        text \u003d l;"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"        displayPicture \u003d iv;"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"        text.setWrapText(true);"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":"    private void flip() {"},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":41,"author":{"gitId":"w-yuchen"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":42,"author":{"gitId":"w-yuchen"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":47,"author":{"gitId":"w-yuchen"},"content":"        db.flip();"},{"lineNumber":48,"author":{"gitId":"w-yuchen"},"content":"        return db;"},{"lineNumber":49,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":50}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"import javafx.geometry.Insets;"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.control.Label;"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.paint.Paint;"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.text.Font;"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.text.FontPosture;"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"import javafx.scene.text.FontWeight;"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"import javafx.stage.Stage;"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"import javafx.util.Duration;"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"public class Duke extends Application {"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"    private static final String LOG_PATH \u003d \"./logs\";"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"    private Ui ui;"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"    private TaskList taskList;"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"    private boolean testEnv;"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"    private VBox dialogueContainer;"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"    private TextField userInput;"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"    private Scene scene;"},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"    private boolean toClose;"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/qn_parrot.png\"));"},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/ans_parrot.png\"));"},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":40,"author":{"gitId":"w-yuchen"},"content":"    public Duke() {"},{"lineNumber":41,"author":{"gitId":"w-yuchen"},"content":"        this(LOG_PATH, false);"},{"lineNumber":42,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":44,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":"     * Constructor for Duke."},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"     * @param path Path for storage file"},{"lineNumber":47,"author":{"gitId":"w-yuchen"},"content":"     * @param testEnv Whether Duke is being created for testing purposes, testDuke only runs if this is true"},{"lineNumber":48,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"w-yuchen"},"content":"    public Duke(String path, boolean testEnv) {"},{"lineNumber":50,"author":{"gitId":"w-yuchen"},"content":"        Storage store \u003d new Storage(path);"},{"lineNumber":51,"author":{"gitId":"w-yuchen"},"content":"        this.taskList \u003d new TaskList(store);"},{"lineNumber":52,"author":{"gitId":"w-yuchen"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":53,"author":{"gitId":"w-yuchen"},"content":"        this.testEnv \u003d testEnv;"},{"lineNumber":54,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":56,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"w-yuchen"},"content":"     * Starts running Duke."},{"lineNumber":58,"author":{"gitId":"w-yuchen"},"content":"     * @return 0 for successful exit"},{"lineNumber":59,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"w-yuchen"},"content":"    public int dukeRunner() {"},{"lineNumber":61,"author":{"gitId":"w-yuchen"},"content":"        Ui.printHello();"},{"lineNumber":62,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":63,"author":{"gitId":"w-yuchen"},"content":"        while (true) {"},{"lineNumber":64,"author":{"gitId":"w-yuchen"},"content":"            String userInput \u003d ui.getInputFromUser();"},{"lineNumber":65,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":66,"author":{"gitId":"w-yuchen"},"content":"            ParserOutput parserOutput \u003d null;"},{"lineNumber":67,"author":{"gitId":"w-yuchen"},"content":"            try {"},{"lineNumber":68,"author":{"gitId":"w-yuchen"},"content":"                parserOutput \u003d Parser.parse(userInput);"},{"lineNumber":69,"author":{"gitId":"w-yuchen"},"content":"            } catch (DukeException e) {"},{"lineNumber":70,"author":{"gitId":"w-yuchen"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":71,"author":{"gitId":"w-yuchen"},"content":"                continue;"},{"lineNumber":72,"author":{"gitId":"w-yuchen"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":74,"author":{"gitId":"w-yuchen"},"content":"            Ui.printHRule();"},{"lineNumber":75,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":76,"author":{"gitId":"w-yuchen"},"content":"            if (parserOutput.isBye()) {"},{"lineNumber":77,"author":{"gitId":"w-yuchen"},"content":"                break;"},{"lineNumber":78,"author":{"gitId":"w-yuchen"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":80,"author":{"gitId":"w-yuchen"},"content":"            this.readParse(parserOutput);"},{"lineNumber":81,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":82,"author":{"gitId":"w-yuchen"},"content":"            Ui.printHRule();"},{"lineNumber":83,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":85,"author":{"gitId":"w-yuchen"},"content":"        Ui.printGoodbye();"},{"lineNumber":86,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":87,"author":{"gitId":"w-yuchen"},"content":"        return 0;"},{"lineNumber":88,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":90,"author":{"gitId":"w-yuchen"},"content":"    private void readParse(ParserOutput parserOutput) {"},{"lineNumber":91,"author":{"gitId":"w-yuchen"},"content":"        switch (parserOutput.getAction()) {"},{"lineNumber":92,"author":{"gitId":"w-yuchen"},"content":"        case 1: //remove"},{"lineNumber":93,"author":{"gitId":"w-yuchen"},"content":"            List\u003cTask\u003e removedTasks \u003d this.taskList.remove(parserOutput.getIndex());"},{"lineNumber":94,"author":{"gitId":"w-yuchen"},"content":"            ui.printRemoved(removedTasks);"},{"lineNumber":95,"author":{"gitId":"w-yuchen"},"content":"            break;"},{"lineNumber":96,"author":{"gitId":"w-yuchen"},"content":"        case 2: //done"},{"lineNumber":97,"author":{"gitId":"w-yuchen"},"content":"            List\u003cTask\u003e doneTasks \u003d this.taskList.get(parserOutput.getIndex());"},{"lineNumber":98,"author":{"gitId":"w-yuchen"},"content":"            for (Task t : doneTasks) {"},{"lineNumber":99,"author":{"gitId":"w-yuchen"},"content":"                t.markDone();"},{"lineNumber":100,"author":{"gitId":"w-yuchen"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"w-yuchen"},"content":"            this.taskList.set(parserOutput.getIndex(), doneTasks);"},{"lineNumber":102,"author":{"gitId":"w-yuchen"},"content":"            ui.printDone(doneTasks);"},{"lineNumber":103,"author":{"gitId":"w-yuchen"},"content":"            break;"},{"lineNumber":104,"author":{"gitId":"w-yuchen"},"content":"        case 3: //add"},{"lineNumber":105,"author":{"gitId":"w-yuchen"},"content":"            this.taskList.add(parserOutput.getTask());"},{"lineNumber":106,"author":{"gitId":"w-yuchen"},"content":"            ui.printAdded(parserOutput.getTask(), this.taskList.getSize());"},{"lineNumber":107,"author":{"gitId":"w-yuchen"},"content":"            break;"},{"lineNumber":108,"author":{"gitId":"w-yuchen"},"content":"        case 4: //find"},{"lineNumber":109,"author":{"gitId":"w-yuchen"},"content":"            List\u003cTask\u003e results \u003d this.taskList.find(parserOutput.getSearchString());"},{"lineNumber":110,"author":{"gitId":"w-yuchen"},"content":"            ui.printSearch(results, parserOutput.getSearchString());"},{"lineNumber":111,"author":{"gitId":"w-yuchen"},"content":"            break;"},{"lineNumber":112,"author":{"gitId":"w-yuchen"},"content":"        case 5: //list"},{"lineNumber":113,"author":{"gitId":"w-yuchen"},"content":"            Ui.printList(this.taskList);"},{"lineNumber":114,"author":{"gitId":"w-yuchen"},"content":"            break;"},{"lineNumber":115,"author":{"gitId":"w-yuchen"},"content":"        case 6: //piped"},{"lineNumber":116,"author":{"gitId":"w-yuchen"},"content":"            int[] indexes \u003d getPipeInput(parserOutput);"},{"lineNumber":117,"author":{"gitId":"w-yuchen"},"content":"            int nextAction \u003d parserOutput.getNextAction();"},{"lineNumber":118,"author":{"gitId":"w-yuchen"},"content":"            if (nextAction \u003d\u003d 1) {"},{"lineNumber":119,"author":{"gitId":"w-yuchen"},"content":"                readParse(ParserOutput.removeOutput(indexes));"},{"lineNumber":120,"author":{"gitId":"w-yuchen"},"content":"            } else if (nextAction \u003d\u003d 2) {"},{"lineNumber":121,"author":{"gitId":"w-yuchen"},"content":"                readParse((ParserOutput.doneOutput(indexes)));"},{"lineNumber":122,"author":{"gitId":"w-yuchen"},"content":"            } else {"},{"lineNumber":123,"author":{"gitId":"w-yuchen"},"content":"                ui.printSorry();"},{"lineNumber":124,"author":{"gitId":"w-yuchen"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"w-yuchen"},"content":"            break;"},{"lineNumber":126,"author":{"gitId":"w-yuchen"},"content":"        default:"},{"lineNumber":127,"author":{"gitId":"w-yuchen"},"content":"            ui.printSorry();"},{"lineNumber":128,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":131,"author":{"gitId":"w-yuchen"},"content":"    private int[] getPipeInput(ParserOutput in) {"},{"lineNumber":132,"author":{"gitId":"w-yuchen"},"content":"        if (in.getPipeInput().getAction() \u003d\u003d 4) {"},{"lineNumber":133,"author":{"gitId":"w-yuchen"},"content":"            return this.taskList.findIndex(in.getPipeInput().getSearchString());"},{"lineNumber":134,"author":{"gitId":"w-yuchen"},"content":"        } else if (in.getPipeInput().getAction() \u003d\u003d 5) {"},{"lineNumber":135,"author":{"gitId":"w-yuchen"},"content":"            return this.taskList.listIndex();"},{"lineNumber":136,"author":{"gitId":"w-yuchen"},"content":"        } else {"},{"lineNumber":137,"author":{"gitId":"w-yuchen"},"content":"            return null; //TODO: add exception for this"},{"lineNumber":138,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":141,"author":{"gitId":"w-yuchen"},"content":"    private String readParseGui(ParserOutput parserOutput) {"},{"lineNumber":142,"author":{"gitId":"w-yuchen"},"content":"        switch (parserOutput.getAction()) {"},{"lineNumber":143,"author":{"gitId":"w-yuchen"},"content":"        case 1: //remove"},{"lineNumber":144,"author":{"gitId":"w-yuchen"},"content":"            List\u003cTask\u003e removedTasks \u003d this.taskList.remove(parserOutput.getIndex());"},{"lineNumber":145,"author":{"gitId":"w-yuchen"},"content":"            return ui.printRemoved(removedTasks);"},{"lineNumber":146,"author":{"gitId":"w-yuchen"},"content":"        case 2: //done"},{"lineNumber":147,"author":{"gitId":"w-yuchen"},"content":"            List\u003cTask\u003e doneTasks \u003d this.taskList.get(parserOutput.getIndex());"},{"lineNumber":148,"author":{"gitId":"w-yuchen"},"content":"            for (Task t : doneTasks) {"},{"lineNumber":149,"author":{"gitId":"w-yuchen"},"content":"                t.markDone();"},{"lineNumber":150,"author":{"gitId":"w-yuchen"},"content":"            }"},{"lineNumber":151,"author":{"gitId":"w-yuchen"},"content":"            this.taskList.set(parserOutput.getIndex(), doneTasks);"},{"lineNumber":152,"author":{"gitId":"w-yuchen"},"content":"            return ui.printDone(doneTasks);"},{"lineNumber":153,"author":{"gitId":"w-yuchen"},"content":"        case 3: //add"},{"lineNumber":154,"author":{"gitId":"w-yuchen"},"content":"            this.taskList.add(parserOutput.getTask());"},{"lineNumber":155,"author":{"gitId":"w-yuchen"},"content":"            return ui.printAdded(parserOutput.getTask(), this.taskList.getSize());"},{"lineNumber":156,"author":{"gitId":"w-yuchen"},"content":"        case 4: //find"},{"lineNumber":157,"author":{"gitId":"w-yuchen"},"content":"            List\u003cTask\u003e results \u003d this.taskList.find(parserOutput.getSearchString());"},{"lineNumber":158,"author":{"gitId":"w-yuchen"},"content":"            return ui.printSearch(results, parserOutput.getSearchString());"},{"lineNumber":159,"author":{"gitId":"w-yuchen"},"content":"        case 5: //list"},{"lineNumber":160,"author":{"gitId":"w-yuchen"},"content":"            return Ui.printList(this.taskList);"},{"lineNumber":161,"author":{"gitId":"w-yuchen"},"content":"        case 6: //piped"},{"lineNumber":162,"author":{"gitId":"w-yuchen"},"content":"            int[] indexes \u003d getPipeInput(parserOutput);"},{"lineNumber":163,"author":{"gitId":"w-yuchen"},"content":"            int nextAction \u003d parserOutput.getNextAction();"},{"lineNumber":164,"author":{"gitId":"w-yuchen"},"content":"            if (nextAction \u003d\u003d 1) {"},{"lineNumber":165,"author":{"gitId":"w-yuchen"},"content":"                return readParseGui(ParserOutput.removeOutput(indexes));"},{"lineNumber":166,"author":{"gitId":"w-yuchen"},"content":"            } else if (nextAction \u003d\u003d 2) {"},{"lineNumber":167,"author":{"gitId":"w-yuchen"},"content":"                return readParseGui((ParserOutput.doneOutput(indexes)));"},{"lineNumber":168,"author":{"gitId":"w-yuchen"},"content":"            } else {"},{"lineNumber":169,"author":{"gitId":"w-yuchen"},"content":"                return ui.printSorry();"},{"lineNumber":170,"author":{"gitId":"w-yuchen"},"content":"            }"},{"lineNumber":171,"author":{"gitId":"w-yuchen"},"content":"        default:"},{"lineNumber":172,"author":{"gitId":"w-yuchen"},"content":"            return ui.printSorry();"},{"lineNumber":173,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":176,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":177,"author":{"gitId":"w-yuchen"},"content":"     * JUnit test entry point. Only runs when testEnv property is set to true."},{"lineNumber":178,"author":{"gitId":"w-yuchen"},"content":"     * @param userInput String input from the user"},{"lineNumber":179,"author":{"gitId":"w-yuchen"},"content":"     * @return String output displayed to the user"},{"lineNumber":180,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":181,"author":{"gitId":"w-yuchen"},"content":"    public String testDuke(String userInput) {"},{"lineNumber":182,"author":{"gitId":"w-yuchen"},"content":"        assert this.testEnv : \"testDuke method should only used for testing. \";"},{"lineNumber":183,"author":{"gitId":"w-yuchen"},"content":"        ParserOutput parserOutput \u003d null;"},{"lineNumber":184,"author":{"gitId":"w-yuchen"},"content":"        try {"},{"lineNumber":185,"author":{"gitId":"w-yuchen"},"content":"            parserOutput \u003d Parser.parse(userInput);"},{"lineNumber":186,"author":{"gitId":"w-yuchen"},"content":"        } catch (DukeException e) {"},{"lineNumber":187,"author":{"gitId":"w-yuchen"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":188,"author":{"gitId":"w-yuchen"},"content":"            return \"\";"},{"lineNumber":189,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":191,"author":{"gitId":"w-yuchen"},"content":"        if (parserOutput.isBye()) {"},{"lineNumber":192,"author":{"gitId":"w-yuchen"},"content":"            return Ui.printGoodbye();"},{"lineNumber":193,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":195,"author":{"gitId":"w-yuchen"},"content":"        return this.readParseGui(parserOutput);"},{"lineNumber":196,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":198,"author":{"gitId":"w-yuchen"},"content":"    @Override"},{"lineNumber":199,"author":{"gitId":"w-yuchen"},"content":"    public void start(Stage stage) throws Exception {"},{"lineNumber":200,"author":{"gitId":"w-yuchen"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\");"},{"lineNumber":201,"author":{"gitId":"w-yuchen"},"content":"        Scene scene \u003d new Scene(helloWorld);"},{"lineNumber":202,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":203,"author":{"gitId":"w-yuchen"},"content":"        stage.setScene(scene); //set up stage to show screen"},{"lineNumber":204,"author":{"gitId":"w-yuchen"},"content":"        stage.show(); //render"},{"lineNumber":205,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":206,"author":{"gitId":"w-yuchen"},"content":"        //Container for contents of chat"},{"lineNumber":207,"author":{"gitId":"w-yuchen"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":208,"author":{"gitId":"w-yuchen"},"content":"        dialogueContainer \u003d new VBox();"},{"lineNumber":209,"author":{"gitId":"w-yuchen"},"content":"        scrollPane.setContent(dialogueContainer);"},{"lineNumber":210,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":211,"author":{"gitId":"w-yuchen"},"content":"        userInput \u003d new TextField();"},{"lineNumber":212,"author":{"gitId":"w-yuchen"},"content":"        Button sendButton \u003d new Button(\"Send\");"},{"lineNumber":213,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":214,"author":{"gitId":"w-yuchen"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":215,"author":{"gitId":"w-yuchen"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":216,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":217,"author":{"gitId":"w-yuchen"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":218,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":219,"author":{"gitId":"w-yuchen"},"content":"        stage.setScene(scene);"},{"lineNumber":220,"author":{"gitId":"w-yuchen"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":221,"author":{"gitId":"w-yuchen"},"content":"        stage.setResizable(false);"},{"lineNumber":222,"author":{"gitId":"w-yuchen"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":223,"author":{"gitId":"w-yuchen"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":224,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":225,"author":{"gitId":"w-yuchen"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":226,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":227,"author":{"gitId":"w-yuchen"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":228,"author":{"gitId":"w-yuchen"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":229,"author":{"gitId":"w-yuchen"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":230,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":231,"author":{"gitId":"w-yuchen"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":232,"author":{"gitId":"w-yuchen"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":233,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":234,"author":{"gitId":"w-yuchen"},"content":"        dialogueContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":235,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":236,"author":{"gitId":"w-yuchen"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":237,"author":{"gitId":"w-yuchen"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":238,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":239,"author":{"gitId":"w-yuchen"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":240,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":241,"author":{"gitId":"w-yuchen"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":242,"author":{"gitId":"w-yuchen"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":243,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":244,"author":{"gitId":"w-yuchen"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":245,"author":{"gitId":"w-yuchen"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":246,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":247,"author":{"gitId":"w-yuchen"},"content":"        stage.show();"},{"lineNumber":248,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":249,"author":{"gitId":"w-yuchen"},"content":"        sendHelloMessage();"},{"lineNumber":250,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":251,"author":{"gitId":"w-yuchen"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":252,"author":{"gitId":"w-yuchen"},"content":"            handleUserInput();"},{"lineNumber":253,"author":{"gitId":"w-yuchen"},"content":"            checkIfToCloseGui(stage);"},{"lineNumber":254,"author":{"gitId":"w-yuchen"},"content":"        });"},{"lineNumber":255,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":256,"author":{"gitId":"w-yuchen"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":257,"author":{"gitId":"w-yuchen"},"content":"            handleUserInput();"},{"lineNumber":258,"author":{"gitId":"w-yuchen"},"content":"            checkIfToCloseGui(stage);"},{"lineNumber":259,"author":{"gitId":"w-yuchen"},"content":"        });"},{"lineNumber":260,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":261,"author":{"gitId":"w-yuchen"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes."},{"lineNumber":262,"author":{"gitId":"w-yuchen"},"content":"        dialogueContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":263,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":264,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":265,"author":{"gitId":"w-yuchen"},"content":"    private void sendHelloMessage() {"},{"lineNumber":266,"author":{"gitId":"w-yuchen"},"content":"        Font font \u003d Font.font(\"Source Sans Pro Semibold\", FontWeight.NORMAL, FontPosture.REGULAR, 16);"},{"lineNumber":267,"author":{"gitId":"w-yuchen"},"content":"        Label dukeText \u003d getDialogLabel(Ui.printHello(), font, Paint.valueOf(\"cb4b16\"));"},{"lineNumber":268,"author":{"gitId":"w-yuchen"},"content":"        dialogueContainer.getChildren().addAll("},{"lineNumber":269,"author":{"gitId":"w-yuchen"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"},{"lineNumber":270,"author":{"gitId":"w-yuchen"},"content":"        );"},{"lineNumber":271,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":273,"author":{"gitId":"w-yuchen"},"content":"    private Label getDialogLabel(String text, Font font, Paint fill) {"},{"lineNumber":274,"author":{"gitId":"w-yuchen"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":275,"author":{"gitId":"w-yuchen"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":276,"author":{"gitId":"w-yuchen"},"content":"        textToAdd.setTextFill(fill);"},{"lineNumber":277,"author":{"gitId":"w-yuchen"},"content":"        textToAdd.setFont(font);"},{"lineNumber":278,"author":{"gitId":"w-yuchen"},"content":"        textToAdd.setPadding(new Insets(10, 10, 10, 10));"},{"lineNumber":279,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":280,"author":{"gitId":"w-yuchen"},"content":"        return textToAdd;"},{"lineNumber":281,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":282,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":283,"author":{"gitId":"w-yuchen"},"content":"    private void handleUserInput() {"},{"lineNumber":284,"author":{"gitId":"w-yuchen"},"content":"        String userInputText \u003d userInput.getText();"},{"lineNumber":285,"author":{"gitId":"w-yuchen"},"content":"        Font userFont \u003d Font.font(\"ubuntu\", FontWeight.NORMAL, FontPosture.REGULAR, 16);"},{"lineNumber":286,"author":{"gitId":"w-yuchen"},"content":"        Font font \u003d Font.font(\"Source Sans Pro Semibold\", FontWeight.NORMAL, FontPosture.REGULAR, 16);"},{"lineNumber":287,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":288,"author":{"gitId":"w-yuchen"},"content":"        Label userText \u003d getDialogLabel(userInputText, userFont, Paint.valueOf(\"141823\"));"},{"lineNumber":289,"author":{"gitId":"w-yuchen"},"content":"        Label dukeText \u003d getDialogLabel(getResponse(userInputText), font, Paint.valueOf(\"cb4b16\"));"},{"lineNumber":290,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":291,"author":{"gitId":"w-yuchen"},"content":"        dialogueContainer.getChildren().addAll("},{"lineNumber":292,"author":{"gitId":"w-yuchen"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":293,"author":{"gitId":"w-yuchen"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"},{"lineNumber":294,"author":{"gitId":"w-yuchen"},"content":"        );"},{"lineNumber":295,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":296,"author":{"gitId":"w-yuchen"},"content":"        userInput.clear();"},{"lineNumber":297,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":298,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":299,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":300,"author":{"gitId":"w-yuchen"},"content":"    private void checkIfToCloseGui(Stage stage) {"},{"lineNumber":301,"author":{"gitId":"w-yuchen"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(0.8));"},{"lineNumber":302,"author":{"gitId":"w-yuchen"},"content":"        if (this.toClose) {"},{"lineNumber":303,"author":{"gitId":"w-yuchen"},"content":"            delay.setOnFinished(event -\u003e stage.close());"},{"lineNumber":304,"author":{"gitId":"w-yuchen"},"content":"            this.close();"},{"lineNumber":305,"author":{"gitId":"w-yuchen"},"content":"            delay.play();"},{"lineNumber":306,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":307,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":308,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":309,"author":{"gitId":"w-yuchen"},"content":"    private void close() {"},{"lineNumber":310,"author":{"gitId":"w-yuchen"},"content":"        this.ui.close();"},{"lineNumber":311,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":312,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":313,"author":{"gitId":"w-yuchen"},"content":"    private String getResponse(String input) {"},{"lineNumber":314,"author":{"gitId":"w-yuchen"},"content":"        ParserOutput parserOutput \u003d null;"},{"lineNumber":315,"author":{"gitId":"w-yuchen"},"content":"        try {"},{"lineNumber":316,"author":{"gitId":"w-yuchen"},"content":"            parserOutput \u003d Parser.parse(input);"},{"lineNumber":317,"author":{"gitId":"w-yuchen"},"content":"        } catch (DukeException e) {"},{"lineNumber":318,"author":{"gitId":"w-yuchen"},"content":"            return e.getMessage();"},{"lineNumber":319,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":320,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":321,"author":{"gitId":"w-yuchen"},"content":"        if (parserOutput.isBye()) {"},{"lineNumber":322,"author":{"gitId":"w-yuchen"},"content":"            this.toClose \u003d true;"},{"lineNumber":323,"author":{"gitId":"w-yuchen"},"content":"            return Ui.printGoodbye();"},{"lineNumber":324,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":325,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":326,"author":{"gitId":"w-yuchen"},"content":"        return readParseGui(parserOutput);"},{"lineNumber":327,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":328,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":329,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":330,"author":{"gitId":"w-yuchen"},"content":"     * Main method of Duke."},{"lineNumber":331,"author":{"gitId":"w-yuchen"},"content":"     * @param args standard parameters for main"},{"lineNumber":332,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":334,"author":{"gitId":"w-yuchen"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":335,"author":{"gitId":"w-yuchen"},"content":"        System.out.println(duke.dukeRunner());"},{"lineNumber":336,"author":{"gitId":"w-yuchen"},"content":"        duke.close();"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"w-yuchen":335,"-":3}},{"path":"src/main/java/DukeDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"public class DukeDescriptionException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"    public DukeDescriptionException(String type) {"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"        super(\"The description of a \" + type + \" cannot be empty.\");"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"    public DukeException(String errorMsg) {"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"        super(\"OOPS!!! \" + errorMsg);"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":5}},{"path":"src/main/java/DukeNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"public class DukeNotFoundException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"    public DukeNotFoundException() {"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":5}},{"path":"src/main/java/DukeTimingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"public class DukeTimingException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"    public DukeTimingException(String type) {"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"        super(\"Given \" + type + \" has no timing!\");"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"    public DukeTimingException() {"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"        super(\"Sorry, I don\u0027t understand the date you gave. \");"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"    private LocalDate timing;"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"    Event(String name, String timing) throws DukeTimingException {"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"        super(name);"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"        List\u003cString\u003e formatterStrings \u003d Arrays.asList(\"yyyy-M-dd\", \"yyyy M dd\", \"yyyy/M/dd\","},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"                \"M dd YYYY\");"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"        for (String formatterString : formatterStrings) {"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"            try {"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(formatterString);"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"                this.timing \u003d LocalDate.parse(timing, formatter);"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"                break;"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"            } catch (DateTimeParseException ignored) {"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"                //continue"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"            }"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"        if (this.timing \u003d\u003d null) {"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"            throw new DukeTimingException();"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"                + this.timing.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY\")) + \")\";"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"    public String toStorageString() {"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":"        return \"E|\" + super.toStorageString() + this.timing.format(DateTimeFormatter.ofPattern(\"yyyy-M-dd\"));"},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":38}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"        Application.launch(Duke.class, \"./logs\");"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":10}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"public class Parser {"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"     * Parses user input strings and decides what action is to be taken and what tasks are to be created."},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"     * @param rawIn String input from user"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"     * @return ParserOutput object that contains info on what action to take, and if any tasks are created,"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"     * the task itself"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"     * @throws DukeDescriptionException If no task description given"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"     * @throws DukeTimingException If no timing given, for Deadlines and Events only"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"     * @throws DukeNotFoundException If first word in user input cannot be understood"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"    public static ParserOutput parse(String rawIn) throws DukeDescriptionException,"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"            DukeTimingException, DukeNotFoundException {"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"        StringBuilder joined \u003d new StringBuilder();"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"        String timing \u003d \"\";"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"        String[] input \u003d rawIn.strip().split(\" \");"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"        if (rawIn.contains(\"|\")) {"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"            return pipeParse(rawIn);"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"        if (!Parser.checkInput(input[0], input.length)) {"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"            throw new DukeNotFoundException();"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"        if (rawIn.equals(\"bye\")) {"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"            return ParserOutput.byeOutput();"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"            switch (input[0]) {"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"            case \"all\":"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"                //Fallthrough, alias of list"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"            case \"list\":"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"                return ParserOutput.listOutput();"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"            case \"done\":"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"                int itemToBeUpdatedIndex \u003d Integer.parseInt(input[1]);"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"                return ParserOutput.doneOutput(itemToBeUpdatedIndex);"},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":"            case \"todo\":"},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"                for (int i \u003d 1; i \u003c input.length; i++) {"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":"                    joined.append(\" \").append(input[i]);"},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":"                }"},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"                return ParserOutput.addOutput(new Todo(joined.toString()));"},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":"            case \"deadline\":"},{"lineNumber":40,"author":{"gitId":"w-yuchen"},"content":"                int seq \u003d 0;"},{"lineNumber":41,"author":{"gitId":"w-yuchen"},"content":"                while (!input[seq].equals(\"/by\")) {"},{"lineNumber":42,"author":{"gitId":"w-yuchen"},"content":"                    joined.append(\" \").append(input[seq]);"},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":"                    seq++;"},{"lineNumber":44,"author":{"gitId":"w-yuchen"},"content":"                    if (seq \u003d\u003d input.length) {"},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":"                        throw new DukeDescriptionException(input[0]);"},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"                    }"},{"lineNumber":47,"author":{"gitId":"w-yuchen"},"content":"                }"},{"lineNumber":48,"author":{"gitId":"w-yuchen"},"content":"                if (seq + 1 \u003d\u003d input.length) {"},{"lineNumber":49,"author":{"gitId":"w-yuchen"},"content":"                    throw new DukeTimingException(input[0]);"},{"lineNumber":50,"author":{"gitId":"w-yuchen"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":52,"author":{"gitId":"w-yuchen"},"content":"                for (int i \u003d seq + 1; i \u003c input.length; i++) {"},{"lineNumber":53,"author":{"gitId":"w-yuchen"},"content":"                    timing \u003d timing + \" \" + input[i];"},{"lineNumber":54,"author":{"gitId":"w-yuchen"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"w-yuchen"},"content":"                return ParserOutput.addOutput(new Deadline(joined.toString(), timing.trim()));"},{"lineNumber":56,"author":{"gitId":"w-yuchen"},"content":"            case \"event\":"},{"lineNumber":57,"author":{"gitId":"w-yuchen"},"content":"                int seq2 \u003d 0;"},{"lineNumber":58,"author":{"gitId":"w-yuchen"},"content":"                while (!input[seq2].equals(\"/at\")) {"},{"lineNumber":59,"author":{"gitId":"w-yuchen"},"content":"                    joined.append(\" \").append(input[seq2]);"},{"lineNumber":60,"author":{"gitId":"w-yuchen"},"content":"                    seq2++;"},{"lineNumber":61,"author":{"gitId":"w-yuchen"},"content":"                    if (seq2 \u003d\u003d input.length) {"},{"lineNumber":62,"author":{"gitId":"w-yuchen"},"content":"                        throw new DukeDescriptionException(input[0]);"},{"lineNumber":63,"author":{"gitId":"w-yuchen"},"content":"                    }"},{"lineNumber":64,"author":{"gitId":"w-yuchen"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":66,"author":{"gitId":"w-yuchen"},"content":"                if (seq2 + 1 \u003d\u003d input.length) {"},{"lineNumber":67,"author":{"gitId":"w-yuchen"},"content":"                    throw new DukeTimingException(input[0]);"},{"lineNumber":68,"author":{"gitId":"w-yuchen"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":70,"author":{"gitId":"w-yuchen"},"content":"                for (int i \u003d seq2 + 1; i \u003c input.length; i++) {"},{"lineNumber":71,"author":{"gitId":"w-yuchen"},"content":"                    timing \u003d timing + \" \" + input[i];"},{"lineNumber":72,"author":{"gitId":"w-yuchen"},"content":"                }"},{"lineNumber":73,"author":{"gitId":"w-yuchen"},"content":"                return ParserOutput.addOutput(new Event(joined.toString(), timing.trim()));"},{"lineNumber":74,"author":{"gitId":"w-yuchen"},"content":"            case \"delete\":"},{"lineNumber":75,"author":{"gitId":"w-yuchen"},"content":"                return ParserOutput.removeOutput(Integer.parseInt(input[1]));"},{"lineNumber":76,"author":{"gitId":"w-yuchen"},"content":"            case \"find\":"},{"lineNumber":77,"author":{"gitId":"w-yuchen"},"content":"                for (int i \u003d 1; i \u003c input.length; i++) {"},{"lineNumber":78,"author":{"gitId":"w-yuchen"},"content":"                    joined.append(input[i]).append(\" \");"},{"lineNumber":79,"author":{"gitId":"w-yuchen"},"content":"                }"},{"lineNumber":80,"author":{"gitId":"w-yuchen"},"content":"                return ParserOutput.findOutput(joined.toString().strip());"},{"lineNumber":81,"author":{"gitId":"w-yuchen"},"content":"            default:"},{"lineNumber":82,"author":{"gitId":"w-yuchen"},"content":"                throw new DukeNotFoundException();"},{"lineNumber":83,"author":{"gitId":"w-yuchen"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":87,"author":{"gitId":"w-yuchen"},"content":"    private static boolean checkInput(String command, int length) {"},{"lineNumber":88,"author":{"gitId":"w-yuchen"},"content":"        if (!command.equals(\"all\") \u0026\u0026 !command.equals(\"list\") \u0026\u0026 !command.equals(\"bye\")) {"},{"lineNumber":89,"author":{"gitId":"w-yuchen"},"content":"            return length \u003e 1;"},{"lineNumber":90,"author":{"gitId":"w-yuchen"},"content":"        } else {"},{"lineNumber":91,"author":{"gitId":"w-yuchen"},"content":"            return length \u003d\u003d 1;"},{"lineNumber":92,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"w-yuchen"},"content":"    private static ParserOutput pipeParse(String rawIn) throws DukeTimingException,"},{"lineNumber":95,"author":{"gitId":"w-yuchen"},"content":"            DukeDescriptionException, DukeNotFoundException {"},{"lineNumber":96,"author":{"gitId":"w-yuchen"},"content":"        String[] inputs \u003d rawIn.split(\"\\\\|\");"},{"lineNumber":97,"author":{"gitId":"w-yuchen"},"content":"        ParserOutput firstPart \u003d parse(inputs[0].strip());"},{"lineNumber":98,"author":{"gitId":"w-yuchen"},"content":"        if (inputs.length \u003e 2) {"},{"lineNumber":99,"author":{"gitId":"w-yuchen"},"content":"            throw new DukeNotFoundException();"},{"lineNumber":100,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"w-yuchen"},"content":"        String nextAction \u003d inputs[1].strip();"},{"lineNumber":102,"author":{"gitId":"w-yuchen"},"content":"        System.out.println(rawIn);"},{"lineNumber":103,"author":{"gitId":"w-yuchen"},"content":"        if (nextAction.equals(\"done\")) {"},{"lineNumber":104,"author":{"gitId":"w-yuchen"},"content":"            return ParserOutput.pipeOutput(firstPart, 2);"},{"lineNumber":105,"author":{"gitId":"w-yuchen"},"content":"        } else if (nextAction.equals(\"delete\")) {"},{"lineNumber":106,"author":{"gitId":"w-yuchen"},"content":"            return ParserOutput.pipeOutput(firstPart, 1);"},{"lineNumber":107,"author":{"gitId":"w-yuchen"},"content":"        } else {"},{"lineNumber":108,"author":{"gitId":"w-yuchen"},"content":"            throw new DukeNotFoundException();"},{"lineNumber":109,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":112,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":112}},{"path":"src/main/java/ParserOutput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"public class ParserOutput {"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"    private boolean bye;"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"    private Task task;"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"    private int action;"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"    private int[] index;"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"    private String searchString;"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"    private ParserOutput pipeInput;"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"    private int nextAction;"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"    private ParserOutput(boolean bye, Task task, int action, int ... index) {"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"        this.bye \u003d bye;"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"        this.task \u003d task;"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"        this.action \u003d action;"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"        this.index \u003d index;"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"    private ParserOutput(int nextAction, boolean bye, Task task, int action) {"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"        assert !bye || action \u003e 0 : \"If not a bye, action cannot be none. \";"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"        this.bye \u003d bye;"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"        this.task \u003d task;"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"        this.action \u003d action;"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"        this.nextAction \u003d nextAction;"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"    public ParserOutput setPipeInput(ParserOutput pipeInput) {"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"        this.pipeInput \u003d pipeInput;"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"        return this;"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"    private void setSearch(String searchString) {"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"        this.searchString \u003d searchString;"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":"     * Factory for creating ParserOutput to indicate bye command."},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":"     * @return ParserOutput with bye set to true"},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":"    public static ParserOutput byeOutput() {"},{"lineNumber":40,"author":{"gitId":"w-yuchen"},"content":"        return new ParserOutput(true, null, 0, 0);"},{"lineNumber":41,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"w-yuchen"},"content":"     * Factory for creating ParserOutput to indicate remove command."},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":"     * @param index index of task to be removed"},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"     * @return ParserOutput with action set to 1, and index set to given index"},{"lineNumber":47,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"w-yuchen"},"content":"    public static ParserOutput removeOutput(int... index) {"},{"lineNumber":49,"author":{"gitId":"w-yuchen"},"content":"        return new ParserOutput(false, null, 1, index);"},{"lineNumber":50,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":52,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"w-yuchen"},"content":"     * Factory for creating ParserOutput to indicate remove command."},{"lineNumber":54,"author":{"gitId":"w-yuchen"},"content":"     * @param index index of task to be set to done"},{"lineNumber":55,"author":{"gitId":"w-yuchen"},"content":"     * @return ParserOutput with action set to 2, and index set to given index"},{"lineNumber":56,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"w-yuchen"},"content":"    public static ParserOutput doneOutput(int... index) {"},{"lineNumber":58,"author":{"gitId":"w-yuchen"},"content":"        return new ParserOutput(false, null, 2, index);"},{"lineNumber":59,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":61,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"w-yuchen"},"content":"     * Factory for creating ParserOutput to indicate add command."},{"lineNumber":63,"author":{"gitId":"w-yuchen"},"content":"     * @param task task to be added"},{"lineNumber":64,"author":{"gitId":"w-yuchen"},"content":"     * @return ParserOutput with action set to 3, and contains task to be added"},{"lineNumber":65,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"w-yuchen"},"content":"    public static ParserOutput addOutput(Task task) {"},{"lineNumber":67,"author":{"gitId":"w-yuchen"},"content":"        return new ParserOutput(false, task, 3, 0);"},{"lineNumber":68,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":70,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"w-yuchen"},"content":"     * Factory for creating ParserOutput to indicate find command."},{"lineNumber":72,"author":{"gitId":"w-yuchen"},"content":"     * @param searchString subString used for the search"},{"lineNumber":73,"author":{"gitId":"w-yuchen"},"content":"     * @return ParserOutput with action set to 4, and containing the searchString"},{"lineNumber":74,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"w-yuchen"},"content":"    public static ParserOutput findOutput(String searchString) {"},{"lineNumber":76,"author":{"gitId":"w-yuchen"},"content":"        ParserOutput p \u003d new ParserOutput(false, null, 4, 0);"},{"lineNumber":77,"author":{"gitId":"w-yuchen"},"content":"        p.setSearch(searchString);"},{"lineNumber":78,"author":{"gitId":"w-yuchen"},"content":"        return p;"},{"lineNumber":79,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":81,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"w-yuchen"},"content":"     * Factory for creating ParserOutput to indicate list command."},{"lineNumber":83,"author":{"gitId":"w-yuchen"},"content":"     * @return ParserOutput with action set to 5"},{"lineNumber":84,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"w-yuchen"},"content":"    public static ParserOutput listOutput() {"},{"lineNumber":86,"author":{"gitId":"w-yuchen"},"content":"        return new ParserOutput(false, null, 5, 0);"},{"lineNumber":87,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":89,"author":{"gitId":"w-yuchen"},"content":"    public static ParserOutput pipeOutput(ParserOutput firstPart, int nextAction) {"},{"lineNumber":90,"author":{"gitId":"w-yuchen"},"content":"        return new ParserOutput(nextAction, false, null, 6).setPipeInput(firstPart);"},{"lineNumber":91,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":93,"author":{"gitId":"w-yuchen"},"content":"    public ParserOutput getPipeInput() {"},{"lineNumber":94,"author":{"gitId":"w-yuchen"},"content":"        return this.pipeInput;"},{"lineNumber":95,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":97,"author":{"gitId":"w-yuchen"},"content":"    public int getNextAction() {"},{"lineNumber":98,"author":{"gitId":"w-yuchen"},"content":"        return this.nextAction;"},{"lineNumber":99,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":101,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"w-yuchen"},"content":"     * Returns if bye is true."},{"lineNumber":103,"author":{"gitId":"w-yuchen"},"content":"     * @return value of bye"},{"lineNumber":104,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"w-yuchen"},"content":"    public boolean isBye() {"},{"lineNumber":106,"author":{"gitId":"w-yuchen"},"content":"        return bye;"},{"lineNumber":107,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":109,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"w-yuchen"},"content":"     * Getter for index."},{"lineNumber":111,"author":{"gitId":"w-yuchen"},"content":"     * @return index"},{"lineNumber":112,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"w-yuchen"},"content":"    public int[] getIndex() {"},{"lineNumber":114,"author":{"gitId":"w-yuchen"},"content":"        return index;"},{"lineNumber":115,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":117,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"w-yuchen"},"content":"     * Getter for action number."},{"lineNumber":119,"author":{"gitId":"w-yuchen"},"content":"     * @return action"},{"lineNumber":120,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"w-yuchen"},"content":"    public int getAction() {"},{"lineNumber":122,"author":{"gitId":"w-yuchen"},"content":"        return action;"},{"lineNumber":123,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":125,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"w-yuchen"},"content":"     * Getter for task."},{"lineNumber":127,"author":{"gitId":"w-yuchen"},"content":"     * @return task"},{"lineNumber":128,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"w-yuchen"},"content":"    public Task getTask() {"},{"lineNumber":130,"author":{"gitId":"w-yuchen"},"content":"        return task;"},{"lineNumber":131,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":133,"author":{"gitId":"w-yuchen"},"content":"    public String getSearchString() {"},{"lineNumber":134,"author":{"gitId":"w-yuchen"},"content":"        return searchString;"},{"lineNumber":135,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":136}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"import java.io.PrintWriter;"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"public class Storage {"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"    //storage format:"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"    //\u003ctype\u003e, \u003cdone\u003e, \u003cdescription\u003e, \u003cdeadline\u003e"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"    private ArrayList\u003cString\u003e itemList;"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"    private String path;"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"     * Constructor for Storage, a wrapper class for handling file storage."},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"     * @param path address of file to be used for storage"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"    public Storage (String path) {"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"        File logFile \u003d new File(path);"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"        assert logFile !\u003d null : \"logFile not created properly. \";"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"            if (logFile.isFile()) {"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"                Scanner logs \u003d new Scanner(logFile);"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"                logs.close();"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"            } else {"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"                logFile.createNewFile();"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"            System.out.println(\"no file created \" + e);"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":"        this.path \u003d path;"},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":"            this.itemList \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(path)));"},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":"        } catch (IOException e) {"},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"            System.out.println(e);"},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":"            this.itemList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":40,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"w-yuchen"},"content":"     * Adds a task to the underlying file storage."},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":"     * @param task Task to be added"},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"w-yuchen"},"content":"    public void add(Task task) {"},{"lineNumber":48,"author":{"gitId":"w-yuchen"},"content":"        assert task !\u003d null : \"Task should not be null. \";"},{"lineNumber":49,"author":{"gitId":"w-yuchen"},"content":"        this.itemList.add(task.toStorageString());"},{"lineNumber":50,"author":{"gitId":"w-yuchen"},"content":"        this.update();"},{"lineNumber":51,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":53,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"w-yuchen"},"content":"     * Replaces a line in the storage file with the details of a new Task object."},{"lineNumber":55,"author":{"gitId":"w-yuchen"},"content":"     * @param index Index of item to be replaced"},{"lineNumber":56,"author":{"gitId":"w-yuchen"},"content":"     * @param newTask New task"},{"lineNumber":57,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"w-yuchen"},"content":"    public void set(int index, Task newTask) {"},{"lineNumber":59,"author":{"gitId":"w-yuchen"},"content":"        assert index \u003e 0 : \"Index passed to set must be greater than 1. \";"},{"lineNumber":60,"author":{"gitId":"w-yuchen"},"content":"        assert index \u003c\u003d this.itemList.size() : \"Index passed to set cannot be greater than length of task list. \";"},{"lineNumber":61,"author":{"gitId":"w-yuchen"},"content":"        assert newTask !\u003d null : \"newTask cannot be null. \";"},{"lineNumber":62,"author":{"gitId":"w-yuchen"},"content":"        this.itemList.set(index - 1, newTask.toStorageString());"},{"lineNumber":63,"author":{"gitId":"w-yuchen"},"content":"        this.update();"},{"lineNumber":64,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":66,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"w-yuchen"},"content":"     * Removes a line from the file storage."},{"lineNumber":68,"author":{"gitId":"w-yuchen"},"content":"     * @param index Index of line to be removed"},{"lineNumber":69,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"w-yuchen"},"content":"    public void remove(int index) {"},{"lineNumber":71,"author":{"gitId":"w-yuchen"},"content":"        assert index \u003e 0 : \"Index passed to remove must be greater than 1. \";"},{"lineNumber":72,"author":{"gitId":"w-yuchen"},"content":"        assert index \u003c\u003d this.itemList.size() : \"Index passed to remove cannot be greater than length of task list. \";"},{"lineNumber":73,"author":{"gitId":"w-yuchen"},"content":"        this.itemList.remove(index - 1);"},{"lineNumber":74,"author":{"gitId":"w-yuchen"},"content":"        this.update();"},{"lineNumber":75,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":77,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"w-yuchen"},"content":"     * Returns all lines in storage as ArrayList of Strings."},{"lineNumber":79,"author":{"gitId":"w-yuchen"},"content":"     * @return List of lines in storage"},{"lineNumber":80,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"w-yuchen"},"content":"    public ArrayList\u003cString\u003e readStorage () {"},{"lineNumber":82,"author":{"gitId":"w-yuchen"},"content":"        return this.itemList;"},{"lineNumber":83,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":85,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"w-yuchen"},"content":"     * Updates underlying file storage by overwriting entire file with new contents."},{"lineNumber":87,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"w-yuchen"},"content":"    public void update() {"},{"lineNumber":89,"author":{"gitId":"w-yuchen"},"content":"        try {"},{"lineNumber":90,"author":{"gitId":"w-yuchen"},"content":"            PrintWriter writer \u003d new PrintWriter(path);"},{"lineNumber":91,"author":{"gitId":"w-yuchen"},"content":"            for (String line : this.itemList) {"},{"lineNumber":92,"author":{"gitId":"w-yuchen"},"content":"                writer.println(line);"},{"lineNumber":93,"author":{"gitId":"w-yuchen"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"w-yuchen"},"content":"            writer.close();"},{"lineNumber":95,"author":{"gitId":"w-yuchen"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":96,"author":{"gitId":"w-yuchen"},"content":"            System.out.println(e);"},{"lineNumber":97,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":99}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"    private boolean done;"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"    private String name;"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"    Task(String name) {"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"        this.name \u003d name;"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"        this.done \u003d false;"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"    void markDone() {"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"        this.done \u003d true;"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"        String check \u003d done ? \"X\" : \" \";"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"        return String.format(\"[%s] %s\", check, name);"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"    String toStorageString() {"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"        if (done) {"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"            return \"Y|\" + this.name + \"|\";"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"            return \"N|\" + this.name + \"|\";"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"    public String getName() {"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"        return this.name;"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":31}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"public class TaskList {"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"    private Storage storage;"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"    private int count;"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"     * Constructor for TaskList, a wrapper class for a list of Tasks and all operations on it. Writes to storage by"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"     * calling Storage."},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"     * @param storage Storage object that TaskList writes to."},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"    public TaskList(Storage storage) {"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"        assert storage !\u003d null : \"storage passed to TaskList cannot be null. \";"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"        this.storage \u003d storage;"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"        ArrayList\u003cString\u003e storageStrings \u003d this.storage.readStorage();"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"        storageStrings.forEach(x -\u003e {"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"            try {"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"                this.tasks.add(parseStorageString(x));"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"            } catch (DukeTimingException ignore) {"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"                //continue, let sorry message show up"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"        });"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"        this.count \u003d this.tasks.size();"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"    private Task parseStorageString(String storageString) throws DukeTimingException {"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"        String[] splitStorageString \u003d storageString.split(\"\\\\|\");"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"        Task task;"},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":"        if (splitStorageString[0].equals(\"T\")) {"},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"            task \u003d new Todo(splitStorageString[2]);"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":"        } else if (splitStorageString[0].equals(\"D\")) {"},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":"            task \u003d new Deadline(splitStorageString[2], splitStorageString[3]);"},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":"            task \u003d new Event(splitStorageString[2], splitStorageString[3]);"},{"lineNumber":40,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":42,"author":{"gitId":"w-yuchen"},"content":"        if (splitStorageString[1].equals(\"Y\")) {"},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":"            task.markDone();"},{"lineNumber":44,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"        return task;"},{"lineNumber":47,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":49,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"w-yuchen"},"content":"     * Returns tasks given list of indexes."},{"lineNumber":51,"author":{"gitId":"w-yuchen"},"content":"     * @param indexes Indexes of tasks wanted"},{"lineNumber":52,"author":{"gitId":"w-yuchen"},"content":"     * @return List of tasks"},{"lineNumber":53,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"w-yuchen"},"content":"    public List\u003cTask\u003e get(int[] indexes) {"},{"lineNumber":55,"author":{"gitId":"w-yuchen"},"content":"        List\u003cTask\u003e resultTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":56,"author":{"gitId":"w-yuchen"},"content":"        for (int i : indexes) {"},{"lineNumber":57,"author":{"gitId":"w-yuchen"},"content":"            assert i \u003e 0 \u0026\u0026 i \u003c\u003d this.getSize() : \"Index to get should be between 1 and \" + this.getSize()"},{"lineNumber":58,"author":{"gitId":"w-yuchen"},"content":"                    + \" but given \" + i + \". \";"},{"lineNumber":59,"author":{"gitId":"w-yuchen"},"content":"            resultTasks.add(this.tasks.get(i - 1));"},{"lineNumber":60,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"w-yuchen"},"content":"        return resultTasks;"},{"lineNumber":62,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":64,"author":{"gitId":"w-yuchen"},"content":"    public Task get(int index) {"},{"lineNumber":65,"author":{"gitId":"w-yuchen"},"content":"        return this.tasks.get(index - 1);"},{"lineNumber":66,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"w-yuchen"},"content":"     * Removes task at given index."},{"lineNumber":69,"author":{"gitId":"w-yuchen"},"content":"     * @param indexes Index of task wanted"},{"lineNumber":70,"author":{"gitId":"w-yuchen"},"content":"     * @return List of tasks that are removed"},{"lineNumber":71,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"w-yuchen"},"content":"    public List\u003cTask\u003e remove(int[] indexes) {"},{"lineNumber":73,"author":{"gitId":"w-yuchen"},"content":"        List\u003cTask\u003e removedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":74,"author":{"gitId":"w-yuchen"},"content":"        for (int i : indexes) {"},{"lineNumber":75,"author":{"gitId":"w-yuchen"},"content":"            int actualIndex \u003d i - removedTasks.size(); //size of tasks will change as tasks are removed"},{"lineNumber":76,"author":{"gitId":"w-yuchen"},"content":"            assert actualIndex \u003e 0 : \"Index passed to remove must be greater than 1. \";"},{"lineNumber":77,"author":{"gitId":"w-yuchen"},"content":"            assert actualIndex \u003c\u003d this.tasks.size() : \"Index passed to remove cannot \""},{"lineNumber":78,"author":{"gitId":"w-yuchen"},"content":"                    + \"be greater than length of task list. \";"},{"lineNumber":79,"author":{"gitId":"w-yuchen"},"content":"            this.storage.remove(actualIndex);"},{"lineNumber":80,"author":{"gitId":"w-yuchen"},"content":"            removedTasks.add(this.tasks.remove(actualIndex - 1));"},{"lineNumber":81,"author":{"gitId":"w-yuchen"},"content":"            this.count--;"},{"lineNumber":82,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"w-yuchen"},"content":"        return removedTasks;"},{"lineNumber":84,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":86,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"w-yuchen"},"content":"     * Replaces task at given index."},{"lineNumber":88,"author":{"gitId":"w-yuchen"},"content":"     * @param indexes Index of task to be replaced"},{"lineNumber":89,"author":{"gitId":"w-yuchen"},"content":"     * @param tasks New tasks that will replace previous tasks"},{"lineNumber":90,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"w-yuchen"},"content":"    public void set(int[] indexes, List\u003cTask\u003e tasks) {"},{"lineNumber":92,"author":{"gitId":"w-yuchen"},"content":"        for (int i \u003d 0; i \u003c indexes.length; i++) {"},{"lineNumber":93,"author":{"gitId":"w-yuchen"},"content":"            int index \u003d indexes[i];"},{"lineNumber":94,"author":{"gitId":"w-yuchen"},"content":"            Task task \u003d tasks.get(i);"},{"lineNumber":95,"author":{"gitId":"w-yuchen"},"content":"            assert index \u003e 0 : \"Index passed to set must be greater than 1. \";"},{"lineNumber":96,"author":{"gitId":"w-yuchen"},"content":"            assert index \u003c\u003d this.tasks.size() : \"Index passed to set cannot be greater than length of task list. \";"},{"lineNumber":97,"author":{"gitId":"w-yuchen"},"content":"            assert task !\u003d null : \"Task passed to set must not be null. \";"},{"lineNumber":98,"author":{"gitId":"w-yuchen"},"content":"            this.storage.set(index, task);"},{"lineNumber":99,"author":{"gitId":"w-yuchen"},"content":"            this.tasks.set(index - 1, task);"},{"lineNumber":100,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":103,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"w-yuchen"},"content":"     * Adds given task to end of the task list."},{"lineNumber":105,"author":{"gitId":"w-yuchen"},"content":"     * @param task Task to be added"},{"lineNumber":106,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"w-yuchen"},"content":"    public void add(Task task) {"},{"lineNumber":108,"author":{"gitId":"w-yuchen"},"content":"        assert task !\u003d null : \"Task to be added must not be null. \";"},{"lineNumber":109,"author":{"gitId":"w-yuchen"},"content":"        this.storage.add(task);"},{"lineNumber":110,"author":{"gitId":"w-yuchen"},"content":"        this.tasks.add(task);"},{"lineNumber":111,"author":{"gitId":"w-yuchen"},"content":"        this.count++;"},{"lineNumber":112,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":114,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"w-yuchen"},"content":"     * Returns number of tasks in task list."},{"lineNumber":116,"author":{"gitId":"w-yuchen"},"content":"     * @return Number of tasks in list"},{"lineNumber":117,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"w-yuchen"},"content":"    public int getSize() {"},{"lineNumber":119,"author":{"gitId":"w-yuchen"},"content":"        return this.count;"},{"lineNumber":120,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":122,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"w-yuchen"},"content":"     * Returns all tasks that contains searchString in their descriptions."},{"lineNumber":124,"author":{"gitId":"w-yuchen"},"content":"     * @param searchString substring to search for"},{"lineNumber":125,"author":{"gitId":"w-yuchen"},"content":"     * @return List of all tasks containing searchString"},{"lineNumber":126,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"w-yuchen"},"content":"    public List\u003cTask\u003e find(String searchString) {"},{"lineNumber":128,"author":{"gitId":"w-yuchen"},"content":"        List\u003cTask\u003e resultList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":129,"author":{"gitId":"w-yuchen"},"content":"        tasks.forEach(x -\u003e {"},{"lineNumber":130,"author":{"gitId":"w-yuchen"},"content":"            if (x.getName().contains(searchString)) {"},{"lineNumber":131,"author":{"gitId":"w-yuchen"},"content":"                resultList.add(x);"},{"lineNumber":132,"author":{"gitId":"w-yuchen"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"w-yuchen"},"content":"        });"},{"lineNumber":134,"author":{"gitId":"w-yuchen"},"content":"        return resultList;"},{"lineNumber":135,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":137,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"w-yuchen"},"content":"     * Alternative to find, returns indexes of tasks instead of a list of tasks."},{"lineNumber":139,"author":{"gitId":"w-yuchen"},"content":"     * @param searchString substring to search for"},{"lineNumber":140,"author":{"gitId":"w-yuchen"},"content":"     * @return int array of indexes of tasks containing searchString"},{"lineNumber":141,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"w-yuchen"},"content":"    int[] findIndex(String searchString) {"},{"lineNumber":143,"author":{"gitId":"w-yuchen"},"content":"        List\u003cInteger\u003e resultList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":144,"author":{"gitId":"w-yuchen"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"},{"lineNumber":145,"author":{"gitId":"w-yuchen"},"content":"            if (tasks.get(i).getName().contains(searchString)) {"},{"lineNumber":146,"author":{"gitId":"w-yuchen"},"content":"                resultList.add(i + 1);"},{"lineNumber":147,"author":{"gitId":"w-yuchen"},"content":"            }"},{"lineNumber":148,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"w-yuchen"},"content":"        int[] result \u003d new int[resultList.size()];"},{"lineNumber":150,"author":{"gitId":"w-yuchen"},"content":"        for (int i \u003d 0; i \u003c result.length; i++) {"},{"lineNumber":151,"author":{"gitId":"w-yuchen"},"content":"            result[i] \u003d resultList.get(i);"},{"lineNumber":152,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"w-yuchen"},"content":"        return result;"},{"lineNumber":154,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":156,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"w-yuchen"},"content":"     * Alternative to list, returns array of all indexes in the taskList."},{"lineNumber":158,"author":{"gitId":"w-yuchen"},"content":"     * @return int array of indexes of all tasks"},{"lineNumber":159,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"w-yuchen"},"content":"    int[] listIndex() {"},{"lineNumber":161,"author":{"gitId":"w-yuchen"},"content":"        int[] result \u003d new int[this.tasks.size()];"},{"lineNumber":162,"author":{"gitId":"w-yuchen"},"content":"        for (int i \u003d 0; i \u003c result.length; i++) {"},{"lineNumber":163,"author":{"gitId":"w-yuchen"},"content":"            result[i] \u003d i + 1;"},{"lineNumber":164,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"w-yuchen"},"content":"        return result;"},{"lineNumber":166,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":167}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"    Todo(String name) {"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"        super(name);"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"    public String toStorageString() {"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"        return \"T|\" + super.toStorageString();"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":16}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"    private static final String H_RULE \u003d"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"            \"─────────────────────────────────\""},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"                    + \"───────────────────────\""},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"                        + \"────────────\";"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"    private Scanner sc;"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"    public Ui() {"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"     * Gets input from user through the Scanner object provided during object initialization."},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"     * @return Trimmed String of user input"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"    public String getInputFromUser() {"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"        return this.sc.nextLine().trim();"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"     * Prints and returns hello message."},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"     * @return Hello message"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"    public static String printHello() {"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"        String logo \u003d \"\\n   D U K E   \\n\";"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"        String out \u003d \"Hello from\\n\" + logo + \"\\nGreetings! I am Duke! \\nHow may I assist you?\";"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"        System.out.println(out + \"\\n\" + H_RULE);"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":"        return out;"},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"     * Prints and returns goodbye message."},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":"     * @return Goodbye message"},{"lineNumber":40,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"w-yuchen"},"content":"    public static String printGoodbye() {"},{"lineNumber":42,"author":{"gitId":"w-yuchen"},"content":"        System.out.println(\"\\nGoodbye! Have a nice day!\\n\");"},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":"        return \"Goodbye! Have a nice day!\";"},{"lineNumber":44,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"w-yuchen"},"content":"     * Prints and returns String representation of all given Tasks."},{"lineNumber":48,"author":{"gitId":"w-yuchen"},"content":"     * @param tasks TaskList object that contains all Tasks to be printed"},{"lineNumber":49,"author":{"gitId":"w-yuchen"},"content":"     * @return String representation of all the given Tasks"},{"lineNumber":50,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"w-yuchen"},"content":"    public static String printList(TaskList tasks) {"},{"lineNumber":52,"author":{"gitId":"w-yuchen"},"content":"        String out \u003d \"\";"},{"lineNumber":53,"author":{"gitId":"w-yuchen"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"},{"lineNumber":54,"author":{"gitId":"w-yuchen"},"content":"            System.out.println(i + \". \" + tasks.get(i).toString());"},{"lineNumber":55,"author":{"gitId":"w-yuchen"},"content":"            out \u003d out + i + \". \" + tasks.get(i).toString() + \"\\n\";"},{"lineNumber":56,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"w-yuchen"},"content":"        return out;"},{"lineNumber":58,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":60,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"w-yuchen"},"content":"     * Prints a horizontal line."},{"lineNumber":62,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"w-yuchen"},"content":"    public static void printHRule() {"},{"lineNumber":64,"author":{"gitId":"w-yuchen"},"content":"        System.out.println(H_RULE);"},{"lineNumber":65,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":67,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"w-yuchen"},"content":"     * Prints and returns String response of a done command."},{"lineNumber":69,"author":{"gitId":"w-yuchen"},"content":"     * @param tasks List of Tasks that are marked done"},{"lineNumber":70,"author":{"gitId":"w-yuchen"},"content":"     * @return String response of done command"},{"lineNumber":71,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"w-yuchen"},"content":"    public String printDone(List\u003cTask\u003e tasks) {"},{"lineNumber":73,"author":{"gitId":"w-yuchen"},"content":"        String doneString \u003d \"Alright, I will mark \" + (tasks.size() \u003e 1 ? \"these\" : \"this\") + \" as done.\\n\";"},{"lineNumber":74,"author":{"gitId":"w-yuchen"},"content":"        for (Task t : tasks) {"},{"lineNumber":75,"author":{"gitId":"w-yuchen"},"content":"            doneString +\u003d t.toString();"},{"lineNumber":76,"author":{"gitId":"w-yuchen"},"content":"            doneString +\u003d \"\\n\";"},{"lineNumber":77,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"w-yuchen"},"content":"        System.out.println(doneString);"},{"lineNumber":79,"author":{"gitId":"w-yuchen"},"content":"        return doneString;"},{"lineNumber":80,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":82,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"w-yuchen"},"content":"     * Prints and returns response to add command."},{"lineNumber":84,"author":{"gitId":"w-yuchen"},"content":"     * @param task Task added"},{"lineNumber":85,"author":{"gitId":"w-yuchen"},"content":"     * @param count Number of Tasks in storage"},{"lineNumber":86,"author":{"gitId":"w-yuchen"},"content":"     * @return Response to add command"},{"lineNumber":87,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"w-yuchen"},"content":"    public String printAdded(Task task, int count) {"},{"lineNumber":89,"author":{"gitId":"w-yuchen"},"content":"        System.out.println(\"Added \" + task.getName() + \". \\nYou now have \" + count + \" items in your list.\");"},{"lineNumber":90,"author":{"gitId":"w-yuchen"},"content":"        return \"Added \" + task.getName() + \". \\nYou now have \" + count + \" items in your list.\";"},{"lineNumber":91,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":93,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"w-yuchen"},"content":"     * Prints and returns response to remove command."},{"lineNumber":95,"author":{"gitId":"w-yuchen"},"content":"     * @param removedTasks List of Tasks that were removed"},{"lineNumber":96,"author":{"gitId":"w-yuchen"},"content":"     * @return String response to remove command"},{"lineNumber":97,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"w-yuchen"},"content":"    public String printRemoved(List\u003cTask\u003e removedTasks) {"},{"lineNumber":99,"author":{"gitId":"w-yuchen"},"content":"        if (removedTasks.size() \u003d\u003d 1) {"},{"lineNumber":100,"author":{"gitId":"w-yuchen"},"content":"            System.out.println(\"I have removed this item: \\n\" + removedTasks.get(0).toString());"},{"lineNumber":101,"author":{"gitId":"w-yuchen"},"content":"            return \"I have removed this item: \\n\" + removedTasks.get(0).toString();"},{"lineNumber":102,"author":{"gitId":"w-yuchen"},"content":"        } else {"},{"lineNumber":103,"author":{"gitId":"w-yuchen"},"content":"            String removedString \u003d \"I have removed the following \" + removedTasks.size() + \" items: \\n\";"},{"lineNumber":104,"author":{"gitId":"w-yuchen"},"content":"            for (Task t : removedTasks) {"},{"lineNumber":105,"author":{"gitId":"w-yuchen"},"content":"                assert t !\u003d null : \"Item removed should not be null. \";"},{"lineNumber":106,"author":{"gitId":"w-yuchen"},"content":"                removedString \u003d removedString + t.toString() + \"\\n\";"},{"lineNumber":107,"author":{"gitId":"w-yuchen"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"w-yuchen"},"content":"            removedString \u003d removedString.strip();"},{"lineNumber":109,"author":{"gitId":"w-yuchen"},"content":"            System.out.println(removedString);"},{"lineNumber":110,"author":{"gitId":"w-yuchen"},"content":"            return removedString;"},{"lineNumber":111,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":114,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"w-yuchen"},"content":"     * Prints and returns response to find command"},{"lineNumber":116,"author":{"gitId":"w-yuchen"},"content":"     * @param tasks List of Tasks that are the results of the find"},{"lineNumber":117,"author":{"gitId":"w-yuchen"},"content":"     * @param searchString String given by user for the search"},{"lineNumber":118,"author":{"gitId":"w-yuchen"},"content":"     * @return String response to find command"},{"lineNumber":119,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"w-yuchen"},"content":"    public String printSearch(List\u003cTask\u003e tasks, String searchString) {"},{"lineNumber":121,"author":{"gitId":"w-yuchen"},"content":"        String out \u003d \"\";"},{"lineNumber":122,"author":{"gitId":"w-yuchen"},"content":"        System.out.println(String.format(\"Searching for %s...\", searchString));"},{"lineNumber":123,"author":{"gitId":"w-yuchen"},"content":"        System.out.println(\"Here you go!\");"},{"lineNumber":124,"author":{"gitId":"w-yuchen"},"content":"        out \u003d out + \"Here\u0027s what i found for \" + searchString + \": \\n\";"},{"lineNumber":125,"author":{"gitId":"w-yuchen"},"content":"        tasks.forEach(System.out::println);"},{"lineNumber":126,"author":{"gitId":"w-yuchen"},"content":"        for (Task t : tasks) {"},{"lineNumber":127,"author":{"gitId":"w-yuchen"},"content":"            out \u003d out + t.toString() + \"\\n\";"},{"lineNumber":128,"author":{"gitId":"w-yuchen"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"w-yuchen"},"content":"        return out;"},{"lineNumber":130,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":132,"author":{"gitId":"w-yuchen"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"w-yuchen"},"content":"     * Prints and returns the sorry message."},{"lineNumber":134,"author":{"gitId":"w-yuchen"},"content":"     * @return Sorry message"},{"lineNumber":135,"author":{"gitId":"w-yuchen"},"content":"     */"},{"lineNumber":136,"author":{"gitId":"w-yuchen"},"content":"    public String printSorry() {"},{"lineNumber":137,"author":{"gitId":"w-yuchen"},"content":"        System.out.println(\"Sorry, could you repeat please? \");"},{"lineNumber":138,"author":{"gitId":"w-yuchen"},"content":"        return \"Sorry, could you repeat please? \";"},{"lineNumber":139,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":141,"author":{"gitId":"w-yuchen"},"content":"    public void close() {"},{"lineNumber":142,"author":{"gitId":"w-yuchen"},"content":"        this.sc.close();"},{"lineNumber":143,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":145,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":145}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"public class DukeTest {"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"    private Duke duke;"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"    @BeforeEach"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"    public void setUp() {"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"        this.duke \u003d new Duke(\"./testLog\", true);"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"    @DisplayName(\"Test if parser creates Todo object when todo is added. \")"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"    public void addTodoTest() {"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"        String out \u003d duke.testDuke(\"todo do something\");"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"        assertEquals(out, \"Added  do something. \\nYou now have 1 items in your list.\");"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"    @DisplayName(\"Test clear all. \")"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"    public void pipeClearAllTest() {"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"        duke.testDuke(\"todo do something\");"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"        String out \u003d duke.testDuke(\"all | delete\");"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"        assertEquals(out, \"I have removed this item: \\n[T][ ]  do something\");"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"    @DisplayName(\"Test done all. \")"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":"    public void pipeDoneAllTest() {"},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"        duke.testDuke(\"todo a\");"},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":"        duke.testDuke(\"todo b\");"},{"lineNumber":40,"author":{"gitId":"w-yuchen"},"content":"        duke.testDuke(\"todo c\");"},{"lineNumber":41,"author":{"gitId":"w-yuchen"},"content":"        String out \u003d duke.testDuke(\"all | done\");"},{"lineNumber":42,"author":{"gitId":"w-yuchen"},"content":"        String outExpected \u003d"},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":"                \"Alright, I will mark these as done.\\n\""},{"lineNumber":44,"author":{"gitId":"w-yuchen"},"content":"                + \"[T][X]  a\\n\""},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":"                + \"[T][X]  b\\n\""},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"                + \"[T][X]  c\\n\";"},{"lineNumber":47,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":48,"author":{"gitId":"w-yuchen"},"content":"        String listAfterAllDone \u003d duke.testDuke(\"all\");"},{"lineNumber":49,"author":{"gitId":"w-yuchen"},"content":"        String listExpected \u003d"},{"lineNumber":50,"author":{"gitId":"w-yuchen"},"content":"                \"1. [T][X]  a\\n\""},{"lineNumber":51,"author":{"gitId":"w-yuchen"},"content":"                + \"2. [T][X]  b\\n\""},{"lineNumber":52,"author":{"gitId":"w-yuchen"},"content":"                + \"3. [T][X]  c\\n\";"},{"lineNumber":53,"author":{"gitId":"w-yuchen"},"content":"        assertAll(\"all | done\", () -\u003e"},{"lineNumber":54,"author":{"gitId":"w-yuchen"},"content":"                assertEquals(out, outExpected), () -\u003e"},{"lineNumber":55,"author":{"gitId":"w-yuchen"},"content":"                assertEquals(listAfterAllDone, listExpected)"},{"lineNumber":56,"author":{"gitId":"w-yuchen"},"content":"        );"},{"lineNumber":57,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":59,"author":{"gitId":"w-yuchen"},"content":"    @AfterEach"},{"lineNumber":60,"author":{"gitId":"w-yuchen"},"content":"    public void clearFiles() {"},{"lineNumber":61,"author":{"gitId":"w-yuchen"},"content":"        File logFile \u003d new File(\"./testLog\");"},{"lineNumber":62,"author":{"gitId":"w-yuchen"},"content":"        logFile.delete();"},{"lineNumber":63,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":64}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"import static org.hamcrest.CoreMatchers.instanceOf;"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"import static org.hamcrest.MatcherAssert.assertThat;"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"public class ParserTest {"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"    @DisplayName(\"Test for list and all. \")"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"    public void listTest() throws DukeException {"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"        ParserOutput out \u003d Parser.parse(\"list\");"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"        ParserOutput outAll \u003d Parser.parse(\"all\");"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"        assertEquals(out.getAction(), 5);"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"        assertAll(\"list and all\", () -\u003e"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"                assertEquals(out.getAction(), 5), () -\u003e"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"                assertEquals(outAll.getAction(), 5)"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"        );"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"    @DisplayName(\"Test for add. \")"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"    public void addTest() throws DukeException {"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"        ParserOutput out \u003d Parser.parse(\"todo do something\");"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"        assertEquals(out.getAction(), 3);"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"    @DisplayName(\"Test if parser creates Todo object when todo is added. \")"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"    public void addTodoTest() throws DukeException {"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"        ParserOutput out \u003d Parser.parse(\"todo do something\");"},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":"        assertThat(out.getTask(), instanceOf(Todo.class));"},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":"    @DisplayName(\"Test if parser creates Event object when todo is added. \")"},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":"    public void addEventTest() throws DukeException {"},{"lineNumber":40,"author":{"gitId":"w-yuchen"},"content":"        ParserOutput out \u003d Parser.parse(\"event do something /at 2021-1-11\");"},{"lineNumber":41,"author":{"gitId":"w-yuchen"},"content":"        assertThat(out.getTask(), instanceOf(Event.class));"},{"lineNumber":42,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":44,"author":{"gitId":"w-yuchen"},"content":"    @DisplayName(\"Test if parser creates Deadline object when todo is added. \")"},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"    public void addDeadlineTest() throws DukeException {"},{"lineNumber":47,"author":{"gitId":"w-yuchen"},"content":"        ParserOutput out \u003d Parser.parse(\"deadline abc /by 2021-1-11\");"},{"lineNumber":48,"author":{"gitId":"w-yuchen"},"content":"        assertThat(out.getTask(), instanceOf(Deadline.class));"},{"lineNumber":49,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":51,"author":{"gitId":"w-yuchen"},"content":"    @DisplayName(\"Test for delete. \")"},{"lineNumber":52,"author":{"gitId":"w-yuchen"},"content":"    @Test"},{"lineNumber":53,"author":{"gitId":"w-yuchen"},"content":"    public void deleteTest() throws DukeException {"},{"lineNumber":54,"author":{"gitId":"w-yuchen"},"content":"        ParserOutput out \u003d Parser.parse(\"delete 1\");"},{"lineNumber":55,"author":{"gitId":"w-yuchen"},"content":"        assertEquals(out.getAction(), 1);"},{"lineNumber":56,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":58,"author":{"gitId":"w-yuchen"},"content":"    @DisplayName(\"Test for done. \")"},{"lineNumber":59,"author":{"gitId":"w-yuchen"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"w-yuchen"},"content":"    public void doneTest() throws DukeException {"},{"lineNumber":61,"author":{"gitId":"w-yuchen"},"content":"        ParserOutput out \u003d Parser.parse(\"done 1\");"},{"lineNumber":62,"author":{"gitId":"w-yuchen"},"content":"        assertEquals(out.getAction(), 2);"},{"lineNumber":63,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":65,"author":{"gitId":"w-yuchen"},"content":"    @DisplayName(\"Test for bye. \")"},{"lineNumber":66,"author":{"gitId":"w-yuchen"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"w-yuchen"},"content":"    public void byeTest() throws DukeException {"},{"lineNumber":68,"author":{"gitId":"w-yuchen"},"content":"        ParserOutput out \u003d Parser.parse(\"bye\");"},{"lineNumber":69,"author":{"gitId":"w-yuchen"},"content":"        assertEquals(out.isBye(), true);"},{"lineNumber":70,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"w-yuchen"},"content":""},{"lineNumber":72,"author":{"gitId":"w-yuchen"},"content":"    @DisplayName(\"Test for pipe with list. \")"},{"lineNumber":73,"author":{"gitId":"w-yuchen"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"w-yuchen"},"content":"    public void listPipe() throws DukeException {"},{"lineNumber":75,"author":{"gitId":"w-yuchen"},"content":"        ParserOutput out \u003d Parser.parse(\"list | done\");"},{"lineNumber":76,"author":{"gitId":"w-yuchen"},"content":"        assertAll(\"actions and nextActions\", () -\u003e"},{"lineNumber":77,"author":{"gitId":"w-yuchen"},"content":"                    assertEquals(out.getAction(), 6), () -\u003e"},{"lineNumber":78,"author":{"gitId":"w-yuchen"},"content":"                    assertEquals(out.getNextAction(), 2), () -\u003e"},{"lineNumber":79,"author":{"gitId":"w-yuchen"},"content":"                    assertEquals(out.getPipeInput().getAction(), 5)"},{"lineNumber":80,"author":{"gitId":"w-yuchen"},"content":"        );"},{"lineNumber":81,"author":{"gitId":"w-yuchen"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"w-yuchen"},"content":"}"}],"authorContributionMap":{"w-yuchen":82}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"todo read a book"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"deadline drink some water /by whenever i\u0027m thirsty"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"list"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"event do somethings /at 11-12"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"bye"}],"authorContributionMap":{"w-yuchen":6}}]
