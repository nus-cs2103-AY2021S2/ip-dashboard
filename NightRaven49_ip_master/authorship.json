[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"NightRaven49"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"NightRaven49"},"content":"    enableAssertions \u003d true"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":64,"author":{"gitId":"NightRaven49"},"content":"repositories {"},{"lineNumber":65,"author":{"gitId":"NightRaven49"},"content":"    mavenCentral()"},{"lineNumber":66,"author":{"gitId":"NightRaven49"},"content":"}"},{"lineNumber":67,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":68,"author":{"gitId":"NightRaven49"},"content":"dependencies {"},{"lineNumber":69,"author":{"gitId":"NightRaven49"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":70,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":71,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":72,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":73,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":74,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":75,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":76,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":77,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":78,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":79,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":80,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":81,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":82,"author":{"gitId":"NightRaven49"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":83,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":38,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"# User Guide for Duke"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":"![Duke SS](https://raw.githubusercontent.com/NightRaven49/ip/master/docs/Ui.png)"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":"### What is Duke?"},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":"Duke is a simple-to-use task manager for you life! Able to record your todos, deadlines and events,"},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":"you can also mark these tasks as done, search through them and snooze them as needed."},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"Duke supports a number of commands:"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":"\u003cbr\u003e"},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":"`todo` `deadline` `event` `list` `done` `delete` `find` `snooze` `bye`"},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"\u003cbr\u003e"},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":"Duke also supports automatic saving and loading of tasks between sessions."},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"### To create a new task"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"* #### `todo` - creates a new todo task"},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"  The todo command creates a todo with a description of the task."},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"  "},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":"  Example of usage:"},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"  "},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":"  `todo (description)`"},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":"  "},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"  Expected outcome:"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"  "},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":"  `Got it. I\u0027ve added this task:`"},{"lineNumber":26,"author":{"gitId":"NightRaven49"},"content":"  \u003cbr\u003e"},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":"  `[T][ ] (description).`"},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"  \u003cbr\u003e"},{"lineNumber":29,"author":{"gitId":"NightRaven49"},"content":"  `Now you have 1 task in the list.`"},{"lineNumber":30,"author":{"gitId":"NightRaven49"},"content":"  \u003chr\u003e"},{"lineNumber":31,"author":{"gitId":"NightRaven49"},"content":"  "},{"lineNumber":32,"author":{"gitId":"NightRaven49"},"content":"  Exceptions"},{"lineNumber":33,"author":{"gitId":"NightRaven49"},"content":"  - Duke will prompt for a description if none was passed."},{"lineNumber":34,"author":{"gitId":"NightRaven49"},"content":"\u003cbr\u003e"},{"lineNumber":35,"author":{"gitId":"NightRaven49"},"content":"\u003cbr\u003e"},{"lineNumber":36,"author":{"gitId":"NightRaven49"},"content":"* #### `deadline` - creates a new deadline"},{"lineNumber":37,"author":{"gitId":"NightRaven49"},"content":"  The deadline command creates a deadline task with both a description and date due."},{"lineNumber":38,"author":{"gitId":"NightRaven49"},"content":"  Example of usage:"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  "},{"lineNumber":40,"author":{"gitId":"NightRaven49"},"content":"  `deadline (description) /by (due date in YYYY-MM-DD format)`"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  "},{"lineNumber":42,"author":{"gitId":"NightRaven49"},"content":"  Expected outcome:"},{"lineNumber":43,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":44,"author":{"gitId":"NightRaven49"},"content":"  `Got it`"},{"lineNumber":45,"author":{"gitId":"NightRaven49"},"content":"  \u003cbr\u003e"},{"lineNumber":46,"author":{"gitId":"NightRaven49"},"content":"  `[D][ ] (description) (by: (due date)).`"},{"lineNumber":47,"author":{"gitId":"NightRaven49"},"content":"  \u003cbr\u003e"},{"lineNumber":48,"author":{"gitId":"NightRaven49"},"content":"  `Now you have 1 task in the list.`"},{"lineNumber":49,"author":{"gitId":"NightRaven49"},"content":"  \u003chr\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  "},{"lineNumber":51,"author":{"gitId":"NightRaven49"},"content":"  Exceptions"},{"lineNumber":52,"author":{"gitId":"NightRaven49"},"content":"    - Duke will prompt for description or due date if either was not passed."},{"lineNumber":53,"author":{"gitId":"NightRaven49"},"content":"\u003cbr\u003e"},{"lineNumber":54,"author":{"gitId":"NightRaven49"},"content":"\u003cbr\u003e"},{"lineNumber":55,"author":{"gitId":"NightRaven49"},"content":"* #### `event` - creates a new event task"},{"lineNumber":56,"author":{"gitId":"NightRaven49"},"content":"  The event command creates an event task with both a description and associated time."},{"lineNumber":57,"author":{"gitId":"-"},"content":"  Example of usage:"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"NightRaven49"},"content":"  `event (description) /at (time in HH:MM format)`"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  Expected outcome:"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"NightRaven49"},"content":"  `Got it. I\u0027ve added this task:`"},{"lineNumber":64,"author":{"gitId":"NightRaven49"},"content":"  \u003cbr\u003e"},{"lineNumber":65,"author":{"gitId":"NightRaven49"},"content":"  `[E][ ] (description) (at: (time)).`"},{"lineNumber":66,"author":{"gitId":"NightRaven49"},"content":"  \u003cbr\u003e"},{"lineNumber":67,"author":{"gitId":"NightRaven49"},"content":"  `Now you have 1 task in the list.`"},{"lineNumber":68,"author":{"gitId":"NightRaven49"},"content":"  \u003chr\u003e"},{"lineNumber":69,"author":{"gitId":"NightRaven49"},"content":"  "},{"lineNumber":70,"author":{"gitId":"NightRaven49"},"content":"  Exceptions"},{"lineNumber":71,"author":{"gitId":"NightRaven49"},"content":"    - Duke will prompt for description or time if either was not passed.     "},{"lineNumber":72,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":73,"author":{"gitId":"NightRaven49"},"content":"### For manipulation of current tasks"},{"lineNumber":74,"author":{"gitId":"NightRaven49"},"content":"* #### `list` - lists all tasks"},{"lineNumber":75,"author":{"gitId":"NightRaven49"},"content":"  Lists all tasks saved by Duke thus far. To be used without other parameters."},{"lineNumber":76,"author":{"gitId":"NightRaven49"},"content":"\u003cbr\u003e"},{"lineNumber":77,"author":{"gitId":"NightRaven49"},"content":"\u003cbr\u003e"},{"lineNumber":78,"author":{"gitId":"NightRaven49"},"content":"* #### `done` - Marks a specified task as done"},{"lineNumber":79,"author":{"gitId":"NightRaven49"},"content":"  With input task index, Duke will mark the corresponding task as done. Outputs a confirmation."},{"lineNumber":80,"author":{"gitId":"NightRaven49"},"content":"  \u003cbr\u003e"},{"lineNumber":81,"author":{"gitId":"NightRaven49"},"content":"  Example of usage:"},{"lineNumber":82,"author":{"gitId":"NightRaven49"},"content":"  "},{"lineNumber":83,"author":{"gitId":"NightRaven49"},"content":"  `done (task index)`"},{"lineNumber":84,"author":{"gitId":"NightRaven49"},"content":"  "},{"lineNumber":85,"author":{"gitId":"NightRaven49"},"content":"  Expected outcome (assuming todo task of buying groceries):"},{"lineNumber":86,"author":{"gitId":"NightRaven49"},"content":"  "},{"lineNumber":87,"author":{"gitId":"NightRaven49"},"content":"  `Nice! I\u0027ve marked this task as done:`"},{"lineNumber":88,"author":{"gitId":"NightRaven49"},"content":"  \u003cbr\u003e"},{"lineNumber":89,"author":{"gitId":"NightRaven49"},"content":"  `[T][X] Buy groceries`"},{"lineNumber":90,"author":{"gitId":"NightRaven49"},"content":"  \u003chr\u003e"},{"lineNumber":91,"author":{"gitId":"NightRaven49"},"content":"  "},{"lineNumber":92,"author":{"gitId":"NightRaven49"},"content":"  Exceptions:"},{"lineNumber":93,"author":{"gitId":"NightRaven49"},"content":"    * If no input index detected, Duke will prompt for one. "},{"lineNumber":94,"author":{"gitId":"NightRaven49"},"content":"    * If input index is negative or larger than total number of tasks, Duke will inform user that"},{"lineNumber":95,"author":{"gitId":"NightRaven49"},"content":"      the input index does not exist."},{"lineNumber":96,"author":{"gitId":"NightRaven49"},"content":"    * If input index is not an integer, Duke will remind user to format it as such."},{"lineNumber":97,"author":{"gitId":"NightRaven49"},"content":"\u003cbr\u003e"},{"lineNumber":98,"author":{"gitId":"NightRaven49"},"content":"\u003cbr\u003e"},{"lineNumber":99,"author":{"gitId":"NightRaven49"},"content":"* #### `delete` - Deletes specified task"},{"lineNumber":100,"author":{"gitId":"NightRaven49"},"content":"  With input task index, Duke will delete the corresponding task. Outputs a confirmation."},{"lineNumber":101,"author":{"gitId":"NightRaven49"},"content":"  \u003cbr\u003e"},{"lineNumber":102,"author":{"gitId":"NightRaven49"},"content":"  Example of usage:"},{"lineNumber":103,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":104,"author":{"gitId":"NightRaven49"},"content":"  `delete (task index)`"},{"lineNumber":105,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":106,"author":{"gitId":"NightRaven49"},"content":"  Expected outcome (assuming todo task of buying groceries):"},{"lineNumber":107,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":108,"author":{"gitId":"NightRaven49"},"content":"  `Noted. I\u0027ve removed this task:`"},{"lineNumber":109,"author":{"gitId":"NightRaven49"},"content":"  \u003cbr\u003e"},{"lineNumber":110,"author":{"gitId":"NightRaven49"},"content":"  `[T][ ] Buy groceries`"},{"lineNumber":111,"author":{"gitId":"NightRaven49"},"content":"  \u003cbr\u003e"},{"lineNumber":112,"author":{"gitId":"NightRaven49"},"content":"  `Now you have 0 tasks in the list.`"},{"lineNumber":113,"author":{"gitId":"NightRaven49"},"content":"  \u003chr\u003e"},{"lineNumber":114,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":115,"author":{"gitId":"NightRaven49"},"content":"  Exceptions:"},{"lineNumber":116,"author":{"gitId":"NightRaven49"},"content":"    * If no input index detected, Duke will prompt for one."},{"lineNumber":117,"author":{"gitId":"NightRaven49"},"content":"    * If input index is negative or larger than total number of tasks, Duke will inform user that"},{"lineNumber":118,"author":{"gitId":"NightRaven49"},"content":"      the input index does not exist."},{"lineNumber":119,"author":{"gitId":"NightRaven49"},"content":"    * If input index is not an integer, Duke will remind user to format it as such."},{"lineNumber":120,"author":{"gitId":"NightRaven49"},"content":"\u003cbr\u003e"},{"lineNumber":121,"author":{"gitId":"NightRaven49"},"content":"\u003cbr\u003e"},{"lineNumber":122,"author":{"gitId":"NightRaven49"},"content":"* #### `find` - Finds tasks related to query"},{"lineNumber":123,"author":{"gitId":"NightRaven49"},"content":"  With input query, displays tasks that contain the search query."},{"lineNumber":124,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":125,"author":{"gitId":"NightRaven49"},"content":"  Example of usage:"},{"lineNumber":126,"author":{"gitId":"NightRaven49"},"content":"  "},{"lineNumber":127,"author":{"gitId":"NightRaven49"},"content":"  `find (query)`"},{"lineNumber":128,"author":{"gitId":"NightRaven49"},"content":"  "},{"lineNumber":129,"author":{"gitId":"NightRaven49"},"content":"  Expected outcome:"},{"lineNumber":130,"author":{"gitId":"NightRaven49"},"content":"  * If there are no relevant tasks: `Looks like no tasks were found :-(`"},{"lineNumber":131,"author":{"gitId":"NightRaven49"},"content":"  * Otherwise:"},{"lineNumber":132,"author":{"gitId":"NightRaven49"},"content":"    "},{"lineNumber":133,"author":{"gitId":"NightRaven49"},"content":"  `Here are the matching tasks in your list:`"},{"lineNumber":134,"author":{"gitId":"NightRaven49"},"content":"  "},{"lineNumber":135,"author":{"gitId":"NightRaven49"},"content":"  `1. [T][ ] (Found task 1)`"},{"lineNumber":136,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":137,"author":{"gitId":"NightRaven49"},"content":"  `2. [D][ ] (Found task 2)`"},{"lineNumber":138,"author":{"gitId":"NightRaven49"},"content":"  \u003chr\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"NightRaven49"},"content":"  Exceptions"},{"lineNumber":141,"author":{"gitId":"NightRaven49"},"content":"    * Duke will prompt for a query if none was passed."},{"lineNumber":142,"author":{"gitId":"NightRaven49"},"content":"\u003cbr\u003e"},{"lineNumber":143,"author":{"gitId":"NightRaven49"},"content":"\u003cbr\u003e"},{"lineNumber":144,"author":{"gitId":"NightRaven49"},"content":"* #### `snooze` - Snoozes a specified task"},{"lineNumber":145,"author":{"gitId":"NightRaven49"},"content":"  With input index, allows snoozing (postponing) of deadlines and events. For deadlines, input"},{"lineNumber":146,"author":{"gitId":"NightRaven49"},"content":"  integer is in days from original due date, while for events it is in minutes from original time."},{"lineNumber":147,"author":{"gitId":"NightRaven49"},"content":"  This command has no effect on todos. Outputs a confirmation."},{"lineNumber":148,"author":{"gitId":"NightRaven49"},"content":"  "},{"lineNumber":149,"author":{"gitId":"NightRaven49"},"content":"  Example of usage:"},{"lineNumber":150,"author":{"gitId":"NightRaven49"},"content":"  "},{"lineNumber":151,"author":{"gitId":"NightRaven49"},"content":"  `snooze (index of deadline) (time to snooze in days)` for deadlines"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"NightRaven49"},"content":"  or"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"NightRaven49"},"content":"  `snooze (index of event) (time to snooze in minutes)` for events"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"NightRaven49"},"content":"  Expected outcome (assuming event at 3pm snoozed for 120 minutes):"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"NightRaven49"},"content":"  `Got it, this is the updated task: (event) (at: 5pm)`"},{"lineNumber":160,"author":{"gitId":"NightRaven49"},"content":"  \u003chr\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"NightRaven49"},"content":"  Exceptions:"},{"lineNumber":163,"author":{"gitId":"NightRaven49"},"content":"    * If not enough parameters detected, Duke will remind of proper syntax."},{"lineNumber":164,"author":{"gitId":"NightRaven49"},"content":"    * If input index is negative or larger than total number of tasks, Duke will inform user that"},{"lineNumber":165,"author":{"gitId":"NightRaven49"},"content":"      the input index does not exist."},{"lineNumber":166,"author":{"gitId":"NightRaven49"},"content":"    * If input index is not an integer, Duke will remind user to format it as such."},{"lineNumber":167,"author":{"gitId":"NightRaven49"},"content":"  "},{"lineNumber":168,"author":{"gitId":"NightRaven49"},"content":"### Misc"},{"lineNumber":169,"author":{"gitId":"NightRaven49"},"content":"* #### `bye` - Terminates the program"},{"lineNumber":170,"author":{"gitId":"NightRaven49"},"content":"  Duke will close upon entering this command. Will output farewell message and also automatically"},{"lineNumber":171,"author":{"gitId":"NightRaven49"},"content":"  save all tasks stored in the session."},{"lineNumber":172,"author":{"gitId":"NightRaven49"},"content":"\u003cbr\u003e"},{"lineNumber":173,"author":{"gitId":"NightRaven49"},"content":"\u003cbr\u003e"},{"lineNumber":174,"author":{"gitId":"NightRaven49"},"content":"* #### Other keywords not yet specified"},{"lineNumber":175,"author":{"gitId":"NightRaven49"},"content":"  Duke will inform user that input is not recognised."}],"authorContributionMap":{"NightRaven49":158,"-":17}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":"import javafx.geometry.Pos;"},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.Node;"},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.control.Label;"},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"public class DialogBox extends HBox {"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":"    private Label text;"},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"    private ImageView displayPicture;"},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"     * Creates a new DialogBox for Duke."},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"     * @param l Text to be displayed."},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"     * @param iv Image to be displayed."},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"        text \u003d l;"},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":"        displayPicture \u003d iv;"},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"        text.setWrapText(true);"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":26,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":29,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":31,"author":{"gitId":"NightRaven49"},"content":"    private void flip() {"},{"lineNumber":32,"author":{"gitId":"NightRaven49"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":33,"author":{"gitId":"NightRaven49"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":34,"author":{"gitId":"NightRaven49"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":35,"author":{"gitId":"NightRaven49"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":36,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":38,"author":{"gitId":"NightRaven49"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":39,"author":{"gitId":"NightRaven49"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":40,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":42,"author":{"gitId":"NightRaven49"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":43,"author":{"gitId":"NightRaven49"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":44,"author":{"gitId":"NightRaven49"},"content":"        db.flip();"},{"lineNumber":45,"author":{"gitId":"NightRaven49"},"content":"        return db;"},{"lineNumber":46,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":47}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":"import javafx.application.Platform;"},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"import javafx.stage.Stage;"},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":" * The Duke class is the main program responsible for instantiating all required classes"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":" * and methods."},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":" */"},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":"public class Duke extends Application {"},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":"    private final Storage ine;"},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"    private final Ui ui;"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"    private final Parser parser;"},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":26,"author":{"gitId":"NightRaven49"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":"    private VBox dialogContainer;"},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"    private TextField userInput;"},{"lineNumber":29,"author":{"gitId":"NightRaven49"},"content":"    private Button sendButton;"},{"lineNumber":30,"author":{"gitId":"NightRaven49"},"content":"    private Scene scene;"},{"lineNumber":31,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":32,"author":{"gitId":"NightRaven49"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":33,"author":{"gitId":"NightRaven49"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":34,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":35,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"NightRaven49"},"content":"     * Instantiates required classes."},{"lineNumber":37,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"NightRaven49"},"content":"    public Duke() {"},{"lineNumber":39,"author":{"gitId":"NightRaven49"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":40,"author":{"gitId":"NightRaven49"},"content":"        TaskList tasks \u003d new TaskList(ui);"},{"lineNumber":41,"author":{"gitId":"NightRaven49"},"content":"        this.ine \u003d new Storage(tasks, ui);"},{"lineNumber":42,"author":{"gitId":"NightRaven49"},"content":"        this.parser \u003d new Parser(tasks, ui);"},{"lineNumber":43,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":45,"author":{"gitId":"NightRaven49"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"NightRaven49"},"content":"    public void start(Stage stage) {"},{"lineNumber":47,"author":{"gitId":"NightRaven49"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":48,"author":{"gitId":"NightRaven49"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":49,"author":{"gitId":"NightRaven49"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":50,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":51,"author":{"gitId":"NightRaven49"},"content":"        userInput \u003d new TextField();"},{"lineNumber":52,"author":{"gitId":"NightRaven49"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":53,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":54,"author":{"gitId":"NightRaven49"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":55,"author":{"gitId":"NightRaven49"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":56,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":57,"author":{"gitId":"NightRaven49"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":58,"author":{"gitId":"NightRaven49"},"content":"        stage.setResizable(true);"},{"lineNumber":59,"author":{"gitId":"NightRaven49"},"content":"        stage.setMinHeight(500.0);"},{"lineNumber":60,"author":{"gitId":"NightRaven49"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":61,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":62,"author":{"gitId":"NightRaven49"},"content":"        mainLayout.setPrefSize(400.0, 700.0);"},{"lineNumber":63,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":64,"author":{"gitId":"NightRaven49"},"content":"        scrollPane.setPrefSize(385, 665);"},{"lineNumber":65,"author":{"gitId":"NightRaven49"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":66,"author":{"gitId":"NightRaven49"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":67,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":68,"author":{"gitId":"NightRaven49"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":69,"author":{"gitId":"NightRaven49"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":70,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":71,"author":{"gitId":"NightRaven49"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":72,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":73,"author":{"gitId":"NightRaven49"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":74,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":75,"author":{"gitId":"NightRaven49"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":76,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":77,"author":{"gitId":"NightRaven49"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":78,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":79,"author":{"gitId":"NightRaven49"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":80,"author":{"gitId":"NightRaven49"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":81,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":82,"author":{"gitId":"NightRaven49"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":83,"author":{"gitId":"NightRaven49"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":84,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":85,"author":{"gitId":"NightRaven49"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":86,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":87,"author":{"gitId":"NightRaven49"},"content":"        stage.setScene(scene);"},{"lineNumber":88,"author":{"gitId":"NightRaven49"},"content":"        stage.show();"},{"lineNumber":89,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":90,"author":{"gitId":"NightRaven49"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(ui.welcome(),"},{"lineNumber":91,"author":{"gitId":"NightRaven49"},"content":"                new ImageView(duke)));"},{"lineNumber":92,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":93,"author":{"gitId":"NightRaven49"},"content":"        Label importRes;"},{"lineNumber":94,"author":{"gitId":"NightRaven49"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"NightRaven49"},"content":"            importRes \u003d ine.importData();"},{"lineNumber":96,"author":{"gitId":"NightRaven49"},"content":"        } catch (IOException e) {"},{"lineNumber":97,"author":{"gitId":"NightRaven49"},"content":"            importRes \u003d ui.ioException();"},{"lineNumber":98,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"NightRaven49"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(importRes,"},{"lineNumber":100,"author":{"gitId":"NightRaven49"},"content":"                new ImageView(duke)));"},{"lineNumber":101,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":102,"author":{"gitId":"NightRaven49"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":103,"author":{"gitId":"NightRaven49"},"content":"            handleUserInput();"},{"lineNumber":104,"author":{"gitId":"NightRaven49"},"content":"        });"},{"lineNumber":105,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":106,"author":{"gitId":"NightRaven49"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":107,"author":{"gitId":"NightRaven49"},"content":"            handleUserInput();"},{"lineNumber":108,"author":{"gitId":"NightRaven49"},"content":"        });"},{"lineNumber":109,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":110,"author":{"gitId":"NightRaven49"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":111,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":113,"author":{"gitId":"NightRaven49"},"content":"    private void handleUserInput() {"},{"lineNumber":114,"author":{"gitId":"NightRaven49"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":115,"author":{"gitId":"NightRaven49"},"content":"        Label userText \u003d new Label(input);"},{"lineNumber":116,"author":{"gitId":"NightRaven49"},"content":"        Label dukeText;"},{"lineNumber":117,"author":{"gitId":"NightRaven49"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":118,"author":{"gitId":"NightRaven49"},"content":"            dukeText \u003d ui.bye();"},{"lineNumber":119,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":120,"author":{"gitId":"NightRaven49"},"content":"            dukeText \u003d parser.parse(input);"},{"lineNumber":121,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"NightRaven49"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":123,"author":{"gitId":"NightRaven49"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":124,"author":{"gitId":"NightRaven49"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"},{"lineNumber":125,"author":{"gitId":"NightRaven49"},"content":"        );"},{"lineNumber":126,"author":{"gitId":"NightRaven49"},"content":"        userInput.clear();"},{"lineNumber":127,"author":{"gitId":"NightRaven49"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":128,"author":{"gitId":"NightRaven49"},"content":"            // lambda is here"},{"lineNumber":129,"author":{"gitId":"NightRaven49"},"content":"            Thread t \u003d new Thread(() -\u003e {"},{"lineNumber":130,"author":{"gitId":"NightRaven49"},"content":"                try {"},{"lineNumber":131,"author":{"gitId":"NightRaven49"},"content":"                    ine.exportData();"},{"lineNumber":132,"author":{"gitId":"NightRaven49"},"content":"                    Thread.sleep(1500);"},{"lineNumber":133,"author":{"gitId":"NightRaven49"},"content":"                    Platform.exit();"},{"lineNumber":134,"author":{"gitId":"NightRaven49"},"content":"                } catch (IOException e) {"},{"lineNumber":135,"author":{"gitId":"NightRaven49"},"content":"                    dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(ui.ioException(),"},{"lineNumber":136,"author":{"gitId":"NightRaven49"},"content":"                            new ImageView(duke)));"},{"lineNumber":137,"author":{"gitId":"NightRaven49"},"content":"                } catch (InterruptedException e) {"},{"lineNumber":138,"author":{"gitId":"NightRaven49"},"content":"                    System.err.println(e);"},{"lineNumber":139,"author":{"gitId":"NightRaven49"},"content":"                }"},{"lineNumber":140,"author":{"gitId":"NightRaven49"},"content":"            });"},{"lineNumber":141,"author":{"gitId":"NightRaven49"},"content":"            t.start();"},{"lineNumber":142,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"NightRaven49":142,"-":2}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":"        Application.launch(Duke.class, args);"},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":7}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":"import java.util.ArrayDeque;"},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":" * Parser class for CS2103T iP. Handles the logic of the program."},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":" */"},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":"    private final TaskList list;"},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":"    private final Ui ui;"},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"     * Creates a Parser object."},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"     * @param list TaskList object for data manipulation."},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"     * @param ui Ui object for messages."},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"    public Parser(TaskList list, Ui ui) {"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":"        this.list \u003d list;"},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"        this.ui \u003d ui;"},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"     * Main logic of the program."},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":"     * @return Label with response from program."},{"lineNumber":26,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":"    public Label parse(String input) {"},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"        if (input.equals(\"list\")) {"},{"lineNumber":29,"author":{"gitId":"NightRaven49"},"content":"            return list.listAll();"},{"lineNumber":30,"author":{"gitId":"NightRaven49"},"content":"        } else if (input.contains(\"done\")) {"},{"lineNumber":31,"author":{"gitId":"NightRaven49"},"content":"            return markDone(input);"},{"lineNumber":32,"author":{"gitId":"NightRaven49"},"content":"        } else if (input.contains(\"delete\")) {"},{"lineNumber":33,"author":{"gitId":"NightRaven49"},"content":"            return delete(input);"},{"lineNumber":34,"author":{"gitId":"NightRaven49"},"content":"        } else if (input.contains(\"todo\")) {"},{"lineNumber":35,"author":{"gitId":"NightRaven49"},"content":"            return createTodo(input);"},{"lineNumber":36,"author":{"gitId":"NightRaven49"},"content":"        } else if (input.contains(\"deadline\")) {"},{"lineNumber":37,"author":{"gitId":"NightRaven49"},"content":"            return createDeadline(input);"},{"lineNumber":38,"author":{"gitId":"NightRaven49"},"content":"        } else if (input.contains(\"event\")) {"},{"lineNumber":39,"author":{"gitId":"NightRaven49"},"content":"            return createEvent(input);"},{"lineNumber":40,"author":{"gitId":"NightRaven49"},"content":"        } else if (input.contains(\"find\")) {"},{"lineNumber":41,"author":{"gitId":"NightRaven49"},"content":"            return find(input);"},{"lineNumber":42,"author":{"gitId":"NightRaven49"},"content":"        } else if (input.contains(\"snooze\")){"},{"lineNumber":43,"author":{"gitId":"NightRaven49"},"content":"            return snooze(input);"},{"lineNumber":44,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":45,"author":{"gitId":"NightRaven49"},"content":"            return ui.print(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":46,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":49,"author":{"gitId":"NightRaven49"},"content":"    private Label markDone(String input) {"},{"lineNumber":50,"author":{"gitId":"NightRaven49"},"content":"        int number;"},{"lineNumber":51,"author":{"gitId":"NightRaven49"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"NightRaven49"},"content":"            number \u003d (Integer.parseInt(input.substring(5))) - 1; // Index of input number starts at 5."},{"lineNumber":53,"author":{"gitId":"NightRaven49"},"content":"            return list.markDone(number);"},{"lineNumber":54,"author":{"gitId":"NightRaven49"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":55,"author":{"gitId":"NightRaven49"},"content":"            return ui.printErr(\"No task was input to be marked as done.\");"},{"lineNumber":56,"author":{"gitId":"NightRaven49"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":57,"author":{"gitId":"NightRaven49"},"content":"            return ui.printErr(\"No task has been stored at that index yet.\");"},{"lineNumber":58,"author":{"gitId":"NightRaven49"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":59,"author":{"gitId":"NightRaven49"},"content":"            return ui.printErr(\"Input index was not recognised.\");"},{"lineNumber":60,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":63,"author":{"gitId":"NightRaven49"},"content":"    private Label delete(String input) {"},{"lineNumber":64,"author":{"gitId":"NightRaven49"},"content":"        int number;"},{"lineNumber":65,"author":{"gitId":"NightRaven49"},"content":"        try {"},{"lineNumber":66,"author":{"gitId":"NightRaven49"},"content":"            number \u003d (Integer.parseInt(input.substring(7))) - 1;"},{"lineNumber":67,"author":{"gitId":"NightRaven49"},"content":"            return list.delete(number);"},{"lineNumber":68,"author":{"gitId":"NightRaven49"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":69,"author":{"gitId":"NightRaven49"},"content":"            return ui.printErr(\"No task was input to be deleted.\");"},{"lineNumber":70,"author":{"gitId":"NightRaven49"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":71,"author":{"gitId":"NightRaven49"},"content":"            return ui.printErr(\"No task has been stored at that index yet.\");"},{"lineNumber":72,"author":{"gitId":"NightRaven49"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":73,"author":{"gitId":"NightRaven49"},"content":"            return ui.printErr(\"Input index was not recognised.\");"},{"lineNumber":74,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":77,"author":{"gitId":"NightRaven49"},"content":"    private Label createTodo(String input) {"},{"lineNumber":78,"author":{"gitId":"NightRaven49"},"content":"        String task \u003d input.substring(4); // \"todo\" is 4 letters long."},{"lineNumber":79,"author":{"gitId":"NightRaven49"},"content":"        if (task.length() \u003d\u003d 0 || task.equals(\" \") || task.contains(\"  \")) {"},{"lineNumber":80,"author":{"gitId":"NightRaven49"},"content":"            return ui.printErr(\"The description of a todo cannot be empty.\");"},{"lineNumber":81,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":82,"author":{"gitId":"NightRaven49"},"content":"            return list.add(new Task(task, 0));"},{"lineNumber":83,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":86,"author":{"gitId":"NightRaven49"},"content":"    private Label createDeadline(String input) {"},{"lineNumber":87,"author":{"gitId":"NightRaven49"},"content":"        String task \u003d input.substring(8); // \"deadline\" is 8 letters long."},{"lineNumber":88,"author":{"gitId":"NightRaven49"},"content":"        if (task.length() \u003d\u003d 0 || task.equals(\" \") || task.contains(\"  \")) {"},{"lineNumber":89,"author":{"gitId":"NightRaven49"},"content":"            return ui.printErr(\"The description of a deadline cannot be empty.\");"},{"lineNumber":90,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":91,"author":{"gitId":"NightRaven49"},"content":"            try {"},{"lineNumber":92,"author":{"gitId":"NightRaven49"},"content":"                return list.add(new Task(task, 1));"},{"lineNumber":93,"author":{"gitId":"NightRaven49"},"content":"            } catch (IllegalArgumentException e) {"},{"lineNumber":94,"author":{"gitId":"NightRaven49"},"content":"                return ui.printErr(\"The description or date of a deadline cannot be empty.\");"},{"lineNumber":95,"author":{"gitId":"NightRaven49"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":96,"author":{"gitId":"NightRaven49"},"content":"                return ui.printErr(\"The input date was not recognised.\");"},{"lineNumber":97,"author":{"gitId":"NightRaven49"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":101,"author":{"gitId":"NightRaven49"},"content":"    private Label createEvent(String input) {"},{"lineNumber":102,"author":{"gitId":"NightRaven49"},"content":"        String task \u003d input.substring(5); // \"event\" is 5 letters long."},{"lineNumber":103,"author":{"gitId":"NightRaven49"},"content":"        if (task.length() \u003d\u003d 0 || task.equals(\" \") || task.contains(\"  \")) {"},{"lineNumber":104,"author":{"gitId":"NightRaven49"},"content":"            return ui.printErr(\"The description of an event cannot be empty.\");"},{"lineNumber":105,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":106,"author":{"gitId":"NightRaven49"},"content":"            try {"},{"lineNumber":107,"author":{"gitId":"NightRaven49"},"content":"                return list.add(new Task(task, 2));"},{"lineNumber":108,"author":{"gitId":"NightRaven49"},"content":"            } catch (IllegalArgumentException e) {"},{"lineNumber":109,"author":{"gitId":"NightRaven49"},"content":"                return ui.printErr(\"The description or date of an event cannot be empty.\");"},{"lineNumber":110,"author":{"gitId":"NightRaven49"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":111,"author":{"gitId":"NightRaven49"},"content":"                return ui.printErr(\"The input time was not recognised.\");"},{"lineNumber":112,"author":{"gitId":"NightRaven49"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":116,"author":{"gitId":"NightRaven49"},"content":"    private Label find(String input) {"},{"lineNumber":117,"author":{"gitId":"NightRaven49"},"content":"        String search;"},{"lineNumber":118,"author":{"gitId":"NightRaven49"},"content":"        try {"},{"lineNumber":119,"author":{"gitId":"NightRaven49"},"content":"            search \u003d input.substring(5); // Beginning of search query is index 5."},{"lineNumber":120,"author":{"gitId":"NightRaven49"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":121,"author":{"gitId":"NightRaven49"},"content":"            return ui.printErr(\"The search query cannot be empty.\");"},{"lineNumber":122,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"NightRaven49"},"content":"        if (search.length() \u003d\u003d 0) {"},{"lineNumber":124,"author":{"gitId":"NightRaven49"},"content":"            return ui.printErr(\"The search query cannot be empty.\");"},{"lineNumber":125,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":126,"author":{"gitId":"NightRaven49"},"content":"            int noOfHits \u003d 0;"},{"lineNumber":127,"author":{"gitId":"NightRaven49"},"content":"            ArrayDeque\u003cTask\u003e found \u003d new ArrayDeque\u003c\u003e();"},{"lineNumber":128,"author":{"gitId":"NightRaven49"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":129,"author":{"gitId":"NightRaven49"},"content":"                Task currTask \u003d list.get(i);"},{"lineNumber":130,"author":{"gitId":"NightRaven49"},"content":"                if (currTask.toString().contains(search)) {"},{"lineNumber":131,"author":{"gitId":"NightRaven49"},"content":"                    found.add(currTask);"},{"lineNumber":132,"author":{"gitId":"NightRaven49"},"content":"                    noOfHits++;"},{"lineNumber":133,"author":{"gitId":"NightRaven49"},"content":"                }"},{"lineNumber":134,"author":{"gitId":"NightRaven49"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"NightRaven49"},"content":"            if (noOfHits \u003d\u003d 0) {"},{"lineNumber":136,"author":{"gitId":"NightRaven49"},"content":"                return ui.print(\"Looks like no tasks were found :-(\");"},{"lineNumber":137,"author":{"gitId":"NightRaven49"},"content":"            } else {"},{"lineNumber":138,"author":{"gitId":"NightRaven49"},"content":"                String[] output \u003d new String[noOfHits + 1];"},{"lineNumber":139,"author":{"gitId":"NightRaven49"},"content":"                output[0] \u003d \"Here are the matching tasks in your list:\";"},{"lineNumber":140,"author":{"gitId":"NightRaven49"},"content":"                for (int i \u003d 1; i \u003c\u003d noOfHits; i++) {"},{"lineNumber":141,"author":{"gitId":"NightRaven49"},"content":"                    output[i] \u003d i + \".\" + found.poll().toString();"},{"lineNumber":142,"author":{"gitId":"NightRaven49"},"content":"                }"},{"lineNumber":143,"author":{"gitId":"NightRaven49"},"content":"                return ui.print(output);"},{"lineNumber":144,"author":{"gitId":"NightRaven49"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":148,"author":{"gitId":"NightRaven49"},"content":"    private Label snooze(String input) {"},{"lineNumber":149,"author":{"gitId":"NightRaven49"},"content":"        String[] terms \u003d input.split(\" \");"},{"lineNumber":150,"author":{"gitId":"NightRaven49"},"content":"        if (terms.length \u003d\u003d 3) {"},{"lineNumber":151,"author":{"gitId":"NightRaven49"},"content":"            int index \u003d Integer.parseInt(terms[1]) - 1;"},{"lineNumber":152,"author":{"gitId":"NightRaven49"},"content":"            long duration \u003d Long.parseLong(terms[2]);"},{"lineNumber":153,"author":{"gitId":"NightRaven49"},"content":"            try {"},{"lineNumber":154,"author":{"gitId":"NightRaven49"},"content":"                return list.snooze(index, duration);"},{"lineNumber":155,"author":{"gitId":"NightRaven49"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":156,"author":{"gitId":"NightRaven49"},"content":"                return ui.printErr(\"No task has been stored at that index yet.\");"},{"lineNumber":157,"author":{"gitId":"NightRaven49"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":158,"author":{"gitId":"NightRaven49"},"content":"                return ui.printErr(\"Input index was not recognised.\");"},{"lineNumber":159,"author":{"gitId":"NightRaven49"},"content":"            }"},{"lineNumber":160,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":161,"author":{"gitId":"NightRaven49"},"content":"            String[] output \u003d new String[2];"},{"lineNumber":162,"author":{"gitId":"NightRaven49"},"content":"            output[0] \u003d \"Please input as snooze [index] [time to snooze].\";"},{"lineNumber":163,"author":{"gitId":"NightRaven49"},"content":"            output[1] \u003d \"For deadlines, time to snooze is in days while for events it is in minutes.\";"},{"lineNumber":164,"author":{"gitId":"NightRaven49"},"content":"            return ui.print(output);"},{"lineNumber":165,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":167}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":" * IO handler for CS2103T iP. Manages import of saved tasks upon program start and export"},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":" * of tasks upon program termination."},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":" */"},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"    private final TaskList storage;"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"    private final File data;"},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"    private final Ui ui;"},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":"     * Creates a Storage object for data manipulation."},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"     * @param tasks TaskList to be written into when importing saved tasks."},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":"     * @param ui Any messages generated will be directed to the provided Ui object."},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"    public Storage(TaskList tasks, Ui ui) {"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"        this.storage \u003d tasks;"},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":"        this.ui \u003d ui;"},{"lineNumber":26,"author":{"gitId":"NightRaven49"},"content":"        data \u003d new File(\"data/savedList.txt\");"},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":"        if (!data.exists()) {"},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"            try {"},{"lineNumber":29,"author":{"gitId":"NightRaven49"},"content":"                data.getParentFile().mkdirs();"},{"lineNumber":30,"author":{"gitId":"NightRaven49"},"content":"                data.createNewFile();"},{"lineNumber":31,"author":{"gitId":"NightRaven49"},"content":"                //ui.print(\"It appears you are using Duke for the first time. Welcome!\");"},{"lineNumber":32,"author":{"gitId":"NightRaven49"},"content":"            } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"NightRaven49"},"content":"                System.err.println(e);"},{"lineNumber":34,"author":{"gitId":"NightRaven49"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":38,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"NightRaven49"},"content":"     * Imports saved tasks into TaskList."},{"lineNumber":40,"author":{"gitId":"NightRaven49"},"content":"     * @throws FileNotFoundException When file is not found."},{"lineNumber":41,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"NightRaven49"},"content":"    public Label importData() throws FileNotFoundException {"},{"lineNumber":43,"author":{"gitId":"NightRaven49"},"content":"        Scanner sc \u003d new Scanner(data);"},{"lineNumber":44,"author":{"gitId":"NightRaven49"},"content":"        if (!sc.hasNext()) {"},{"lineNumber":45,"author":{"gitId":"NightRaven49"},"content":"            return ui.print(\"Looks like you have no tasks! :-)\");"},{"lineNumber":46,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"NightRaven49"},"content":"        while (sc.hasNext()) {"},{"lineNumber":48,"author":{"gitId":"NightRaven49"},"content":"            String line \u003d sc.nextLine();"},{"lineNumber":49,"author":{"gitId":"NightRaven49"},"content":"            int type \u003d Integer.parseInt(String.valueOf(line.charAt(0)));"},{"lineNumber":50,"author":{"gitId":"NightRaven49"},"content":"            char done \u003d line.charAt(2);"},{"lineNumber":51,"author":{"gitId":"NightRaven49"},"content":"            assert type \u003c 3 \u0026\u0026 type \u003e -1;"},{"lineNumber":52,"author":{"gitId":"NightRaven49"},"content":"            assert done \u003d\u003d \u00270\u0027 || done \u003d\u003d \u00271\u0027;"},{"lineNumber":53,"author":{"gitId":"NightRaven49"},"content":"            String task \u003d line.substring(3);"},{"lineNumber":54,"author":{"gitId":"NightRaven49"},"content":"            Task newTask \u003d new Task(task, type);"},{"lineNumber":55,"author":{"gitId":"NightRaven49"},"content":"            if (done \u003d\u003d \u00271\u0027) {"},{"lineNumber":56,"author":{"gitId":"NightRaven49"},"content":"                newTask.markDone();"},{"lineNumber":57,"author":{"gitId":"NightRaven49"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"NightRaven49"},"content":"            storage.addImport(newTask);"},{"lineNumber":59,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"NightRaven49"},"content":"        sc.close();"},{"lineNumber":61,"author":{"gitId":"NightRaven49"},"content":"        return ui.print(\"Tasks saved from last session imported! :)\");"},{"lineNumber":62,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":64,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"NightRaven49"},"content":"     * Exports saved tasks."},{"lineNumber":66,"author":{"gitId":"NightRaven49"},"content":"     * @throws IOException When there are IO errors."},{"lineNumber":67,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"NightRaven49"},"content":"    public void exportData() throws IOException {"},{"lineNumber":69,"author":{"gitId":"NightRaven49"},"content":"        FileWriter fw \u003d new FileWriter(\"data/savedList.txt\");"},{"lineNumber":70,"author":{"gitId":"NightRaven49"},"content":"        for (int i \u003d 0; i \u003c storage.size(); i++) {"},{"lineNumber":71,"author":{"gitId":"NightRaven49"},"content":"            fw.write(storage.get(i).export());"},{"lineNumber":72,"author":{"gitId":"NightRaven49"},"content":"            fw.write(System.lineSeparator());"},{"lineNumber":73,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"NightRaven49"},"content":"        fw.close();"},{"lineNumber":75,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":76}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":" * Task object for CS2103T iP. Stores relevant data regarding a task, including type, task,"},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":" * date and time (if required) and whether it has been completed."},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":" */"},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"public class Task {"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":"    private final String task;"},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":"    private boolean isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"    private final int type;"},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":"    private LocalDate date;"},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"    private LocalTime time;"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"     * Creates a Task object."},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"     * @param task Description of task."},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":"     * @param type Type of task: 0 is todo, 1 is deadline, 2 is event."},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":"    public Task(String task, int type) {"},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"        assert type \u003c 3 \u0026\u0026 type \u003e -1;"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"        if (type \u003d\u003d 0) {"},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":"            this.task \u003d task;"},{"lineNumber":26,"author":{"gitId":"NightRaven49"},"content":"            this.date \u003d null;"},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":"            this.time \u003d null;"},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"NightRaven49"},"content":"            String[] info \u003d task.split(\"/\");"},{"lineNumber":30,"author":{"gitId":"NightRaven49"},"content":"            if (info.length \u003d\u003d 1 || info[0].equals(\" \")) {"},{"lineNumber":31,"author":{"gitId":"NightRaven49"},"content":"                throw new IllegalArgumentException();"},{"lineNumber":32,"author":{"gitId":"NightRaven49"},"content":"            } else if (type \u003d\u003d 1) {"},{"lineNumber":33,"author":{"gitId":"NightRaven49"},"content":"                this.date \u003d LocalDate.parse(info[1].substring(3));"},{"lineNumber":34,"author":{"gitId":"NightRaven49"},"content":"                this.time \u003d null;"},{"lineNumber":35,"author":{"gitId":"NightRaven49"},"content":"            } else {"},{"lineNumber":36,"author":{"gitId":"NightRaven49"},"content":"                this.date \u003d null;"},{"lineNumber":37,"author":{"gitId":"NightRaven49"},"content":"                this.time \u003d LocalTime.parse(info[1].substring(3));"},{"lineNumber":38,"author":{"gitId":"NightRaven49"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"NightRaven49"},"content":"            this.task \u003d info[0];"},{"lineNumber":40,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"NightRaven49"},"content":"        this.type \u003d type;"},{"lineNumber":42,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":44,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"NightRaven49"},"content":"     * When called on a task, marks the task as done."},{"lineNumber":46,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"NightRaven49"},"content":"    public void markDone() {"},{"lineNumber":48,"author":{"gitId":"NightRaven49"},"content":"        this.isDone \u003d true;"},{"lineNumber":49,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":51,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"NightRaven49"},"content":"     * Checks for whether the task is done. Used as part of the toString() method."},{"lineNumber":53,"author":{"gitId":"NightRaven49"},"content":"     * @return \"[ ]\" for not done, \"[X]\" for done."},{"lineNumber":54,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"NightRaven49"},"content":"    public String checkDone() {"},{"lineNumber":56,"author":{"gitId":"NightRaven49"},"content":"        if (this.isDone) {"},{"lineNumber":57,"author":{"gitId":"NightRaven49"},"content":"            return \"[X]\";"},{"lineNumber":58,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"NightRaven49"},"content":"            return \"[ ]\";"},{"lineNumber":60,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":63,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"NightRaven49"},"content":"     * Checks for the task type. Used as part of the toString() method."},{"lineNumber":65,"author":{"gitId":"NightRaven49"},"content":"     * @return T for todo, D for deadline and E for event."},{"lineNumber":66,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"NightRaven49"},"content":"    public String checkType() {"},{"lineNumber":68,"author":{"gitId":"NightRaven49"},"content":"        if (this.type \u003d\u003d 0) {"},{"lineNumber":69,"author":{"gitId":"NightRaven49"},"content":"            return \"[T]\";"},{"lineNumber":70,"author":{"gitId":"NightRaven49"},"content":"        } else if (this.type \u003d\u003d 1) {"},{"lineNumber":71,"author":{"gitId":"NightRaven49"},"content":"            return \"[D]\";"},{"lineNumber":72,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"NightRaven49"},"content":"            return \"[E]\";"},{"lineNumber":74,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":77,"author":{"gitId":"NightRaven49"},"content":"    public void changeTimeTo(long duration) {"},{"lineNumber":78,"author":{"gitId":"NightRaven49"},"content":"        switch (this.type) {"},{"lineNumber":79,"author":{"gitId":"NightRaven49"},"content":"            case 1:"},{"lineNumber":80,"author":{"gitId":"NightRaven49"},"content":"                this.date \u003d this.date.plusDays(duration);"},{"lineNumber":81,"author":{"gitId":"NightRaven49"},"content":"                break;"},{"lineNumber":82,"author":{"gitId":"NightRaven49"},"content":"            case 2:"},{"lineNumber":83,"author":{"gitId":"NightRaven49"},"content":"                this.time \u003d this.time.plusMinutes(duration);"},{"lineNumber":84,"author":{"gitId":"NightRaven49"},"content":"                break;"},{"lineNumber":85,"author":{"gitId":"NightRaven49"},"content":"            default:"},{"lineNumber":86,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":89,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"NightRaven49"},"content":"     * A readable format of the Task."},{"lineNumber":91,"author":{"gitId":"NightRaven49"},"content":"     * @return A string representation of the Task."},{"lineNumber":92,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"NightRaven49"},"content":"    public String toString() {"},{"lineNumber":94,"author":{"gitId":"NightRaven49"},"content":"        if (this.type \u003d\u003d 0) {"},{"lineNumber":95,"author":{"gitId":"NightRaven49"},"content":"            return checkType() + checkDone() + this.task;"},{"lineNumber":96,"author":{"gitId":"NightRaven49"},"content":"        } else if (this.type \u003d\u003d 1) {"},{"lineNumber":97,"author":{"gitId":"NightRaven49"},"content":"            return checkType() + checkDone() + this.task + \"(by: \""},{"lineNumber":98,"author":{"gitId":"NightRaven49"},"content":"                    + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":99,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":100,"author":{"gitId":"NightRaven49"},"content":"            return checkType() + checkDone() + this.task + \"(at: \""},{"lineNumber":101,"author":{"gitId":"NightRaven49"},"content":"                    + this.time.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \")\";"},{"lineNumber":102,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":105,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"NightRaven49"},"content":"     * Generates a string that can be stored for import upon program start."},{"lineNumber":107,"author":{"gitId":"NightRaven49"},"content":"     * @return A simplified string representation of the task."},{"lineNumber":108,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"NightRaven49"},"content":"    public String export() {"},{"lineNumber":110,"author":{"gitId":"NightRaven49"},"content":"        String done \u003d this.isDone ? \" 1\" : \" 0\";"},{"lineNumber":111,"author":{"gitId":"NightRaven49"},"content":"        String deadline \u003d \"\";"},{"lineNumber":112,"author":{"gitId":"NightRaven49"},"content":"        switch (this.type) {"},{"lineNumber":113,"author":{"gitId":"NightRaven49"},"content":"            case 1:"},{"lineNumber":114,"author":{"gitId":"NightRaven49"},"content":"                deadline +\u003d \"/by \" + this.date;"},{"lineNumber":115,"author":{"gitId":"NightRaven49"},"content":"                break;"},{"lineNumber":116,"author":{"gitId":"NightRaven49"},"content":"            case 2:"},{"lineNumber":117,"author":{"gitId":"NightRaven49"},"content":"                deadline +\u003d \"/at \" + this.time;"},{"lineNumber":118,"author":{"gitId":"NightRaven49"},"content":"                break;"},{"lineNumber":119,"author":{"gitId":"NightRaven49"},"content":"            default:"},{"lineNumber":120,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"NightRaven49"},"content":"        return this.type + done + this.task + deadline;"},{"lineNumber":122,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":123}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import java.util.LinkedList;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.control.Label;"},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":" * TaskList class for CS2103T iP. Wrapper class for a LinkedList while also routing messages"},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":" * to a Ui object for printing."},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":" */"},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":"    private final LinkedList\u003cTask\u003e list;"},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":"    private final Ui ui;"},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"     * Creates a new TaskList object."},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"     * @param ui Ui object for messages."},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"    public TaskList(Ui ui) {"},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"        this.list \u003d new LinkedList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":"        this.ui \u003d ui;"},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"     * Returns the size of the list."},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"     * @return Size of list."},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"NightRaven49"},"content":"    public int size() {"},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":"        return this.list.size();"},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":30,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"NightRaven49"},"content":"     * Returns task specified."},{"lineNumber":32,"author":{"gitId":"NightRaven49"},"content":"     * @param index Index of task of interest."},{"lineNumber":33,"author":{"gitId":"NightRaven49"},"content":"     * @return Task of interest."},{"lineNumber":34,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"NightRaven49"},"content":"    public Task get(int index) {"},{"lineNumber":36,"author":{"gitId":"NightRaven49"},"content":"        return this.list.get(index);"},{"lineNumber":37,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":39,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"NightRaven49"},"content":"     * Deletes task at specified index and prints relevant messages."},{"lineNumber":41,"author":{"gitId":"NightRaven49"},"content":"     * @param index Task to be deleted."},{"lineNumber":42,"author":{"gitId":"NightRaven49"},"content":"     * @return Label informing user of successfully deleting a task."},{"lineNumber":43,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"NightRaven49"},"content":"    public Label delete(int index) {"},{"lineNumber":45,"author":{"gitId":"NightRaven49"},"content":"        Task removed \u003d list.remove(index);"},{"lineNumber":46,"author":{"gitId":"NightRaven49"},"content":"        String[] output \u003d new String[3];"},{"lineNumber":47,"author":{"gitId":"NightRaven49"},"content":"        output[0] \u003d \"Noted. I\u0027ve removed this task: \";"},{"lineNumber":48,"author":{"gitId":"NightRaven49"},"content":"        output[1] \u003d \"  \" + removed;"},{"lineNumber":49,"author":{"gitId":"NightRaven49"},"content":"        output[2] \u003d \"Now you have \" + list.size() + \" tasks in the list.\";"},{"lineNumber":50,"author":{"gitId":"NightRaven49"},"content":"        return ui.print(output);"},{"lineNumber":51,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":53,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"NightRaven49"},"content":"     * Lists all tasks in the list."},{"lineNumber":55,"author":{"gitId":"NightRaven49"},"content":"     * @return Label containing all tasks."},{"lineNumber":56,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"NightRaven49"},"content":"    public Label listAll() {"},{"lineNumber":58,"author":{"gitId":"NightRaven49"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":59,"author":{"gitId":"NightRaven49"},"content":"            return ui.print(\"There are currently no tasks! :)\");"},{"lineNumber":60,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":61,"author":{"gitId":"NightRaven49"},"content":"            String[] output \u003d new String[list.size() + 1];"},{"lineNumber":62,"author":{"gitId":"NightRaven49"},"content":"            output[0] \u003d \"Here are the tasks in your list:\";"},{"lineNumber":63,"author":{"gitId":"NightRaven49"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":64,"author":{"gitId":"NightRaven49"},"content":"                Task currTask \u003d list.get(i);"},{"lineNumber":65,"author":{"gitId":"NightRaven49"},"content":"                String task \u003d (i + 1) + \".\" + currTask.toString();"},{"lineNumber":66,"author":{"gitId":"NightRaven49"},"content":"                output[i + 1] \u003d task;"},{"lineNumber":67,"author":{"gitId":"NightRaven49"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"NightRaven49"},"content":"            return ui.print(output);"},{"lineNumber":69,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":72,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":73,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"NightRaven49"},"content":"     * Mark specified task as done."},{"lineNumber":75,"author":{"gitId":"NightRaven49"},"content":"     * @param index Task of interest."},{"lineNumber":76,"author":{"gitId":"NightRaven49"},"content":"     * @return Label informing user of successfully marking a task as done."},{"lineNumber":77,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"NightRaven49"},"content":"    public Label markDone(int index) {"},{"lineNumber":79,"author":{"gitId":"NightRaven49"},"content":"        Task done \u003d list.get(index);"},{"lineNumber":80,"author":{"gitId":"NightRaven49"},"content":"        done.markDone();"},{"lineNumber":81,"author":{"gitId":"NightRaven49"},"content":"        String[] output \u003d new String[2];"},{"lineNumber":82,"author":{"gitId":"NightRaven49"},"content":"        output[0] \u003d \"Nice! I\u0027ve marked this task as done:\";"},{"lineNumber":83,"author":{"gitId":"NightRaven49"},"content":"        output[1] \u003d \"  \" + done;"},{"lineNumber":84,"author":{"gitId":"NightRaven49"},"content":"        return ui.print(output);"},{"lineNumber":85,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":87,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"NightRaven49"},"content":"     * Verbose method for adding task to list."},{"lineNumber":89,"author":{"gitId":"NightRaven49"},"content":"     * @param task Task to be added."},{"lineNumber":90,"author":{"gitId":"NightRaven49"},"content":"     * @return Label informing user of successfully adding a task."},{"lineNumber":91,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"NightRaven49"},"content":"    public Label add(Task task) {"},{"lineNumber":93,"author":{"gitId":"NightRaven49"},"content":"        list.add(task);"},{"lineNumber":94,"author":{"gitId":"NightRaven49"},"content":"        String[] output \u003d new String[3];"},{"lineNumber":95,"author":{"gitId":"NightRaven49"},"content":"        output[0] \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":96,"author":{"gitId":"NightRaven49"},"content":"        output[1] \u003d \"  \" + task;"},{"lineNumber":97,"author":{"gitId":"NightRaven49"},"content":"        output[2] \u003d \"Now you have \" + list.size() + \" tasks in the list.\";"},{"lineNumber":98,"author":{"gitId":"NightRaven49"},"content":"        return ui.print(output);"},{"lineNumber":99,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":101,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"NightRaven49"},"content":"     * Used for importing saved tasks, no messages required."},{"lineNumber":103,"author":{"gitId":"NightRaven49"},"content":"     * @param task Task to be added."},{"lineNumber":104,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"NightRaven49"},"content":"    public void addImport(Task task) {"},{"lineNumber":106,"author":{"gitId":"NightRaven49"},"content":"        list.add(task);"},{"lineNumber":107,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":109,"author":{"gitId":"NightRaven49"},"content":"    public Label snooze(int index, long duration) {"},{"lineNumber":110,"author":{"gitId":"NightRaven49"},"content":"        Task task \u003d list.get(index);"},{"lineNumber":111,"author":{"gitId":"NightRaven49"},"content":"        task.changeTimeTo(duration);"},{"lineNumber":112,"author":{"gitId":"NightRaven49"},"content":"        String[] output \u003d {\"Got it, this is the updated task:\", task.toString()};"},{"lineNumber":113,"author":{"gitId":"NightRaven49"},"content":"        return ui.print(output);"},{"lineNumber":114,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":115}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import javafx.scene.control.Label;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":" * Ui class for CS2103T iP. Handles printing of messages from the program."},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":" */"},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":"public class Ui {"},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":"    private final String LINES \u003d \"______________________________________________________\";"},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"    private final String INDENTATION \u003d \"     \";"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":"    private final String TOP_LINE \u003d LINES + \"\\n\" + INDENTATION;"},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"    private final String END_LINE \u003d \"\\n\" + LINES;"},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"     * Prints supplied message within the 2 lines."},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"     * @param text Message to be printed."},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"     * @return Label with associated message."},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":"    public Label print(String text) {"},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"        return new Label(TOP_LINE + text + END_LINE);"},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"     * Overloaded method for multiple line messages."},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":"     * @param texts Multi line message stored in a String array."},{"lineNumber":26,"author":{"gitId":"NightRaven49"},"content":"     * @return Label with associated message."},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"    public Label print(String[] texts) {"},{"lineNumber":29,"author":{"gitId":"NightRaven49"},"content":"        String output \u003d LINES + \"\\n\";"},{"lineNumber":30,"author":{"gitId":"NightRaven49"},"content":"        for (String text : texts) {"},{"lineNumber":31,"author":{"gitId":"NightRaven49"},"content":"            output +\u003d INDENTATION + text + \"\\n\";"},{"lineNumber":32,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"NightRaven49"},"content":"        output +\u003d LINES;"},{"lineNumber":34,"author":{"gitId":"NightRaven49"},"content":"        return new Label(output);"},{"lineNumber":35,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":37,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"NightRaven49"},"content":"     * Prints error messages."},{"lineNumber":39,"author":{"gitId":"NightRaven49"},"content":"     * @param err Error to be printed."},{"lineNumber":40,"author":{"gitId":"NightRaven49"},"content":"     * @return Label with associated error message."},{"lineNumber":41,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"NightRaven49"},"content":"    public Label printErr(String err) {"},{"lineNumber":43,"author":{"gitId":"NightRaven49"},"content":"        return new Label(TOP_LINE + \":0 OOPS!!! \" + err + END_LINE);"},{"lineNumber":44,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":46,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"NightRaven49"},"content":"     * Prints the welcome logo and text."},{"lineNumber":48,"author":{"gitId":"NightRaven49"},"content":"     * @return Label with welcome message."},{"lineNumber":49,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"NightRaven49"},"content":"    public Label welcome() {"},{"lineNumber":51,"author":{"gitId":"NightRaven49"},"content":"        String logo \u003d \" __          __\\n\""},{"lineNumber":52,"author":{"gitId":"NightRaven49"},"content":"                + \"|  _ \\\\ _  _ |  |  ___\\n\""},{"lineNumber":53,"author":{"gitId":"NightRaven49"},"content":"                + \"| |  | | | |  |  |/ / _ \\\\\\n\""},{"lineNumber":54,"author":{"gitId":"NightRaven49"},"content":"                + \"| |_| | |_|  |  \u003c  __/\\n\""},{"lineNumber":55,"author":{"gitId":"NightRaven49"},"content":"                + \"|___/ \\\\_,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":56,"author":{"gitId":"NightRaven49"},"content":"        String full \u003d \"Hello from\\n\" + logo + LINES + \"\\n     Hello! I\u0027m Duke.\\n\""},{"lineNumber":57,"author":{"gitId":"NightRaven49"},"content":"                + \"     What can I do for you?\\n\" + LINES;"},{"lineNumber":58,"author":{"gitId":"NightRaven49"},"content":"        return new Label(full);"},{"lineNumber":59,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":61,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"NightRaven49"},"content":"     * Prints upon program termination."},{"lineNumber":63,"author":{"gitId":"NightRaven49"},"content":"     * @return Label with goodbye message."},{"lineNumber":64,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"NightRaven49"},"content":"    public Label bye() {"},{"lineNumber":66,"author":{"gitId":"NightRaven49"},"content":"        return new Label(TOP_LINE + \"Bye. Hope to see you again soon!\" + END_LINE);"},{"lineNumber":67,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":69,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"NightRaven49"},"content":"     * Prints when there is an IOException."},{"lineNumber":71,"author":{"gitId":"NightRaven49"},"content":"     * @return Label with IO error."},{"lineNumber":72,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"NightRaven49"},"content":"    public Label ioException() {"},{"lineNumber":74,"author":{"gitId":"NightRaven49"},"content":"        return printErr(\"An uncorrectable I/O error occurred\");"},{"lineNumber":75,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":76}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":"public class TaskListTest {"},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":"    private final TaskList list \u003d new TaskList(new Ui());"},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":"    private final Task testTask \u003d new Task(\" test task\", 0);"},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"    public void getTaskTest() {"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":"        list.add(testTask);"},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":"        assertEquals(testTask, list.get(0));"},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"    public void sizeTest() {"},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"        list.add(testTask);"},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"        list.add(testTask);"},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"        assertEquals(2, list.size());"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":20}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":"public class TaskTest {"},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":"    private final Task task1 \u003d new Task(\" test todo\", 0);"},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":"    private final Task task2 \u003d new Task(\" test deadline with date /by 2020-01-01\", 1);"},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":"    private final Task task3 \u003d new Task(\" test event with time /at 14:25\", 2);"},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":"    public void printTodoTest(){"},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":"        assertEquals(\"[T][ ] test todo\", task1.toString());"},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"    public void printDeadlineTest() {"},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"        task2.markDone();"},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"        assertEquals(\"[D][X] test deadline with date (by: Jan 1 2020)\", task2.toString());"},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":"    public void exportEventTest() {"},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":"        assertEquals(\"2 0 test event with time /at 14:25\", task3.export());"},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"list"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":"todo "},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":"todo kadfhkh"},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":"deadline"},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":"deadline "},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":"deadline  "},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":"deadline skdhf"},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"deadline /by sksdjfh"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":"deadline askdh /by kajsh"},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":"event"},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"event "},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":"event  "},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"event sakdh"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"event /on akshd"},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"event aksjdh /on kahsdk"},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"list"},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"done"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":"done "},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"done 2"},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":"delete"},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":"delete "},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"delete 2"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"delete 1"},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":"list"},{"lineNumber":26,"author":{"gitId":"NightRaven49"},"content":"delete 1"},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":"list"},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"bye"}],"authorContributionMap":{"NightRaven49":28}}]
