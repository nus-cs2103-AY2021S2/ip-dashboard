[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":" * The Duke class is the main program responsible for instantiating all required classes"},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":" * and methods."},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":"    private final Storage ine;"},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"    private final Ui ui;"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":"    private final Parser parser;"},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":"     * Instantiates required classes."},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"    public Duke() {"},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"        TaskList tasks \u003d new TaskList(ui);"},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"        this.ine \u003d new Storage(tasks, ui);"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":"        this.parser \u003d new Parser(tasks, ui);"},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"     * Creates a new Duke object and runs the main method."},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"     * @param args"},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":"        new Duke().run();"},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":30,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"NightRaven49"},"content":"     * Main method."},{"lineNumber":32,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"NightRaven49"},"content":"    public void run() {"},{"lineNumber":34,"author":{"gitId":"NightRaven49"},"content":"        ui.welcome();"},{"lineNumber":35,"author":{"gitId":"NightRaven49"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"NightRaven49"},"content":"            ine.importData();"},{"lineNumber":37,"author":{"gitId":"NightRaven49"},"content":"        } catch (IOException e) {"},{"lineNumber":38,"author":{"gitId":"NightRaven49"},"content":"            ui.ioException();"},{"lineNumber":39,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":41,"author":{"gitId":"NightRaven49"},"content":"        parser.poll();"},{"lineNumber":42,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":43,"author":{"gitId":"NightRaven49"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"NightRaven49"},"content":"            ine.exportData();"},{"lineNumber":45,"author":{"gitId":"NightRaven49"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"NightRaven49"},"content":"            ui.ioException();"},{"lineNumber":47,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"NightRaven49"},"content":"        ui.bye();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"NightRaven49":46,"-":4}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import java.util.ArrayDeque;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":" * Parser class for CS2103T iP. Handles the logic of the program."},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":" */"},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":"    private final TaskList list;"},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"    private final Ui ui;"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":"    private final Scanner sc;"},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":"     * Creates a Parser object."},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"     * @param list TaskList object for data manipulation."},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"     * @param ui Ui object for messages."},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"    public Parser(TaskList list, Ui ui) {"},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"        this.list \u003d list;"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":"        this.ui \u003d ui;"},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"     * Main logic of the program."},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"NightRaven49"},"content":"    public void poll() {"},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"        while (!input.equals(\"bye\")) {"},{"lineNumber":29,"author":{"gitId":"NightRaven49"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":30,"author":{"gitId":"NightRaven49"},"content":"                list.listAll();"},{"lineNumber":31,"author":{"gitId":"NightRaven49"},"content":"            } else if (input.contains(\"done\")){"},{"lineNumber":32,"author":{"gitId":"NightRaven49"},"content":"                int number;"},{"lineNumber":33,"author":{"gitId":"NightRaven49"},"content":"                try {"},{"lineNumber":34,"author":{"gitId":"NightRaven49"},"content":"                    number \u003d (Integer.parseInt(input.substring(5))) - 1;"},{"lineNumber":35,"author":{"gitId":"NightRaven49"},"content":"                    list.markDone(number);"},{"lineNumber":36,"author":{"gitId":"NightRaven49"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":37,"author":{"gitId":"NightRaven49"},"content":"                    ui.printErr(\"No task was input to be marked as done.\");"},{"lineNumber":38,"author":{"gitId":"NightRaven49"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":39,"author":{"gitId":"NightRaven49"},"content":"                    ui.printErr(\"No task has been stored at that index yet.\");"},{"lineNumber":40,"author":{"gitId":"NightRaven49"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":41,"author":{"gitId":"NightRaven49"},"content":"                    ui.printErr(\"Input index was not recognised.\");"},{"lineNumber":42,"author":{"gitId":"NightRaven49"},"content":"                }"},{"lineNumber":43,"author":{"gitId":"NightRaven49"},"content":"            } else if (input.contains(\"delete\")) {"},{"lineNumber":44,"author":{"gitId":"NightRaven49"},"content":"                int number;"},{"lineNumber":45,"author":{"gitId":"NightRaven49"},"content":"                try {"},{"lineNumber":46,"author":{"gitId":"NightRaven49"},"content":"                    number \u003d (Integer.parseInt(input.substring(7))) - 1;"},{"lineNumber":47,"author":{"gitId":"NightRaven49"},"content":"                    list.delete(number);"},{"lineNumber":48,"author":{"gitId":"NightRaven49"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":49,"author":{"gitId":"NightRaven49"},"content":"                    ui.printErr(\"No task was input to be deleted.\");"},{"lineNumber":50,"author":{"gitId":"NightRaven49"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":51,"author":{"gitId":"NightRaven49"},"content":"                    ui.printErr(\"No task has been stored at that index yet.\");"},{"lineNumber":52,"author":{"gitId":"NightRaven49"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":53,"author":{"gitId":"NightRaven49"},"content":"                    ui.printErr(\"Input index was not recognised.\");"},{"lineNumber":54,"author":{"gitId":"NightRaven49"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"NightRaven49"},"content":"            } else if (input.contains(\"todo\")) {"},{"lineNumber":56,"author":{"gitId":"NightRaven49"},"content":"                String task \u003d input.substring(4);"},{"lineNumber":57,"author":{"gitId":"NightRaven49"},"content":"                if (task.length() \u003d\u003d 0 || task.equals(\" \") || task.contains(\"  \")) {"},{"lineNumber":58,"author":{"gitId":"NightRaven49"},"content":"                    ui.printErr(\"The description of a todo cannot be empty.\");"},{"lineNumber":59,"author":{"gitId":"NightRaven49"},"content":"                } else {"},{"lineNumber":60,"author":{"gitId":"NightRaven49"},"content":"                    list.add(new Task(task, 0));"},{"lineNumber":61,"author":{"gitId":"NightRaven49"},"content":"                }"},{"lineNumber":62,"author":{"gitId":"NightRaven49"},"content":"            } else if (input.contains(\"deadline\")) {"},{"lineNumber":63,"author":{"gitId":"NightRaven49"},"content":"                String task \u003d input.substring(8);"},{"lineNumber":64,"author":{"gitId":"NightRaven49"},"content":"                if (task.length() \u003d\u003d 0 || task.equals(\" \") || task.contains(\"  \")) {"},{"lineNumber":65,"author":{"gitId":"NightRaven49"},"content":"                    ui.printErr(\"The description of a deadline cannot be empty.\");"},{"lineNumber":66,"author":{"gitId":"NightRaven49"},"content":"                } else {"},{"lineNumber":67,"author":{"gitId":"NightRaven49"},"content":"                    try {"},{"lineNumber":68,"author":{"gitId":"NightRaven49"},"content":"                        list.add(new Task(task, 1));"},{"lineNumber":69,"author":{"gitId":"NightRaven49"},"content":"                    } catch (IllegalArgumentException e) {"},{"lineNumber":70,"author":{"gitId":"NightRaven49"},"content":"                        ui.printErr(\"The description or date of a deadline cannot be empty.\");"},{"lineNumber":71,"author":{"gitId":"NightRaven49"},"content":"                    }"},{"lineNumber":72,"author":{"gitId":"NightRaven49"},"content":"                }"},{"lineNumber":73,"author":{"gitId":"NightRaven49"},"content":"            } else if (input.contains(\"event\")) {"},{"lineNumber":74,"author":{"gitId":"NightRaven49"},"content":"                String task \u003d input.substring(5);"},{"lineNumber":75,"author":{"gitId":"NightRaven49"},"content":"                if (task.length() \u003d\u003d 0 || task.equals(\" \") || task.contains(\"  \")) {"},{"lineNumber":76,"author":{"gitId":"NightRaven49"},"content":"                    ui.printErr(\"The description of an event cannot be empty.\");"},{"lineNumber":77,"author":{"gitId":"NightRaven49"},"content":"                } else {"},{"lineNumber":78,"author":{"gitId":"NightRaven49"},"content":"                    try {"},{"lineNumber":79,"author":{"gitId":"NightRaven49"},"content":"                        list.add(new Task(task, 2));"},{"lineNumber":80,"author":{"gitId":"NightRaven49"},"content":"                    } catch (IllegalArgumentException e) {"},{"lineNumber":81,"author":{"gitId":"NightRaven49"},"content":"                        ui.printErr(\"The description or date of an event cannot be empty.\");"},{"lineNumber":82,"author":{"gitId":"NightRaven49"},"content":"                    }"},{"lineNumber":83,"author":{"gitId":"NightRaven49"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"NightRaven49"},"content":"            } else if (input.contains(\"find\")) {"},{"lineNumber":85,"author":{"gitId":"NightRaven49"},"content":"                String search \u003d \"\";"},{"lineNumber":86,"author":{"gitId":"NightRaven49"},"content":"                try {"},{"lineNumber":87,"author":{"gitId":"NightRaven49"},"content":"                    search \u003d input.substring(5);"},{"lineNumber":88,"author":{"gitId":"NightRaven49"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":89,"author":{"gitId":"NightRaven49"},"content":"                    ui.printErr(\"The search query cannot be empty.\");"},{"lineNumber":90,"author":{"gitId":"NightRaven49"},"content":"                }"},{"lineNumber":91,"author":{"gitId":"NightRaven49"},"content":"                if (search.length() \u003d\u003d 0) {"},{"lineNumber":92,"author":{"gitId":"NightRaven49"},"content":"                    ui.printErr(\"The search query cannot be empty.\");"},{"lineNumber":93,"author":{"gitId":"NightRaven49"},"content":"                } else {"},{"lineNumber":94,"author":{"gitId":"NightRaven49"},"content":"                    int noOfHits \u003d 0;"},{"lineNumber":95,"author":{"gitId":"NightRaven49"},"content":"                    ArrayDeque\u003cTask\u003e found \u003d new ArrayDeque\u003c\u003e();"},{"lineNumber":96,"author":{"gitId":"NightRaven49"},"content":"                    for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":97,"author":{"gitId":"NightRaven49"},"content":"                        Task currTask \u003d list.get(i);"},{"lineNumber":98,"author":{"gitId":"NightRaven49"},"content":"                        if (currTask.toString().contains(search)) {"},{"lineNumber":99,"author":{"gitId":"NightRaven49"},"content":"                            found.add(currTask);"},{"lineNumber":100,"author":{"gitId":"NightRaven49"},"content":"                            noOfHits++;"},{"lineNumber":101,"author":{"gitId":"NightRaven49"},"content":"                        }"},{"lineNumber":102,"author":{"gitId":"NightRaven49"},"content":"                    }"},{"lineNumber":103,"author":{"gitId":"NightRaven49"},"content":"                    if (noOfHits \u003d\u003d 0) {"},{"lineNumber":104,"author":{"gitId":"NightRaven49"},"content":"                        ui.print(\"Looks like no tasks were found :(\");"},{"lineNumber":105,"author":{"gitId":"NightRaven49"},"content":"                    } else {"},{"lineNumber":106,"author":{"gitId":"NightRaven49"},"content":"                        String[] output \u003d new String[noOfHits + 1];"},{"lineNumber":107,"author":{"gitId":"NightRaven49"},"content":"                        output[0] \u003d \"Here are the matching tasks in your list:\";"},{"lineNumber":108,"author":{"gitId":"NightRaven49"},"content":"                        for (int i \u003d 1; i \u003c\u003d noOfHits; i++) {"},{"lineNumber":109,"author":{"gitId":"NightRaven49"},"content":"                            output[i] \u003d i + \".\" + found.poll().toString();"},{"lineNumber":110,"author":{"gitId":"NightRaven49"},"content":"                        }"},{"lineNumber":111,"author":{"gitId":"NightRaven49"},"content":"                        ui.print(output);"},{"lineNumber":112,"author":{"gitId":"NightRaven49"},"content":"                    }"},{"lineNumber":113,"author":{"gitId":"NightRaven49"},"content":"                }"},{"lineNumber":114,"author":{"gitId":"NightRaven49"},"content":"            } else {"},{"lineNumber":115,"author":{"gitId":"NightRaven49"},"content":"                ui.print(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":116,"author":{"gitId":"NightRaven49"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"NightRaven49"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":118,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"NightRaven49"},"content":"        sc.close();"},{"lineNumber":120,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":121}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":" * IO handler for CS2103T iP. Manages import of saved tasks upon program start and export"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":" * of tasks upon program termination."},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":" */"},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":"    private final TaskList storage;"},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"    private final File data;"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"    private final Ui ui;"},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"     * Creates a Storage object for data manipulation."},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":"     * @param tasks TaskList to be written into when importing saved tasks."},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"     * @param ui Any messages generated will be directed to the provided Ui object."},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":"    public Storage(TaskList tasks, Ui ui) {"},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"        this.storage \u003d tasks;"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"        this.ui \u003d ui;"},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":"        data \u003d new File(\"data/savedList.txt\");"},{"lineNumber":26,"author":{"gitId":"NightRaven49"},"content":"        if (!data.exists()) {"},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":"            try {"},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"                data.getParentFile().mkdirs();"},{"lineNumber":29,"author":{"gitId":"NightRaven49"},"content":"                data.createNewFile();"},{"lineNumber":30,"author":{"gitId":"NightRaven49"},"content":"                ui.print(\"It appears you are using Duke for the first time. Welcome!\");"},{"lineNumber":31,"author":{"gitId":"NightRaven49"},"content":"            } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"NightRaven49"},"content":"                ui.ioException();"},{"lineNumber":33,"author":{"gitId":"NightRaven49"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":37,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"NightRaven49"},"content":"     * Imports saved tasks into TaskList."},{"lineNumber":39,"author":{"gitId":"NightRaven49"},"content":"     * @throws FileNotFoundException When file is not found."},{"lineNumber":40,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"NightRaven49"},"content":"    public void importData() throws FileNotFoundException {"},{"lineNumber":42,"author":{"gitId":"NightRaven49"},"content":"        Scanner sc \u003d new Scanner(data);"},{"lineNumber":43,"author":{"gitId":"NightRaven49"},"content":"        if (!sc.hasNext()) {"},{"lineNumber":44,"author":{"gitId":"NightRaven49"},"content":"            ui.print(\"Looks like you have no tasks! :)\");"},{"lineNumber":45,"author":{"gitId":"NightRaven49"},"content":"            return;"},{"lineNumber":46,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"NightRaven49"},"content":"        while (sc.hasNext()) {"},{"lineNumber":48,"author":{"gitId":"NightRaven49"},"content":"            String line \u003d sc.nextLine();"},{"lineNumber":49,"author":{"gitId":"NightRaven49"},"content":"            int type \u003d Integer.parseInt(String.valueOf(line.charAt(0)));"},{"lineNumber":50,"author":{"gitId":"NightRaven49"},"content":"            char done \u003d line.charAt(2);"},{"lineNumber":51,"author":{"gitId":"NightRaven49"},"content":"            String task \u003d line.substring(3);"},{"lineNumber":52,"author":{"gitId":"NightRaven49"},"content":"            Task newTask \u003d new Task(task, type);"},{"lineNumber":53,"author":{"gitId":"NightRaven49"},"content":"            if (done \u003d\u003d \u00271\u0027) {"},{"lineNumber":54,"author":{"gitId":"NightRaven49"},"content":"                newTask.markDone();"},{"lineNumber":55,"author":{"gitId":"NightRaven49"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"NightRaven49"},"content":"            storage.addImport(newTask);"},{"lineNumber":57,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"NightRaven49"},"content":"        sc.close();"},{"lineNumber":59,"author":{"gitId":"NightRaven49"},"content":"        ui.print(\"Tasks saved from last session imported! :)\");"},{"lineNumber":60,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":62,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"NightRaven49"},"content":"     * Exports saved tasks."},{"lineNumber":64,"author":{"gitId":"NightRaven49"},"content":"     * @throws IOException When there are IO errors."},{"lineNumber":65,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"NightRaven49"},"content":"    public void exportData() throws IOException {"},{"lineNumber":67,"author":{"gitId":"NightRaven49"},"content":"        FileWriter fw \u003d new FileWriter(\"data/savedList.txt\");"},{"lineNumber":68,"author":{"gitId":"NightRaven49"},"content":"        for (int i \u003d 0; i \u003c storage.size(); i++) {"},{"lineNumber":69,"author":{"gitId":"NightRaven49"},"content":"            fw.write(storage.get(i).export());"},{"lineNumber":70,"author":{"gitId":"NightRaven49"},"content":"            fw.write(System.lineSeparator());"},{"lineNumber":71,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"NightRaven49"},"content":"        fw.close();"},{"lineNumber":73,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":74}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":" * Task object for CS2103T iP. Stores relevant data regarding a task, including type, task,"},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":" * date and time (if required) and whether it has been completed."},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":" */"},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"public class Task {"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":"    private final String task;"},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":"    private boolean done \u003d false;"},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"    private final int type;"},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":"    private final LocalDate date;"},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"    private final LocalTime time;"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"     * Creates a Task object."},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"     * @param task Description of task."},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":"     * @param type Type of task: 0 is todo, 1 is deadline, 2 is event"},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":"    public Task(String task, int type) {"},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"        if (type \u003d\u003d 0) {"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"            this.task \u003d task;"},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":"            this.date \u003d null;"},{"lineNumber":26,"author":{"gitId":"NightRaven49"},"content":"            this.time \u003d null;"},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"            String[] info \u003d task.split(\"/\");"},{"lineNumber":29,"author":{"gitId":"NightRaven49"},"content":"            if (info.length \u003d\u003d 1 || info[0].equals(\" \")) {"},{"lineNumber":30,"author":{"gitId":"NightRaven49"},"content":"                throw new IllegalArgumentException();"},{"lineNumber":31,"author":{"gitId":"NightRaven49"},"content":"            } else if (type \u003d\u003d 1) {"},{"lineNumber":32,"author":{"gitId":"NightRaven49"},"content":"                this.date \u003d LocalDate.parse(info[1].substring(3));"},{"lineNumber":33,"author":{"gitId":"NightRaven49"},"content":"                this.time \u003d null;"},{"lineNumber":34,"author":{"gitId":"NightRaven49"},"content":"            } else {"},{"lineNumber":35,"author":{"gitId":"NightRaven49"},"content":"                this.date \u003d null;"},{"lineNumber":36,"author":{"gitId":"NightRaven49"},"content":"                this.time \u003d LocalTime.parse(info[1].substring(3));"},{"lineNumber":37,"author":{"gitId":"NightRaven49"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"NightRaven49"},"content":"            this.task \u003d info[0];"},{"lineNumber":39,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"NightRaven49"},"content":"        this.type \u003d type;"},{"lineNumber":41,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":43,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"NightRaven49"},"content":"     * When called on a task, marks the task as done."},{"lineNumber":45,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"NightRaven49"},"content":"    public void markDone() {"},{"lineNumber":47,"author":{"gitId":"NightRaven49"},"content":"        this.done \u003d true;"},{"lineNumber":48,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":50,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"NightRaven49"},"content":"     * Checks for whether the task is done. Used as part of the toString() method."},{"lineNumber":52,"author":{"gitId":"NightRaven49"},"content":"     * @return \"[ ]\" for not done, \"[X]\" for done."},{"lineNumber":53,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"NightRaven49"},"content":"    public String checkDone() {"},{"lineNumber":55,"author":{"gitId":"NightRaven49"},"content":"        if (this.done) {"},{"lineNumber":56,"author":{"gitId":"NightRaven49"},"content":"            return \"[X]\";"},{"lineNumber":57,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":58,"author":{"gitId":"NightRaven49"},"content":"            return \"[ ]\";"},{"lineNumber":59,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":62,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"NightRaven49"},"content":"     * Checks for the task type. Used as part of the toString() method."},{"lineNumber":64,"author":{"gitId":"NightRaven49"},"content":"     * @return T for todo, D for deadline and E for event."},{"lineNumber":65,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"NightRaven49"},"content":"    public String checkType() {"},{"lineNumber":67,"author":{"gitId":"NightRaven49"},"content":"        if (this.type \u003d\u003d 0) {"},{"lineNumber":68,"author":{"gitId":"NightRaven49"},"content":"            return \"[T]\";"},{"lineNumber":69,"author":{"gitId":"NightRaven49"},"content":"        } else if (this.type \u003d\u003d 1) {"},{"lineNumber":70,"author":{"gitId":"NightRaven49"},"content":"            return \"[D]\";"},{"lineNumber":71,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":72,"author":{"gitId":"NightRaven49"},"content":"            return \"[E]\";"},{"lineNumber":73,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":76,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"NightRaven49"},"content":"     * A readable format of the Task."},{"lineNumber":78,"author":{"gitId":"NightRaven49"},"content":"     * @return A string representation of the Task."},{"lineNumber":79,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"NightRaven49"},"content":"    public String toString() {"},{"lineNumber":81,"author":{"gitId":"NightRaven49"},"content":"        if (this.type \u003d\u003d 0) {"},{"lineNumber":82,"author":{"gitId":"NightRaven49"},"content":"            return checkType() + checkDone() + this.task;"},{"lineNumber":83,"author":{"gitId":"NightRaven49"},"content":"        } else if  (this.type \u003d\u003d 1) {"},{"lineNumber":84,"author":{"gitId":"NightRaven49"},"content":"            return checkType() + checkDone() + this.task + \"(by: \""},{"lineNumber":85,"author":{"gitId":"NightRaven49"},"content":"                    + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":86,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":87,"author":{"gitId":"NightRaven49"},"content":"            return checkType() + checkDone() + this.task + \"(at: \""},{"lineNumber":88,"author":{"gitId":"NightRaven49"},"content":"                    + this.time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"))+ \")\";"},{"lineNumber":89,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":92,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"NightRaven49"},"content":"     * Generates a string that can be stored for import upon program start."},{"lineNumber":94,"author":{"gitId":"NightRaven49"},"content":"     * @return A simplified string representation of the task."},{"lineNumber":95,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"NightRaven49"},"content":"    public String export() {"},{"lineNumber":97,"author":{"gitId":"NightRaven49"},"content":"        String done \u003d this.done ? \" 1\" : \" 0\";"},{"lineNumber":98,"author":{"gitId":"NightRaven49"},"content":"        String deadline \u003d this.type \u003d\u003d 0 ? \"\" : this.type \u003d\u003d 1 ? \"/by \" + this.date : \"/at \""},{"lineNumber":99,"author":{"gitId":"NightRaven49"},"content":"                + this.time;"},{"lineNumber":100,"author":{"gitId":"NightRaven49"},"content":"        return this.type + done + this.task + deadline;"},{"lineNumber":101,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":102}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import java.util.LinkedList;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":" * TaskList class for CS2103T iP. Wrapper class for a LinkedList while also routing messages"},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":" * to a Ui object for printing."},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":" */"},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":"    private final LinkedList\u003cTask\u003e list;"},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"    private final Ui ui;"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"     * Creates a new TaskList object."},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":"     * @param ui Ui object for messages."},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"    public TaskList(Ui ui) {"},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"        this.list \u003d new LinkedList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"        this.ui \u003d ui;"},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":"     * Returns the size of the list."},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":"     * @return Size of list."},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"    public int size() {"},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":"        return this.list.size();"},{"lineNumber":26,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"NightRaven49"},"content":"     * Returns task specified."},{"lineNumber":30,"author":{"gitId":"NightRaven49"},"content":"     * @param index Index of task of interest."},{"lineNumber":31,"author":{"gitId":"NightRaven49"},"content":"     * @return Task of interest."},{"lineNumber":32,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"NightRaven49"},"content":"    public Task get(int index) {"},{"lineNumber":34,"author":{"gitId":"NightRaven49"},"content":"        return this.list.get(index);"},{"lineNumber":35,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":37,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"NightRaven49"},"content":"     * Deletes task at specified index and prints relevant messages."},{"lineNumber":39,"author":{"gitId":"NightRaven49"},"content":"     * @param index Task to be deleted."},{"lineNumber":40,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"NightRaven49"},"content":"    public void delete(int index) {"},{"lineNumber":42,"author":{"gitId":"NightRaven49"},"content":"        Task removed \u003d list.remove(index);"},{"lineNumber":43,"author":{"gitId":"NightRaven49"},"content":"        String[] output \u003d new String[3];"},{"lineNumber":44,"author":{"gitId":"NightRaven49"},"content":"        output[0] \u003d \"Noted. I\u0027ve removed this task: \";"},{"lineNumber":45,"author":{"gitId":"NightRaven49"},"content":"        output[1] \u003d \"  \" + removed;"},{"lineNumber":46,"author":{"gitId":"NightRaven49"},"content":"        output[2] \u003d \"Now you have \" + list.size() + \" tasks in the list.\";"},{"lineNumber":47,"author":{"gitId":"NightRaven49"},"content":"        ui.print(output);"},{"lineNumber":48,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":50,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"NightRaven49"},"content":"     * Lists all tasks in the list."},{"lineNumber":52,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"NightRaven49"},"content":"    public void listAll() {"},{"lineNumber":54,"author":{"gitId":"NightRaven49"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":55,"author":{"gitId":"NightRaven49"},"content":"            ui.print(\"There are currently no tasks! :)\");"},{"lineNumber":56,"author":{"gitId":"NightRaven49"},"content":"        } else {"},{"lineNumber":57,"author":{"gitId":"NightRaven49"},"content":"            String[] output \u003d new String[list.size() + 1];"},{"lineNumber":58,"author":{"gitId":"NightRaven49"},"content":"            output[0] \u003d \"Here are the tasks in your list:\";"},{"lineNumber":59,"author":{"gitId":"NightRaven49"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":60,"author":{"gitId":"NightRaven49"},"content":"                Task currTask \u003d list.get(i);"},{"lineNumber":61,"author":{"gitId":"NightRaven49"},"content":"                String task \u003d  (i + 1) + \".\" + currTask.toString();"},{"lineNumber":62,"author":{"gitId":"NightRaven49"},"content":"                output[i + 1] \u003d task;"},{"lineNumber":63,"author":{"gitId":"NightRaven49"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"NightRaven49"},"content":"            ui.print(output);"},{"lineNumber":65,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":68,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":69,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"NightRaven49"},"content":"     * Mark specified task as done."},{"lineNumber":71,"author":{"gitId":"NightRaven49"},"content":"     * @param index Task of interest."},{"lineNumber":72,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"NightRaven49"},"content":"    public void markDone(int index) {"},{"lineNumber":74,"author":{"gitId":"NightRaven49"},"content":"        Task done \u003d list.get(index);"},{"lineNumber":75,"author":{"gitId":"NightRaven49"},"content":"        done.markDone();"},{"lineNumber":76,"author":{"gitId":"NightRaven49"},"content":"        String[] output \u003d new String[2];"},{"lineNumber":77,"author":{"gitId":"NightRaven49"},"content":"        output[0] \u003d \"Nice! I\u0027ve marked this task as done:\";"},{"lineNumber":78,"author":{"gitId":"NightRaven49"},"content":"        output[1] \u003d \"  \" + done;"},{"lineNumber":79,"author":{"gitId":"NightRaven49"},"content":"        ui.print(output);"},{"lineNumber":80,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":82,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"NightRaven49"},"content":"     * Verbose method for adding task to list."},{"lineNumber":84,"author":{"gitId":"NightRaven49"},"content":"     * @param task Task to be added."},{"lineNumber":85,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"NightRaven49"},"content":"    public void add(Task task) {"},{"lineNumber":87,"author":{"gitId":"NightRaven49"},"content":"        list.add(task);"},{"lineNumber":88,"author":{"gitId":"NightRaven49"},"content":"        String[] output \u003d new String[3];"},{"lineNumber":89,"author":{"gitId":"NightRaven49"},"content":"        output[0] \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":90,"author":{"gitId":"NightRaven49"},"content":"        output[1] \u003d \"  \" + task;"},{"lineNumber":91,"author":{"gitId":"NightRaven49"},"content":"        output[2] \u003d \"Now you have \" + list.size() + \" tasks in the list.\";"},{"lineNumber":92,"author":{"gitId":"NightRaven49"},"content":"        ui.print(output);"},{"lineNumber":93,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":95,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"NightRaven49"},"content":"     * Used for importing saved tasks, no messages required."},{"lineNumber":97,"author":{"gitId":"NightRaven49"},"content":"     * @param task Task to be added."},{"lineNumber":98,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"NightRaven49"},"content":"    public void addImport(Task task) {"},{"lineNumber":100,"author":{"gitId":"NightRaven49"},"content":"        list.add(task);"},{"lineNumber":101,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":102}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":" * Ui class for CS2103T iP. Handles printing of messages from the program."},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":" */"},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":"    private final String LINES \u003d \"    ____________________________________________________________\";"},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":"    private final String INDENTATION \u003d \"     \";"},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":"     * Prints supplied message within the 2 lines."},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":"     * @param text Message to be printed."},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":"    public void print(String text) {"},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"        System.out.println(LINES);"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"        System.out.print(INDENTATION);"},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"        System.out.println(text);"},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"        System.out.println(LINES);"},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":"     * Overloaded method for multiple line messages."},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":"     * @param texts Multi line message stored in a String array."},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"    public void print(String[] texts) {"},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":"        System.out.println(LINES);"},{"lineNumber":26,"author":{"gitId":"NightRaven49"},"content":"        for (String text : texts) {"},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":"            System.out.print(INDENTATION);"},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"            System.out.println(text);"},{"lineNumber":29,"author":{"gitId":"NightRaven49"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"NightRaven49"},"content":"        System.out.println(LINES);"},{"lineNumber":31,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":33,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"NightRaven49"},"content":"     * Prints error messages."},{"lineNumber":35,"author":{"gitId":"NightRaven49"},"content":"     * @param err Error to be printed."},{"lineNumber":36,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"NightRaven49"},"content":"    public void printErr(String err) {"},{"lineNumber":38,"author":{"gitId":"NightRaven49"},"content":"        System.out.println(LINES);"},{"lineNumber":39,"author":{"gitId":"NightRaven49"},"content":"        System.out.print(INDENTATION);"},{"lineNumber":40,"author":{"gitId":"NightRaven49"},"content":"        System.out.println(\"☹ OOPS!!! \" + err);"},{"lineNumber":41,"author":{"gitId":"NightRaven49"},"content":"        System.out.println(LINES);"},{"lineNumber":42,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":44,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"NightRaven49"},"content":"     * Prints the welcome logo and text."},{"lineNumber":46,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"NightRaven49"},"content":"    public void welcome() {"},{"lineNumber":48,"author":{"gitId":"NightRaven49"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":49,"author":{"gitId":"NightRaven49"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":50,"author":{"gitId":"NightRaven49"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":51,"author":{"gitId":"NightRaven49"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":52,"author":{"gitId":"NightRaven49"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":53,"author":{"gitId":"NightRaven49"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":54,"author":{"gitId":"NightRaven49"},"content":"        System.out.println(LINES);"},{"lineNumber":55,"author":{"gitId":"NightRaven49"},"content":"        System.out.println(\"     Hello! I\u0027m Duke\\n     What can I do for you?\");"},{"lineNumber":56,"author":{"gitId":"NightRaven49"},"content":"        System.out.println(LINES);"},{"lineNumber":57,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":59,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"NightRaven49"},"content":"     * Prints upon program termination."},{"lineNumber":61,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"NightRaven49"},"content":"    public void bye() {"},{"lineNumber":63,"author":{"gitId":"NightRaven49"},"content":"        System.out.println(LINES);"},{"lineNumber":64,"author":{"gitId":"NightRaven49"},"content":"        System.out.println(INDENTATION + \"Bye. Hope to see you again soon!\");"},{"lineNumber":65,"author":{"gitId":"NightRaven49"},"content":"        System.out.println(LINES);"},{"lineNumber":66,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":68,"author":{"gitId":"NightRaven49"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"NightRaven49"},"content":"     * Prints when there is an IOException."},{"lineNumber":70,"author":{"gitId":"NightRaven49"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"NightRaven49"},"content":"    public void ioException() {"},{"lineNumber":72,"author":{"gitId":"NightRaven49"},"content":"        System.out.println(\"☹ OOPS!!! An uncorrectable error occurred\");"},{"lineNumber":73,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":74}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":"public class TaskListTest {"},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":"    private final TaskList list \u003d new TaskList(new Ui());"},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":"    private final Task testTask \u003d new Task(\" test task\", 0);"},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"    public void getTaskTest() {"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":"        list.add(testTask);"},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":"        assertEquals(testTask, list.get(0));"},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"    public void sizeTest() {"},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"        list.add(testTask);"},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"        list.add(testTask);"},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"        assertEquals(2, list.size());"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":20}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":"public class TaskTest {"},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":"    private final Task task1 \u003d new Task(\" test todo\", 0);"},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":"    private final Task task2 \u003d new Task(\" test deadline with date /by 2020-01-01\", 1);"},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":"    private final Task task3 \u003d new Task(\" test event with time /at 14:25\", 2);"},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":"    public void printTodoTest(){"},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":"        assertEquals(\"[T][ ] test todo\", task1.toString());"},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"    public void printDeadlineTest() {"},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"        task2.markDone();"},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"        assertEquals(\"[D][X] test deadline with date (by: Jan 1 2020)\", task2.toString());"},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":""},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":"    public void exportEventTest() {"},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":"        assertEquals(\"2 0 test event with time /at 14:25\", task3.export());"},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"}"}],"authorContributionMap":{"NightRaven49":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NightRaven49"},"content":"list"},{"lineNumber":2,"author":{"gitId":"NightRaven49"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"NightRaven49"},"content":"todo "},{"lineNumber":4,"author":{"gitId":"NightRaven49"},"content":"todo kadfhkh"},{"lineNumber":5,"author":{"gitId":"NightRaven49"},"content":"deadline"},{"lineNumber":6,"author":{"gitId":"NightRaven49"},"content":"deadline "},{"lineNumber":7,"author":{"gitId":"NightRaven49"},"content":"deadline  "},{"lineNumber":8,"author":{"gitId":"NightRaven49"},"content":"deadline skdhf"},{"lineNumber":9,"author":{"gitId":"NightRaven49"},"content":"deadline /by sksdjfh"},{"lineNumber":10,"author":{"gitId":"NightRaven49"},"content":"deadline askdh /by kajsh"},{"lineNumber":11,"author":{"gitId":"NightRaven49"},"content":"event"},{"lineNumber":12,"author":{"gitId":"NightRaven49"},"content":"event "},{"lineNumber":13,"author":{"gitId":"NightRaven49"},"content":"event  "},{"lineNumber":14,"author":{"gitId":"NightRaven49"},"content":"event sakdh"},{"lineNumber":15,"author":{"gitId":"NightRaven49"},"content":"event /on akshd"},{"lineNumber":16,"author":{"gitId":"NightRaven49"},"content":"event aksjdh /on kahsdk"},{"lineNumber":17,"author":{"gitId":"NightRaven49"},"content":"list"},{"lineNumber":18,"author":{"gitId":"NightRaven49"},"content":"done"},{"lineNumber":19,"author":{"gitId":"NightRaven49"},"content":"done "},{"lineNumber":20,"author":{"gitId":"NightRaven49"},"content":"done 2"},{"lineNumber":21,"author":{"gitId":"NightRaven49"},"content":"delete"},{"lineNumber":22,"author":{"gitId":"NightRaven49"},"content":"delete "},{"lineNumber":23,"author":{"gitId":"NightRaven49"},"content":"delete 2"},{"lineNumber":24,"author":{"gitId":"NightRaven49"},"content":"delete 1"},{"lineNumber":25,"author":{"gitId":"NightRaven49"},"content":"list"},{"lineNumber":26,"author":{"gitId":"NightRaven49"},"content":"delete 1"},{"lineNumber":27,"author":{"gitId":"NightRaven49"},"content":"list"},{"lineNumber":28,"author":{"gitId":"NightRaven49"},"content":"bye"}],"authorContributionMap":{"NightRaven49":28}}]
