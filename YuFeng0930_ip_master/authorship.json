[{"path":"src/main/java/Chatbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":" * A Chatbot that provides todo-list function for users."},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"public class Chatbot {"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    private final List\u003cTask\u003e todo;"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"    Chatbot() {"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"        todo \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"     * Print out all the things in the list."},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"     * @param todo The list of things to do."},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"    public static void printTodo(List\u003cTask\u003e todo) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"        if (todo.size() \u003d\u003d 0) {"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"There\u0027s currently no any tasks.\\n\");"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"        System.out.print(Duke.horizontalLine);"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"        for (int i \u003d 0; i \u003c todo.size(); i++) {"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"            System.out.println(\"\\t  \" + (i + 1) + \".\" + todo.get(i).toString());"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(Duke.horizontalLine);"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"     * Mark the task as done."},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"     * @param order the order of the task"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"     * @throws DukeException if there\u0027s no such task or the task had been finished"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"    public void markDone(int order) throws DukeException {"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"        if (order \u003c 0 || order \u003e\u003d todo.size()) {"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"There\u0027s no task \" + (order + 1) + \" in the list.\\n\");"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"        } else if (todo.get(order).getDone()) {"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"This task has been finished before.\\n\");"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"        todo.get(order).markDone();"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"        System.out.print(Duke.horizontalLine);"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(\"\\t  Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(\"\\t\\t \" + todo.get(order).toString());"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(Duke.horizontalLine);"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"     * Delete the task."},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"     * @param order the order of the task"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"     * @throws DukeException if there\u0027s no such task"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"    public void delete(int order) throws DukeException {"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"        if (order \u003c 0 || order \u003e\u003d todo.size()) {"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"There\u0027s no task \" + (order + 1) + \" in the list.\\n\");"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"        System.out.print(Duke.horizontalLine);"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(\"\\t  Noted. I\u0027ve removed this task:\");"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(\"\\t\\t \" + todo.get(order).toString());"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(Duke.horizontalLine);"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"        todo.remove(order);"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"     * Add more task."},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"     * @param newTask Append the newTask to the end of the task list."},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"    public void addTask(Task newTask) {"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"        todo.add(newTask);"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"        System.out.print(Duke.horizontalLine);"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(\"\\t  Got it. I\u0027ve added this task:\");"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(\"\\t\\t\" + newTask.toString());"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(\"\\t  Now you have \" + todo.size() + \" tasks in the list.\");"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(Duke.horizontalLine);"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"     * Execute the chat bot."},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"    public void execute() {"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"        String[] taskTimeSplit;"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"        Task newTask;"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"        while (!input.toLowerCase().equals(\"bye\")) {"},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"            try {"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"                String[] taskTypeSplit \u003d input.split(\" \");"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":"                if (input.toLowerCase().equals(\"list\")) {"},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"                    printTodo(todo);"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":"                } else if (taskTypeSplit[0].toLowerCase().contains(\"done\")) {"},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":"                    if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":"                        throw new DukeException(\"The description of done cannot be empty.\\n\");"},{"lineNumber":96,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":97,"author":{"gitId":"YuFeng0930"},"content":"                    int tempOrder \u003d Integer.parseInt(taskTypeSplit[1]);"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"                    markDone(tempOrder - 1);"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"                } else if (taskTypeSplit[0].toLowerCase().contains(\"delete\")) {"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"                    if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"                        throw new DukeException(\"The description of delete cannot be empty.\\n\");"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":103,"author":{"gitId":"YuFeng0930"},"content":"                    int tempOrder \u003d Integer.parseInt(taskTypeSplit[1]);"},{"lineNumber":104,"author":{"gitId":"YuFeng0930"},"content":"                    delete(tempOrder - 1);"},{"lineNumber":105,"author":{"gitId":"YuFeng0930"},"content":"                } else if (taskTypeSplit[0].toLowerCase().equals(\"todo\")) {"},{"lineNumber":106,"author":{"gitId":"YuFeng0930"},"content":"                    if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":107,"author":{"gitId":"YuFeng0930"},"content":"                        throw new DukeException(\"The description of a todo cannot be empty.\\n\");"},{"lineNumber":108,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":109,"author":{"gitId":"YuFeng0930"},"content":"                    newTask \u003d new ToDo(input.substring(5), TaskType.TODO);"},{"lineNumber":110,"author":{"gitId":"YuFeng0930"},"content":"                    addTask(newTask);"},{"lineNumber":111,"author":{"gitId":"YuFeng0930"},"content":"                } else if (taskTypeSplit[0].toLowerCase().equals(\"deadline\")) {"},{"lineNumber":112,"author":{"gitId":"YuFeng0930"},"content":"                    if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":113,"author":{"gitId":"YuFeng0930"},"content":"                        throw new DukeException(\"The description of a deadline cannot be empty.\\n\");"},{"lineNumber":114,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":115,"author":{"gitId":"YuFeng0930"},"content":"                    taskTimeSplit \u003d input.split(\" /by \");"},{"lineNumber":116,"author":{"gitId":"YuFeng0930"},"content":"                    if (taskTimeSplit.length \u003c\u003d 1 || taskTimeSplit[1].isBlank()) {"},{"lineNumber":117,"author":{"gitId":"YuFeng0930"},"content":"                        throw new DukeException(\"The time of a deadline cannot be empty.\\n\");"},{"lineNumber":118,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":119,"author":{"gitId":"YuFeng0930"},"content":"                    newTask \u003d new Deadline(taskTimeSplit[0].substring(9), TaskType.DEADLINE, taskTimeSplit[1]);"},{"lineNumber":120,"author":{"gitId":"YuFeng0930"},"content":"                    addTask(newTask);"},{"lineNumber":121,"author":{"gitId":"YuFeng0930"},"content":"                } else if (taskTypeSplit[0].toLowerCase().equals(\"event\")) {"},{"lineNumber":122,"author":{"gitId":"YuFeng0930"},"content":"                    if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":123,"author":{"gitId":"YuFeng0930"},"content":"                        throw new DukeException(\"The description of an event cannot be empty.\\n\");"},{"lineNumber":124,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":125,"author":{"gitId":"YuFeng0930"},"content":"                    taskTimeSplit \u003d input.split(\" /at \");"},{"lineNumber":126,"author":{"gitId":"YuFeng0930"},"content":"                    if (taskTimeSplit.length \u003c\u003d 1 || taskTimeSplit[1].isBlank()) {"},{"lineNumber":127,"author":{"gitId":"YuFeng0930"},"content":"                        throw new DukeException(\"The time of an event cannot be empty.\\n\");"},{"lineNumber":128,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":129,"author":{"gitId":"YuFeng0930"},"content":"                    newTask \u003d new Event(taskTimeSplit[0].substring(6), TaskType.EVENT, taskTimeSplit[1]);"},{"lineNumber":130,"author":{"gitId":"YuFeng0930"},"content":"                    addTask(newTask);"},{"lineNumber":131,"author":{"gitId":"YuFeng0930"},"content":"                } else {"},{"lineNumber":132,"author":{"gitId":"YuFeng0930"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"},{"lineNumber":133,"author":{"gitId":"YuFeng0930"},"content":"                }"},{"lineNumber":134,"author":{"gitId":"YuFeng0930"},"content":"            } catch (DukeException ex) {"},{"lineNumber":135,"author":{"gitId":"YuFeng0930"},"content":"                System.out.println(ex.toString());"},{"lineNumber":136,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":137,"author":{"gitId":"YuFeng0930"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":138,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":140,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":142,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":142}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"    private final String time;"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"    Deadline(String name, TaskType type, String time) {"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"        super(name, type);"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"        this.time \u003d time;"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"        return super.toString() + \" (by: \" + time + \")\";"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"    static String horizontalLine \u003d \"\\t--------------------------------\\n\";"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"        String greeting \u003d \"\\t  Hello! I\u0027m Duke\\n\" + \"\\t  What can I do for you?\\n\";"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"        String byeMessage \u003d \"\\t  Bye. Hope to see you again soon!\\n\";"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(horizontalLine + greeting + horizontalLine);"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"        Chatbot chatbot \u003d new Chatbot();"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"        chatbot.execute();"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(horizontalLine + byeMessage + horizontalLine);"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"YuFeng0930":11,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"    String errorMessage;"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"    DukeException(String errorMessage) {"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"        this.errorMessage \u003d errorMessage;"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"        String returnString \u003d \"\\t  OOPS!!! \" + errorMessage;"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"        return Duke.horizontalLine + returnString + Duke.horizontalLine + \"\\n\";"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"    private final String time;"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"    Event(String name, TaskType type, String time) {"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"        super(name, type);"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"        this.time \u003d time;"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"        return super.toString() + \" (at: \" + time + \")\";"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"    protected final String name;"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"    protected final TaskType type;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"    protected boolean done;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"    Task(String name, TaskType type) {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"        this.name \u003d name;"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"        this.done \u003d false;"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"        this.type \u003d type;"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"    public String getName() {"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"        return name;"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    public void markDone() {"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"        done \u003d true;"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"    public boolean getDone() {"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"        return done;"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"        String returnString \u003d \"[\" + type.getType() + \"][\" + (done ? \"X\" : \" \") + \"] \";"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"        return returnString + name;"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":30}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"public enum TaskType {"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"    TODO(\"T\"), DEADLINE(\"D\"), EVENT(\"E\");"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"    private final String type;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"    TaskType(String type) {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"        this.type \u003d type;"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    public String getType() {"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"        return type;"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":13}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"    ToDo(String name, TaskType type) {"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"        super(name, type);"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"list"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"done 2"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"list"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"bye"}],"authorContributionMap":{"YuFeng0930":6}}]
