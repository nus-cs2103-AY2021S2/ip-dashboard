[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"    mainClassName \u003d \"duke.gui.Launcher\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"    archiveBaseName \u003d \"Duke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"YuFeng0930":16,"-":44}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"# Checks that all text files end with a newline."},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"ret\u003d0"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"# Preserve filename with spaces by only splitting on newlines."},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"IFS\u003d\u0027"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"\u0027"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\""},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"        ret\u003d1"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"    fi"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"done"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"exit $ret"}],"authorContributionMap":{"YuFeng0930":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"# Checks for prohibited line endings."},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"# Prohibited line endings: \\r\\n"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"awk \u0027"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    BEGIN {"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"        FS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"        OFS \u003d \":\""},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"        ret \u003d 0"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    {"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"        ret \u003d 1"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"    END {"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"        exit ret"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"\u0027"}],"authorContributionMap":{"YuFeng0930":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"# Checks for trailing whitespace"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"awk \u0027"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"    BEGIN {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"        FS \u003d \":\""},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"        OFS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"        ret \u003d 0"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"    {"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"        # which do not properly handle trailing whitespace."},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"        # (e.g. GitHub web editor)"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"        if ($1 ~ /\\.md$/) {"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"            severity \u003d \"WARN\""},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"            severity \u003d \"ERROR\""},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"            ret \u003d 1"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"        print severity, $1, $2, \" trailing whitespace.\""},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    END {"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"        exit ret"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"\u0027"}],"authorContributionMap":{"YuFeng0930":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"ret\u003d0 \u0026\u0026"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"for checkscript in \"$dir\"/check-*; do"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    if ! \"$checkscript\"; then"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"        ret\u003d1"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    fi"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"done"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"exit $ret"}],"authorContributionMap":{"YuFeng0930":11}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"TODO | 1 | 2102"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"DEADLINE | 0 | cs2334 | 2020-01-01"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"EVENT | 0 | cs2102 | 2020-03-03"}],"authorContributionMap":{"YuFeng0930":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"Duke is a task manager. Duke can record your tasks in your daliy life. With Duke, you will never forget important tasks. Duke can manage you task well!"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"- Adds a todo task "},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"- Adds a deadline task "},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"- Adds an event task "},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"- Lists all the tasks"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"- Mark a task as done"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"- Delete a task"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"- Finds tasks"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"- Sorts tasks"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"- Exit Duke"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"---"},{"lineNumber":15,"author":{"gitId":"-"},"content":"### Feature 1 "},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"Adds a todo task "},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"### Usage"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"### `todo` - Adds a todo task to Duke task list."},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"Format: `todo \u003ctask_name\u003e`"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"`todo CS2103 Tutorial`"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"[T][ ] CS2103 Tutorial"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"Now you have 2 tasks in the list."},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"---"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"### Feature 2 "},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"Adds a deadline task "},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"### Usage"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"### `deadline` - Adds a deadline task to Duke task list."},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"Format: `deadline \u003ctask_name\u003e /by \u003cYYYY-MM-DD\u003e`"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"Example of usage: "},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"`deadline CS2103 Project /by 2021-02-19`"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"Expected outcome:"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"[D][ ] CS2103 Project (by: Feb 19 2021)"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"Now you have 3 tasks in the list."},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"---"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"### Feature 3 "},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"Adds an event task "},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"### Usage"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"### `event` - Adds an event task to Duke task list."},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"Format: `event \u003ctask_name\u003e /at \u003cYYYY-MM-DD\u003e`"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"Example of usage: "},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"`event CS2103 Presentation /at 2021-03-15`"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"Expected outcome:"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"[E][ ] CS2103 Presentation (by: Mar 15 2021)"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"Now you have 4 tasks in the list."},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"---"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"### Feature 4 "},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"Lists all the tasks"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"### Usage"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"### `list` - Lists all the tasks"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"Format: `list`"},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"Example of usage: "},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"`list`"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":"Expected outcome:"},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":96,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":97,"author":{"gitId":"YuFeng0930"},"content":"1.[T][ ] CS2103"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"2.[T][ ] CS2103 Tutorial"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"3.[D][ ] CS2103 Project (by: Feb 19 2021)"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"4.[E][ ] CS2103 Presentation (at: Mar 15 2021)"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":"---"},{"lineNumber":103,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":104,"author":{"gitId":"YuFeng0930"},"content":"### Feature 5 "},{"lineNumber":105,"author":{"gitId":"YuFeng0930"},"content":"Mark a task as done"},{"lineNumber":106,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":107,"author":{"gitId":"YuFeng0930"},"content":"### Usage"},{"lineNumber":108,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":109,"author":{"gitId":"YuFeng0930"},"content":"### `done` - Mark a task as done."},{"lineNumber":110,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":111,"author":{"gitId":"YuFeng0930"},"content":"Format: `done \u003corder\u003e`"},{"lineNumber":112,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":113,"author":{"gitId":"YuFeng0930"},"content":"Example of usage: "},{"lineNumber":114,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":115,"author":{"gitId":"YuFeng0930"},"content":"`done 2`"},{"lineNumber":116,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":117,"author":{"gitId":"YuFeng0930"},"content":"Expected outcome:"},{"lineNumber":118,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":119,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":120,"author":{"gitId":"YuFeng0930"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":121,"author":{"gitId":"YuFeng0930"},"content":"[T][X]CS2103 Tutorial"},{"lineNumber":122,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":123,"author":{"gitId":"YuFeng0930"},"content":"---"},{"lineNumber":124,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":125,"author":{"gitId":"YuFeng0930"},"content":"### Feature 6 "},{"lineNumber":126,"author":{"gitId":"YuFeng0930"},"content":"Delete a task"},{"lineNumber":127,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":128,"author":{"gitId":"YuFeng0930"},"content":"### Usage"},{"lineNumber":129,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":130,"author":{"gitId":"YuFeng0930"},"content":"### `delete` - Delete a task from Duke task list."},{"lineNumber":131,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":132,"author":{"gitId":"YuFeng0930"},"content":"Format: `delete \u003corder\u003e`"},{"lineNumber":133,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":134,"author":{"gitId":"YuFeng0930"},"content":"Example of usage: "},{"lineNumber":135,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":136,"author":{"gitId":"YuFeng0930"},"content":"`delete 2`"},{"lineNumber":137,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":138,"author":{"gitId":"YuFeng0930"},"content":"Expected outcome:"},{"lineNumber":139,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":140,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":141,"author":{"gitId":"YuFeng0930"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":142,"author":{"gitId":"YuFeng0930"},"content":"[T][X]CS2103 Tutorial"},{"lineNumber":143,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":144,"author":{"gitId":"YuFeng0930"},"content":"---"},{"lineNumber":145,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":146,"author":{"gitId":"YuFeng0930"},"content":"### Feature 7 "},{"lineNumber":147,"author":{"gitId":"YuFeng0930"},"content":"Finds tasks"},{"lineNumber":148,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":149,"author":{"gitId":"YuFeng0930"},"content":"### Usage"},{"lineNumber":150,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":151,"author":{"gitId":"YuFeng0930"},"content":"### `find` - Finds tasks which have specified keyword."},{"lineNumber":152,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":153,"author":{"gitId":"YuFeng0930"},"content":"Format: `find \u003ckeyword\u003e`"},{"lineNumber":154,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":155,"author":{"gitId":"YuFeng0930"},"content":"Example of usage: "},{"lineNumber":156,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":157,"author":{"gitId":"YuFeng0930"},"content":"`find Tutorial`"},{"lineNumber":158,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":159,"author":{"gitId":"YuFeng0930"},"content":"Expected outcome:"},{"lineNumber":160,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":161,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":162,"author":{"gitId":"YuFeng0930"},"content":"1.[T][ ] CS2103 Tutorial"},{"lineNumber":163,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":164,"author":{"gitId":"YuFeng0930"},"content":"---"},{"lineNumber":165,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":166,"author":{"gitId":"YuFeng0930"},"content":"### Feature 8 "},{"lineNumber":167,"author":{"gitId":"YuFeng0930"},"content":"Sorts tasks"},{"lineNumber":168,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":169,"author":{"gitId":"YuFeng0930"},"content":"### Usage"},{"lineNumber":170,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":171,"author":{"gitId":"YuFeng0930"},"content":"### `sort` - Sorts tasks based on time."},{"lineNumber":172,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":173,"author":{"gitId":"YuFeng0930"},"content":"Format: `sort`"},{"lineNumber":174,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":175,"author":{"gitId":"YuFeng0930"},"content":"Example of usage: "},{"lineNumber":176,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":177,"author":{"gitId":"YuFeng0930"},"content":"`sort`"},{"lineNumber":178,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":179,"author":{"gitId":"YuFeng0930"},"content":"Expected outcome:"},{"lineNumber":180,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":181,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":182,"author":{"gitId":"YuFeng0930"},"content":"1.[T][ ] CS2103"},{"lineNumber":183,"author":{"gitId":"YuFeng0930"},"content":"2.[T][ ] CS2103 Tutorial"},{"lineNumber":184,"author":{"gitId":"YuFeng0930"},"content":"3.[D][ ] CS2103 Project (by: Feb 19 2021)"},{"lineNumber":185,"author":{"gitId":"YuFeng0930"},"content":"4.[E][ ] CS2103 Presentation (at: Mar 15 2021)"},{"lineNumber":186,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":187,"author":{"gitId":"YuFeng0930"},"content":"---"},{"lineNumber":188,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":189,"author":{"gitId":"YuFeng0930"},"content":"### Feature 9 "},{"lineNumber":190,"author":{"gitId":"YuFeng0930"},"content":"Exit Duke"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"YuFeng0930"},"content":"### Usage"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"YuFeng0930"},"content":"### `bye` - Exit Duke."},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"YuFeng0930"},"content":"Format: `bye`"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"YuFeng0930"},"content":"`bye`"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"YuFeng0930"},"content":"```"},{"lineNumber":205,"author":{"gitId":"YuFeng0930"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":206,"author":{"gitId":"YuFeng0930"},"content":"```"}],"authorContributionMap":{"YuFeng0930":184,"-":22}},{"path":"src/main/java/duke/Chatbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import duke.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import duke.task.Event;"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import duke.task.Task;"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import duke.task.TaskList;"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import duke.task.ToDo;"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":" * A Duke chatbot that provides todo-list function for users."},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"public class Chatbot {"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"    private final Storage storage;"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"    private final TaskList tasks;"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"    private final Parser parser;"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs the chat bot."},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"    public Chatbot() {"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"        storage \u003d new Storage(\"./data.txt\");"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"        this.tasks \u003d storage.readFile();"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"        parser \u003d new Parser();"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"     * Executes the chat bot. Keep looping and asking for user input."},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"     * The function will be terminated once hit \"bye\"."},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"    public void execute() {"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"        while (!input.toLowerCase().equals(\"bye\")) {"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"            System.out.println(getDukeReply(input));"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"     * Gets the reply message from Duke."},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"     * @param input user input message"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"     * @return duke reply message"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"    public String getDukeReply(String input) {"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"            String[] taskTypeSplit \u003d input.split(\" \");"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"            Command command \u003d parser.parseStringToCommand(taskTypeSplit);"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"            switch (command) {"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"            case SORT:"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"                return handleSortCommand(input);"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"            case LIST:"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"                return handleListCommand(input);"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"            case DONE:"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"                return handleDoneCommand(input);"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"            case DELETE:"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"                return handleDeleteCommand(input);"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"            case FIND:"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"                return handleFindCommand(input);"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"            case TODO:"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"                return handleTodoCommand(input);"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"            case DEADLINE:"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"                return handleDeadlineCommand(input);"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"            case EVENT:"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"                return handleEventCommand(input);"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"            default:"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"        } catch (DukeException ex) {"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"            return Ui.printFormatMessage(ex.toString());"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"            return Ui.printFormatMessage(\"OOPS!!! \" + \"The format of date is wrong! (yyyy-mm-dd)\");"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"     * Sorts the tasks based on date."},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"     * Handles sort command and returns Duke reply message."},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":"     * @return reply message from Duke"},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"     * @throws DukeException no task in the list or has extra parameter"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":"    public String handleSortCommand(String input) throws DukeException {"},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":"        String[] taskTypeSplit \u003d input.split(\" \");"},{"lineNumber":96,"author":{"gitId":"YuFeng0930"},"content":"        if (taskTypeSplit.length \u003e 1) {"},{"lineNumber":97,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"Sort command doesn\u0027t have parameter.\");"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"        tasks.getTaskList().sort((task1, task2) -\u003e {"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"            if (task1.getTime() \u003d\u003d null \u0026\u0026 task2.getTime() \u003d\u003d null) {"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"                return task1.getName().compareTo(task2.getName());"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":"            } else if (task1.getTime() \u003d\u003d null) {"},{"lineNumber":103,"author":{"gitId":"YuFeng0930"},"content":"                return -1;"},{"lineNumber":104,"author":{"gitId":"YuFeng0930"},"content":"            } else if (task2.getTime() \u003d\u003d null) {"},{"lineNumber":105,"author":{"gitId":"YuFeng0930"},"content":"                return 1;"},{"lineNumber":106,"author":{"gitId":"YuFeng0930"},"content":"            } else {"},{"lineNumber":107,"author":{"gitId":"YuFeng0930"},"content":"                return task1.getTime().compareTo(task2.getTime());"},{"lineNumber":108,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":109,"author":{"gitId":"YuFeng0930"},"content":"        });"},{"lineNumber":110,"author":{"gitId":"YuFeng0930"},"content":"        storage.updateFile(tasks);"},{"lineNumber":111,"author":{"gitId":"YuFeng0930"},"content":"        return Printer.printTaskList(tasks.getTaskList());"},{"lineNumber":112,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":114,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"YuFeng0930"},"content":"     * Handles list command and returns Duke reply message."},{"lineNumber":116,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"YuFeng0930"},"content":"     * @return reply message from Duke"},{"lineNumber":118,"author":{"gitId":"YuFeng0930"},"content":"     * @throws DukeException no task in the list or has extra parameter"},{"lineNumber":119,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"YuFeng0930"},"content":"    public String handleListCommand(String input) throws DukeException {"},{"lineNumber":121,"author":{"gitId":"YuFeng0930"},"content":"        String[] taskTypeSplit \u003d input.split(\" \");"},{"lineNumber":122,"author":{"gitId":"YuFeng0930"},"content":"        if (taskTypeSplit.length \u003e 1) {"},{"lineNumber":123,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"List command doesn\u0027t have parameter.\");"},{"lineNumber":124,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"YuFeng0930"},"content":"        return Printer.printTaskList(tasks.getTaskList());"},{"lineNumber":126,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":128,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"YuFeng0930"},"content":"     * Handles done command and returns Duke reply message."},{"lineNumber":130,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":131,"author":{"gitId":"YuFeng0930"},"content":"     * @param input user input"},{"lineNumber":132,"author":{"gitId":"YuFeng0930"},"content":"     * @return reply message from Duke"},{"lineNumber":133,"author":{"gitId":"YuFeng0930"},"content":"     * @throws DukeException incomplete user input"},{"lineNumber":134,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"YuFeng0930"},"content":"    public String handleDoneCommand(String input) throws DukeException {"},{"lineNumber":136,"author":{"gitId":"YuFeng0930"},"content":"        String[] taskTypeSplit \u003d input.split(\" \");"},{"lineNumber":137,"author":{"gitId":"YuFeng0930"},"content":"        if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":138,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"The description of done cannot be empty.\");"},{"lineNumber":139,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"YuFeng0930"},"content":"        int doneOrder \u003d Integer.parseInt(taskTypeSplit[1]) - 1;"},{"lineNumber":141,"author":{"gitId":"YuFeng0930"},"content":"        tasks.markAsDone(doneOrder);"},{"lineNumber":142,"author":{"gitId":"YuFeng0930"},"content":"        storage.updateFile(tasks);"},{"lineNumber":143,"author":{"gitId":"YuFeng0930"},"content":"        return Printer.printDoneReply(tasks.getTask(doneOrder));"},{"lineNumber":144,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":146,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"YuFeng0930"},"content":"     * Handles delete command and returns Duke reply message."},{"lineNumber":148,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":149,"author":{"gitId":"YuFeng0930"},"content":"     * @param input user input"},{"lineNumber":150,"author":{"gitId":"YuFeng0930"},"content":"     * @return reply message from Duke"},{"lineNumber":151,"author":{"gitId":"YuFeng0930"},"content":"     * @throws DukeException incomplete user input"},{"lineNumber":152,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"YuFeng0930"},"content":"    public String handleDeleteCommand(String input) throws DukeException {"},{"lineNumber":154,"author":{"gitId":"YuFeng0930"},"content":"        String[] taskTypeSplit \u003d input.split(\" \");"},{"lineNumber":155,"author":{"gitId":"YuFeng0930"},"content":"        if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":156,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"The description of delete cannot be empty.\");"},{"lineNumber":157,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"YuFeng0930"},"content":"        int deleteOrder \u003d Integer.parseInt(taskTypeSplit[1]) - 1;"},{"lineNumber":159,"author":{"gitId":"YuFeng0930"},"content":"        Task removedTask \u003d tasks.deleteTask(deleteOrder);"},{"lineNumber":160,"author":{"gitId":"YuFeng0930"},"content":"        storage.updateFile(tasks);"},{"lineNumber":161,"author":{"gitId":"YuFeng0930"},"content":"        return Printer.printDeleteReply(removedTask);"},{"lineNumber":162,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":164,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"YuFeng0930"},"content":"     * Handles find command and returns Duke reply message."},{"lineNumber":166,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":167,"author":{"gitId":"YuFeng0930"},"content":"     * @param input user input"},{"lineNumber":168,"author":{"gitId":"YuFeng0930"},"content":"     * @return reply message from Duke"},{"lineNumber":169,"author":{"gitId":"YuFeng0930"},"content":"     * @throws DukeException incomplete user input"},{"lineNumber":170,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"YuFeng0930"},"content":"    public String handleFindCommand(String input) throws DukeException {"},{"lineNumber":172,"author":{"gitId":"YuFeng0930"},"content":"        String[] taskTypeSplit \u003d input.split(\" \");"},{"lineNumber":173,"author":{"gitId":"YuFeng0930"},"content":"        if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":174,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"The description of find cannot be empty.\");"},{"lineNumber":175,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"YuFeng0930"},"content":"        List\u003cTask\u003e targetTasks \u003d tasks.findTask(taskTypeSplit[1]);"},{"lineNumber":177,"author":{"gitId":"YuFeng0930"},"content":"        storage.updateFile(tasks);"},{"lineNumber":178,"author":{"gitId":"YuFeng0930"},"content":"        return Printer.printFindReply(targetTasks);"},{"lineNumber":179,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":181,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":182,"author":{"gitId":"YuFeng0930"},"content":"     * Handles todo command and returns Duke reply message."},{"lineNumber":183,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":184,"author":{"gitId":"YuFeng0930"},"content":"     * @param input user input"},{"lineNumber":185,"author":{"gitId":"YuFeng0930"},"content":"     * @return reply message from Duke"},{"lineNumber":186,"author":{"gitId":"YuFeng0930"},"content":"     * @throws DukeException incomplete user input"},{"lineNumber":187,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":188,"author":{"gitId":"YuFeng0930"},"content":"    public String handleTodoCommand(String input) throws DukeException {"},{"lineNumber":189,"author":{"gitId":"YuFeng0930"},"content":"        String[] taskTypeSplit \u003d input.split(\" \");"},{"lineNumber":190,"author":{"gitId":"YuFeng0930"},"content":"        if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":191,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");"},{"lineNumber":192,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"YuFeng0930"},"content":"        Task newTask \u003d new ToDo(input.substring(5));"},{"lineNumber":194,"author":{"gitId":"YuFeng0930"},"content":"        tasks.addTask(newTask);"},{"lineNumber":195,"author":{"gitId":"YuFeng0930"},"content":"        storage.updateFile(tasks);"},{"lineNumber":196,"author":{"gitId":"YuFeng0930"},"content":"        return Printer.printAddReply(newTask, tasks.size());"},{"lineNumber":197,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":199,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":200,"author":{"gitId":"YuFeng0930"},"content":"     * Handles deadline command and returns Duke reply message."},{"lineNumber":201,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":202,"author":{"gitId":"YuFeng0930"},"content":"     * @param input user input"},{"lineNumber":203,"author":{"gitId":"YuFeng0930"},"content":"     * @return reply message from Duke"},{"lineNumber":204,"author":{"gitId":"YuFeng0930"},"content":"     * @throws DukeException incomplete user input"},{"lineNumber":205,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":206,"author":{"gitId":"YuFeng0930"},"content":"    public String handleDeadlineCommand(String input) throws DukeException {"},{"lineNumber":207,"author":{"gitId":"YuFeng0930"},"content":"        String[] taskTypeSplit \u003d input.split(\" \");"},{"lineNumber":208,"author":{"gitId":"YuFeng0930"},"content":"        if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":209,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");"},{"lineNumber":210,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"YuFeng0930"},"content":"        String[] taskTimeSplit \u003d input.split(\" /by \");"},{"lineNumber":212,"author":{"gitId":"YuFeng0930"},"content":"        if (taskTimeSplit.length \u003c\u003d 1 || taskTimeSplit[1].isBlank()) {"},{"lineNumber":213,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"There\u0027s something wrong with deadline time.\\n\""},{"lineNumber":214,"author":{"gitId":"YuFeng0930"},"content":"                    + \"(deadline deadline_name /by yyyy-mm-dd)\");"},{"lineNumber":215,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"YuFeng0930"},"content":"        Task newTask \u003d new Deadline(taskTimeSplit[0].substring(9), LocalDate.parse(taskTimeSplit[1]));"},{"lineNumber":217,"author":{"gitId":"YuFeng0930"},"content":"        tasks.addTask(newTask);"},{"lineNumber":218,"author":{"gitId":"YuFeng0930"},"content":"        storage.updateFile(tasks);"},{"lineNumber":219,"author":{"gitId":"YuFeng0930"},"content":"        return Printer.printAddReply(newTask, tasks.size());"},{"lineNumber":220,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":222,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":223,"author":{"gitId":"YuFeng0930"},"content":"     * Handles event command and returns Duke reply message."},{"lineNumber":224,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":225,"author":{"gitId":"YuFeng0930"},"content":"     * @param input user input"},{"lineNumber":226,"author":{"gitId":"YuFeng0930"},"content":"     * @return reply message from Duke"},{"lineNumber":227,"author":{"gitId":"YuFeng0930"},"content":"     * @throws DukeException incomplete user input"},{"lineNumber":228,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":229,"author":{"gitId":"YuFeng0930"},"content":"    public String handleEventCommand(String input) throws DukeException {"},{"lineNumber":230,"author":{"gitId":"YuFeng0930"},"content":"        String[] taskTypeSplit \u003d input.split(\" \");"},{"lineNumber":231,"author":{"gitId":"YuFeng0930"},"content":"        if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":232,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");"},{"lineNumber":233,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":234,"author":{"gitId":"YuFeng0930"},"content":"        String[] taskTimeSplit \u003d input.split(\" /at \");"},{"lineNumber":235,"author":{"gitId":"YuFeng0930"},"content":"        if (taskTimeSplit.length \u003c\u003d 1 || taskTimeSplit[1].isBlank()) {"},{"lineNumber":236,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"There\u0027s something wrong with event time.\\n\""},{"lineNumber":237,"author":{"gitId":"YuFeng0930"},"content":"                    + \"(event event_name /at yyyy-mm-dd)\");"},{"lineNumber":238,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":239,"author":{"gitId":"YuFeng0930"},"content":"        Task newTask \u003d new Event(taskTimeSplit[0].substring(6), LocalDate.parse(taskTimeSplit[1]));"},{"lineNumber":240,"author":{"gitId":"YuFeng0930"},"content":"        tasks.addTask(newTask);"},{"lineNumber":241,"author":{"gitId":"YuFeng0930"},"content":"        storage.updateFile(tasks);"},{"lineNumber":242,"author":{"gitId":"YuFeng0930"},"content":"        return Printer.printAddReply(newTask, tasks.size());"},{"lineNumber":243,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":245,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":245}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":" * An enum with all possible commands."},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"public enum Command {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    SORT, LIST, DONE, DELETE, TODO, DEADLINE, EVENT, FIND, UNKNOWN"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":8}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":" * The main Duke class."},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    private final Chatbot chatbot;"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs duke the bot."},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    Duke() {"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"        chatbot \u003d new Chatbot();"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"     * Triggers the execution of duke.Duke."},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"     * @param args command line arguments"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"        new Duke().execute();"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"     * Executes all the functions needed for duke.Duke, including welcome,"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"     * chat bot execution, welfare, and update of file."},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"    public void execute() {"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(Ui.welcome());"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"        chatbot.execute();"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(Ui.welfare());"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"YuFeng0930":32,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":" * Self-defined DukeException to be thrown during execution."},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    private final String errorMessage;"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs the DukeException."},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"     * @param errorMessage exception message"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"        this.errorMessage \u003d errorMessage;"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"     * Returns string format of the exception."},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"     * @return string format of the exception"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"        return \"OOPS!!! \" + errorMessage;"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":27}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import duke.gui.MainWindow;"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":" * A GUI for duke.Duke using FXML."},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    private final Chatbot duke \u003d new Chatbot();"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"     * Starts the application."},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"     * @param stage the stage of the application"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"    public void start(Stage stage) {"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"            Scene scene \u003d new Scene(anchorPane);"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"            stage.setScene(scene);"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"            stage.setResizable(false);"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"            stage.show();"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"        } catch (IOException ex) {"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"            ex.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":39}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":" * Deals with making sense of the user command."},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"     * Parses user input into the corresponding command."},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"     * @param taskString user input"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"     * @return corresponding command (enum)"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"    public Command parseStringToCommand(String... taskString) {"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"        assert taskString.length \u003e 0 : \"The size of user input string array should be at least 1\";"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"        if (taskString[0].toLowerCase().equals(\"sort\")) {"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"            return Command.SORT;"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"        } else if (taskString[0].toLowerCase().equals(\"list\")) {"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"            return Command.LIST;"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"        } else if (taskString[0].toLowerCase().contains(\"done\")) {"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"            return Command.DONE;"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"        } else if (taskString[0].toLowerCase().contains(\"delete\")) {"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"            return Command.DELETE;"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"        } else if (taskString[0].toLowerCase().equals(\"find\")) {"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"            return Command.FIND;"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"        } else if (taskString[0].toLowerCase().equals(\"todo\")) {"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"            return Command.TODO;"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"        } else if (taskString[0].toLowerCase().equals(\"deadline\")) {"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"            return Command.DEADLINE;"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"        } else if (taskString[0].toLowerCase().equals(\"event\")) {"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"            return Command.EVENT;"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"            return Command.UNKNOWN;"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":35}},{"path":"src/main/java/duke/Printer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"public class Printer {"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"     * Returns Duke\u0027s reply to list command."},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"     * @param tasks the task list"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"     * @return Duke\u0027s reply to list command"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"     * @throws DukeException no task in the list"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"    public static String printTaskList(List\u003cTask\u003e tasks) throws DukeException {"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"There\u0027s currently no task in the list.\");"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"        String taskString \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"        taskString +\u003d \"\" + (1) + \".\" + tasks.get(0).toString();"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"        for (int i \u003d 1; i \u003c tasks.size(); i++) {"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"            taskString +\u003d \"\\n\" + (i + 1) + \".\" + tasks.get(i).toString();"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"        return Ui.printFormatMessage(taskString);"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"     * Returns Duke\u0027s reply to list command."},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"     * @param doneTask the task to be marked as done"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"     * @return Duke\u0027s reply to list command"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"    public static String printDoneReply(Task doneTask) {"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"        return Ui.printFormatMessage(\"Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"                + doneTask.toString());"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"     * Returns Duke\u0027s reply to delete command."},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"     * @param removedTask the task to be removed"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"     * @return Duke\u0027s reply to delete command"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"    public static String printDeleteReply(Task removedTask) {"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"        return Ui.printFormatMessage(\"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"                + removedTask.toString());"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"     * Returns Duke\u0027s reply to find command."},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"     * @param targetTasks the tasks match the target word"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"     * @return Duke\u0027s reply to find command"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"    public static String printFindReply(List\u003cTask\u003e targetTasks) {"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"        if (targetTasks.size() \u003d\u003d 0) {"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"            return \"\";"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"        String taskString \u003d \"\";"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"        taskString +\u003d \"\" + (1) + \".\" + targetTasks.get(0).toString();"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"        for (int i \u003d 1; i \u003c targetTasks.size(); i++) {"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"            taskString +\u003d \"\\n\" + (i + 1) + \".\" + targetTasks.get(i).toString();"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"        return Ui.printFormatMessage(taskString);"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"     * Returns Duke\u0027s reply to todo or event or deadline command."},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"     * @param newTask    the new task to be added"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"     * @param numOfTasks the number of tasks in the task list"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"     * @return Duke\u0027s reply to todo or event or deadline command."},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"    public static String printAddReply(Task newTask, int numOfTasks) {"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"        return Ui.printFormatMessage(\"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"                + newTask.toString() + \"\\nNow you have \" + numOfTasks"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"                + \" tasks in the list.\");"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":81}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import duke.task.Deadline;"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import duke.task.Event;"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"import duke.task.Task;"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"import duke.task.TaskList;"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"import duke.task.TaskType;"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"import duke.task.ToDo;"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":" * Deals with loading tasks from the file and saving tasks in the file."},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"public class Storage {"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"    private final String filePath;"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs the storage."},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"     * @param filePath the filepath of the storage file"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"    public Storage(String filePath) {"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"     * Reads the data of tasks from previous session\u0027s file as TaskList."},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"     * If there\u0027s no file yet, create an empty file, and return empty list."},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"     * @return the list of tasks from previous session"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"    public TaskList readFile() {"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"            File file \u003d new File(filePath);"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"            if (file.createNewFile()) {"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"                return new TaskList();"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"            File myObj \u003d new File(filePath);"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"            Scanner myReader \u003d new Scanner(myObj);"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"            while (myReader.hasNextLine()) {"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"                String[] taskString \u003d myReader.nextLine().split(\" \\\\| \");"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"                addTask(taskString, tasks);"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"            myReader.close();"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"        } catch (IOException e) {"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"            e.printStackTrace();"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(\"(Your tasks from previous session has been successfully loaded.)\");"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"        return new TaskList(tasks);"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"     * Formats the task String and adds it intro the task list."},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"     * @param taskString the task string"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"     * @param tasks the task list"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"    public void addTask(String[] taskString, List\u003cTask\u003e tasks) {"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"        if (taskString.length \u003d\u003d 0) {"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"            return;"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"        switch (taskString[0]) {"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"        case \"TODO\":"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"            tasks.add(new ToDo(taskString[2], taskString[1].equals(\"1\")));"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"            break;"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"        case \"DEADLINE\":"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"            tasks.add(new Deadline(taskString[2], LocalDate.parse(taskString[3]), taskString[1].equals(\"1\")));"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"            break;"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"        case \"EVENT\":"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"            tasks.add(new Event(taskString[2], LocalDate.parse(taskString[3]), taskString[1].equals(\"1\")));"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"            break;"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"        default:"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"     * Updates the file with newest task String, write the updated tasks into the file."},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"     * @param tasks the updated task list"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"    public void updateFile(TaskList tasks) {"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":"        String updatedString \u003d \"\";"},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":"        for (Task task : tasks.getTaskList()) {"},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":"            updatedString +\u003d String.format(\"%s | %s | %s\", task.getType(), (task.isDone() ? 1 : 0), task.getName());"},{"lineNumber":96,"author":{"gitId":"YuFeng0930"},"content":"            if (task.getType().equals(TaskType.DEADLINE)) {"},{"lineNumber":97,"author":{"gitId":"YuFeng0930"},"content":"                updatedString +\u003d \" | \" + ((Deadline) task).getTime().toString();"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"            } else if (task.getType().equals(TaskType.EVENT)) {"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"                updatedString +\u003d \" | \" + ((Event) task).getTime().toString();"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"            updatedString +\u003d \"\\n\";"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"YuFeng0930"},"content":"        try {"},{"lineNumber":104,"author":{"gitId":"YuFeng0930"},"content":"            FileWriter file \u003d new FileWriter(filePath);"},{"lineNumber":105,"author":{"gitId":"YuFeng0930"},"content":"            file.write(updatedString);"},{"lineNumber":106,"author":{"gitId":"YuFeng0930"},"content":"            file.flush();"},{"lineNumber":107,"author":{"gitId":"YuFeng0930"},"content":"            file.close();"},{"lineNumber":108,"author":{"gitId":"YuFeng0930"},"content":"            System.out.println(\"(Your tasks are successfully saved to the file.)\");"},{"lineNumber":109,"author":{"gitId":"YuFeng0930"},"content":"        } catch (IOException e) {"},{"lineNumber":110,"author":{"gitId":"YuFeng0930"},"content":"            System.out.println(\"(Your tasks fail to saved to the file.)\");"},{"lineNumber":111,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":113,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":114}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":" * Deals with interactions with the user."},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"     * Prints out the message in the duke.Duke user interface format."},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"     * @param str the string to be printed out"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    public static String printFormatMessage(String str) {"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"        return str + \"\\n\";"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"     * Prints out welcome message in the beginning."},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"    public static String welcome() {"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"        return \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"     * Prints out welfare message in the end."},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"    public static String welfare() {"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":31}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":" * This control represents a dialog box consisting of an ImageView"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":" * to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"     * Creates dialog box."},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"     * @param text text to be put in the dialog box"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"     * @param img image to be put in the dialog box"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"     * @param isUser whether the dialog box is for user"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"    private DialogBox(String text, Image img, boolean isUser) {"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"            fxmlLoader.load();"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"        } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"            e.printStackTrace();"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"        dialog.setText(text);"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"        if (isUser) {"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"            dialog.setStyle(\"-fx-background-color: #8FBC8F\");"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"            dialog.setStyle(\"-fx-background-color: #A9A9A9\");"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"        displayPicture.setImage(img);"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"     * Gets user\u0027s dialog box."},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"     * @param text user input"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"     * @param img user image"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"     * @return user\u0027s dialog box"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"        var db \u003d new DialogBox(text, img, true);"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"        return db;"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"     * Gets duke\u0027s dialog box."},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"     * @param text duke input"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"     * @param img duke image"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"     * @return duke\u0027s dialog box"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"        var db \u003d new DialogBox(text, img, false);"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"        db.flip();"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"        return db;"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"    private void flip() {"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"        Collections.reverse(tmp);"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":88}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import duke.Main;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"public class Launcher {"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"     * Launches the application."},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"     * @param args command line argument"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":18}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import duke.Chatbot;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"    private TextField userInput;"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"    private Button sendButton;"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"    private Chatbot duke;"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"     * Initializes the main window."},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"    public void initialize() {"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.welcome(), dukeImage));"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"     * Sets duke."},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"     * @param d the duke initialized to be set"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"    public void setDuke(Chatbot d) {"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"        duke \u003d d;"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing duke."},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"     * Duke\u0027s reply and then appends them to the dialog container."},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"     * Clears the user input after processing."},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"    @FXML"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"    private void handleUserInput() {"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"        if (input.toLowerCase().equals(\"bye\")) {"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"            dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.welfare(), dukeImage));"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"            userInput.setEditable(false);"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"            userInput.setStyle(\"-fx-background-color: #A9A9A9;\");"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"        } else {"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"            dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.getDukeReply(input), dukeImage));"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"        userInput.clear();"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":66}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":" * Deadline task class (with time formatting feature)."},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    private final LocalDate time;"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs a Deadline object."},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"     * @param name the deadline name"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"     * @param time the deadline time"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"    public Deadline(String name, LocalDate time) {"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"        super(name, TaskType.DEADLINE);"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"        this.time \u003d time;"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs a Deadline object with isDone status specified."},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"     * @param name   the deadline name"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"     * @param time   the deadline time"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"     * @param isDone the status of the deadline"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"    public Deadline(String name, LocalDate time, boolean isDone) {"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"        super(name, TaskType.DEADLINE, isDone);"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"        this.time \u003d time;"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"     * Returns the time of the deadline."},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"     * @return the deadline time to be returned"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"    public LocalDate getTime() {"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"        return time;"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"     * Returns the string format of the deadline."},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"     * @return the string format of the deadline"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"        return super.toString() + \" (by: \""},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"                + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":56}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":" * Event task class (with time formatting feature)."},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    private final LocalDate time;"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs an Event object."},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"     * @param name the event name"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"     * @param time the event time"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"    public Event(String name, LocalDate time) {"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"        super(name, TaskType.EVENT);"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"        this.time \u003d time;"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs an Event object with isDone status specified."},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"     * @param name   the event name"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"     * @param time   the event time"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"     * @param isDone the status of the event"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"    public Event(String name, LocalDate time, boolean isDone) {"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"        super(name, TaskType.EVENT, isDone);"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"        this.time \u003d time;"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"     * Returns the time of the deadline."},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"     * @return the deadline time to be returned"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"    public LocalDate getTime() {"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"        return time;"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"     * Returns the string format of the event."},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"     * @return the string format of the event"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"        return super.toString() + \" (at: \""},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"                + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":56}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":" * The parent class for all types of tasks."},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    protected final String name;"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    protected final TaskType type;"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"    protected boolean isDone;"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs a task object."},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"     * @param name the task name"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"     * @param type the task type"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"    Task(String name, TaskType type) {"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"        this.name \u003d name;"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"        this.isDone \u003d false;"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"        this.type \u003d type;"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs a task object."},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"     * @param name the task name"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"     * @param type the task type"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"     * @param isDone the status of the event"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"    Task(String name, TaskType type, boolean isDone) {"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"        this.name \u003d name;"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"        this.type \u003d type;"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"     * Returns the name of the task."},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"     * @return the task name to be returned"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"    public String getName() {"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"        return name;"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"     * Returns whether or not the task is done."},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"     * @return whether or not the task is done"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"    public boolean isDone() {"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"        return isDone;"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"     * Returns the type of the task."},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"     * @return the task type to be returned"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"    public TaskType getType() {"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"        return type;"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"     * Returns the time of the deadline."},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"     * @return the deadline time to be returned"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"    public LocalDate getTime() {"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"        return null;"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"     * Marks the task as done."},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"    public void markAsDone() {"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"        isDone \u003d true;"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"     * Returns string format of the task."},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"     * @return the string format of the task"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"    @Override"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"    public String toString() {"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"        String returnString \u003d \"[\" + type.getType() + \"][\" + (isDone ? \"X\" : \" \") + \"] \";"},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"        return returnString + name;"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":91}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import duke.DukeException;"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":" * Contains the task list e.g., it has operations to add/delete tasks in the list."},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    private final List\u003cTask\u003e taskList;"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs a TaskList with an empty task list."},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    public TaskList() {"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs a TaskList with a given task list."},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"     * @param taskList the given task list"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"    public TaskList(List\u003cTask\u003e taskList) {"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"     * Adds new task in the task list."},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"     * @param newTask the new task to be added"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"    public void addTask(Task newTask) {"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"        taskList.add(newTask);"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"     * Deletes a task in the task list."},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"     * @param order the order of the task to be deleted"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"     * @return the deleted task"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"     * @throws DukeException no such order of task in the list"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"    public Task deleteTask(int order) throws DukeException {"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"        if (order \u003c 0 || order \u003e\u003d taskList.size()) {"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"There\u0027s no task \""},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"                    + (order + 1) + \" in the list.\");"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"        return taskList.remove(order);"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"     * Marks a task in the task list as done."},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"     * @param order the order of the task to be marked as done"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"     * @throws DukeException no such task or that task had been finished"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"    public void markAsDone(int order) throws DukeException {"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"        if (order \u003c 0 || order \u003e\u003d taskList.size()) {"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"There\u0027s no task \""},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"                    + (order + 1) + \" in the list.\");"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"        } else if (taskList.get(order).isDone()) {"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"This task had been finished before.\");"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"        taskList.get(order).markAsDone();"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"        assert taskList.get(order).isDone : \"The markAsDone() is not functioning\";"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"     * Finds the tasks contain target keyword, and print them out."},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"     * @param target target the target keyword"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"     * @return a list of tasks match the target word"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"     * @throws DukeException no task in the list or no task matches the name"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"    public List\u003cTask\u003e findTask(String target) throws DukeException {"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"        if (taskList.size() \u003d\u003d 0) {"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"There\u0027s currently no task in the list.\");"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"        List\u003cTask\u003e targetTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"        for (Task task : taskList) {"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"            if (task.getName().contains(target)) {"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"                targetTasks.add(task);"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"        if (targetTasks.size() !\u003d 0) {"},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"            return targetTasks;"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"        } else {"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":"            throw new DukeException(\"There\u0027s currently no task name with \\\"\" + target + \"\\\".\");"},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"YuFeng0930"},"content":"     * Gets the entire task list."},{"lineNumber":97,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"     * @return the task list"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"    public List\u003cTask\u003e getTaskList() {"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"        return taskList;"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":104,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"YuFeng0930"},"content":"     * Gets the task of the given order in task list."},{"lineNumber":106,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"YuFeng0930"},"content":"     * @param order the order of the task"},{"lineNumber":108,"author":{"gitId":"YuFeng0930"},"content":"     * @return the task of the order"},{"lineNumber":109,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"YuFeng0930"},"content":"    public Task getTask(int order) {"},{"lineNumber":111,"author":{"gitId":"YuFeng0930"},"content":"        return taskList.get(order);"},{"lineNumber":112,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":114,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"YuFeng0930"},"content":"     * Returns the size of the task list."},{"lineNumber":116,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"YuFeng0930"},"content":"     * @return the size of the task list"},{"lineNumber":118,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"YuFeng0930"},"content":"    public int size() {"},{"lineNumber":120,"author":{"gitId":"YuFeng0930"},"content":"        return taskList.size();"},{"lineNumber":121,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":123,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":123}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":" * An enum with all possible types of tasks."},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"public enum TaskType {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    TODO(\"T\"), DEADLINE(\"D\"), EVENT(\"E\");"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    private final String type;"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs a task type object for a task."},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"     * @param type the task type"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"    TaskType(String type) {"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"        this.type \u003d type;"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"     * Returns the type of the task."},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"     * @return the task type to be returned"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"    public String getType() {"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"        return type;"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":29}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":" * ToDo task class (with time formatting feature)."},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs a ToDo object."},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"     * @param name the event name"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    public ToDo(String name) {"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"        super(name, TaskType.TODO);"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs a ToDo object with isDone status specified."},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"     * @param name   the event name"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"     * @param isDone the status of the event"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"    public ToDo(String name, boolean isDone) {"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"        super(name, TaskType.TODO, isDone);"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":26}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"    \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"    \u003cpadding\u003e"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"    \u003c/padding\u003e"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"YuFeng0930":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"7.0\" layoutY\u003d\"562.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"33.0\" prefWidth\u003d\"314.0\" promptText\u003d\"Message\" AnchorPane.bottomAnchor\u003d\"5.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"327.0\" layoutY\u003d\"562.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"33.0\" prefWidth\u003d\"67.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #2F4F4F;\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"558.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #2F4F4F;\" /\u003e"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"YuFeng0930":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import duke.Printer;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import duke.task.ToDo;"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"public class DukeTest {"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"    public void storageTest() {"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"        Storage storage \u003d new Storage(\"./data.txt\");"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"        storage.readFile();"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    public void addTaskTest() {"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"        taskList.addTask(new ToDo(\"CS2103T\"));"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    public void printerTest() {"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(Printer.printAddReply(new ToDo(\"CS2103\"), 2));"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"list"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"done 2"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"list"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"bye"}],"authorContributionMap":{"YuFeng0930":6}}]
