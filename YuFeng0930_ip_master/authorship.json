[{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"TODO | 0 | ejri"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"TODO | 0 | ejri"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"EVENT | 1 | jr1i32 | 2019-12-31"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"TODO | 0 | erji"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"DEADLINE | 1 | ejir | 2020-09-30"}],"authorContributionMap":{"YuFeng0930":5}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"import duke.Chatbot;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"import duke.Storage;"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import duke.Ui;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":" * The main Duke class."},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    private final Ui ui;"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    private final Storage storage;"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"    private final Chatbot chatbot;"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"    Duke(String filePath) {"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"        ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"        chatbot \u003d new Chatbot(storage.readFile());"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"     * Triggers the execution of Duke."},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"     * @param args command line arguments"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"        new Duke(\"./data.txt\").execute();"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"     * Executes all the functions needed for Duke, including welcome,"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"     * chat bot execution, welfare, and update of file."},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"    public void execute() {"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"        ui.welcome();"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"        chatbot.execute();"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"        ui.welfare();"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"        storage.updateFile(chatbot.getTaskList());"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"YuFeng0930":34,"-":4}},{"path":"src/main/java/duke/Chatbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":" * A Duke chatbot that provides todo-list function for users."},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"public class Chatbot {"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"    private final TaskList taskList;"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    private final Ui ui;"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"    private final Parser parser;"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs the chat bot."},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"     * @param taskList the task list given to chat bot"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"    public Chatbot(TaskList taskList) {"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"        ui \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"        parser \u003d new Parser();"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"     * Executes the chat bot. Keep looping and asking for user input."},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"     * The function will be terminated once hit \"bye\"."},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"    public void execute() {"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"        String[] taskTimeSplit;"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"        Task newTask;"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"        while (!input.toLowerCase().equals(\"bye\")) {"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"            try {"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"                String[] taskTypeSplit \u003d input.split(\" \");"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"                Command command \u003d parser.parse(taskTypeSplit);"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"                int tempOrder;"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"                switch (command) {"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"                case LIST:"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"                    taskList.printTaskList();"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"                    break;"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"                case DONE:"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"                    if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"                        throw new DukeException(\"The description of done cannot be empty.\");"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"                    tempOrder \u003d Integer.parseInt(taskTypeSplit[1]);"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"                    taskList.markDone(tempOrder - 1);"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"                    break;"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"                case DELETE:"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"                    if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"                        throw new DukeException(\"The description of delete cannot be empty.\");"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"                    tempOrder \u003d Integer.parseInt(taskTypeSplit[1]);"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"                    taskList.delete(tempOrder - 1);"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"                    break;"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"                case FIND:"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"                    if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"                        throw new DukeException(\"The description of find cannot be empty.\");"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"                    taskList.findTask(taskTypeSplit[1]);"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"                    break;"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"                case TODO:"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"                    if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"                        throw new DukeException(\"The description of a todo cannot be empty.\");"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"                    newTask \u003d new ToDo(input.substring(5), TaskType.TODO);"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"                    taskList.addTask(newTask);"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"                    break;"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"                case DEADLINE:"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"                    if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"                        throw new DukeException(\"The description of a deadline cannot be empty.\");"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"                    taskTimeSplit \u003d input.split(\" /by \");"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"                    if (taskTimeSplit.length \u003c\u003d 1 || taskTimeSplit[1].isBlank()) {"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"                        throw new DukeException(\"The time of a deadline cannot be empty.\");"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"                    newTask \u003d new Deadline(taskTimeSplit[0].substring(9),"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"                            TaskType.DEADLINE, LocalDate.parse(taskTimeSplit[1]));"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"                    taskList.addTask(newTask);"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"                    break;"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"                case EVENT:"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"                    if (taskTypeSplit.length \u003c\u003d 1 || taskTypeSplit[1].isBlank()) {"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"                        throw new DukeException(\"The description of an event cannot be empty.\");"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"                    taskTimeSplit \u003d input.split(\" /at \");"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"                    if (taskTimeSplit.length \u003c\u003d 1 || taskTimeSplit[1].isBlank()) {"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":"                        throw new DukeException(\"The time of an event cannot be empty.\");"},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":"                    newTask \u003d new Event(taskTimeSplit[0].substring(6),"},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":"                            TaskType.EVENT, LocalDate.parse(taskTimeSplit[1]));"},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":"                    taskList.addTask(newTask);"},{"lineNumber":96,"author":{"gitId":"YuFeng0930"},"content":"                    break;"},{"lineNumber":97,"author":{"gitId":"YuFeng0930"},"content":"                default:"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"            } catch (DukeException ex) {"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"                ui.printFormatMessage(ex.toString());"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":"            } catch (DateTimeParseException ex) {"},{"lineNumber":103,"author":{"gitId":"YuFeng0930"},"content":"                ui.printFormatMessage(\"\\t  OOPS!!! \" + \"The format of date is wrong! (yyyy-mm-dd)\");"},{"lineNumber":104,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"YuFeng0930"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":106,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":108,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":109,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":111,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"YuFeng0930"},"content":"     * Returns the task list in the chat bot."},{"lineNumber":113,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"YuFeng0930"},"content":"     * @return the task list to be returned"},{"lineNumber":115,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"YuFeng0930"},"content":"    public TaskList getTaskList() {"},{"lineNumber":117,"author":{"gitId":"YuFeng0930"},"content":"        return taskList;"},{"lineNumber":118,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":119}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":" * An enum with all possible commands."},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"public enum Command {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    LIST, DONE, DELETE, TODO, DEADLINE, EVENT, FIND, UNKNOWN"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":8}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":" * Deadline task class (with time formatting feature)."},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    private final LocalDate time;"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    Deadline(String name, TaskType type, LocalDate time) {"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"        super(name, type);"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"        this.time \u003d time;"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    Deadline(String name, TaskType type, LocalDate time, boolean done) {"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"        super(name, type, done);"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"        this.time \u003d time;"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"     * Returns the time of the deadline."},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"     * @return the deadline time to be returned"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"    public LocalDate getTime() {"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"        return time;"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"        return super.toString() + \" (by: \" +"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"                time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":36}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":" * Self-defined DukeException to be thrown during execution."},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    String errorMessage;"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    DukeException(String errorMessage) {"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"        this.errorMessage \u003d errorMessage;"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"        return \"\\t  OOPS!!! \" + errorMessage;"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":16}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":" * Event task class (with time formatting feature)."},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    private final LocalDate time;"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    Event(String name, TaskType type, LocalDate time) {"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"        super(name, type);"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"        this.time \u003d time;"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    Event(String name, TaskType type, LocalDate time, boolean done) {"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"        super(name, type, done);"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"        this.time \u003d time;"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"     * Returns the time of the deadline."},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"     * @return the deadline time to be returned"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"    public LocalDate getTime() {"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"        return time;"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"        return super.toString() + \" (at: \" +"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"                time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":36}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":" * Deals with making sense of the user command."},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"     * Parses user input into the corresponding command."},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"     * @param taskString user input"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"     * @return corresponding command (enum)"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"    public Command parse(String[] taskString) {"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"        if (taskString[0].toLowerCase().equals(\"list\")) {"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"            return Command.LIST;"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"        } else if (taskString[0].toLowerCase().contains(\"done\")) {"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"            return Command.DONE;"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"        } else if (taskString[0].toLowerCase().contains(\"delete\")) {"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"            return Command.DELETE;"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"        } else if (taskString[0].toLowerCase().equals(\"find\")) {"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"            return Command.FIND;"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"        } else if (taskString[0].toLowerCase().equals(\"todo\")) {"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"            return Command.TODO;"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"        } else if (taskString[0].toLowerCase().equals(\"deadline\")) {"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"            return Command.DEADLINE;"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"        } else if (taskString[0].toLowerCase().equals(\"event\")) {"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"            return Command.EVENT;"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"            return Command.UNKNOWN;"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":32}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":" * Deals with loading tasks from the file and saving tasks in the file."},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"    private final String filePath;"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"     * Constructs the storage."},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"     * @param filePath the filepath of the storage file"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"    public Storage(String filePath) {"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"     * Reads the data of tasks from previous session\u0027s file as TaskList."},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"     * If there\u0027s no file yet, create an empty file, and return empty list."},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"     * @return the list of tasks from previous session"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"    public TaskList readFile() {"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"            File file \u003d new File(filePath);"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"            if (!file.createNewFile()) {"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"                File myObj \u003d new File(filePath);"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"                Scanner myReader \u003d new Scanner(myObj);"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"                while (myReader.hasNextLine()) {"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"                    String[] data \u003d myReader.nextLine().split(\" \\\\| \");"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"                    if (data.length \u003d\u003d 0) {"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"                        break;"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"                    switch (data[0]) {"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"                        case \"TODO\":"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"                            taskList.add(new ToDo(data[2], TaskType.TODO,"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"                                    data[1].equals(\"1\")));"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"                            break;"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"                        case \"DEADLINE\":"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"                            taskList.add(new Deadline(data[2], TaskType.DEADLINE,"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"                                    LocalDate.parse(data[3]), data[1].equals(\"1\")));"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"                            break;"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"                        case \"EVENT\":"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"                            taskList.add(new Event(data[2], TaskType.EVENT,"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"                                    LocalDate.parse(data[3]), data[1].equals(\"1\")));"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"                            break;"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"                        default:"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"                            return new TaskList(taskList);"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"                    }"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"                }"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"                myReader.close();"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"        } catch (IOException e) {"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"            e.printStackTrace();"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(\"(Your tasks from previous session has been successfully loaded.)\");"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"        return new TaskList(taskList);"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"     * Updates the file with newest task data, write the updated tasks into the file."},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"     * @param taskList the updated task list"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"    public void updateFile(TaskList taskList) {"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"        String updatedString \u003d \"\";"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"        for (Task t : taskList.getTaskList()) {"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"            updatedString +\u003d t.getType();"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"            updatedString +\u003d \" | \";"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"            updatedString +\u003d (t.isDone() ? 1 : 0);"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"            updatedString +\u003d \" | \";"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"            updatedString +\u003d t.getName();"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"            if (t.getType().equals(TaskType.DEADLINE)) {"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"                updatedString +\u003d \" | \";"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"                updatedString +\u003d ((Deadline) t).getTime().toString();"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"            } else if (t.getType().equals(TaskType.EVENT)) {"},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"                updatedString +\u003d \" | \";"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"                updatedString +\u003d ((Event) t).getTime().toString();"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"            updatedString +\u003d \"\\n\";"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":"            FileWriter file \u003d new FileWriter(filePath);"},{"lineNumber":96,"author":{"gitId":"YuFeng0930"},"content":"            file.write(updatedString);"},{"lineNumber":97,"author":{"gitId":"YuFeng0930"},"content":"            file.close();"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"            System.out.println(\"(Your tasks are successfully saved to the file.)\\n\");"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"        } catch (IOException e) {"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"            System.out.println(\"(Your tasks fail to saved to the file.)\\n\");"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":103,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":104}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":" * The parent class for all types of tasks."},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    protected final String name;"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"    protected final TaskType type;"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    protected boolean done;"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"    Task(String name, TaskType type) {"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"        this.name \u003d name;"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"        this.done \u003d false;"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"        this.type \u003d type;"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    Task(String name, TaskType type, boolean done) {"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"        this.name \u003d name;"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"        this.done \u003d done;"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"        this.type \u003d type;"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"     * Returns the name of the task."},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"     * @return the task name to be returned"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"    public String getName() {"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"        return name;"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"     * Returns whether or not the task is done."},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"     * @return whether or not the task is done"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"    public boolean isDone() {"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"        return done;"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"     * Returns the type of the task."},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"     * @return the task type to be returned"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"    public TaskType getType() {"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"        return type;"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"     * Marks the task as done."},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"    public void markDone() {"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"        done \u003d true;"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"    public String toString() {"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"        String returnString \u003d \"[\" + type.getType() + \"][\" + (done ? \"X\" : \" \") + \"] \";"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"        return returnString + name;"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":59}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":" * Contains the task list e.g., it has operations to add/delete tasks in the list."},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    private final List\u003cTask\u003e taskList;"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"    private final Ui ui \u003d new Ui();"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"    public TaskList() {"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    public TaskList(List\u003cTask\u003e taskList) {"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"     * Adds new task in the task list."},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"     * @param newTask the new task to be added"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"    public void addTask(Task newTask) {"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"        taskList.add(newTask);"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"        ui.printFormatMessage(\"\\t  Got it. I\u0027ve added this task:\\n\\t\\t\" +"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"                newTask.toString() + \"\\n\\t  Now you have \" + taskList.size() +"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"                \" taskList in the list.\");"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"     * Deletes a task in the task list."},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"     * @param order the order of the task to be deleted"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"    public void delete(int order) {"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"            if (order \u003c 0 || order \u003e\u003d taskList.size()) {"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"                throw new DukeException(\"There\u0027s no task \" +"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"                        (order + 1) + \" in the list.\");"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"            ui.printFormatMessage(\"\\t  Noted. I\u0027ve removed this task:\\n\" +"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"                    \"\\t\\t \" + taskList.get(order).toString());"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"            taskList.remove(order);"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"        } catch (DukeException ex) {"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"            ui.printFormatMessage(ex.toString());"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"     * Marks a task in the task list as done."},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"     * @param order the order of the task to be marked as done"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"    public void markDone(int order) {"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"            if (order \u003c 0 || order \u003e\u003d taskList.size()) {"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"                throw new DukeException(\"There\u0027s no task \" +"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"                        (order + 1) + \" in the list.\");"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"            } else if (taskList.get(order).isDone()) {"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"                throw new DukeException(\"This task has been finished before.\");"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"            taskList.get(order).markDone();"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"            ui.printFormatMessage(\"\\t  Nice! I\u0027ve marked this task as done:\\n\\t\\t \" +"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"                    taskList.get(order).toString());"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"        } catch (DukeException ex) {"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"            ui.printFormatMessage(ex.toString());"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"     * Prints out all the tasks in task list currently."},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"    public void printTaskList() {"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"        try {"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"            if (taskList.size() \u003d\u003d 0) {"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"                throw new DukeException(\"There\u0027s currently no task in the list.\");"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"            String taskString \u003d \"\";"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"            taskString +\u003d \"\\t  \" + (1) + \".\" + taskList.get(0).toString();"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"            for (int i \u003d 1; i \u003c taskList.size(); i++) {"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"                taskString +\u003d \"\\n\\t  \" + (i + 1) + \".\" + taskList.get(i).toString();"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"            ui.printFormatMessage(taskString);"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"        } catch (DukeException ex) {"},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"            ui.printFormatMessage(ex.toString());"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":"     * Prints out tasks in the given list."},{"lineNumber":96,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"YuFeng0930"},"content":"     * @param list the list given to be print out"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"    public void printSpecifiedTasks(List\u003cTask\u003e list) {"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"            return;"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"YuFeng0930"},"content":"        String taskString \u003d \"\";"},{"lineNumber":104,"author":{"gitId":"YuFeng0930"},"content":"        taskString +\u003d \"\\t  \" + (1) + \".\" + list.get(0).toString();"},{"lineNumber":105,"author":{"gitId":"YuFeng0930"},"content":"        for (int i \u003d 1; i \u003c list.size(); i++) {"},{"lineNumber":106,"author":{"gitId":"YuFeng0930"},"content":"            taskString +\u003d \"\\n\\t  \" + (i + 1) + \".\" + list.get(i).toString();"},{"lineNumber":107,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"YuFeng0930"},"content":"        ui.printFormatMessage(taskString);"},{"lineNumber":109,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":111,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"YuFeng0930"},"content":"     * Finds the tasks contain target keyword, and print them out."},{"lineNumber":113,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"YuFeng0930"},"content":"     * @param target the target keyword"},{"lineNumber":115,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"YuFeng0930"},"content":"    public void findTask(String target) {"},{"lineNumber":117,"author":{"gitId":"YuFeng0930"},"content":"        try {"},{"lineNumber":118,"author":{"gitId":"YuFeng0930"},"content":"            if (taskList.size() \u003d\u003d 0) {"},{"lineNumber":119,"author":{"gitId":"YuFeng0930"},"content":"                throw new DukeException(\"There\u0027s currently no task in the list.\");"},{"lineNumber":120,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":121,"author":{"gitId":"YuFeng0930"},"content":"            List\u003cTask\u003e targetTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":122,"author":{"gitId":"YuFeng0930"},"content":"            for (Task t : taskList) {"},{"lineNumber":123,"author":{"gitId":"YuFeng0930"},"content":"                if (t.getName().contains(target)) {"},{"lineNumber":124,"author":{"gitId":"YuFeng0930"},"content":"                    targetTasks.add(t);"},{"lineNumber":125,"author":{"gitId":"YuFeng0930"},"content":"                }"},{"lineNumber":126,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"YuFeng0930"},"content":"            if (targetTasks.size() !\u003d 0) {"},{"lineNumber":128,"author":{"gitId":"YuFeng0930"},"content":"                printSpecifiedTasks(targetTasks);"},{"lineNumber":129,"author":{"gitId":"YuFeng0930"},"content":"            } else {"},{"lineNumber":130,"author":{"gitId":"YuFeng0930"},"content":"                throw new DukeException(\"There\u0027s currently no task name with \\\"\" + target + \"\\\".\");"},{"lineNumber":131,"author":{"gitId":"YuFeng0930"},"content":"            }"},{"lineNumber":132,"author":{"gitId":"YuFeng0930"},"content":"        } catch (DukeException ex) {"},{"lineNumber":133,"author":{"gitId":"YuFeng0930"},"content":"            ui.printFormatMessage(ex.toString());"},{"lineNumber":134,"author":{"gitId":"YuFeng0930"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":136,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":138,"author":{"gitId":"YuFeng0930"},"content":"    public List\u003cTask\u003e getTaskList() {"},{"lineNumber":139,"author":{"gitId":"YuFeng0930"},"content":"        return taskList;"},{"lineNumber":140,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":142,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":143,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":143}},{"path":"src/main/java/duke/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":" * An enum with all possible types of tasks."},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"public enum TaskType {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    TODO(\"T\"), DEADLINE(\"D\"), EVENT(\"E\");"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    private final String type;"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"    TaskType(String type) {"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"        this.type \u003d type;"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"     * Returns the type of the task."},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"     * @return the task type to be returned"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"    public String getType() {"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"        return type;"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":23}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":" * ToDo task class (with time formatting feature)."},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    ToDo(String name, TaskType type) {"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"        super(name, type);"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"    ToDo(String name, TaskType type, boolean done) {"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"        super(name, type, done);"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":15}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":" * Deals with interactions with the user."},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":" */"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"    static String horizontalLine \u003d \"\\t--------------------------------\\n\";"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"     * Prints out the message in the Duke user interface format."},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"     * @param str the string to be printed out"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"    public void printFormatMessage(String str) {"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"        System.out.print(Ui.horizontalLine);"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"        System.out.println(str);"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"        System.out.print(Ui.horizontalLine);"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"     * Prints out welcome message in the beginning."},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    public void welcome() {"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"        printFormatMessage(\"\\t  Hello! I\u0027m Duke\\n\" + \"\\t  What can I do for you?\");"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"     * Prints out welfare message in the end."},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"    public void welfare() {"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"        printFormatMessage(\"\\t  Bye. Hope to see you again soon!\");"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":35}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"import duke.DukeException;"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"import duke.Storage;"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"public class DukeTest {"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    public void storageTest(){"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"        Storage storage \u003d new Storage(\"./data.txt\");"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"        storage.readFile();"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"    public void taskListTest() throws DukeException {"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"        taskList.delete(2);"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"}"}],"authorContributionMap":{"YuFeng0930":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"list"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"done 2"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"list"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"bye"}],"authorContributionMap":{"YuFeng0930":6}}]
