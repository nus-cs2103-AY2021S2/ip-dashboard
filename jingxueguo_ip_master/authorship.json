[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"jingxueguo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"jingxueguo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"jingxueguo"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jingxueguo":15,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"This is a User Guide for the chatbox \u0027Duke!\u0027."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"### Load task list from the hard drive."},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"###### Task list is initialised from loading the data from the hard drive (if available) upon starting the programme, using pre-set file path."},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"### Add a task given by the user to a list and display upon requested."},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"###### Task type can be todos with no date/time associated, event within a specific timing and tasks with a deadline"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"### Mark a task as done"},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"###### Task can be marked as done using the position of the task in the list displayed. Task is displayed after marked done for user reference"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"### Delete a task from the list"},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":"###### Task can be deleted using the position of the task in the list displayed. The deleted task is displayed after deletion for user reference"},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"### Find tasks which match the keyword given"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":25,"author":{"gitId":"jingxueguo"},"content":"###### Given keyword from user, return all tasks with matching task description"},{"lineNumber":26,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":27,"author":{"gitId":"jingxueguo"},"content":"### Store list on hard disk"},{"lineNumber":28,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":29,"author":{"gitId":"jingxueguo"},"content":"###### Upon user input \"bye\", the updated list is stored on the hard disk using the pre-set file path."},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"jingxueguo"},"content":"### todo"},{"lineNumber":34,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":35,"author":{"gitId":"jingxueguo"},"content":"Example:"},{"lineNumber":36,"author":{"gitId":"jingxueguo"},"content":"`todo return book`"},{"lineNumber":37,"author":{"gitId":"jingxueguo"},"content":"Expected outcome:"},{"lineNumber":38,"author":{"gitId":"jingxueguo"},"content":"A todo task with the description of \u0027return book\u0027 is added to the task list"},{"lineNumber":39,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":40,"author":{"gitId":"jingxueguo"},"content":"### deadline"},{"lineNumber":41,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":42,"author":{"gitId":"jingxueguo"},"content":"Example:"},{"lineNumber":43,"author":{"gitId":"jingxueguo"},"content":"`deadline return book /by 2020-02-02`"},{"lineNumber":44,"author":{"gitId":"jingxueguo"},"content":"Expected outcome:"},{"lineNumber":45,"author":{"gitId":"jingxueguo"},"content":"A deadline task with the description of \u0027return book\u0027 and deadline of 2020-02-02 is added to the task list"},{"lineNumber":46,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":47,"author":{"gitId":"jingxueguo"},"content":"### event"},{"lineNumber":48,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":49,"author":{"gitId":"jingxueguo"},"content":"Example:"},{"lineNumber":50,"author":{"gitId":"jingxueguo"},"content":"`event birthday party /at Sunday 4pm to 6pm`"},{"lineNumber":51,"author":{"gitId":"jingxueguo"},"content":"Expected outcome:"},{"lineNumber":52,"author":{"gitId":"jingxueguo"},"content":"An event task with the description of \u0027birthday party\u0027 and time of Sunday 4pm to 6pm is added to the task list"},{"lineNumber":53,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":54,"author":{"gitId":"jingxueguo"},"content":"### delete"},{"lineNumber":55,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":56,"author":{"gitId":"jingxueguo"},"content":"Example:"},{"lineNumber":57,"author":{"gitId":"jingxueguo"},"content":"`delete 2`"},{"lineNumber":58,"author":{"gitId":"jingxueguo"},"content":"Expected outcome:"},{"lineNumber":59,"author":{"gitId":"jingxueguo"},"content":"The second task in the task list is deleted and the information of the task is displayed afterwards"},{"lineNumber":60,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":61,"author":{"gitId":"jingxueguo"},"content":"### done"},{"lineNumber":62,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":63,"author":{"gitId":"jingxueguo"},"content":"Example:"},{"lineNumber":64,"author":{"gitId":"jingxueguo"},"content":"`done 2`"},{"lineNumber":65,"author":{"gitId":"jingxueguo"},"content":"Expected outcome:"},{"lineNumber":66,"author":{"gitId":"jingxueguo"},"content":"The second task in the task list is marked as done and the updated information of the task is displayed afterwards"},{"lineNumber":67,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":68,"author":{"gitId":"jingxueguo"},"content":"### find"},{"lineNumber":69,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":70,"author":{"gitId":"jingxueguo"},"content":"Example:"},{"lineNumber":71,"author":{"gitId":"jingxueguo"},"content":"`find book`"},{"lineNumber":72,"author":{"gitId":"jingxueguo"},"content":"Expected outcome:"},{"lineNumber":73,"author":{"gitId":"jingxueguo"},"content":"All tasks containing the word book in their description are displayed on the screen"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"Describe action and its outcome."},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"`outcome`"}],"authorContributionMap":{"jingxueguo":65,"-":18}},{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"public class Deadlines extends Task {"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"    protected LocalDate deadLine;"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"     * This constructor create a Task which is of type Deadlines"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"     * @param isDone whether the task is already completed"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"     * @param eventName description of the event"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"     * @param deadLine the deadline for the task"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":"     * @return return the task object"},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"    public Deadlines(boolean isDone, String eventName, String deadLine) {"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"        super(isDone, eventName, \"D\");"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":"        this.deadLine \u003d LocalDate.parse(deadLine);"},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"        return \"[D] \" + super.toString() + \"(by: \" +"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":"                deadLine.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +"},{"lineNumber":25,"author":{"gitId":"jingxueguo"},"content":"                \")\\n\";"},{"lineNumber":26,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jingxueguo"},"content":"}"}],"authorContributionMap":{"jingxueguo":27}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"import java.util.Collections;"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"import javafx.geometry.Pos;"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"import javafx.scene.Node;"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"import javafx.scene.control.Label;"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":" * An example of a custom control using FXML."},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":" */"},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"    private Label dialog;"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"jingxueguo"},"content":"    private ImageView displayPicture;"},{"lineNumber":26,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":27,"author":{"gitId":"jingxueguo"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":28,"author":{"gitId":"jingxueguo"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"jingxueguo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader("},{"lineNumber":30,"author":{"gitId":"jingxueguo"},"content":"                    MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"jingxueguo"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"jingxueguo"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"jingxueguo"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"jingxueguo"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"jingxueguo"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"jingxueguo"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":38,"author":{"gitId":"jingxueguo"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"jingxueguo"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":42,"author":{"gitId":"jingxueguo"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"jingxueguo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"jingxueguo"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"jingxueguo"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"jingxueguo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"jingxueguo"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"jingxueguo"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"jingxueguo"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":52,"author":{"gitId":"jingxueguo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"jingxueguo"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":56,"author":{"gitId":"jingxueguo"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"jingxueguo"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"jingxueguo"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"jingxueguo"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"jingxueguo"},"content":"}"}],"authorContributionMap":{"jingxueguo":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"    private Storage storage;"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"    private TaskList taskList;"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"    private enum Commands {"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"        LIST,"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"        TODO,"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"        DEADLINE,"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"        EVENT,"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"        BYE,"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"        FIND,"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":"        DONE,"},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"        DELETE"},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":"     * This constructor create a duke class after loading the tasks from a given file path"},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":"     * @param filePath path of the file which stores the list of tasks from last time"},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":"     * @return a Duke object with all of its variables initialised"},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":"    public Duke(String filePath) {"},{"lineNumber":25,"author":{"gitId":"jingxueguo"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":26,"author":{"gitId":"jingxueguo"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"jingxueguo"},"content":"            taskList \u003d new TaskList(storage.load());"},{"lineNumber":28,"author":{"gitId":"jingxueguo"},"content":"        } catch (DukeException e) {"},{"lineNumber":29,"author":{"gitId":"jingxueguo"},"content":"            this.showError(e);"},{"lineNumber":30,"author":{"gitId":"jingxueguo"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":31,"author":{"gitId":"jingxueguo"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jingxueguo"},"content":"    public static String getHelp() {"},{"lineNumber":34,"author":{"gitId":"jingxueguo"},"content":"        return \"You have entered invalid commands! \" +"},{"lineNumber":35,"author":{"gitId":"jingxueguo"},"content":"                \"Type \u0027help\u0027 if you are unsure of which commands I can understand:\u003e\";"},{"lineNumber":36,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":38,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":39,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":40,"author":{"gitId":"jingxueguo"},"content":"    public String getResponse(String string) {"},{"lineNumber":41,"author":{"gitId":"jingxueguo"},"content":"        switch (string.toLowerCase()) {"},{"lineNumber":42,"author":{"gitId":"jingxueguo"},"content":"        case \"help\":"},{"lineNumber":43,"author":{"gitId":"jingxueguo"},"content":"            String commandsList \u003d \"The commands that I can understand are: \\n\";"},{"lineNumber":44,"author":{"gitId":"jingxueguo"},"content":"            for (Commands command : Commands.values()) {"},{"lineNumber":45,"author":{"gitId":"jingxueguo"},"content":"                commandsList +\u003d command.toString() + \"\\n\";"},{"lineNumber":46,"author":{"gitId":"jingxueguo"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"jingxueguo"},"content":"            return commandsList;"},{"lineNumber":48,"author":{"gitId":"jingxueguo"},"content":"        case \"bye\":"},{"lineNumber":49,"author":{"gitId":"jingxueguo"},"content":"            try {"},{"lineNumber":50,"author":{"gitId":"jingxueguo"},"content":"                storage.writeToFile(taskList, \"./data/duke.txt\");"},{"lineNumber":51,"author":{"gitId":"jingxueguo"},"content":"            } catch (DukeException e) {"},{"lineNumber":52,"author":{"gitId":"jingxueguo"},"content":"                showError(e);"},{"lineNumber":53,"author":{"gitId":"jingxueguo"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"jingxueguo"},"content":"            return \"Bye. See you again!\";"},{"lineNumber":55,"author":{"gitId":"jingxueguo"},"content":"        case \"list\":"},{"lineNumber":56,"author":{"gitId":"jingxueguo"},"content":"            String output \u003d \"\";"},{"lineNumber":57,"author":{"gitId":"jingxueguo"},"content":"            if (taskList.getSize() \u003d\u003d 0) {"},{"lineNumber":58,"author":{"gitId":"jingxueguo"},"content":"                return \"You have no tasks in the list!\";"},{"lineNumber":59,"author":{"gitId":"jingxueguo"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"jingxueguo"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"},{"lineNumber":61,"author":{"gitId":"jingxueguo"},"content":"                output +\u003d i+1 + \". \" + taskList.getTask(i).toString() + \"\\n\";"},{"lineNumber":62,"author":{"gitId":"jingxueguo"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"jingxueguo"},"content":"            assert output.length() !\u003d 0 : \"No tasks in the list\";"},{"lineNumber":64,"author":{"gitId":"jingxueguo"},"content":"            return output;"},{"lineNumber":65,"author":{"gitId":"jingxueguo"},"content":"        default:"},{"lineNumber":66,"author":{"gitId":"jingxueguo"},"content":"            Pair result \u003d Parser.parseInput(string, taskList);"},{"lineNumber":67,"author":{"gitId":"jingxueguo"},"content":"            taskList \u003d result.getTaskList();"},{"lineNumber":68,"author":{"gitId":"jingxueguo"},"content":"            return result.getMessage();"},{"lineNumber":69,"author":{"gitId":"jingxueguo"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":72,"author":{"gitId":"jingxueguo"},"content":"    public String showError(Exception e) {"},{"lineNumber":73,"author":{"gitId":"jingxueguo"},"content":"        return e.getMessage();"},{"lineNumber":74,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jingxueguo":72,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"     * This constructor returns a Duke Exception"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"     * @param message Error Message"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"     * @return a Duke Exception"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"    public DukeException(String message) {"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"    public DukeException() {"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"        super();"},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"}"}],"authorContributionMap":{"jingxueguo":17}},{"path":"src/main/java/duke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"public class Events extends Task {"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"    String time;"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"     * This constructor create a Task which is of type Events"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"     * @param isDone whether the task is already completed"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"     * @param eventName description of the event"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"     * @param time the time of which the Event will take place"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"     * @return return the task object"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"    public Events(boolean isDone, String eventName, String time) {"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"        super(isDone, eventName, \"E\");"},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"        this.time \u003d time;"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":"        return \"[E] \" + super.toString() + \" (at: \" + time + \")\" + \"\\n\";"},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":"}"}],"authorContributionMap":{"jingxueguo":24}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":"import javafx.application.Application;"},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"public class Launcher {"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"}"}],"authorContributionMap":{"jingxueguo":8}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader("},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":"                    Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"jingxueguo"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"jingxueguo"},"content":"            stage.setTitle(\"Duke!\");"},{"lineNumber":27,"author":{"gitId":"jingxueguo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":28,"author":{"gitId":"jingxueguo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greet();"},{"lineNumber":29,"author":{"gitId":"jingxueguo"},"content":"            stage.show();"},{"lineNumber":30,"author":{"gitId":"jingxueguo"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"jingxueguo"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"jingxueguo"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"jingxueguo"},"content":"}"}],"authorContributionMap":{"jingxueguo":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":" */"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":"    private static String USER_IMAGE_PATH \u003d \"/images/User.png\";"},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"    private static String DUKE_IMAGE_PATH \u003d \"/images/Duke.png\";"},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":25,"author":{"gitId":"jingxueguo"},"content":"    private Duke duke;"},{"lineNumber":26,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":27,"author":{"gitId":"jingxueguo"},"content":"    private Image userImage \u003d new Image("},{"lineNumber":28,"author":{"gitId":"jingxueguo"},"content":"            this.getClass().getResourceAsStream(USER_IMAGE_PATH));"},{"lineNumber":29,"author":{"gitId":"jingxueguo"},"content":"    private Image dukeImage \u003d new Image("},{"lineNumber":30,"author":{"gitId":"jingxueguo"},"content":"            this.getClass().getResourceAsStream(DUKE_IMAGE_PATH));"},{"lineNumber":31,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":32,"author":{"gitId":"jingxueguo"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"jingxueguo"},"content":"    public void initialize() {"},{"lineNumber":34,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":35,"author":{"gitId":"jingxueguo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":36,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":38,"author":{"gitId":"jingxueguo"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":39,"author":{"gitId":"jingxueguo"},"content":"        duke \u003d d;"},{"lineNumber":40,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":42,"author":{"gitId":"jingxueguo"},"content":"    public void greet() {"},{"lineNumber":43,"author":{"gitId":"jingxueguo"},"content":"        dialogContainer.getChildren().add("},{"lineNumber":44,"author":{"gitId":"jingxueguo"},"content":"                DialogBox.getDukeDialog(\"Hello! What can I do for you:\u003e\", dukeImage));"},{"lineNumber":45,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":47,"author":{"gitId":"jingxueguo"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"jingxueguo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing"},{"lineNumber":49,"author":{"gitId":"jingxueguo"},"content":"     * Duke\u0027s reply and then appends them to the dialog container."},{"lineNumber":50,"author":{"gitId":"jingxueguo"},"content":"     * Clears the user input after processing."},{"lineNumber":51,"author":{"gitId":"jingxueguo"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"jingxueguo"},"content":"    @FXML"},{"lineNumber":53,"author":{"gitId":"jingxueguo"},"content":"    private void handleUserInput() {"},{"lineNumber":54,"author":{"gitId":"jingxueguo"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":55,"author":{"gitId":"jingxueguo"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":56,"author":{"gitId":"jingxueguo"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":57,"author":{"gitId":"jingxueguo"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":58,"author":{"gitId":"jingxueguo"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":59,"author":{"gitId":"jingxueguo"},"content":"        );"},{"lineNumber":60,"author":{"gitId":"jingxueguo"},"content":"        userInput.clear();"},{"lineNumber":61,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"jingxueguo"},"content":"}"}],"authorContributionMap":{"jingxueguo":62}},{"path":"src/main/java/duke/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"public class Pair {"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"    private final TaskList taskList;"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"    private final String message;"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"    public Pair(TaskList taskList, String message) {"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"        this.message \u003d message;"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"    public TaskList getTaskList() {"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"        return this.taskList;"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"    public String getMessage() {"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"        return this.message;"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"}"}],"authorContributionMap":{"jingxueguo":19}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"     * This function returns a Task object after parsing the data from the file"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"     * @param data line data from the file"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"     * @return Task object of various types, e.g. Deadlines, ToDos, Events"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"     * @throws DukeException"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"    public static Task parseFile(String data) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":"        String[] dataSplit \u003d data.split(\" \\\\| \");"},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"        switch (dataSplit[0]) {"},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"        case \"T\":"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"            return new ToDos(Boolean.parseBoolean(dataSplit[1]), dataSplit[2]);"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":"        case \"D\":"},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"            return new Deadlines(Boolean.parseBoolean(dataSplit[1]), dataSplit[2], dataSplit[3]);"},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":"        case \"E\":"},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":"            return new Events(Boolean.parseBoolean(dataSplit[1]), dataSplit[2], dataSplit[3]);"},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":"        default:"},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"            throw new DukeException(\"Error while reading file\");"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":27,"author":{"gitId":"jingxueguo"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"jingxueguo"},"content":"     * This function returns the TaskList object after passing the commands from user"},{"lineNumber":29,"author":{"gitId":"jingxueguo"},"content":"     * @param input User input"},{"lineNumber":30,"author":{"gitId":"jingxueguo"},"content":"     * @param tasks TaskList object"},{"lineNumber":31,"author":{"gitId":"jingxueguo"},"content":"     * @return TaskList after adding the new task from the user input"},{"lineNumber":32,"author":{"gitId":"jingxueguo"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jingxueguo"},"content":"    public static Pair parseInput(String input, TaskList tasks) {"},{"lineNumber":34,"author":{"gitId":"jingxueguo"},"content":"        String[] inputSplit \u003d input.split(\" \");"},{"lineNumber":35,"author":{"gitId":"jingxueguo"},"content":"        if (inputSplit.length \u003c 2) {"},{"lineNumber":36,"author":{"gitId":"jingxueguo"},"content":"            return new Pair(tasks, Duke.getHelp());"},{"lineNumber":37,"author":{"gitId":"jingxueguo"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"jingxueguo"},"content":"        Task task;"},{"lineNumber":39,"author":{"gitId":"jingxueguo"},"content":"        String message;"},{"lineNumber":40,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":41,"author":{"gitId":"jingxueguo"},"content":"        switch (inputSplit[0]) {"},{"lineNumber":42,"author":{"gitId":"jingxueguo"},"content":"        case \"find\":"},{"lineNumber":43,"author":{"gitId":"jingxueguo"},"content":"            String keyword \u003d inputSplit[1];"},{"lineNumber":44,"author":{"gitId":"jingxueguo"},"content":"            TaskList result \u003d tasks.findTask(keyword);"},{"lineNumber":45,"author":{"gitId":"jingxueguo"},"content":"            message \u003d \"Here are the matching tasks in your list: \\n\";"},{"lineNumber":46,"author":{"gitId":"jingxueguo"},"content":"            for (int i \u003d 0; i \u003c result.getSize(); i++) {"},{"lineNumber":47,"author":{"gitId":"jingxueguo"},"content":"                message +\u003d i+1 + \". \" + result.getTask(i).toString();"},{"lineNumber":48,"author":{"gitId":"jingxueguo"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"jingxueguo"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"jingxueguo"},"content":"        case \"done\":"},{"lineNumber":51,"author":{"gitId":"jingxueguo"},"content":"            message \u003d \"Nice, I have set this task as done!\" +"},{"lineNumber":52,"author":{"gitId":"jingxueguo"},"content":"                    tasks.setDone(Integer.valueOf(inputSplit[1]) - 1).toString();"},{"lineNumber":53,"author":{"gitId":"jingxueguo"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"jingxueguo"},"content":"        case \"delete\":"},{"lineNumber":55,"author":{"gitId":"jingxueguo"},"content":"            task \u003d tasks.deleteTask(Integer.valueOf(inputSplit[1]) - 1);"},{"lineNumber":56,"author":{"gitId":"jingxueguo"},"content":"            message \u003d \"Noted. I have deleted this task: \\n\" + task.toString();"},{"lineNumber":57,"author":{"gitId":"jingxueguo"},"content":"            break;"},{"lineNumber":58,"author":{"gitId":"jingxueguo"},"content":"        case \"todo\":"},{"lineNumber":59,"author":{"gitId":"jingxueguo"},"content":"            String name \u003d String.join(\" \", Arrays.copyOfRange(inputSplit, 1, inputSplit.length));"},{"lineNumber":60,"author":{"gitId":"jingxueguo"},"content":"            task \u003d new ToDos(false, name);"},{"lineNumber":61,"author":{"gitId":"jingxueguo"},"content":"            tasks.addTask(task);"},{"lineNumber":62,"author":{"gitId":"jingxueguo"},"content":"            message \u003d \"Got it. I have added this task: \\n\" + task.toString();"},{"lineNumber":63,"author":{"gitId":"jingxueguo"},"content":"            break;"},{"lineNumber":64,"author":{"gitId":"jingxueguo"},"content":"        case \"deadline\":"},{"lineNumber":65,"author":{"gitId":"jingxueguo"},"content":"            String deadlineName \u003d String.join(\" \", Arrays.copyOfRange(inputSplit, 1, inputSplit.length));"},{"lineNumber":66,"author":{"gitId":"jingxueguo"},"content":"            String[] deadlineSplit \u003d deadlineName.split(\" /by \");"},{"lineNumber":67,"author":{"gitId":"jingxueguo"},"content":"            task \u003d new Deadlines(false, deadlineSplit[0], deadlineSplit[1]);"},{"lineNumber":68,"author":{"gitId":"jingxueguo"},"content":"            tasks.addTask(task);"},{"lineNumber":69,"author":{"gitId":"jingxueguo"},"content":"            message \u003d \"Got it. I have added this task: \\n\" + task.toString();"},{"lineNumber":70,"author":{"gitId":"jingxueguo"},"content":"            break;"},{"lineNumber":71,"author":{"gitId":"jingxueguo"},"content":"        case \"event\":"},{"lineNumber":72,"author":{"gitId":"jingxueguo"},"content":"            String event \u003d String.join(\" \", Arrays.copyOfRange(inputSplit, 1, inputSplit.length));"},{"lineNumber":73,"author":{"gitId":"jingxueguo"},"content":"            String[] eventSplit \u003d event.split(\" /at \");"},{"lineNumber":74,"author":{"gitId":"jingxueguo"},"content":"            task \u003d new Events(false, eventSplit[0], eventSplit[1]);"},{"lineNumber":75,"author":{"gitId":"jingxueguo"},"content":"            tasks.addTask(task);"},{"lineNumber":76,"author":{"gitId":"jingxueguo"},"content":"            message \u003d \"Got it. I have added this task: \\n\" + task.toString();"},{"lineNumber":77,"author":{"gitId":"jingxueguo"},"content":"            break;"},{"lineNumber":78,"author":{"gitId":"jingxueguo"},"content":"        default:"},{"lineNumber":79,"author":{"gitId":"jingxueguo"},"content":"            message \u003d Duke.getHelp();"},{"lineNumber":80,"author":{"gitId":"jingxueguo"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":82,"author":{"gitId":"jingxueguo"},"content":"        return new Pair(tasks, message);"},{"lineNumber":83,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"jingxueguo"},"content":"}"}],"authorContributionMap":{"jingxueguo":84}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"public class Storage {"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"    private String filePath;"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"    public Storage(String filePath) {"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"     * This function loads the tasks from the file which is specified by the file path"},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":"     * @return an arraylist of Tasks"},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":"     * @throws DukeException"},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":25,"author":{"gitId":"jingxueguo"},"content":"        File tasks \u003d new File(filePath);"},{"lineNumber":26,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":27,"author":{"gitId":"jingxueguo"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"jingxueguo"},"content":"            if (tasks.exists()) {"},{"lineNumber":29,"author":{"gitId":"jingxueguo"},"content":"                Scanner sc1 \u003d new Scanner(tasks);"},{"lineNumber":30,"author":{"gitId":"jingxueguo"},"content":"                String data;"},{"lineNumber":31,"author":{"gitId":"jingxueguo"},"content":"                while (sc1.hasNextLine()) {"},{"lineNumber":32,"author":{"gitId":"jingxueguo"},"content":"                    data \u003d sc1.nextLine();"},{"lineNumber":33,"author":{"gitId":"jingxueguo"},"content":"                    list.add(Parser.parseFile(data));"},{"lineNumber":34,"author":{"gitId":"jingxueguo"},"content":"                }"},{"lineNumber":35,"author":{"gitId":"jingxueguo"},"content":"                sc1.close();"},{"lineNumber":36,"author":{"gitId":"jingxueguo"},"content":"            } else {"},{"lineNumber":37,"author":{"gitId":"jingxueguo"},"content":"                File directory \u003d new File(\"./data\");"},{"lineNumber":38,"author":{"gitId":"jingxueguo"},"content":"                if (!directory.exists()) {"},{"lineNumber":39,"author":{"gitId":"jingxueguo"},"content":"                    directory.mkdir();"},{"lineNumber":40,"author":{"gitId":"jingxueguo"},"content":"                }"},{"lineNumber":41,"author":{"gitId":"jingxueguo"},"content":"                tasks.createNewFile();"},{"lineNumber":42,"author":{"gitId":"jingxueguo"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":44,"author":{"gitId":"jingxueguo"},"content":"            assert tasks.exists() : \"File creation error\";"},{"lineNumber":45,"author":{"gitId":"jingxueguo"},"content":"        } catch (FileNotFoundException e){"},{"lineNumber":46,"author":{"gitId":"jingxueguo"},"content":"            throw new DukeException(\"File not found.\");"},{"lineNumber":47,"author":{"gitId":"jingxueguo"},"content":"        } catch (IOException e) {"},{"lineNumber":48,"author":{"gitId":"jingxueguo"},"content":"            throw new DukeException(\"Error occurred when creating file.\");"},{"lineNumber":49,"author":{"gitId":"jingxueguo"},"content":"        } catch (DukeException e) {"},{"lineNumber":50,"author":{"gitId":"jingxueguo"},"content":"            throw e;"},{"lineNumber":51,"author":{"gitId":"jingxueguo"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":53,"author":{"gitId":"jingxueguo"},"content":"        return list;"},{"lineNumber":54,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":56,"author":{"gitId":"jingxueguo"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"jingxueguo"},"content":"     * This function writes and save the taskList to a file"},{"lineNumber":58,"author":{"gitId":"jingxueguo"},"content":"     * @param tasks TaskList object containing a list of tasks"},{"lineNumber":59,"author":{"gitId":"jingxueguo"},"content":"     * @param filePath The path to save the file"},{"lineNumber":60,"author":{"gitId":"jingxueguo"},"content":"     * @throws DukeException"},{"lineNumber":61,"author":{"gitId":"jingxueguo"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"jingxueguo"},"content":"    public void writeToFile(TaskList tasks, String filePath) throws DukeException {"},{"lineNumber":63,"author":{"gitId":"jingxueguo"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"jingxueguo"},"content":"            FileWriter writer \u003d new FileWriter(filePath, false);"},{"lineNumber":65,"author":{"gitId":"jingxueguo"},"content":"            int size \u003d tasks.getSize();"},{"lineNumber":66,"author":{"gitId":"jingxueguo"},"content":"            Task task;"},{"lineNumber":67,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":68,"author":{"gitId":"jingxueguo"},"content":"            for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":69,"author":{"gitId":"jingxueguo"},"content":"                task \u003d tasks.getTask(i);"},{"lineNumber":70,"author":{"gitId":"jingxueguo"},"content":"                writer.write(task.eventType + \" | \" + task.isDone + \" | \" + task.eventName);"},{"lineNumber":71,"author":{"gitId":"jingxueguo"},"content":"                if (task instanceof Deadlines) {"},{"lineNumber":72,"author":{"gitId":"jingxueguo"},"content":"                    writer.write(\" | \" + ((Deadlines) task).deadLine);"},{"lineNumber":73,"author":{"gitId":"jingxueguo"},"content":"                } else if (task instanceof Events) {"},{"lineNumber":74,"author":{"gitId":"jingxueguo"},"content":"                    writer.write(\" | \" + ((Events) task).time);"},{"lineNumber":75,"author":{"gitId":"jingxueguo"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"jingxueguo"},"content":"                writer.write(System.lineSeparator());"},{"lineNumber":77,"author":{"gitId":"jingxueguo"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":79,"author":{"gitId":"jingxueguo"},"content":"            writer.close();"},{"lineNumber":80,"author":{"gitId":"jingxueguo"},"content":"        } catch (IOException e) {"},{"lineNumber":81,"author":{"gitId":"jingxueguo"},"content":"            throw new DukeException();"},{"lineNumber":82,"author":{"gitId":"jingxueguo"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"jingxueguo"},"content":"}"}],"authorContributionMap":{"jingxueguo":84}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"    public boolean isDone;"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"    public String eventName;"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"    public String eventType;"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"    public Task(boolean done, String eventName, String eventType) {"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"        this.isDone \u003d done;"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"        this.eventName \u003d eventName;"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"        this.eventType \u003d eventType;"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"     * This function sets a task to be done"},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"    public void setDone() {"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":"        if (this.isDone \u003d\u003d true) {"},{"lineNumber":25,"author":{"gitId":"jingxueguo"},"content":"            return \"[X] \" + eventName;"},{"lineNumber":26,"author":{"gitId":"jingxueguo"},"content":"        } else {"},{"lineNumber":27,"author":{"gitId":"jingxueguo"},"content":"            return \"[ ] \" + eventName;"},{"lineNumber":28,"author":{"gitId":"jingxueguo"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jingxueguo"},"content":"}"}],"authorContributionMap":{"jingxueguo":30}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"public class TaskList {"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"    public TaskList() {"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"     * This function adds a task in the task list"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":"     * @param task task to be added"},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":"    public void addTask(Task task) {"},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":22,"author":{"gitId":"jingxueguo"},"content":"        tasks.add(task);"},{"lineNumber":23,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":25,"author":{"gitId":"jingxueguo"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"jingxueguo"},"content":"     * This function returns the task at a specified index"},{"lineNumber":27,"author":{"gitId":"jingxueguo"},"content":"     * @param index the index of the task to be returned"},{"lineNumber":28,"author":{"gitId":"jingxueguo"},"content":"     * @return Task object in the given position"},{"lineNumber":29,"author":{"gitId":"jingxueguo"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"jingxueguo"},"content":"    public Task getTask(int index) {"},{"lineNumber":31,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":32,"author":{"gitId":"jingxueguo"},"content":"        return tasks.get(index);"},{"lineNumber":33,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":35,"author":{"gitId":"jingxueguo"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"jingxueguo"},"content":"     * This function deletes the task at a specified index"},{"lineNumber":37,"author":{"gitId":"jingxueguo"},"content":"     * @param index the index of the task to be deleted"},{"lineNumber":38,"author":{"gitId":"jingxueguo"},"content":"     * @return return the deleted task"},{"lineNumber":39,"author":{"gitId":"jingxueguo"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"jingxueguo"},"content":"    public Task deleteTask(int index) {"},{"lineNumber":41,"author":{"gitId":"jingxueguo"},"content":"        Task task \u003d tasks.get(index);"},{"lineNumber":42,"author":{"gitId":"jingxueguo"},"content":"        tasks.remove(index);"},{"lineNumber":43,"author":{"gitId":"jingxueguo"},"content":"        return task;"},{"lineNumber":44,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":46,"author":{"gitId":"jingxueguo"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"jingxueguo"},"content":"     * This function sets a task in the TaskList to be done"},{"lineNumber":48,"author":{"gitId":"jingxueguo"},"content":"     * @param index index of the task to be set done"},{"lineNumber":49,"author":{"gitId":"jingxueguo"},"content":"     * @return return the task after setting it to be done"},{"lineNumber":50,"author":{"gitId":"jingxueguo"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"jingxueguo"},"content":"    public Task setDone(int index) {"},{"lineNumber":52,"author":{"gitId":"jingxueguo"},"content":"        tasks.get(index).setDone();"},{"lineNumber":53,"author":{"gitId":"jingxueguo"},"content":"        return tasks.get(index);"},{"lineNumber":54,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":56,"author":{"gitId":"jingxueguo"},"content":"    public TaskList findTask(String keyword) {"},{"lineNumber":57,"author":{"gitId":"jingxueguo"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"},{"lineNumber":58,"author":{"gitId":"jingxueguo"},"content":"        for (Task task : tasks) {"},{"lineNumber":59,"author":{"gitId":"jingxueguo"},"content":"            if (task.eventName.contains(keyword)) {"},{"lineNumber":60,"author":{"gitId":"jingxueguo"},"content":"                result.add(task);"},{"lineNumber":61,"author":{"gitId":"jingxueguo"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"jingxueguo"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":64,"author":{"gitId":"jingxueguo"},"content":"        return new TaskList(result);"},{"lineNumber":65,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":67,"author":{"gitId":"jingxueguo"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"jingxueguo"},"content":"     * This function returns the number of tasks in the list"},{"lineNumber":69,"author":{"gitId":"jingxueguo"},"content":"     * @return the size of the task list"},{"lineNumber":70,"author":{"gitId":"jingxueguo"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"jingxueguo"},"content":"    public int getSize() {"},{"lineNumber":72,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":73,"author":{"gitId":"jingxueguo"},"content":"        return tasks.size();"},{"lineNumber":74,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"jingxueguo"},"content":"}"}],"authorContributionMap":{"jingxueguo":75}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"public class ToDos extends Task {"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"    public ToDos(boolean isDone, String eventName) {"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"        super(isDone, eventName, \"T\");"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"        return \"[T] \" + super.toString();"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":"}"}],"authorContributionMap":{"jingxueguo":14}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\""},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"         maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\""},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"         xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":"    \u003c/children\u003e"},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"    \u003cpadding\u003e"},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"    \u003c/padding\u003e"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"jingxueguo":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"    \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"jingxueguo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"jingxueguo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":15,"author":{"gitId":"jingxueguo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":16,"author":{"gitId":"jingxueguo"},"content":"            \u003ccontent\u003e"},{"lineNumber":17,"author":{"gitId":"jingxueguo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"jingxueguo"},"content":"            \u003c/content\u003e"},{"lineNumber":19,"author":{"gitId":"jingxueguo"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":20,"author":{"gitId":"jingxueguo"},"content":"    \u003c/children\u003e"},{"lineNumber":21,"author":{"gitId":"jingxueguo"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"jingxueguo":21}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"public class DukeTest {"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"    public void dukeConstructor() {"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"        assertDoesNotThrow(() -\u003e new Duke(\"./data/duke.txt\") );"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"}"}],"authorContributionMap":{"jingxueguo":12}},{"path":"src/test/java/duke/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":""},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"public class ToDosTest {"},{"lineNumber":7,"author":{"gitId":"jingxueguo"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"jingxueguo"},"content":"    public void createTodos(){"},{"lineNumber":9,"author":{"gitId":"jingxueguo"},"content":"        Task test \u003d new ToDos(false, \"test\");"},{"lineNumber":10,"author":{"gitId":"jingxueguo"},"content":"        assertEquals(\"[T] [ ] test\", test.toString());"},{"lineNumber":11,"author":{"gitId":"jingxueguo"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jingxueguo"},"content":"}"}],"authorContributionMap":{"jingxueguo":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jingxueguo"},"content":"hello"},{"lineNumber":2,"author":{"gitId":"jingxueguo"},"content":"todo borrow book"},{"lineNumber":3,"author":{"gitId":"jingxueguo"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"jingxueguo"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"jingxueguo"},"content":"list"},{"lineNumber":6,"author":{"gitId":"jingxueguo"},"content":"bye"}],"authorContributionMap":{"jingxueguo":6}}]
