[{"path":"src/main/java/AbstractTaskFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":" * Abstract class for the generation of Tasks."},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"abstract class AbstractTaskFactory {"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"     * @param parameters Information needed to create task."},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"     * @return New generated task."},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"     * @throws IllegalArgumentException"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"    protected abstract Task createTask(String parameters) throws IllegalArgumentException;"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"     * Generate Tasks depending on the type needed."},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"     * @param parameters string representation of the task information."},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"     * @return Task Task generated."},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"    protected Task getTask(String parameters) {"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"        return this.createTask(parameters);"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":22}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"class AddCommand implements ICommand {"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"    private TaskList tasks;"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"    private AbstractTaskFactory taskFactory;"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"    AddCommand(TaskList tasks, AbstractTaskFactory taskFactory) {"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"        this.taskFactory \u003d taskFactory;"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"    public void execute(String parameters) {"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"        try {"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"            Task newTask \u003d taskFactory.getTask(parameters);"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"            this.tasks.addTask(newTask);"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"            System.out.println(newTask.toString());"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":20}},{"path":"src/main/java/CommandBorder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":" * Place borders for each command given."},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"class CommandBorder implements ICommand {"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"    private ICommand decoratedCommand;"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"     * Generate Tasks depending on the type needed."},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"     * @param decoratedCommand Command to be wrapped."},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"    CommandBorder(ICommand decoratedCommand) {"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"        this.decoratedCommand \u003d decoratedCommand;"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"     * Print out borders as well as executing the wrapped Command."},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"     * @param parameters input needed to be passed to decoratedCommand."},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    public void execute(String parameters){"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"        System.out.println(\"-\".repeat(40));"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"        decoratedCommand.execute(parameters);"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"        System.out.println(\"-\".repeat(40));"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":26}},{"path":"src/main/java/CommandMap.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"import java.util.HashMap;"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"import java.util.Map;"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":" * Class that maps keywords to appropriate commands."},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"class CommandMap{"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"    private Map\u003cString, ICommand\u003e commands;"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"    private ICommand defaultCommand;"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"     * Create and initialise CommandMap. Will execute defaultCommand if keyword"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"     * given does not match with any keywords that exist in the Map."},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"     * @param defaultCommand Command that will be executed if keyword given does not match any existing keywords."},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"    CommandMap(ICommand defaultCommand) {"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"        this.commands \u003d new HashMap\u003cString, ICommand\u003e();"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"        this.defaultCommand \u003d defaultCommand;"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"     * Maps the given string to the given command"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"     * @param string Keyword to be mapped."},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"     * @param command Command to be executed."},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"    protected void add(String string, ICommand command) {"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"        commands.put(string,command);"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"     * Returns the command that is mapped to keyword. Will return defaultCommand if string does not"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"     * exist in the Map."},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"     * @param string Keyword"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"     * @return Command that corresponded with keyword."},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"    protected ICommand get(String string) {"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"        ICommand command \u003d commands.getOrDefault(string,defaultCommand);"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"        return command;"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":43}},{"path":"src/main/java/CommandWrite.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":" * Wrapper Command that writes all tasks from taskList to file"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":" * after executing the given command."},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"class CommandWrite implements ICommand{"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"    private ICommand decoratedCommand;"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"    private Storage storage;"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"     * Creates the command that will write to file when decoratedCommand"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"     * is executed."},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"     * @param decoratedCommand Command to executed before writing to file."},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"     * @param storage Object responsible for writing the contents in taskList to file."},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"    CommandWrite(ICommand decoratedCommand,Storage storage){"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"        this.storage \u003d storage;"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"        this.decoratedCommand \u003d decoratedCommand;"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"     * Carry out writing to file after executing the command given."},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"     * @param parameters necessary input needed for decoratedCommand to execute."},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"    public void execute(String parameters){"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"            decoratedCommand.execute(parameters);"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"            storage.write();"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"            System.out.println(\"Error: Unable to write to file\");"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":35}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"    private String deadline;"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"     * Deadline constructor."},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"     * @param content Task description"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"     * @param deadline The deadline task has to be completed by."},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"    Deadline(String content,String deadline){"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"        super(content);"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"        return \"[D]\"+super.toString()+ String.format(\" (by:%s)\",this.parseDate(this.deadline.strip()));"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    public String toFileString() {"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"        String done;"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"        if (this.getDone()) {"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"            done \u003d \"1\";"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"            done \u003d \"0\";"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"        String string \u003d \"D|\"+ done + \"|\" + this.getDesc()+ \"|\" + this.deadline;"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"        return string;"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":31}},{"path":"src/main/java/DeadlineFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"class DeadlineFactory extends AbstractTaskFactory{"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"    protected Task createTask(String parameters) throws IllegalArgumentException {"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"        String[] inputArray \u003d parameters.split(\"/by\",2);"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"        if (inputArray[0].isBlank()) {"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"            throw new IllegalArgumentException(\"Error: Description of deadline cannot be empty\");"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"        } else if (inputArray.length \u003d\u003d 1) {"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"            throw new IllegalArgumentException(\"Error: Please add a time limit to your deadline\");"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"        String content \u003d inputArray[0];"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"        String timeRange \u003d inputArray[1];"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"        return new Deadline(content,timeRange);"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":14}},{"path":"src/main/java/DefaultCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"class DefaultCommand implements ICommand{"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"    public void execute(String parameters) {"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"        System.out.println(\"Error: Unknown command word. Please try again.\");"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":6}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"class DeleteCommand implements ICommand{"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"    TaskList tasks;"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"    public DeleteCommand(TaskList tasks) {"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"    public void execute(String parameters) {"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"        try {"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"            int count \u003d Integer.parseInt(parameters);"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"            Task removedTask \u003d tasks.deleteTask(count);"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"            System.out.println(removedTask.toString());"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"            System.out.println(String.format(\"Now you have %d tasks in the list\",tasks.getTasks().size()));"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"            System.out.println(\"Error: Invalid argument for delete\");"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":23}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"class DoneCommand implements ICommand {"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"    private TaskList tasks;"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"    DoneCommand(TaskList tasks) {"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"    public void execute(String parameters) {"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"        try {"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"            Integer count \u003d Integer.parseInt(parameters);"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"            tasks.setTaskDone(count);"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"            System.out.println(tasks.getTasks().get(count - 1));"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"            System.out.println(\"Error: Invalid argument for done\");"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"    private Storage storage;"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"    private CommandMap commands;"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"    private TaskList taskList;"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"    private Ui ui;"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"    public Duke() {"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"        this.taskList \u003d new TaskList();"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"        this.storage \u003d new Storage(taskList);"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"        this.commands \u003d new CommandMap(new CommandBorder(new DefaultCommand()));"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"        Duke currentSession \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"        currentSession.initialiseCommandMap();"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"        currentSession.run();"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"    private void run() {"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"        ICommand printCommand \u003d new CommandBorder(new PrintCommand());"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"        printCommand.execute(ui.getIntro());"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"            this.storage.read();"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"            while (!taskList.hasExited()) {"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"                String input \u003d ui.getLine();"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"                String[] inputArray \u003d Parser.parse(input);"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"                if (inputArray.length \u003d\u003d 2) {"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"                    commands.get(inputArray[0]).execute(inputArray[1]);"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"                } else if (inputArray.length \u003d\u003d 1) {"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"                    //for commands with only one word, will give error msg if command requires more than 1."},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"                    commands.get(inputArray[0]).execute(\" \");"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"                }"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"        } catch (NoSuchElementException e) {"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"            printCommand.execute(ui.showNoMoreLinesError());"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"    private void initialiseCommandMap() {"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"        ICommand doneCommand \u003d new CommandBorder(new DoneCommand(taskList));"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"        doneCommand \u003d new CommandWrite(doneCommand,storage);"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"        ICommand listCommand \u003dnew CommandBorder(new PrintListCommand(taskList));"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"        ICommand exitCommand \u003dnew CommandBorder(new ExitCommand(taskList));"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"        ICommand eventCommand \u003d new CommandBorder(new AddCommand(taskList,new EventFactory()));"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"        eventCommand \u003d new CommandWrite(eventCommand,storage);"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"        ICommand deadlineCommand \u003dnew CommandBorder(new AddCommand(taskList,new DeadlineFactory()));"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"        deadlineCommand \u003d new CommandWrite(deadlineCommand,storage);"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"        ICommand toDoCommand \u003d new CommandBorder(new AddCommand(taskList,new ToDoFactory()));"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"        toDoCommand \u003d new CommandWrite(toDoCommand,storage);"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"        ICommand deleteCommand \u003d new CommandBorder(new DeleteCommand(taskList));"},{"lineNumber":62,"author":{"gitId":"Assyarul"},"content":"        deleteCommand \u003d new CommandWrite(deleteCommand,storage);"},{"lineNumber":63,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":64,"author":{"gitId":"Assyarul"},"content":"        ICommand findCommand \u003d new CommandBorder(new FindCommand(taskList));"},{"lineNumber":65,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":66,"author":{"gitId":"Assyarul"},"content":"        commands.add(\"done\", doneCommand);"},{"lineNumber":67,"author":{"gitId":"Assyarul"},"content":"        commands.add(\"list\", listCommand);"},{"lineNumber":68,"author":{"gitId":"Assyarul"},"content":"        commands.add(\"bye\", exitCommand);"},{"lineNumber":69,"author":{"gitId":"Assyarul"},"content":"        commands.add(\"event\", eventCommand);"},{"lineNumber":70,"author":{"gitId":"Assyarul"},"content":"        commands.add(\"todo\", toDoCommand);"},{"lineNumber":71,"author":{"gitId":"Assyarul"},"content":"        commands.add(\"deadline\", deadlineCommand);"},{"lineNumber":72,"author":{"gitId":"Assyarul"},"content":"        commands.add(\"delete\", deleteCommand);"},{"lineNumber":73,"author":{"gitId":"Assyarul"},"content":"        commands.add(\"find\", findCommand);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Assyarul":71,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"    private String timeRange;"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"    public Event(String content,String timeRange){"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"        super(content);"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"        this.timeRange \u003d timeRange;"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"        return \"[E]\"+super.toString()+ String.format(\" (at:%s)\", this.parseDate(this.timeRange.strip()));"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"    public String toFileString() {"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"        String done;"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"        if (this.getDone()) {"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"            done \u003d \"1\";"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"            done \u003d \"0\";"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"        String string \u003d \"E|\"+ done + \"|\" + this.getDesc() + \"|\" + this.timeRange;"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"        return string;"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":25}},{"path":"src/main/java/EventFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"class EventFactory extends AbstractTaskFactory{"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"    protected Task createTask(String parameters) throws IllegalArgumentException {"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"        String[] inputArray \u003d parameters.split(\"/at\",2);"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"        if (inputArray[0].isBlank()) {"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"            throw new IllegalArgumentException(\"Error: Description of event cannot be empty\");"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"        } else if (inputArray.length \u003d\u003d 1) {"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"            throw new IllegalArgumentException(\"Error: Please add a start time to your event\");"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"        String content \u003d inputArray[0];"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"        String timeRange \u003d inputArray[1];"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"        return new Event(content,timeRange);"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":17}},{"path":"src/main/java/EventFactoryTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"public class EventFactoryTest {"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"    void read_emptyInput_exceptionThrown(){"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"        try {"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"            assertEquals(\"\",new EventFactory().createTask(\"\").toString());"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"            fail();"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"            assertEquals(\"Error: Description of event cannot be empty\",e.getMessage());"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"    void read_wrongInput_exceptionThrown(){"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"            assertEquals(\"\", new EventFactory().createTask(\"test\").toString());"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"            fail();"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"            assertEquals(\"Error: Please add a start time to your event\",e.getMessage());"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":26}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"class ExitCommand implements ICommand {"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"    private TaskList tasks;"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"    public ExitCommand(TaskList tasks) {"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"    public void execute(String parameters) {"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"        tasks.setExited();"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":13}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"public class FindCommand implements ICommand{"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"    TaskList tasks;"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"    public FindCommand(TaskList tasks) {"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"    public void execute(String parameters) {"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"        System.out.println(listToString(parameters.strip()));"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"    private String listToString(String keyword) {"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"        String content \u003d \"\";"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"        Integer count \u003d 1;"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"        for(Task t: tasks.findTasksWithString(keyword)) {"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"            content +\u003d count.toString() + \".\";"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"            content +\u003d t.toString();"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"            content +\u003d \"\\n\";"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"            count++;"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"        return content.trim();"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":25}},{"path":"src/main/java/ICommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":" * Interface for Command."},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":" *"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":" */"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"interface ICommand {"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"     * Execute given action based on the command."},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"     * @param parameters input required by the Command. See implementations of Command"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"     *                   for more information."},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"    void execute(String parameters);"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":13}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":" * Parser class used to parse input into appropriate formats."},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"class Parser {"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"     * Parse given line into an array where the first element is a keyword."},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"     * @param string Input Line."},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"    public static String[] parse(String string) {"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"        String[] inputArray \u003d string.split(\" \", 2);"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"        return inputArray;"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":14}},{"path":"src/main/java/PrintCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":" * Command to print given string."},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"class PrintCommand implements ICommand{"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"     * Execute the printing of given input."},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"     * @param parameters Given input to be printed"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"    public void execute(String parameters) {"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"        System.out.println(parameters);"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":14}},{"path":"src/main/java/PrintListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":" * Command that prints the list existing in TaskList."},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"class PrintListCommand implements ICommand {"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"    private TaskList tasks;"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"    PrintListCommand(TaskList tasks){"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"    public void execute(String parameters) {"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"        System.out.println(listToString());"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"    private String listToString() {"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"        String content\u003d\"\";"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"        Integer count \u003d 1;"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"        for(Task t: tasks.getTasks()) {"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"            content +\u003d count.toString() + \".\";"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"            content +\u003d t.toString();"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"            content +\u003d \"\\n\";"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"            count++;"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"        return content.trim();"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":27}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"import java.io.BufferedReader;"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"import java.io.FileReader;"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"import java.lang.StringBuilder;"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"class Storage {"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"    private TaskList tasks;"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"    Storage(TaskList tasks) {"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"    protected void read() {"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"            FileReader reader \u003d new FileReader(FILE_NAME);"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(reader);"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"            String taskString;"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"            taskString \u003d bufferedReader.readLine();"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"            while(taskString!\u003dnull) {"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"                String[] taskArray \u003d taskString.split(\"\\\\|\");"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"                for (String s : taskArray) {"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"                    System.out.println(s);"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"                }"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"                this.tasks.addTask(taskArray);"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"                taskString \u003d bufferedReader.readLine();"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"            reader.close();"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"        } catch(FileNotFoundException e) {"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"            System.out.println(\"No existing file found.\");"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"    protected void write() throws IOException {"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"        for (Task task: tasks.getTasks()) {"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"            sb.append(task.toFileString());"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"            sb.append(\u0027\\n\u0027);"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":"        if (sb.length() \u003e 0) {"},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"            sb.deleteCharAt(sb.length() - 1);"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"        FileWriter writer \u003d new FileWriter(FILE_NAME);"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"        writer.write(sb.toString());"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"        writer.close();"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":52}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":" * Abstract class for tasks. Contains information about the task description and"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":" * whether is has been carried out."},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"abstract class Task {"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"    private String content;"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"    private boolean isDone;"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"     * Abstract Class constructor."},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"     * @param content description of the task."},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"    Task(String content) {"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"        this.content \u003d content;"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"        this.isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"     * String representation of whether the task is done."},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"     * To be used by the concrete implementation of Tasks only."},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"     * @return [X] if done [ ] otherwise."},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"    public String toString(){"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"        String string \u003d \"\";"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"        //Printing isDone"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"        string +\u003d String.format(\"[%s] \", isDone?\"X\":\" \");"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"        string +\u003d this.content;"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"        return string;"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"     * Information needed to be write/read in/to file."},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"     * In the format of Type|"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"     * @return String representation in file"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"    abstract public String toFileString();"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"    String parseDate(String string){"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"        try{"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"            LocalDate date \u003d LocalDate.parse(string);"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"            return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"            return string;"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"     * Set Task to be done."},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"    protected void setDone() {"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"        this.isDone \u003d true;"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":63,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"Assyarul"},"content":"     * Gets the task description."},{"lineNumber":65,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"Assyarul"},"content":"     * @return Description of Task"},{"lineNumber":67,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"Assyarul"},"content":"    protected String getDesc() {"},{"lineNumber":69,"author":{"gitId":"Assyarul"},"content":"        return this.content;"},{"lineNumber":70,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":72,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"Assyarul"},"content":"     * Gets the status of whether the task is done or not."},{"lineNumber":74,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"Assyarul"},"content":"     * @return Boolean representation of whether task is done or not."},{"lineNumber":76,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"Assyarul"},"content":"    protected boolean getDone() {"},{"lineNumber":78,"author":{"gitId":"Assyarul"},"content":"        return this.isDone;"},{"lineNumber":79,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":80}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"class TaskList {"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"    private ArrayList\u003cTask\u003e list;"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"    private boolean isDone;"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"    TaskList() {"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"        list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"        isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"    protected ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"        return this.list;"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"    protected void addTask(Task content) {"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"        list.add(content);"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"    protected void addTask(String[] tasks) {"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"        String type \u003d tasks[0].strip();"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"        String done \u003d tasks[1].strip();"},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"        String desc \u003d tasks[2].strip();"},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"        Task task;"},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"        task \u003d new ToDo(desc);"},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"        if (type.equals(\"T\")) {"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"            task \u003d new ToDo(desc);"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":"            this.addTask(task);"},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"        } else if (type.equals(\"D\")) {"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"            String byDate \u003d tasks[3];"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":"            task \u003d new Deadline(desc,byDate);"},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"            this.addTask(task);"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"        } else if (type.equals(\"E\")) {"},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"            String atDate \u003d tasks[3];"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"            task \u003d new Event(desc,atDate);"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"            this.addTask(task);"},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"            System.out.println(\"File has invalid entries\");"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"        if (done.equals(\"1\")) {"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"            task.setDone();"},{"lineNumber":43,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":46,"author":{"gitId":"Assyarul"},"content":"    protected void setTaskDone(int count) throws IllegalArgumentException {"},{"lineNumber":47,"author":{"gitId":"Assyarul"},"content":"        if (count \u003e list.size() || count \u003c\u003d 0) {"},{"lineNumber":48,"author":{"gitId":"Assyarul"},"content":"            throw new IllegalArgumentException(\"Error: Task number out of range.\");"},{"lineNumber":49,"author":{"gitId":"Assyarul"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"Assyarul"},"content":"            list.get(count-1).setDone();"},{"lineNumber":51,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":54,"author":{"gitId":"Assyarul"},"content":"    protected Task deleteTask(int count) throws IllegalArgumentException {"},{"lineNumber":55,"author":{"gitId":"Assyarul"},"content":"        if (count \u003e list.size() || count \u003c\u003d 0) {"},{"lineNumber":56,"author":{"gitId":"Assyarul"},"content":"            throw new IllegalArgumentException(\"Error: Task number out of range.\");"},{"lineNumber":57,"author":{"gitId":"Assyarul"},"content":"        } else {"},{"lineNumber":58,"author":{"gitId":"Assyarul"},"content":"            Task removedTask \u003d list.remove(count-1);"},{"lineNumber":59,"author":{"gitId":"Assyarul"},"content":"            return removedTask;"},{"lineNumber":60,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":63,"author":{"gitId":"Assyarul"},"content":"    public List\u003cTask\u003e findTasksWithString(String keyword) {"},{"lineNumber":64,"author":{"gitId":"Assyarul"},"content":"        List\u003cTask\u003e tasksWithString \u003d new ArrayList\u003c\u003e();"},{"lineNumber":65,"author":{"gitId":"Assyarul"},"content":"        for (Task t: list) {"},{"lineNumber":66,"author":{"gitId":"Assyarul"},"content":"            String taskDesc \u003d t.getDesc();"},{"lineNumber":67,"author":{"gitId":"Assyarul"},"content":"            if (taskDesc.contains(keyword)) {"},{"lineNumber":68,"author":{"gitId":"Assyarul"},"content":"                tasksWithString.add(t);"},{"lineNumber":69,"author":{"gitId":"Assyarul"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"Assyarul"},"content":"        return tasksWithString;"},{"lineNumber":72,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":74,"author":{"gitId":"Assyarul"},"content":"    public void setExited() {"},{"lineNumber":75,"author":{"gitId":"Assyarul"},"content":"        this.isDone \u003d true;"},{"lineNumber":76,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":78,"author":{"gitId":"Assyarul"},"content":"    protected boolean hasExited() {"},{"lineNumber":79,"author":{"gitId":"Assyarul"},"content":"        return this.isDone;"},{"lineNumber":80,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":82,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":82}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"class ToDo extends Task{"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"    ToDo(String content) {"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"        super(content);"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"    public String toFileString() {"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"        String done;"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"        if (this.getDone()) {"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"            done \u003d \"1\";"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"            done \u003d \"0\";"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"        String string \u003d \"T|\"+ done + \"|\" + this.getDesc();"},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"        return string;"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":23}},{"path":"src/main/java/ToDoFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"class ToDoFactory extends AbstractTaskFactory{"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"    @Override"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"    protected Task createTask(String parameters) throws IllegalArgumentException {"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"        if (parameters.isBlank()) {"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"            throw new IllegalArgumentException(\"Error: Description of todo cannot be empty\");"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"        }"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"        return new ToDo(parameters);"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":9}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":" * Handles the interaction the user and the program."},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"class Ui {"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"    Scanner scanner;"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"    Ui(){"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"        scanner \u003d new Scanner(System.in);"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"    protected String getLine() throws NoSuchElementException {"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"        return scanner.nextLine();"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"     * Generates the string representation of the introduction."},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"Assyarul"},"content":"     * @return String representing the introduction to Duke."},{"lineNumber":21,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Assyarul"},"content":"    protected String getIntro(){"},{"lineNumber":23,"author":{"gitId":"Assyarul"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":24,"author":{"gitId":"Assyarul"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":25,"author":{"gitId":"Assyarul"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":26,"author":{"gitId":"Assyarul"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":27,"author":{"gitId":"Assyarul"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":28,"author":{"gitId":"Assyarul"},"content":"        String intro \u003d\"Hello I\u0027m\\n\" + logo +\"\\nWhat can I do for you?\\n\";"},{"lineNumber":29,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":30,"author":{"gitId":"Assyarul"},"content":"        return intro;"},{"lineNumber":31,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Assyarul"},"content":""},{"lineNumber":33,"author":{"gitId":"Assyarul"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Assyarul"},"content":"     * Command that prints the list existing in TaskList."},{"lineNumber":35,"author":{"gitId":"Assyarul"},"content":"     * (Only applicable if inputs are fed via file direction)"},{"lineNumber":36,"author":{"gitId":"Assyarul"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"Assyarul"},"content":"     * @return String representing the error when no lines are inputted."},{"lineNumber":38,"author":{"gitId":"Assyarul"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Assyarul"},"content":"    public String showNoMoreLinesError(){"},{"lineNumber":40,"author":{"gitId":"Assyarul"},"content":"        return \"Error. No more lines detected. Exiting...\";"},{"lineNumber":41,"author":{"gitId":"Assyarul"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Assyarul"},"content":"}"}],"authorContributionMap":{"Assyarul":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Assyarul"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Assyarul"},"content":"list"},{"lineNumber":3,"author":{"gitId":"Assyarul"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"Assyarul"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"Assyarul"},"content":"list"},{"lineNumber":6,"author":{"gitId":"Assyarul"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"Assyarul"},"content":"list"},{"lineNumber":8,"author":{"gitId":"Assyarul"},"content":"done 3"},{"lineNumber":9,"author":{"gitId":"Assyarul"},"content":"list"},{"lineNumber":10,"author":{"gitId":"Assyarul"},"content":"todo"},{"lineNumber":11,"author":{"gitId":"Assyarul"},"content":"deadline"},{"lineNumber":12,"author":{"gitId":"Assyarul"},"content":"event"},{"lineNumber":13,"author":{"gitId":"Assyarul"},"content":"deadline fail"},{"lineNumber":14,"author":{"gitId":"Assyarul"},"content":"event fail"},{"lineNumber":15,"author":{"gitId":"Assyarul"},"content":"delete 1"},{"lineNumber":16,"author":{"gitId":"Assyarul"},"content":"delete ab"},{"lineNumber":17,"author":{"gitId":"Assyarul"},"content":"delete 2"},{"lineNumber":18,"author":{"gitId":"Assyarul"},"content":"list"},{"lineNumber":19,"author":{"gitId":"Assyarul"},"content":"blah"}],"authorContributionMap":{"Assyarul":19}}]
