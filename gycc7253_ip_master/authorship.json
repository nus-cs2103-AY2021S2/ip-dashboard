[{"path":"src/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"T|1|1"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"T|0|get book"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"E|0|book festival|on|2020-11-23"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"D|0|ne return harry potter|by|next month"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"E|0|alice\u0027s birthday|on|25rd march"}],"authorContributionMap":{"gycc7253":5}},{"path":"src/data/storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"T|1|todo1"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"T|1|todo2"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"E|1|lz bd|on|23rd Jan"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"D|1|homework|by|24th Jan"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"T|1|todo3"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"E|1|watching drama|on|25th jan night"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"D|1|homework2|by|26th Jan"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"E|1|my birthday|on|2020-04-02"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"D|1|celebrate new year|by|2nd march"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"E|1|alice\u0027s bd|on|23rd march 2020"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"E|1|get book|by|tmr"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"E|0|get book|by|tmr"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"E|0|new year|on|2020-11-23"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"T|1|14"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"E|0|new day|on|2021-01-26"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"T|0|get bottle"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"E|1|get bottle from james|on|2021-04-24"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"T|1|get money"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"E|0|celebrate bd again|on|4th april 2020"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"E|1|checkout|on|today"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"E|0|get again|by|2020-11-23"}],"authorContributionMap":{"gycc7253":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import main.java.command.Command;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":" * Main class"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":" * Duke is a task management system that employs a friendly UI to help you manage your tasks"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"    private Ui ui;"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"    private TaskManager tm;"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"    private Parser parser;"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"    private Duke(String filepath) {"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"        this.tm \u003d new TaskManager(filepath);"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"        this.parser \u003d new Parser();"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"    private void run() {"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"        ui.greeting();"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"        boolean isExit \u003d false;"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"        while (!isExit) {"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"            try {"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"                ui.displayLine();"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"                Command c \u003d parser.parse(fullCommand);"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"                c.execute(tm, ui);"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"            } catch (NoSuchElementException e) {"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"                ui.displayExit();"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"                break;"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"            } catch (Exception e) {"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"                ui.displayError(e.getMessage());"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"            } finally {"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"                ui.displayLine();"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"        new Duke(\"src/data/duke.txt\").run();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"gycc7253":42,"-":4}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import main.java.command.*;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import main.java.exceptions.IllegalInputFormatException;"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":" * A Parser class that is used to parse user input as Commands"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"     * Creates a parser instance"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"    public Parser() {"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"     * Parse a particular command string and create a command to be returned"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"     * @param commandStr user input string command"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"     * @return parsed command"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"     * @throws Exception parsing exceptions including wrong input, index out of bounds due to wrong input etc."},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"    public Command parse(String commandStr) throws Exception {"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"        Command command \u003d null;"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"            if (commandStr \u003d\u003d null) {"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"                command \u003d new ExitCommand();"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"            } else if (commandStr.toLowerCase().equals(\"bye\")) {"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"                command \u003d new ExitCommand();"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"            } else if (commandStr.trim().toLowerCase().equals(\"list\")) {"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"                command \u003d new ListCommand();"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"            } else if (commandStr.toLowerCase().split(\" \")[0].equals(\"done\")) {"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"                int doneIndex \u003d Integer.parseInt(commandStr.split(\" \")[1]) - 1;"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"                command \u003d new DoneCommand(doneIndex);"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"            } else if (commandStr.toLowerCase().split(\" \")[0].equals(\"delete\")) {"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"                int deleteIndex \u003d Integer.parseInt(commandStr.split(\" \")[1]) - 1;"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"                command \u003d new DeleteCommand(deleteIndex);"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"            } else if (commandStr.toLowerCase().split(\" \")[0].equals(\"todo\")) {"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"                String todoName \u003d commandStr.substring(5);"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"                if (todoName.trim().length() \u003d\u003d 0) {"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"                    throw new IllegalInputFormatException();"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"                command \u003d new AddTodoCommand(todoName);"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"            } else if (commandStr.toLowerCase().split(\" \")[0].equals(\"deadline\")) {"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"                String[] arr \u003d commandStr.split(\" /\");"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"                String name \u003d arr[0].substring(9);"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"                String[] arr2 \u003d arr[1].split(\" \", 2);"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"                try {"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":"                    LocalDate timeDate \u003d LocalDate.parse(arr2[1]);"},{"lineNumber":53,"author":{"gitId":"gycc7253"},"content":"                    command \u003d new AddDeadlineCommand(name, arr2[0], timeDate);"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"                } catch (DateTimeParseException e) {"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"                    command \u003d new AddDeadlineCommand(name, arr2[0], arr2[1]);"},{"lineNumber":56,"author":{"gitId":"gycc7253"},"content":"                }"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"            } else if (commandStr.toLowerCase().split(\" \")[0].equals(\"event\")) {"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"                String[] arr \u003d commandStr.split(\" /\");"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"                String name \u003d arr[0].substring(6);"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"                String[] arr2 \u003d arr[1].split(\" \", 2);"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"                try {"},{"lineNumber":62,"author":{"gitId":"gycc7253"},"content":"                    LocalDate timeDate \u003d LocalDate.parse(arr2[1]);"},{"lineNumber":63,"author":{"gitId":"gycc7253"},"content":"                    command \u003d new AddEventCommand(name, arr2[0], timeDate);"},{"lineNumber":64,"author":{"gitId":"gycc7253"},"content":"                } catch (DateTimeParseException e) {"},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":"                    command \u003d new AddEventCommand(name, arr2[0], arr2[1]);"},{"lineNumber":66,"author":{"gitId":"gycc7253"},"content":"                }"},{"lineNumber":67,"author":{"gitId":"gycc7253"},"content":"            } else if (commandStr.toLowerCase().split(\" \")[0].equals(\"find\")) {"},{"lineNumber":68,"author":{"gitId":"gycc7253"},"content":"                String keyword \u003d commandStr.substring(5);"},{"lineNumber":69,"author":{"gitId":"gycc7253"},"content":"                if (keyword.trim().length() \u003d\u003d 0) {"},{"lineNumber":70,"author":{"gitId":"gycc7253"},"content":"                    throw new IllegalInputFormatException();"},{"lineNumber":71,"author":{"gitId":"gycc7253"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"gycc7253"},"content":"                command \u003d new FindCommand(keyword);"},{"lineNumber":73,"author":{"gitId":"gycc7253"},"content":"            } else {"},{"lineNumber":74,"author":{"gitId":"gycc7253"},"content":"                command \u003d new WrongCommand();"},{"lineNumber":75,"author":{"gitId":"gycc7253"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"gycc7253"},"content":"        } catch (Exception e) {"},{"lineNumber":77,"author":{"gitId":"gycc7253"},"content":"            e.printStackTrace();"},{"lineNumber":78,"author":{"gitId":"gycc7253"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"gycc7253"},"content":"        return command;"},{"lineNumber":80,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":81}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import main.java.entity.*;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import java.io.*;"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":" * A utility class to be called only by TaskManager to help manage"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":" * Tasks stored on disk"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"class Storage {"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"    private File file;"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"    private BufferedReader br;"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"    protected Storage(String filepath) {"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"        this.file \u003d new File(filepath);"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"        FileReader fr;"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"            file.getParentFile().mkdirs();"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"            file.createNewFile();"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"            System.out.println(file.getAbsolutePath());"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"            fr \u003d new FileReader(file);"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"            br \u003d new BufferedReader(fr);"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"            System.out.println(\"Error: Storage failed to initialize...\");"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"    protected List\u003cTask\u003e readAll() {"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"        String str;"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"            while ((str \u003d br.readLine()) !\u003d null) {"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"                list.add(readItem(str));"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"            e.printStackTrace();"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"        return list;"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"    protected Task readItem(String str) {"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"        String[] strarr \u003d str.split(\"\\\\|\");"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"        String type \u003d strarr[0];"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"        boolean isDone \u003d strarr[1].equals(\"1\");"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"        Task task;"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"        if (type.equals(\"T\")) {"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":"            task \u003d new Todo(strarr[2], isDone);"},{"lineNumber":53,"author":{"gitId":"gycc7253"},"content":"        } else if (type.equals(\"E\")) {"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"            try {"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"                LocalDate date \u003d LocalDate.parse(strarr[4]);"},{"lineNumber":56,"author":{"gitId":"gycc7253"},"content":"                task \u003d new Event(strarr[2], strarr[3], date, isDone);"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"                task \u003d new Event(strarr[2], strarr[3], strarr[4], isDone);"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"        } else if (type.equals(\"D\")) {"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"            try {"},{"lineNumber":62,"author":{"gitId":"gycc7253"},"content":"                LocalDate date \u003d LocalDate.parse(strarr[4]);"},{"lineNumber":63,"author":{"gitId":"gycc7253"},"content":"                task \u003d new Deadline(strarr[2], strarr[3], date, isDone);"},{"lineNumber":64,"author":{"gitId":"gycc7253"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":"                task \u003d new Deadline(strarr[2], strarr[3], strarr[4], isDone);"},{"lineNumber":66,"author":{"gitId":"gycc7253"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"gycc7253"},"content":"        } else {"},{"lineNumber":68,"author":{"gitId":"gycc7253"},"content":"            System.out.println(\"Error: Item type not categorized when reading from file. Returning null task...\");"},{"lineNumber":69,"author":{"gitId":"gycc7253"},"content":"            task \u003d null;"},{"lineNumber":70,"author":{"gitId":"gycc7253"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"gycc7253"},"content":"        return task;"},{"lineNumber":72,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":74,"author":{"gitId":"gycc7253"},"content":"    protected void updateFile(List\u003cTask\u003e list){"},{"lineNumber":75,"author":{"gitId":"gycc7253"},"content":"        try {"},{"lineNumber":76,"author":{"gitId":"gycc7253"},"content":"            FileWriter fw \u003d new FileWriter(file, false);"},{"lineNumber":77,"author":{"gitId":"gycc7253"},"content":"            for (Task task : list) {"},{"lineNumber":78,"author":{"gitId":"gycc7253"},"content":"                String output \u003d task.toFileString();"},{"lineNumber":79,"author":{"gitId":"gycc7253"},"content":"                fw.write(output);"},{"lineNumber":80,"author":{"gitId":"gycc7253"},"content":"                fw.write(\"\\n\");"},{"lineNumber":81,"author":{"gitId":"gycc7253"},"content":"                fw.flush();"},{"lineNumber":82,"author":{"gitId":"gycc7253"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"gycc7253"},"content":"        } catch (Exception e) {"},{"lineNumber":84,"author":{"gitId":"gycc7253"},"content":"            System.err.println(\"Failed to update file\");"},{"lineNumber":85,"author":{"gitId":"gycc7253"},"content":"            e.printStackTrace();"},{"lineNumber":86,"author":{"gitId":"gycc7253"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":88}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"import main.java.entity.*;"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":" * Contain a Task List to manage tasks"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":" * Could add, markDone, delete, read tasks"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":" * It uses Storage class to help manage task storage on disk"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"public class TaskManager {"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"    private List\u003cTask\u003e list;"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"    private Storage storage;"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"     * Creates a TaskManager to manage Tasks"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"     * Tasks in a filepath to store tasks info on disk"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"     * @param filepath path to the file for disk storage"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"    public TaskManager(String filepath) {"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"        storage \u003d new Storage(filepath);"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"        list \u003d storage.readAll();"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"     * Get task list size"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"     * @return size of the current task list"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"    public int size() {"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"        return this.list.size();"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"     * Add Task to task list"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"     * @param task task to be added"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"     * @return the added task"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"    public Task addTask(Task task) {"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"        list.add(task);"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"        storage.updateFile(list);"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"        return task;"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"     * Change the particular task\u0027s isDone status to true"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"     * @param index index of done task in list"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"     * @return the done task"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"    public Task done(int index) {"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"        Task task \u003d list.get(index);"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"        task.markAsDone();"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"        storage.updateFile(list);"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":"        return task;"},{"lineNumber":53,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"gycc7253"},"content":"     * Delete the particular task from list"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"     * @param index index of task-to-delete in list"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"     * @return the deleted task"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"    public Task deleteTask(int index) {"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"        Task task \u003d list.remove(index);"},{"lineNumber":62,"author":{"gitId":"gycc7253"},"content":"        storage.updateFile(list);"},{"lineNumber":63,"author":{"gitId":"gycc7253"},"content":"        return task;"},{"lineNumber":64,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":66,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"gycc7253"},"content":"     * Get the task list"},{"lineNumber":68,"author":{"gitId":"gycc7253"},"content":"     * @return task list"},{"lineNumber":69,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"gycc7253"},"content":"    public List\u003cTask\u003e getList() {"},{"lineNumber":71,"author":{"gitId":"gycc7253"},"content":"        return this.list;"},{"lineNumber":72,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":74,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"gycc7253"},"content":"     * Check if the task list is Empty"},{"lineNumber":76,"author":{"gitId":"gycc7253"},"content":"     * @return true if list is empty"},{"lineNumber":77,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"gycc7253"},"content":"    public boolean isEmpty() {"},{"lineNumber":79,"author":{"gitId":"gycc7253"},"content":"        return list.isEmpty();"},{"lineNumber":80,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":82,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"gycc7253"},"content":"     * Check if a particular index falls in the range of list"},{"lineNumber":84,"author":{"gitId":"gycc7253"},"content":"     * @param index input index to be checked"},{"lineNumber":85,"author":{"gitId":"gycc7253"},"content":"     * @return true if index is valid"},{"lineNumber":86,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"gycc7253"},"content":"    public boolean indexWithinRange(int index) {"},{"lineNumber":88,"author":{"gitId":"gycc7253"},"content":"        return index \u003c size() \u0026\u0026 index \u003e\u003d 0;"},{"lineNumber":89,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":91,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"gycc7253"},"content":"     * Search through the existing task list for a specific keyword"},{"lineNumber":93,"author":{"gitId":"gycc7253"},"content":"     * Add all occurrences of the tasks to return list"},{"lineNumber":94,"author":{"gitId":"gycc7253"},"content":"     * @param keyword keyword string to search"},{"lineNumber":95,"author":{"gitId":"gycc7253"},"content":"     * @return list of tasks containing the keyword"},{"lineNumber":96,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"gycc7253"},"content":"    public List\u003cTask\u003e findByKeyword(String keyword) {"},{"lineNumber":98,"author":{"gitId":"gycc7253"},"content":"        List\u003cTask\u003e result \u003d  new ArrayList\u003c\u003e();"},{"lineNumber":99,"author":{"gitId":"gycc7253"},"content":"        for (Task task: list) {"},{"lineNumber":100,"author":{"gitId":"gycc7253"},"content":"            if (task.getName().contains(keyword)) {"},{"lineNumber":101,"author":{"gitId":"gycc7253"},"content":"                result.add(task);"},{"lineNumber":102,"author":{"gitId":"gycc7253"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"gycc7253"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"gycc7253"},"content":"        return result;"},{"lineNumber":105,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":106}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import main.java.entity.Task;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":" * User Interface Management class that helps facilitate"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":" * interaction with user"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":" * particularly for user input passing"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":" * and display query result to user"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"public class Ui {"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"    private Scanner sc;"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"    static final String GREETINGS \u003d \"Dear user, welcome to the world of duke!\";"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"    static final String PREFIX \u003d \"    \";"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"    static final String LOGO \u003d \" ____        _        \\n\""},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"    static final String DISPLAY_EMPTY_LIST \u003d PREFIX + \"Currently there is nothing on your list.\";"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"    static final String DISPLAY_ADDED \u003d PREFIX + \"Got it. I\u0027ve added this task:\";"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"    static final String DISPLAY_DONE \u003d PREFIX + \"Nice! I\u0027ve mark this task as done:\";"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"    static final String DISPLAY_RENAME \u003d PREFIX + \"Noted, I\u0027ve removed this task:\";"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"     * Creates a Ui instance"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"    public Ui() {"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"     * Show greetings display"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"    public void greeting() {"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"        System.out.println(\"This is \\n\" + LOGO);"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"        System.out.println(GREETINGS);"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"     * Show exit display"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"    public void displayExit() {"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"        System.out.println(PREFIX + \"Bye, until next time!\");"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"     * Show a horizontal line"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":"    public void displayLine() {"},{"lineNumber":53,"author":{"gitId":"gycc7253"},"content":"        System.out.println(\"________________________\");"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":56,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"     * Read a line of user input"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"     * @return a string of the line"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"    public String readCommand() {"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"        return sc.nextLine();"},{"lineNumber":62,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":64,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":"    public void displayWrongCommand(String message) {"},{"lineNumber":66,"author":{"gitId":"gycc7253"},"content":"        System.out.println(PREFIX + message);"},{"lineNumber":67,"author":{"gitId":"gycc7253"},"content":"        System.out.println(PREFIX + \"Sorry, but we could not parse your input\");"},{"lineNumber":68,"author":{"gitId":"gycc7253"},"content":"        System.out.println(PREFIX + \"Please recheck its validity...\");"},{"lineNumber":69,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":71,"author":{"gitId":"gycc7253"},"content":"    public void displayOutOfRange(int index) {"},{"lineNumber":72,"author":{"gitId":"gycc7253"},"content":"        System.out.println(PREFIX + \"There is no such index \" + index + \" in the task list.\");"},{"lineNumber":73,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":75,"author":{"gitId":"gycc7253"},"content":"    public void displayWrongCommand() {"},{"lineNumber":76,"author":{"gitId":"gycc7253"},"content":"        System.out.println(PREFIX + \"Sorry, but we could not parse your input\");"},{"lineNumber":77,"author":{"gitId":"gycc7253"},"content":"        System.out.println(PREFIX + \"Please recheck its validity...\");"},{"lineNumber":78,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":80,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"gycc7253"},"content":"     * Display Error with particular error message"},{"lineNumber":82,"author":{"gitId":"gycc7253"},"content":"     * @param message particular error message"},{"lineNumber":83,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"gycc7253"},"content":"    public void displayError(String message) {"},{"lineNumber":85,"author":{"gitId":"gycc7253"},"content":"        System.out.println(\"Duke is sorry about it, but we have encountered an error...\");"},{"lineNumber":86,"author":{"gitId":"gycc7253"},"content":"        System.out.println(message);"},{"lineNumber":87,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":89,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"gycc7253"},"content":"     * Display a task"},{"lineNumber":91,"author":{"gitId":"gycc7253"},"content":"     * @param task task to be displayed"},{"lineNumber":92,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"gycc7253"},"content":"    public void displayTask(Task task) {"},{"lineNumber":94,"author":{"gitId":"gycc7253"},"content":"        System.out.println(PREFIX + task);"},{"lineNumber":95,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":97,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"gycc7253"},"content":"     * Display info regarding current task list size"},{"lineNumber":99,"author":{"gitId":"gycc7253"},"content":"     * @param size list size"},{"lineNumber":100,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"gycc7253"},"content":"    public void displayListSize(int size) {"},{"lineNumber":102,"author":{"gitId":"gycc7253"},"content":"        System.out.println(PREFIX + \"Now you have \" + size + \" tasks in the list.\");"},{"lineNumber":103,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":105,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"gycc7253"},"content":"     * Display when there is nothing in task list"},{"lineNumber":107,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"gycc7253"},"content":"    public void displayEmptyList() {"},{"lineNumber":109,"author":{"gitId":"gycc7253"},"content":"        System.out.println(DISPLAY_EMPTY_LIST);"},{"lineNumber":110,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":112,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"gycc7253"},"content":"     * Display all tasks"},{"lineNumber":114,"author":{"gitId":"gycc7253"},"content":"     * @param list list of tasks"},{"lineNumber":115,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"gycc7253"},"content":"    public void displayAllTasks(List\u003cTask\u003e list) {"},{"lineNumber":117,"author":{"gitId":"gycc7253"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":118,"author":{"gitId":"gycc7253"},"content":"            System.out.println(PREFIX + (i + 1) + \". \" + list.get(i));"},{"lineNumber":119,"author":{"gitId":"gycc7253"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":122,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"gycc7253"},"content":"     * Display after adding a task"},{"lineNumber":124,"author":{"gitId":"gycc7253"},"content":"     * @param size task list size after adding the task"},{"lineNumber":125,"author":{"gitId":"gycc7253"},"content":"     * @param task task added"},{"lineNumber":126,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"gycc7253"},"content":"    public void displayAfterAdd(int size, Task task) {"},{"lineNumber":128,"author":{"gitId":"gycc7253"},"content":"        System.out.println(DISPLAY_ADDED);"},{"lineNumber":129,"author":{"gitId":"gycc7253"},"content":"        displayTask(task);"},{"lineNumber":130,"author":{"gitId":"gycc7253"},"content":"        displayListSize(size);"},{"lineNumber":131,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":133,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":134,"author":{"gitId":"gycc7253"},"content":"     * Display after done a task"},{"lineNumber":135,"author":{"gitId":"gycc7253"},"content":"     * @param task task done"},{"lineNumber":136,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"gycc7253"},"content":"    public void displayAfterDone(Task task) {"},{"lineNumber":138,"author":{"gitId":"gycc7253"},"content":"        System.out.println(DISPLAY_DONE);"},{"lineNumber":139,"author":{"gitId":"gycc7253"},"content":"        displayTask(task);"},{"lineNumber":140,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":142,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":143,"author":{"gitId":"gycc7253"},"content":"     * Display after delete a task"},{"lineNumber":144,"author":{"gitId":"gycc7253"},"content":"     * @param size task list size after deleting the task"},{"lineNumber":145,"author":{"gitId":"gycc7253"},"content":"     * @param task task deleted"},{"lineNumber":146,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"gycc7253"},"content":"    public void displayAfterDelete(int size, Task task) {"},{"lineNumber":148,"author":{"gitId":"gycc7253"},"content":"        System.out.println(DISPLAY_RENAME);"},{"lineNumber":149,"author":{"gitId":"gycc7253"},"content":"        System.out.println(PREFIX + task);"},{"lineNumber":150,"author":{"gitId":"gycc7253"},"content":"        displayListSize(size);"},{"lineNumber":151,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":153,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":154,"author":{"gitId":"gycc7253"},"content":"     * Display search result based on given result task list"},{"lineNumber":155,"author":{"gitId":"gycc7253"},"content":"     * @param result task list found"},{"lineNumber":156,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"gycc7253"},"content":"    public void displaySearchResult(List\u003cTask\u003e result) {"},{"lineNumber":158,"author":{"gitId":"gycc7253"},"content":"        if (result.isEmpty()) {"},{"lineNumber":159,"author":{"gitId":"gycc7253"},"content":"            System.out.println(prefix + \"Sorry, there is no task found.\");"},{"lineNumber":160,"author":{"gitId":"gycc7253"},"content":"        } else {"},{"lineNumber":161,"author":{"gitId":"gycc7253"},"content":"            System.out.println(prefix + \"We found \" + result.size() + \" results:\");"},{"lineNumber":162,"author":{"gitId":"gycc7253"},"content":"            for (Task task: result) {"},{"lineNumber":163,"author":{"gitId":"gycc7253"},"content":"                System.out.println(prefix + task);"},{"lineNumber":164,"author":{"gitId":"gycc7253"},"content":"            }"},{"lineNumber":165,"author":{"gitId":"gycc7253"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":167}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":" * Abstract super class for all Add Commands"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"abstract class AddCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":8}},{"path":"src/main/java/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import main.java.TaskManager;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import main.java.Ui;"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import main.java.entity.Deadline;"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import main.java.entity.Task;"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":" * Command to add a Deadline Task"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"public class AddDeadlineCommand extends AddCommand {"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"    protected String deadlineName;"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"    protected String keyword;"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"    protected String dateString;"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"    protected LocalDate date;"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"     * Creates a command to add a Deadline task"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"     * @param deadlineName name of task"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"     * @param keyword preposition as time-specifier"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"     * @param dateString string representation of deadline"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"    public AddDeadlineCommand(String deadlineName, String keyword, String dateString) {"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"        this.deadlineName \u003d deadlineName;"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"        this.dateString \u003d dateString;"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"     * Creates a command to add a Deadline task"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"     * @param deadlineName name of task"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"     * @param keyword preposition as time-specifier"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"     * @param date LocalDate representation of deadline"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"    public AddDeadlineCommand(String deadlineName, String keyword, LocalDate date) {"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"        this.deadlineName \u003d deadlineName;"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"        this.date \u003d date;"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"     * execute add task command"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"     * call TaskManager to add the particular task"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"     * and Ui to display add message"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"     * @param tm Associated TaskManager"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"     * @param ui Associated Ui"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"    public void execute(TaskManager tm, Ui ui) {"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"        Task task;"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":"        if (this.date \u003d\u003d null) {"},{"lineNumber":53,"author":{"gitId":"gycc7253"},"content":"            task \u003d new Deadline(deadlineName, keyword, dateString);"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"            task \u003d new Deadline(deadlineName, keyword, date);"},{"lineNumber":56,"author":{"gitId":"gycc7253"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"        tm.addTask(task);"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"        ui.displayAfterAdd(tm.size(), task);"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":60}},{"path":"src/main/java/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import main.java.TaskManager;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import main.java.Ui;"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import main.java.entity.Event;"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import main.java.entity.Task;"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":" * Command to add a Event Task"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"public class AddEventCommand extends AddCommand {"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"    String eventName;"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"    String keyword;"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"    String dateString;"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"    LocalDate date;"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"     * Creates a command to add a Event task"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"     * @param eventName name of event"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"     * @param keyword preposition as time-specifier"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"     * @param dateString string representation of deadline"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"    public AddEventCommand(String eventName, String keyword, String dateString) {"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"        this.eventName \u003d eventName;"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"        this.dateString \u003d dateString;"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"     * Creates a command to add a Event task"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"     * @param eventName name of event"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"     * @param keyword preposition as time-specifier"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"     * @param date LocalDate representation of deadline"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"    public AddEventCommand(String eventName, String keyword, LocalDate date) {"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"        this.eventName \u003d eventName;"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"        this.date \u003d date;"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"     * execute add task command"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"     * call TaskManager to add the particular task"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"     * and Ui to display add message"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"     * @param tm Associated TaskManager"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"     * @param ui Associated Ui"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"    public void execute(TaskManager tm, Ui ui) {"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":"        Task task;"},{"lineNumber":53,"author":{"gitId":"gycc7253"},"content":"        if (this.date \u003d\u003d null) {"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"            task \u003d new Event(eventName, keyword, dateString);"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"gycc7253"},"content":"            task \u003d new Event(eventName, keyword, date);"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"        tm.addTask(task);"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"        ui.displayAfterAdd(tm.size(), task);"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":61}},{"path":"src/main/java/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import main.java.TaskManager;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import main.java.Ui;"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import main.java.entity.Task;"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import main.java.entity.Todo;"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":" * Command to add a Todo Task"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"public class AddTodoCommand extends AddCommand {"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"    private String todoName;"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"     * Creates a Command to add a Todo Task"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"     * @param todoName name of Todo Task to be added"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"    public AddTodoCommand(String todoName) {"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"        super();"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"        this.todoName \u003d todoName;"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"     * execute add task command"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"     * call TaskManager to add the particular task"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"     * and Ui to display add message"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"     * @param tm Associated TaskManager"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"     * @param ui Associated Ui"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"    public void execute(TaskManager tm, Ui ui) {"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"        Task task \u003d new Todo(todoName);"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"        tm.addTask(task);"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"        ui.displayAfterAdd(tm.size(), task);"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":37}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import main.java.TaskManager;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import main.java.Ui;"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":" * A super abstract class for Command"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":" * with default empty constructor"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":" * execute(tm, ui) function to be override"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":" * and isExit() function to be inherited or override"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"public abstract class Command {"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"     * Default empty Constructor of Command"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"    public Command() {"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"     * execute function for commands,"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"     * to be override by sub-classes"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"     * @param tm Associated TaskManager"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"     * @param ui Associated Ui"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"    public abstract void execute(TaskManager tm, Ui ui);"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"     * Check if the command will call exit"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"     * @return true only if task is ExitCommand"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"    public boolean isExit() {"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"        return false;"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":36}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import main.java.TaskManager;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import main.java.Ui;"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import main.java.entity.Task;"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":" * Command to delete a task"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"    int deleteIndex;"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"     * Creates a Command to delete a task"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"     * @param deleteIndex task-to-delete index"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"    public DeleteCommand(int deleteIndex) {"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"        super();"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"        this.deleteIndex \u003d deleteIndex;"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"     * execute delete task command"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"     * call TaskManager to delete the particular task"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"     * and Ui to display delete message"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"     * @param tm Associated TaskManager"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"     * @param ui Associated Ui"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"    public void execute(TaskManager tm, Ui ui) {"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"            if (tm.indexWithinRange(deleteIndex)) {"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"                Task task \u003d tm.deleteTask(deleteIndex);"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"                ui.displayAfterDelete(deleteIndex, task);"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"            } else {"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"                ui.displayOutOfRange(deleteIndex);"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"        } catch (Exception e) {"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"            System.out.println(e);"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":42}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import main.java.TaskManager;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import main.java.Ui;"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import main.java.entity.Task;"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":" * Command to mark a task as done"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"public class DoneCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"    int doneIndex;"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"     * Creates a DoneCommand instance"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"     * @param doneIndex index of the task to be mark as done"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"    public DoneCommand(int doneIndex) {"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"        super();"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"        this.doneIndex \u003d doneIndex;"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"     * execute done task command"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"     * call TaskManager to mark the particular task as done"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"     * and Ui to display done message"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"     * @param tm Associated TaskManager"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"     * @param ui Associated Ui"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"    public void execute(TaskManager tm, Ui ui) {"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"            if (tm.indexWithinRange(doneIndex)) {"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"                Task task \u003d tm.done(doneIndex);"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"                ui.displayAfterDone(task);"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"            } else {"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"                ui.displayOutOfRange(doneIndex);"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"        } catch (Exception e) {"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"            e.printStackTrace();"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":42}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import main.java.TaskManager;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import main.java.Ui;"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":" * Command to call exit of Duke"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"public class ExitCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"     * Simply exit Duke"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"     * @param tm Associated TaskManager"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"     * @param ui Associated Ui"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"    public void execute(TaskManager tm, Ui ui) {"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"        ui.displayExit();"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"     * Check if the Command is ExitCommand"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"     * @return true"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"    public boolean isExit() {"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"        return true;"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":29}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import main.java.TaskManager;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import main.java.Ui;"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import main.java.entity.Task;"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":" * Command to find tasks associated with a search keyword"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"public class FindCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"    String keyword;"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"     * Create a search command to search tasks with a specific keyword"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"     * @param keyword keyword string to search for"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"     * Call task manager to search for keywords"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"     * then call ui to display the taks"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"     * @param tm Associated TaskManager"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"     * @param ui Associated Ui"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"    public void execute(TaskManager tm, Ui ui) {"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"        List\u003cTask\u003e result \u003d tm.findByKeyword(keyword);"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"        ui.displaySearchResult(result);"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":35}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import main.java.TaskManager;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import main.java.Ui;"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":" * Command to list all tasks"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"public class ListCommand  extends Command {"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"     * execute list tasks command"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"     * call TaskManager get a list of all tasks"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"     * and Ui to display all these tasks"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"     * @param tm Associated TaskManager"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"     * @param ui Associated Ui"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"    public void execute(TaskManager tm, Ui ui) {"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"        if (tm.isEmpty()) {"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"            ui.displayEmptyList();"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"            ui.displayAllTasks(tm.getList());"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":26}},{"path":"src/main/java/command/WrongCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import main.java.TaskManager;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import main.java.Ui;"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":" * WrongCommand to inform user of the issue"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"public class WrongCommand extends Command{"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"    String message;"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"     * Creates a WrongCommand with only general message"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"    public WrongCommand() {"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"     * Creates a WrongCommand with a particular reason message"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"     * @param message WrongCommand message"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"    public WrongCommand(String message) {"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"        this.message \u003d message;"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"     * Call Ui to display error message"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"     * @param tm Associated TaskManager"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"     * @param ui Associated Ui"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"    public void execute(TaskManager tm, Ui ui) {"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"        if (message !\u003d null) {"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"            ui.displayWrongCommand(message);"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"            ui.displayWrongCommand();"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":40}},{"path":"src/main/java/entity/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.entity;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":" * Represents a Deadline Task"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":" * A Deadline Task can be described with either name, keyword, deadlineString[, isDone]"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":" * or name, keyword, deadlineDate[, isDone]"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"public class Deadline extends Task {"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"    protected String keyword;"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"    protected String deadline;"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"    protected LocalDate deadlineDate;"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"     * Creates a Deadline task whose default isDone status is false"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"     * and whose deadline is described by a string"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"     * @param name name of task"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"     * @param keyword preposition describing relationship to deadline specified"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"     * @param deadline string representation of deadline"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"    public Deadline(String name, String keyword, String deadline) {"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"        super(name);"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"     * Creates a Deadline task whose default isDone status is false"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"     * and whose deadline is described by a LocalDate data deadlineDate"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"     * @param name name of task"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"     * @param keyword preposition describing relationship to deadline specified"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"     * @param deadlineDate LocalDate representation of deadline"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"    public Deadline(String name, String keyword, LocalDate deadlineDate) {"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"        super(name);"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"     * Creates a Deadline task whose isDone status is given as input"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"     * and whose deadline is described by a string"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"     * @param name name of task"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"     * @param keyword preposition describing relationship to deadline specified"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"     * @param deadline string representation of deadline"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"     * @param isDone boolean isDone status"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"    public Deadline(String name, String keyword, String deadline, boolean isDone) {"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":"        super(name, isDone);"},{"lineNumber":53,"author":{"gitId":"gycc7253"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"     * Creates a Deadline task whose isDone status is given as input"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"     * and whose deadline is described by a LocalDate data deadlineDate"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"     * @param name name of task"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"     * @param keyword preposition describing relationship to deadline specified"},{"lineNumber":62,"author":{"gitId":"gycc7253"},"content":"     * @param deadlineDate LocalDate representation of deadline"},{"lineNumber":63,"author":{"gitId":"gycc7253"},"content":"     * @param isDone boolean isDone status"},{"lineNumber":64,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":"    public Deadline(String name, String keyword, LocalDate deadlineDate, boolean isDone) {"},{"lineNumber":66,"author":{"gitId":"gycc7253"},"content":"        super(name, isDone);"},{"lineNumber":67,"author":{"gitId":"gycc7253"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":68,"author":{"gitId":"gycc7253"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":69,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":71,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"gycc7253"},"content":"     * Override toString() method to be displayed in Ui"},{"lineNumber":73,"author":{"gitId":"gycc7253"},"content":"     * e.g. \"[D][ ] cs2102 homework (by: 22 jan 2020)\""},{"lineNumber":74,"author":{"gitId":"gycc7253"},"content":"     * @return Display String representation of this Deadline task"},{"lineNumber":75,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":77,"author":{"gitId":"gycc7253"},"content":"    public String toString() {"},{"lineNumber":78,"author":{"gitId":"gycc7253"},"content":"        return \"[D][\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.name + \" (\" + keyword + \": \" + (this.deadlineDate \u003d\u003d null ? this.deadline : this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))) + \")\";"},{"lineNumber":79,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":81,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"gycc7253"},"content":"     * Override toFileString to be output and read from Storage"},{"lineNumber":83,"author":{"gitId":"gycc7253"},"content":"     * e.g. D|1|cs2102 homework|by|22 jan 2020"},{"lineNumber":84,"author":{"gitId":"gycc7253"},"content":"     * @return File String representation of this Deadline task"},{"lineNumber":85,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":87,"author":{"gitId":"gycc7253"},"content":"    public String toFileString() {"},{"lineNumber":88,"author":{"gitId":"gycc7253"},"content":"        return \"D|\" + (this.isDone ? \"1\" : \"0\") + \"|\" + this.name + \"|\" + this.keyword + \"|\" + (this.deadlineDate \u003d\u003d null ? this.deadline : this.deadlineDate);"},{"lineNumber":89,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":91,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":92,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":92}},{"path":"src/main/java/entity/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.entity;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":" * Represents an Event Task"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":" * A Event Task can be described with either name, keyword, time[, isDone]"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":" * or name, keyword, timeDate[, isDone]"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"public class Event extends Task {"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"    protected String keyword;"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"    protected String time;"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"    protected LocalDate timeDate;"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"     * Creates a Event task whose default isDone status is false"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"     * and whose time is described by a string"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"     * @param name name of task"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"     * @param keyword keyword describing time"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"     * @param time string representation of time for event task"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"    public Event(String name, String keyword, String time) {"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"        super(name);"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"        this.time \u003d time;"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"     * Creates a Event task whose isDone status is given as input"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"     * and whose time is described by a string"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"     * @param name name of task"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"     * @param keyword keyword describing time"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"     * @param time string representation of time for event task"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"     * @param isDone boolean status"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"    public Event(String name, String keyword, String time, boolean isDone) {"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"        super(name, isDone);"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"        this.time \u003d time;"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"     * Creates a Event task whose default isDone status is false"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"     * and whose time is described by a LocalDate data timeDate"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"     * @param name name of task"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"     * @param keyword keyword describing time"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"     * @param timeDate LocalDate time for event task"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"    public Event(String name, String keyword, LocalDate timeDate) {"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":"        super(name);"},{"lineNumber":53,"author":{"gitId":"gycc7253"},"content":"        this.timeDate \u003d timeDate;"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"     * Creates a Event task whose isDone status is given as input"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"     * and whose time is described by a LocalDate data timeDate"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"     * @param name name of task"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"     * @param keyword keyword describing time"},{"lineNumber":62,"author":{"gitId":"gycc7253"},"content":"     * @param timeDate LocalDate time for event task"},{"lineNumber":63,"author":{"gitId":"gycc7253"},"content":"     * @param isDone boolean status"},{"lineNumber":64,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":"    public Event(String name, String keyword, LocalDate timeDate, boolean isDone) {"},{"lineNumber":66,"author":{"gitId":"gycc7253"},"content":"        super(name, isDone);"},{"lineNumber":67,"author":{"gitId":"gycc7253"},"content":"        this.timeDate \u003d timeDate;"},{"lineNumber":68,"author":{"gitId":"gycc7253"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":69,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":71,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"gycc7253"},"content":"     * Override toString() method to be displayed in Ui"},{"lineNumber":73,"author":{"gitId":"gycc7253"},"content":"     * e.g. \"[E][ ] alice\u0027s birthday (on: 22 jan 2020)\""},{"lineNumber":74,"author":{"gitId":"gycc7253"},"content":"     * @return Display String representation of this Event task"},{"lineNumber":75,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":77,"author":{"gitId":"gycc7253"},"content":"    public String toString() {"},{"lineNumber":78,"author":{"gitId":"gycc7253"},"content":"        return \"[E][\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.name + \" (\" + this.keyword + \": \" + (this.timeDate \u003d\u003d null ? this.time : this.timeDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))) + \")\";"},{"lineNumber":79,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":81,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"gycc7253"},"content":"     * Override toFileString to be output and read from Storage"},{"lineNumber":83,"author":{"gitId":"gycc7253"},"content":"     * e.g. E|1|alice\u0027s birthday|on|22 jan 2020"},{"lineNumber":84,"author":{"gitId":"gycc7253"},"content":"     * @return File String representation of this Event task"},{"lineNumber":85,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":87,"author":{"gitId":"gycc7253"},"content":"    public String toFileString() {"},{"lineNumber":88,"author":{"gitId":"gycc7253"},"content":"        return \"E|\" + (this.isDone ? \"1\" : \"0\") + \"|\" + this.name + \"|\" + this.keyword + \"|\" + (this.timeDate \u003d\u003d null ? this.time : this.timeDate);"},{"lineNumber":89,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":91,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":91}},{"path":"src/main/java/entity/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.entity;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":" * An abstract class for all types of tasks"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":" * Described by Task name and isDone status"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"public abstract class Task {"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"    protected String name;"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"     * Creates a Task with given name but default isDone is false"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"     * @param name name of task"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"    public Task(String name) {"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"        this.name \u003d name;"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"     * Creates a Task with name and isDone given as input"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"     * @param name name of task"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"     * @param isDone boolean isDone status of task"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"    public Task(String name, boolean isDone) {"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"        this.name \u003d name;"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"     * Getter for Task name attribute"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"     * @return task name"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"    public String getName() {"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"        return this.name;"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"     * Getter for Task isDone status attribute"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"     * @return isDone"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"    public boolean isDone() {"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"        return this.isDone;"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"     * Change isDone attribute of this task to true"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"    public void markAsDone() {"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"        this.isDone \u003d true;"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":53,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"     * Provides API for Task and its sub-classes to call toString() method"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"     * @return Display String representation of this Task"},{"lineNumber":56,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"    public abstract String toString();"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"     * Provides API for Task and its sub-classes to call toFileString() method"},{"lineNumber":62,"author":{"gitId":"gycc7253"},"content":"     * @return File String representation of this Task"},{"lineNumber":63,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"gycc7253"},"content":"    public abstract  String toFileString();"},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":65}},{"path":"src/main/java/entity/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.entity;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":" * Represents a Todo Task"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":" * A Todo Task can be described with name and staus only"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":" */"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"public class Todo extends Task {"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"     * Creates a Todo Task whose name is given as input"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"     * and default isDone status is false"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"     * @param name name of task"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"    public Todo(String name) {"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"        super(name);"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"     * Creates a Todo Task whose name and isDone status"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"     * are both specified as input"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"     * @param name name of task"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"     * @param isDone boolean isDone status of task"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"    public Todo(String name, boolean isDone) {"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"        super(name, isDone);"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"     * Override toString() method to be displayed in Ui"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"     * e.g. \"[T][ ] get book\""},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"     * @return Display String representation of this Todo task"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"        return \"[T][\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.name;"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"     * Override toFileString to be output and read from Storage"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"     * e.g. \"T|1|get book\""},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"     * @return File String representation of this Todo task"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"    public String toFileString() {"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"        return \"T|\" + (this.isDone ? \"1\" : \"0\") + \"|\" + this.name;"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":48}},{"path":"src/main/java/exceptions/IllegalInputFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.exceptions;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"public class IllegalInputFormatException extends Exception {"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"    public IllegalInputFormatException() {"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"        super(\"    Sorry, illegal input format.\");"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":7}},{"path":"src/main/java/exceptions/TaskDoesNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.exceptions;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"public class TaskDoesNotExistException extends Exception{"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"    public TaskDoesNotExistException() {"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"        super(\"    The task your specified does not exist. Please retype.\");"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":7}},{"path":"src/main/java/exceptions/UnrecognizableInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.exceptions;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"public class UnrecognizableInputException extends Exception {"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"    public UnrecognizableInputException() {"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"        super(\"    Sorry, unrecognizable type of actions.\\n    Available actions are {todo, event, deadline, list, done, delete}\");"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":7}},{"path":"test/main/java/entity/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package main.java.entity;"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"class EventTest {"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"    void testToString() {"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"        Task task \u003d new Event(\"celebrate new year\", \"on\", \"3rd feb\");"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"        assertEquals(\"[E][ ] celebrate new year (on: 3rd feb)\", task.toString());"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"        Task task2 \u003d new Event(\"celebrate new year again\", \"on\", LocalDate.parse(\"2020-11-23\"));"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"        assertEquals(\"[E][ ] celebrate new year again (on: Nov 23 2020)\", task2.toString());"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"        Task task3 \u003d new Event(\"celebrate new year again\", \"on\", LocalDate.parse(\"2020-11-23\"), true);"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"        assertEquals(\"[E][X] celebrate new year again (on: Nov 23 2020)\", task3.toString());"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"    void toFileString() {"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"        Task task \u003d new Event(\"celebrate new year\", \"on\", \"3rd feb\");"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"        assertEquals(\"E|0|celebrate new year|on|3rd feb\", task.toFileString());"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"        Task task2 \u003d new Event(\"celebrate new year again\", \"on\", LocalDate.parse(\"2020-11-23\"));"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"        assertEquals(\"E|0|celebrate new year again|on|2020-11-23\", task2.toFileString());"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"        Task task3 \u003d new Event(\"celebrate new year again\", \"on\", LocalDate.parse(\"2020-11-23\"), true);"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"        assertEquals(\"E|1|celebrate new year again|on|2020-11-23\", task3.toFileString());"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"}"}],"authorContributionMap":{"gycc7253":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"todo get book from Jack"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"event party at pgp /on 2nd jan 2021"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"list"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"event alice bd at 12 kent ridge drive /in afternoon 3rd jan"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"deadline homework /by monday"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"list"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"list"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"list"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"todo finish testing"}],"authorContributionMap":{"gycc7253":11}},{"path":"text-ui-test/output.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"This is "},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":" ____        _        "},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"|  _ \\ _   _| | _____ "},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"| | | | | | | |/ / _ \\"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"| |_| | |_| |   \u003c  __/"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"|____/ \\__,_|_|\\_\\___|"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":""},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"Dear user, welcome to the world of duke!"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"    Got it. I\u0027ve added this task:"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"    [T][ ] get book from Jack"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"    Now you have 1 tasks in the list."},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"    Got it. I\u0027ve added this task:"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"    [E][ ] party at pgp (on: 2nd jan 2021)"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"    Now you have 2 tasks in the list."},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"    1. [T][ ] get book from Jack"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"    2. [E][ ] party at pgp (on: 2nd jan 2021)"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"    Got it. I\u0027ve added this task:"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"    [E][ ] alice bd at 12 kent ridge drive (in: afternoon 3rd jan)"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"    Now you have 3 tasks in the list."},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"    Got it. I\u0027ve added this task:"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"    [D][ ] homework (by: monday)"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"    Now you have 4 tasks in the list."},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"    1. [T][ ] get book from Jack"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"    2. [E][ ] party at pgp (on: 2nd jan 2021)"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"    3. [E][ ] alice bd at 12 kent ridge drive (in: afternoon 3rd jan)"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"    4. [D][ ] homework (by: monday)"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"    Nice! I\u0027ve mark this task as done:"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"    [E][X] party at pgp (on: 2nd jan 2021)"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"    1. [T][ ] get book from Jack"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"    2. [E][X] party at pgp (on: 2nd jan 2021)"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"    3. [E][ ] alice bd at 12 kent ridge drive (in: afternoon 3rd jan)"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"    4. [D][ ] homework (by: monday)"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"    Nice! I\u0027ve mark this task as done:"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"    [T][X] get book from Jack"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"    1. [T][X] get book from Jack"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"    2. [E][X] party at pgp (on: 2nd jan 2021)"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"    3. [E][ ] alice bd at 12 kent ridge drive (in: afternoon 3rd jan)"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"    4. [D][ ] homework (by: monday)"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"    Got it. I\u0027ve added this task:"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"    [T][ ] finish testing"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"    Now you have 5 tasks in the list."},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"Bye. Until next time!"}],"authorContributionMap":{"gycc7253":42}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"javac  -cp ..\\src\\main\\java\\Entity -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"gycc7253":1,"-":20}}]
