[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laurenlhy"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":3,"author":{"gitId":"laurenlhy"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"laurenlhy"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"laurenlhy"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"laurenlhy"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":"}"}],"authorContributionMap":{"laurenlhy":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laurenlhy"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":"    public static Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":6,"author":{"gitId":"laurenlhy"},"content":"    // Checks the user input and throws exceptions"},{"lineNumber":7,"author":{"gitId":"laurenlhy"},"content":"    public static void startResponse(String userInput) throws Exception {"},{"lineNumber":8,"author":{"gitId":"laurenlhy"},"content":"        if (userInput.equals(\"list\")) {"},{"lineNumber":9,"author":{"gitId":"laurenlhy"},"content":"            if (Response.numTasks \u003d\u003d 0) {"},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":"                throw new NullPointerException();"},{"lineNumber":11,"author":{"gitId":"laurenlhy"},"content":"            }"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"            Response.listTasks();"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":"        } else if (userInput.contains(\"done\")) {"},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.substring(5));"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"            if (taskNumber \u003c\u003d 0 || taskNumber \u003e Response.numTasks) {"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"                throw new IndexOutOfBoundsException();"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":"            }"},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":"            Response.markAsDone(taskNumber);"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"        } else if (userInput.contains(\"todo\")) {"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":"            if (userInput.length() \u003c\u003d 5) {"},{"lineNumber":21,"author":{"gitId":"laurenlhy"},"content":"                throw new IllegalArgumentException();"},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"            }"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"            Task currentTask \u003d new Todo(userInput.substring(5));"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":"            Response.addTask(currentTask);"},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"        } else if (userInput.contains(\"deadline\")) {"},{"lineNumber":26,"author":{"gitId":"laurenlhy"},"content":"            if (userInput.length() \u003c\u003d 9 || !userInput.contains(\"/\")) {"},{"lineNumber":27,"author":{"gitId":"laurenlhy"},"content":"                throw new IllegalArgumentException();"},{"lineNumber":28,"author":{"gitId":"laurenlhy"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"            int temp \u003d userInput.indexOf(\u0027/\u0027) - 1;"},{"lineNumber":30,"author":{"gitId":"laurenlhy"},"content":"            Task currentTask \u003d new Deadline(userInput.substring(9, temp),"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"                    userInput.substring(temp + 4));"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":"            Response.addTask(currentTask);"},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":"        } else if (userInput.contains(\"event\")) {"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"            if (userInput.length() \u003c\u003d 5 || !userInput.contains(\"/\")) {"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"                throw new IllegalArgumentException();"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"            int temp \u003d userInput.indexOf(\u0027/\u0027) - 1;"},{"lineNumber":38,"author":{"gitId":"laurenlhy"},"content":"            Task currentTask \u003d new Event(userInput.substring(6, temp),"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":"                    userInput.substring(temp + 4));"},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"            Response.addTask(currentTask);"},{"lineNumber":41,"author":{"gitId":"laurenlhy"},"content":"        } else if (userInput.contains(\"delete\")) {"},{"lineNumber":42,"author":{"gitId":"laurenlhy"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.substring(7));"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"            if (taskNumber \u003c\u003d 0 || taskNumber \u003e Response.numTasks) {"},{"lineNumber":44,"author":{"gitId":"laurenlhy"},"content":"                throw new IndexOutOfBoundsException();"},{"lineNumber":45,"author":{"gitId":"laurenlhy"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"laurenlhy"},"content":"            Response.deleteTask(taskNumber);"},{"lineNumber":47,"author":{"gitId":"laurenlhy"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"laurenlhy"},"content":"            throw new Exception();"},{"lineNumber":49,"author":{"gitId":"laurenlhy"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":53,"author":{"gitId":"laurenlhy"},"content":"        Response.hello();"},{"lineNumber":54,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":55,"author":{"gitId":"laurenlhy"},"content":"        while (true) {"},{"lineNumber":56,"author":{"gitId":"laurenlhy"},"content":"            try {"},{"lineNumber":57,"author":{"gitId":"laurenlhy"},"content":"                String userInput \u003d sc.nextLine();"},{"lineNumber":58,"author":{"gitId":"laurenlhy"},"content":"                if (userInput.equals(\"bye\")) {"},{"lineNumber":59,"author":{"gitId":"laurenlhy"},"content":"                    Response.bye();"},{"lineNumber":60,"author":{"gitId":"laurenlhy"},"content":"                    break;"},{"lineNumber":61,"author":{"gitId":"laurenlhy"},"content":"                }"},{"lineNumber":62,"author":{"gitId":"laurenlhy"},"content":"                startResponse(userInput);"},{"lineNumber":63,"author":{"gitId":"laurenlhy"},"content":"            } catch (IllegalArgumentException e) {"},{"lineNumber":64,"author":{"gitId":"laurenlhy"},"content":"                System.out.println(\"\\nerror: not enough information to create task!\\n\");"},{"lineNumber":65,"author":{"gitId":"laurenlhy"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":66,"author":{"gitId":"laurenlhy"},"content":"                System.out.println(\"\\nerror: task does not exist!\\n\");"},{"lineNumber":67,"author":{"gitId":"laurenlhy"},"content":"            } catch (NullPointerException e) {"},{"lineNumber":68,"author":{"gitId":"laurenlhy"},"content":"                System.out.println(\"\\nerror: there is nothing in the list!\\n\");"},{"lineNumber":69,"author":{"gitId":"laurenlhy"},"content":"            } catch (Exception e) {"},{"lineNumber":70,"author":{"gitId":"laurenlhy"},"content":"                System.out.println(\"\\nerror: sorry, I don\u0027t understand :(\\n\");"},{"lineNumber":71,"author":{"gitId":"laurenlhy"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"laurenlhy"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"laurenlhy":70,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laurenlhy"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":3,"author":{"gitId":"laurenlhy"},"content":"    protected String at;"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":"    public Event(String description, String at) {"},{"lineNumber":6,"author":{"gitId":"laurenlhy"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"laurenlhy"},"content":"        this.at \u003d at;"},{"lineNumber":8,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"laurenlhy"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"        return \"[E]\" + super.toString() + \" (at:\" + at + \")\";"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":"}"}],"authorContributionMap":{"laurenlhy":14}},{"path":"src/main/java/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laurenlhy"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":3,"author":{"gitId":"laurenlhy"},"content":"public class Response {"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":"    public static int numTasks \u003d 0;"},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":6,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":7,"author":{"gitId":"laurenlhy"},"content":"    public static void hello() {"},{"lineNumber":8,"author":{"gitId":"laurenlhy"},"content":"        System.out.println(\"\\nwhat\u0027s up? :)\\n\");"},{"lineNumber":9,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":11,"author":{"gitId":"laurenlhy"},"content":"    public static void bye() {"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"        System.out.println(\"\\nbye, have a good day! :)\\n\");"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"    public static void listTasks() { // Prints out the tasks in the list"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"        System.out.println(\"\");"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":"        for (int i \u003d 1; i \u003c numTasks + 1; i++) {"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"            System.out.println(i + \". \" + tasks.get(i - 1).toString());"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":22,"author":{"gitId":"laurenlhy"},"content":"        System.out.println(\"\");"},{"lineNumber":23,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":25,"author":{"gitId":"laurenlhy"},"content":"    public static void addTask(Task task) { // Add a task to the list"},{"lineNumber":26,"author":{"gitId":"laurenlhy"},"content":"        System.out.println(\"\\nokay, added this task:\");"},{"lineNumber":27,"author":{"gitId":"laurenlhy"},"content":"        tasks.add(numTasks, task);"},{"lineNumber":28,"author":{"gitId":"laurenlhy"},"content":"        numTasks++;"},{"lineNumber":29,"author":{"gitId":"laurenlhy"},"content":"        System.out.println(task.toString());"},{"lineNumber":30,"author":{"gitId":"laurenlhy"},"content":"        System.out.println(\"you now have a total of \" + numTasks + \" tasks.\\n\");"},{"lineNumber":31,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":33,"author":{"gitId":"laurenlhy"},"content":"    public static void markAsDone(int num) { // Marks a task as done"},{"lineNumber":34,"author":{"gitId":"laurenlhy"},"content":"        System.out.println(\"\\nokay, this task has been marked as done:\");"},{"lineNumber":35,"author":{"gitId":"laurenlhy"},"content":"        Task currentTask \u003d tasks.get(num - 1);"},{"lineNumber":36,"author":{"gitId":"laurenlhy"},"content":"        currentTask.markAsDone();"},{"lineNumber":37,"author":{"gitId":"laurenlhy"},"content":"        System.out.println(num + \". \" + currentTask.toString() + \"\\n\");"},{"lineNumber":38,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":40,"author":{"gitId":"laurenlhy"},"content":"    public static void deleteTask(int num) { // Delete a task from the list"},{"lineNumber":41,"author":{"gitId":"laurenlhy"},"content":"        System.out.println(\"\\nokay, deleted this task:\");"},{"lineNumber":42,"author":{"gitId":"laurenlhy"},"content":"        System.out.println(tasks.get(num - 1).toString());"},{"lineNumber":43,"author":{"gitId":"laurenlhy"},"content":"        tasks.remove(num - 1);"},{"lineNumber":44,"author":{"gitId":"laurenlhy"},"content":"        numTasks--;"},{"lineNumber":45,"author":{"gitId":"laurenlhy"},"content":"        System.out.println(\"you now have a total of \" + numTasks + \" tasks.\\n\");"},{"lineNumber":46,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"laurenlhy"},"content":"}"}],"authorContributionMap":{"laurenlhy":47}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laurenlhy"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"laurenlhy"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"laurenlhy"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"laurenlhy"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":"    public String getStatusIcon() {"},{"lineNumber":11,"author":{"gitId":"laurenlhy"},"content":"        return (isDone ? \"X\" : \" \"); // Done tasks are crossed"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":"    public void markAsDone() {"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"        this.isDone \u003d true;"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":18,"author":{"gitId":"laurenlhy"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"laurenlhy"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":20,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"laurenlhy"},"content":"}"}],"authorContributionMap":{"laurenlhy":21}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"laurenlhy"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":3,"author":{"gitId":"laurenlhy"},"content":"    public Todo(String description) {"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"laurenlhy"},"content":""},{"lineNumber":7,"author":{"gitId":"laurenlhy"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"laurenlhy"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"laurenlhy"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"laurenlhy"},"content":"}"}],"authorContributionMap":{"laurenlhy":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"laurenlhy"},"content":"list"},{"lineNumber":2,"author":{"gitId":"laurenlhy"},"content":"todo read book"},{"lineNumber":3,"author":{"gitId":"laurenlhy"},"content":"event"},{"lineNumber":4,"author":{"gitId":"laurenlhy"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"laurenlhy"},"content":"deadline return book"},{"lineNumber":6,"author":{"gitId":"laurenlhy"},"content":"deadline return book /by Sunday"},{"lineNumber":7,"author":{"gitId":"laurenlhy"},"content":"list"},{"lineNumber":8,"author":{"gitId":"laurenlhy"},"content":"done 1"},{"lineNumber":9,"author":{"gitId":"laurenlhy"},"content":"done 4"},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":"done 3"},{"lineNumber":11,"author":{"gitId":"laurenlhy"},"content":"list"},{"lineNumber":12,"author":{"gitId":"laurenlhy"},"content":"delete 2"},{"lineNumber":13,"author":{"gitId":"laurenlhy"},"content":"delete 2"},{"lineNumber":14,"author":{"gitId":"laurenlhy"},"content":"list"},{"lineNumber":15,"author":{"gitId":"laurenlhy"},"content":"delete 2"},{"lineNumber":16,"author":{"gitId":"laurenlhy"},"content":"bye"}],"authorContributionMap":{"laurenlhy":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"laurenlhy"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"laurenlhy":1,"-":20}}]
