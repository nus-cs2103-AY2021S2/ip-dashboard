{"authorDailyContributionsMap":{"Maurice2n97":[{"date":"2021-01-17","commitResults":[{"hash":"e6a1da79bf66da7c1c1863ae12766eaf451e9b6f","messageTitle":"Implemented greet, echo, exit","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"9e55bb8fd0ba8c86746b6a8892178c957fd5da20","messageTitle":"Added remember commands, or list them out","messageBody":"","tags":["level-2"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":5}}},{"hash":"01fd7d5fb0eb80c25244b22382e9463fbf0bb810","messageTitle":"added the Task class","messageBody":"","tags":["Task-class"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}}]},{"date":"2021-01-18","commitResults":[{"hash":"44cf088f56a0f24611d8cef7722c9764e2a028af","messageTitle":"Added functionality to Chatbot to Mark Done Tasks","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":5}}},{"hash":"c0f9f1b3667adf9faeee0c8216953f931daba018","messageTitle":"Added Deadline and ToDo tasks.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"b5d25a496093bd0cc8c968328f6226b99b316cde","messageTitle":"Added Event.java and modified toString for Deadline.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":1}}},{"hash":"da24252d82b39ca3c0890955a2611847ea4f1551","messageTitle":"Implemented tracking of three types of task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":85,"deletions":7}}},{"hash":"298103c51d1ce9f1c5cf6add628d2ba4faa84f65","messageTitle":"got rid of some duplication","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":17}}},{"hash":"61677d7daacced2b7b590565140b3748e2db9770","messageTitle":"Added tracking for three tasks req for level 4.","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"1953a00fe2744e408415b45f389f18b15369f5d4","messageTitle":"Minor changes, set up automated testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"java":{"insertions":5,"deletions":8}}},{"hash":"d8022cb78018bfee6fe741c437a9c63cb920905a","messageTitle":"Create class DukeException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"2393191ff2b0e3ffb284b384958705f63dd82319","messageTitle":"Added changes to enum","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":89,"deletions":41}}},{"hash":"f1981cccac786d678dba52a1b5b4dbef580be0bd","messageTitle":"updated additional checks for lowerCase, UpperCase, handle empty command( e.g, todo)","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":1},"java":{"insertions":31,"deletions":11}}}]},{"date":"2021-01-19","commitResults":[{"hash":"6310611acdb64d7e06b0048477695acf36b7100d","messageTitle":"Trying to fix problem with UI testing","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":4},"java":{"insertions":14,"deletions":11}}},{"hash":"f0a816fca00a2c4e25a014c7334b2ce12e2e0f06","messageTitle":"Added functionality to delete Tasks, Updated test_cases","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":27,"deletions":1}}},{"hash":"07317e30952d9668452a57a148644f00e46c804d","messageTitle":"Added comments to code.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":103,"deletions":16}}}]},{"date":"2021-01-26","commitResults":[{"hash":"ff5bb7e7987151d025857f0d75a6cf2034a07603","messageTitle":"Extract out letterCode for all subclasses of Task. Task Class and its subclasses do not have a coded letter for quickly identifying what type of Task it is. Task Class now has a String variable inside which stands for the letter code, i.e \u0027T\u0027, for task  \u0027D\u0027 for deadline Enhances readability and people would know what the variable stands for, may allow for easier generalisation between Task classes.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":8}}},{"hash":"557de9970cdb1cfc7b63c79b7bf28ad1ccb95dd2","messageTitle":"Add feature to store the taskList","messageBody":"When the program closes, memory of the original taskList is lost.\n\nStore in a text file, Use a Storage Class to fetch the data. Furthermore a Parser class will  parse the saved format.\n\nThis adds more functionality to our Duke Chatbot.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":104,"deletions":5}}},{"hash":"0a0b4581b4ea7341a5e28e6a4a9c3dba53d1e9bd","messageTitle":"Extract out classes for UI and TaskList","messageBody":"Main method requires cleanup as it is being cluttered with too many methods.\n\nExtracting out the useful methods for UI into the UI class and seperately implementing a Tasklist class would be more organised and enhance readability. Also it would conform to SLAP principles.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":89,"deletions":15}}},{"hash":"d523dd03ff523ed6cbb74b1cc615ee933a3e999b","messageTitle":"Extract date from Event description","messageBody":"For Deadline and Event classes, we need a way to parse and store the dates associated with these two classes.\n\nStatic methods in Parser allows for parsing based on the date. So far the only recognisable format is  yyyy-MM-DD. F\nuture iterations could have more date formats.\n\nThis would facilitate future features which can categorise events based on their dates.\n","fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":2}}},{"hash":"02a16098678318075f26aa11824c06016b58ff70","messageTitle":"fix missing newline output","messageBody":"Upon writing to the file there was no newline seperator between entries to the duke.txt\n\nHaving newline makes it easier to read the txt file and the bug would also cause problems reading from duke.txt\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":1},"java":{"insertions":2,"deletions":2}}},{"hash":"e70d5a29f96cc72a0170e40f98d6c2fe1fda4716","messageTitle":"Handle file or directory is missing","messageBody":"There might be a problem when the program is run on other computers where they do not have the directories or files needed by duke. In this case we need to handle it by creating the files or directories for them.\n\nAdditionally added Duke constructor where the missing file or directory case will be handled.\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":1}}},{"hash":"73fe928903fa4482a84caeba5e03f6867aa181fc","messageTitle":"Fix bug of not converting between formats","messageBody":"There are two format for the string representation of Task, the readable format and the saved format. toString will return the more readable date format while the saved format is kept different\n","tags":["Level-8","Level-7"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":6},"java":{"insertions":26,"deletions":19}}},{"hash":"8073f6e2db4f8fd046617076087335789b6bf90c","messageTitle":"Shorten Code","messageBody":"enhance readability by using DateFormatter API in java to easily extract date out from String instead of regex\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":10}}},{"hash":"4bbaa870e3c35e9bfb16eed58e116ef307a2f52e","messageTitle":"Flesh out classes before refactoring","messageBody":"Refactoring code before creating new Command class\n","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":16}}}]},{"date":"2021-01-27","commitResults":[{"hash":"643b648e459f825c128f7fd082bc487fb3fcd2a8","messageTitle":"Organise into packages and implement TaskList class wrapper","messageBody":"Organise the classes into packages as there are too many classes and some needs to be logically grouped together. The new TaskList class also acts as a wrapper over TaskList and seperates it out from the main.\n\nOrganising into packages is neater and hence we can find files fast. It also helps with maintainability. The TaskList class adheres more strongly to OOP design.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":3}}},{"hash":"d7e00d92f4ddc4b5ebe19f79c31435f9754ee459","messageTitle":"Fix bug IndexError when deleting entry from TaskList","messageBody":"running text-ui test shows a bug when deleting the last indexed entry from TaskList. A previous change to Tasklist\u0027s delete method did not subtract 1 from the indexToDelete when calling arraylist.remove.\n","fileTypesAndContributionMap":{"txt":{"insertions":16,"deletions":8},"java":{"insertions":30,"deletions":38},"sh":{"insertions":2,"deletions":2}}},{"hash":"8a677b2dad1132da6e110502c15bce7ccdef2930","messageTitle":"Minor changes to text-ui-test file","messageBody":"Minor changes, add some line breaks for readability\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":9},"java":{"insertions":8,"deletions":13}}},{"hash":"d2c8903a8bd3edc2355064201891fef519564844","messageTitle":"Create Command class and its subclasses","messageBody":"Representing the possible Actions that Duke Chatbot can take after parsing the command.\n\nBreaking into Parser Class would allow better readability and maintainability by breaking the program into smaller modules.\n\n**TODO ** Parser class would take a string and depending on the keyword parsed, will extract out the string and create the appropriate task/ command to pass to Main.\n","fileTypesAndContributionMap":{"java":{"insertions":120,"deletions":1}}},{"hash":"f3dc20f619e1d10862f4fb530993084aa3acad2f","messageTitle":"Rename packages to smallcase.","messageBody":"this is to suite java package naming conventions\n\nfix some small errors as well.\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":15}}},{"hash":"12580d8b5354c39c1f5c6c54bc14407be7deafd5","messageTitle":"Refactor Parser to parse input","messageBody":"made Parser handle parsing input into the correct Command. This is so the logic flow is clearer and all the bulk of the string processing is located in the Parser class.\n","fileTypesAndContributionMap":{"java":{"insertions":169,"deletions":6}}},{"hash":"024da4cb1458bba13648bba0ddcf442b024dc635","messageTitle":"Finish up parsing for exit and List Command.","messageBody":"Checkpoint in case I need to revert back the changes.\n","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":14}}},{"hash":"7678b22958b6394a40d6fd95d5a11d0f285e5f33","messageTitle":"Seperate out Parser Logic from Main.","messageBody":"Adhering to true OOP principles, restructure the code so that it is better organised . The Parser class handles most of the logic of reading input String and figuring out what Command to return.\nCommand.execute() carries out the calling of the UI and the storage. There is more work to be done to seperate out the Ui Logic from the Command class.\n\n** TODO ** Seperate out the printing to the ui class. Also could seperate out Date Parsing logic from the Command Parser class . For future iterations/\n","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":2},"java":{"insertions":58,"deletions":45}}},{"hash":"f189086e03a269925c1daf39bc76be88c0b97e95","messageTitle":"Remove Comments and fix minor bug.","messageBody":"sc.hasNextLine() waits for the user, thus creating an issue where at the end of execution after inputting bye, the program still waits for the user input before exiting entirely.\n\nfix : Deleted the need for a sc.hasNextLine() check.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":191}}},{"hash":"06708dbba8bfdb1727ae951a8e06f198b6a3ce10","messageTitle":"Deleted redundant function","messageBody":"hasUserInput is not used.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"20f0cb38b5fce78d3db2f6fe5a5774541f0d312b","messageTitle":"Revert \"Deleted redundant function\"","messageBody":"This reverts commit 06708dbba8bfdb1727ae951a8e06f198b6a3ce10.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"dcc58b42d8b87609c2005e386a3f52ada45ba539","messageTitle":"Delete redundant method in Ui","messageBody":"ui.hasUserInput is not used and hence deleted.\n","tags":["A-Packages","A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":3}}},{"hash":"f5e6bfc7f98d884b322e91138fb95a34d009a009","messageTitle":"Add J-Unit Tests for Deadline.","messageBody":"Add JUnit tests to test Deadline. Check two methods for correctness, the toString method,\nand the method for generating the saved String format used for storing the task in the file.\n\nThere could be instances where there is a typo that results in an incorrect String format.\nThis might lead to bugs when the tasks are being stored in another .txt file and fetched the next\ntime the app is open.\n\nJ-Unit tests help to automate the testing.\n\nLet\u0027s add unit test to check for toString method correctness.\na unit test to check the getSavedString format correctness\nand a unit test to check if Deadline throws Exception when\nno date is able to be parsed from its by String.\n","tags":["v.01","A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":81}}}]}]},"authorFileTypeContributionMap":{"Maurice2n97":{"java":776,"md":0,"fxml":0,"sh":2,"bat":0,"gradle":0,"txt":23}},"authorContributionVariance":{"Maurice2n97":63710.008},"authorDisplayNameMap":{"Maurice2n97":"- MOK ..RICE"}}
