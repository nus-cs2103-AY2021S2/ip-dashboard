[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"\u003c!-- PROJECT SHIELDS --\u003e"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"[![Issues][issues-shield]][issues-url]"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"[![Java CI][javaci-shield]][javaci-url]"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"\u003c!-- PROJECT LOGO --\u003e"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"  \u003cimg src\u003d\"https://raw.githubusercontent.com/tanboonji/ip/master/docs/images/ApplicationIcon.png\" alt\u003d\"Application Icon\" height\u003d\"240\"/\u003e"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"\u003c/p\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"\u003ch2 align\u003d\"center\"\u003eJhin\u003c/h2\u003e"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"  \u003ca href\u003d\"https://github.com/tanboonji/ip/releases\"\u003eDownload\u003c/a\u003e"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"  ·"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"  \u003ca href\u003d\"https://tanboonji.github.io/ip/\"\u003eUser Guide\u003c/a\u003e"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"  ·"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"  \u003ca href\u003d\"https://github.com/tanboonji/ip/issues\"\u003eReport Bug\u003c/a\u003e"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"  ·"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"  \u003ca href\u003d\"https://github.com/tanboonji/ip/issues\"\u003eRequest Feature\u003c/a\u003e"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"\u003c/p\u003e"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"\u003c!-- TABLE OF CONTENTS --\u003e"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"\u003cdetails open\u003d\"open\"\u003e"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"  \u003csummary\u003eTable of Contents\u003c/summary\u003e"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"  \u003col\u003e"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    \u003cli\u003e"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"      \u003ca href\u003d\"#about-the-project\"\u003eAbout The Project\u003c/a\u003e"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"      \u003cul\u003e"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        \u003cli\u003e\u003ca href\u003d\"#built-with\"\u003eBuilt With\u003c/a\u003e\u003c/li\u003e"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"      \u003c/ul\u003e"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    \u003c/li\u003e"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    \u003cli\u003e"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"      \u003ca href\u003d\"#getting-started\"\u003eGetting Started\u003c/a\u003e"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"      \u003cul\u003e"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        \u003cli\u003e\u003ca href\u003d\"#prerequisites\"\u003ePrerequisites\u003c/a\u003e\u003c/li\u003e"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        \u003cli\u003e\u003ca href\u003d\"#installation\"\u003eInstallation\u003c/a\u003e\u003c/li\u003e"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"      \u003c/ul\u003e"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    \u003c/li\u003e"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    \u003cli\u003e\u003ca href\u003d\"#contributing\"\u003eContributing\u003c/a\u003e\u003c/li\u003e"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    \u003cli\u003e\u003ca href\u003d\"#contact\"\u003eContact\u003c/a\u003e\u003c/li\u003e"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    \u003cli\u003e\u003ca href\u003d\"#acknowledgements\"\u003eAcknowledgements\u003c/a\u003e\u003c/li\u003e"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"  \u003c/ol\u003e"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"\u003c/details\u003e"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"\u003c!-- ABOUT THE PROJECT --\u003e"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"## About The Project"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"  \u003cimg src\u003d\"https://raw.githubusercontent.com/tanboonji/ip/master/docs/images/Startup.png\" alt\u003d\"Startup Screenshot\" height\u003d\"700\"/\u003e"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"\u003c/p\u003e"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"Jhin is a **desktop chatbot app for managing your tasks** so that you can focus on doing than remembering. It is"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"optimized for use via a **Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"(GUI)."},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"### Built With"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"* [Java 11](https://www.oracle.com/java/)"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"* [JavaFX](https://openjfx.io/)"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"\u003c!-- GETTING STARTED --\u003e"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"## Getting Started"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"The simple way to start using Jhin is to download the latest version of Jhin from [here](https://github.com/tanboonji/ip/releases) and follow"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"the installation steps in the [Jhin User Guide](https://tanboonji.github.io/ip/#quick-start)."},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"Alternatively, you can follow the installation steps below to set up Jhin as a project in IntelliJ."},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"### Prerequisites"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"1. Ensure that you have [**Java 11**](https://www.oracle.com/java/) or above installed in your computer."},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"2. Ensure that you have the latest version of [**IntelliJ**](https://www.jetbrains.com/idea/) installed in your computer."},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"### Installation"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"1. Clone the repository to your local computer."},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"    ```shell"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"    git clone https://github.com/tanboonji/ip.git"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    ```"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"2. Open Jhin as a project in IntelliJ."},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"   * In IntelliJ, click `File` \u003e `Open`."},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"   * Select the local repository directory and click `OK`."},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"3. Ensure that the Project SDK is configured to JDK 11."},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"   * In IntelliJ, click `File` \u003e `Project Structure`"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"   * If your Project SDK is not configured to JDK 11, you can follow this [guide](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) to do so."},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"4. After opening the project and ensuring that JDK 11 is configured, locate `src/main/java/com/tanboonji/jhin/Launcher.java` file in the project, "},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"   right click and select `Run Launcher.main()`. The GUI should appear in a few seconds."},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"\u003c!-- CONTRIBUTING --\u003e"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"## Contributing"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"Contributions are what make the open source community such an amazing place to learn, inspire, and create. Any"},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"contributions you make are **greatly appreciated**."},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"1. Fork the Project"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"3. Commit your Changes (`git commit -m \u0027Add some AmazingFeature\u0027`)"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"4. Push to the Branch (`git push origin feature/AmazingFeature`)"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"5. Open a Pull Request"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"\u003c!-- CONTACT --\u003e"},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"## Contact"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"Boon Ji - [Github](https://github.com/tanboonji) - [Email](mailto:tanboonji@hotmail.com)"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"Project Link: [https://github.com/tanboonji/ip](https://github.com/tanboonji/ip)"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":117,"author":{"gitId":"tanboonji"},"content":"\u003c!-- ACKNOWLEDGEMENTS --\u003e"},{"lineNumber":118,"author":{"gitId":"tanboonji"},"content":"## Acknowledgements"},{"lineNumber":119,"author":{"gitId":"tanboonji"},"content":"* [se-edu/addressbook-level-3](https://github.com/se-edu/addressbook-level3)"},{"lineNumber":120,"author":{"gitId":"tanboonji"},"content":"* [othneildrew/Best-README-Template](https://github.com/othneildrew/Best-README-Template)"},{"lineNumber":121,"author":{"gitId":"tanboonji"},"content":"* [badges/shields](https://github.com/badges/shields)"},{"lineNumber":122,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":123,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":124,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":125,"author":{"gitId":"tanboonji"},"content":"\u003c!-- MARKDOWN LINKS \u0026 IMAGES --\u003e"},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":"[issues-shield]: https://img.shields.io/github/issues/tanboonji/ip"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"[issues-url]: https://github.com/tanboonji/ip/issues"},{"lineNumber":128,"author":{"gitId":"tanboonji"},"content":"[javaci-shield]: https://github.com/tanboonji/ip/workflows/Java%20CI/badge.svg"},{"lineNumber":129,"author":{"gitId":"tanboonji"},"content":"[javaci-url]: https://github.com/tanboonji/ip/actions"}],"authorContributionMap":{"tanboonji":124,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"java {"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_11;"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_11;"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"}"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    mainClassName \u003d \"com.tanboonji.jhin.Launcher\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"    archiveBaseName \u003d \"jhin\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"    enableAssertions \u003d true"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tanboonji":23,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"  \u003cimg src\u003d\"https://raw.githubusercontent.com/tanboonji/ip/master/docs/images/ApplicationIcon.png\" alt\u003d\"Application Icon\" height\u003d\"240\"/\u003e"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"\u003c/p\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"# Jhin User Guide"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"Jhin is a **desktop chatbot app for managing your tasks** so that you can focus on doing than remembering. It is"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"optimized for use via a **Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"(GUI)."},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"* [Quick Start](#quick-start)"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"* [Features](#features)"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"  * [Listing all tasks: `list`, `ls`](#listing-all-tasks-list-ls)"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"  * [Adding a todo task: `todo`](#adding-a-todo-task-todo)"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"  * [Adding a deadline task: `deadline`](#adding-a-deadline-task-deadline)"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"  * [Adding an event task: `event`](#adding-an-event-task-event)"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"  * [Marking a task as done: `done`](#marking-a-task-as-done-done)"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"  * [Deleting a task: `delete`, `rm`](#deleting-a-task-delete-rm)"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"  * [Finding a task by description: `find`, `search`](#finding-a-task-by-description-find-search)"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"  * [Listing all command aliases: `listalias`, `lsalias`](#listing-all-command-aliases-listalias-lsalias)"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"  * [Adding a command alias: `alias`](#adding-a-command-alias-alias)"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"  * [Deleting a command alias: `deletealias`, `rmalias`](#deleting-a-command-alias-deletealias-rmalias)"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"  * [Viewing help: `help`](#viewing-help-help)"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"  * [Exiting the application: `bye`, `exit`](#exiting-the-application-bye-exit)"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"* [Command Summary](#command-summary)"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"* [Miscellaneous](#miscellaneous)"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"  * [Auto Save](#auto-save)"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"  * [Transferring Your Data](#transferring-your-data)"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"  * [Date Time Support](#date-time-format)"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    * [Date Format](#date-format)"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    * [Time Format](#time-format)"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"## Quick Start"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"1. Ensure that you have [**Java 11**](https://www.oracle.com/java/) or above installed in your computer."},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"2. Download the latest `jhin.jar` from [here](https://github.com/tanboonji/ip/releases)."},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"3. Copy the jar file to the folder you want to use as the **home folder** for your Jhin."},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"4. Double-click the jar file to start Jhin. The GUI similar to the below should appear in a few seconds."},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    * If the app does not start, you can use the following command in your command prompt to start the app."},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"      ```shell"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"      java -jar jhin.jar"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"      ```"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"\u003cimg src\u003d\"https://raw.githubusercontent.com/tanboonji/ip/master/docs/images/Startup.png\" alt\u003d\"Startup Screenshot\" height\u003d\"700\" align\u003d\"center\"/\u003e\u003cbr\u003e"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"5. Start using Jhin!"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"* `[COMMAND1, COMMAND2]`: The command can be executed with either `COMMAND1` or `COMMAND2`."},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"* `\u003cVALUE\u003e`: This command argument is compulsory."},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"* `{VALUE}`: This command argument is optional."},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"### Listing all tasks: `list`, `ls`"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"Shows a list of all tasks in Jhin."},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"Format: `[list, ls]`"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"Example:"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"* `list`"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"* `ls`"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"### Adding a todo task: `todo`"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"Adds a todo task to Jhin."},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"Format: `todo \u003cdescription\u003e`"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"Example:"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"* `todo read book`"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"* `todo do iP`"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"### Adding a deadline task: `deadline`"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"Adds a deadline task to Jhin."},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"Format: `deadline \u003cdescription\u003e /by {date} {time}`"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"* The list of accepted date time format can be found [here](#date-time-format)."},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"* If no date is entered, the date will be automatically set to the current date today."},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"* If no time is entered, the time will be automatically set to 11:59PM."},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"Example:"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"* `deadline return book /by 01012021 0000`"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"* `deadline finish iP /by 020221`"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"### Adding an event task: `event`"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"Adds an event task to Jhin."},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"Format: `event \u003cdescription\u003e /at {date} {time}`"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"* The list of accepted date time format can be found [here](#date-time-format)."},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"* If no date is entered, the date will be automatically set to the current date today."},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"* If no time is entered, the time will be automatically set to 11:59PM."},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"Example:"},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"* `event book release /at 15022021 14`"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"* `event midterms /at`"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"### Marking a task as done: `done`"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"Marks the specified task as completed."},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"Format: `done \u003ctask index\u003e`"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"* The task index is shown in the [`list`, `ls` command](#listing-all-tasks-list-ls)."},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"* The task index must be a positive integer."},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"Example:"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":"* `done 1`"},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":"* `done 10`"},{"lineNumber":117,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":118,"author":{"gitId":"tanboonji"},"content":"### Deleting a task: `delete`, `rm`"},{"lineNumber":119,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":120,"author":{"gitId":"tanboonji"},"content":"Deletes the specified task from Jhin."},{"lineNumber":121,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":122,"author":{"gitId":"tanboonji"},"content":"Format: `[delete, rm] \u003ctask index\u003e`"},{"lineNumber":123,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":124,"author":{"gitId":"tanboonji"},"content":"* The task index is shown in the [`list`, `ls`](#listing-all-tasks-list-ls) command."},{"lineNumber":125,"author":{"gitId":"tanboonji"},"content":"* The task index must be a positive integer."},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"Example:"},{"lineNumber":128,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":129,"author":{"gitId":"tanboonji"},"content":"* `delete 1`"},{"lineNumber":130,"author":{"gitId":"tanboonji"},"content":"* `delete 10`"},{"lineNumber":131,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":132,"author":{"gitId":"tanboonji"},"content":"### Finding a task by description: `find`, `search`"},{"lineNumber":133,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":134,"author":{"gitId":"tanboonji"},"content":"Finds all the tasks whose description contains the given keyword."},{"lineNumber":135,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":136,"author":{"gitId":"tanboonji"},"content":"Format: `[find, search] {keyword}`"},{"lineNumber":137,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":138,"author":{"gitId":"tanboonji"},"content":"* The search is not case-sensitive, therefore *books* will match *Books*."},{"lineNumber":139,"author":{"gitId":"tanboonji"},"content":"* Only the task description will be searched."},{"lineNumber":140,"author":{"gitId":"tanboonji"},"content":"* Partial words will be matched, therefore *bo* will match *books*."},{"lineNumber":141,"author":{"gitId":"tanboonji"},"content":"* If no keyword is entered, all tasks in Jhin will be shown."},{"lineNumber":142,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":143,"author":{"gitId":"tanboonji"},"content":"Example:"},{"lineNumber":144,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":145,"author":{"gitId":"tanboonji"},"content":"* `find`"},{"lineNumber":146,"author":{"gitId":"tanboonji"},"content":"* `search book`"},{"lineNumber":147,"author":{"gitId":"tanboonji"},"content":"* `find iP`"},{"lineNumber":148,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":149,"author":{"gitId":"tanboonji"},"content":"### Listing all command aliases: `listalias`, `lsalias`"},{"lineNumber":150,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":151,"author":{"gitId":"tanboonji"},"content":"Shows a list of all aliases in Jhin."},{"lineNumber":152,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":153,"author":{"gitId":"tanboonji"},"content":"Format: `[listalias, lsalias]`"},{"lineNumber":154,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":155,"author":{"gitId":"tanboonji"},"content":"Example:"},{"lineNumber":156,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":157,"author":{"gitId":"tanboonji"},"content":"* `listalias`"},{"lineNumber":158,"author":{"gitId":"tanboonji"},"content":"* `ls`"},{"lineNumber":159,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":160,"author":{"gitId":"tanboonji"},"content":"### Adding a command alias: `alias`"},{"lineNumber":161,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":162,"author":{"gitId":"tanboonji"},"content":"Adds a command alias to Jhin."},{"lineNumber":163,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":164,"author":{"gitId":"tanboonji"},"content":"Format: `alias \u003calias\u003e \u003ccommand\u003e`"},{"lineNumber":165,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":166,"author":{"gitId":"tanboonji"},"content":"Example:"},{"lineNumber":167,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":168,"author":{"gitId":"tanboonji"},"content":"* `alias l list`"},{"lineNumber":169,"author":{"gitId":"tanboonji"},"content":"* `alias da deletealias`"},{"lineNumber":170,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":171,"author":{"gitId":"tanboonji"},"content":"### Deleting a command alias: `deletealias`, `rmalias`"},{"lineNumber":172,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":173,"author":{"gitId":"tanboonji"},"content":"Deletes the specified alias from Jhin."},{"lineNumber":174,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":175,"author":{"gitId":"tanboonji"},"content":"Format: `[deletealias, rmalias] \u003calias\u003e`"},{"lineNumber":176,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":177,"author":{"gitId":"tanboonji"},"content":"Example:"},{"lineNumber":178,"author":{"gitId":"tanboonji"},"content":"* `deletealias l`"},{"lineNumber":179,"author":{"gitId":"tanboonji"},"content":"* `rmalias da`"},{"lineNumber":180,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":181,"author":{"gitId":"tanboonji"},"content":"### Viewing help: `help`"},{"lineNumber":182,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":183,"author":{"gitId":"tanboonji"},"content":"Shows a list of all commands and their format in Jhin."},{"lineNumber":184,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":185,"author":{"gitId":"tanboonji"},"content":"Format: `help`"},{"lineNumber":186,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":187,"author":{"gitId":"tanboonji"},"content":"### Exiting the application: `bye`, `exit`"},{"lineNumber":188,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":189,"author":{"gitId":"tanboonji"},"content":"Exits the program."},{"lineNumber":190,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":191,"author":{"gitId":"tanboonji"},"content":"Format: `[bye, exit]`"},{"lineNumber":192,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":193,"author":{"gitId":"tanboonji"},"content":"Example:"},{"lineNumber":194,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":195,"author":{"gitId":"tanboonji"},"content":"* `bye`"},{"lineNumber":196,"author":{"gitId":"tanboonji"},"content":"* `exit`"},{"lineNumber":197,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":198,"author":{"gitId":"tanboonji"},"content":"## Command Summary"},{"lineNumber":199,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":200,"author":{"gitId":"tanboonji"},"content":"Action | Command | Format, Examples"},{"lineNumber":201,"author":{"gitId":"tanboonji"},"content":"---|---|---"},{"lineNumber":202,"author":{"gitId":"tanboonji"},"content":"List task | `list`, `ls` | `[list, ls]` \u003cbr\u003e e.g. `list`, `ls`"},{"lineNumber":203,"author":{"gitId":"tanboonji"},"content":"Add todo | `todo` | `todo \u003cdescription\u003e` \u003cbr\u003e e.g.`todo read book`, `todo do iP`"},{"lineNumber":204,"author":{"gitId":"tanboonji"},"content":"Add deadline | `deadline` | `deadline \u003cdescription\u003e /by {date} {time}` \u003cbr\u003e e.g. `deadline return book /by 01012021 0000`, \u003cbr\u003e `deadline finish iP /by 020221`"},{"lineNumber":205,"author":{"gitId":"tanboonji"},"content":"Add event | `event` | `event \u003cdescription\u003e /at {date} {time}` \u003cbr\u003e e.g. `event book release /at 15022021 14`, \u003cbr\u003e `event midterms /at`"},{"lineNumber":206,"author":{"gitId":"tanboonji"},"content":"Mark task as done| `done` | `done \u003ctask index\u003e` \u003cbr\u003e e.g. `done 1`, `done 10`"},{"lineNumber":207,"author":{"gitId":"tanboonji"},"content":"Delete task | `delete`, `rm` | `[delete, rm] \u003ctask index\u003e` \u003cbr\u003e e.g. `delete 1`, `rm 10`"},{"lineNumber":208,"author":{"gitId":"tanboonji"},"content":"Find task | `find`, `search` | `[find, search] {keyword}` \u003cbr\u003e e.g. `find`, `search book`, `find iP`"},{"lineNumber":209,"author":{"gitId":"tanboonji"},"content":"List alias | `listalias`, `lsalias` | `[listalias, lsalias]` \u003cbr\u003e e.g. `listalias`, `lsalias`"},{"lineNumber":210,"author":{"gitId":"tanboonji"},"content":"Add alias | `alias` | `alias \u003calias\u003e \u003ccommand\u003e` \u003cbr\u003e e.g. `alias l list`, `alias da deletealias`"},{"lineNumber":211,"author":{"gitId":"tanboonji"},"content":"Delete alias | `deletealias`, `rmalias` | `[deletealias, rmalias]` \u003cbr\u003e e.g. `deletealias l`, `rmalias da`"},{"lineNumber":212,"author":{"gitId":"tanboonji"},"content":"Help | `help` | `help`"},{"lineNumber":213,"author":{"gitId":"tanboonji"},"content":"Exit application | `bye`, `exit` | `[bye, exit]` \u003cbr\u003e e.g. `bye`, `exit`"},{"lineNumber":214,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":215,"author":{"gitId":"tanboonji"},"content":"## Miscellaneous"},{"lineNumber":216,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":217,"author":{"gitId":"tanboonji"},"content":"### Auto Save"},{"lineNumber":218,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":219,"author":{"gitId":"tanboonji"},"content":"Jhin automatically saves all the data onto your local computer whenever any data is updated. You do not need to worry"},{"lineNumber":220,"author":{"gitId":"tanboonji"},"content":"about losing your data."},{"lineNumber":221,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":222,"author":{"gitId":"tanboonji"},"content":"### Transferring Your Data"},{"lineNumber":223,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":224,"author":{"gitId":"tanboonji"},"content":"You can transfer all your saved data to another computer by copying the saved data files on your current computer to"},{"lineNumber":225,"author":{"gitId":"tanboonji"},"content":"your new computer. The saved data files are located in the same directory as your .jar file."},{"lineNumber":226,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":227,"author":{"gitId":"tanboonji"},"content":"There are two saved data files:"},{"lineNumber":228,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":229,"author":{"gitId":"tanboonji"},"content":"* task.data"},{"lineNumber":230,"author":{"gitId":"tanboonji"},"content":"* alias.data"},{"lineNumber":231,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":232,"author":{"gitId":"tanboonji"},"content":"### Date Time Format"},{"lineNumber":233,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":234,"author":{"gitId":"tanboonji"},"content":"Jhin supports a variety of date time formats so that you do not need to enter the full date time every time."},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"tanboonji"},"content":"* Missing date will be automatically set to the current date today."},{"lineNumber":237,"author":{"gitId":"tanboonji"},"content":"* Missing time will be automatically set to 11:59PM."},{"lineNumber":238,"author":{"gitId":"tanboonji"},"content":"* Missing date time will be automatically set to the current date today, 11:59PM."},{"lineNumber":239,"author":{"gitId":"tanboonji"},"content":"* Date time in Jhin will be shown in the 12-hours clock."},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"tanboonji"},"content":"#### Date Format"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"tanboonji"},"content":"List of supported date formats:"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"tanboonji"},"content":"Date Format | Example"},{"lineNumber":246,"author":{"gitId":"tanboonji"},"content":"---|---"},{"lineNumber":247,"author":{"gitId":"tanboonji"},"content":"ddMMyyyy | 01012021"},{"lineNumber":248,"author":{"gitId":"tanboonji"},"content":"ddMMyy | 010121"},{"lineNumber":249,"author":{"gitId":"tanboonji"},"content":"dd/MM/yyyy | 01/01/2021"},{"lineNumber":250,"author":{"gitId":"tanboonji"},"content":"dd/MM/yy | 01/01/21"},{"lineNumber":251,"author":{"gitId":"tanboonji"},"content":"dd-MM-yyyy | 01-01-2021"},{"lineNumber":252,"author":{"gitId":"tanboonji"},"content":"dd-MM-yy | 01-01-21"},{"lineNumber":253,"author":{"gitId":"tanboonji"},"content":"dd.MM.yyyy | 01.01.2021"},{"lineNumber":254,"author":{"gitId":"tanboonji"},"content":"dd.MM.yy | 01.01.21"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"tanboonji"},"content":"#### Time Format"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"tanboonji"},"content":"List of support time formats:"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"tanboonji"},"content":"Time Format | Example"},{"lineNumber":261,"author":{"gitId":"tanboonji"},"content":"---|---"},{"lineNumber":262,"author":{"gitId":"tanboonji"},"content":"hmma | 1100PM"},{"lineNumber":263,"author":{"gitId":"tanboonji"},"content":"h:mma | 11:00PM"},{"lineNumber":264,"author":{"gitId":"tanboonji"},"content":"ha | 11PM"},{"lineNumber":265,"author":{"gitId":"tanboonji"},"content":"HHmm | 2300"},{"lineNumber":266,"author":{"gitId":"tanboonji"},"content":"HH:mm| 23:00"},{"lineNumber":267,"author":{"gitId":"tanboonji"},"content":"HH | 23"}],"authorContributionMap":{"tanboonji":250,"-":17}},{"path":"src/main/java/com/tanboonji/jhin/Jhin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.Command;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.JhinException;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.AliasMap;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.TaskList;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.parser.CommandParser;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":" * The Jhin class manages the task list and data storage, executes commands and return command responses."},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"public class Jhin {"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Jhin.\\n\""},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"            + \"What can I do for you today?\";"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    private static final String EXIT_MESSAGE \u003d \"Sorry, command cannot be executed.\\n\""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"            + \"I am currently shutting down...\";"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    private Storage storage;"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    private TaskList taskList;"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    private AliasMap aliasMap;"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    private boolean isShuttingDown \u003d false;"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"     * Default class constructor."},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    public Jhin() {"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"     * Initialises Jhin by loading task list from storage."},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"     * @return String response from initialisation."},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If any error occurred while loading data from local disk."},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    public String initialise() throws JhinException {"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        storage \u003d new Storage();"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"            taskList \u003d storage.loadTask();"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"            aliasMap \u003d storage.loadAlias();"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        } catch (JhinException e) {"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"            isShuttingDown \u003d true;"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"            throw e;"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        assert(taskList !\u003d null);"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        return WELCOME_MESSAGE;"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"     * Executes user command and returns response from command."},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"     * @param input User input command."},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"     * @return String response from executing user command."},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If any error occurred while executing command."},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"    public String getResponse(String input) throws JhinException {"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        if (isShuttingDown) {"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"            throw new JhinException(EXIT_MESSAGE);"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"        input \u003d CommandParser.parseAlias(input, aliasMap);"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"        Command command \u003d CommandParser.parseCommand(input);"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"        command.addTaskList(taskList);"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"        command.addAlias(aliasMap);"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"        String result \u003d command.execute();"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"        if (command.shouldSaveData()) {"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"            saveData();"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"        if (command.shouldExitJhin()) {"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"            isShuttingDown \u003d true;"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"        return result;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"     * Saves task list and alias map data to local disk."},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If an error occurs while saving data to local disk."},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"    public void saveData() throws JhinException {"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"        storage.saveTask(taskList);"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"        storage.saveAlias(aliasMap);"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"     * Returns boolean variable stating if Jhin is shutting down."},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"     * @return True if Jhin is shutting down, else false."},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"    public boolean isShuttingDown() {"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"        return isShuttingDown;"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tanboonji":94,"-":2}},{"path":"src/main/java/com/tanboonji/jhin/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":" *  The Launcher class launches the main application."},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"     * Launches the Main class."},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"     * @param args Command line arguments."},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":18}},{"path":"src/main/java/com/tanboonji/jhin/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.ui.MainWindow;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import javafx.application.Application;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import javafx.stage.Stage;"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":" * The Main class creates the Jhin application and launches the JavaFX UI."},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"public class Main extends Application {"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    private static final String APPLICATION_NAME \u003d \"Jhin\";"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    private final Image applicationImage \u003d"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"            new Image(this.getClass().getResourceAsStream(\"/images/ApplicationIcon.png\"));"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    private final Jhin jhin \u003d new Jhin();"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"     * Launches MainWindow scene and links the scene to Jhin application."},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"     * @param stage Root JavaFX stage."},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    public void start(Stage stage) {"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"            stage.setScene(scene);"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJhin(jhin);"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"            stage.setTitle(APPLICATION_NAME);"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"            stage.setResizable(false);"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"            stage.getIcons().add(applicationImage);"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"            stage.show();"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"            e.printStackTrace();"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"    public void stop() {"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"        System.exit(0);"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":50}},{"path":"src/main/java/com/tanboonji/jhin/command/AliasCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Matcher;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Pattern;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.InvalidCommandArgumentException;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.JhinException;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":" * The AliasCommand class contains information to execute the \"alias\" command."},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"public class AliasCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"^(\\\\S+)\\\\s+(\\\\S+)$\");"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_ARGUMENT_MESSAGE \u003d \"Sorry, the alias command you entered is invalid.\\n\""},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"                    + \"Please enter a valid alias command in the following format:\\n\""},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"                    + \"alias \u003calias\u003e \u003ccommand\u003e\";"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_COMMAND_MESSAGE_FORMAT \u003d"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"            \"Sorry, the command \u0027%s\u0027 you entered is invalid.\\n\""},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"                    + \"Please enter a valid command and try again.\";"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_ALIAS_MESSAGE_FORMAT \u003d"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"            \"Sorry, the alias \u0027%s\u0027 you entered is a default command.\\n\""},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"            + \"Please enter another alias and try again.\";"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    private static final String SUCCESS_MESSAGE_FORMAT \u003d \"Got it. I\u0027ve added this alias:\\n\""},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"            + \"%s\";"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    private static final int ALIAS_GROUP \u003d 1;"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    private static final int COMMAND_GROUP \u003d 2;"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    private final String alias;"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    private final String command;"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"     * Default class constructor."},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    public AliasCommand(String alias, String command) {"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        this.alias \u003d alias;"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        this.command \u003d command;"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSaveData() {"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldExitJhin() {"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    public String execute() {"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        String newAlias \u003d aliasMap.addAlias(command, alias);"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        return String.format(SUCCESS_MESSAGE_FORMAT, newAlias);"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"     * Returns new alias command after parsing command arguments."},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"     * @param arguments Command arguments."},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"     * @return New alias command."},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If arguments does not match alias command format or contains invalid arguments."},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"    public static AliasCommand parseArguments(String arguments) throws JhinException {"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"        Matcher matcher \u003d COMMAND_FORMAT.matcher(arguments);"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"        if (!matcher.matches()) {"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandArgumentException(INVALID_ARGUMENT_MESSAGE);"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"        String alias \u003d matcher.group(ALIAS_GROUP);"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"        String command \u003d matcher.group(COMMAND_GROUP);"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"        if (Command.isCommandValid(alias)) {"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandArgumentException(String.format(INVALID_ALIAS_MESSAGE_FORMAT, alias));"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"        if (!Command.isCommandValid(command)) {"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandArgumentException(String.format(INVALID_COMMAND_MESSAGE_FORMAT, command));"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"        return new AliasCommand(alias, command);"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":81}},{"path":"src/main/java/com/tanboonji/jhin/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":" * The ByeCommand class contains information to execute the \"bye\" command."},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"public class ByeCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    private static final String SUCCESS_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"     * Default class constructor."},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    public ByeCommand() {"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSaveData() {"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldExitJhin() {"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    public String execute() {"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        return SUCCESS_MESSAGE;"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":30}},{"path":"src/main/java/com/tanboonji/jhin/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.JhinException;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.AliasMap;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.TaskList;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":" * The Command class is an abstract class and its subclasses contain information to execute the respective commands."},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    /** Enum of all commands available in Jhin */"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    public enum CommandType {"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"        ALIAS,"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"        BYE,"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"        DEADLINE,"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"        DELETEALIAS,"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"        DELETE,"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"        DONE,"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"        EVENT,"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"        FIND,"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"        HELP,"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        LISTALIAS,"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"        LIST,"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"        TODO,"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        // alternative command name"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        EXIT,"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        SEARCH,"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        RM,"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        RMALIAS,"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        LS,"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        LSALIAS"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    protected TaskList taskList;"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    protected AliasMap aliasMap;"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"     * Default class constructor."},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    public Command() {"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"     * Adds task list to command."},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"     * @param taskList Task list to be added."},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    public void addTaskList(TaskList taskList) {"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"     * Adds alias map to command."},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"     * @param aliasMap Alias map to be added."},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"    public void addAlias(AliasMap aliasMap) {"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"        this.aliasMap \u003d aliasMap;"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"     * Returns boolean value indicating if any tasks are updated and requires client to save updated data to file."},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"     * @return True if tasks are updated, else false."},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"    public abstract boolean shouldSaveData();"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"     * Returns boolean value indicating if the command causes Jhin to exit."},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"     * @return True if Jhin exits, else false."},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"    public abstract boolean shouldExitJhin();"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"     * Executes the command and returns response of command after execution."},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"     * @return Response of command after execution."},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If any error occurs during command creation and execution."},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"    public abstract String execute() throws JhinException;"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"     * Checks if command is valid or not."},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"     * @param command Command type."},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"     * @return True if command is valid, else false."},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"    public static boolean isCommandValid(String command) {"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"            CommandType.valueOf(command.toUpperCase());"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"            return true;"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"            return false;"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":98}},{"path":"src/main/java/com/tanboonji/jhin/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Matcher;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Pattern;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.InvalidCommandArgumentException;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.JhinException;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.Deadline;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.Task;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.parser.DateParser;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":" * The DeadlineCommand class contains information to execute the \"deadline\" command."},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(.*)\\\\s(?\u003d/by)/by\\\\s*(.*)\");"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_ARGUMENT_MESSAGE \u003d \"Sorry, the deadline command you entered is invalid.\\n\""},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"                    + \"Please enter a valid deadline command in the following format:\\n\""},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"                    + \"deadline \u003cdescription\u003e /by {date} {time}\";"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    private static final String SUCCESS_MESSAGE_FORMAT \u003d \"Got it. I\u0027ve added this deadline task:\\n\""},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"            + \"%s\\n\""},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"            + \"Now you have %d %s.\";"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    private static final String TASK_SINGULAR \u003d \"task\";"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    private static final String TASK_PLURAL \u003d \"tasks\";"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    private static final int DESCRIPTION_GROUP \u003d 1;"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    private static final int DATE_GROUP \u003d 2;"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    private final String description;"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    private final LocalDateTime by;"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    private DeadlineCommand(String description, LocalDateTime by) {"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        this.description \u003d description;"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        this.by \u003d by;"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSaveData() {"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldExitJhin() {"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    public String execute() {"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        Task newTask \u003d new Deadline(description, by);"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        taskList.addTask(newTask);"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        String taskSingularPlural \u003d (taskList.getSize() \u003e 1) ? TASK_PLURAL : TASK_SINGULAR;"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        return String.format(SUCCESS_MESSAGE_FORMAT, newTask, taskList.getSize(), taskSingularPlural);"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"     * Returns new deadline command after parsing command arguments."},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"     * @param arguments Command arguments."},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"     * @return New deadline command."},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If arguments does not match deadline command format."},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"    public static DeadlineCommand parseArguments(String arguments) throws JhinException {"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"        Matcher matcher \u003d COMMAND_FORMAT.matcher(arguments);"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"        if (!matcher.matches()) {"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandArgumentException(INVALID_ARGUMENT_MESSAGE);"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"        String description \u003d matcher.group(DESCRIPTION_GROUP).trim();"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"        LocalDateTime by \u003d DateParser.parseDateTime(matcher.group(DATE_GROUP).trim());"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"        return new DeadlineCommand(description, by);"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":75}},{"path":"src/main/java/com/tanboonji/jhin/command/DeleteAliasCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Matcher;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Pattern;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.InvalidCommandArgumentException;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.JhinException;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":" * The DeleteAliasCommand class contains information to execute the \"delete\" command."},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"public class DeleteAliasCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"^(\\\\S+)$\");"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_ARGUMENT_MESSAGE \u003d \"Sorry, the delete alias command you entered is invalid.\\n\""},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"                    + \"Please enter a valid delete alias command in the following format:\\n\""},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"                    + \"[deletealias, rmalias] \u003calias\u003e\";"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    private static final String SUCCESS_MESSAGE_FORMAT \u003d \"Noted! I\u0027ve removed this alias:\\n\""},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"            + \"%s\";"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_ALIAS_MESSAGE_FORMAT \u003d \"Sorry, I couldn\u0027t find the alias \u0027%s\u0027 to delete.\\n\""},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"            + \"Please enter a valid alias and try again.\";"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    private final String alias;"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    private DeleteAliasCommand(String alias) {"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        this.alias \u003d alias;"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSaveData() {"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldExitJhin() {"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    public String execute() {"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        if (!aliasMap.containsAlias(alias)) {"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"            return String.format(INVALID_ALIAS_MESSAGE_FORMAT, alias);"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        String deletedAlias \u003d aliasMap.deleteAlias(alias);"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        return String.format(SUCCESS_MESSAGE_FORMAT, deletedAlias);"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"     * Returns new delete alias command after parsing command arguments."},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"     * @param arguments Command arguments."},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"     * @return New delete alias command."},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If arguments does not match deletealias command format or alias does not exist."},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"    public static DeleteAliasCommand parseArguments(String arguments) throws JhinException {"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"        Matcher matcher \u003d COMMAND_FORMAT.matcher(arguments);"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        if (!matcher.matches()) {"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandArgumentException(INVALID_ARGUMENT_MESSAGE);"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"        return new DeleteAliasCommand(arguments);"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":64}},{"path":"src/main/java/com/tanboonji/jhin/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Matcher;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Pattern;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.InvalidCommandArgumentException;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.JhinException;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.Task;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":" * The DeleteCommand class contains information to execute the \"delete\" command."},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"^(\\\\S+)$\");"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_ARGUMENT_MESSAGE \u003d \"Sorry, the delete command you entered is invalid.\\n\""},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"                    + \"Please enter a valid delete command in the following format:\\n\""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"                    + \"[delete, rm] \u003ctask number\u003e\";"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_TASK_NUMBER_MESSAGE_FORMAT \u003d"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"            \"Sorry, the task number \u0027%s\u0027 you entered is invalid.\\n\""},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"                    + \"Please enter a valid task number and try again.\";"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    private static final String SUCCESS_MESSAGE_FORMAT \u003d \"Noted! I\u0027ve removed this task:\\n\""},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"            + \"%s\";"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    private final int taskIndex;"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    private DeleteCommand(int taskIndex) {"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        this.taskIndex \u003d taskIndex;"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSaveData() {"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldExitJhin() {"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    public String execute() throws JhinException {"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"            Task task \u003d taskList.deleteTask(taskIndex);"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"            return String.format(SUCCESS_MESSAGE_FORMAT, task);"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"            int indexOneBase \u003d taskIndex + 1;"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandArgumentException(String.format(INVALID_TASK_NUMBER_MESSAGE_FORMAT, indexOneBase));"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"     * Returns new delete command after parsing command arguments."},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"     * @param arguments Command arguments."},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"     * @return New delete command."},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If arguments does not match delete command format or task index is not an integer."},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"    public static DeleteCommand parseArguments(String arguments) throws JhinException {"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"        Matcher matcher \u003d COMMAND_FORMAT.matcher(arguments);"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"        if (!matcher.matches()) {"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandArgumentException(INVALID_ARGUMENT_MESSAGE);"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"        int taskIndex;"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"            taskIndex \u003d Integer.parseInt(arguments) - 1;"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandArgumentException(String.format(INVALID_TASK_NUMBER_MESSAGE_FORMAT, arguments));"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"        if (taskIndex \u003c 0) {"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandArgumentException(String.format(INVALID_TASK_NUMBER_MESSAGE_FORMAT, arguments));"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"        return new DeleteCommand(taskIndex);"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":77}},{"path":"src/main/java/com/tanboonji/jhin/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Matcher;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Pattern;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.InvalidCommandArgumentException;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.JhinException;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.Task;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":" * The DoneCommand class contains information to execute the \"done\" command."},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"public class DoneCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"^(\\\\S+)$\");"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_ARGUMENT_MESSAGE \u003d \"Sorry, the done command you entered is invalid.\\n\""},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"                    + \"Please enter a valid done command in the following format:\\n\""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"                    + \"done \u003ctask number\u003e\";"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_TASK_NUMBER_MESSAGE_FORMAT \u003d"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"            \"Sorry, the task number \u0027%s\u0027 you entered is invalid.\\n\""},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"                    + \"Please enter a valid task number and try again.\";"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    private static final String TASK_ALREADY_DONE_MESSAGE \u003d"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"            \"Sorry, the task you entered is already done.\\n\""},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"                    + \"Please enter a task that is not done and try again.\";"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    private static final String SUCCESS_MESSAGE_FORMAT \u003d \"Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"            + \"%s\";"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    private final int taskIndex;"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    private DoneCommand(int taskIndex) {"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        this.taskIndex \u003d taskIndex;"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSaveData() {"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldExitJhin() {"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    public String execute() throws JhinException {"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"            if (taskList.isTaskDone(taskIndex)) {"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"                throw new InvalidCommandArgumentException(TASK_ALREADY_DONE_MESSAGE);"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"            Task task \u003d taskList.markTaskAsDone(taskIndex);"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"            return String.format(SUCCESS_MESSAGE_FORMAT, task);"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"            int indexOneBase \u003d taskIndex + 1;"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandArgumentException(String.format(INVALID_TASK_NUMBER_MESSAGE_FORMAT, indexOneBase));"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"     * Returns new done command after parsing command arguments."},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"     * @param arguments Command arguments."},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"     * @return New done command."},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If user input is not an integer."},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"    public static DoneCommand parseArguments(String arguments) throws JhinException {"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"        Matcher matcher \u003d COMMAND_FORMAT.matcher(arguments);"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"        if (!matcher.matches()) {"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandArgumentException(INVALID_ARGUMENT_MESSAGE);"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"        int taskIndex;"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"            taskIndex \u003d Integer.parseInt(arguments) - 1;"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandArgumentException(String.format(INVALID_TASK_NUMBER_MESSAGE_FORMAT, arguments));"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"        if (taskIndex \u003c 0) {"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandArgumentException(String.format(INVALID_TASK_NUMBER_MESSAGE_FORMAT, arguments));"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"        return new DoneCommand(taskIndex);"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":84}},{"path":"src/main/java/com/tanboonji/jhin/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Matcher;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Pattern;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.InvalidCommandArgumentException;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.JhinException;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.Event;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.Task;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.parser.DateParser;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":" * The EventCommand class contains information to execute the \"event\" command."},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"public class EventCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(.*)\\\\s(?\u003d/at)/at\\\\s*(.*)\");"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_ARGUMENT_MESSAGE \u003d \"Sorry, the event command you entered is invalid.\\n\""},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"                    + \"Please enter a valid event command in the following format:\\n\""},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"                    + \"event \u003cdescription\u003e /at {date} {time}\";"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    private static final String SUCCESS_MESSAGE_FORMAT \u003d \"Got it. I\u0027ve added this event task:\\n\""},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"            + \"%s\\n\""},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"            + \"Now you have %d %s.\";"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    private static final String TASK_SINGULAR \u003d \"task\";"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    private static final String TASK_PLURAL \u003d \"tasks\";"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    private static final int DESCRIPTION_GROUP \u003d 1;"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    private static final int DATE_GROUP \u003d 2;"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    private final String description;"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    private final LocalDateTime at;"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    private EventCommand(String description, LocalDateTime at) {"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        this.description \u003d description;"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        this.at \u003d at;"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSaveData() {"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldExitJhin() {"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    public String execute() {"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        Task newTask \u003d new Event(description, at);"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        taskList.addTask(newTask);"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        String taskSingularPlural \u003d (taskList.getSize() \u003e 1) ? TASK_PLURAL : TASK_SINGULAR;"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        return String.format(SUCCESS_MESSAGE_FORMAT, newTask, taskList.getSize(), taskSingularPlural);"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"     * Returns new event command after parsing command arguments."},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"     * @param arguments Command arguments."},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"     * @return New event command."},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If user input does not match event command format."},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"    public static EventCommand parseArguments(String arguments) throws JhinException {"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"        Matcher matcher \u003d COMMAND_FORMAT.matcher(arguments);"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"        if (!matcher.matches()) {"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandArgumentException(INVALID_ARGUMENT_MESSAGE);"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"        String description \u003d matcher.group(DESCRIPTION_GROUP).trim();"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"        LocalDateTime at \u003d DateParser.parseDateTime(matcher.group(DATE_GROUP).trim());"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"        return new EventCommand(description, at);"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":75}},{"path":"src/main/java/com/tanboonji/jhin/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.TaskList;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":" * The FindCommand class contains information to execute the \"find\" command."},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"public class FindCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    private static final String SUCCESS_MATCH_MESSAGE_FORMAT \u003d \"Here are the matching tasks in your task list:\\n\""},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"            + \"%s\";"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    private static final String SUCCESS_NO_MATCH_MESSAGE_FORMAT \u003d"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"            \"Sorry, I couldn\u0027t find any tasks matching \u0027%s\u0027 in your task list.\";"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    private final String keyword;"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"     * Class constructor specifying keyword to be searched in task list."},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"     * @param keyword Keyword to be searched in task list."},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSaveData() {"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldExitJhin() {"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    public String execute() {"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        TaskList matchingTask \u003d taskList.find(keyword);"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        if (matchingTask.getSize() \u003d\u003d 0) {"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"            return String.format(SUCCESS_NO_MATCH_MESSAGE_FORMAT, keyword);"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        return String.format(SUCCESS_MATCH_MESSAGE_FORMAT, matchingTask);"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":46}},{"path":"src/main/java/com/tanboonji/jhin/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":" * The HelpCommand class contains information to execute the \"help\" command."},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"public class HelpCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    /** Command list for help message */"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    public static final String COMMAND_LIST \u003d \"Commands available:\\n\""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"            + \"- [list, ls]\\n\""},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"            + \"- todo \u003cdescription\u003e\\n\""},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"            + \"- deadline \u003cdescription\u003e /by {date} {time}\\n\""},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"            + \"- event \u003cdescription\u003e /at {date} {time}\\n\""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"            + \"- done \u003ctask number\u003e\\n\""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"            + \"- [delete, rm] \u003ctask number\u003e\\n\""},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"            + \"- [find, search] {keyword}\\n\""},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"            + \"- [listalias, lsalias]\\n\""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"            + \"- alias \u003calias\u003e \u003ccommand\u003e\\n\""},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"            + \"- [deletealias, rmalias] \u003calias\u003e\\n\""},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"            + \"- help\\n\""},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"            + \"- [bye, exit]\\n\";"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"     * Default class constructor."},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    public HelpCommand() {"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSaveData() {"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldExitJhin() {"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    public String execute() {"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        return COMMAND_LIST;"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":43}},{"path":"src/main/java/com/tanboonji/jhin/command/ListAliasCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":" * The ListAliasCommand class contains information to execute the \"list\" command."},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"public class ListAliasCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    private static final String SUCCESS_MESSAGE_FORMAT \u003d \"Here are the your aliases:\\n\""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"            + \"%s\";"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    private static final String SUCCESS_EMPTY_ALIAS_MESSAGE \u003d \"You currently have 0 aliases.\";"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"     * Default class constructor."},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    public ListAliasCommand() {"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSaveData() {"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldExitJhin() {"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    public String execute() {"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        if (aliasMap.getSize() \u003d\u003d 0) {"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"            return SUCCESS_EMPTY_ALIAS_MESSAGE;"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        return String.format(SUCCESS_MESSAGE_FORMAT, aliasMap);"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":36}},{"path":"src/main/java/com/tanboonji/jhin/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":" * The ListCommand class contains information to execute the \"list\" command."},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"public class ListCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    private static final String SUCCESS_MESSAGE_FORMAT \u003d \"Here are the tasks in your task list:\\n\""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"            + \"%s\";"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    private static final String SUCCESS_EMPTY_TASK_MESSAGE \u003d \"You currently have 0 tasks.\";"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"     * Default class constructor."},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    public ListCommand() {"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSaveData() {"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldExitJhin() {"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    public String execute() {"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        if (taskList.getSize() \u003d\u003d 0) {"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"            return SUCCESS_EMPTY_TASK_MESSAGE;"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        return String.format(SUCCESS_MESSAGE_FORMAT, taskList);"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":36}},{"path":"src/main/java/com/tanboonji/jhin/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.InvalidCommandArgumentException;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.JhinException;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.Task;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.ToDo;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":" * The ToDoCommand class contains information to execute the \"todo\" command."},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"public class ToDoCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_ARGUMENT_MESSAGE \u003d \"Sorry, the todo command you entered is invalid.\\n\""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"            + \"Please enter a todo event command in the following format:\\n\""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"            + \"todo \u003cdescription\u003e\";"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    private static final String SUCCESS_MESSAGE_FORMAT \u003d \"Got it. I\u0027ve added this todo task:\\n\""},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"            + \"%s\\n\""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"            + \"Now you have %d %s.\";"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    private static final String TASK_SINGULAR \u003d \"task\";"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    private static final String TASK_PLURAL \u003d \"tasks\";"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    private final String description;"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    private ToDoCommand(String description) {"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"        this.description \u003d description;"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSaveData() {"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldExitJhin() {"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    public String execute() {"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        Task newTask \u003d new ToDo(description);"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        taskList.addTask(newTask);"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        String taskSingularPlural \u003d (taskList.getSize() \u003e 1) ? TASK_PLURAL : TASK_SINGULAR;"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        return String.format(SUCCESS_MESSAGE_FORMAT, newTask, taskList.getSize(), taskSingularPlural);"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"     * Returns new todo command after parsing command arguments."},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"     * @param arguments Command arguments."},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"     * @return New todo command."},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If user input does not match todo command format."},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    public static ToDoCommand parseArguments(String arguments) throws JhinException {"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        if (arguments.isEmpty()) {"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandArgumentException(INVALID_ARGUMENT_MESSAGE);"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        return new ToDoCommand(arguments);"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":60}},{"path":"src/main/java/com/tanboonji/jhin/exception/InvalidCommandArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.exception;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":" * The InvalidCommandArgumentException class is a custom exception for invalid command arguments in the Jhin"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":" * application."},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"public class InvalidCommandArgumentException extends JhinException {"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"     * Class constructor specifying the error message for the exception."},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"     * @param message Error message for exception."},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    public InvalidCommandArgumentException(String message) {"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"        super(message);"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":17}},{"path":"src/main/java/com/tanboonji/jhin/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.exception;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":" * The InvalidCommandException class is a custom exception for invalid commands in the Jhin application."},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"public class InvalidCommandException extends JhinException {"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"     * Class constructor specifying the error message for the exception."},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"     * @param message Error message for exception."},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    public InvalidCommandException(String message) {"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"        super(message);"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":16}},{"path":"src/main/java/com/tanboonji/jhin/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.exception;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":" * The InvalidDateTimeException class is a custom exception for the invalid date time in the Jhin application."},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"public class InvalidDateTimeException extends JhinException {"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"     * Class constructor specifying the error message for the exception."},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"     * @param message Error message for exception."},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    public InvalidDateTimeException(String message) {"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"        super(message);"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":16}},{"path":"src/main/java/com/tanboonji/jhin/exception/JhinException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.exception;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":" * The JhinException class is a custom exception for the Jhin application."},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"public class JhinException extends Exception {"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"     * Class constructor specifying the error message for the exception."},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"     * @param message Error message for exception."},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    public JhinException(String message) {"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"        super(message);"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":16}},{"path":"src/main/java/com/tanboonji/jhin/model/AliasMap.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.model;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.io.Serializable;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.HashMap;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":" * The AliasMap class contains the hash map of alias."},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"public class AliasMap implements Serializable {"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    private static final String aliasFormat \u003d \"%s\u003d\u0027%s\u0027\";"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    private final HashMap\u003cString, String\u003e aliasMap;"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"     * Class constructor specifying a hash map of alias to be initialised to."},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"     * @param aliasMap Hash map of alias."},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    public AliasMap(HashMap\u003cString, String\u003e aliasMap) {"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"        this.aliasMap \u003d aliasMap;"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    public int getSize() {"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"        return aliasMap.size();"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"     * Adds a new command alias and returns the new alias."},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"     * @param command Command to be aliased."},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"     * @param alias Alias to be aliased to command."},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"     * @return New alias."},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    public String addAlias(String command, String alias) {"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        aliasMap.put(alias, command);"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        return String.format(aliasFormat, alias, command);"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"     * Deletes an alias by command alias and returns deleted alias."},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"     * @param alias Alias to be deleted."},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"     * @return String information on deleted alias."},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    public String deleteAlias(String alias) {"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        String command \u003d aliasMap.get(alias);"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        aliasMap.remove(alias);"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"        return String.format(aliasFormat, alias, command);"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"     * Checks if user alias input exist in alias hash map."},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"     * @param alias User alias input."},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"     * @return True if alias exist, else false."},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"    public boolean containsAlias(String alias) {"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        return aliasMap.containsKey(alias);"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"    public String getAlias(String alias) {"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"        return aliasMap.get(alias);"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"    public String toString() {"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"        for (String alias: aliasMap.keySet()) {"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"            builder.append(\"- \")"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"                    .append(String.format(aliasFormat, alias, aliasMap.get(alias)))"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"                    .append(\"\\n\");"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"        return builder.toString();"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":76}},{"path":"src/main/java/com/tanboonji/jhin/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.model;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.parser.DateParser;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":" * The Deadline class stores information about a deadline task."},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    protected LocalDateTime by;"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"     * Class constructor specifying the description and deadline of task."},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"     * @param description Task description."},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"     * @param by Task deadline."},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"        this.by \u003d by;"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateParser.toString(by) + \")\";"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":29}},{"path":"src/main/java/com/tanboonji/jhin/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.model;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.parser.DateParser;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":" * The Event class stores information about an event task."},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    protected LocalDateTime at;"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"     * Class constructor specifying the description and event date of task."},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"     * @param description Task description."},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"     * @param at Task event date."},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    public Event(String description, LocalDateTime at) {"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"        this.at \u003d at;"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + DateParser.toString(at) + \")\";"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":29}},{"path":"src/main/java/com/tanboonji/jhin/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.model;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.io.Serializable;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":" * The Task class stores information about a task."},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"public class Task implements Serializable {"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    protected String description;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    protected boolean isDone;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"     * Class constructor specifying the description of task."},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"     * @param description Task description."},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    public Task(String description) {"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"        isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    public String getStatusIcon() {"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"     * Checks if the task is done."},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"     * @return True if task is done, else false."},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    public boolean isDone() {"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        return isDone;"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"     * Marks the task as done."},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"     * @return Task itself after getting marked as done."},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    public Task markAsDone() {"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        isDone \u003d true;"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        return this;"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"     * Returns boolean value indicating if keyword can be found in task description."},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"     * @param keyword Keyword to be searched in task description."},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"     * @return True if keyword can be found in task description, else false."},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    public boolean containsText(String keyword) {"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        return description.toLowerCase().contains(keyword.toLowerCase());"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"    public String toString() {"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":60}},{"path":"src/main/java/com/tanboonji/jhin/model/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.model;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.io.Serializable;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":" * The TaskList class contains the list of task."},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"public class TaskList implements Serializable {"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    private final ArrayList\u003cTask\u003e taskList;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"     * Class constructor specifying an array list of task for task list to be initialised to."},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"     * @param taskList Array list of task."},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    public int getSize() {"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        return taskList.size();"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"     * Returns a TaskList of tasks which contains the keyword in its description."},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"     * @param keyword Keyword to search for in task description."},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"     * @return TaskList of tasks containing keyword in its description."},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    public TaskList find(String keyword) {"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        ArrayList\u003cTask\u003e matchingList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        for (Task task: taskList) {"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"            if (task.containsText(keyword)) {"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"                matchingList.add(task);"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        return new TaskList(matchingList);"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"     * Adds a new task to the task list."},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"     * @param task New task to be added."},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    public void addTask(Task task) {"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        taskList.add(task);"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"     * Marks a task as done in task list by index in array list."},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"     * @param index Index of task in array list."},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"     * @return Task that is marked as done."},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"    public Task markTaskAsDone(int index) {"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"        Task task \u003d taskList.get(index);"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"        return task.markAsDone();"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"     * Checks if a task is done in task list by index in array list."},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"     * @param index Index of task in array list."},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"     * @return True if task is done, else false."},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"    public boolean isTaskDone(int index) {"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"        return taskList.get(index).isDone();"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"     * Deletes a task in task list by index in array list."},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"     * @param index Index of task in array list."},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"     * @return Task that is deleted."},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"    public Task deleteTask(int index) {"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"        return taskList.remove(index);"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"    public String toString() {"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"        int numbering \u003d 1;"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"        for (Task task: taskList) {"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"            builder.append(numbering++)"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"                    .append(\". \")"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"                    .append(task)"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"                    .append(\"\\n\");"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"        return builder.toString();"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":97}},{"path":"src/main/java/com/tanboonji/jhin/model/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.model;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":" * The ToDo class stores information about a todo task."},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"     * Class constructor specifying the description of task."},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"     * @param description Task description."},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    public ToDo(String description) {"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":21}},{"path":"src/main/java/com/tanboonji/jhin/parser/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.parser;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Matcher;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Pattern;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.AliasCommand;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.ByeCommand;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.Command;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.Command.CommandType;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.DeadlineCommand;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.DeleteAliasCommand;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.DeleteCommand;"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.DoneCommand;"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.EventCommand;"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.FindCommand;"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.HelpCommand;"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.ListAliasCommand;"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.ListCommand;"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.ToDoCommand;"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.InvalidCommandException;"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.JhinException;"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.AliasMap;"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":" * The CommandParser class helps to parse user string input into respective intended command."},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"public class CommandParser {"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"\\\\W*(\\\\S+)\\\\s*(.*)\");"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_COMMAND_MESSAGE \u003d \"Sorry, the command you entered is invalid.\\n\""},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"            + \"Please enter a valid command.\\n\";"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    private static final int COMMAND_GROUP \u003d 1;"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    private static final int ARGUMENTS_GROUP \u003d 2;"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"     * Parses input from alias to full actual command."},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"     * Replace alias with full actual command if alias is found, else return input as it is."},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"     * @param input User string input."},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"     * @param aliasMap Alias hash map."},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"     * @return Full actual command."},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    public static String parseAlias(String input, AliasMap aliasMap) {"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        Matcher matcher \u003d COMMAND_FORMAT.matcher(input);"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        if (!matcher.matches()) {"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"            return input;"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"        String command \u003d matcher.group(COMMAND_GROUP).trim();"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        String arguments \u003d matcher.group(ARGUMENTS_GROUP).trim();"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        if (aliasMap.containsAlias(command)) {"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"            command \u003d aliasMap.getAlias(command);"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"        return command + \" \" + arguments;"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"     * Parses input from String class to Command class."},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"     * Returns respective intended command if input is successfully parsed, else returns invalid command."},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"     * @param input User string input."},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"     * @return Respective intended command with arguments or invalid command."},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If any error occurs while parsing command from String class to Command class."},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"    public static Command parseCommand(String input) throws JhinException {"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"        Matcher matcher \u003d COMMAND_FORMAT.matcher(input);"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"        if (!matcher.matches()) {"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandException(INVALID_COMMAND_MESSAGE);"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"        String command \u003d matcher.group(COMMAND_GROUP).trim();"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"        String arguments \u003d matcher.group(ARGUMENTS_GROUP).trim();"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"        if (!Command.isCommandValid(command)) {"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandException(INVALID_COMMAND_MESSAGE);"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"        switch (CommandType.valueOf(command.toUpperCase())) {"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"        case TODO:"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"            return ToDoCommand.parseArguments(arguments);"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"        case EVENT:"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"            return EventCommand.parseArguments(arguments);"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"        case DEADLINE:"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"            return DeadlineCommand.parseArguments(arguments);"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"        case LIST:"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"        case LS:"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"            return new ListCommand();"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"        case DONE:"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"            System.out.println(arguments);"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"            return DoneCommand.parseArguments(arguments);"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"        case DELETE:"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"        case RM:"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"            return DeleteCommand.parseArguments(arguments);"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"        case HELP:"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"            return new HelpCommand();"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"        case BYE:"},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"        case EXIT:"},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":"            return new ByeCommand();"},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"        case FIND:"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"        case SEARCH:"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"            return new FindCommand(arguments);"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"        case ALIAS:"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"            return AliasCommand.parseArguments(arguments);"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"        case DELETEALIAS:"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"        case RMALIAS:"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"            return DeleteAliasCommand.parseArguments(arguments);"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"        case LISTALIAS:"},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"        case LSALIAS:"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"            return new ListAliasCommand();"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"        default:"},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidCommandException(INVALID_COMMAND_MESSAGE);"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":116}},{"path":"src/main/java/com/tanboonji/jhin/parser/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.parser;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import java.time.format.DateTimeFormatterBuilder;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.InvalidDateTimeException;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.JhinException;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":" * The DateParser class helps to parse string input into date time format."},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"public class DateParser {"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    private static final String DATE_FORMAT \u003d \"[dd/MM/yyyy][dd-MM-yyyy][dd.MM.yyyy][ddMMyyyy][dd/MM/yy]\""},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"            + \"[dd-MM-yy][dd.MM.yy][ddMMyy]\";"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d new DateTimeFormatterBuilder()"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"            .parseCaseInsensitive()"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"            .appendPattern(DATE_FORMAT)"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"            .toFormatter();"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    private static final String TIME_FORMAT_24HOUR \u003d \"[HHmm][HH:mm][HH]\";"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    private static final DateTimeFormatter TIME_FORMATTER_24HOUR \u003d new DateTimeFormatterBuilder()"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"            .parseCaseInsensitive()"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"            .appendPattern(TIME_FORMAT_24HOUR)"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"            .toFormatter();"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    private static final String TIME_FORMAT_12HOUR \u003d \"[hmma][h:mma][ha]\";"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    private static final DateTimeFormatter TIME_FORMATTER_12HOUR \u003d new DateTimeFormatterBuilder()"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"            .parseCaseInsensitive()"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"            .appendPattern(TIME_FORMAT_12HOUR)"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"            .toFormatter();"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    private static final String OUTPUT_FORMAT \u003d \"dd MMM yyyy h:mma\";"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(OUTPUT_FORMAT);"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_DATE_MESSAGE_FORMAT \u003d \"Sorry, the date \u0027%s\u0027 you entered is invalid.\\n\""},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"            + \"Please enter a valid date in the following format:\\n\""},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"            + \"ddMMyyyy (01012021)\\n\""},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"            + \"ddMMyy (010121)\\n\""},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"            + \"dd/MM/yyyy (01/01/2021)\\n\""},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"            + \"dd/MM/yy (01/01/21)\\n\""},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"            + \"dd-MM-yyyy (01-01-2021)\\n\""},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"            + \"dd-MM-yy (01-01-21)\\n\""},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"            + \"dd.MM.yyyy (01.01.2021)\\n\""},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"            + \"dd.MM.yy (01.01.21)\";"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_TIME_MESSAGE_FORMAT \u003d \"Sorry, the time \u0027%s\u0027 you entered is invalid.\\n\""},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"            + \"Please enter a valid time in the following format:\\n\""},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"            + \"hmma (1100PM)\\n\""},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"            + \"h:mma (11:00PM)\\n\""},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"            + \"ha (11PM)\\n\""},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"            + \"HHmm (2300)\\n\""},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"            + \"HH:mm (23:00)\\n\""},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"            + \"HH (23)\";"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"     * Parses input from String class to LocalDateTime class."},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"     * @param input String input."},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"     * @return Date time object."},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"    public static LocalDateTime parseDateTime(String input) throws JhinException {"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"        String[] tokenizedInput \u003d input.split(\" \", 2);"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"        LocalDate date;"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"        LocalTime time;"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"        if (tokenizedInput[0].isEmpty()) {"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"            date \u003d LocalDate.now();"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"            time \u003d LocalTime.MAX;"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"        } else if (tokenizedInput.length \u003d\u003d 1) {"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"            if (isDate(tokenizedInput[0])) {"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"                date \u003d parseDate(tokenizedInput[0].trim());"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"                time \u003d LocalTime.MAX;"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"            } else if (isTime(tokenizedInput[0])) {"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"                date \u003d LocalDate.now();"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"                time \u003d parseTime(tokenizedInput[0].trim());"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"            } else {"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"                throw new InvalidDateTimeException(String.format(INVALID_DATE_MESSAGE_FORMAT, tokenizedInput[0]));"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"        } else if (tokenizedInput.length \u003d\u003d 2) {"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"            date \u003d parseDate(tokenizedInput[0].trim());"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"            time \u003d parseTime(tokenizedInput[1].trim());"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"        } else {"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidDateTimeException(String.format(INVALID_DATE_MESSAGE_FORMAT, tokenizedInput[0]));"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"        return LocalDateTime.of(date, time);"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"     * Parses input from String class to LocalDate class."},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"     * @param input String input."},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"     * @return Date object."},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If any error occurs while parsing date from String class to LocalDate class."},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"    public static LocalDate parseDate(String input) throws JhinException {"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"            return LocalDate.parse(input, DATE_FORMATTER);"},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidDateTimeException(String.format(INVALID_DATE_MESSAGE_FORMAT, input));"},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"     * Parses input from String class to LocalTime class."},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"     * @param input String input."},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"     * @return Time object."},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If any error occurs while parsing time from String class to LocalTime class."},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"    public static LocalTime parseTime(String input) throws JhinException {"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"            return LocalTime.parse(input, TIME_FORMATTER_24HOUR);"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":"            // proceed to parse with 12 hour formatter"},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":118,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":119,"author":{"gitId":"tanboonji"},"content":"            return LocalTime.parse(input, TIME_FORMATTER_12HOUR);"},{"lineNumber":120,"author":{"gitId":"tanboonji"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":121,"author":{"gitId":"tanboonji"},"content":"            throw new InvalidDateTimeException(String.format(INVALID_TIME_MESSAGE_FORMAT, input));"},{"lineNumber":122,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":125,"author":{"gitId":"tanboonji"},"content":"    private static boolean isDate(String input) {"},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"            parseDate(input);"},{"lineNumber":128,"author":{"gitId":"tanboonji"},"content":"            return true;"},{"lineNumber":129,"author":{"gitId":"tanboonji"},"content":"        } catch (JhinException e) {"},{"lineNumber":130,"author":{"gitId":"tanboonji"},"content":"            return false;"},{"lineNumber":131,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":134,"author":{"gitId":"tanboonji"},"content":"    private static boolean isTime(String input) {"},{"lineNumber":135,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":136,"author":{"gitId":"tanboonji"},"content":"            parseTime(input);"},{"lineNumber":137,"author":{"gitId":"tanboonji"},"content":"            return true;"},{"lineNumber":138,"author":{"gitId":"tanboonji"},"content":"        } catch (JhinException e) {"},{"lineNumber":139,"author":{"gitId":"tanboonji"},"content":"            return false;"},{"lineNumber":140,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":143,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"tanboonji"},"content":"     * Parses date time object to string in a specified standard format."},{"lineNumber":145,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":146,"author":{"gitId":"tanboonji"},"content":"     * @param dateTime Date time object to be formatted."},{"lineNumber":147,"author":{"gitId":"tanboonji"},"content":"     * @return String of date time object in specified standard format."},{"lineNumber":148,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"tanboonji"},"content":"    public static String toString(LocalDateTime dateTime) {"},{"lineNumber":150,"author":{"gitId":"tanboonji"},"content":"        return OUTPUT_FORMATTER.format(dateTime);"},{"lineNumber":151,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":152}},{"path":"src/main/java/com/tanboonji/jhin/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.storage;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.io.FileInputStream;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.io.FileOutputStream;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import java.io.ObjectInputStream;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import java.io.ObjectOutputStream;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import java.util.HashMap;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.JhinException;"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.AliasMap;"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.TaskList;"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":" * The Storage class manages the loading and saving of data from the local disk."},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"public class Storage {"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    private static final String LOAD_ERROR_MESSAGE \u003d"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"            \"Sorry, something went wrong while I was loading saved data from file.\";"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    private static final String SAVE_ERROR_MESSAGE \u003d \"Sorry, something went wrong while I was saving data to file.\";"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    private static final String TASK_DIR \u003d \"task.data\";"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    private static final String ALIAS_DIR \u003d \"alias.data\";"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"     * Default class constructor."},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    public Storage() {"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"     * Loads task list saved on local disk."},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"     * If task list does not exist, initialise an empty task list."},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"     * @return Task list saved on disk, if it does not exist, an empty task list is returned instead."},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If any error occurs while loading task list from disk."},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    public TaskList loadTask() throws JhinException {"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"            FileInputStream fileIn \u003d new FileInputStream(TASK_DIR);"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"            ObjectInputStream input \u003d new ObjectInputStream(fileIn);"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"            TaskList taskList \u003d (TaskList) input.readObject();"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"            input.close();"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"            fileIn.close();"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"            return taskList;"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"            return new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        } catch (IOException | ClassNotFoundException e) {"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"            throw new JhinException(LOAD_ERROR_MESSAGE);"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"     * Saves task list to disk."},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"     * @param taskList Task list to be stored to disk."},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If any error occurs while saving task list to disk."},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"    public void saveTask(TaskList taskList) throws JhinException {"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"            FileOutputStream fileOut \u003d new FileOutputStream(TASK_DIR);"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"            ObjectOutputStream output \u003d new ObjectOutputStream(fileOut);"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"            output.writeObject(taskList);"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"            output.close();"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"            fileOut.close();"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"        } catch (IOException e) {"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"            throw new JhinException(SAVE_ERROR_MESSAGE);"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"     * Loads alias saved on local disk."},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"     * If alias does not exist, initialise an empty alias hash map."},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"     * @return Alias saved on disk, if it does not exist, an empty alias hash map is returned instead."},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If any error occurs while loading alias from disk."},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"    public AliasMap loadAlias() throws JhinException {"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"            FileInputStream fileIn \u003d new FileInputStream(ALIAS_DIR);"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"            ObjectInputStream input \u003d new ObjectInputStream(fileIn);"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"            AliasMap alias \u003d (AliasMap) input.readObject();"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"            input.close();"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"            fileIn.close();"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"            return alias;"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"            return new AliasMap(new HashMap\u003c\u003e());"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"        } catch (IOException | ClassNotFoundException e) {"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"            throw new JhinException(LOAD_ERROR_MESSAGE);"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"     * Saves alias saved to disk."},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"     * @param alias Alias to be stored to disk."},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If any error occurs while saving alias to disk."},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"    public void saveAlias(AliasMap alias) throws JhinException {"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"            FileOutputStream fileOut \u003d new FileOutputStream(ALIAS_DIR);"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"            ObjectOutputStream output \u003d new ObjectOutputStream(fileOut);"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"            output.writeObject(alias);"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"            output.close();"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"            fileOut.close();"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"        } catch (IOException e) {"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"            throw new JhinException(SAVE_ERROR_MESSAGE);"},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":112}},{"path":"src/main/java/com/tanboonji/jhin/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.ui;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.shape.Rectangle;"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":" * The DialogBox class represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        Rectangle clip \u003d new Rectangle(displayPicture.getFitWidth(), displayPicture.getFitHeight());"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        clip.setArcWidth(displayPicture.getFitWidth());"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        clip.setArcHeight(displayPicture.getFitHeight());"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        displayPicture.setClip(clip);"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"     * Flips the dialog box such that the image view is on the left and text on the right."},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    private void flip() {"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        Collections.reverse(tmp);"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"     * Returns a dialog box of user with image view on the right and text on the left."},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"     * @param text Text to be added to dialog box."},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"     * @param img Image to be added to dialog box."},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"     * @return Dialog box of user."},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"        return new DialogBox(text, img);"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"     * Returns a dialog box of Jhin with image view on the left and text on the right."},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"     * @param text Text to be added to dialog box."},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"     * @param img Image to be added to dialog box."},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"     * @return Dialog box of Jhin."},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"    public static DialogBox getJhinDialog(String text, Image img) {"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"        db.flip();"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"        return db;"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":80}},{"path":"src/main/java/com/tanboonji/jhin/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin.ui;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.util.Timer;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.TimerTask;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.Jhin;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.JhinException;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import javafx.application.Platform;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import javafx.fxml.FXML;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.control.Button;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":" * The MainWindow class is the controller for MainWindow fxml."},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":" * Provides the layout for the other controls."},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    private static final String RESTART_MESSAGE \u003d \"Please delete data files on local disk and restart the application.\";"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    private static final int TWO_SECOND \u003d 2000;"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    private static final int SEVEN_SECOND \u003d 7000;"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserIcon.jpg\"));"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    private final Image jhinImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/JhinIcon.jpg\"));"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    private final Image errorImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ErrorIcon.jpg\"));"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    private VBox dialogContainer;"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    private TextField userInput;"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    private Button sendButton;"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    private Jhin jhin;"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    private boolean isShuttingDown \u003d false;"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    @FXML"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    public void initialize() {"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"     * Sets and initialises Jhin to perform execution of commands."},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"     * @param jhin Jhin to be initialised to."},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    public void setJhin(Jhin jhin) {"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        this.jhin \u003d jhin;"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"            String response \u003d this.jhin.initialise();"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"            addJhinDialog(response, false);"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"        } catch (JhinException e) {"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"            addJhinDialog(e.getMessage(), true);"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"            addJhinDialog(RESTART_MESSAGE, true);"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"            forceShutdown(SEVEN_SECOND);"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Jhin\u0027s reply and then appends them to"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"    @FXML"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"    private void handleUserInput() {"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"        String input \u003d userInput.getText().trim();"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"        String response;"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"        addUserDialog(input);"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"            response \u003d jhin.getResponse(input);"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"            addJhinDialog(response, false);"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"        } catch (JhinException e) {"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"            response \u003d e.getMessage();"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"            addJhinDialog(response, true);"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"        userInput.clear();"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"        scrollToBottom();"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"        if (jhin.isShuttingDown()) {"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"            forceShutdown(TWO_SECOND);"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"    private void addJhinDialog(String message, boolean error) {"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"        if (error) {"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"            dialogContainer.getChildren().add(DialogBox.getJhinDialog(message, errorImage));"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"            return;"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"        dialogContainer.getChildren().add(DialogBox.getJhinDialog(message, jhinImage));"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"    private void addUserDialog(String message) {"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(message, userImage));"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":"    private void scrollToBottom() {"},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"        scrollPane.applyCss();"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"        scrollPane.layout();"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"        scrollPane.setVvalue(scrollPane.getVmax());"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"    private void forceShutdown(int time) {"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"        if (!isShuttingDown) {"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"            Timer timer \u003d new Timer();"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"            timer.schedule(new TimerTask() {"},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"                @Override"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"                public void run() {"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"                    Platform.exit();"},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"                }"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":"            }, time);"},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":"        isShuttingDown \u003d true;"},{"lineNumber":117,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":118}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\""},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"           textFill\u003d\"#cccccc\" style\u003d\"-fx-padding: 10 10 10 10; -fx-background-radius: 5; -fx-background-color: #182533\"\u003e"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"        \u003cHBox.margin\u003e"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"        \u003c/HBox.margin\u003e"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    \u003c/Label\u003e"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"        \u003cHBox.margin\u003e"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"        \u003c/HBox.margin\u003e"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    \u003c/ImageView\u003e"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    \u003cpadding\u003e"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"        \u003cInsets top\u003d\"15.0\" bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\"/\u003e"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    \u003c/padding\u003e"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"tanboonji":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"750.0\""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"            prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"            fx:controller\u003d\"com.tanboonji.jhin.ui.MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" prefHeight\u003d\"710.0\" prefWidth\u003d\"600.0\" vbarPolicy\u003d\"ALWAYS\""},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"                hvalue\u003d\"1.0\" vvalue\u003d\"1.0\" style\u003d\"-fx-background-color: #0e1621; -fx-border-color: #0e1621\"\u003e"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"706.0\" prefWidth\u003d\"584.0\""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"              style\u003d\"-fx-background-color: #0e1621; -fx-border-color: #0e1621; -fx-padding: 0 2 0 0\"/\u003e"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"520.0\""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"               style\u003d\"-fx-background-color: #17212b; -fx-border-color: #17212b; -fx-text-fill: #cccccc\""},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"               promptText\u003d\"Enter your command...\" AnchorPane.bottomAnchor\u003d\"0\"/\u003e"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"520.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"            style\u003d\"-fx-background-color: #5288c1; -fx-border-color: #5288c1\""},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"            prefHeight\u003d\"40.0\" prefWidth\u003d\"80.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0\" textFill\u003d\"#eeeeee\"/\u003e"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"tanboonji":23}},{"path":"src/test/java/com/tanboonji/jhin/CommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.AliasCommand;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.ByeCommand;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.DeadlineCommand;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.DoneCommand;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.EventCommand;"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.ListCommand;"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.ToDoCommand;"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.JhinException;"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.parser.CommandParser;"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"class CommandParserTest {"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    void parse_toDoCommand_success() {"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"todo read book\", \" todo  read another book\", \"todo  more books \"};"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"                assertTrue(CommandParser.parseCommand(input).getClass().isAssignableFrom(ToDoCommand.class));"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"            } catch (JhinException e) {"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"                fail();"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    void parse_eventCommand_success() {"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"event book reading /at 01/02/2021 0000\", \" event  book reading /at 01-02-2021\","},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"            \"event  book reading /at 01.02.2021 2359 \", \"event book reading /at\"};"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"                assertTrue(CommandParser.parseCommand(input).getClass().isAssignableFrom(EventCommand.class));"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"            } catch (JhinException e) {"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"                fail();"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    void parse_deadlineCommand_success() {"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"deadline return book /by 01/02/2021 0000\", \" deadline  return book /by 01-02-2021\","},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"            \"deadline  return book /by 01.02.2021 2359 \", \"deadline return book /by\"};"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"                assertTrue(CommandParser.parseCommand(input).getClass().isAssignableFrom(DeadlineCommand.class));"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"            } catch (JhinException e) {"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"                fail();"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"    void parse_listCommand_success() {"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"list\", \" list  all\", \"list  everything \", \"ls\"};"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"                assertTrue(CommandParser.parseCommand(input).getClass().isAssignableFrom(ListCommand.class));"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"            } catch (JhinException e) {"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"                fail();"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"    void parse_doneCommand_success() {"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"done 1\", \" done  10\", \"done  100 \"};"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"                assertTrue(CommandParser.parseCommand(input).getClass().isAssignableFrom(DoneCommand.class));"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"            } catch (JhinException e) {"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"                fail();"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"    void parse_aliasCommand_success() {"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"alias la  listalias\", \" alias da  deletealias\", \"alias  l list \"};"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"                assertTrue(CommandParser.parseCommand(input).getClass().isAssignableFrom(AliasCommand.class));"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"            } catch (JhinException e) {"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"                fail();"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"    void parse_byeCommand_success() {"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"bye\", \" exit\", \"bye \"};"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"                assertTrue(CommandParser.parseCommand(input).getClass().isAssignableFrom(ByeCommand.class));"},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":"            } catch (JhinException e) {"},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"                fail();"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"    void parse_invalidCommand_jhinExceptionThrown() {"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"blah\", \"  unknown\", \"invalid  \"};"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"                CommandParser.parseCommand(input);"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"                fail();"},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"            } catch (JhinException e) {"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":"                // pass test case, no action required"},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":119,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":120,"author":{"gitId":"tanboonji"},"content":"    void parse_invalidToDoCommand_jhinExceptionThrown() {"},{"lineNumber":121,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"todo\", \"  todo\", \"todo  \"};"},{"lineNumber":122,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":123,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":124,"author":{"gitId":"tanboonji"},"content":"                CommandParser.parseCommand(input);"},{"lineNumber":125,"author":{"gitId":"tanboonji"},"content":"                fail();"},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":"            } catch (JhinException e) {"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"                // pass test case, no action required"},{"lineNumber":128,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":132,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":133,"author":{"gitId":"tanboonji"},"content":"    void parse_invalidEventCommand_jhinExceptionThrown() {"},{"lineNumber":134,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"event\", \" event  book reading\", \"event  book reading /by 01.01.2021 0000 \"};"},{"lineNumber":135,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":136,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":137,"author":{"gitId":"tanboonji"},"content":"                CommandParser.parseCommand(input);"},{"lineNumber":138,"author":{"gitId":"tanboonji"},"content":"                fail();"},{"lineNumber":139,"author":{"gitId":"tanboonji"},"content":"            } catch (JhinException e) {"},{"lineNumber":140,"author":{"gitId":"tanboonji"},"content":"                // pass test case, no action required"},{"lineNumber":141,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":145,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":146,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":147,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":148,"author":{"gitId":"tanboonji"},"content":"    void parse_invalidDeadlineCommand_jhinExceptionThrown() {"},{"lineNumber":149,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"deadline\", \" deadline  return book\", \"deadline  return book /at 01.01.2021 0000 \"};"},{"lineNumber":150,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":151,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":152,"author":{"gitId":"tanboonji"},"content":"                CommandParser.parseCommand(input);"},{"lineNumber":153,"author":{"gitId":"tanboonji"},"content":"                fail();"},{"lineNumber":154,"author":{"gitId":"tanboonji"},"content":"            } catch (JhinException e) {"},{"lineNumber":155,"author":{"gitId":"tanboonji"},"content":"                // pass test case, no action required"},{"lineNumber":156,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":157,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":160,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":161,"author":{"gitId":"tanboonji"},"content":"    void parse_invalidDoneCommand_jhinExceptionThrown() {"},{"lineNumber":162,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"done\", \" done  one\", \"done  two \", \"done -1\"};"},{"lineNumber":163,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":164,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":165,"author":{"gitId":"tanboonji"},"content":"                CommandParser.parseCommand(input);"},{"lineNumber":166,"author":{"gitId":"tanboonji"},"content":"                fail();"},{"lineNumber":167,"author":{"gitId":"tanboonji"},"content":"            } catch (JhinException e) {"},{"lineNumber":168,"author":{"gitId":"tanboonji"},"content":"                // pass test case, no action required"},{"lineNumber":169,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":170,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":173,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":174,"author":{"gitId":"tanboonji"},"content":"    void parse_markTaskAsDoneTwice_jhinExceptionThrown() {"},{"lineNumber":175,"author":{"gitId":"tanboonji"},"content":"        JhinStub jhin \u003d new JhinStub();"},{"lineNumber":176,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":177,"author":{"gitId":"tanboonji"},"content":"            jhin.initialise();"},{"lineNumber":178,"author":{"gitId":"tanboonji"},"content":"            jhin.getResponse(\"todo read book\");"},{"lineNumber":179,"author":{"gitId":"tanboonji"},"content":"            jhin.getResponse(\"done 1\");"},{"lineNumber":180,"author":{"gitId":"tanboonji"},"content":"        } catch (JhinException e) {"},{"lineNumber":181,"author":{"gitId":"tanboonji"},"content":"            fail();"},{"lineNumber":182,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":184,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":185,"author":{"gitId":"tanboonji"},"content":"            jhin.getResponse(\"done 1\");"},{"lineNumber":186,"author":{"gitId":"tanboonji"},"content":"            fail();"},{"lineNumber":187,"author":{"gitId":"tanboonji"},"content":"        } catch (JhinException e) {"},{"lineNumber":188,"author":{"gitId":"tanboonji"},"content":"            // pass test case, no action required"},{"lineNumber":189,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":191}},{"path":"src/test/java/com/tanboonji/jhin/DateParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.JhinException;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.parser.DateParser;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"class DateParserTest {"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    void parseDateTime_validDateTime_success() {"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"01/01/2021\", \"01/01/2021  0000\", \"01/01/2021  0000\","},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"            \"01.01.2021\", \"01.01.2021  0000\", \"01.01.2021  0000\","},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"            \"01-01-2021\", \"01-01-2021  0000\", \"01-01-2021  0000\","},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"            \"01012021\", \"01012021  0000\", \"01012021  0000\","},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"            \"01012021 00\", \"01/01/2021 00\", \"01-01-2021 00\", \"01.01.2021 00\","},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"            \"010121\", \"010121 00\", \"010121  0000\","},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"            \"\", \"0000\", \"2359\", \"12PM\", \"12:20AM\", \"12\", \"12:20\","},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"            \"010121 12AM\", \"010121 12:20AM\", \"010121 12\", \"010121 12:20\"};"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"                DateParser.parseDateTime(input);"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"            } catch (Exception e) {"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"                fail();"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    void testToString_validDateTime_success() {"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.now();"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"            DateParser.toString(dateTime);"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        } catch (Exception e) {"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"            fail();"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    void parseDateTime_invalidDateTime_jhinExceptionThrown() {"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"01/13/2021\", \"01/01/  0000\", \"/01/2021  0000\","},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"            \"01..2021\", \"01.01.2021  -0000\", \"01.01.2021  2500\","},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"            \"01-01-20211\", \"101-01-2021  0000\", \"01-101-2021  0000\","},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"            \"01-01-2021 -2300\"};"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"                DateParser.parseDateTime(input);"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"                fail();"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"            } catch (JhinException e) {"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"                // pass test case, no action required"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":58}},{"path":"src/test/java/com/tanboonji/jhin/JhinStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.jhin;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.HashMap;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.command.Command;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.exception.JhinException;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.AliasMap;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.model.TaskList;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.jhin.parser.CommandParser;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":" * The JhinStub class is only used for testing purposes."},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"public class JhinStub {"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    private TaskList taskList;"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    private AliasMap aliasMap;"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"     * Default class constructor."},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    public JhinStub() {"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"     * Initialises JhinStub."},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    public void initialise() {"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        aliasMap \u003d new AliasMap(new HashMap\u003c\u003e());"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"     * Executes user command and returns response from command."},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"     * @param input User input command."},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"     * @throws JhinException If any error occurred while executing command."},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    public void getResponse(String input) throws JhinException {"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        input \u003d CommandParser.parseAlias(input, aliasMap);"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        Command command \u003d CommandParser.parseCommand(input);"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        command.addTaskList(taskList);"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        command.addAlias(aliasMap);"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        command.execute();"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":47}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"list"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"todo borrow book"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"list"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"done 3"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"list"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"blah"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"done"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"todo"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"deadline"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"deadline return book"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"deadline return book /by"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"event"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"event project meeting"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"event project meeting /at"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"list"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"delete 1"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"delete 1"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"list"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"delete 1"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"delete"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"delete 1"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"list"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"bye"}],"authorContributionMap":{"tanboonji":27}}]
