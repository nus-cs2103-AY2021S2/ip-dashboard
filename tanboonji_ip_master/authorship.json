[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"    mainClassName \u003d \"com.tanboonji.duke.Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"    enableAssertions \u003d true"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tanboonji":17,"-":45}},{"path":"src/main/java/com/tanboonji/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.HelpCommand;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.model.TaskList;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.parser.CommandParser;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.storage.Storage;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.ui.Ui;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    private static final String FILE_DIR \u003d \"duke.txt\";"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    private TaskList taskList;"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    private Ui ui;"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    private Storage storage;"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    private void run() {"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"        storage \u003d new Storage(FILE_DIR);"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        ui \u003d new Ui();"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"            taskList \u003d storage.load();"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        } catch (DukeException e) {"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"            ui.print(e.getMessage());"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        ui.greet();"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        boolean continueDuke \u003d true;"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        while (continueDuke) {"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"            String input \u003d scanner.nextLine().trim();"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"            continueDuke \u003d processInput(input);"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    public void initialise() {"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        storage \u003d new Storage(FILE_DIR);"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        ui \u003d new Ui();"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"            taskList \u003d storage.load();"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"            ui.print(\"load successful\");"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"        } catch (DukeException e) {"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"            ui.print(e.getMessage());"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        ui.greet();"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"    private boolean processInput(String input) {"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"        Command command;"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"            command \u003d CommandParser.parse(input);"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"            command.addTaskList(taskList);"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"            String result \u003d command.execute();"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"            ui.print(result);"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"            if (command.shouldSave()) {"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"                storage.save(taskList);"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"            if (command.shouldExit()) {"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"                return false;"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"            ui.print(HelpCommand.ERROR_MESSAGE + HelpCommand.COMMAND_LIST);"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"        } catch (DukeException e) {"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"            ui.print(e.getMessage());"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"    public String getResponse(String input) {"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"        Command command;"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"            command \u003d CommandParser.parse(input);"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"            command.addTaskList(taskList);"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"            String result \u003d command.execute();"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"            if (command.shouldSave()) {"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"                storage.save(taskList);"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"            return result;"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"            return HelpCommand.ERROR_MESSAGE + HelpCommand.COMMAND_LIST;"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"        } catch (DukeException e) {"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"            return e.getMessage();"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tanboonji":95,"-":3}},{"path":"src/main/java/com/tanboonji/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":10}},{"path":"src/main/java/com/tanboonji/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.ui.MainWindow;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import javafx.application.Application;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"public class Main extends Application {"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    public void start(Stage stage) {"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"            stage.setScene(scene);"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    public void stop() throws Exception {"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        super.stop();"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":35}},{"path":"src/main/java/com/tanboonji/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"public class ByeCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"    public static final String COMMAND \u003d \"bye\";"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    public ByeCommand() {"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldExit() {"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSave() {"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    public String execute() {"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        return EXIT_MESSAGE;"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":25}},{"path":"src/main/java/com/tanboonji/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.model.TaskList;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"public abstract class Command {"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    protected TaskList taskList;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    public Command() {"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    public void addTaskList(TaskList taskList) {"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"     * Returns boolean value indicating if command causes Duke to exit."},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"     * @return True if Duke exits, else false."},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldExit() {"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"     * Returns boolean value indicating if any tasks are updated and requires client to save updated data to file."},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"     * @return True if tasks are updated, else false."},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    public abstract boolean shouldSave();"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"     * Executes command."},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"     * @return String result of output after command is executed."},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"     * @throws DukeException If any error occurs during command execution."},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    public abstract String execute() throws DukeException;"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":40}},{"path":"src/main/java/com/tanboonji/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Matcher;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Pattern;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.model.Deadline;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.model.Task;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.parser.DateParser;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    public static final String COMMAND \u003d \"deadline\";"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(.*)\\\\W(?\u003d/by)/by\\\\W(.*)\");"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    private static final String ERROR_MESSAGE \u003d"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"            \"☹ Sorry, please enter a valid description and datetime for the deadline\\n\""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"            + \"\\tCommand: deadline [description] /by [deadline]\";"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    private final String description;"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    private final LocalDateTime by;"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    private DeadlineCommand(String description, LocalDateTime by) {"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"        this.description \u003d description;"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"        this.by \u003d by;"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    public String execute() throws DukeException {"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        Task newTask \u003d new Deadline(description, by);"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        taskList.addTask(newTask);"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        builder.append(\"Got it. I\u0027ve added this task:\\n\\t\")"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"                .append(newTask)"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"                .append(\"\\nNow you have \")"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"                .append(taskList.getSize());"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        if (taskList.getSize() \u003d\u003d 1) {"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"            builder.append(\" task\");"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        } else {"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"            builder.append(\" tasks\");"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        return builder.toString();"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSave() {"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    public static DeadlineCommand parseArguments(String input) throws DukeException {"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        Matcher matcher \u003d COMMAND_FORMAT.matcher(input);"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        if (!matcher.matches()) {"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        String description \u003d matcher.group(1);"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"        LocalDateTime by \u003d DateParser.parseDateTime(matcher.group(2));"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"        return new DeadlineCommand(description, by);"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":63}},{"path":"src/main/java/com/tanboonji/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.model.Task;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    public static final String COMMAND \u003d \"delete\";"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    private static final String ERROR_MESSAGE \u003d \"☹ Sorry, please enter a valid task number.\\n\""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"            + \"\\tCommand: delete [task number]\";"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    private static final String HEADER \u003d \"Noted! I\u0027ve removed this task:\\n\\t\";"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    private final int taskIndex;"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    private DeleteCommand(int taskIndex) {"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"        this.taskIndex \u003d taskIndex;"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    public String execute() throws DukeException {"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"            Task task \u003d taskList.deleteTask(taskIndex);"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"            return HEADER + task;"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSave() {"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    public static DeleteCommand parseArguments(String input) throws DukeException {"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        int taskIndex;"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"            taskIndex \u003d Integer.parseInt(input) - 1;"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"            return new DeleteCommand(taskIndex);"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":43}},{"path":"src/main/java/com/tanboonji/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.model.Task;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"public class DoneCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    public static final String COMMAND \u003d \"done\";"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    private static final String ERROR_MESSAGE \u003d \"☹ Sorry, please enter a valid task number.\\n\""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"            + \"\\tCommand: done [task number]\";"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    private static final String HEADER \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t\";"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    private final int taskIndex;"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    private DoneCommand(int taskIndex) {"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"        this.taskIndex \u003d taskIndex;"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    public String execute() throws DukeException {"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"            Task task \u003d taskList.markAsDone(taskIndex);"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"            return HEADER + task;"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSave() {"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    public static DoneCommand parseArguments(String input) throws DukeException {"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        int taskIndex;"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"            taskIndex \u003d Integer.parseInt(input) - 1;"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"            return new DoneCommand(taskIndex);"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":43}},{"path":"src/main/java/com/tanboonji/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Matcher;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Pattern;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.model.Event;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.model.Task;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.parser.DateParser;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"public class EventCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    public static final String COMMAND \u003d \"event\";"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(.*)\\\\W(?\u003d\\\\/at)\\\\/at\\\\W(.*)\");"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    private static final String ERROR_MESSAGE \u003d \"☹ Sorry, please enter a valid  and datetime for the event.\\n\""},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"            + \"\\tCommand: event [description] /at [datetime]\";"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    private final String description;"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    private final LocalDateTime at;"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    private EventCommand(String description, LocalDateTime at) {"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        this.description \u003d description;"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"        this.at \u003d at;"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    public String execute() throws DukeException {"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        Task newTask \u003d new Event(description, at);"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        taskList.addTask(newTask);"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        builder.append(\"Got it. I\u0027ve added this task:\\n\\t\")"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"                .append(newTask)"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"                .append(\"\\nNow you have \")"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"                .append(taskList.getSize());"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        if (taskList.getSize() \u003d\u003d 1) {"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"            builder.append(\" task\");"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"            builder.append(\" tasks\");"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        return builder.toString();"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSave() {"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    public static EventCommand parseArguments(String input) throws DukeException {"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        Matcher matcher \u003d COMMAND_FORMAT.matcher(input);"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        if (!matcher.matches()) {"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"        String description \u003d matcher.group(1);"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        LocalDateTime at \u003d DateParser.parseDateTime(matcher.group(2));"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"        return new EventCommand(description, at);"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":62}},{"path":"src/main/java/com/tanboonji/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.model.Task;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"public class FindCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    public static final String COMMAND \u003d \"find\";"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    private static final String ERROR_MESSAGE \u003d \"☹ Sorry, please enter a keyword to search for.\\n\""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"            + \"\\tCommand: find [keyword]\";"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    private final String keyword;"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    private FindCommand(String keyword) {"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSave() {"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    public String execute() {"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        builder.append(\"Here are the matching tasks in your list:\\n\");"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        int numbering \u003d 1;"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        for (Task task: taskList.getList()) {"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"            if (task.containsText(keyword)) {"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"                builder.append(\"\\t\")"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"                        .append(numbering++)"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"                        .append(\".\")"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"                        .append(task)"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"                        .append(\"\\n\");"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        if (numbering \u003d\u003d 1) {"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"            builder.append(\"\\tYou currently have 0 tasks.\");"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        return builder.toString().trim();"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    public static FindCommand parseArguments(String input) throws DukeException {"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        if (input.trim().equals(\"\")) {"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"        return new FindCommand(input);"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":50}},{"path":"src/main/java/com/tanboonji/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"public class HelpCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"    public static final String COMMAND \u003d \"help\";"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"    public static final String ERROR_MESSAGE \u003d \"☹ Sorry, please enter a valid command.\\n\";"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"    public static final String COMMAND_LIST \u003d \"\\tCommands available:\\n\""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"            + \"\\t\\t- list\\n\""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"            + \"\\t\\t- find [keyword]\\n\""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"            + \"\\t\\t- todo [description]\\n\""},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"            + \"\\t\\t- deadline [description] /by [deadline]\\n\""},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"            + \"\\t\\t- event [description] /at [datetime]\\n\""},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"            + \"\\t\\t- done [task number]\\n\""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"            + \"\\t\\t- delete [task number]\\n\""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"            + \"\\t\\t- help\\n\""},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"            + \"\\t\\t- bye\\n\";"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    private final boolean showError;"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    public HelpCommand(boolean showError) {"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"        this.showError \u003d showError;"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSave() {"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    public String execute() {"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        if (showError) {"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"            return ERROR_MESSAGE + COMMAND_LIST;"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"            return COMMAND_LIST;"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":37}},{"path":"src/main/java/com/tanboonji/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"public class InvalidCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"    private final String errorMessage;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"    public InvalidCommand(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"        this.errorMessage \u003d errorMessage;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldExit() {"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSave() {"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    public String execute() {"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        return errorMessage;"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":25}},{"path":"src/main/java/com/tanboonji/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.model.Task;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"public class ListCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"    public static final String COMMAND \u003d \"list\";"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    public ListCommand() {"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSave() {"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"        return false;"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    public String execute() {"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"        builder.append(\"Here are the tasks in your list:\\n\");"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"        int numbering \u003d 1;"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"        for (Task task: taskList.getList()) {"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"            builder.append(\"\\t\")"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"                    .append(numbering++)"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"                    .append(\".\")"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"                    .append(task)"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"                    .append(\"\\n\");"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        if (numbering \u003d\u003d 1) {"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"            builder.append(\"\\tYou currently have 0 tasks.\");"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        return builder.toString().trim();"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":35}},{"path":"src/main/java/com/tanboonji/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.command;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.model.Task;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.model.ToDo;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"public class ToDoCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    public static final String COMMAND \u003d \"todo\";"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    private static final String ERROR_MESSAGE \u003d \"☹ Sorry, please enter a description for the todo.\\n\""},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"            + \"\\tCommand: todo [description]\";"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    private final String description;"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    private ToDoCommand(String description) {"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    public String execute() throws DukeException {"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"        Task newTask \u003d new ToDo(description);"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"        taskList.addTask(newTask);"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"        builder.append(\"Got it. I\u0027ve added this task:\\n\\t\")"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"                .append(newTask)"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"                .append(\"\\nNow you have \")"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"                .append(taskList.getSize());"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        if (taskList.getSize() \u003d\u003d 1) {"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"            builder.append(\" task\");"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"            builder.append(\" tasks\");"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        return builder.toString();"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    public boolean shouldSave() {"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        return true;"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    public static ToDoCommand parseArguments(String input) throws DukeException {"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        if (input.trim().equals(\"\")) {"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        return new ToDoCommand(input);"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":48}},{"path":"src/main/java/com/tanboonji/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.exception;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"    public DukeException(String message) {"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"        super(message);"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":8}},{"path":"src/main/java/com/tanboonji/duke/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.model;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.parser.DateParser;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    protected LocalDateTime by;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"        this.by \u003d by;"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateParser.toString(by) + \")\";"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":20}},{"path":"src/main/java/com/tanboonji/duke/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.model;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.parser.DateParser;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    protected LocalDateTime at;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    public Event(String description, LocalDateTime at) {"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"        this.at \u003d at;"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + DateParser.toString(at) + \")\";"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":20}},{"path":"src/main/java/com/tanboonji/duke/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.model;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.io.Serializable;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"public class Task implements Serializable {"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    public Task(String description) {"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"        this.description \u003d description;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"        return (isDone ? \"✓\" : \" \");"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    public Task markAsDone() {"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"        this.isDone \u003d true;"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"        return this;"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    public boolean containsText(String keyword) {"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"        return description.toLowerCase().contains(keyword.toLowerCase());"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":32}},{"path":"src/main/java/com/tanboonji/duke/model/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.model;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.io.Serializable;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"public class TaskList implements Serializable {"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    private final ArrayList\u003cTask\u003e taskList;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"        return this.taskList;"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    public int getSize() {"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"        return taskList.size();"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    public void addTask(Task task) {"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        taskList.add(task);"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    public Task markAsDone(int index) {"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        Task task \u003d this.taskList.get(index);"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        return task.markAsDone();"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    public Task deleteTask(int index) {"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        return this.taskList.remove(index);"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":34}},{"path":"src/main/java/com/tanboonji/duke/model/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.model;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"    public ToDo(String description) {"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":13}},{"path":"src/main/java/com/tanboonji/duke/parser/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.parser;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Matcher;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Pattern;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.ByeCommand;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.Command;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.DeadlineCommand;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.DeleteCommand;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.DoneCommand;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.EventCommand;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.FindCommand;"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.HelpCommand;"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.InvalidCommand;"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.ListCommand;"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.ToDoCommand;"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.exception.DukeException;"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"public class CommandParser {"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"\\\\W*(\\\\S+)\\\\W*(.*)\");"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"     * Parses input from String class to Command class."},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"     * @param input User string input"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"     * @return Command object with respective details."},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    public static Command parse(String input) {"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        Matcher matcher \u003d COMMAND_FORMAT.matcher(input);"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        if (!matcher.matches()) {"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"            return new HelpCommand(true);"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        String command \u003d matcher.group(1).trim();"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        String arguments \u003d matcher.group(2).trim();"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"            switch (command.toLowerCase()) {"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"            case ToDoCommand.COMMAND:"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"                return ToDoCommand.parseArguments(arguments);"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"            case EventCommand.COMMAND:"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"                return EventCommand.parseArguments(arguments);"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"            case DeadlineCommand.COMMAND:"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"                return DeadlineCommand.parseArguments(arguments);"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"            case ListCommand.COMMAND:"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"                return new ListCommand();"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"            case DoneCommand.COMMAND:"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"                return DoneCommand.parseArguments(arguments);"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"            case DeleteCommand.COMMAND:"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"                return DeleteCommand.parseArguments(arguments);"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"            case HelpCommand.COMMAND:"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"                return new HelpCommand(false);"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"            case ByeCommand.COMMAND:"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"                return new ByeCommand();"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"            case FindCommand.COMMAND:"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"                return FindCommand.parseArguments(arguments);"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"            default:"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"                return new HelpCommand(true);"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"        } catch (DukeException e) {"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"            return new InvalidCommand(e.getMessage());"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":65}},{"path":"src/main/java/com/tanboonji/duke/parser/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.parser;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import java.time.format.DateTimeFormatterBuilder;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.exception.DukeException;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"public class DateParser {"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    private static final String DATE_FORMAT \u003d \"[dd/MM/yyyy][dd-MM-yyyy][dd.MM.yyyy]\";"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d new DateTimeFormatterBuilder()"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"            .parseCaseInsensitive()"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"            .appendPattern(DATE_FORMAT)"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"            .toFormatter();"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    private static final String OUTPUT_FORMAT \u003d \"dd MMM yyyy HHmm\";"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(OUTPUT_FORMAT);"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    private static final String ERROR_MESSAGE \u003d \"☹ Sorry, please enter a valid time format.\";"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    private static final String TIME_FORMAT \u003d \"[HHmm][mmHH]\";"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d new DateTimeFormatterBuilder()"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"            .parseCaseInsensitive()"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"            .appendPattern(TIME_FORMAT)"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"            .toFormatter();"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"     * Parses input from String class to LocalDateTime class."},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"     * @param input User string input"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"     * @return LocalDateTime object."},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    public static LocalDateTime parseDateTime(String input) throws DukeException {"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        String[] tokenizedInput \u003d input.trim().split(\" \", 2);"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        LocalDate date;"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        LocalTime time;"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"            date \u003d parseDate(tokenizedInput[0].trim());"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        } catch (DukeException e) {"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"            throw e;"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        if (tokenizedInput.length \u003d\u003d 1) {"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"            time \u003d LocalTime.MAX;"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"                time \u003d parseTime(tokenizedInput[1].trim());"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"            } catch (DukeException e) {"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"                throw e;"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"        return LocalDateTime.of(date, time);"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"    public static LocalDate parseDate(String input) throws DukeException {"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"            return LocalDate.parse(input, DATE_FORMATTER);"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"    public static LocalTime parseTime(String input) throws DukeException {"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"            return LocalTime.parse(input, TIME_FORMATTER);"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"     * Returns datetime in a standard format."},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"     * @param dateTime LocalDateTime object to be formatted."},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"     * @return String of datetime in standard format."},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"    public static String toString(LocalDateTime dateTime) {"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"        return OUTPUT_FORMATTER.format(dateTime);"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":83}},{"path":"src/main/java/com/tanboonji/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.storage;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.io.FileInputStream;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.io.FileOutputStream;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import java.io.ObjectInputStream;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import java.io.ObjectOutputStream;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.exception.DukeException;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.model.TaskList;"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    private static final String LOAD_ERROR_MESSAGE \u003d"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"            \"☹ Sorry, something went wrong while I was loading saved data from file.\";"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    private static final String SAVE_ERROR_MESSAGE \u003d \"☹ Sorry, something went wrong while I was saving data to file.\";"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    private final String fileDir;"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    public Storage(String fileDir) {"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        this.fileDir \u003d fileDir;"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"     * Loads TaskList saved on disk."},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"     * If TaskList does not exist, initialise an empty TaskList."},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"     * @return TaskList saved on disk, if it does not exist, an empty TaskList is returned instead."},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"     * @throws DukeException If any error occurs while loading TaskList from disk."},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    public TaskList load() throws DukeException {"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"            FileInputStream fileIn \u003d new FileInputStream(fileDir);"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"            ObjectInputStream input \u003d new ObjectInputStream(fileIn);"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"            TaskList taskList \u003d (TaskList) input.readObject();"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"            input.close();"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"            fileIn.close();"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"            return taskList;"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"            // expected exception: file not found therefore no tasks loaded"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"            return new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        } catch (IOException | ClassNotFoundException e) {"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"            throw new DukeException(LOAD_ERROR_MESSAGE);"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"     * Saves TaskList saved to disk."},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"     * @param taskList TaskList to be stored to disk."},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"     * @throws DukeException If any error occurs while saving TaskList to disk."},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"    public void save(TaskList taskList) throws DukeException {"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"            FileOutputStream fileOut \u003d new FileOutputStream(fileDir);"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"            ObjectOutputStream output \u003d new ObjectOutputStream(fileOut);"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"            output.writeObject(taskList);"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"            output.close();"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"            fileOut.close();"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"        } catch (IOException e) {"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"            throw new DukeException(SAVE_ERROR_MESSAGE);"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":66}},{"path":"src/main/java/com/tanboonji/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.ui;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":61}},{"path":"src/main/java/com/tanboonji/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.ui;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.Duke;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.util.Timer;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import java.util.TimerTask;"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import javafx.application.Platform;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import javafx.fxml.FXML;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.control.Button;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":" */"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    private VBox dialogContainer;"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    private TextField userInput;"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    private Button sendButton;"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    private Duke duke;"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    private Timer timer;"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    @FXML"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    public void initialize() {"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        duke \u003d d;"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        duke.initialise();"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    @FXML"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    private void handleUserInput() {"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        );"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"        userInput.clear();"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"        if (input.toLowerCase().equals(\"bye\")) {"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"            timer \u003d new Timer();"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"            timer.schedule(new TimerTask() {"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"                @Override"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"                public void run() {"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"                    Platform.exit();"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"                }"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"            },2000);"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":71}},{"path":"src/main/java/com/tanboonji/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.ui;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"    private static final String DUKE_LOGO \u003d \" ____        _\\n\""},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"            + \"|  _ \\\\ _   _| | _ ___\\n\""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    private static final String REPLY_TOP_OUTLINE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    private static final String REPLY_BOTTOM_OUTLINE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Duke.\\n\""},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"            + \"What can I do for you today?\";"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    public Ui() {"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    public void greet() {"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"        System.out.println(DUKE_LOGO);"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"        echo(WELCOME_MESSAGE);"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    public void print(String output) {"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"        echo(output);"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    private void echo(String output) {"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        System.out.println(REPLY_TOP_OUTLINE);"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        System.out.println(output);"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        System.out.println(REPLY_BOTTOM_OUTLINE);"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":32}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"false\" /\u003e"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"tanboonji":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"com.tanboonji.duke.ui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"tanboonji":19}},{"path":"src/test/java/com/tanboonji/duke/parser/CommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.parser;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.DoneCommand;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.EventCommand;"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.HelpCommand;"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.InvalidCommand;"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.ListCommand;"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import com.tanboonji.duke.command.ToDoCommand;"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"class CommandParserTest {"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    void parse_toDoCommand_success() {"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"todo read book\", \" todo  read another book\", \"todo  more books \"};"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"            assertTrue(CommandParser.parse(input).getClass().isAssignableFrom(ToDoCommand.class));"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    void parse_eventCommand_success() {"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"event book reading /at 01-02-2021 0000\", \" event  book reading /at 01/02/2021\","},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"            \"event  book reading /at 01.02.2021 2359 \"};"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"            assertTrue(CommandParser.parse(input).getClass().isAssignableFrom(EventCommand.class));"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    void parse_listCommand_success() {"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"list\", \" list  all\", \"list  everything \"};"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"            assertTrue(CommandParser.parse(input).getClass().isAssignableFrom(ListCommand.class));"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    void parse_doneCommand_success() {"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"done 0\", \" done  1\", \"done  2 \"};"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"            assertTrue(CommandParser.parse(input).getClass().isAssignableFrom(DoneCommand.class));"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    void parse_errorHelpCommand_success() {"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"blah\", \"  unknown\", \"invalid  \"};"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"            assertTrue(CommandParser.parse(input).getClass().isAssignableFrom(HelpCommand.class));"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"    void parse_invalidToDoCommand_dukeException() {"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"todo\", \"  todo\", \"todo  \"};"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"            assertTrue(CommandParser.parse(input).getClass().isAssignableFrom(InvalidCommand.class));"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"    void parse_invalidEventCommand_dukeException() {"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"event\", \" event  book reading\", \"event  book reading /by 01.01.2021 0000 \"};"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"            assertTrue(CommandParser.parse(input).getClass().isAssignableFrom(InvalidCommand.class));"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"    void parse_invalidDoneCommand_dukeException() {"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"done\", \" done  one\", \"done  two \"};"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"            assertTrue(CommandParser.parse(input).getClass().isAssignableFrom(InvalidCommand.class));"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":80}},{"path":"src/test/java/com/tanboonji/duke/parser/DateParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package com.tanboonji.duke.parser;"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"class DateParserTest {"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    void parseDateTime_validDateTime_success() {"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"01/01/2021\", \" 01/01/2021  0000\", \"01/01/2021  0000 \","},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"            \"01.01.2021\", \" 01.01.2021  0000\", \"01.01.2021  0000 \","},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"            \"01-01-2021\", \" 01-01-2021  0000\", \"01-01-2021  0000 \"};"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"                DateParser.parseDateTime(input);"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"            } catch (Exception e) {"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"                fail();"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    void testToString_validDateTime_success() {"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.now();"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"            DateParser.toString(dateTime);"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        } catch (Exception e) {"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"            fail();"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":""},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    void parseDateTime_invalidDateTime_exceptionThrown() {"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        String[] inputs \u003d {\"01/13/2021\", \" 01/01/  0000\", \"/01/2021  0000 \","},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"            \"01..2021\", \" 01.01.2021  -0000\", \"01.01.2021  2500 \","},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"            \"01-01-20211\", \" 101-01-2021  0000\", \"01-101-2021  0000 \","},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"            \"01012021\"};"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        for (String input: inputs) {"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"            try {"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"                DateParser.parseDateTime(input);"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"                fail();"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"            } catch (Exception e) {"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"                // pass test case, no action required"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"}"}],"authorContributionMap":{"tanboonji":50}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"list"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"todo borrow book"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"list"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"done 3"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"list"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"blah"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"done"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"todo"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"deadline"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"deadline return book"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"deadline return book /by"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"event"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"event project meeting"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"event project meeting /at"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"list"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"delete 1"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"delete 1"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"list"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"delete 1"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"delete"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"delete 1"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"list"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"bye"}],"authorContributionMap":{"tanboonji":27}}]
