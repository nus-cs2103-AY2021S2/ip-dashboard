[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"# Alice project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"1. After that, locate the `src/main/java/alice.Alice.java` file, right-click it, and choose `Run alice.Alice.main()`. If the setup is correct, you should see something like the below:"}],"authorContributionMap":{"lue97":2,"-":13}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":""},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":""},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"    archiveBaseName \u003d \"alice\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"lue97":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature 1 "},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"### `todo` - Adds a new task"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"Adds a new task to the agent."},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"`todo water the flowers`"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"The expected outcome:"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"The task is added to the agent."},{"lineNumber":20,"author":{"gitId":"lue97"},"content":""},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"### `deadline` - Adds a new deadline"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":""},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"Adds a new deadline to the agent."},{"lineNumber":24,"author":{"gitId":"lue97"},"content":""},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"Example of usage:"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":""},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"`deadline complete assignment /by 2020/11/28`"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":""},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"The expected outcome:"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":""},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"The task with deadline of 28th Nov 2020 is added to the agent."},{"lineNumber":32,"author":{"gitId":"lue97"},"content":""},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"### `event` - Adds a new event"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":""},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"Adds a new event to the agent."},{"lineNumber":36,"author":{"gitId":"lue97"},"content":""},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"Example of usage:"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":""},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"`deadline CS3243 midterms /at 2020/11/28`"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":""},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"The expected outcome:"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":""},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"The event happening at 28th Nov 28 is added to the agent."},{"lineNumber":44,"author":{"gitId":"lue97"},"content":""},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"### `delete` - Deletes a task."},{"lineNumber":46,"author":{"gitId":"lue97"},"content":""},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"Deletes a task at specified index in the agent."},{"lineNumber":48,"author":{"gitId":"lue97"},"content":""},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"Example of usage:"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":""},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"`delete 1`"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":""},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"The expected outcome:"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":""},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"The first task in the agent will be deleted."},{"lineNumber":56,"author":{"gitId":"lue97"},"content":""},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"### `done` - Marks a task as done."},{"lineNumber":58,"author":{"gitId":"lue97"},"content":""},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"Marks a task at specified index as done."},{"lineNumber":60,"author":{"gitId":"lue97"},"content":""},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"Example of usage:"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":""},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"`done 1`"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":""},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"The expected outcome:"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":""},{"lineNumber":67,"author":{"gitId":"lue97"},"content":"The first task in the agent will be marked as done."},{"lineNumber":68,"author":{"gitId":"lue97"},"content":""},{"lineNumber":69,"author":{"gitId":"lue97"},"content":"### `find` - Finds a task."},{"lineNumber":70,"author":{"gitId":"lue97"},"content":""},{"lineNumber":71,"author":{"gitId":"lue97"},"content":"Finds a task with the given substring."},{"lineNumber":72,"author":{"gitId":"lue97"},"content":""},{"lineNumber":73,"author":{"gitId":"lue97"},"content":"Example of usage:"},{"lineNumber":74,"author":{"gitId":"lue97"},"content":""},{"lineNumber":75,"author":{"gitId":"lue97"},"content":"`find abc`"},{"lineNumber":76,"author":{"gitId":"lue97"},"content":""},{"lineNumber":77,"author":{"gitId":"lue97"},"content":"The expected outcome:"},{"lineNumber":78,"author":{"gitId":"lue97"},"content":""},{"lineNumber":79,"author":{"gitId":"lue97"},"content":"Shows the list of task containing the substring `abc`."},{"lineNumber":80,"author":{"gitId":"lue97"},"content":""},{"lineNumber":81,"author":{"gitId":"lue97"},"content":"### `list` - List tasks."},{"lineNumber":82,"author":{"gitId":"lue97"},"content":""},{"lineNumber":83,"author":{"gitId":"lue97"},"content":"Shows all tasks stored in the agent sorted via index."},{"lineNumber":84,"author":{"gitId":"lue97"},"content":""},{"lineNumber":85,"author":{"gitId":"lue97"},"content":"Example of usage:"},{"lineNumber":86,"author":{"gitId":"lue97"},"content":""},{"lineNumber":87,"author":{"gitId":"lue97"},"content":"`list`"},{"lineNumber":88,"author":{"gitId":"lue97"},"content":""},{"lineNumber":89,"author":{"gitId":"lue97"},"content":"The expected outcome:"},{"lineNumber":90,"author":{"gitId":"lue97"},"content":""},{"lineNumber":91,"author":{"gitId":"lue97"},"content":"Shows all tasks stored in the agent sorted via index."},{"lineNumber":92,"author":{"gitId":"lue97"},"content":""},{"lineNumber":93,"author":{"gitId":"lue97"},"content":"### `undo` - Undo the previous action."},{"lineNumber":94,"author":{"gitId":"lue97"},"content":""},{"lineNumber":95,"author":{"gitId":"lue97"},"content":"Undo the previous action (that modifies the content of the agent)."},{"lineNumber":96,"author":{"gitId":"lue97"},"content":""},{"lineNumber":97,"author":{"gitId":"lue97"},"content":"Example of usage:"},{"lineNumber":98,"author":{"gitId":"lue97"},"content":""},{"lineNumber":99,"author":{"gitId":"lue97"},"content":"`undo`"},{"lineNumber":100,"author":{"gitId":"lue97"},"content":""},{"lineNumber":101,"author":{"gitId":"lue97"},"content":"The expected outcome:"},{"lineNumber":102,"author":{"gitId":"lue97"},"content":""},{"lineNumber":103,"author":{"gitId":"lue97"},"content":"Undo the previous action (that modifies the content of the agent)."}],"authorContributionMap":{"lue97":89,"-":14}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":""},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":""},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"lue97"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"lue97"},"content":" */"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\t@FXML"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"\tprivate Label dialog;"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t@FXML"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\tprivate ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":""},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\tprivate DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\t\ttry {"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t\t\tFXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\t\t\tfxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\t\t\tfxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t\t\tfxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\t\t} catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\t\t\te.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":""},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t\tdialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t\tdisplayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":""},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\tpublic static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"\t\treturn new DialogBox(text, img);"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":""},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"\tpublic static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"\t\tvar db \u003d new DialogBox(text, img);"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"\t\tdb.flip();"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"\t\treturn db;"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":""},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"\t * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"\tprivate void flip() {"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"\t\tObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"\t\tCollections.reverse(tmp);"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"\t\tgetChildren().setAll(tmp);"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"\t\tsetAlignment(Pos.TOP_LEFT);"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":59}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"lue97"},"content":" */"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"\tpublic static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"\t\tApplication.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":""},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"lue97"},"content":" */"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\tpublic void start(Stage stage) {"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"\t\ttry {"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"\t\t\tFXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\t\t\tAnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"\t\t\tScene scene \u003d new Scene(ap);"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\t\t\tstage.setScene(scene);"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"\t\t\tstage.show();"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\t\t} catch (IOException e) {"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"\t\t\te.printStackTrace();"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":25}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"import alice.Alice;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"import alice.command.Parser;"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import alice.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":""},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"import java.io.File;"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":""},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"import static javafx.application.Application.launch;"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":""},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":19,"author":{"gitId":"lue97"},"content":" */"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\t@FXML"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"\tprivate ScrollPane scrollPane;"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t@FXML"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\tprivate VBox dialogContainer;"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\t@FXML"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\tprivate TextField userInput;"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\t@FXML"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\tprivate Button sendButton;"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":""},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\tprivate Alice alice;"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":""},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\tprivate final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\tprivate final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":""},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"\tprivate static String getDataPath() {"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t\tif (Storage.OS.contains(\"win\")) {"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t\t\treturn String.join(File.separator, System.getenv(\"USERPROFILE\"),"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\t\t\t\t\t\".alice_save\", \"data\", \"save_data\");"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t\t} else {"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\t\t\treturn String.join(File.separator, \"~\", \".alice_save\", \"data\", \"save_data\");"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":""},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"\tprivate static TaskList loadTasks() {"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"\t\tbyte[] data \u003d Storage.loadBytes(getDataPath());"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"\t\tif (data \u003d\u003d null) {"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"\t\t\treturn new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"\t\t} else {"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"\t\t\treturn Storage.deserialize(data, TaskList.class);"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":""},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"\tprivate static boolean saveTasks(TaskList taskList) {"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"\t\tbyte[] data \u003d Storage.serialize(taskList);"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"\t\treturn Storage.saveBytes(getDataPath(), data);"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":""},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"\t@FXML"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"\tpublic void initialize() {"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"\t\tscrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"\t\talice \u003d new Alice(loadTasks(), false);"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"\t\tdialogContainer.getChildren().addAll("},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"\t\t\t\tDialogBox.getDukeDialog(alice.getCurrentMessage(), dukeImage)"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"\t\t);"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":""},{"lineNumber":67,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":68,"author":{"gitId":"lue97"},"content":"\t * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":69,"author":{"gitId":"lue97"},"content":"\t * the dialog container. Clears the user input after processing."},{"lineNumber":70,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":71,"author":{"gitId":"lue97"},"content":"\t@FXML"},{"lineNumber":72,"author":{"gitId":"lue97"},"content":"\tprivate void handleUserInput() {"},{"lineNumber":73,"author":{"gitId":"lue97"},"content":"\t\tString input \u003d userInput.getText();"},{"lineNumber":74,"author":{"gitId":"lue97"},"content":"\t\talice \u003d Parser.parse(input.trim()).execute(alice);"},{"lineNumber":75,"author":{"gitId":"lue97"},"content":"\t\tString response \u003d alice.getCurrentMessage();"},{"lineNumber":76,"author":{"gitId":"lue97"},"content":"\t\tif (alice.hasDelta() \u0026\u0026 !saveTasks(alice.getData())) {"},{"lineNumber":77,"author":{"gitId":"lue97"},"content":"\t\t\tDialogBox.getDukeDialog(\"Error saving tasks to \" + getDataPath(), dukeImage);"},{"lineNumber":78,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":79,"author":{"gitId":"lue97"},"content":"\t\tif (alice.getIsDone()) {"},{"lineNumber":80,"author":{"gitId":"lue97"},"content":"\t\t\tSystem.exit(0);"},{"lineNumber":81,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":82,"author":{"gitId":"lue97"},"content":"\t\tdialogContainer.getChildren().addAll("},{"lineNumber":83,"author":{"gitId":"lue97"},"content":"\t\t\t\tDialogBox.getUserDialog(input, userImage),"},{"lineNumber":84,"author":{"gitId":"lue97"},"content":"\t\t\t\tDialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":85,"author":{"gitId":"lue97"},"content":"\t\t);"},{"lineNumber":86,"author":{"gitId":"lue97"},"content":"\t\tuserInput.clear();"},{"lineNumber":87,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":88,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":88}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"import java.io.ByteArrayInputStream;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import java.io.FileInputStream;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import java.io.FileOutputStream;"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import java.io.InvalidClassException;"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"import java.io.ObjectInputStream;"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import java.io.ObjectOutputStream;"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"import java.nio.file.Files;"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"import java.nio.file.Path;"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"import java.nio.file.Paths;"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"import java.util.Locale;"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":""},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":""},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"\tpublic static final String OS \u003d System.getProperty(\"os.name\").toLowerCase(Locale.ROOT);"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":""},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"\tpublic static boolean saveBytes(String pathString, byte[] data) {"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\t\tPath path \u003d Paths.get(pathString);"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"\t\tif (!Files.exists(path)) {"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\t\t\ttry {"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"\t\t\t\tFiles.createDirectories(path.getParent());"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t\t\t\tFiles.createFile(path);"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t\t\t} catch (IOException e) {"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\t\t\t\treturn false;"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\t\t\t}"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t\ttry (FileOutputStream fileOutputStream \u003d new FileOutputStream(pathString)) {"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\t\t\tfileOutputStream.write(data);"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\t\t} catch (IOException ioException) {"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t\t\treturn false;"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\t\treturn true;"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":""},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\tpublic static byte[] loadBytes(String path) {"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t\ttry (FileInputStream fileInputStream \u003d new FileInputStream(path)) {"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\t\t\treturn fileInputStream.readAllBytes();"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t\t} catch (IOException fileNotFoundException) {"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\t\t\treturn null;"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":""},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"\tpublic static \u003cT\u003e T deserialize(byte[] data, Class\u003cT\u003e type) {"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"\t\tObject object;"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"\t\ttry (ByteArrayInputStream byteArrayInputStream \u003d new ByteArrayInputStream(data)) {"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"\t\t\ttry (ObjectInputStream objectInputStream \u003d new ObjectInputStream(byteArrayInputStream)) {"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"\t\t\t\tobject \u003d objectInputStream.readObject();"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"\t\t\t} catch (ClassNotFoundException | InvalidClassException classException) {"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"\t\t\t\treturn null;"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"\t\t\t}"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"\t\t} catch (IOException ioException) {"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"\t\t\treturn null;"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"\t\treturn type.cast(object);"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":""},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"\tpublic static \u003cT\u003e byte[] serialize(T object) {"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"\t\ttry (ByteArrayOutputStream byteArrayOutputStream \u003d new ByteArrayOutputStream()) {"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"\t\t\ttry (ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(byteArrayOutputStream)) {"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"\t\t\t\tobjectOutputStream.writeObject(object);"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"\t\t\t\tobjectOutputStream.flush();"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"\t\t\t\treturn byteArrayOutputStream.toByteArray();"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"\t\t\t}"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"\t\t} catch (IOException ioException) {"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":"\t\t\treturn null;"},{"lineNumber":67,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":68,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":69,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":69}},{"path":"src/main/java/alice/Alice.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import alice.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":""},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":" * This class is the representation of the agent being created. this class is"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":" * immutable and any method calls from this class should not have any side"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":" * effects. Message returned to the user should be stored in the agent and"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":" * output of it should be handled elsewhere."},{"lineNumber":10,"author":{"gitId":"lue97"},"content":" */"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":""},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"public class Alice {"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"\tpublic static final String GREETING \u003d \"Hello!\";"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":""},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"\tprivate final boolean isDone;"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"\tprivate final boolean hasDelta;"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\tprivate final String currentMessage;"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"\tprivate final TaskList data;"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\tprivate final Alice previous;"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":""},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"\t * Constructs a new agent specifying tasks and if it\u0027s done."},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t *"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t * @param newData The tasks to be specified."},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\t * @param isDone  If the agent is done operating."},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\tpublic Alice(TaskList newData, boolean isDone) {"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t\tthis.currentMessage \u003d String.format(\"%s\\nInitialized with %d tasks\","},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\t\t\t\tGREETING, newData.count());"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\t\tthis.data \u003d newData;"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t\tthis.isDone \u003d isDone;"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\t\tthis.hasDelta \u003d false;"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\t\tthis.previous \u003d null;"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":""},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t * Constructs a new agent specifying the response, tasks, if it\u0027s done, and whether"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\t * it has changed from some previous state."},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t *"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\t * @param currentMessage The agent\u0027s response."},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"\t * @param newData        The tasks to be specified."},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"\t * @param isDone         If the agent is done operating."},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"\t * @param hasDelta       If the data in the agent has changed from some other instance."},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"\t * @param previous\t\t The previous state of the agent"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"\tpublic Alice(String currentMessage, TaskList newData, boolean isDone, boolean hasDelta, Alice previous) {"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"\t\tthis.currentMessage \u003d currentMessage;"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"\t\tthis.data \u003d newData;"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"\t\tthis.isDone \u003d isDone;"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"\t\tthis.hasDelta \u003d hasDelta;"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"\t\tthis.previous \u003d previous;"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":""},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"\t * Returns if the agent is still operating."},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"\t *"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"\t * @return True if the agent is no longer expecting any command otherwise false."},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"\tpublic boolean getIsDone() {"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"\t\treturn isDone;"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":""},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"\t * Returns if the agent data has been changed."},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"\t *"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":"\t * @return True if certain operation has altered the data of the agent."},{"lineNumber":67,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":68,"author":{"gitId":"lue97"},"content":"\tpublic boolean hasDelta() {"},{"lineNumber":69,"author":{"gitId":"lue97"},"content":"\t\treturn hasDelta;"},{"lineNumber":70,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":71,"author":{"gitId":"lue97"},"content":""},{"lineNumber":72,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":73,"author":{"gitId":"lue97"},"content":"\t * Returns the tasks stored in the agent."},{"lineNumber":74,"author":{"gitId":"lue97"},"content":"\t *"},{"lineNumber":75,"author":{"gitId":"lue97"},"content":"\t * @return data stored in the agent."},{"lineNumber":76,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":77,"author":{"gitId":"lue97"},"content":"\tpublic TaskList getData() {"},{"lineNumber":78,"author":{"gitId":"lue97"},"content":"\t\treturn this.data;"},{"lineNumber":79,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":80,"author":{"gitId":"lue97"},"content":""},{"lineNumber":81,"author":{"gitId":"lue97"},"content":"\tpublic Alice getPrevious() {"},{"lineNumber":82,"author":{"gitId":"lue97"},"content":"\t\treturn this.previous;"},{"lineNumber":83,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":84,"author":{"gitId":"lue97"},"content":""},{"lineNumber":85,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":86,"author":{"gitId":"lue97"},"content":"\t * Returns the message that the agent wants to show to the user."},{"lineNumber":87,"author":{"gitId":"lue97"},"content":"\t *"},{"lineNumber":88,"author":{"gitId":"lue97"},"content":"\t * @return The response from the agent."},{"lineNumber":89,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":90,"author":{"gitId":"lue97"},"content":"\tpublic String getCurrentMessage() {"},{"lineNumber":91,"author":{"gitId":"lue97"},"content":"\t\treturn currentMessage;"},{"lineNumber":92,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"lue97":92,"-":1}},{"path":"src/main/java/alice/AliceException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"public class AliceException extends Exception {"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"\tpublic AliceException(String message) {"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"\t\tsuper(message);"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":7}},{"path":"src/main/java/alice/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice.command;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import alice.Alice;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":""},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":""},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"public abstract class Command {"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":""},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"\t * Tokens in the command"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"\t **/"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"\tprotected String[] tokens;"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":""},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"\t * Class constructor."},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\tpublic Command() {"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"\t\tthis.tokens \u003d new String[]{};"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":""},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"\t * Class constructor specifying the tokens in the command."},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t *"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t * @param tokens"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\tpublic Command(String[] tokens) {"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\t\tthis.tokens \u003d tokens;"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":""},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t * Returns the tokens in the command."},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\t *"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\t * @return Tokens in the command."},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"\tpublic String[] getTokens() {"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t\treturn this.tokens;"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":""},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\t * Returns the new state of the agent after execution of command."},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"\t *"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"\t * @param agent The current state of the agent."},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"\t * @return The new state of the agent"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"\tpublic abstract Alice execute(Alice agent);"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":""},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"\tpublic boolean equals(Object object) {"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"\t\tif (this \u003d\u003d object) {"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"\t\t\treturn true;"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"\t\tif (object \u003d\u003d null || getClass() !\u003d object.getClass()) {"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"\t\t\treturn false;"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"\t\tCommand command \u003d (Command) object;"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"\t\tif (tokens.length !\u003d command.tokens.length) {"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"\t\t\treturn false;"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"\t\tfor (int i \u003d 0; i \u003c tokens.length; i++) {"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"\t\t\tif (!tokens[i].equals(command.tokens[i])) {"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"\t\t\t\treturn false;"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"\t\t\t}"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":67,"author":{"gitId":"lue97"},"content":"\t\treturn true;"},{"lineNumber":68,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":69,"author":{"gitId":"lue97"},"content":""},{"lineNumber":70,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":71,"author":{"gitId":"lue97"},"content":"\tpublic int hashCode() {"},{"lineNumber":72,"author":{"gitId":"lue97"},"content":"\t\treturn Arrays.hashCode(tokens);"},{"lineNumber":73,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":74,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":74}},{"path":"src/main/java/alice/command/CommandAdd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice.command;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import alice.Alice;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import alice.AliceException;"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import alice.task.Task;"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import alice.task.TaskBuilder;"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"import alice.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":""},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"import java.util.stream.Collectors;"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":""},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"public class CommandAdd extends Command {"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":""},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\tprivate static final String SUCCESS_MESSAGE \u003d \"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d task(s) in the list\";"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":""},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\t * Usage details."},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"\t **/"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\tprivate static final String USAGE_TODO \u003d \"todo usage: todo [activity]\";"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"\tprivate static final String USAGE_DEADLINE \u003d \"deadline usage: deadline [activity] /by [deadline yyyy/MM/dd]\";"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\tprivate static final String USAGE_EVENT \u003d \"todo usage: event [activity] /at [time yyyy/MM/dd]\";"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":""},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\tpublic CommandAdd(String[] tokens) {"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t\tsuper(tokens);"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":""},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\tpublic Alice execute(Alice agent) {"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\t\tAlice newAgent;"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\t\ttry {"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t\t\tTask task \u003d TaskBuilder.buildTask(tokens);"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"\t\t\tList\u003cTask\u003e newStore \u003d agent.getData().getTasks();"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t\t\tnewStore.add(task);"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t\t\tString response \u003d String.format(SUCCESS_MESSAGE, task, newStore.size());"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\t\t\tnewAgent \u003d new Alice(response, new TaskList(newStore), false, true, agent);"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t\t} catch (AliceException aliceException) {"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\t\t\tnewAgent \u003d new Alice(aliceException.getMessage(), agent.getData(), agent.getIsDone(), false, agent.getPrevious());"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"\t\t} catch (IllegalStateException illegalStateException) {"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"\t\t\tnewAgent \u003d new Alice(\"Something that was not supposed to happen happened\", agent.getData(),"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"\t\t\t\t\tagent.getIsDone(), false, agent.getPrevious());"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"\t\t} catch (ArrayIndexOutOfBoundsException | IllegalArgumentException exception) {"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"\t\t\tString usage;"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"\t\t\tswitch (tokens[0]) {"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"\t\t\tcase \"todo\":"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"\t\t\t\tusage \u003d USAGE_TODO;"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"\t\t\t\tbreak;"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"\t\t\tcase \"deadline\":"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"\t\t\t\tusage \u003d USAGE_DEADLINE;"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"\t\t\t\tbreak;"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"\t\t\tdefault:"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"\t\t\t\tusage \u003d USAGE_EVENT;"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"\t\t\t}"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"\t\t\tnewAgent \u003d new Alice(usage, agent.getData(), agent.getIsDone(), false, agent.getPrevious());"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"\t\treturn newAgent;"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":""},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"\tpublic boolean equals(Object object) {"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":"\t\treturn super.equals(object);"},{"lineNumber":67,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":68,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":68}},{"path":"src/main/java/alice/command/CommandBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice.command;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import alice.Alice;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":""},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"public class CommandBye extends Command {"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":""},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"\tprivate static final String SUCCESS_MESSAGE \u003d \"See you next time!\";"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":""},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"\tpublic CommandBye() {"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"\t\tsuper();"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":""},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\tpublic CommandBye(String[] tokens) {"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"\t\tsuper(tokens);"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":""},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\tpublic Alice execute(Alice agent) {"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t\treturn new Alice(SUCCESS_MESSAGE, agent.getData(), true, false, null);"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":""},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"\tpublic boolean equals(Object object) {"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t\treturn super.equals(object);"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":38}},{"path":"src/main/java/alice/command/CommandDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice.command;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import alice.Alice;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import alice.AliceException;"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import alice.task.Task;"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import alice.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":""},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":""},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"public class CommandDelete extends Command {"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":""},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"\tprivate static final String SUCCESS_MESSAGE \u003d \"I\u0027ve deleted this task:\\n%s\";"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":""},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"\t * Usage details."},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"\t **/"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\tprivate static final String USAGE \u003d \"delete Usage: delete [index]\";"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":""},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"\tpublic CommandDelete(String[] tokens) {"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t\tsuper(tokens);"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":""},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\tpublic Alice execute(Alice agent) {"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t\tAlice newAgent;"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\t\ttry {"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\t\t\tint index \u003d Integer.parseInt(tokens[1]);"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t\t\tif (index \u003c 0 || index \u003e agent.getData().count()) {"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"\t\t\t\tthrow new AliceException(String.format(\"Index %d out of bounds for schedule of size %d.\","},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t\t\t\t\t\tindex, agent.getData().count()));"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t\t\t}"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\t\t\tList\u003cTask\u003e dataList \u003d agent.getData().getTasks();"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t\t\tdataList.remove(index - 1);"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\t\t\tString response \u003d String.format(SUCCESS_MESSAGE, agent.getData().getTasks().get(index - 1));"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"\t\t\tnewAgent \u003d new Alice(response, new TaskList(dataList), agent.getIsDone(), true, agent);"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"\t\t} catch (NumberFormatException numberFormatException) {"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"\t\t\tnewAgent \u003d new Alice(\"Invalid number\", agent.getData(), agent.getIsDone(), false, agent.getPrevious());"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"\t\t} catch (AliceException aliceException) {"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"\t\t\tnewAgent \u003d new Alice(aliceException.getMessage(), agent.getData(), agent.getIsDone(), false, agent.getPrevious());"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"\t\t} catch (IndexOutOfBoundsException indexOutOfBoundsException) {"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"\t\t\tnewAgent \u003d new Alice(USAGE, agent.getData(), agent.getIsDone(), false, agent.getPrevious());"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"\t\treturn newAgent;"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":""},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"\tpublic boolean equals(Object object) {"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"\t\treturn super.equals(object);"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":59}},{"path":"src/main/java/alice/command/CommandDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice.command;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import alice.Alice;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import alice.AliceException;"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import alice.task.Task;"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import alice.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":""},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":""},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"public class CommandDone extends Command {"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":""},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"\tprivate static final String SUCCESS_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\\n%s\";"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":""},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"\t * Usage details."},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"\t **/"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\tprivate static final String USAGE \u003d \"done Usage: done [index]\";"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":""},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"\tpublic CommandDone(String[] tokens) {"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t\tsuper(tokens);"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":""},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\tpublic Alice execute(Alice agent) {"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t\tAlice newAgent;"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\t\ttry {"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\t\t\tint index \u003d Integer.parseInt(tokens[1]);"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t\t\tif (index \u003c 0 || index \u003e agent.getData().count()) {"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"\t\t\t\tthrow new AliceException(String.format(\"Index %d out of bounds for schedule of size %d.\","},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t\t\t\t\t\tindex, agent.getData().count()));"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t\t\t}"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\t\t\tList\u003cTask\u003e dataList \u003d agent.getData().getTasks();"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t\t\tdataList.set(index - 1, dataList.get(index - 1).setDone(true));"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\t\t\tString response \u003d String.format(SUCCESS_MESSAGE, dataList.get(index - 1));"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"\t\t\tnewAgent \u003d new Alice(response, new TaskList(dataList), agent.getIsDone(), true, agent);"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"\t\t} catch (NumberFormatException numberFormatException) {"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"\t\t\tnewAgent \u003d new Alice(\"Invalid number\", agent.getData(), agent.getIsDone(), false, agent.getPrevious());"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"\t\t} catch (AliceException aliceException) {"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"\t\t\tnewAgent \u003d new Alice(aliceException.getMessage(), agent.getData(), agent.getIsDone(), false, agent.getPrevious());"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"\t\t} catch (ArrayIndexOutOfBoundsException | IllegalArgumentException exception) {"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"\t\t\tnewAgent \u003d new Alice(USAGE, agent.getData(), agent.getIsDone(), false, agent.getPrevious());"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"\t\treturn newAgent;"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":""},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"\tpublic boolean equals(Object object) {"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"\t\treturn super.equals(object);"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":59}},{"path":"src/main/java/alice/command/CommandEcho.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice.command;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import alice.Alice;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":""},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"public class CommandEcho extends Command {"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":""},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"\tpublic CommandEcho(String[] tokens) {"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"\t\tsuper(tokens);"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":""},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"\tpublic Alice execute(Alice agent) {"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\t\treturn new Alice(tokens[0], agent.getData(), false, false, agent.getPrevious());"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":""},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\tpublic boolean equals(Object object) {"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\t\treturn super.equals(object);"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":29}},{"path":"src/main/java/alice/command/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice.command;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import alice.Alice;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import alice.task.Task;"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":""},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"import java.util.Locale;"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import java.util.stream.Collectors;"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"import java.util.stream.IntStream;"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":""},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"public class CommandFind extends Command {"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":""},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"\tprivate static final String SUCCESS_MESSAGE \u003d \"Here are the matching tasks in your list:\\n%s\";"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":""},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"\tprivate static final String USAGE \u003d \"find Usage: find [string]\";"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":""},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\tpublic CommandFind(String[] tokens) {"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"\t\tsuper(tokens);"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":""},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"\tpublic Alice execute(Alice agent) {"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t\ttry {"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t\t\tif (tokens.length \u003c 2 || tokens[1].length() \u003d\u003d 0) {"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\t\t\t\tthrow new IllegalArgumentException();"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\t\t\t}"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\t\t\tList\u003cTask\u003e identified \u003d IntStream.range(0, agent.getData().count())"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t\t\t\t\t.mapToObj(i -\u003e agent.getData().getTasks().get(i))"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\t\t\t\t\t.filter(t -\u003e t.getName().toLowerCase(Locale.ROOT).contains(tokens[1].toLowerCase(Locale.ROOT)))"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\t\t\t\t\t.collect(Collectors.toList());"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t\t\tif (identified.size() \u003c\u003d 0) {"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\t\t\t\treturn new Alice(\"No items found\", agent.getData(), agent.getIsDone(), false, agent.getPrevious());"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\t\t\t}"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t\t\tString response \u003d String.format(SUCCESS_MESSAGE,"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"\t\t\t\t\tIntStream.range(0, identified.size())"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t\t\t\t\t\t\t.mapToObj(i -\u003e (i + 1) + \" \" + identified.get(i))"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t\t\t\t\t\t\t.collect(Collectors.joining(\"\\n\")));"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\t\t\treturn new Alice(response, agent.getData(), agent.getIsDone(), false, agent.getPrevious());"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t\t} catch (IllegalArgumentException illegalArgumentException) {"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\t\t\treturn new Alice(USAGE, agent.getData(), agent.getIsDone(), false, agent.getPrevious());"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":""},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":""},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"\tpublic boolean equals(Object object) {"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"\t\treturn super.equals(object);"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":49}},{"path":"src/main/java/alice/command/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice.command;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import alice.Alice;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":""},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import java.util.stream.Collectors;"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import java.util.stream.IntStream;"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":""},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"public class CommandList extends Command {"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":""},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"\tpublic CommandList(String[] tokens) {"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\t\tsuper(tokens);"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":""},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\tpublic Alice execute(Alice agent) {"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"\t\tString response;"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t\tif (agent.getData().count() \u003c\u003d 0) {"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t\t\tresponse \u003d \"Your schedule is empty\";"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\t\t} else {"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\t\t\tresponse \u003d IntStream.range(0, agent.getData().count())"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\t\t\t\t\t.mapToObj(i -\u003e (i + 1) + \".\" + agent.getData().getTasks().get(i))"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t\t\t\t\t.collect(Collectors.joining(\"\\n\"));"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\t\treturn new Alice(response, agent.getData(), agent.getIsDone(), false, agent.getPrevious());"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":""},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\tpublic boolean equals(Object object) {"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\t\treturn super.equals(object);"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":40}},{"path":"src/main/java/alice/command/CommandUndo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice.command;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import alice.Alice;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":""},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"public class CommandUndo extends Command {"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":""},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"\tprivate static final String SUCCESS_MESSAGE \u003d \"Undid the previous command\";"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":""},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"\tpublic CommandUndo() {"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"\t\tsuper();"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":""},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\tpublic CommandUndo(String[] tokens) {"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"\t\tsuper(tokens);"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":""},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\tpublic Alice execute(Alice agent) {"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t\tif (agent.getPrevious() \u003d\u003d null) {"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\t\t\treturn new Alice(\"Nothing to undo!\", agent.getData(), false, false, agent.getPrevious());"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t\treturn new Alice(SUCCESS_MESSAGE, agent.getPrevious().getData(), false, true, agent.getPrevious().getPrevious());"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":""},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"\t * {@inheritDoc}"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\tpublic boolean equals(Object object) {"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t\treturn super.equals(object);"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":41}},{"path":"src/main/java/alice/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice.command;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import java.util.HashMap;"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import java.util.Map;"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"import java.util.function.Function;"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import java.util.regex.Matcher;"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"import java.util.regex.Pattern;"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":""},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":""},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\t * Mapping from command to it\u0027s format"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"\t **/"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"\tpublic static final Map\u003cString, Pattern\u003e regexMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":""},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\t * Mapping from command to it\u0027s constructor"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"\t **/"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\tpublic static final Map\u003cString, Function\u003cString[], Command\u003e\u003e functionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":""},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\tstatic {"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t\tregexMap.put(\"todo\", Pattern.compile(\"todo\\\\s+(.*)\"));"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\t\tregexMap.put(\"deadline\", Pattern.compile(\"deadline\\\\s+(.*)/by\\\\s+(.*)\"));"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\t\tregexMap.put(\"event\", Pattern.compile(\"event\\\\s+(.*)/at\\\\s+(.*)\"));"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\t\tregexMap.put(\"done\", Pattern.compile(\"done\\\\s+(\\\\d+)\"));"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t\tregexMap.put(\"delete\", Pattern.compile(\"delete\\\\s+(\\\\d+)\"));"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\t\tregexMap.put(\"list\", Pattern.compile(\"^list$\"));"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\t\tregexMap.put(\"bye\", Pattern.compile(\"^bye$\"));"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t\tregexMap.put(\"undo\", Pattern.compile(\"^undo$\"));"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\t\tregexMap.put(\"find\", Pattern.compile(\"^find\\\\s+(.*)\"));"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":""},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":""},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\tstatic {"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t\tfunctionMap.put(\"todo\", CommandAdd::new);"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\t\tfunctionMap.put(\"deadline\", CommandAdd::new);"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t\tfunctionMap.put(\"event\", CommandAdd::new);"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\t\tfunctionMap.put(\"done\", CommandDone::new);"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"\t\tfunctionMap.put(\"delete\", CommandDelete::new);"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"\t\tfunctionMap.put(\"list\", CommandList::new);"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"\t\tfunctionMap.put(\"bye\", CommandBye::new);"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"\t\tfunctionMap.put(\"find\", CommandFind::new);"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"\t\tfunctionMap.put(\"undo\", CommandUndo::new);"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":""},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"\t/**"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"\t * Returns a command given an input string."},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"\t * If command is identified, an EchoCommand is returned."},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"\t *"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"\t * @param input input given by the user."},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"\t * @return Command command of specific type"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"\t */"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"\tpublic static Command parse(String input) {"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"\t\tList\u003cString\u003e tmpList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"\t\tinput \u003d input.trim();"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"\t\tString[] tokens \u003d input.split(\"\\\\s+\");"},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"\t\tPattern regex \u003d regexMap.get(tokens[0]);"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"\t\tif (regex \u003d\u003d null) {"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"\t\t\treturn new CommandEcho(new String[]{input});"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"\t\tMatcher matcher \u003d regex.matcher(input);"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"\t\tif (matcher.find()) {"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"\t\t\tfor (int i \u003d 1; i \u003c\u003d matcher.groupCount(); i++) {"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":"\t\t\t\ttmpList.add(matcher.group(i).trim());"},{"lineNumber":67,"author":{"gitId":"lue97"},"content":"\t\t\t}"},{"lineNumber":68,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":69,"author":{"gitId":"lue97"},"content":"\t\ttmpList.add(0, tokens[0]);"},{"lineNumber":70,"author":{"gitId":"lue97"},"content":"\t\tassert functionMap.containsKey(tokens[0]);"},{"lineNumber":71,"author":{"gitId":"lue97"},"content":"\t\treturn functionMap.get(tokens[0]).apply(tmpList.toArray(new String[]{}));"},{"lineNumber":72,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":73,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":73}},{"path":"src/main/java/alice/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice.task;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":""},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"public abstract class Task implements Cloneable, java.io.Serializable {"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":""},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"\tprotected static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy L dd, E\");"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":""},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"\tprotected final String name;"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"\tprotected final boolean isDone;"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":""},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"\tpublic Task(String name) {"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"\t\tthis.name \u003d name;"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\t\tthis.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":""},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\tpublic Task(String name, boolean isDone) {"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"\t\tthis.name \u003d name;"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\t\tthis.isDone \u003d isDone;"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":""},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"\tpublic String getName() {"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t\treturn this.name;"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":""},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\tpublic abstract Task setDone(boolean done);"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":""},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\tpublic abstract Task clone();"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":""},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\tpublic String toString() {"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\t\treturn String.format(\"[%s] %s\", this.isDone ? \"\\u2713\" : \"\\u2718\", this.name);"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":""},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\tpublic boolean equals(Object object) {"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\t\tif (object \u003d\u003d this) {"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t\t\treturn true;"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"\t\tif (this.getClass() !\u003d object.getClass()) {"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"\t\t\treturn false;"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"\t\tTask task \u003d (Task) object;"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"\t\tif (!this.name.equals(task.name)) {"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"\t\t\treturn false;"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"\t\treturn this.isDone \u003d\u003d task.isDone;"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":""},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"\tpublic int hashCode() {"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"\t\tint result \u003d name !\u003d null ? name.hashCode() : 0;"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"\t\tresult \u003d 31 * result + (isDone ? 1 : 0);"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"\t\treturn result;"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":57}},{"path":"src/main/java/alice/task/TaskBuilder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice.task;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import alice.AliceException;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":""},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":""},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"public class TaskBuilder {"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":""},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"\tprivate static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/M/d\");"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":""},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"\tprivate static LocalDate parseDate(String dateString) throws AliceException {"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\t\ttry {"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"\t\t\treturn LocalDate.parse(dateString, formatter);"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"\t\t} catch (DateTimeParseException dateTimeParseException) {"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\t\t\tthrow new AliceException(\"Invalid date supplied, \" + dateTimeParseException.getMessage());"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":""},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\tpublic static Task buildTask(String[] tokens) throws AliceException, IllegalArgumentException {"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"\t\tTask task;"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t\tif (tokens.length \u003c 2 || tokens[1].trim().length() \u003d\u003d 0) {"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t\t\tthrow new IllegalArgumentException();"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\t\tswitch (tokens[0].trim()) {"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\t\tcase \"todo\":"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t\t\ttask \u003d new TaskTodo(tokens[1], false);"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\t\t\tbreak;"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\t\tcase \"deadline\":"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t\t\tif (tokens[2].trim().length() \u003d\u003d 0) {"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\t\t\t\tthrow new IllegalArgumentException();"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\t\t\t}"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t\t\ttask \u003d new TaskDeadline(tokens[1], false, parseDate(tokens[2]));"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"\t\t\tbreak;"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t\tcase \"event\":"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t\t\tif (tokens[2].trim().length() \u003d\u003d 0) {"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\t\t\t\tthrow new IllegalArgumentException();"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t\t\t}"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\t\t\ttask \u003d new TaskEvent(tokens[1], false, parseDate(tokens[2]));"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"\t\t\tbreak;"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"\t\tdefault:"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"\t\t\tthrow new IllegalStateException();"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"\t\treturn task;"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":47}},{"path":"src/main/java/alice/task/TaskDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice.task;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":""},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"public class TaskDeadline extends Task {"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":""},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"\tprivate final LocalDate deadline;"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":""},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"\tpublic TaskDeadline(String name, LocalDate deadline) {"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"\t\tsuper(name);"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"\t\tthis.deadline \u003d deadline;"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":""},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\tpublic TaskDeadline(String name, boolean done, LocalDate deadline) {"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"\t\tsuper(name, done);"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"\t\tthis.deadline \u003d deadline;"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":""},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\tpublic TaskDeadline setDone(boolean done) {"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"\t\treturn new TaskDeadline(this.name, done, this.deadline);"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":""},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\tpublic TaskDeadline clone() {"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\t\treturn new TaskDeadline(this.name, this.isDone, this.deadline);"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":""},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\tpublic String toString() {"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\t\treturn String.format(\"[D]%s (by: %s)\", super.toString(), this.deadline.format(Task.formatter));"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":""},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\tpublic boolean equals(Object object) {"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"\t\tif (!(object instanceof TaskDeadline)) {"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t\t\treturn false;"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\t\tif (!super.equals(object)) {"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t\t\treturn false;"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"\t\tTaskDeadline taskDeadline \u003d (TaskDeadline) object;"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"\t\treturn taskDeadline.deadline.equals(this.deadline);"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":44}},{"path":"src/main/java/alice/task/TaskEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice.task;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":""},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"public class TaskEvent extends Task {"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":""},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"\tprivate final LocalDate time;"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":""},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"\tpublic TaskEvent(String name, LocalDate time) {"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"\t\tsuper(name);"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"\t\tthis.time \u003d time;"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":""},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\tpublic TaskEvent(String name, boolean done, LocalDate time) {"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"\t\tsuper(name, done);"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"\t\tthis.time \u003d time;"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":""},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\tpublic TaskEvent setDone(boolean done) {"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"\t\treturn new TaskEvent(this.name, done, this.time);"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":""},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\tpublic TaskEvent clone() {"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\t\treturn new TaskEvent(this.name, this.isDone, this.time);"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":""},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\tpublic String toString() {"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\t\treturn String.format(\"[E]%s (at: %s)\", super.toString(), this.time.format(Task.formatter));"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":""},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\tpublic boolean equals(Object object) {"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t\tif (!(object instanceof TaskEvent)) {"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"\t\t\treturn false;"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t\tif (!super.equals(object)) {"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\t\t\treturn false;"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\t\tTaskEvent taskDeadline \u003d (TaskEvent) object;"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"\t\treturn taskDeadline.time.equals(this.time);"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":43}},{"path":"src/main/java/alice/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice.task;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import java.util.stream.Collectors;"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":""},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"public class TaskList implements java.io.Serializable {"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":""},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"\tprivate static final long serialVersionUID \u003d 1;"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":""},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"\tprivate final List\u003cTask\u003e tasks;"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":""},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"\tpublic TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"\t\tthis.tasks \u003d tasks;"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":""},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"\tpublic List\u003cTask\u003e getTasks() {"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\t\treturn tasks.stream().map(Task::clone).collect(Collectors.toList());"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":""},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"\tpublic int count() {"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\t\treturn tasks.size();"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":""},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\tpublic boolean equals(Object object) {"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\t\tif (object \u003d\u003d this) {"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\t\t\treturn true;"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\t\tif (object.getClass() !\u003d this.getClass()) {"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\t\t\treturn false;"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\t\tTaskList taskList \u003d (TaskList) object;"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\t\tif (taskList.count() !\u003d this.count()) {"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t\t\treturn false;"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t\tfor (int i \u003d 0; i \u003c taskList.count(); i++) {"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t\t\tif (!taskList.tasks.get(i).equals(this.tasks.get(i))) {"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\t\t\t\treturn false;"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t\t\t}"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\t\t}"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"\t\treturn true;"},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":43}},{"path":"src/main/java/alice/task/TaskTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"package alice.task;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"public class TaskTodo extends Task {"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":""},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"\tpublic TaskTodo(String name) {"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"\t\tsuper(name);"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":""},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"\tpublic TaskTodo(String name, boolean done) {"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"\t\tsuper(name, done);"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":""},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"\tpublic TaskTodo setDone(boolean done) {"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\t\treturn new TaskTodo(this.name, done);"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":""},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"\tpublic TaskTodo clone() {"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\t\treturn new TaskTodo(this.name, this.isDone);"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":""},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"\tpublic String toString() {"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t\treturn String.format(\"[T]%s\", super.toString());"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":""},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\t@Override"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\tpublic boolean equals(Object object) {"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\t\treturn super.equals(object);"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":31}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":""},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\""},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"\u003e"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"    \u003c/children\u003e"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"    \u003cpadding\u003e"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"    \u003c/padding\u003e"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"lue97":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":""},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":""},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"            fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"    \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"                    vvalue\u003d\"1.0\"\u003e"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"            \u003ccontent\u003e"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"            \u003c/content\u003e"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"    \u003c/children\u003e"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"lue97":24}},{"path":"src/test/java/ParseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"import alice.command.CommandAdd;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"import alice.command.CommandEcho;"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import alice.command.CommandList;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import alice.command.Parser;"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":""},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":""},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":""},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"public class ParseTest {"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"\tpublic void parseTodo_correct_success() {"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"\t\tassertEquals(new CommandAdd(new String[]{\"todo\", \"a\"}), Parser.parse(\"todo a\"));"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":""},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"\tpublic void parseDeadline_correct_success() {"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"\t\tassertEquals("},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"\t\t\t\tnew CommandAdd(new String[]{\"deadline\", \"a\", \"2020/1/2\"}),"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"\t\t\t\tParser.parse(\"deadline a /by 2020/1/2\")"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"\t\t);"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":""},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\tpublic void parseEvent_correct_success() {"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"\t\tassertEquals("},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\t\t\t\tnew CommandAdd(new String[]{\"event\", \"a\", \"2020/1/2\"}),"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\t\t\t\tParser.parse(\"event a /at 2020/1/2\")"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"\t\t);"},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":""},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\tpublic void parseList_correct_success() {"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t\tassertEquals("},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"\t\t\t\tnew CommandList(new String[]{\"list\"}),"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":"\t\t\t\tParser.parse(\"list\"));"},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":""},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\tpublic void parse_list_success() {"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":"\t\tassertEquals("},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"\t\t\t\tnew CommandList(new String[]{\"list\"}),"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"\t\t\t\tParser.parse(\"list\")"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"\t\t);"},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":""},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":"\tpublic void parseEvent_excessWhitespace_whitespaceRemoved() {"},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"\t\tassertEquals("},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"\t\t\t\tnew CommandAdd(new String[]{\"event\", \"a\", \"2020/1/2\"}),"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"\t\t\t\tParser.parse(\"event  a     /at  2020/1/2\")"},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"\t\t);"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":""},{"lineNumber":55,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"\tpublic void parseInvalid_invalidCommand_echoReturned() {"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"\t\tString input \u003d \"command abc\";"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"\t\tassertEquals("},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"\t\t\t\tnew CommandEcho(new String[]{input}),"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"\t\t\t\tParser.parse(input)"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"\t\t);"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":63}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"import alice.AliceException;"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"import alice.task.Task;"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"import alice.task.TaskBuilder;"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"import alice.task.TaskDeadline;"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"import alice.task.TaskEvent;"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"import alice.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":""},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"import java.util.stream.Collectors;"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":""},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"import alice.task.TaskTodo;"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":""},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":""},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":""},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"public class TaskTest {"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":""},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"\tstatic LocalDate testDate1 \u003d LocalDate.of(2020, 1, 30);"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":""},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"\tstatic List\u003cTask\u003e tl1 \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"\tstatic List\u003cTask\u003e tl2 \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":""},{"lineNumber":30,"author":{"gitId":"lue97"},"content":"\tstatic {"},{"lineNumber":31,"author":{"gitId":"lue97"},"content":"\t\ttl1.add(new TaskDeadline(\"deadline a\", false, testDate1));"},{"lineNumber":32,"author":{"gitId":"lue97"},"content":"\t\ttl1.add(new TaskEvent(\"event a\", false, testDate1));"},{"lineNumber":33,"author":{"gitId":"lue97"},"content":"\t\ttl1.add(new TaskTodo(\"todo a\", false));"},{"lineNumber":34,"author":{"gitId":"lue97"},"content":"\t\ttl2 \u003d tl1.stream().map(Task::clone).collect(Collectors.toList());"},{"lineNumber":35,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":36,"author":{"gitId":"lue97"},"content":""},{"lineNumber":37,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":38,"author":{"gitId":"lue97"},"content":"\tpublic void compareTaskTodo_sameTask_equal() {"},{"lineNumber":39,"author":{"gitId":"lue97"},"content":"\t\tassertEquals(new TaskTodo(\"a\", false), new TaskTodo(\"a\", false));"},{"lineNumber":40,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":41,"author":{"gitId":"lue97"},"content":""},{"lineNumber":42,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":43,"author":{"gitId":"lue97"},"content":"\tpublic void compareTaskDeadline_sameTask_equal() {"},{"lineNumber":44,"author":{"gitId":"lue97"},"content":"\t\tassertEquals("},{"lineNumber":45,"author":{"gitId":"lue97"},"content":"\t\t\t\tnew TaskDeadline(\"a\", false, testDate1),"},{"lineNumber":46,"author":{"gitId":"lue97"},"content":"\t\t\t\tnew TaskDeadline(\"a\", false, testDate1));"},{"lineNumber":47,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":48,"author":{"gitId":"lue97"},"content":""},{"lineNumber":49,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":50,"author":{"gitId":"lue97"},"content":"\tpublic void compareTaskDeadline_differentTask_notEqual() {"},{"lineNumber":51,"author":{"gitId":"lue97"},"content":"\t\tassertNotEquals("},{"lineNumber":52,"author":{"gitId":"lue97"},"content":"\t\t\t\tnew TaskDeadline(\"a\", true, testDate1),"},{"lineNumber":53,"author":{"gitId":"lue97"},"content":"\t\t\t\tnew TaskDeadline(\"a\", false, testDate1));"},{"lineNumber":54,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":55,"author":{"gitId":"lue97"},"content":""},{"lineNumber":56,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":57,"author":{"gitId":"lue97"},"content":"\tpublic void compareTaskDeadline_changedTask_equal() {"},{"lineNumber":58,"author":{"gitId":"lue97"},"content":"\t\tassertEquals("},{"lineNumber":59,"author":{"gitId":"lue97"},"content":"\t\t\t\tnew TaskDeadline(\"a\", true, testDate1),"},{"lineNumber":60,"author":{"gitId":"lue97"},"content":"\t\t\t\tnew TaskDeadline(\"a\", false, testDate1).setDone(true));"},{"lineNumber":61,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":62,"author":{"gitId":"lue97"},"content":""},{"lineNumber":63,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":64,"author":{"gitId":"lue97"},"content":"\tvoid compareTaskList_sameTaskList_equal() {"},{"lineNumber":65,"author":{"gitId":"lue97"},"content":"\t\tassertEquals(new TaskList(tl1), new TaskList(tl2));"},{"lineNumber":66,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":67,"author":{"gitId":"lue97"},"content":""},{"lineNumber":68,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":69,"author":{"gitId":"lue97"},"content":"\tvoid compareTaskList_changedTaskList_notEqual() {"},{"lineNumber":70,"author":{"gitId":"lue97"},"content":"\t\tList\u003cTask\u003e tl3 \u003d tl1.stream().map(Task::clone).collect(Collectors.toList());"},{"lineNumber":71,"author":{"gitId":"lue97"},"content":"\t\ttl3.set(0, tl3.get(0).setDone(true));"},{"lineNumber":72,"author":{"gitId":"lue97"},"content":"\t\tassertNotEquals(new TaskList(tl1), new TaskList(tl3));"},{"lineNumber":73,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":74,"author":{"gitId":"lue97"},"content":""},{"lineNumber":75,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":76,"author":{"gitId":"lue97"},"content":"\tvoid buildTask_invalidArgument_exceptionThrown() {"},{"lineNumber":77,"author":{"gitId":"lue97"},"content":"\t\tassertThrows(IllegalArgumentException.class, () -\u003e TaskBuilder.buildTask(new String[]{}));"},{"lineNumber":78,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":79,"author":{"gitId":"lue97"},"content":""},{"lineNumber":80,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":81,"author":{"gitId":"lue97"},"content":"\tvoid buildTask_invalidTime_exceptionThrown() {"},{"lineNumber":82,"author":{"gitId":"lue97"},"content":"\t\tException exception \u003d assertThrows("},{"lineNumber":83,"author":{"gitId":"lue97"},"content":"\t\t\t\tAliceException.class,"},{"lineNumber":84,"author":{"gitId":"lue97"},"content":"\t\t\t\t() -\u003e TaskBuilder.buildTask(new String[]{\"deadline\", \"deadline a\", \"abcdefg\"}));"},{"lineNumber":85,"author":{"gitId":"lue97"},"content":"\t\tassertTrue(exception.getMessage().contains(\"Invalid date supplied\"));"},{"lineNumber":86,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":87,"author":{"gitId":"lue97"},"content":""},{"lineNumber":88,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":89,"author":{"gitId":"lue97"},"content":"\tvoid buildTask_emptyArguments_exceptionThrown() {"},{"lineNumber":90,"author":{"gitId":"lue97"},"content":"\t\tassertThrows("},{"lineNumber":91,"author":{"gitId":"lue97"},"content":"\t\t\t\tIllegalArgumentException.class,"},{"lineNumber":92,"author":{"gitId":"lue97"},"content":"\t\t\t\t() -\u003e TaskBuilder.buildTask(new String[]{\"\", \"\", \"\"}));"},{"lineNumber":93,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":94,"author":{"gitId":"lue97"},"content":""},{"lineNumber":95,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":96,"author":{"gitId":"lue97"},"content":"\tvoid buildDeadline_invalidArgument_exceptionThrown() {"},{"lineNumber":97,"author":{"gitId":"lue97"},"content":"\t\tassertThrows("},{"lineNumber":98,"author":{"gitId":"lue97"},"content":"\t\t\t\tIllegalArgumentException.class,"},{"lineNumber":99,"author":{"gitId":"lue97"},"content":"\t\t\t\t() -\u003e TaskBuilder.buildTask(new String[]{\"deadline\", \"\", \"\"}));"},{"lineNumber":100,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":101,"author":{"gitId":"lue97"},"content":""},{"lineNumber":102,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":103,"author":{"gitId":"lue97"},"content":"\tvoid buildEvent_invalidArgument_exceptionThrown() {"},{"lineNumber":104,"author":{"gitId":"lue97"},"content":"\t\tassertThrows("},{"lineNumber":105,"author":{"gitId":"lue97"},"content":"\t\t\t\tIllegalArgumentException.class,"},{"lineNumber":106,"author":{"gitId":"lue97"},"content":"\t\t\t\t() -\u003e TaskBuilder.buildTask(new String[]{\"event\", \"\", \"\"}));"},{"lineNumber":107,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":108,"author":{"gitId":"lue97"},"content":""},{"lineNumber":109,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":110,"author":{"gitId":"lue97"},"content":"\tvoid buildTask_invalidTask_exceptionThrown() {"},{"lineNumber":111,"author":{"gitId":"lue97"},"content":"\t\tassertThrows("},{"lineNumber":112,"author":{"gitId":"lue97"},"content":"\t\t\t\tIllegalStateException.class,"},{"lineNumber":113,"author":{"gitId":"lue97"},"content":"\t\t\t\t() -\u003e TaskBuilder.buildTask(new String[]{\"state\", \"abcdefg\"})"},{"lineNumber":114,"author":{"gitId":"lue97"},"content":"\t\t);"},{"lineNumber":115,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":116,"author":{"gitId":"lue97"},"content":""},{"lineNumber":117,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":118,"author":{"gitId":"lue97"},"content":"\tvoid compareBuiltTodo_sameTask_equal() {"},{"lineNumber":119,"author":{"gitId":"lue97"},"content":"\t\tassertEquals("},{"lineNumber":120,"author":{"gitId":"lue97"},"content":"\t\t\t\tnew TaskTodo(\"abcdefg\", false),"},{"lineNumber":121,"author":{"gitId":"lue97"},"content":"\t\t\t\tassertDoesNotThrow(() -\u003e TaskBuilder.buildTask(new String[]{\"todo\", \"abcdefg\"})));"},{"lineNumber":122,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":123,"author":{"gitId":"lue97"},"content":""},{"lineNumber":124,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":125,"author":{"gitId":"lue97"},"content":"\tvoid compareBuiltDeadline_sameTask_equal() {"},{"lineNumber":126,"author":{"gitId":"lue97"},"content":"\t\tTask t \u003d assertDoesNotThrow(() -\u003e TaskBuilder.buildTask(new String[]{\"deadline\", \"abcdefg\", \"2020/1/30\"}));"},{"lineNumber":127,"author":{"gitId":"lue97"},"content":"\t\tassertEquals(new TaskDeadline(\"abcdefg\", testDate1), t);"},{"lineNumber":128,"author":{"gitId":"lue97"},"content":"\t\tassertEquals(t.toString(), \"[D][\\u2718] abcdefg (by: 2020 1 30, Thu)\");"},{"lineNumber":129,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":130,"author":{"gitId":"lue97"},"content":""},{"lineNumber":131,"author":{"gitId":"lue97"},"content":"\t@Test"},{"lineNumber":132,"author":{"gitId":"lue97"},"content":"\tvoid compareBuiltEvent_sameTask_equal() {"},{"lineNumber":133,"author":{"gitId":"lue97"},"content":"\t\tTask t \u003d assertDoesNotThrow(() -\u003e TaskBuilder.buildTask(new String[]{\"event\", \"abcdefg\", \"2020/1/30\"}));"},{"lineNumber":134,"author":{"gitId":"lue97"},"content":"\t\tassertEquals(new TaskEvent(\"abcdefg\", testDate1), t);"},{"lineNumber":135,"author":{"gitId":"lue97"},"content":"\t\tassertEquals(t.toString(), \"[E][\\u2718] abcdefg (at: 2020 1 30, Thu)\");"},{"lineNumber":136,"author":{"gitId":"lue97"},"content":"\t}"},{"lineNumber":137,"author":{"gitId":"lue97"},"content":"}"}],"authorContributionMap":{"lue97":137}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lue97"},"content":"hello"},{"lineNumber":2,"author":{"gitId":"lue97"},"content":"How are you?"},{"lineNumber":3,"author":{"gitId":"lue97"},"content":"todo buy groceries"},{"lineNumber":4,"author":{"gitId":"lue97"},"content":"list"},{"lineNumber":5,"author":{"gitId":"lue97"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"lue97"},"content":"list"},{"lineNumber":7,"author":{"gitId":"lue97"},"content":"deadline 01 /by 12-jan-2020"},{"lineNumber":8,"author":{"gitId":"lue97"},"content":"deadline 02  /by 12-jan-2020"},{"lineNumber":9,"author":{"gitId":"lue97"},"content":"deadline 03   /by 12-jan-2020"},{"lineNumber":10,"author":{"gitId":"lue97"},"content":"deadline 04    /by 12-jan-2020"},{"lineNumber":11,"author":{"gitId":"lue97"},"content":"deadline 05     /by 12-jan-2020"},{"lineNumber":12,"author":{"gitId":"lue97"},"content":"deadline"},{"lineNumber":13,"author":{"gitId":"lue97"},"content":"deadline /by"},{"lineNumber":14,"author":{"gitId":"lue97"},"content":"event /at"},{"lineNumber":15,"author":{"gitId":"lue97"},"content":"todo"},{"lineNumber":16,"author":{"gitId":"lue97"},"content":"done 999"},{"lineNumber":17,"author":{"gitId":"lue97"},"content":"done 4"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"done 2"},{"lineNumber":19,"author":{"gitId":"lue97"},"content":"done 3"},{"lineNumber":20,"author":{"gitId":"lue97"},"content":"list"},{"lineNumber":21,"author":{"gitId":"lue97"},"content":"event attend lecture /at tomorrow noon"},{"lineNumber":22,"author":{"gitId":"lue97"},"content":"done 7"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"list"},{"lineNumber":24,"author":{"gitId":"lue97"},"content":"delete 1"},{"lineNumber":25,"author":{"gitId":"lue97"},"content":"list"},{"lineNumber":26,"author":{"gitId":"lue97"},"content":"delete 1"},{"lineNumber":27,"author":{"gitId":"lue97"},"content":"list"},{"lineNumber":28,"author":{"gitId":"lue97"},"content":"delete 200"},{"lineNumber":29,"author":{"gitId":"lue97"},"content":"list"}],"authorContributionMap":{"lue97":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"lue97"},"content":"java -classpath ..\\bin alice.Alice \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"lue97":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"lue97"},"content":"java -classpath ../bin Alice \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"lue97":1,"-":37}}]
