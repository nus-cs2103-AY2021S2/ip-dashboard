[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"# prev.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"1. After that, locate the `src/main/java/prev.Duke.java` file, right-click it, and choose `Run prev.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"prerthan99":2,"-":21}},{"path":"src/main/java/level4/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level4;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":"    //var declaration"},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":"    String stringForBY;"},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"    private Deadline() { //subclass things"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":"        super();"},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"    Deadline(String byMessage){ //constructor wth byMessage as input"},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":"        this();"},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"        this.stringForBY \u003d byMessage;"},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"    public Deadline(String detailsNeeded, String byMessage){ //constructor"},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"        //this constructor takes in 2 params"},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"        this(byMessage);"},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"        this.detailsOfTheMessage \u003d detailsNeeded;"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":"    public char forIconGetWhatIsTaskType(){ //get teh icon we need"},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":"        return \u0027D\u0027; //specified.  can be changed if needed"},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":26,"author":{"gitId":"prerthan99"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"prerthan99"},"content":"    public String toString(){ //toString methof"},{"lineNumber":28,"author":{"gitId":"prerthan99"},"content":"        return String.format(\"[%c]%s (by: %s)\", this.forIconGetWhatIsTaskType(), super.toString(),"},{"lineNumber":29,"author":{"gitId":"prerthan99"},"content":"                this.stringForBY);"},{"lineNumber":30,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":31}},{"path":"src/main/java/level4/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level4;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":"import level4.IO.*;"},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"    static whatDoWePutInside reader; //reader goes inside"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":"    static whatGoesOutside writer; //writer writes output from chatbot"},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":"    public static boolean mainProgramLoopBody() { //as long as we dont say bye"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"        boolean terminatingCondition \u003d false; //by default the terminatinf condition is false"},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":"        Instruction instruction; //create instructions"},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"        "},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"        do {"},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":"            instruction \u003d Instruction.whatIsTheCommd( //get teh command for instruction"},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"                        reader.theLinezzThatComesNext(). //by reading in the line"},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"                                getDa1stTikam()); //and getting the corresponding token"},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"            terminatingCondition \u003d instruction.equals(Instruction.BYE); //the terminating condition would be if we say bye"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"            switch (instruction)"},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":"            {"},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":"                // if we say todo"},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":"                case TODO:"},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"                    Task.putInANewTask(new Todo(reader.inputThatDontNeed1stTikam())); //put todo"},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"                    break; //and end it"},{"lineNumber":26,"author":{"gitId":"prerthan99"},"content":"                //if we say deadline"},{"lineNumber":27,"author":{"gitId":"prerthan99"},"content":"                //what is in a deadline, the details and time"},{"lineNumber":28,"author":{"gitId":"prerthan99"},"content":"                case DEADLINE: Task.putInANewTask(new Deadline(reader.getTheJuicyDetails(), //create a new deadline"},{"lineNumber":29,"author":{"gitId":"prerthan99"},"content":"                                                            reader.whatIsTheTime()));"},{"lineNumber":30,"author":{"gitId":"prerthan99"},"content":"                    break; //put in details for deadline and time of deadline"},{"lineNumber":31,"author":{"gitId":"prerthan99"},"content":"                //if we say event"},{"lineNumber":32,"author":{"gitId":"prerthan99"},"content":"                case EVENT:"},{"lineNumber":33,"author":{"gitId":"prerthan99"},"content":"                    //whats is in an event, the detaisk and time"},{"lineNumber":34,"author":{"gitId":"prerthan99"},"content":"                    Task.putInANewTask(new Event(reader.getTheJuicyDetails(), //create an event"},{"lineNumber":35,"author":{"gitId":"prerthan99"},"content":"                                                reader.whatIsTheTime()));"},{"lineNumber":36,"author":{"gitId":"prerthan99"},"content":"                    break;//put in deatils and time and break"},{"lineNumber":37,"author":{"gitId":"prerthan99"},"content":"                //if we say list"},{"lineNumber":38,"author":{"gitId":"prerthan99"},"content":"                case LIST:"},{"lineNumber":39,"author":{"gitId":"prerthan99"},"content":"                    //() -\u003e Task.xsOfTasks()"},{"lineNumber":40,"author":{"gitId":"prerthan99"},"content":"                    Task.xsOfTasks(); //just print it out is sufficient"},{"lineNumber":41,"author":{"gitId":"prerthan99"},"content":"                    break;//end"},{"lineNumber":42,"author":{"gitId":"prerthan99"},"content":"                //if we are done"},{"lineNumber":43,"author":{"gitId":"prerthan99"},"content":"                //we need the input(what is done) and mark the list that we\u0027ve done it"},{"lineNumber":44,"author":{"gitId":"prerthan99"},"content":"                case DONE:"},{"lineNumber":45,"author":{"gitId":"prerthan99"},"content":"                    Task.getTaskAtPosition(Integer.parseInt(reader."},{"lineNumber":46,"author":{"gitId":"prerthan99"},"content":"                            inputThatDontNeed1stTikam())).markTaskAsCompleted();"},{"lineNumber":47,"author":{"gitId":"prerthan99"},"content":"                    break; //get what we need, change what we need and break"},{"lineNumber":48,"author":{"gitId":"prerthan99"},"content":"                //if invalid and empty, we just go on"},{"lineNumber":49,"author":{"gitId":"prerthan99"},"content":"                case EMPTY:"},{"lineNumber":50,"author":{"gitId":"prerthan99"},"content":"                case INVALID:"},{"lineNumber":51,"author":{"gitId":"prerthan99"},"content":"                    continue;"},{"lineNumber":52,"author":{"gitId":"prerthan99"},"content":"                case BYE: //if we say bye"},{"lineNumber":53,"author":{"gitId":"prerthan99"},"content":"                    System.out.println(\"good, farewell, adieu, till we meet again\");"},{"lineNumber":54,"author":{"gitId":"prerthan99"},"content":"                    break;"},{"lineNumber":55,"author":{"gitId":"prerthan99"},"content":"                default: //to stop infinite loop in case i forgot anything"},{"lineNumber":56,"author":{"gitId":"prerthan99"},"content":"                    break;"},{"lineNumber":57,"author":{"gitId":"prerthan99"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"prerthan99"},"content":"            "},{"lineNumber":59,"author":{"gitId":"prerthan99"},"content":"        } while (!terminatingCondition);"},{"lineNumber":60,"author":{"gitId":"prerthan99"},"content":"        return terminatingCondition;"},{"lineNumber":61,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":63,"author":{"gitId":"prerthan99"},"content":"    public static void endgame() { //clean up and abstract the code"},{"lineNumber":64,"author":{"gitId":"prerthan99"},"content":"        writer.endingNote();"},{"lineNumber":65,"author":{"gitId":"prerthan99"},"content":"        writer.endItAll();"},{"lineNumber":66,"author":{"gitId":"prerthan99"},"content":"        reader.endItAll();"},{"lineNumber":67,"author":{"gitId":"prerthan99"},"content":"        //System.exit(1);"},{"lineNumber":68,"author":{"gitId":"prerthan99"},"content":"        System.exit(0);"},{"lineNumber":69,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":71,"author":{"gitId":"prerthan99"},"content":"    public static void main(String[] args) {"},{"lineNumber":72,"author":{"gitId":"prerthan99"},"content":"        //initialise var"},{"lineNumber":73,"author":{"gitId":"prerthan99"},"content":"        reader \u003d new whatDoWePutInside();  //what goes in the reader"},{"lineNumber":74,"author":{"gitId":"prerthan99"},"content":"        writer \u003d new whatGoesOutside(); //what comes out from the writer"},{"lineNumber":75,"author":{"gitId":"prerthan99"},"content":"        writer.helloWorldTime();  //greeting msg"},{"lineNumber":76,"author":{"gitId":"prerthan99"},"content":"        Task.listMakingMethod();  //creates list of task"},{"lineNumber":77,"author":{"gitId":"prerthan99"},"content":"        if (!mainProgramLoopBody()) endgame(); //keep running untill endgame"},{"lineNumber":78,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":79}},{"path":"src/main/java/level4/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level4;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":"    //declare var"},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":"    protected String howLongDuration; //how long"},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"    protected String timeToEnd; //when we end"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":"    protected String timeToStart; //when we start"},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":"    private Event(){"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"        super(); //sublass things"},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":"        this.timeToEnd \u003d \"\"; //ednign"},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"        this.timeToStart \u003d \"\"; //starting"},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"    //constructor"},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"    public Event(String detailsFromtheString, String howLongDuration){ //takes in 2 inputs"},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"        // input the paticular details from string and and how long it is"},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"        super(detailsFromtheString); //inheritance"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"        this.howLongDuration \u003d howLongDuration; //set duration"},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":"    public Event(String detailsFromtheString, String timeToStart, String timeToEnd){ //takes in 3 inputs"},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":"        //inputs : details, start and end time"},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"        //this(;);"},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"        this();"},{"lineNumber":26,"author":{"gitId":"prerthan99"},"content":"        this.timeToEnd \u003d timeToEnd; //ending"},{"lineNumber":27,"author":{"gitId":"prerthan99"},"content":"        this.timeToStart \u003d timeToStart; //statring"},{"lineNumber":28,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":29,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":31,"author":{"gitId":"prerthan99"},"content":"    public char forIconGetWhatIsTaskType(){ //get the specofied icon"},{"lineNumber":32,"author":{"gitId":"prerthan99"},"content":"        return \u0027E\u0027; //return following format"},{"lineNumber":33,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":35,"author":{"gitId":"prerthan99"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"prerthan99"},"content":"    public String toString(){ //string to string method"},{"lineNumber":37,"author":{"gitId":"prerthan99"},"content":"        return String.format(\"[%c]%s (at: %s)\", this.forIconGetWhatIsTaskType(),"},{"lineNumber":38,"author":{"gitId":"prerthan99"},"content":"                super.toString(), this.howLongDuration);"},{"lineNumber":39,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":40,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":41}},{"path":"src/main/java/level4/IO/whatDoWePutInside.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level4.IO;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":"//imports found from stack exchange"},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":"import java.io.BufferedReader;"},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"import java.io.InputStreamReader;"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":"import java.util.regex.Pattern;"},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":"import java.util.stream.Collectors;"},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":"import java.util.stream.Stream;"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":"public class whatDoWePutInside{  //public class for inputs"},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"    //use buffer reader instead of scanner"},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"    static BufferedReader bufferedReader \u003d new BufferedReader(new InputStreamReader(System.in));"},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":"    //special patterns, again credits to stack exchange"},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"    static Pattern painInTheAssEmptySpace \u003d Pattern.compile(\"\\\\s+\"); //no more \" \""},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"    static Pattern commandForSlashing \u003d Pattern.compile(\"(?i)\\\\/((at)|(by)|(on))\"); //took long time to find this"},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"    static String readInTheInputLine() { //try catch is exception version of if and else"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"        try { return bufferedReader.readLine(); //try to read"},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"            //if not"},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":"        }catch (Exception exception){ //catch the exception"},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":"            //System.out.println(\"I/O exception occurred.\");"},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":"            System.err.println(\"The input does not match the format\"); //err is better"},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"            return \"\";"},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":28,"author":{"gitId":"prerthan99"},"content":"    protected String linezzzz; //declare string"},{"lineNumber":29,"author":{"gitId":"prerthan99"},"content":"    protected String[] tikam;  //declare also string array"},{"lineNumber":30,"author":{"gitId":"prerthan99"},"content":"    //for those not proficient in malay, this means token"},{"lineNumber":31,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":32,"author":{"gitId":"prerthan99"},"content":"    public whatDoWePutInside() { }"},{"lineNumber":33,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":34,"author":{"gitId":"prerthan99"},"content":"    public whatDoWePutInside theLinezzThatComesNext(){ //method to put in next line"},{"lineNumber":35,"author":{"gitId":"prerthan99"},"content":"        this.linezzzz \u003d readInTheInputLine(); //read in the input line"},{"lineNumber":36,"author":{"gitId":"prerthan99"},"content":"        this.tikam \u003d painInTheAssEmptySpace.split(this.linezzzz.trim()); //put in the empty space"},{"lineNumber":37,"author":{"gitId":"prerthan99"},"content":"        return this; //return it"},{"lineNumber":38,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":40,"author":{"gitId":"prerthan99"},"content":"    //getter methods"},{"lineNumber":41,"author":{"gitId":"prerthan99"},"content":"    public String[] getTikam() { //get the token"},{"lineNumber":42,"author":{"gitId":"prerthan99"},"content":"        this.tikam \u003d this.tikam.length \u003d\u003d 0 ? painInTheAssEmptySpace.split(this.linezzzz.trim()) : this.tikam;"},{"lineNumber":43,"author":{"gitId":"prerthan99"},"content":"        return this.tikam; //return he token"},{"lineNumber":44,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":46,"author":{"gitId":"prerthan99"},"content":"    public Stream\u003cString\u003e getTheStrx4DaTikam(){//get the stream with the token we want"},{"lineNumber":47,"author":{"gitId":"prerthan99"},"content":"        return Stream.of(this.getTikam()); //return the stream"},{"lineNumber":48,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":50,"author":{"gitId":"prerthan99"},"content":"    public String getDa1stTikam(){ //get teh first token"},{"lineNumber":51,"author":{"gitId":"prerthan99"},"content":"        //return this.tikam[1];"},{"lineNumber":52,"author":{"gitId":"prerthan99"},"content":"        return this.tikam[0];  //1 doesnt work"},{"lineNumber":53,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":55,"author":{"gitId":"prerthan99"},"content":"    public String[] tikamNotNum1() { //if we need not the first token"},{"lineNumber":56,"author":{"gitId":"prerthan99"},"content":"        return this.getTheStrx4DaTikam().skip(1).toArray(String[]::new);"},{"lineNumber":57,"author":{"gitId":"prerthan99"},"content":"        //return the corresponding stream"},{"lineNumber":58,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":60,"author":{"gitId":"prerthan99"},"content":"    public String inputThatDontNeed1stTikam(){ //for inputs that do not require the 1st token"},{"lineNumber":61,"author":{"gitId":"prerthan99"},"content":"        return this.getTheStrx4DaTikam().skip(1).collect(Collectors.joining(\"\"));"},{"lineNumber":62,"author":{"gitId":"prerthan99"},"content":"        //return the corresponding stream"},{"lineNumber":63,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":65,"author":{"gitId":"prerthan99"},"content":"    public String getTheJuicyDetails() { //get all the details we need"},{"lineNumber":66,"author":{"gitId":"prerthan99"},"content":"        return Stream.of(this.tikam).skip(1).takeWhile(commandForSlashing.asMatchPredicate().negate())"},{"lineNumber":67,"author":{"gitId":"prerthan99"},"content":"                .collect(Collectors.joining(\" \"));"},{"lineNumber":68,"author":{"gitId":"prerthan99"},"content":"        //stream magic"},{"lineNumber":69,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":71,"author":{"gitId":"prerthan99"},"content":"    public String whatIsTheTime(){ //get the temporal component"},{"lineNumber":72,"author":{"gitId":"prerthan99"},"content":"        return Stream.of(this.tikam).dropWhile(commandForSlashing.asMatchPredicate().negate()).skip(1)"},{"lineNumber":73,"author":{"gitId":"prerthan99"},"content":"                .collect(Collectors.joining(\" \"));"},{"lineNumber":74,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":76,"author":{"gitId":"prerthan99"},"content":"    public void endItAll() { //ending method"},{"lineNumber":77,"author":{"gitId":"prerthan99"},"content":"        try { //we use this method to end the code"},{"lineNumber":78,"author":{"gitId":"prerthan99"},"content":"            bufferedReader.close();"},{"lineNumber":79,"author":{"gitId":"prerthan99"},"content":"        } catch (IOException e){"},{"lineNumber":80,"author":{"gitId":"prerthan99"},"content":"            //System.out.println(\"I/O exception occurred.\");"},{"lineNumber":81,"author":{"gitId":"prerthan99"},"content":"            System.err.println(\"I/O Exception occurred.\");"},{"lineNumber":82,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":84}},{"path":"src/main/java/level4/IO/whatGoesOutside.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level4.IO;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":"import level4.Task;"},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":"import java.io.*;"},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"import java.util.*;"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":"public class whatGoesOutside {"},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":"    static BufferedWriter server \u003d new BufferedWriter(new OutputStreamWriter(System.out));"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":"    static final String initialDukeSymbol \u003d"},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"            \"\\n ____        _        \\n\""},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\" "},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"            "},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"    static void wrongInputLah() { //in the event the input given is wrong format"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"        System.err.println(\"the input given does not match the format\"); //display error message"},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":"    public whatGoesOutside() { }"},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"    void attachInNewLn(String string){ //to use the line symbol"},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"        try{"},{"lineNumber":26,"author":{"gitId":"prerthan99"},"content":"            server.append(string);"},{"lineNumber":27,"author":{"gitId":"prerthan99"},"content":"            server.newLine(); //line symbol"},{"lineNumber":28,"author":{"gitId":"prerthan99"},"content":"        }catch (Exception exception) { //in event wrong format"},{"lineNumber":29,"author":{"gitId":"prerthan99"},"content":"            wrongInputLah(); //catch exception"},{"lineNumber":30,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":33,"author":{"gitId":"prerthan99"},"content":"    void putNewLineToAll(String... strings){ // append new line in"},{"lineNumber":34,"author":{"gitId":"prerthan99"},"content":"        Arrays.asList(strings).forEach(this::attachInNewLn); //use stream"},{"lineNumber":35,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":37,"author":{"gitId":"prerthan99"},"content":"    public void addMessage(String message){ //to add the corresponding message"},{"lineNumber":38,"author":{"gitId":"prerthan99"},"content":"        try{"},{"lineNumber":39,"author":{"gitId":"prerthan99"},"content":"            server.append(message); //put in the message"},{"lineNumber":40,"author":{"gitId":"prerthan99"},"content":"        }catch (Exception e){"},{"lineNumber":41,"author":{"gitId":"prerthan99"},"content":"            wrongInputLah(); //catch exception when input given is wrong"},{"lineNumber":42,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":45,"author":{"gitId":"prerthan99"},"content":"    public void talk(){  //flush out"},{"lineNumber":46,"author":{"gitId":"prerthan99"},"content":"        try{"},{"lineNumber":47,"author":{"gitId":"prerthan99"},"content":"            server.flush();"},{"lineNumber":48,"author":{"gitId":"prerthan99"},"content":"        }catch (Exception e){ //if input is wrong"},{"lineNumber":49,"author":{"gitId":"prerthan99"},"content":"            wrongInputLah(); //catch the input if its wrong"},{"lineNumber":50,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":53,"author":{"gitId":"prerthan99"},"content":"    public void tellMeSomething(String something) { //writes the specified message requested"},{"lineNumber":54,"author":{"gitId":"prerthan99"},"content":"        try{"},{"lineNumber":55,"author":{"gitId":"prerthan99"},"content":"            this.attachInNewLn(something); //try to add the line"},{"lineNumber":56,"author":{"gitId":"prerthan99"},"content":"            server.flush();"},{"lineNumber":57,"author":{"gitId":"prerthan99"},"content":"        }catch (Exception e){ //if wronf input"},{"lineNumber":58,"author":{"gitId":"prerthan99"},"content":"            wrongInputLah(); //throw it"},{"lineNumber":59,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":62,"author":{"gitId":"prerthan99"},"content":"    public void tellMeEverything(String... messages){ //similat to prev method but writes multilple msg"},{"lineNumber":63,"author":{"gitId":"prerthan99"},"content":"        try{"},{"lineNumber":64,"author":{"gitId":"prerthan99"},"content":"            putNewLineToAll(messages); //adds the messages"},{"lineNumber":65,"author":{"gitId":"prerthan99"},"content":"            server.flush();"},{"lineNumber":66,"author":{"gitId":"prerthan99"},"content":"        }catch (Exception e){ //if the input is wrong"},{"lineNumber":67,"author":{"gitId":"prerthan99"},"content":"            wrongInputLah(); //cathc the error"},{"lineNumber":68,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":71,"author":{"gitId":"prerthan99"},"content":"    public void helloWorldTime(){ //intoductory msg"},{"lineNumber":72,"author":{"gitId":"prerthan99"},"content":"        this.tellMeSomething(\"The only verdict is vengeance; \" +"},{"lineNumber":73,"author":{"gitId":"prerthan99"},"content":"                \"a vendetta held as a votive, not in vain, for the value and veracity \" +"},{"lineNumber":74,"author":{"gitId":"prerthan99"},"content":"                \"of such shall one day vindicate the vigilant and the virtuous. Verily, \" +"},{"lineNumber":75,"author":{"gitId":"prerthan99"},"content":"                \"this vichyssoise of verbiage veers most verbose vis-à-vis an introduction, \" +"},{"lineNumber":76,"author":{"gitId":"prerthan99"},"content":"                \"and so it is my very good honor to meet you and you may call me Duke, \" +"},{"lineNumber":77,"author":{"gitId":"prerthan99"},"content":"                 initialDukeSymbol + \"How can I help?\");"},{"lineNumber":78,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":80,"author":{"gitId":"prerthan99"},"content":"    public void endingNote() {"},{"lineNumber":81,"author":{"gitId":"prerthan99"},"content":"        this.tellMeSomething(\"Farewell, adieu, goodbye\"); //ending messages"},{"lineNumber":82,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":84,"author":{"gitId":"prerthan99"},"content":"    public void notifyMeThatTaskWasAdded(Task task){ //tell us when the task is added into list"},{"lineNumber":85,"author":{"gitId":"prerthan99"},"content":"        this.tellMeEverything(\"This task has been added: \","},{"lineNumber":86,"author":{"gitId":"prerthan99"},"content":"                task.toString()); //added msg"},{"lineNumber":87,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":89,"author":{"gitId":"prerthan99"},"content":"    public void notifyMeThatTaskWasMarked(Task task){ //tell us when the task has been marked"},{"lineNumber":90,"author":{"gitId":"prerthan99"},"content":"        this.tellMeEverything(\"The task requested has now been marked as done:\","},{"lineNumber":91,"author":{"gitId":"prerthan99"},"content":"                task.toString()); //marked msg"},{"lineNumber":92,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":94,"author":{"gitId":"prerthan99"},"content":"    public void endItAll() { //ending msg"},{"lineNumber":95,"author":{"gitId":"prerthan99"},"content":"        try{"},{"lineNumber":96,"author":{"gitId":"prerthan99"},"content":"            server.close(); //if all good, close it"},{"lineNumber":97,"author":{"gitId":"prerthan99"},"content":"        }catch (Exception exception){ //if input wrong"},{"lineNumber":98,"author":{"gitId":"prerthan99"},"content":"            wrongInputLah(); //catch the error"},{"lineNumber":99,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":101}},{"path":"src/main/java/level4/Instruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level4;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":" * A possible command to the Duke program."},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":" */"},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"public enum Instruction"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":"{"},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":"    BYE,                 //from level 1"},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":"    LIST,                //from level 2"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"    DONE,                //from level 3"},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":"    TODO,EVENT,DEADLINE, //from level 4"},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"        BY,AT,ON,        //specifications of level 4"},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"    EMPTY, INVALID;      //from level 5"},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"    public static Instruction whatIsTheCommd(String input)"},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"    {"},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"        for (Instruction instruction : values()) //for every inst thats in the set of values"},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"            //if it is what we want"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"            if (input.equalsIgnoreCase(instruction.toString()))"},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"                return instruction; //output accordingly"},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":"            //if not"},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":"            else if (input.isBlank())"},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":"                return EMPTY; //then we must go to this case"},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"        //and if all else fails, the is the master control"},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"        return INVALID;"},{"lineNumber":26,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":27}},{"path":"src/main/java/level4/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level4;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":"//imports"},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":"    //var declaration"},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":"    protected static ArrayList\u003cTask\u003e arrayListOfTasks; //an array list of the task"},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":"    protected boolean haveWeCompletedItOrNot; // have we done the task of rnor"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"    protected String detailsOfTheMessage; //details from the message"},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"    public Task(){ //constructor"},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"        this.detailsOfTheMessage \u003d \"\"; //default message"},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":"        //this.haveWeCompletedItOrNot \u003d true; WRONG!"},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"        this.haveWeCompletedItOrNot \u003d false;  //in the begining we obviouslt have not done it"},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"    public Task(String detailsOfTheMessage){ //constructor with 1 input"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"        this(); //default"},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"        this.detailsOfTheMessage \u003d detailsOfTheMessage; //update the message component"},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":"    public static boolean listMakingMethod(){"},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"        arrayListOfTasks \u003d new ArrayList\u003cTask\u003e(); //create a new array list of task"},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"        return !arrayListOfTasks.equals(null); //return if not null"},{"lineNumber":26,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":28,"author":{"gitId":"prerthan99"},"content":"    //public static void putInANewTask(Task newTask){"},{"lineNumber":29,"author":{"gitId":"prerthan99"},"content":"    public static boolean putInANewTask(Task newTask){"},{"lineNumber":30,"author":{"gitId":"prerthan99"},"content":"        // boolean to see if it was wasTaskAdded"},{"lineNumber":31,"author":{"gitId":"prerthan99"},"content":"        boolean wasTaskAdded \u003d arrayListOfTasks.add(newTask);"},{"lineNumber":32,"author":{"gitId":"prerthan99"},"content":"        Duke.writer.notifyMeThatTaskWasAdded(newTask); // boolean to see if it was wasTaskAdded"},{"lineNumber":33,"author":{"gitId":"prerthan99"},"content":"        return wasTaskAdded; //return the boolean wether it was added or not"},{"lineNumber":34,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":36,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":37,"author":{"gitId":"prerthan99"},"content":"    //getter methods using end of string"},{"lineNumber":38,"author":{"gitId":"prerthan99"},"content":"    //previous method in 1,2,3 was ineffective.  this method was found on stack exchange"},{"lineNumber":39,"author":{"gitId":"prerthan99"},"content":"    static Task obtainTheTaskUsingIndex(int endIndex) throws IndexOutOfBoundsException { //credit to stackexchange"},{"lineNumber":40,"author":{"gitId":"prerthan99"},"content":"        return arrayListOfTasks.get(endIndex); //credit to stack exchange"},{"lineNumber":41,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":43,"author":{"gitId":"prerthan99"},"content":"    public static Task getTaskAtPosition(int position) throws IndexOutOfBoundsException { //credit stack exchange"},{"lineNumber":44,"author":{"gitId":"prerthan99"},"content":"        return obtainTheTaskUsingIndex(position - 1); //credit stack exchange"},{"lineNumber":45,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":47,"author":{"gitId":"prerthan99"},"content":"    public static void xsOfTasks(){"},{"lineNumber":48,"author":{"gitId":"prerthan99"},"content":"        if (!arrayListOfTasks.isEmpty()){ //if the array is not empty"},{"lineNumber":49,"author":{"gitId":"prerthan99"},"content":"            Duke.writer.tellMeSomething(\"Your list contains these tasks: \"); //message to tell theres something"},{"lineNumber":50,"author":{"gitId":"prerthan99"},"content":"            //int initialListNum \u003d 0;"},{"lineNumber":51,"author":{"gitId":"prerthan99"},"content":"            int initialListNum \u003d 1; //should start with 1"},{"lineNumber":52,"author":{"gitId":"prerthan99"},"content":"            for (Task task : arrayListOfTasks){ //for every task that belongs in the array list"},{"lineNumber":53,"author":{"gitId":"prerthan99"},"content":"                Duke.writer.addMessage(String.format(\"%d.%s%n\", initialListNum++, task)); //we add the message"},{"lineNumber":54,"author":{"gitId":"prerthan99"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"prerthan99"},"content":"            Duke.writer.talk(); //and tells us"},{"lineNumber":56,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":59,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":60,"author":{"gitId":"prerthan99"},"content":"    public char getTheTickOrCrossIcon(){"},{"lineNumber":61,"author":{"gitId":"prerthan99"},"content":"        //have we completed it or not"},{"lineNumber":62,"author":{"gitId":"prerthan99"},"content":"        return haveWeCompletedItOrNot ? \u0027✔\u0027"},{"lineNumber":63,"author":{"gitId":"prerthan99"},"content":"                                      : \u0027✘\u0027; //credit to stack so i dont have to use u12something"},{"lineNumber":64,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":66,"author":{"gitId":"prerthan99"},"content":"    public boolean markTaskAsCompleted(){ //marking"},{"lineNumber":67,"author":{"gitId":"prerthan99"},"content":"        this.haveWeCompletedItOrNot \u003d true; //at this point we\u0027ve completed it"},{"lineNumber":68,"author":{"gitId":"prerthan99"},"content":"        Duke.writer.notifyMeThatTaskWasMarked(this); //notify me on the update"},{"lineNumber":69,"author":{"gitId":"prerthan99"},"content":"        return haveWeCompletedItOrNot; //return the updated boolean"},{"lineNumber":70,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":72,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":73,"author":{"gitId":"prerthan99"},"content":"    public abstract char forIconGetWhatIsTaskType();"},{"lineNumber":74,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":75,"author":{"gitId":"prerthan99"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"prerthan99"},"content":"    public String toString(){ //string to string update"},{"lineNumber":77,"author":{"gitId":"prerthan99"},"content":"        return String.format(\"[%c]\\t %s\", this.getTheTickOrCrossIcon(), this.detailsOfTheMessage);"},{"lineNumber":78,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":79}},{"path":"src/main/java/level4/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level4;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":"public class Todo extends Task{ //similar to prev"},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":"    //simpler"},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":"    public Todo(String detailFromTask){"},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"        super(detailFromTask); //subclass things"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"     public char forIconGetWhatIsTaskType() {"},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":"        return \u0027T\u0027; //follow the specification"},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"    public String toString() { //string to string method"},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"        return String.format(\"[%c]%s\","},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"                this.forIconGetWhatIsTaskType(), super.toString());"},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":19}},{"path":"src/main/java/level6/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level6;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":"public class Deadline extends Task{"},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":"    //var declaration"},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":"    String stringForBY;"},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"    private Deadline(){ //subclass things"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":"        super();"},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"    Deadline(String byMessage){ //constructor wth byMessage as input"},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":"        this();"},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"        this.stringForBY \u003d byMessage;"},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"    public Deadline(String detailsNeeded, String byMessage) { //constructor"},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"        //this constructor takes in 2 params"},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"        this(byMessage);"},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"        this.detailsOfTheMessage \u003d detailsNeeded;"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":"    public char forIconGetWhatIsTaskType(){ //get teh icon we need"},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":"        return \u0027D\u0027; //specified.  can be changed if needed"},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":26,"author":{"gitId":"prerthan99"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"prerthan99"},"content":"    public String toString(){ //toString methof"},{"lineNumber":28,"author":{"gitId":"prerthan99"},"content":"        return String.format(\"[%c]%s (by: %s)\", this.forIconGetWhatIsTaskType(), super.toString(),"},{"lineNumber":29,"author":{"gitId":"prerthan99"},"content":"                this.stringForBY);"},{"lineNumber":30,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":31}},{"path":"src/main/java/level6/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level6;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":"import level6.exception.exceptionsForLevel6;"},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":"import level6.io.*;"},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"public class Duke{"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":"    static whatDoWePutInside reader; //reader goes inside"},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":"    static whatGoesOutside writer; //writer writes output from chatbot"},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"    public static boolean mainProgramLoopBody(){ //as long as we dont say bye"},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":"        boolean terminatingCondition \u003d false; //by default the terminatinf condition is false"},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"        Instruction instruction; //create instructions"},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"        "},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":"        do {"},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"            instruction \u003d Instruction.whatIsTheCommd //get teh command for instruction"},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"                    (reader.theLinezzThatComesNext(). //by reading in the line"},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"                                    getDa1stTikam()); //and getting the corresponding token"},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"            terminatingCondition \u003d instruction.equals(Instruction.BYE); //consider if terminatinf, say bye"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"            switch (instruction){"},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":"                // if we say ToDo"},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":"                case TODO:"},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":"                    try{ ///if we dont need the 1st one"},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"                        Task.putInANewTask(new Todo(reader.inputThatDontNeed1stTikam()));"},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"                    }"},{"lineNumber":26,"author":{"gitId":"prerthan99"},"content":"                    catch (exceptionsForLevel6 exceptionsForLevel6){ //exception for corner case"},{"lineNumber":27,"author":{"gitId":"prerthan99"},"content":"                        System.err.println(\"todo detail cannot be empty.\");"},{"lineNumber":28,"author":{"gitId":"prerthan99"},"content":"                    }"},{"lineNumber":29,"author":{"gitId":"prerthan99"},"content":"                    break; //end it"},{"lineNumber":30,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":31,"author":{"gitId":"prerthan99"},"content":"                //if we say deadline"},{"lineNumber":32,"author":{"gitId":"prerthan99"},"content":"                //what is in a deadline, the details and time"},{"lineNumber":33,"author":{"gitId":"prerthan99"},"content":"                case DEADLINE:"},{"lineNumber":34,"author":{"gitId":"prerthan99"},"content":"                    Task.putInANewTask(new Deadline //create a new deadline"},{"lineNumber":35,"author":{"gitId":"prerthan99"},"content":"                            (reader.getTheJuicyDetails(), reader.whatIsTheTime()));"},{"lineNumber":36,"author":{"gitId":"prerthan99"},"content":"                    break; //put in details for deadline and time of deadline"},{"lineNumber":37,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":38,"author":{"gitId":"prerthan99"},"content":"                //if we say event"},{"lineNumber":39,"author":{"gitId":"prerthan99"},"content":"                case EVENT:"},{"lineNumber":40,"author":{"gitId":"prerthan99"},"content":"                    Task.putInANewTask(new Event //whats is in an event, the detaisk and time"},{"lineNumber":41,"author":{"gitId":"prerthan99"},"content":"                            (reader.getTheJuicyDetails(), reader.whatIsTheTime()));"},{"lineNumber":42,"author":{"gitId":"prerthan99"},"content":"                    break; //put in deatils and time and break"},{"lineNumber":43,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":44,"author":{"gitId":"prerthan99"},"content":"                //if we say list"},{"lineNumber":45,"author":{"gitId":"prerthan99"},"content":"                case LIST:"},{"lineNumber":46,"author":{"gitId":"prerthan99"},"content":"                    Task.xsOfTasks(); //just print it out is sufficient"},{"lineNumber":47,"author":{"gitId":"prerthan99"},"content":"                    break;"},{"lineNumber":48,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":49,"author":{"gitId":"prerthan99"},"content":"                //if we are done"},{"lineNumber":50,"author":{"gitId":"prerthan99"},"content":"                //we need the input(what is done) and mark the list that we\u0027ve done it"},{"lineNumber":51,"author":{"gitId":"prerthan99"},"content":"                case DONE:"},{"lineNumber":52,"author":{"gitId":"prerthan99"},"content":"                    Task.getTaskAtPosition(Integer.parseInt(reader.inputThatDontNeed1stTikam())).markTaskAsCompleted();"},{"lineNumber":53,"author":{"gitId":"prerthan99"},"content":"                    break; //get what we need, change what we need and break"},{"lineNumber":54,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":55,"author":{"gitId":"prerthan99"},"content":"                //if we want to delete"},{"lineNumber":56,"author":{"gitId":"prerthan99"},"content":"                case DELETE:"},{"lineNumber":57,"author":{"gitId":"prerthan99"},"content":"                    Task.atThePositionDeleteTask //do a delete task"},{"lineNumber":58,"author":{"gitId":"prerthan99"},"content":"                            (Integer.parseInt(reader.inputThatDontNeed1stTikam())); //get where"},{"lineNumber":59,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":60,"author":{"gitId":"prerthan99"},"content":"                case EMPTY:"},{"lineNumber":61,"author":{"gitId":"prerthan99"},"content":"                    continue;"},{"lineNumber":62,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":63,"author":{"gitId":"prerthan99"},"content":"                case INVALID:"},{"lineNumber":64,"author":{"gitId":"prerthan99"},"content":"                    try {"},{"lineNumber":65,"author":{"gitId":"prerthan99"},"content":"                        throw new exceptionsForLevel6();"},{"lineNumber":66,"author":{"gitId":"prerthan99"},"content":"                    }"},{"lineNumber":67,"author":{"gitId":"prerthan99"},"content":"                    catch (exceptionsForLevel6 exceptionsForLevel6) {"},{"lineNumber":68,"author":{"gitId":"prerthan99"},"content":"                        writer.tellMeSomething(\"Invalid command; try again.\");"},{"lineNumber":69,"author":{"gitId":"prerthan99"},"content":"                    }"},{"lineNumber":70,"author":{"gitId":"prerthan99"},"content":"                    //if we say bye"},{"lineNumber":71,"author":{"gitId":"prerthan99"},"content":"                case BYE:"},{"lineNumber":72,"author":{"gitId":"prerthan99"},"content":"                default:"},{"lineNumber":73,"author":{"gitId":"prerthan99"},"content":"                    break;"},{"lineNumber":74,"author":{"gitId":"prerthan99"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"prerthan99"},"content":"            "},{"lineNumber":76,"author":{"gitId":"prerthan99"},"content":"        } while (!terminatingCondition);"},{"lineNumber":77,"author":{"gitId":"prerthan99"},"content":"        return terminatingCondition;"},{"lineNumber":78,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":80,"author":{"gitId":"prerthan99"},"content":"    public static void endgame(){ //clean up and abstract the code"},{"lineNumber":81,"author":{"gitId":"prerthan99"},"content":"        writer.sayGoodBye();"},{"lineNumber":82,"author":{"gitId":"prerthan99"},"content":"        reader.endItAll();"},{"lineNumber":83,"author":{"gitId":"prerthan99"},"content":"        writer.endItAll();"},{"lineNumber":84,"author":{"gitId":"prerthan99"},"content":"        //System.exit(1);"},{"lineNumber":85,"author":{"gitId":"prerthan99"},"content":"        System.exit(0);"},{"lineNumber":86,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":88,"author":{"gitId":"prerthan99"},"content":"    public static void main(String[] args){"},{"lineNumber":89,"author":{"gitId":"prerthan99"},"content":"        //initialise var"},{"lineNumber":90,"author":{"gitId":"prerthan99"},"content":"        reader \u003d new whatDoWePutInside(); //what goes in the reader"},{"lineNumber":91,"author":{"gitId":"prerthan99"},"content":"        writer \u003d new whatGoesOutside(); //what comes out from the writer"},{"lineNumber":92,"author":{"gitId":"prerthan99"},"content":"        writer.helloWorldTime(); //greeting msg"},{"lineNumber":93,"author":{"gitId":"prerthan99"},"content":"        Task.listMakingMethod(); //creates list of task"},{"lineNumber":94,"author":{"gitId":"prerthan99"},"content":"        if (!mainProgramLoopBody()) endgame(); //keep running untill endgame"},{"lineNumber":95,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":96}},{"path":"src/main/java/level6/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level6;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":"    //declare var"},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":"    protected String howLongDuration; //how long"},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"    protected String timeToEnd; //when we end"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":"    protected String timeToStart; //when we start"},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":"    private Event(){"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"        super(); //sublass things"},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":"        this.timeToEnd \u003d \"\"; //ednign"},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"        this.howLongDuration \u003d \"\"; //starting"},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"    //constructor"},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"    public Event(String detailsFromtheString, String timeToStart){ //takes in 2 inputs"},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"        // input the paticular details from string and and when it starts*"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"        super(detailsFromtheString); //inheritance"},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"        this.timeToStart \u003d timeToStart;"},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":"    public Event(String detailsFromtheString, String timeToStart, String timeToEnd){ //takes in 3 inputs"},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"        //inputs : details, start and end time"},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"        //this(;);"},{"lineNumber":26,"author":{"gitId":"prerthan99"},"content":"        this();"},{"lineNumber":27,"author":{"gitId":"prerthan99"},"content":"        this.timeToEnd \u003d timeToEnd; //ending"},{"lineNumber":28,"author":{"gitId":"prerthan99"},"content":"        this.howLongDuration \u003d timeToStart; //statring"},{"lineNumber":29,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":30,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":32,"author":{"gitId":"prerthan99"},"content":"    public char forIconGetWhatIsTaskType(){ //get the specofied icon"},{"lineNumber":33,"author":{"gitId":"prerthan99"},"content":"        return \u0027E\u0027; //return following format"},{"lineNumber":34,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":36,"author":{"gitId":"prerthan99"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"prerthan99"},"content":"    public String toString(){"},{"lineNumber":38,"author":{"gitId":"prerthan99"},"content":"        return String.format(\"[%c]%s (at: %s)\", this.forIconGetWhatIsTaskType(),"},{"lineNumber":39,"author":{"gitId":"prerthan99"},"content":"                super.toString(), this.timeToStart);"},{"lineNumber":40,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":41}},{"path":"src/main/java/level6/Instruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level6;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":"public enum Instruction"},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":"{"},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":"    BYE,                 //from level 1"},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"    LIST,                //from level 2"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":"    DONE,                //from level 3"},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":"    TODO,EVENT,DEADLINE, //from level 4"},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":"    BY,AT,ON,            //specifications of level 4"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"    EMPTY, INVALID,      //from level 5"},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":"    DELETE;              //from level 6"},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"    public static Instruction whatIsTheCommd(String input){ //for every inst thats in the set of values"},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":"        for (Instruction instruction : values())"},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"            //if it is what we want"},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"            if (input.equalsIgnoreCase(instruction.toString()))"},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"                return instruction; //output accordingly"},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"                //if not"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"            else if (input.isBlank())"},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"                return EMPTY; //then we must go to this case"},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":"        //and if all else fails, the is the master control"},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":"        return INVALID;"},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":24}},{"path":"src/main/java/level6/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level6;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":"//imports"},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":"    // A list of tasks."},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":"    protected static ArrayList\u003cTask\u003e arrayListOfTasks; //an array list of the task"},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":"    protected boolean haveWeCompletedItOrNot; // have we done the task of rnor"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"    protected String detailsOfTheMessage; //details from the message"},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"    Task(){ //constructor"},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":"        this.detailsOfTheMessage \u003d \"\"; //default message"},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"        //this.haveWeCompletedItOrNot \u003d true; WRONG!"},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"        this.haveWeCompletedItOrNot \u003d false; //in the begining we obviouslt have not done it"},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"    public Task(String detailsOfTheMessage) { //constructor with 1 input"},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"        this(); //default"},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":"        this.detailsOfTheMessage \u003d detailsOfTheMessage; //update the message component"},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"    public static boolean listMakingMethod(){"},{"lineNumber":26,"author":{"gitId":"prerthan99"},"content":"        arrayListOfTasks \u003d new ArrayList\u003cTask\u003e(); //create a new array list of task"},{"lineNumber":27,"author":{"gitId":"prerthan99"},"content":"        return !arrayListOfTasks.equals(null); //return if not null"},{"lineNumber":28,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":30,"author":{"gitId":"prerthan99"},"content":"    public static boolean putInANewTask(Task task){"},{"lineNumber":31,"author":{"gitId":"prerthan99"},"content":"        // boolean to see if it was wasTaskAdded"},{"lineNumber":32,"author":{"gitId":"prerthan99"},"content":"        boolean added \u003d arrayListOfTasks.add(task);"},{"lineNumber":33,"author":{"gitId":"prerthan99"},"content":"        Duke.writer.notifyMeThatTaskWasAdded(task); // boolean to see if it was wasTaskAdded"},{"lineNumber":34,"author":{"gitId":"prerthan99"},"content":"        return added; //return the boolean wether it was added or not"},{"lineNumber":35,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":37,"author":{"gitId":"prerthan99"},"content":"    ///credit stack exchange"},{"lineNumber":38,"author":{"gitId":"prerthan99"},"content":"    static Task obtainTheTaskUsingIndex(int index) throws IndexOutOfBoundsException{"},{"lineNumber":39,"author":{"gitId":"prerthan99"},"content":"        return arrayListOfTasks.get(index);"},{"lineNumber":40,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":42,"author":{"gitId":"prerthan99"},"content":"    ///credit stack exchange"},{"lineNumber":43,"author":{"gitId":"prerthan99"},"content":"    public static Task getTaskAtPosition(int position) throws IndexOutOfBoundsException {"},{"lineNumber":44,"author":{"gitId":"prerthan99"},"content":"        return obtainTheTaskUsingIndex(position - 1);"},{"lineNumber":45,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":47,"author":{"gitId":"prerthan99"},"content":"    public static void atThePositionDeleteTask(int position){ //delete at position"},{"lineNumber":48,"author":{"gitId":"prerthan99"},"content":"        Duke.writer.notifyMeThatTaskWasDeleted(getTaskAtPosition(position));"},{"lineNumber":49,"author":{"gitId":"prerthan99"},"content":"        arrayListOfTasks.remove(position - 1); //-1 is out of bound"},{"lineNumber":50,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":52,"author":{"gitId":"prerthan99"},"content":"    public static void xsOfTasks() {"},{"lineNumber":53,"author":{"gitId":"prerthan99"},"content":"        if (!arrayListOfTasks.isEmpty()){ //if the array is not empty"},{"lineNumber":54,"author":{"gitId":"prerthan99"},"content":"            Duke.writer.tellMeSomething(\"Your list contains these tasks: \"); //message to tell theres something"},{"lineNumber":55,"author":{"gitId":"prerthan99"},"content":"            int initialListNum \u003d 1; //should start with 1"},{"lineNumber":56,"author":{"gitId":"prerthan99"},"content":"            for (Task task : arrayListOfTasks){ //for every task that belongs in the array list"},{"lineNumber":57,"author":{"gitId":"prerthan99"},"content":"                Duke.writer.addMessage(String.format(\"%d.%s%n\", initialListNum++, task)); //we add the message"},{"lineNumber":58,"author":{"gitId":"prerthan99"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"prerthan99"},"content":"            Duke.writer.talk(); //and tells us"},{"lineNumber":60,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":63,"author":{"gitId":"prerthan99"},"content":"    public char getTheTickOrCrossIcon() {"},{"lineNumber":64,"author":{"gitId":"prerthan99"},"content":"        //have we completed it or not"},{"lineNumber":65,"author":{"gitId":"prerthan99"},"content":"        return haveWeCompletedItOrNot ? \u0027✔\u0027 : \u0027✘\u0027;"},{"lineNumber":66,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":68,"author":{"gitId":"prerthan99"},"content":"    public boolean markTaskAsCompleted(){ //marking"},{"lineNumber":69,"author":{"gitId":"prerthan99"},"content":"        this.haveWeCompletedItOrNot \u003d true; //at this point we\u0027ve completed it"},{"lineNumber":70,"author":{"gitId":"prerthan99"},"content":"        Duke.writer.notifyMeThatTaskWasMarked(this); //notify me on the update"},{"lineNumber":71,"author":{"gitId":"prerthan99"},"content":"        return haveWeCompletedItOrNot; //return the updated boolean"},{"lineNumber":72,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":74,"author":{"gitId":"prerthan99"},"content":"    public abstract char forIconGetWhatIsTaskType();"},{"lineNumber":75,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":76,"author":{"gitId":"prerthan99"},"content":"    @Override"},{"lineNumber":77,"author":{"gitId":"prerthan99"},"content":"    public String toString(){ //string to string update"},{"lineNumber":78,"author":{"gitId":"prerthan99"},"content":"        return String.format(\"[%c]\\t %s\", this.getTheTickOrCrossIcon(), this.detailsOfTheMessage);"},{"lineNumber":79,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":80}},{"path":"src/main/java/level6/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level6;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":"import level6.exception.exceptionsForLevel6;"},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"public class Todo extends Task{ //similar to prev"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":"    //simpler"},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":"    public Todo(String detailFromTask) throws exceptionsForLevel6{"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"        if (detailFromTask.isBlank()){ //if nothinf"},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":"            throw new exceptionsForLevel6(); //throw exception to deal with it"},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"        this.detailsOfTheMessage \u003d detailFromTask; //else get details"},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"     public char forIconGetWhatIsTaskType(){"},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"        return \u0027T\u0027; //follow the specification"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":"    public String toString(){ //string to string method"},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":"        return String.format(\"[%c]%s\", this.forIconGetWhatIsTaskType(), super.toString());"},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":25}},{"path":"src/main/java/level6/exception/exceptionsForLevel6.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level6.exception;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":" * DukeException"},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":" */"},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"public class exceptionsForLevel6 extends Throwable{"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":"    ///private static final long serialVersionUID \u003d 7354097854189773198L;"},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":"    public exceptionsForLevel6() { }"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":10}},{"path":"src/main/java/level6/io/whatDoWePutInside.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level6.io;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":"import java.io.*;"},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":"import java.util.regex.*;"},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"import java.util.stream.*;"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":" * Input"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":" */"},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":"public class whatDoWePutInside { //public class for inputs"},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"    //use buffer reader instead of scanner"},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"    static BufferedReader bufferedReader \u003d new BufferedReader(new InputStreamReader(System.in));"},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":"    //special patterns, again credits to stack exchange"},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"    static Pattern painInTheAssEmptySpace \u003d Pattern.compile(\"\\\\s+\"); //no more \" \""},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"    static Pattern commandForSlashing \u003d Pattern.compile(\"(?i)\\\\/((at)|(by)|(on))\"); //credit to stack"},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"    static String readInTheInputLine(){ //try catch is exception version of if and else"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"        try{ //try to read"},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"            //if not"},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":"            return bufferedReader.readLine();"},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":"        }catch (Exception exception){//catch the exception"},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":"            //System.out.println(\"I/O exception occurred.\");"},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"            System.err.println(\"The input does not match the format\");//err is better"},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"            return \"\";"},{"lineNumber":26,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":29,"author":{"gitId":"prerthan99"},"content":"    protected String linezzzz; //declare string"},{"lineNumber":30,"author":{"gitId":"prerthan99"},"content":"    protected String[] tikam; //declare also string array"},{"lineNumber":31,"author":{"gitId":"prerthan99"},"content":"    //for those not proficient in malay, this means token"},{"lineNumber":32,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":33,"author":{"gitId":"prerthan99"},"content":"    public whatDoWePutInside(){ }"},{"lineNumber":34,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":35,"author":{"gitId":"prerthan99"},"content":"    public whatDoWePutInside theLinezzThatComesNext(){ //method to put in next line"},{"lineNumber":36,"author":{"gitId":"prerthan99"},"content":"        this.linezzzz \u003d readInTheInputLine(); //read in the input line"},{"lineNumber":37,"author":{"gitId":"prerthan99"},"content":"        this.tikam \u003d painInTheAssEmptySpace.split(this.linezzzz.trim()); //put in the empty space"},{"lineNumber":38,"author":{"gitId":"prerthan99"},"content":"        return this; //return it"},{"lineNumber":39,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":41,"author":{"gitId":"prerthan99"},"content":"    //getter methods"},{"lineNumber":42,"author":{"gitId":"prerthan99"},"content":"    public String[] getTikam(){ //get the token"},{"lineNumber":43,"author":{"gitId":"prerthan99"},"content":"        this.tikam \u003d this.tikam.length \u003d\u003d 0 ? painInTheAssEmptySpace.split(this.linezzzz.trim())"},{"lineNumber":44,"author":{"gitId":"prerthan99"},"content":"                                            : this.tikam;"},{"lineNumber":45,"author":{"gitId":"prerthan99"},"content":"        return this.tikam; //return the token"},{"lineNumber":46,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":48,"author":{"gitId":"prerthan99"},"content":"    public Stream\u003cString\u003e getTheStrx4DaTikam() { //return the stream"},{"lineNumber":49,"author":{"gitId":"prerthan99"},"content":"        return Stream.of(this.getTikam());"},{"lineNumber":50,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":52,"author":{"gitId":"prerthan99"},"content":"    public String getDa1stTikam(){ //get teh first token"},{"lineNumber":53,"author":{"gitId":"prerthan99"},"content":"        //return this.tikam[1];"},{"lineNumber":54,"author":{"gitId":"prerthan99"},"content":"        return this.tikam[0]; //1 doesnt work"},{"lineNumber":55,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":57,"author":{"gitId":"prerthan99"},"content":"    public String[] tikamNotNum1(){ //if we need not the first token"},{"lineNumber":58,"author":{"gitId":"prerthan99"},"content":"        return this.getTheStrx4DaTikam().skip(1).toArray(String[]::new);"},{"lineNumber":59,"author":{"gitId":"prerthan99"},"content":"        //return the corresponding stream"},{"lineNumber":60,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":62,"author":{"gitId":"prerthan99"},"content":"    public String inputThatDontNeed1stTikam(){  //for inputs that do not require the 1st token"},{"lineNumber":63,"author":{"gitId":"prerthan99"},"content":"        return this.getTheStrx4DaTikam().skip(1).collect(Collectors.joining(\"\"));"},{"lineNumber":64,"author":{"gitId":"prerthan99"},"content":"        //return the corresponding stream"},{"lineNumber":65,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":67,"author":{"gitId":"prerthan99"},"content":"    public String getTheJuicyDetails(){ //get all the details we need"},{"lineNumber":68,"author":{"gitId":"prerthan99"},"content":"        return Stream.of(this.tikam).skip(1).takeWhile(commandForSlashing.asMatchPredicate().negate())"},{"lineNumber":69,"author":{"gitId":"prerthan99"},"content":"                .collect(Collectors.joining(\" \"));"},{"lineNumber":70,"author":{"gitId":"prerthan99"},"content":"        //stream magic"},{"lineNumber":71,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":73,"author":{"gitId":"prerthan99"},"content":"    public String whatIsTheTime() { //get the temporal component"},{"lineNumber":74,"author":{"gitId":"prerthan99"},"content":"        return Stream.of(this.tikam).dropWhile(commandForSlashing.asMatchPredicate().negate()).skip(1)"},{"lineNumber":75,"author":{"gitId":"prerthan99"},"content":"                .collect(Collectors.joining(\" \"));"},{"lineNumber":76,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":78,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":79,"author":{"gitId":"prerthan99"},"content":"    public void endItAll(){ //ending method"},{"lineNumber":80,"author":{"gitId":"prerthan99"},"content":"        try{ //we use this method to end the code"},{"lineNumber":81,"author":{"gitId":"prerthan99"},"content":"            bufferedReader.close();"},{"lineNumber":82,"author":{"gitId":"prerthan99"},"content":"        }catch (IOException exception){"},{"lineNumber":83,"author":{"gitId":"prerthan99"},"content":"            //System.out.println(\"I/O exception occurred.\");"},{"lineNumber":84,"author":{"gitId":"prerthan99"},"content":"            System.err.println(\"Input does not match the format\");"},{"lineNumber":85,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":87}},{"path":"src/main/java/level6/io/whatGoesOutside.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package level6.io;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":"import level6.Task;"},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":"import java.io.*;"},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"import java.util.*;"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":"public class whatGoesOutside{"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"    BufferedWriter server \u003d new BufferedWriter(new OutputStreamWriter(System.out));"},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"    static final String initialDukeSymbol \u003d"},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"            \"\\n ____        _        \\n\""},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\" "},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"            "},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"    static void wrongInputLah() { //in the event the input given is wrong format"},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"        System.err.println(\"the input given does not match the format\"); //display error message"},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":"    public whatGoesOutside(){}"},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"    void attachInNewLn(String string){ //to use the line symbol"},{"lineNumber":26,"author":{"gitId":"prerthan99"},"content":"        try{"},{"lineNumber":27,"author":{"gitId":"prerthan99"},"content":"            this.server.append(string);  //line symbol"},{"lineNumber":28,"author":{"gitId":"prerthan99"},"content":"            this.server.newLine();"},{"lineNumber":29,"author":{"gitId":"prerthan99"},"content":"        }catch (Exception exception){ //in event wrong format"},{"lineNumber":30,"author":{"gitId":"prerthan99"},"content":"            wrongInputLah(); //catch exception"},{"lineNumber":31,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":34,"author":{"gitId":"prerthan99"},"content":"    void putNewLineToAll(String... strings){ // append new line in"},{"lineNumber":35,"author":{"gitId":"prerthan99"},"content":"        Arrays.asList(strings).forEach(this::attachInNewLn); //use stream"},{"lineNumber":36,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"prerthan99"},"content":"    "},{"lineNumber":38,"author":{"gitId":"prerthan99"},"content":"    public void addMessage(String message){ //to add the corresponding message"},{"lineNumber":39,"author":{"gitId":"prerthan99"},"content":"        try{"},{"lineNumber":40,"author":{"gitId":"prerthan99"},"content":"            this.server.append(message); //put in the message"},{"lineNumber":41,"author":{"gitId":"prerthan99"},"content":"        }catch (Exception e){"},{"lineNumber":42,"author":{"gitId":"prerthan99"},"content":"            wrongInputLah(); //catch exception when input given is wrong"},{"lineNumber":43,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":46,"author":{"gitId":"prerthan99"},"content":"    public void talk(){ //flush out"},{"lineNumber":47,"author":{"gitId":"prerthan99"},"content":"        try{"},{"lineNumber":48,"author":{"gitId":"prerthan99"},"content":"            this.server.flush();"},{"lineNumber":49,"author":{"gitId":"prerthan99"},"content":"        }catch (Exception e){ //if input is wrong"},{"lineNumber":50,"author":{"gitId":"prerthan99"},"content":"            wrongInputLah(); //catch the input if its wrong"},{"lineNumber":51,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":54,"author":{"gitId":"prerthan99"},"content":"    public void tellMeSomething(String message){ //writes the specified message requested"},{"lineNumber":55,"author":{"gitId":"prerthan99"},"content":"        try{"},{"lineNumber":56,"author":{"gitId":"prerthan99"},"content":"            this.attachInNewLn(message); //try to add the line"},{"lineNumber":57,"author":{"gitId":"prerthan99"},"content":"            this.server.flush();"},{"lineNumber":58,"author":{"gitId":"prerthan99"},"content":"        }catch (Exception e){ //if wronf input"},{"lineNumber":59,"author":{"gitId":"prerthan99"},"content":"            wrongInputLah(); //throw it"},{"lineNumber":60,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":63,"author":{"gitId":"prerthan99"},"content":"    public void tellMeEverything(String... messages){ //similat to prev method but writes multilple msg"},{"lineNumber":64,"author":{"gitId":"prerthan99"},"content":"        try{"},{"lineNumber":65,"author":{"gitId":"prerthan99"},"content":"            this.putNewLineToAll(messages); //adds the messages"},{"lineNumber":66,"author":{"gitId":"prerthan99"},"content":"            server.flush();"},{"lineNumber":67,"author":{"gitId":"prerthan99"},"content":"        }catch (Exception e){ //if the input is wrong"},{"lineNumber":68,"author":{"gitId":"prerthan99"},"content":"            wrongInputLah(); //cathc the error"},{"lineNumber":69,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":72,"author":{"gitId":"prerthan99"},"content":"    public void helloWorldTime(){ //intoductory msg"},{"lineNumber":73,"author":{"gitId":"prerthan99"},"content":"        this.tellMeSomething(\"The only verdict is vengeance; \" +"},{"lineNumber":74,"author":{"gitId":"prerthan99"},"content":"                \"a vendetta held as a votive, not in vain, for the value and veracity \\n\" +"},{"lineNumber":75,"author":{"gitId":"prerthan99"},"content":"                \"of such shall one day vindicate the vigilant and the virtuous. Verily, \\n\" +"},{"lineNumber":76,"author":{"gitId":"prerthan99"},"content":"                \"this vichyssoise of verbiage veers most verbose vis-à-vis an introduction, \\n\" +"},{"lineNumber":77,"author":{"gitId":"prerthan99"},"content":"                \"and so it is my very good honor to meet you and you may call me Duke, \\n\" +"},{"lineNumber":78,"author":{"gitId":"prerthan99"},"content":"                initialDukeSymbol + \"How can I help?\");"},{"lineNumber":79,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":81,"author":{"gitId":"prerthan99"},"content":"    public void sayGoodBye(){"},{"lineNumber":82,"author":{"gitId":"prerthan99"},"content":"        this.tellMeSomething(\"Farewell, adieu, goodbye\"); //ending messages"},{"lineNumber":83,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":85,"author":{"gitId":"prerthan99"},"content":"    public void notifyMeThatTaskWasAdded(Task task){ //tell us when the task is added into list"},{"lineNumber":86,"author":{"gitId":"prerthan99"},"content":"        this.tellMeEverything(\"This task was added: \","},{"lineNumber":87,"author":{"gitId":"prerthan99"},"content":"                task.toString()); //added msg"},{"lineNumber":88,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":90,"author":{"gitId":"prerthan99"},"content":"    public void notifyMeThatTaskWasMarked(Task task) { //tell us when the task has been marked"},{"lineNumber":91,"author":{"gitId":"prerthan99"},"content":"        this.tellMeEverything(\"The task requested has now been marked as done:\","},{"lineNumber":92,"author":{"gitId":"prerthan99"},"content":"                task.toString()); //marked msg"},{"lineNumber":93,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":95,"author":{"gitId":"prerthan99"},"content":"    public void notifyMeThatTaskWasDeleted(Task task) { //tell us when the task has been deleted"},{"lineNumber":96,"author":{"gitId":"prerthan99"},"content":"        this.tellMeEverything(\"The task has now been deleted:\","},{"lineNumber":97,"author":{"gitId":"prerthan99"},"content":"                task.toString()); //delete msg"},{"lineNumber":98,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":100,"author":{"gitId":"prerthan99"},"content":"    public void endItAll() { //ending msg"},{"lineNumber":101,"author":{"gitId":"prerthan99"},"content":"        try{"},{"lineNumber":102,"author":{"gitId":"prerthan99"},"content":"            server.close(); //if all good, close it"},{"lineNumber":103,"author":{"gitId":"prerthan99"},"content":"        }catch (Exception exception){ //if input wrong"},{"lineNumber":104,"author":{"gitId":"prerthan99"},"content":"            wrongInputLah(); //catch the error"},{"lineNumber":105,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":107}},{"path":"src/main/java/prev/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package prev;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":"//prev here refers to codes for level 1,2,3"},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":"    public Deadline (String decs, String by){"},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":"        super(decs);"},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"    public String toString(){"},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":17}},{"path":"src/main/java/prev/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package prev;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":"//prev here refers to codes for level 1,2,3"},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":"import java.util.*;"},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"        //task 1"},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"        //greeting line"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"        /*"},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"        System.out.println(\"Hello my name is prev.Duke\\n\" + \"What can i do for you\");"},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":"        Scanner sc \u003d new Scanner(System.in); // takes in input"},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":"        while(sc.hasNext()){ //while there is an input"},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":"            String s \u003d sc.next();// put the input into string"},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"            if(s.equals(\"bye\")){ //if the srting is end word"},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"                System.out.println(\"Bye, hope to see you again soon\"); //display terminating message"},{"lineNumber":26,"author":{"gitId":"prerthan99"},"content":"                break; //break the loop"},{"lineNumber":27,"author":{"gitId":"prerthan99"},"content":"            } else { //if the input is not the terminating word"},{"lineNumber":28,"author":{"gitId":"prerthan99"},"content":"                System.out.println(s); ///print out the input"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"prerthan99"},"content":"        */"},{"lineNumber":32,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":33,"author":{"gitId":"prerthan99"},"content":"        //task 2"},{"lineNumber":34,"author":{"gitId":"prerthan99"},"content":"        //add list"},{"lineNumber":35,"author":{"gitId":"prerthan99"},"content":"        /*"},{"lineNumber":36,"author":{"gitId":"prerthan99"},"content":"        System.out.println(\"Hello! I am prev.Duke\\n\" + \"What can I do for you\");"},{"lineNumber":37,"author":{"gitId":"prerthan99"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":38,"author":{"gitId":"prerthan99"},"content":"        ArrayList xs \u003d new ArrayList();"},{"lineNumber":39,"author":{"gitId":"prerthan99"},"content":"        while(sc.hasNextLine()){"},{"lineNumber":40,"author":{"gitId":"prerthan99"},"content":"            String s \u003d sc.nextLine();"},{"lineNumber":41,"author":{"gitId":"prerthan99"},"content":"            if(s.equals(\"bye\")){"},{"lineNumber":42,"author":{"gitId":"prerthan99"},"content":"                System.out.println(\"Bye, hope to see you again soon!\");"},{"lineNumber":43,"author":{"gitId":"prerthan99"},"content":"                break;"},{"lineNumber":44,"author":{"gitId":"prerthan99"},"content":"            } else if(!s.equals(\"list\")){"},{"lineNumber":45,"author":{"gitId":"prerthan99"},"content":"                xs.add(s);"},{"lineNumber":46,"author":{"gitId":"prerthan99"},"content":"                System.out.println(\"added: \" + s);"},{"lineNumber":47,"author":{"gitId":"prerthan99"},"content":"            } else {"},{"lineNumber":48,"author":{"gitId":"prerthan99"},"content":"                xs.stream().forEach(x-\u003eSystem.out.println(x));"},{"lineNumber":49,"author":{"gitId":"prerthan99"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"prerthan99"},"content":"        */"},{"lineNumber":52,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":53,"author":{"gitId":"prerthan99"},"content":"        //task 3"},{"lineNumber":54,"author":{"gitId":"prerthan99"},"content":"        // mark as done"},{"lineNumber":55,"author":{"gitId":"prerthan99"},"content":"        System.out.println(\"Hello! I am prev.Duke\\n\" + \"What can I do for you\");"},{"lineNumber":56,"author":{"gitId":"prerthan99"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":57,"author":{"gitId":"prerthan99"},"content":"        ArrayList\u003cString\u003e xsString \u003d new ArrayList\u003c\u003e();"},{"lineNumber":58,"author":{"gitId":"prerthan99"},"content":"        ArrayList\u003cTask\u003e   xsTask   \u003d new ArrayList\u003c\u003e();"},{"lineNumber":59,"author":{"gitId":"prerthan99"},"content":"        while(sc.hasNextLine()){"},{"lineNumber":60,"author":{"gitId":"prerthan99"},"content":"            String s \u003d sc.nextLine();"},{"lineNumber":61,"author":{"gitId":"prerthan99"},"content":"            Task t   \u003d new Task(s);"},{"lineNumber":62,"author":{"gitId":"prerthan99"},"content":"            if(t.getDecs().equals(\"bye\")){"},{"lineNumber":63,"author":{"gitId":"prerthan99"},"content":"                System.out.println(\"Bye, hope to see you again soon!\");"},{"lineNumber":64,"author":{"gitId":"prerthan99"},"content":"                break;"},{"lineNumber":65,"author":{"gitId":"prerthan99"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"prerthan99"},"content":"            else if( !t.getDecs().equals(\"list\") \u0026\u0026 !t.getDecs().contains(\"done\")){"},{"lineNumber":67,"author":{"gitId":"prerthan99"},"content":"                xsString.add(t.getDecs());"},{"lineNumber":68,"author":{"gitId":"prerthan99"},"content":"                xsTask.add(t);"},{"lineNumber":69,"author":{"gitId":"prerthan99"},"content":"                System.out.println(\"added: \" + t.getDecs());"},{"lineNumber":70,"author":{"gitId":"prerthan99"},"content":"            } else if( t.getDecs().equals(\"list\")){"},{"lineNumber":71,"author":{"gitId":"prerthan99"},"content":"                xsString.stream().forEach(x-\u003eSystem.out.println(t.getStatusIcon()+x));"},{"lineNumber":72,"author":{"gitId":"prerthan99"},"content":"            } else { //done"},{"lineNumber":73,"author":{"gitId":"prerthan99"},"content":"                int end \u003d Integer.parseInt(t.getDecs().substring(t.getDecs().length()-1));"},{"lineNumber":74,"author":{"gitId":"prerthan99"},"content":"                Task a \u003d xsTask.get(end-1);"},{"lineNumber":75,"author":{"gitId":"prerthan99"},"content":"                a.changeStatus();"},{"lineNumber":76,"author":{"gitId":"prerthan99"},"content":"                xsTask.remove(end);"},{"lineNumber":77,"author":{"gitId":"prerthan99"},"content":"                xsTask.add(end,a);"},{"lineNumber":78,"author":{"gitId":"prerthan99"},"content":"                //xsTask.get(end-1).changeStatus();"},{"lineNumber":79,"author":{"gitId":"prerthan99"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done\");"},{"lineNumber":80,"author":{"gitId":"prerthan99"},"content":"                System.out.println(xsTask.get(end-1).getDecs() + xsTask.get(end-1).getStatusIcon());"},{"lineNumber":81,"author":{"gitId":"prerthan99"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"prerthan99"},"content":"}"},{"lineNumber":85,"author":{"gitId":"prerthan99"},"content":""}],"authorContributionMap":{"prerthan99":75,"-":10}},{"path":"src/main/java/prev/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package prev;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":"//prev here refers to codes for level 1,2,3"},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":"import java.util.*;"},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":"/*"},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":"note : u2713 is ascii for tick and u2718 is ascii for cross"},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":" */"},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":"public class Task {"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":"    //var declaration"},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":"    protected String decs;"},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"    protected boolean isDone;"},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":"    //constructor"},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"    public Task(String decs){"},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"        this.decs   \u003d decs;"},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"    public String getStatusIcon(){"},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"    public String getDecs(){"},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"        return this.decs;"},{"lineNumber":26,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"prerthan99"},"content":"    public void changeStatus(){"},{"lineNumber":28,"author":{"gitId":"prerthan99"},"content":"        this.isDone \u003d !(this.isDone || this.isDone);"},{"lineNumber":29,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":31,"author":{"gitId":"prerthan99"},"content":"    public static void main(String[] args) {"},{"lineNumber":32,"author":{"gitId":"prerthan99"},"content":"        System.out.println(\"\\u2713\");"},{"lineNumber":33,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":34}},{"path":"src/main/java/prev/test.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"prerthan99"},"content":"package prev;"},{"lineNumber":2,"author":{"gitId":"prerthan99"},"content":"//prev here refers to codes for level 1,2,3"},{"lineNumber":3,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":4,"author":{"gitId":"prerthan99"},"content":"import java.util.*;"},{"lineNumber":5,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":6,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":7,"author":{"gitId":"prerthan99"},"content":"public class test{"},{"lineNumber":8,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":9,"author":{"gitId":"prerthan99"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":11,"author":{"gitId":"prerthan99"},"content":"        //task 1"},{"lineNumber":12,"author":{"gitId":"prerthan99"},"content":"        //greeting line"},{"lineNumber":13,"author":{"gitId":"prerthan99"},"content":"        /*"},{"lineNumber":14,"author":{"gitId":"prerthan99"},"content":"        System.out.println(\"Hello my name is prev.Duke\\n\" + \"What can i do for you\");"},{"lineNumber":15,"author":{"gitId":"prerthan99"},"content":"        Scanner sc \u003d new Scanner(System.in); // takes in input"},{"lineNumber":16,"author":{"gitId":"prerthan99"},"content":"        while(sc.hasNext()){ //while there is an input"},{"lineNumber":17,"author":{"gitId":"prerthan99"},"content":"            String s \u003d sc.next();// put the input into string"},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"            if(s.equals(\"bye\")){ //if the srting is end word"},{"lineNumber":19,"author":{"gitId":"prerthan99"},"content":"                System.out.println(\"Bye, hope to see you again soon\"); //display terminating message"},{"lineNumber":20,"author":{"gitId":"prerthan99"},"content":"                break; //break the loop"},{"lineNumber":21,"author":{"gitId":"prerthan99"},"content":"            } else { //if the input is not the terminating word"},{"lineNumber":22,"author":{"gitId":"prerthan99"},"content":"                System.out.println(s); ///print out the input"},{"lineNumber":23,"author":{"gitId":"prerthan99"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"prerthan99"},"content":"        */"},{"lineNumber":26,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":27,"author":{"gitId":"prerthan99"},"content":"        //task 2"},{"lineNumber":28,"author":{"gitId":"prerthan99"},"content":"        //add list"},{"lineNumber":29,"author":{"gitId":"prerthan99"},"content":"        /*"},{"lineNumber":30,"author":{"gitId":"prerthan99"},"content":"        System.out.println(\"Hello! I am prev.Duke\\n\" + \"What can I do for you\");"},{"lineNumber":31,"author":{"gitId":"prerthan99"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":32,"author":{"gitId":"prerthan99"},"content":"        ArrayList xs \u003d new ArrayList();"},{"lineNumber":33,"author":{"gitId":"prerthan99"},"content":"        while(sc.hasNextLine()){"},{"lineNumber":34,"author":{"gitId":"prerthan99"},"content":"            String s \u003d sc.nextLine();"},{"lineNumber":35,"author":{"gitId":"prerthan99"},"content":"            if(s.equals(\"bye\")){"},{"lineNumber":36,"author":{"gitId":"prerthan99"},"content":"                System.out.println(\"Bye, hope to see you again soon!\");"},{"lineNumber":37,"author":{"gitId":"prerthan99"},"content":"                break;"},{"lineNumber":38,"author":{"gitId":"prerthan99"},"content":"            } else if(!s.equals(\"list\")){"},{"lineNumber":39,"author":{"gitId":"prerthan99"},"content":"                xs.add(s);"},{"lineNumber":40,"author":{"gitId":"prerthan99"},"content":"                System.out.println(\"added: \" + s);"},{"lineNumber":41,"author":{"gitId":"prerthan99"},"content":"            } else {"},{"lineNumber":42,"author":{"gitId":"prerthan99"},"content":"                xs.stream().forEach(x-\u003eSystem.out.println(x));"},{"lineNumber":43,"author":{"gitId":"prerthan99"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"prerthan99"},"content":"        */"},{"lineNumber":46,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":47,"author":{"gitId":"prerthan99"},"content":"        System.out.println(\"Hello! I am prev.Duke\\n\" + \"What can I do for you\");"},{"lineNumber":48,"author":{"gitId":"prerthan99"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":49,"author":{"gitId":"prerthan99"},"content":"        ArrayList\u003cString\u003e xsString \u003d new ArrayList\u003c\u003e();"},{"lineNumber":50,"author":{"gitId":"prerthan99"},"content":"        ArrayList\u003cTask\u003e   xsTask   \u003d new ArrayList\u003c\u003e();"},{"lineNumber":51,"author":{"gitId":"prerthan99"},"content":"        while(sc.hasNextLine()){"},{"lineNumber":52,"author":{"gitId":"prerthan99"},"content":"            String s \u003d sc.nextLine();"},{"lineNumber":53,"author":{"gitId":"prerthan99"},"content":"            Task t   \u003d new Task(s);"},{"lineNumber":54,"author":{"gitId":"prerthan99"},"content":"            if(t.getDecs().equals(\"bye\")){"},{"lineNumber":55,"author":{"gitId":"prerthan99"},"content":"                System.out.println(\"Bye, hope to see you again soon!\");"},{"lineNumber":56,"author":{"gitId":"prerthan99"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"prerthan99"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"prerthan99"},"content":"            else if( !t.getDecs().equals(\"list\") \u0026\u0026 !t.getDecs().contains(\"done\")){"},{"lineNumber":59,"author":{"gitId":"prerthan99"},"content":"                xsString.add(t.getDecs());"},{"lineNumber":60,"author":{"gitId":"prerthan99"},"content":"                xsTask.add(t);"},{"lineNumber":61,"author":{"gitId":"prerthan99"},"content":"                System.out.println(\"added: \" + t.getDecs());"},{"lineNumber":62,"author":{"gitId":"prerthan99"},"content":"            } else if( t.getDecs().equals(\"list\")){"},{"lineNumber":63,"author":{"gitId":"prerthan99"},"content":"                xsString.stream().forEach(x-\u003eSystem.out.println(t.getStatusIcon()+x));"},{"lineNumber":64,"author":{"gitId":"prerthan99"},"content":"            } else { //done"},{"lineNumber":65,"author":{"gitId":"prerthan99"},"content":"                int end \u003d Integer.parseInt(t.getDecs().substring(t.getDecs().length()-1));"},{"lineNumber":66,"author":{"gitId":"prerthan99"},"content":"                Task a \u003d xsTask.get(end-1);"},{"lineNumber":67,"author":{"gitId":"prerthan99"},"content":"                a.changeStatus();"},{"lineNumber":68,"author":{"gitId":"prerthan99"},"content":"                xsTask.remove(end);"},{"lineNumber":69,"author":{"gitId":"prerthan99"},"content":"                xsTask.add(end,a);"},{"lineNumber":70,"author":{"gitId":"prerthan99"},"content":"                //xsTask.get(end-1).changeStatus();"},{"lineNumber":71,"author":{"gitId":"prerthan99"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done\");"},{"lineNumber":72,"author":{"gitId":"prerthan99"},"content":"                System.out.println(xsTask.get(end-1).getDecs() + xsTask.get(end-1).getStatusIcon());"},{"lineNumber":73,"author":{"gitId":"prerthan99"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"prerthan99"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":76,"author":{"gitId":"prerthan99"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"prerthan99"},"content":""},{"lineNumber":78,"author":{"gitId":"prerthan99"},"content":"}"}],"authorContributionMap":{"prerthan99":78}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"prerthan99"},"content":"java -classpath ..\\bin prev.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"prerthan99":1,"-":20}}]
