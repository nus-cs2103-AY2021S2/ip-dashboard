[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":"import duke.exception.*;"},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":"import duke.task.*;"},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":"import duke.command.*;"},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":"    public static void main(String[] args) {"},{"lineNumber":11,"author":{"gitId":"nickyfoo"},"content":"        Parser p \u003d new Parser();"},{"lineNumber":12,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"nickyfoo"},"content":"}"}],"authorContributionMap":{"nickyfoo":13}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"import duke.command.*;"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":"import duke.exception.CommandException;"},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":"public class Parser {"},{"lineNumber":11,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":12,"author":{"gitId":"nickyfoo"},"content":"    // takes care of parsing the input, then calls Command with appropriate arguements;"},{"lineNumber":13,"author":{"gitId":"nickyfoo"},"content":"    public Parser(){"},{"lineNumber":14,"author":{"gitId":"nickyfoo"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":15,"author":{"gitId":"nickyfoo"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"nickyfoo"},"content":"        Command cmd \u003d new HelloCommand();"},{"lineNumber":17,"author":{"gitId":"nickyfoo"},"content":"        while(sc.hasNextLine()){"},{"lineNumber":18,"author":{"gitId":"nickyfoo"},"content":"            String line \u003d sc.nextLine();"},{"lineNumber":19,"author":{"gitId":"nickyfoo"},"content":"            String command \u003d line.split(\" \")[0];"},{"lineNumber":20,"author":{"gitId":"nickyfoo"},"content":"            try {"},{"lineNumber":21,"author":{"gitId":"nickyfoo"},"content":"                switch (command) {"},{"lineNumber":22,"author":{"gitId":"nickyfoo"},"content":"                    case \"bye\":"},{"lineNumber":23,"author":{"gitId":"nickyfoo"},"content":"                        cmd \u003d new ByeCommand();"},{"lineNumber":24,"author":{"gitId":"nickyfoo"},"content":"                        break;"},{"lineNumber":25,"author":{"gitId":"nickyfoo"},"content":"                    case \"list\": {"},{"lineNumber":26,"author":{"gitId":"nickyfoo"},"content":"                        cmd \u003d new ListCommand(list);"},{"lineNumber":27,"author":{"gitId":"nickyfoo"},"content":"                        break;"},{"lineNumber":28,"author":{"gitId":"nickyfoo"},"content":"                    }"},{"lineNumber":29,"author":{"gitId":"nickyfoo"},"content":"                    case \"done\": {"},{"lineNumber":30,"author":{"gitId":"nickyfoo"},"content":"                        String[] ar \u003d line.split(\" \",2);"},{"lineNumber":31,"author":{"gitId":"nickyfoo"},"content":"                        if(ar.length\u003d\u003d1) throw new CommandException(\"Which task are you done with?\");"},{"lineNumber":32,"author":{"gitId":"nickyfoo"},"content":"                        line \u003d line.split(\" \",2)[1];"},{"lineNumber":33,"author":{"gitId":"nickyfoo"},"content":"                        int index \u003d Integer.parseInt(line)-1;"},{"lineNumber":34,"author":{"gitId":"nickyfoo"},"content":"                        cmd \u003d new DoneCommand(list,index);"},{"lineNumber":35,"author":{"gitId":"nickyfoo"},"content":"                        break;"},{"lineNumber":36,"author":{"gitId":"nickyfoo"},"content":"                    }"},{"lineNumber":37,"author":{"gitId":"nickyfoo"},"content":"                    case \"delete\": {"},{"lineNumber":38,"author":{"gitId":"nickyfoo"},"content":"                        String[] ar \u003d line.split(\" \",2);"},{"lineNumber":39,"author":{"gitId":"nickyfoo"},"content":"                        if(ar.length\u003d\u003d1) throw new CommandException(\"Which task are you deleting?\");"},{"lineNumber":40,"author":{"gitId":"nickyfoo"},"content":"                        line \u003d line.split(\" \",2)[1];"},{"lineNumber":41,"author":{"gitId":"nickyfoo"},"content":"                        int index \u003d Integer.parseInt(line)-1;"},{"lineNumber":42,"author":{"gitId":"nickyfoo"},"content":"                        cmd \u003d new DeleteCommand(list,index);"},{"lineNumber":43,"author":{"gitId":"nickyfoo"},"content":"                        break;"},{"lineNumber":44,"author":{"gitId":"nickyfoo"},"content":"                    }"},{"lineNumber":45,"author":{"gitId":"nickyfoo"},"content":"                    case \"todo\": {"},{"lineNumber":46,"author":{"gitId":"nickyfoo"},"content":"                        String[] ar \u003d line.split(\" \",2);"},{"lineNumber":47,"author":{"gitId":"nickyfoo"},"content":"                        if(ar.length\u003d\u003d1) throw new CommandException(\"I can\u0027t add an empty task to the list!\");"},{"lineNumber":48,"author":{"gitId":"nickyfoo"},"content":"                        line \u003d line.split(\" \",2)[1];"},{"lineNumber":49,"author":{"gitId":"nickyfoo"},"content":"                        cmd \u003d new TodoCommand(list, line);"},{"lineNumber":50,"author":{"gitId":"nickyfoo"},"content":"                        break;"},{"lineNumber":51,"author":{"gitId":"nickyfoo"},"content":"                    }"},{"lineNumber":52,"author":{"gitId":"nickyfoo"},"content":"                    case \"deadline\": {"},{"lineNumber":53,"author":{"gitId":"nickyfoo"},"content":"                        String[] ar \u003d line.split(\" \",2);"},{"lineNumber":54,"author":{"gitId":"nickyfoo"},"content":"                        if(ar.length\u003d\u003d1) throw new CommandException(\"I can\u0027t add an empty task to the list!\");"},{"lineNumber":55,"author":{"gitId":"nickyfoo"},"content":"                        line \u003d line.split(\" \",2)[1];"},{"lineNumber":56,"author":{"gitId":"nickyfoo"},"content":"                        String[] result \u003d line.split(\"/by \");"},{"lineNumber":57,"author":{"gitId":"nickyfoo"},"content":"                        if(result.length\u003d\u003d1) throw new CommandException(\"Er... when do you need to finish this /by?\");"},{"lineNumber":58,"author":{"gitId":"nickyfoo"},"content":"                        cmd \u003d new DeadlineCommand(list, result[0], result[1]);"},{"lineNumber":59,"author":{"gitId":"nickyfoo"},"content":"                        break;"},{"lineNumber":60,"author":{"gitId":"nickyfoo"},"content":"                    }"},{"lineNumber":61,"author":{"gitId":"nickyfoo"},"content":"                    case \"event\": {"},{"lineNumber":62,"author":{"gitId":"nickyfoo"},"content":"                        String[] ar \u003d line.split(\" \",2);"},{"lineNumber":63,"author":{"gitId":"nickyfoo"},"content":"                        if(ar.length\u003d\u003d1) throw new CommandException(\"I can\u0027t add an empty task to the list!\");"},{"lineNumber":64,"author":{"gitId":"nickyfoo"},"content":"                        line \u003d line.split(\" \",2)[1];"},{"lineNumber":65,"author":{"gitId":"nickyfoo"},"content":"                        String[] result \u003d line.split(\"/at \");"},{"lineNumber":66,"author":{"gitId":"nickyfoo"},"content":"                        if(result.length\u003d\u003d1) throw new CommandException(\"Er... /at what time does this event start?\");"},{"lineNumber":67,"author":{"gitId":"nickyfoo"},"content":"                        cmd \u003d new EventCommand(list, result[0], result[1]);"},{"lineNumber":68,"author":{"gitId":"nickyfoo"},"content":"                        break;"},{"lineNumber":69,"author":{"gitId":"nickyfoo"},"content":"                    }"},{"lineNumber":70,"author":{"gitId":"nickyfoo"},"content":"                    default: {"},{"lineNumber":71,"author":{"gitId":"nickyfoo"},"content":"                        cmd \u003d new ExceptionCommand(\"I don\u0027t understand\");"},{"lineNumber":72,"author":{"gitId":"nickyfoo"},"content":"                        break;"},{"lineNumber":73,"author":{"gitId":"nickyfoo"},"content":"                    }"},{"lineNumber":74,"author":{"gitId":"nickyfoo"},"content":"                }"},{"lineNumber":75,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":76,"author":{"gitId":"nickyfoo"},"content":"            } catch (IndexOutOfBoundsException | NumberFormatException e){"},{"lineNumber":77,"author":{"gitId":"nickyfoo"},"content":"                cmd \u003d new ExceptionCommand(\"Please enter a valid value\");"},{"lineNumber":78,"author":{"gitId":"nickyfoo"},"content":"            } catch (CommandException e){"},{"lineNumber":79,"author":{"gitId":"nickyfoo"},"content":"                cmd \u003d new ExceptionCommand(e.getMessage());"},{"lineNumber":80,"author":{"gitId":"nickyfoo"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"nickyfoo"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"nickyfoo"},"content":"        sc.close();"},{"lineNumber":83,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":85,"author":{"gitId":"nickyfoo"},"content":"}"}],"authorContributionMap":{"nickyfoo":85}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"public class ByeCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":"    public ByeCommand(){"},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":"        super(\"Bye. Hope to see you again soon!\");"},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":"        super.dukeReply();"},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":"}"}],"authorContributionMap":{"nickyfoo":10}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"public class Command {"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":"    String reply;"},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":"    public Command(String reply){"},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"        this.reply \u003d reply;"},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":11,"author":{"gitId":"nickyfoo"},"content":"    public void dukeReply(){"},{"lineNumber":12,"author":{"gitId":"nickyfoo"},"content":"        System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":13,"author":{"gitId":"nickyfoo"},"content":"        System.out.println(\"\\t\" + this.reply);"},{"lineNumber":14,"author":{"gitId":"nickyfoo"},"content":"        System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":15,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":17,"author":{"gitId":"nickyfoo"},"content":"}"}],"authorContributionMap":{"nickyfoo":17}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"public class DeadlineCommand extends Command{"},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":11,"author":{"gitId":"nickyfoo"},"content":"    public DeadlineCommand(ArrayList\u003cTask\u003e list, String task, String by){"},{"lineNumber":12,"author":{"gitId":"nickyfoo"},"content":"        super(\"\");"},{"lineNumber":13,"author":{"gitId":"nickyfoo"},"content":"        Deadline t \u003d new Deadline(task, by);"},{"lineNumber":14,"author":{"gitId":"nickyfoo"},"content":"        list.add(t);"},{"lineNumber":15,"author":{"gitId":"nickyfoo"},"content":"        this.reply \u003d \"Got it. I\u0027ve added this task:\\n\\t\" + t.toString()"},{"lineNumber":16,"author":{"gitId":"nickyfoo"},"content":"                + \"\\n\\tNow you have \" + list.size() + \" task\" + (list.size() !\u003d 1 ? \"s \" : \" \") + \"in the list.\";"},{"lineNumber":17,"author":{"gitId":"nickyfoo"},"content":"        super.dukeReply();"},{"lineNumber":18,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":19,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"nickyfoo"},"content":"}"}],"authorContributionMap":{"nickyfoo":20}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"    public DeleteCommand(ArrayList\u003cTask\u003e list, int index) {"},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":"        super(\"\");"},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":"        Task t \u003d list.get(index);"},{"lineNumber":11,"author":{"gitId":"nickyfoo"},"content":"        list.remove(index);"},{"lineNumber":12,"author":{"gitId":"nickyfoo"},"content":"        this.reply \u003d \"Noted. I\u0027ve removed this task:\\n\\t\" + t.toString()"},{"lineNumber":13,"author":{"gitId":"nickyfoo"},"content":"                + \"\\n\\tNow you have \" + list.size() + \" task\" + (list.size() !\u003d 1 ? \"s \" : \" \") + \"in the list.\";"},{"lineNumber":14,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":15,"author":{"gitId":"nickyfoo"},"content":"        super.dukeReply();"},{"lineNumber":16,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nickyfoo"},"content":"}"}],"authorContributionMap":{"nickyfoo":17}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"import duke.task.*;"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":"public class DoneCommand extends Command{"},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"    public DoneCommand(ArrayList\u003cTask\u003e list, int index) {"},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":"        super(\"\");"},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":"        Task t \u003d list.get(index);"},{"lineNumber":11,"author":{"gitId":"nickyfoo"},"content":"        t.done();"},{"lineNumber":12,"author":{"gitId":"nickyfoo"},"content":"        this.reply \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t  \""},{"lineNumber":13,"author":{"gitId":"nickyfoo"},"content":"                + t.toString();"},{"lineNumber":14,"author":{"gitId":"nickyfoo"},"content":"        super.dukeReply();"},{"lineNumber":15,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"nickyfoo"},"content":"}"},{"lineNumber":17,"author":{"gitId":"nickyfoo"},"content":""}],"authorContributionMap":{"nickyfoo":17}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"import duke.task.Event;"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"public class EventCommand extends Command{"},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":11,"author":{"gitId":"nickyfoo"},"content":"    public EventCommand(ArrayList\u003cTask\u003e list, String task, String at){"},{"lineNumber":12,"author":{"gitId":"nickyfoo"},"content":"        super(\"\");"},{"lineNumber":13,"author":{"gitId":"nickyfoo"},"content":"        Event t \u003d new Event(task, at);"},{"lineNumber":14,"author":{"gitId":"nickyfoo"},"content":"        list.add(t);"},{"lineNumber":15,"author":{"gitId":"nickyfoo"},"content":"        this.reply \u003d \"Got it. I\u0027ve added this task:\\n\\t\" + t.toString()"},{"lineNumber":16,"author":{"gitId":"nickyfoo"},"content":"                + \"\\n\\tNow you have \" + list.size() + \" task\" + (list.size() !\u003d 1 ? \"s \" : \" \") + \"in the list.\";"},{"lineNumber":17,"author":{"gitId":"nickyfoo"},"content":"        super.dukeReply();"},{"lineNumber":18,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":19,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"nickyfoo"},"content":"}"}],"authorContributionMap":{"nickyfoo":20}},{"path":"src/main/java/duke/command/ExceptionCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"public class ExceptionCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":"    public ExceptionCommand(String s){"},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":"        super(s);"},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":"        super.dukeReply();"},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"}"}],"authorContributionMap":{"nickyfoo":8}},{"path":"src/main/java/duke/command/HelloCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":"public class HelloCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":"    private static String logo \u003d \"\\t ____        _        \\n\""},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":"                                + \"\\t|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":"                                + \"\\t| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"                                + \"\\t| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":"                                + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":11,"author":{"gitId":"nickyfoo"},"content":"    public HelloCommand(){"},{"lineNumber":12,"author":{"gitId":"nickyfoo"},"content":"        super(\"Hello from\\n\" + logo + \"\\tHello! I\u0027m Duke\\n\" + \"\\tWhat can I do for you?\");"},{"lineNumber":13,"author":{"gitId":"nickyfoo"},"content":"        super.dukeReply();"},{"lineNumber":14,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":16,"author":{"gitId":"nickyfoo"},"content":"}"}],"authorContributionMap":{"nickyfoo":16}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"import duke.task.*;"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":"public class ListCommand extends Command{"},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"    public ListCommand(ArrayList\u003cTask\u003e list){"},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":"        super(\"\");"},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":"        StringBuilder s \u003d new StringBuilder();"},{"lineNumber":11,"author":{"gitId":"nickyfoo"},"content":"        s.append(\"Here are the tasks in your list:\\n\");"},{"lineNumber":12,"author":{"gitId":"nickyfoo"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":13,"author":{"gitId":"nickyfoo"},"content":"            s.append(\"\\t\");"},{"lineNumber":14,"author":{"gitId":"nickyfoo"},"content":"            s.append(i + 1).append(\". \").append(list.get(i));"},{"lineNumber":15,"author":{"gitId":"nickyfoo"},"content":"            if (i !\u003d list.size() - 1) s.append(\"\\n\");"},{"lineNumber":16,"author":{"gitId":"nickyfoo"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"nickyfoo"},"content":"        if (list.size() \u003d\u003d 0) s.append(\"\\tYour list is empty!\");"},{"lineNumber":18,"author":{"gitId":"nickyfoo"},"content":"        this.reply \u003d s.toString();"},{"lineNumber":19,"author":{"gitId":"nickyfoo"},"content":"        super.dukeReply();"},{"lineNumber":20,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":22,"author":{"gitId":"nickyfoo"},"content":"}"},{"lineNumber":23,"author":{"gitId":"nickyfoo"},"content":""}],"authorContributionMap":{"nickyfoo":23}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":"import duke.task.Todo;"},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"public class TodoCommand extends Command{"},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":"    public TodoCommand(ArrayList\u003cTask\u003e list, String line){"},{"lineNumber":11,"author":{"gitId":"nickyfoo"},"content":"        super(\"\");"},{"lineNumber":12,"author":{"gitId":"nickyfoo"},"content":"        Todo t \u003d new Todo(line);"},{"lineNumber":13,"author":{"gitId":"nickyfoo"},"content":"        list.add(t);"},{"lineNumber":14,"author":{"gitId":"nickyfoo"},"content":"        this.reply \u003d \"Got it. I\u0027ve added this task:\\n\\t\" + t.toString()"},{"lineNumber":15,"author":{"gitId":"nickyfoo"},"content":"                + \"\\n\\tNow you have \" + list.size() + \" task\" + (list.size() !\u003d 1 ? \"s \" : \" \") + \"in the list.\";"},{"lineNumber":16,"author":{"gitId":"nickyfoo"},"content":"        super.dukeReply();"},{"lineNumber":17,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":18,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"nickyfoo"},"content":"}"}],"authorContributionMap":{"nickyfoo":19}},{"path":"src/main/java/duke/exception/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"// does not fit syntax for command"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":"public class CommandException extends DukeException{"},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":"    public CommandException(String str){"},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":"        super(str);"},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":"}"}],"authorContributionMap":{"nickyfoo":10}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":"    DukeException(String str){"},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":"        super(str);"},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"}"}],"authorContributionMap":{"nickyfoo":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"public class Deadline extends Task{"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":"    public Deadline(String description, String by){"},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":12,"author":{"gitId":"nickyfoo"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"nickyfoo"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"nickyfoo"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.by + \")\";"},{"lineNumber":15,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"nickyfoo"},"content":"}"}],"authorContributionMap":{"nickyfoo":16}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":"    public Event(String description, String at){"},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":"        this.at \u003d at;"},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":12,"author":{"gitId":"nickyfoo"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"nickyfoo"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"nickyfoo"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.at + \")\";"},{"lineNumber":15,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"nickyfoo"},"content":"}"}],"authorContributionMap":{"nickyfoo":16}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":"    public Task(String description){"},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":12,"author":{"gitId":"nickyfoo"},"content":"    public String getStatusIcon(){"},{"lineNumber":13,"author":{"gitId":"nickyfoo"},"content":"        //return tick or cross symbols"},{"lineNumber":14,"author":{"gitId":"nickyfoo"},"content":"        return (isDone ? \"\\u2713\" : \" \");"},{"lineNumber":15,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":17,"author":{"gitId":"nickyfoo"},"content":"    public void done(){"},{"lineNumber":18,"author":{"gitId":"nickyfoo"},"content":"        this.isDone \u003d true;"},{"lineNumber":19,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":21,"author":{"gitId":"nickyfoo"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"nickyfoo"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"nickyfoo"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":24,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"nickyfoo"},"content":"}"}],"authorContributionMap":{"nickyfoo":25}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"public class Todo extends Task{"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":"    public Todo(String description){"},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"nickyfoo"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nickyfoo"},"content":"}"}],"authorContributionMap":{"nickyfoo":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nickyfoo"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"nickyfoo"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"nickyfoo"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"nickyfoo"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"nickyfoo"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"nickyfoo"},"content":"list"},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":"deadline return book /by Sunday"},{"lineNumber":8,"author":{"gitId":"nickyfoo"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":9,"author":{"gitId":"nickyfoo"},"content":"list"}],"authorContributionMap":{"nickyfoo":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"nickyfoo"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"nickyfoo"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\exception\\*.java"},{"lineNumber":11,"author":{"gitId":"nickyfoo"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\task\\*.java"},{"lineNumber":12,"author":{"gitId":"nickyfoo"},"content":"javac  -cp ..\\bin -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\command\\*.java"},{"lineNumber":13,"author":{"gitId":"nickyfoo"},"content":"javac  -cp ..\\bin -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"},{"lineNumber":14,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":15,"author":{"gitId":"nickyfoo"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":17,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":19,"author":{"gitId":"-"},"content":")"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"nickyfoo"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":26,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":27,"author":{"gitId":"nickyfoo"},"content":""}],"authorContributionMap":{"nickyfoo":9,"-":18}}]
