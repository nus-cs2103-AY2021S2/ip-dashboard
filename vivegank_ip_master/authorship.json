[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"# Yoda"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"## Personal Assistant Chatbot"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"A Personal Assistant Chatbot that helps to keep track of different types of tasks such as ToDos, Deadlines and Events."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"## Ui"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"![UI](docs/Ui.png)"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"## User Guide"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"The user guide can be accessed [here](https://vivegank.github.io/ip/)."},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"## Additional remarks"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"A greenfield Java project, based on Project Duke, done as part of the CS2103T Software Engineering module in NUS."}],"authorContributionMap":{"vivegank":9,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"    mainClassName \u003d \"yoda.YodaLauncher\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"    archiveBaseName \u003d \"yoda\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"    enableAssertions \u003d true"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":44,"vivegank":18}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"Yoda is a Personal Assistant Chatbot that can help you"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"keep track of your tasks. It is optimized for use via"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"a Command Line Interface while still having the benefits"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"of a Graphical User Interface (GUI). If you can type fast, "},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"Yoda can get your task management tasks done faster than "},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"traditional GUI apps."},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"## Quick start"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"1. Ensure you have java `11` or above installed."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   "},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"1. Download the latest `Yoda.jar` from [here](https://github.com/vivegank/ip/releases)."},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"1. Copy the downloaded file to the folder from which the app will be used."},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"1. Use _java -jar Yoda.jar_ or just double-click to start the app. The GUI"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"similar to below should appear in a few seconds.\u003cbr\u003e"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"   ![UI](Ui.png)"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"   "},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"1. Type the command in the command box and press Enter to execute it.\u003cbr\u003e"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"Some example commands you can try:"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"   * **`help`** : Shows all available commands."},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"   * **`list`** : Lists all tasks in the task list."},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"   * **`todo read a book`** : Adds a ToDo task called `read a book` to the list of tasks."},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"   * **`done 1`** : Marks the 1st task on the task list as done."},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"   * **`delete 1`** : Deletes the 1st task on the task list."},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"   * **`bye`**: Exits the app."},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"   "},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"**Notes about the command format:**\u003cbr\u003e"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"  e.g. in `todo TASK_DESC`, `TASK_DESC` is a parameter which can be used as `todo read a book`."},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"* Items in square brackets are optional.\u003cbr\u003e"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"  e.g. in `list [TASK_FILTER]` can be used as `list` or `list -t`."},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"* A slash gives user a choice between the options available.\u003cbr\u003e"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"  e.g. in `delete INDEXES \\ all`, user has a choice to either `delete 1` or `delete all`."},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"### Viewing help : `help`  "},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"Shows a list of commands available to the user.\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"Format: `help`"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"### Adding a task :"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"There are three types of tasks that can be added:"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"#### ToDo : `todo`"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"ToDos are for tasks without any date/time attached to them.\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"Format: `todo TASK_DESC`\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"Examples:"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"* `todo read a book`"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"* `todo go to the bank`"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"#### Event : `event`"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"Events are for tasks that occur at a specific date and time.\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"Format: `event TASK_DESC /at YYYY-MM-DD HHMM`\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"Examples:"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"* `event group meeting /at 2021-03-21 1200`"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"* `event birthday party /at 2021-03-13 1700`"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"#### Deadline : `deadline`"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"Deadlines are for tasks that need to be done before a specific date and time.\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"Format: `deadline TASK_DESC /by YYYY-MM-DD HHMM`\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"Examples:"},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"* `deadline finish project /by 2021-04-10 0000`"},{"lineNumber":67,"author":{"gitId":"vivegank"},"content":"* `deadline finish quiz /by 2021-03-09 2359`"},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":69,"author":{"gitId":"vivegank"},"content":"### Listing tasks : `list`"},{"lineNumber":70,"author":{"gitId":"vivegank"},"content":"Shows a list of all or specific types of tasks in the task list.\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":71,"author":{"gitId":"vivegank"},"content":"Format: `list [-t / -d / -e]`\u003cbr\u003e"},{"lineNumber":72,"author":{"gitId":"vivegank"},"content":"* `list` lists all the tasks in the task list."},{"lineNumber":73,"author":{"gitId":"vivegank"},"content":"* `list -t` lists all the todos in the task list."},{"lineNumber":74,"author":{"gitId":"vivegank"},"content":"* `list -e` lists all the events in the task list."},{"lineNumber":75,"author":{"gitId":"vivegank"},"content":"* `list -d` lists all the deadlines in the task list."},{"lineNumber":76,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":77,"author":{"gitId":"vivegank"},"content":"### Locating task by keyword : `find`"},{"lineNumber":78,"author":{"gitId":"vivegank"},"content":"Finds tasks whose descriptions contain the given keyword.\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":79,"author":{"gitId":"vivegank"},"content":"Format: `find KEYWORD`"},{"lineNumber":80,"author":{"gitId":"vivegank"},"content":"* The search is case-insensitive."},{"lineNumber":81,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":82,"author":{"gitId":"vivegank"},"content":"Examples:"},{"lineNumber":83,"author":{"gitId":"vivegank"},"content":"* `find book`"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"### Marking task(s) as done: `done`"},{"lineNumber":86,"author":{"gitId":"vivegank"},"content":"Marks the specified task(s) in the task list as done.\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":87,"author":{"gitId":"vivegank"},"content":"Format: `done INDEXES / all`"},{"lineNumber":88,"author":{"gitId":"vivegank"},"content":"* `done all` can be used to mark all tasks as done or `INDEXES` can be used to specify tasks."},{"lineNumber":89,"author":{"gitId":"vivegank"},"content":"* `INDEXES` can be just one index or multiple indexes."},{"lineNumber":90,"author":{"gitId":"vivegank"},"content":"* Marks the task(s) at the specified `INDEXES` as done."},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"vivegank"},"content":"Examples:"},{"lineNumber":93,"author":{"gitId":"vivegank"},"content":"* `done 1`"},{"lineNumber":94,"author":{"gitId":"vivegank"},"content":"* `done 1 3 5`"},{"lineNumber":95,"author":{"gitId":"vivegank"},"content":"* `done all`"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"vivegank"},"content":"### Deleting task(s) : `delete`"},{"lineNumber":98,"author":{"gitId":"vivegank"},"content":"Deletes the specified task(s) in the task list.\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":99,"author":{"gitId":"vivegank"},"content":"Format: `delete INDEXES / all`"},{"lineNumber":100,"author":{"gitId":"vivegank"},"content":"* `delete all` can be used to delete all tasks or `INDEXES` can be used to specify tasks."},{"lineNumber":101,"author":{"gitId":"vivegank"},"content":"* `INDEXES` can be just one index or multiple indexes."},{"lineNumber":102,"author":{"gitId":"vivegank"},"content":"* Deletes the tasks(s) at the specified `INDEXES`."},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"vivegank"},"content":"Examples:"},{"lineNumber":105,"author":{"gitId":"vivegank"},"content":"* `delete 1`"},{"lineNumber":106,"author":{"gitId":"vivegank"},"content":"* `delete 2 4 6`"},{"lineNumber":107,"author":{"gitId":"vivegank"},"content":"* `delete all`"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"vivegank"},"content":"### Exiting the program : `bye`"},{"lineNumber":110,"author":{"gitId":"vivegank"},"content":"Exits the program.\u003cbr\u003e"},{"lineNumber":111,"author":{"gitId":"vivegank"},"content":"Format: `bye`"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"vivegank"},"content":"### Saving the data"},{"lineNumber":114,"author":{"gitId":"vivegank"},"content":"Task list data is saved automatically after any command that changes the data. There is no need to save manually."},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"vivegank"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"vivegank"},"content":"## Command summary"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"vivegank"},"content":"Action | Format, Examples"},{"lineNumber":121,"author":{"gitId":"vivegank"},"content":"--------|------------------"},{"lineNumber":122,"author":{"gitId":"vivegank"},"content":"**Help** | `help`"},{"lineNumber":123,"author":{"gitId":"vivegank"},"content":"**ToDo** | `todo TASK_DESC` \u003cbr\u003e e.g., `todo read a book`"},{"lineNumber":124,"author":{"gitId":"vivegank"},"content":"**Deadline** | `deadline TASK_DESC /by YYYY-MM-DD HHMM`\u003cbr\u003e e.g., `deadline finish quiz /by 2021-03-09 2359`"},{"lineNumber":125,"author":{"gitId":"vivegank"},"content":"**Event** | `event TASK_DESC /at YYYY-MM-DD HHMM`\u003cbr\u003e e.g., `event birthday party /at 2021-03-13 1700`"},{"lineNumber":126,"author":{"gitId":"vivegank"},"content":"**List** | `list [-t / -d / -e]`\u003cbr\u003e e.g.,`list` or `list -e`"},{"lineNumber":127,"author":{"gitId":"vivegank"},"content":"**Find** | `find KEYWORD`\u003cbr\u003e e.g., `find book`"},{"lineNumber":128,"author":{"gitId":"vivegank"},"content":"**Done** | `done INDEXES / all`\u003cbr\u003e e.g., `done 2 4` or `done all`"},{"lineNumber":129,"author":{"gitId":"vivegank"},"content":"**Delete** | `delete INDEXES / all`\u003cbr\u003e e.g., `delete 3 5` or `delete all`"},{"lineNumber":130,"author":{"gitId":"vivegank"},"content":"**Bye** | `bye`"}],"authorContributionMap":{"-":13,"vivegank":117}},{"path":"src/main/java/yoda/Yoda.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import yoda.command.Command;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import yoda.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import yoda.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import yoda.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import yoda.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":" * Yoda class which contains the main logic of the Yoda chatbot."},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"public class Yoda {"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    /** Specialised list to handle task-related instructions */"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    private TaskList tasks;"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"    /** Storage to handle retrieval and storage of tasklist */"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    private Storage storage;"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    /** Ui to handle interactions with the user */"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"    private Ui ui;"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"     * Creates a Yoda chatbot object."},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"    public Yoda() {"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"        String home \u003d System.getProperty(\"user.home\");"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"        String filePath \u003d home + \"/yodaTasks.txt\";"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"        this.tasks \u003d storage.load();"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"     * Greets user."},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"     * @return Message containing greetings."},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"    public String greetUser() {"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"        return ui.greet();"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"     * Runs the Yoda chatbot by making it parse user input."},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"    public String runYoda(String input) {"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"        Command c \u003d Parser.parse(input);"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"        return c.execute(tasks, ui, storage);"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"vivegank":44,"-":2}},{"path":"src/main/java/yoda/YodaLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import yoda.ui.Gui;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":" * YodaLauncher class to launch the Yoda chatbot."},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"public class YodaLauncher {"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"     * Launches the application."},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"     * @param args Arguments required for application launch."},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    public static void main(String[] args) {"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"        Application.launch(Gui.class, args);"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":17}},{"path":"src/main/java/yoda/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.command;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import yoda.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import yoda.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import yoda.task.Event;"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import yoda.task.Task;"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"import yoda.task.TaskList;"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"import yoda.task.ToDo;"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"import yoda.ui.Ui;"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":" * AddCommand class that handles adding tasks to TaskList and a child of Command class."},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"public class AddCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"     * Creates an AddCommand object."},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"     * @param details Details of AddCommand object."},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"    public AddCommand(String[] details) {"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"        super(details);"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"        commandType \u003d CommandType.valueOf(details[0]);"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"     * Makes the task requested by user."},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"     * @return Task requested by the user."},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"     * @throws InvalidCommandFormatException If invalid arguments are entered for command."},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"     * @throws InvalidDateTimeFormatException If datetime entered is of an invalid format."},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"    public Task makeTask() throws InvalidCommandFormatException, InvalidDateTimeFormatException {"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"        switch(commandType) {"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"        case TODO:"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"            return makeToDo(details);"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"        case EVENT:"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"            return makeEvent(details);"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"        case DEADLINE:"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"            return makeDeadline(details);"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"        default:"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"            return new ToDo(\"This task should not have appeared!\");"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"     * Makes ToDo tasks using the arguments given by user."},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"     * @param toDoDesc Description of ToDo task to be created."},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"     * @return ToDo task requested by user."},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"     * @throws InvalidCommandFormatException If invalid arguments are given for ToDo task."},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"    public ToDo makeToDo(String ... toDoDesc) throws InvalidCommandFormatException {"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"        if (toDoDesc.length \u003d\u003d 1) {"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"            throw new InvalidCommandFormatException(\"Give a description for todo, you must!\");"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"        StringBuilder toDoDetails \u003d new StringBuilder();"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"        for (int i \u003d 1; i \u003c toDoDesc.length; i++) {"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"            toDoDetails.append(toDoDesc[i]).append(\" \");"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"        return new ToDo(toDoDetails.toString());"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"     * Makes Event tasks using the arguments given by user."},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"     * @param eventDesc Description of Event task to be created."},{"lineNumber":67,"author":{"gitId":"vivegank"},"content":"     * @return Event task requested by user."},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":"     * @throws InvalidCommandFormatException If invalid arguments are given for Event task."},{"lineNumber":69,"author":{"gitId":"vivegank"},"content":"     * @throws InvalidDateTimeFormatException If datetime entered for Event task is in an invalid format."},{"lineNumber":70,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"vivegank"},"content":"    public Event makeEvent(String ... eventDesc) throws InvalidCommandFormatException,"},{"lineNumber":72,"author":{"gitId":"vivegank"},"content":"            InvalidDateTimeFormatException {"},{"lineNumber":73,"author":{"gitId":"vivegank"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"vivegank"},"content":"            int i \u003d 1;"},{"lineNumber":75,"author":{"gitId":"vivegank"},"content":"            StringBuilder eventDetails \u003d new StringBuilder();"},{"lineNumber":76,"author":{"gitId":"vivegank"},"content":"            while (!eventDesc[i].equals(\"/at\")) {"},{"lineNumber":77,"author":{"gitId":"vivegank"},"content":"                eventDetails.append(eventDesc[i]).append(\" \");"},{"lineNumber":78,"author":{"gitId":"vivegank"},"content":"                i++;"},{"lineNumber":79,"author":{"gitId":"vivegank"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"vivegank"},"content":"            if (!eventDesc[i].equals(\"/at\")) {"},{"lineNumber":81,"author":{"gitId":"vivegank"},"content":"                throw new InvalidCommandFormatException(\"Use /at when creating an event, you must!\");"},{"lineNumber":82,"author":{"gitId":"vivegank"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"vivegank"},"content":"            assert i \u003e 1 : \"i must be pointing at date time by this point\";"},{"lineNumber":84,"author":{"gitId":"vivegank"},"content":"            String eventDateAndTime \u003d checkDateTime(eventDesc[i + 1], eventDesc[i + 2]);"},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"            return new Event(eventDetails.toString(), eventDateAndTime);"},{"lineNumber":86,"author":{"gitId":"vivegank"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":87,"author":{"gitId":"vivegank"},"content":"            throw new InvalidCommandFormatException(\"The right way to create an event,\\n\""},{"lineNumber":88,"author":{"gitId":"vivegank"},"content":"                    + \"\u0027event [description] /at YYYY-MM-DD HHmm\u0027 is!\");"},{"lineNumber":89,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":92,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"vivegank"},"content":"     * Makes Deadline tasks using the arguments given by user."},{"lineNumber":94,"author":{"gitId":"vivegank"},"content":"     * @param deadlineDesc Description of Deadline task to be created."},{"lineNumber":95,"author":{"gitId":"vivegank"},"content":"     * @return Deadline task requested by user."},{"lineNumber":96,"author":{"gitId":"vivegank"},"content":"     * @throws InvalidCommandFormatException If invalid arguments are given for Deadline task."},{"lineNumber":97,"author":{"gitId":"vivegank"},"content":"     * @throws InvalidDateTimeFormatException If datetime entered for Deadline task is in an invalid format."},{"lineNumber":98,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"vivegank"},"content":"    public Deadline makeDeadline(String ... deadlineDesc) throws InvalidCommandFormatException,"},{"lineNumber":100,"author":{"gitId":"vivegank"},"content":"            InvalidDateTimeFormatException {"},{"lineNumber":101,"author":{"gitId":"vivegank"},"content":"        try {"},{"lineNumber":102,"author":{"gitId":"vivegank"},"content":"            int i \u003d 1;"},{"lineNumber":103,"author":{"gitId":"vivegank"},"content":"            StringBuilder deadlineDetails \u003d new StringBuilder();"},{"lineNumber":104,"author":{"gitId":"vivegank"},"content":"            while (!deadlineDesc[i].equals(\"/by\")) {"},{"lineNumber":105,"author":{"gitId":"vivegank"},"content":"                deadlineDetails.append(deadlineDesc[i]).append(\" \");"},{"lineNumber":106,"author":{"gitId":"vivegank"},"content":"                i++;"},{"lineNumber":107,"author":{"gitId":"vivegank"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"vivegank"},"content":"            if (!deadlineDesc[i].equals(\"/by\")) {"},{"lineNumber":109,"author":{"gitId":"vivegank"},"content":"                throw new InvalidCommandFormatException(\"Use /by when creating a deadline, you must!\");"},{"lineNumber":110,"author":{"gitId":"vivegank"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"vivegank"},"content":"            assert i \u003e 1 : \"i must be pointing at date time by this point\";"},{"lineNumber":112,"author":{"gitId":"vivegank"},"content":"            String deadlineDateAndTime \u003d checkDateTime(deadlineDesc[i + 1], deadlineDesc[i + 2]);"},{"lineNumber":113,"author":{"gitId":"vivegank"},"content":"            return new Deadline(deadlineDetails.toString(), deadlineDateAndTime);"},{"lineNumber":114,"author":{"gitId":"vivegank"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":115,"author":{"gitId":"vivegank"},"content":"            throw new InvalidCommandFormatException(\"The right way to create a deadline,\\n\""},{"lineNumber":116,"author":{"gitId":"vivegank"},"content":"                    + \"\u0027deadline [description] /by YYYY-MM-DD HHmm\u0027 is!\");"},{"lineNumber":117,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":120,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"vivegank"},"content":"     * Checks if the datetime format is correct and returns a valid datetime String."},{"lineNumber":122,"author":{"gitId":"vivegank"},"content":"     * @param date Date of task"},{"lineNumber":123,"author":{"gitId":"vivegank"},"content":"     * @param time Time of task"},{"lineNumber":124,"author":{"gitId":"vivegank"},"content":"     * @return Valid datetime String for Event/Deadline task"},{"lineNumber":125,"author":{"gitId":"vivegank"},"content":"     * @throws InvalidDateTimeFormatException If datetime format is invalid"},{"lineNumber":126,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"vivegank"},"content":"    public String checkDateTime(String date, String time) throws InvalidDateTimeFormatException {"},{"lineNumber":128,"author":{"gitId":"vivegank"},"content":"        try {"},{"lineNumber":129,"author":{"gitId":"vivegank"},"content":"            String dateTime \u003d date + \" \" + time;"},{"lineNumber":130,"author":{"gitId":"vivegank"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":131,"author":{"gitId":"vivegank"},"content":"            LocalDateTime taskTime \u003d LocalDateTime.parse(dateTime, format);"},{"lineNumber":132,"author":{"gitId":"vivegank"},"content":"            LocalDateTime currTime \u003d LocalDateTime.now();"},{"lineNumber":133,"author":{"gitId":"vivegank"},"content":"            if (taskTime.isBefore(currTime)) {"},{"lineNumber":134,"author":{"gitId":"vivegank"},"content":"                throw new InvalidDateTimeFormatException(\"Not possible, time travel is!\\n\""},{"lineNumber":135,"author":{"gitId":"vivegank"},"content":"                        + \"An appropriate date and time, you must input!\");"},{"lineNumber":136,"author":{"gitId":"vivegank"},"content":"            }"},{"lineNumber":137,"author":{"gitId":"vivegank"},"content":"            return dateTime;"},{"lineNumber":138,"author":{"gitId":"vivegank"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":139,"author":{"gitId":"vivegank"},"content":"            throw new InvalidDateTimeFormatException(\"\u0027YYYY-MM-DD HHmm\u0027, the right format is!\\n\""},{"lineNumber":140,"author":{"gitId":"vivegank"},"content":"                    + \"2021-01-01 1600, an example is!\");"},{"lineNumber":141,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":144,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":145,"author":{"gitId":"vivegank"},"content":"     * Adds a specific type of task to the TaskList based on the command issued by user and"},{"lineNumber":146,"author":{"gitId":"vivegank"},"content":"     * writes updated TaskList to the file."},{"lineNumber":147,"author":{"gitId":"vivegank"},"content":"     * @param taskList TaskList associated with the command being executed."},{"lineNumber":148,"author":{"gitId":"vivegank"},"content":"     * @param ui Ui associated with the command being executed."},{"lineNumber":149,"author":{"gitId":"vivegank"},"content":"     * @param storage Storage associated with the command being executed."},{"lineNumber":150,"author":{"gitId":"vivegank"},"content":"     * @return Message to user informing if the AddCommand was executed successfully or not."},{"lineNumber":151,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"vivegank"},"content":"    @Override"},{"lineNumber":153,"author":{"gitId":"vivegank"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":154,"author":{"gitId":"vivegank"},"content":"        try {"},{"lineNumber":155,"author":{"gitId":"vivegank"},"content":"            Task task \u003d makeTask();"},{"lineNumber":156,"author":{"gitId":"vivegank"},"content":"            taskList.addTask(task);"},{"lineNumber":157,"author":{"gitId":"vivegank"},"content":"            storage.serialize(taskList);"},{"lineNumber":158,"author":{"gitId":"vivegank"},"content":"            return ui.printAddedTask(task);"},{"lineNumber":159,"author":{"gitId":"vivegank"},"content":"        } catch (InvalidCommandFormatException | InvalidDateTimeFormatException e) {"},{"lineNumber":160,"author":{"gitId":"vivegank"},"content":"            return e.getMessage();"},{"lineNumber":161,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":163}},{"path":"src/main/java/yoda/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.command;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import yoda.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import yoda.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import yoda.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":" * Abstract Command class for handling user inputs."},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"    /** Details of user input */"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"    protected String[] details;"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    /** Type of command referred to by user input */"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    protected CommandType commandType;"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"     * Creates a command object that does not have any details associated with it."},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"    public Command() {}"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"     * Creates a command object."},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"     * @param details Details required to handle user input."},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"    public Command(String[] details) {"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"        this.details \u003d details;"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"     * Executes the command."},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"      * @param taskList TaskList associated with the command being executed."},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"     * @param ui Ui associated with the command being executed."},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"     * @param storage Storage associated with the command being executed."},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"     * @return Message to user informing if the command was executed successfully or not."},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"    public abstract String execute (TaskList taskList, Ui ui, Storage storage);"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":37}},{"path":"src/main/java/yoda/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.command;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":" * CommandType class to enumerate the types of commands available to handle user requests."},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"public enum CommandType {"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"    LIST, TODO, DEADLINE, EVENT, DONE, DELETE, FIND, BYE, HELP, ERROR"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":8}},{"path":"src/main/java/yoda/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.command;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import yoda.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import yoda.task.InvalidTaskListIndexException;"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import yoda.task.Task;"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import yoda.task.TaskList;"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import yoda.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":" * EditCommand class that handles task states and a child of the Command class."},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"public class EditCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"     * Creates an EditCommand object."},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"     * @param details Details of EditCommand object."},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"    public EditCommand(String[] details) {"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"        super(details);"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"        commandType \u003d CommandType.valueOf(details[0]);"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"     * Accesses the tasks from the TaskList that are about to be edited and puts them in another TaskList."},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"     * @param taskList Tasklist from which the tasks are being accessed."},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"     * @return TaskList containing the tasks which were accessed to be edited."},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"     * @throws InvalidTaskListIndexException If the user does not provide index or provides an invalid task index."},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"    public TaskList accessTasksToBeEdited(TaskList taskList) throws InvalidTaskListIndexException {"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"        if (details.length \u003d\u003d 1) {"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"            throw new InvalidTaskListIndexException(\"Enter the list number of task to be edited, you must!\");"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"        if (details[1].equals(\"all\")) {"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"            return new TaskList(taskList.getList());"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"            List\u003cTask\u003e accessedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"            for (int i \u003d 1; i \u003c details.length; i++) {"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"                int taskToBeEdited \u003d Integer.parseInt(details[i]);"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"                Task task \u003d taskList.accessTask(taskToBeEdited);"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"                accessedTasks.add(task);"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"            return new TaskList(accessedTasks);"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"            throw new InvalidTaskListIndexException(\"Strong within you, the dark force is.\\n\""},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"                                                    + \"Integer, you must enter. Nothing else!\");"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"     * Deletes the tasks specified by user from the TaskList."},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"     * @param taskList TaskList from which the tasks are deleted"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"    public void deleteTasks(TaskList taskList) {"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"        if (details[1].equals(\"all\")) {"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"            taskList.deleteAllTasks();"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"        } else {"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"            for (int i \u003d 1; i \u003c details.length; i++) {"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"                taskList.markTaskToBeDeleted(Integer.parseInt(details[i]));"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"            taskList.deleteMarkedTasks();"},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":67,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":"     * Marks the tasks specified by user as done in the TaskList."},{"lineNumber":69,"author":{"gitId":"vivegank"},"content":"     * @param taskList TaskList in which the tasks are marked as done."},{"lineNumber":70,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"vivegank"},"content":"    public void markTasksAsDone(TaskList taskList) {"},{"lineNumber":72,"author":{"gitId":"vivegank"},"content":"        if (details[1].equals(\"all\")) {"},{"lineNumber":73,"author":{"gitId":"vivegank"},"content":"            taskList.markAllTasksAsDone();"},{"lineNumber":74,"author":{"gitId":"vivegank"},"content":"        } else {"},{"lineNumber":75,"author":{"gitId":"vivegank"},"content":"            for (int i \u003d 1; i \u003c details.length; i++) {"},{"lineNumber":76,"author":{"gitId":"vivegank"},"content":"                taskList.markTaskAsDone(Integer.parseInt(details[i]));"},{"lineNumber":77,"author":{"gitId":"vivegank"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":81,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"vivegank"},"content":"     * Deletes or marks as done the tasks specified by user in their issued command and"},{"lineNumber":83,"author":{"gitId":"vivegank"},"content":"     * writes updated Tasklist to the file."},{"lineNumber":84,"author":{"gitId":"vivegank"},"content":"     * @param taskList TaskList associated with the command being executed."},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"     * @param ui Ui associated with the command being executed."},{"lineNumber":86,"author":{"gitId":"vivegank"},"content":"     * @param storage Storage associated with the command being executed."},{"lineNumber":87,"author":{"gitId":"vivegank"},"content":"     * @return Message to user informing if the EditCommand was executed successfully or not."},{"lineNumber":88,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"vivegank"},"content":"    @Override"},{"lineNumber":90,"author":{"gitId":"vivegank"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":91,"author":{"gitId":"vivegank"},"content":"        try {"},{"lineNumber":92,"author":{"gitId":"vivegank"},"content":"            TaskList accessedTasks \u003d accessTasksToBeEdited(taskList);"},{"lineNumber":93,"author":{"gitId":"vivegank"},"content":"            assert accessedTasks.getTaskListSize() !\u003d 0 : \"There must be at least one task accessed\";"},{"lineNumber":94,"author":{"gitId":"vivegank"},"content":"            if (commandType \u003d\u003d CommandType.DELETE) {"},{"lineNumber":95,"author":{"gitId":"vivegank"},"content":"                deleteTasks(taskList);"},{"lineNumber":96,"author":{"gitId":"vivegank"},"content":"                storage.serialize(taskList);"},{"lineNumber":97,"author":{"gitId":"vivegank"},"content":"                return ui.printDeletedTask(accessedTasks.toString(), taskList.getTaskListSize());"},{"lineNumber":98,"author":{"gitId":"vivegank"},"content":"            } else if (commandType \u003d\u003d CommandType.DONE) {"},{"lineNumber":99,"author":{"gitId":"vivegank"},"content":"                markTasksAsDone(taskList);"},{"lineNumber":100,"author":{"gitId":"vivegank"},"content":"                storage.serialize(taskList);"},{"lineNumber":101,"author":{"gitId":"vivegank"},"content":"                return ui.printFinishedTask(accessedTasks.toString(), taskList.getNumberOfUnfinishedTasks());"},{"lineNumber":102,"author":{"gitId":"vivegank"},"content":"            } else {"},{"lineNumber":103,"author":{"gitId":"vivegank"},"content":"                return \"The greatest teacher, failure is.\";"},{"lineNumber":104,"author":{"gitId":"vivegank"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"vivegank"},"content":"        } catch (InvalidTaskListIndexException e) {"},{"lineNumber":106,"author":{"gitId":"vivegank"},"content":"            return e.getMessage();"},{"lineNumber":107,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":109}},{"path":"src/main/java/yoda/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.command;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import yoda.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import yoda.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import yoda.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":" * ErrorCommand class that handles invalid commands entered by user and a child of Command class."},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"public class ErrorCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"     * Creates an ErrorCommand object."},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    public ErrorCommand() {}"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"     * Shows user that they have entered an invalid command."},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"     * @param taskList TaskList associated with the command being executed."},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"     * @param ui Ui associated with the command being executed."},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"     * @param storage Storage associated with the command being executed."},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"     * @return Message informing an invalid command was entered and prompting user to use help command."},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"        return ui.showError();"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":27}},{"path":"src/main/java/yoda/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.command;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import yoda.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import yoda.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import yoda.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":" * ExitCommand class that handles exiting the Yoda chatbot after the user is done using and"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":" * a child of the Command class."},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"public class ExitCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"     * Creates an ExitCommand object."},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"    public ExitCommand() {}"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"     * Exits the Yoda chatbot after writing tasklist to the file."},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"     * @param taskList TaskList associated with the command being executed."},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"     * @param ui Ui associated with the command being executed."},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"     * @param storage Storage associated with the command being executed."},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"     * @return Message saying goodbye to the user."},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"        storage.serialize(taskList);"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"        return ui.exit();"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":29}},{"path":"src/main/java/yoda/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.command;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import yoda.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import yoda.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import yoda.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":" * HelpCommand class that handles helping the user navigate the Yoda chatbot and"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":" * a child of the Command class."},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"public class HelpCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"     * Creates a HelpCommand object."},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"    public HelpCommand() {}"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"     * Shows list of commands available to user."},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"     * @param taskList TaskList associated with the command being executed."},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"     * @param ui Ui associated with the command being executed."},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"     * @param storage Storage associated with the command being executed."},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"     * @return Message showing all commands available to user."},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"        return ui.showHelp();"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":28}},{"path":"src/main/java/yoda/command/InvalidCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.command;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":" * InvalidCommandFormatException class that throws an exception when invalid arguments are given for commands."},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"public class InvalidCommandFormatException extends Exception {"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"     * Creates an InvalidCommandFormatException exception."},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"     * @param error The error the user made when entering their command."},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"    public InvalidCommandFormatException(String error) {"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"        super(error);"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":14}},{"path":"src/main/java/yoda/command/InvalidDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.command;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":" * InvalidDateTimeFormatException class that throws an exception when the datetime entered by user is invalid."},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"public class InvalidDateTimeFormatException extends Exception {"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"     * Creates an InvalidDateTimeFormatException exception."},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"     * @param error The error the user made when entering their command."},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"    public InvalidDateTimeFormatException(String error) {"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"        super(error);"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":14}},{"path":"src/main/java/yoda/command/InvalidKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.command;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":" *"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"public class InvalidKeywordException extends Exception {"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"    public InvalidKeywordException(String error) {"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"        super(error);"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":10}},{"path":"src/main/java/yoda/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.command;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import yoda.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import yoda.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import yoda.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":" * ListCommand class that handles listing out the tasks in the TaskList"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":" * and a child of the Command class."},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"public class ListCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"     * Creates a ListCommand object."},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"     * @param details Details of ListCommand object."},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    public ListCommand(String[] details) {"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"        super(details);"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"     * Filters tasks in the TaskList matching the keyword given and puts them in another TaskList."},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"     * @param keyword Keyword used to filter tasks."},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"     * @param taskList TaskList from which tasks are filtered."},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"     * @return TaskList containing the tasks filtered by keyword."},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"     * @throws InvalidKeywordException If keyword given by user is too short or more than one word."},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"    public TaskList findByKeyword(String keyword, TaskList taskList) throws InvalidKeywordException {"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"        assert taskList !\u003d null;"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"        if (keyword.length() \u003c\u003d 2) {"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"            throw new InvalidKeywordException(\"A valid keyword containing more than 2 characters, \""},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"                    + \"you must enter!\");"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"        if (details.length !\u003d 2) {"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"            throw new InvalidKeywordException(\"Only one KEYWORD, you must enter!\");"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"        return taskList.filterByTask(keyword);"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"     * Lists tasks based on the information given by user."},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"     * @param taskList TaskList associated with the command being executed."},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"     * @param ui Ui associated with the command being executed."},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"     * @param storage Storage associated with the command being executed."},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"     * @return Message containing the list of tasks requested by user."},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"        if (details[0].equals(\"FIND\")) {"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"            try {"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"                TaskList keywordList \u003d findByKeyword(details[1], taskList);"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"                return ui.printTasks(\"find\", keywordList.toString(), keywordList.getTaskListSize());"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"            } catch (InvalidKeywordException e) {"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"                return e.getMessage();"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"            if (details.length \u003d\u003d 1) {"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"                return ui.printTasks(\"all\", taskList.toString(), taskList.getTaskListSize());"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"            switch (details[1]) {"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"            case \"-d\":"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"                TaskList deadlineList \u003d taskList.filterByTask(\"Deadline\");"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"                return ui.printTasks(\"deadline\", deadlineList.toString(), deadlineList.getTaskListSize());"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"            case \"-e\":"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"                TaskList eventList \u003d taskList.filterByTask(\"Event\");"},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"                return ui.printTasks(\"event\", eventList.toString(), eventList.getTaskListSize());"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"            case \"-t\":"},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"                TaskList todoList \u003d taskList.filterByTask(\"ToDo\");"},{"lineNumber":67,"author":{"gitId":"vivegank"},"content":"                return ui.printTasks(\"todo\", todoList.toString(), todoList.getTaskListSize());"},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":"            default:"},{"lineNumber":69,"author":{"gitId":"vivegank"},"content":"                return ui.printTasks(\"bad\", \"\", 0);"},{"lineNumber":70,"author":{"gitId":"vivegank"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":73}},{"path":"src/main/java/yoda/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.parser;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import yoda.command.AddCommand;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import yoda.command.Command;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import yoda.command.CommandType;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import yoda.command.EditCommand;"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import yoda.command.ErrorCommand;"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import yoda.command.ExitCommand;"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import yoda.command.HelpCommand;"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import yoda.command.ListCommand;"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":" * Parser class that parses user input to decide the next course of action."},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"public class Parser {"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"     * Parses the input provided by the user to decide how to handle it."},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"     * @param input Input provided by the user."},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"     * @return Command needed to handle the input provided."},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"    public static Command parse(String input) {"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"        String[] splitInput \u003d input.split(\" \");"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"        if (splitInput.length \u003d\u003d 0) {"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"            splitInput \u003d new String[]{\"error\"};"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"        splitInput[0] \u003d splitInput[0].toUpperCase();"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"        CommandType command \u003d checkCommand(splitInput[0]);"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"        splitInput[0] \u003d command.name();"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"        assert !splitInput[0].equals(\"\") : \"The command name must be here\";"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"        switch(command) {"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"        case LIST:"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"        case FIND:"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"            return new ListCommand(splitInput);"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"        case TODO:"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"        case DEADLINE:"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"        case EVENT:"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"            return new AddCommand(splitInput);"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"        case DELETE:"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"        case DONE:"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"            return new EditCommand(splitInput);"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"        case BYE:"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"            return new ExitCommand();"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"        case HELP:"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"            return new HelpCommand();"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"        case ERROR:"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"        default:"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"            return new ErrorCommand();"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"     * Checks if the input entered by user corresponds to one of the available commands."},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"     * @param command User input corresponding to an available command."},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"     * @return CommandType enumeration based on whether the input is valid or not."},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"    private static CommandType checkCommand(String command) {"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"            return CommandType.valueOf(command);"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"            return CommandType.ERROR;"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":64}},{"path":"src/main/java/yoda/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.storage;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import java.io.FileInputStream;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import java.io.FileOutputStream;"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import java.io.ObjectInputStream;"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import java.io.ObjectOutputStream;"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"import yoda.task.TaskList;"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":" * Storage class to handle storing and retrieval of the tasklist from the hard disk."},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"public class Storage {"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"    /** Filepath of the file containing the tasklist */"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"    private String filePath;"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"     * Creates a storage object."},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"     * @param filePath Location of file on the hard disk."},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"    public Storage(String filePath) {"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"     * Loads the TaskList from the file if available and creates a new file if not available."},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"     * @return TaskList loaded from the file if available or a new TaskList if not available."},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"    public TaskList load() {"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"        File tasks \u003d new File(filePath);"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"        boolean isNewFile \u003d false;"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"            if (tasks.createNewFile()) {"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"                isNewFile \u003d true;"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"        } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"            System.out.println(\"An error occurred when trying to create the file during load\");"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"        if (!isNewFile) {"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"            return deserialize();"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"        } else {"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"            return taskList;"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"     * Serializes and stores the TaskList in the file."},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"     * @param taskList TaskList to be serialized for storage."},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"    public void serialize(TaskList taskList) {"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"        File tasks \u003d new File(filePath);"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"            FileOutputStream fileOutputStream \u003d new FileOutputStream(tasks);"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"            ObjectOutputStream objOutputStream \u003d new ObjectOutputStream(fileOutputStream);"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"            objOutputStream.writeObject(taskList);"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"            objOutputStream.flush();"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"            objOutputStream.close();"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"            System.out.println(\"File not found when serializing!\");"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"        } catch (IOException e) {"},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"            System.out.println(\"An error occurred when serializing\");"},{"lineNumber":67,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":70,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"vivegank"},"content":"     * Deserializes the content in the file."},{"lineNumber":72,"author":{"gitId":"vivegank"},"content":"     * @return TaskList obtained from the deserialization."},{"lineNumber":73,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"vivegank"},"content":"    public TaskList deserialize() {"},{"lineNumber":75,"author":{"gitId":"vivegank"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":76,"author":{"gitId":"vivegank"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"vivegank"},"content":"            FileInputStream fileInputStream \u003d new FileInputStream(filePath);"},{"lineNumber":78,"author":{"gitId":"vivegank"},"content":"            ObjectInputStream objInputStream \u003d new ObjectInputStream(fileInputStream);"},{"lineNumber":79,"author":{"gitId":"vivegank"},"content":"            taskList \u003d (TaskList) objInputStream.readObject();"},{"lineNumber":80,"author":{"gitId":"vivegank"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":81,"author":{"gitId":"vivegank"},"content":"            System.out.println(\"File not found when deserializing!\");"},{"lineNumber":82,"author":{"gitId":"vivegank"},"content":"        } catch (IOException e) {"},{"lineNumber":83,"author":{"gitId":"vivegank"},"content":"            System.out.println(\"An error occurred when deserializing!\");"},{"lineNumber":84,"author":{"gitId":"vivegank"},"content":"        } catch (ClassNotFoundException e) {"},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"            System.out.println(\"Reinstall Yoda or contact the developer!\");"},{"lineNumber":86,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"vivegank"},"content":"        return taskList;"},{"lineNumber":88,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":89}},{"path":"src/main/java/yoda/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.task;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":" * Deadline class that is a specialized version of the Task class and extends the Task class."},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"     * Creates a Deadline object."},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"     * @param description Description of Deadline object."},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"     * @param by Datetime the Deadline object is due."},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"        setDateTime(by);"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"     * Formats the Deadline information to be user-readable."},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"     * @return User-readable format of the Deadline object."},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"        return \"[D]\" + super.toString() + \" ---\u003e by \" + formatDateTime();"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":25}},{"path":"src/main/java/yoda/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.task;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":" * Event class that is a specialized version of the Task class and extends the Task class."},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"     * Creates an Event object."},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"     * @param description Description of Event object."},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"     * @param at Datetime the Event object is occurring."},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"    public Event(String description, String at) {"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"        setDateTime(at);"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"     * Formats the Event information to be user-readable."},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"     * @return User-readable format of the Event object."},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"        return \"[E]\" + super.toString() + \" ---\u003e at \" + formatDateTime();"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":25}},{"path":"src/main/java/yoda/task/InvalidTaskListIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.task;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":" * InvalidTaskListIndexException class that throws an exception when index of task does not exist in TaskList."},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"public class InvalidTaskListIndexException extends Exception {"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"     * Creates an InvalidTaskListIndexException exception."},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"     * @param error The error the user made when entering their command."},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"    public InvalidTaskListIndexException(String error) {"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"        super(error);"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":14}},{"path":"src/main/java/yoda/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.task;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import java.io.Serializable;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":" * Abstract task class to handle task-related information."},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"public abstract class Task implements Serializable {"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"    /** Description of the task created */"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"    protected String description;"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    /** Shows if the task has been completed */"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    protected boolean isDone;"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"    /** Date and time related to the task created */"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    protected LocalDateTime dateTime;"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    /** Shows if the task has been marked to be deleted */"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"    protected boolean isMarkedToBeDeleted;"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"     * Creates a task object."},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"     * @param description Description of task object."},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    public Task(String description) {"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"        this.description \u003d description;"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"        isDone \u003d false;"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"        isMarkedToBeDeleted \u003d false;"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"     * Formats the date and time to make it more readable for the user."},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"     * @return Formatted date and time."},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"    public String formatDateTime() {"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"     * Sets the date and time associated with the task."},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"     * @param dateTime The date and time associated with the task."},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"    public void setDateTime(String dateTime) {"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"        this.dateTime \u003d LocalDateTime.parse(dateTime, format);"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"     * Checks if the task has been done."},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"     * @return Status of the task."},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"    public String checkStatus() {"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"        return (isDone ? \"\\u2713\" : \" \");"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"     * Marks the task as done."},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"    public void markAsDone() {"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"        isDone \u003d true;"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"     * Marks the task to be deleted."},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"    public void markToBeDeleted() {"},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"        isMarkedToBeDeleted \u003d true;"},{"lineNumber":67,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":69,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"vivegank"},"content":"     * Formats the Task information to be user-readable."},{"lineNumber":71,"author":{"gitId":"vivegank"},"content":"     * @return User-readable format of the Task object."},{"lineNumber":72,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"vivegank"},"content":"    @Override"},{"lineNumber":74,"author":{"gitId":"vivegank"},"content":"    public String toString() {"},{"lineNumber":75,"author":{"gitId":"vivegank"},"content":"        return \"[\" + checkStatus() + \"] \" + description;"},{"lineNumber":76,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":77}},{"path":"src/main/java/yoda/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.task;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import java.io.Serializable;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import java.util.stream.Collectors;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":" * Specialized list class to handle task-related instructions."},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"public class TaskList implements Serializable {"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"    /** List of tasks created by user */"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"     * Creates a TaskList object."},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"     * @param tasks List of tasks."},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"     * Gets the number of tasks in the list."},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"     * @return Number of tasks in the list."},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"    public int getTaskListSize() {"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"        return tasks.size();"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"     * Gets the list of tasks contained within the TaskList."},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"     * @return List of tasks in the TaskList."},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"    public List\u003cTask\u003e getList() {"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"        return tasks;"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"     * Accesses a task from the list."},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"     * @param taskNumber Index of task in list."},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"     * @return Task requested by user."},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"     * @throws InvalidTaskListIndexException If the index of task requested is invalid."},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"    public Task accessTask(int taskNumber) throws InvalidTaskListIndexException {"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"            return tasks.get(taskNumber - 1);"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"            throw new InvalidTaskListIndexException(\"Exist in the task list, \""},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"                    + \"one of the task numbers does not!\");"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"     * Adds a task to the list."},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"     * @param task Task to be added."},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"    public void addTask(Task task) {"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"        tasks.add(task);"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"     * Marks tasks in the list as done based on the indexes given."},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"     * @param taskNumber Index(es) of tasks in the list."},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"    public void markTaskAsDone(int ... taskNumber) {"},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"        for (int j : taskNumber) {"},{"lineNumber":67,"author":{"gitId":"vivegank"},"content":"            tasks.get(j - 1).markAsDone();"},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":71,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"vivegank"},"content":"     * Marks all the tasks in the list as done."},{"lineNumber":73,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"vivegank"},"content":"    public void markAllTasksAsDone() {"},{"lineNumber":75,"author":{"gitId":"vivegank"},"content":"        for (Task t : tasks) {"},{"lineNumber":76,"author":{"gitId":"vivegank"},"content":"            t.markAsDone();"},{"lineNumber":77,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":80,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"vivegank"},"content":"     * Marks tasks from the list for deletion based on the indexes given."},{"lineNumber":82,"author":{"gitId":"vivegank"},"content":"     * @param taskNumber Index(es) of task in list."},{"lineNumber":83,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"vivegank"},"content":"    public void markTaskToBeDeleted(int ... taskNumber) {"},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"        for (int j : taskNumber) {"},{"lineNumber":86,"author":{"gitId":"vivegank"},"content":"            tasks.get(j - 1).markToBeDeleted();"},{"lineNumber":87,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":90,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"vivegank"},"content":"     * Deletes all tasks in the list which have been marked for deletion."},{"lineNumber":92,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"vivegank"},"content":"    public void deleteMarkedTasks() {"},{"lineNumber":94,"author":{"gitId":"vivegank"},"content":"        for (int i \u003d tasks.size() - 1; i \u003e\u003d 0; i--) {"},{"lineNumber":95,"author":{"gitId":"vivegank"},"content":"            if (tasks.get(i).isMarkedToBeDeleted) {"},{"lineNumber":96,"author":{"gitId":"vivegank"},"content":"                tasks.remove(i);"},{"lineNumber":97,"author":{"gitId":"vivegank"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":101,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"vivegank"},"content":"     * Deletes all tasks in the list."},{"lineNumber":103,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"vivegank"},"content":"    public void deleteAllTasks() {"},{"lineNumber":105,"author":{"gitId":"vivegank"},"content":"        tasks.clear();"},{"lineNumber":106,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":108,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"vivegank"},"content":"     * Gets the number of unfinished tasks left in the list."},{"lineNumber":110,"author":{"gitId":"vivegank"},"content":"     * @return Number of unfinished tasks in the list."},{"lineNumber":111,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"vivegank"},"content":"    public int getNumberOfUnfinishedTasks() {"},{"lineNumber":113,"author":{"gitId":"vivegank"},"content":"        int unfinishedTasks \u003d 0;"},{"lineNumber":114,"author":{"gitId":"vivegank"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":115,"author":{"gitId":"vivegank"},"content":"            if (!tasks.get(i).isDone) {"},{"lineNumber":116,"author":{"gitId":"vivegank"},"content":"                unfinishedTasks++;"},{"lineNumber":117,"author":{"gitId":"vivegank"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"vivegank"},"content":"        return unfinishedTasks;"},{"lineNumber":120,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":122,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"vivegank"},"content":"     * Filters the tasks in the list by the type or keyword requested."},{"lineNumber":124,"author":{"gitId":"vivegank"},"content":"     * @param type Type of task requested."},{"lineNumber":125,"author":{"gitId":"vivegank"},"content":"     * @return TaskList containing tasks of the type requested or tasks with the keyword requested."},{"lineNumber":126,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"vivegank"},"content":"    public TaskList filterByTask(String type) {"},{"lineNumber":128,"author":{"gitId":"vivegank"},"content":"        if (type.equals(\"ToDo\")) {"},{"lineNumber":129,"author":{"gitId":"vivegank"},"content":"            return new TaskList(tasks"},{"lineNumber":130,"author":{"gitId":"vivegank"},"content":"                    .stream()"},{"lineNumber":131,"author":{"gitId":"vivegank"},"content":"                    .filter(p -\u003e p instanceof ToDo)"},{"lineNumber":132,"author":{"gitId":"vivegank"},"content":"                    .collect(Collectors.toList()));"},{"lineNumber":133,"author":{"gitId":"vivegank"},"content":"        } else if (type.equals(\"Deadline\")) {"},{"lineNumber":134,"author":{"gitId":"vivegank"},"content":"            return new TaskList(tasks"},{"lineNumber":135,"author":{"gitId":"vivegank"},"content":"                    .stream()"},{"lineNumber":136,"author":{"gitId":"vivegank"},"content":"                    .filter(p -\u003e p instanceof Deadline)"},{"lineNumber":137,"author":{"gitId":"vivegank"},"content":"                    .collect(Collectors.toList()));"},{"lineNumber":138,"author":{"gitId":"vivegank"},"content":"        } else if (type.equals(\"Event\")) {"},{"lineNumber":139,"author":{"gitId":"vivegank"},"content":"            return new TaskList(tasks"},{"lineNumber":140,"author":{"gitId":"vivegank"},"content":"                    .stream()"},{"lineNumber":141,"author":{"gitId":"vivegank"},"content":"                    .filter(p -\u003e p instanceof Event)"},{"lineNumber":142,"author":{"gitId":"vivegank"},"content":"                    .collect(Collectors.toList()));"},{"lineNumber":143,"author":{"gitId":"vivegank"},"content":"        } else {"},{"lineNumber":144,"author":{"gitId":"vivegank"},"content":"            String formattedType \u003d type.toLowerCase();"},{"lineNumber":145,"author":{"gitId":"vivegank"},"content":"            return new TaskList(tasks"},{"lineNumber":146,"author":{"gitId":"vivegank"},"content":"                    .stream()"},{"lineNumber":147,"author":{"gitId":"vivegank"},"content":"                    .filter(p -\u003e p.toString().toLowerCase().contains(formattedType))"},{"lineNumber":148,"author":{"gitId":"vivegank"},"content":"                    .collect(Collectors.toList()));"},{"lineNumber":149,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":152,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"vivegank"},"content":"     * Formats the TaskList to be readable by the user."},{"lineNumber":154,"author":{"gitId":"vivegank"},"content":"     * @return User-readable format of the TaskList."},{"lineNumber":155,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"vivegank"},"content":"    @Override"},{"lineNumber":157,"author":{"gitId":"vivegank"},"content":"    public String toString() {"},{"lineNumber":158,"author":{"gitId":"vivegank"},"content":"        StringBuilder list \u003d new StringBuilder();"},{"lineNumber":159,"author":{"gitId":"vivegank"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":160,"author":{"gitId":"vivegank"},"content":"            String rank \u003d String.valueOf(i + 1);"},{"lineNumber":161,"author":{"gitId":"vivegank"},"content":"            list.append(rank).append(\".\").append(tasks.get(i));"},{"lineNumber":162,"author":{"gitId":"vivegank"},"content":"            if (i !\u003d tasks.size() - 1) {"},{"lineNumber":163,"author":{"gitId":"vivegank"},"content":"                list.append(\"\\n\");"},{"lineNumber":164,"author":{"gitId":"vivegank"},"content":"            }"},{"lineNumber":165,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"vivegank"},"content":"        return list.toString();"},{"lineNumber":167,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":168}},{"path":"src/main/java/yoda/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.task;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":" * ToDo class that is a specialized version of the Task class and extends the Task class."},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"     * Creates a ToDo object."},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"     * @param description Description of ToDo object."},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"    public ToDo(String description) {"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"     * Formats the ToDo information to be user-readable."},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"     * @return User-readable format of the ToDo object."},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":23}},{"path":"src/main/java/yoda/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.ui;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import javafx.geometry.Pos;"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import javafx.scene.Node;"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"import javafx.scene.control.Label;"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":" * DialogBox class to create dialog boxes to be put in MainWindow."},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"public class DialogBox extends HBox {"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"    private Label dialog;"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"    private ImageView displayPicture;"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"     * Creates a DialogBox object."},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"     * @param text Text in dialog box."},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"     * @param image Image in dialog box."},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"    private DialogBox(String text, Image image) {"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"                    .getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"            fxmlLoader.load();"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"        } catch (IOException e) {"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"            e.printStackTrace();"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"        dialog.setText(text);"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"        displayPicture.setImage(image);"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"    private void flip() {"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"     * Gets user dialog and puts it in a dialog box."},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"     * @param text Text input by user."},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"     * @param image Image of user."},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"     * @return Dialog box containing text input by user and image of user."},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"    public static DialogBox getUserDialog(String text, Image image) {"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"        return new DialogBox(text, image);"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"     * Gets Yoda\u0027s response and puts it in a dialog box."},{"lineNumber":67,"author":{"gitId":"vivegank"},"content":"     * @param text Response given by Yoda."},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":"     * @param image Image of Yoda."},{"lineNumber":69,"author":{"gitId":"vivegank"},"content":"     * @return Dialog box containing Yoda\u0027s response and image of Yoda."},{"lineNumber":70,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"vivegank"},"content":"    public static DialogBox getYodaDialog(String text, Image image) {"},{"lineNumber":72,"author":{"gitId":"vivegank"},"content":"        var db \u003d new DialogBox(text, image);"},{"lineNumber":73,"author":{"gitId":"vivegank"},"content":"        db.flip();"},{"lineNumber":74,"author":{"gitId":"vivegank"},"content":"        return db;"},{"lineNumber":75,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":76}},{"path":"src/main/java/yoda/ui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.ui;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import yoda.Yoda;"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":" * Gui class to start up Yoda\u0027s Gui and set the stage."},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"public class Gui extends Application {"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    /** Yoda object for which a Gui is being created*/"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    private Yoda yoda \u003d new Yoda();"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"     * Starts up the Gui for Yoda."},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"     * @param stage Stage of Gui."},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    public void start(Stage stage) {"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader((Gui.class"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"                    .getResource(\"/view/MainWindow.fxml\")));"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"            Scene scene \u003d new Scene(anchorPane);"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"            stage.setScene(scene);"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setYoda(yoda);"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greetUser();"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"            stage.show();"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"}"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":""}],"authorContributionMap":{"vivegank":39}},{"path":"src/main/java/yoda/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.ui;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import javafx.application.Platform;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"import javafx.util.Duration;"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"import yoda.Yoda;"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":" * MainWindow class which acts as the base for the gui aspects."},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"    private VBox dialogContainer;"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"    private Button sendButton;"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"    private Yoda yoda;"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"    private Image userImage;"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"    private Image yodaImage;"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"     * Initializes the images of user and Yoda and sets up the scroll pane."},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"    public void initialize() {"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"        userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/R2-D2.png\"));"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"        yodaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Yoda.png\"));"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"     * Sets Yoda to MainWindow"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"     * @param yoda Yoda to be set."},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"    public void setYoda(Yoda yoda) {"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"        this.yoda \u003d yoda;"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"     * Greets user upon opening the application."},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"    public void greetUser() {"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"        String greetings \u003d yoda.greetUser();"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"        DialogBox greetingDialogBox \u003d DialogBox.getYodaDialog(greetings, yodaImage);"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"        dialogContainer.getChildren().add(greetingDialogBox);"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"     * Terminates the application if exit command is given."},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"    public void checkTermination(String input) {"},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"            PauseTransition exit \u003d new PauseTransition(Duration.seconds(3));"},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"            exit.setOnFinished(event -\u003e Platform.exit());"},{"lineNumber":67,"author":{"gitId":"vivegank"},"content":"            exit.play();"},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":71,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"vivegank"},"content":"     * Handles user input and exits when user is done."},{"lineNumber":73,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"vivegank"},"content":"    @FXML"},{"lineNumber":75,"author":{"gitId":"vivegank"},"content":"    private void handleUserInput() {"},{"lineNumber":76,"author":{"gitId":"vivegank"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":77,"author":{"gitId":"vivegank"},"content":"        String response \u003d yoda.runYoda(input);"},{"lineNumber":78,"author":{"gitId":"vivegank"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":79,"author":{"gitId":"vivegank"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":80,"author":{"gitId":"vivegank"},"content":"                DialogBox.getYodaDialog(response, yodaImage)"},{"lineNumber":81,"author":{"gitId":"vivegank"},"content":"        );"},{"lineNumber":82,"author":{"gitId":"vivegank"},"content":"        userInput.clear();"},{"lineNumber":83,"author":{"gitId":"vivegank"},"content":"        checkTermination(input);"},{"lineNumber":84,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":85}},{"path":"src/main/java/yoda/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.ui;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import yoda.task.Task;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":" * Ui class to handle interactions with the user."},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":" */"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"    /** Valid inputs that are available to the user */"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"    private static final String HELP_LIST \u003d \"The commands you can use, these are:\\n\""},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"                                          + \"\\n\""},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"                                          + \"To add a task:\\n\""},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"                                          + \"todo [description]\\n\""},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"                                          + \"event [description] /at YYYY-MM-DD HHmm\\n\""},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"                                          + \"deadline [description] /by YYYY-MM-DD HHmm\\n\""},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"                                          + \"\\n\""},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"                                          + \"To list tasks:\\n\""},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"                                          + \"list\\n\""},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"                                          + \"To list by type of task:\\n\""},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"                                          + \"list -t/-e/-d\\n\""},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"                                          + \"\\n\""},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"                                          + \"To find all tasks related to a keyword:\\n\""},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"                                          + \"find [keyword]\\n\""},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"                                          + \"e.g. find book\\n\""},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"                                          + \"\\n\""},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"                                          + \"To mark task(s) as done:\\n\""},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"                                          + \"done [taskNumbers_in_the_list]\\n\""},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"                                          + \"e.g. done 1 3 5\\n\""},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"                                          + \"To mark all tasks as done:\\n\""},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"                                          + \"done all\\n\""},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"                                          + \"\\n\""},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"                                          + \"To delete task(s):\\n\""},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"                                          + \"delete [taskNumbers_in_the_list]\\n\""},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"                                          + \"e.g. delete 1 3 5\\n\""},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"                                          + \"To delete all tasks:\\n\""},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"                                          + \"delete all\\n\""},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"                                          + \"\\n\""},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"                                          + \"To exit:\\n\""},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"                                          + \"bye\";"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"     * Creates a Ui object."},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"    public Ui() {}"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"     * Greets the user when Yoda is started up."},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"     * @return Message showing greetings."},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"    public String greet() {"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"        return \"Greetings, young Padawan!\\n\""},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"               + \"Yoda, my name is!\\n\""},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"               + \"How may I help you, hmm?\\n\""},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"               + \"To get a list of all available commands, type help!\";"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"     * Bids farewell to the user after user is done using Yoda."},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"     * @return Message showing farewell."},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"    public String exit() {"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"        return \"May the force be with you!\\n\""},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"             + \"See you soon, I will!\\n\";"},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"vivegank"},"content":"     * Shows user that they have entered an invalid command."},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":"     * @return Message showing user that an invalid command was entered."},{"lineNumber":69,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"vivegank"},"content":"    public String showError() {"},{"lineNumber":71,"author":{"gitId":"vivegank"},"content":"        return \"The greatest teacher, failure is \\n\""},{"lineNumber":72,"author":{"gitId":"vivegank"},"content":"                + \"Recognise your request, I do not\\n\""},{"lineNumber":73,"author":{"gitId":"vivegank"},"content":"                + \"To get a list of all available commands, use \u0027help\u0027\";"},{"lineNumber":74,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":76,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"vivegank"},"content":"     * Shows the help list which contains all available commands."},{"lineNumber":78,"author":{"gitId":"vivegank"},"content":"     * @return Message showing all available commands."},{"lineNumber":79,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"vivegank"},"content":"    public String showHelp() {"},{"lineNumber":81,"author":{"gitId":"vivegank"},"content":"        return HELP_LIST;"},{"lineNumber":82,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":84,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"     * Shows user that the task entered was added successfully."},{"lineNumber":86,"author":{"gitId":"vivegank"},"content":"     * @param task Task which was added."},{"lineNumber":87,"author":{"gitId":"vivegank"},"content":"     * @return Message showing that the task was added successfully."},{"lineNumber":88,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"vivegank"},"content":"    public String printAddedTask(Task task) {"},{"lineNumber":90,"author":{"gitId":"vivegank"},"content":"        return \"Do or do not. There is no try.\\n\""},{"lineNumber":91,"author":{"gitId":"vivegank"},"content":"                + \"Added this task to the list, I have:\\n\" + task;"},{"lineNumber":92,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":94,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"vivegank"},"content":"     * Shows user that the task(s) they requested for deletion have been successfully deleted."},{"lineNumber":96,"author":{"gitId":"vivegank"},"content":"     * @param deletedTasks Task(s) that were deleted."},{"lineNumber":97,"author":{"gitId":"vivegank"},"content":"     * @param numberOfTasksLeft Number of tasks left in the list."},{"lineNumber":98,"author":{"gitId":"vivegank"},"content":"     * @return Message showing that the task(s) were deleted successfully."},{"lineNumber":99,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"vivegank"},"content":"    public String printDeletedTask(String deletedTasks, int numberOfTasksLeft) {"},{"lineNumber":101,"author":{"gitId":"vivegank"},"content":"        assert numberOfTasksLeft \u003e\u003d 0 : \"numberOfTasksLeft cannot be negative\";"},{"lineNumber":102,"author":{"gitId":"vivegank"},"content":"        return \"Deleted these task(s), I have:\\n\" + deletedTasks"},{"lineNumber":103,"author":{"gitId":"vivegank"},"content":"                + \"\\n\" + numberOfTasksLeft + \" tasks in the list, you have left!\";"},{"lineNumber":104,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":106,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"vivegank"},"content":"     * Shows user that the task(s) they requested to be marked as done have been successfully done so."},{"lineNumber":108,"author":{"gitId":"vivegank"},"content":"     * @param finishedTasks Task(s) that were marked as done."},{"lineNumber":109,"author":{"gitId":"vivegank"},"content":"     * @param numberOfTasksLeft Number of unfinished tasks in the list."},{"lineNumber":110,"author":{"gitId":"vivegank"},"content":"     * @return Message showing that the task(s) were marked as done successfully."},{"lineNumber":111,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"vivegank"},"content":"    public String printFinishedTask(String finishedTasks, int numberOfTasksLeft) {"},{"lineNumber":113,"author":{"gitId":"vivegank"},"content":"        assert numberOfTasksLeft \u003e\u003d 0 : \"numberOfTasksLeft cannot be negative\";"},{"lineNumber":114,"author":{"gitId":"vivegank"},"content":"        return \"Well done my young Padawan!\\n\""},{"lineNumber":115,"author":{"gitId":"vivegank"},"content":"                + \"Marked these task(s) as done, I have:\\n\""},{"lineNumber":116,"author":{"gitId":"vivegank"},"content":"                + finishedTasks"},{"lineNumber":117,"author":{"gitId":"vivegank"},"content":"                + \"\\n\" + numberOfTasksLeft + \" unfinished tasks in the list, you have left!\";"},{"lineNumber":118,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":120,"author":{"gitId":"vivegank"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"vivegank"},"content":"     * Shows user all the tasks that they requested to see based on the filter given."},{"lineNumber":122,"author":{"gitId":"vivegank"},"content":"     * @param identifier Identifier which was used to filter the tasks."},{"lineNumber":123,"author":{"gitId":"vivegank"},"content":"     * @param list List of the tasks that were filtered."},{"lineNumber":124,"author":{"gitId":"vivegank"},"content":"     * @param listSize Number of tasks in the filtered list."},{"lineNumber":125,"author":{"gitId":"vivegank"},"content":"     * @return Message showing the list of tasks the user requested."},{"lineNumber":126,"author":{"gitId":"vivegank"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"vivegank"},"content":"    public String printTasks(String identifier, String list, int listSize) {"},{"lineNumber":128,"author":{"gitId":"vivegank"},"content":"        assert listSize \u003e\u003d 0 : \"listSize cannot be negative\";"},{"lineNumber":129,"author":{"gitId":"vivegank"},"content":"        if (listSize \u003d\u003d 0) {"},{"lineNumber":130,"author":{"gitId":"vivegank"},"content":"            return \"No tasks in the list, there seem to be!\";"},{"lineNumber":131,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"vivegank"},"content":"        switch(identifier) {"},{"lineNumber":133,"author":{"gitId":"vivegank"},"content":"        case \"all\":"},{"lineNumber":134,"author":{"gitId":"vivegank"},"content":"            return \"All the tasks in your list, I present to you!\\n\""},{"lineNumber":135,"author":{"gitId":"vivegank"},"content":"                    + list;"},{"lineNumber":136,"author":{"gitId":"vivegank"},"content":"        case \"find\":"},{"lineNumber":137,"author":{"gitId":"vivegank"},"content":"            return \"The matching tasks in your list, I present to you!\\n\""},{"lineNumber":138,"author":{"gitId":"vivegank"},"content":"                    + list;"},{"lineNumber":139,"author":{"gitId":"vivegank"},"content":"        case \"deadline\":"},{"lineNumber":140,"author":{"gitId":"vivegank"},"content":"            return \"The deadline(s) in your list, I present to you!\\n\""},{"lineNumber":141,"author":{"gitId":"vivegank"},"content":"                    + list;"},{"lineNumber":142,"author":{"gitId":"vivegank"},"content":"        case \"event\":"},{"lineNumber":143,"author":{"gitId":"vivegank"},"content":"            return \"The event(s) in your list, I present to you!\\n\""},{"lineNumber":144,"author":{"gitId":"vivegank"},"content":"                    + list;"},{"lineNumber":145,"author":{"gitId":"vivegank"},"content":"        case \"todo\":"},{"lineNumber":146,"author":{"gitId":"vivegank"},"content":"            return \"The todo(s) in your list, I present to you!\\n\""},{"lineNumber":147,"author":{"gitId":"vivegank"},"content":"                    + list;"},{"lineNumber":148,"author":{"gitId":"vivegank"},"content":"        case \"bad\":"},{"lineNumber":149,"author":{"gitId":"vivegank"},"content":"            return \"To get a specific type of task, use list -d/-t/-e.\\n\""},{"lineNumber":150,"author":{"gitId":"vivegank"},"content":"                    + \"Else, the find request, you can use instead!\";"},{"lineNumber":151,"author":{"gitId":"vivegank"},"content":"        default:"},{"lineNumber":152,"author":{"gitId":"vivegank"},"content":"            return \"The greatest teacher failure is.\";"},{"lineNumber":153,"author":{"gitId":"vivegank"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":155}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"    \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"YELLOW\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"         \u003cfont\u003e"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"            \u003cFont name\u003d\"System Bold\" size\u003d\"13.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"         \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"  \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"  \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"  \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"   \u003copaqueInsets\u003e"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"      \u003cInsets /\u003e"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"   \u003c/opaqueInsets\u003e"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"vivegank":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"yoda.ui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"      \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-image: url(/images/StarryNight.png);\" /\u003e"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"      \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"  \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"vivegank":19}},{"path":"src/test/java/yoda/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.command;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import yoda.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import yoda.task.Event;"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import yoda.task.ToDo;"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"class AddCommandTest {"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    void testMakeToDo() throws InvalidCommandFormatException, InvalidDateTimeFormatException {"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"        String[] toDoArgs \u003d {\"TODO\", \"read\", \"a\", \"book\"};"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"        AddCommand addToDo \u003d new AddCommand(toDoArgs);"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"        ToDo toDo \u003d new ToDo(\"read a book \");"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"        assertEquals(addToDo.makeTask().toString(), toDo.toString());"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"    void testMakeEvent() throws InvalidCommandFormatException, InvalidDateTimeFormatException {"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"        String[] eventArgs \u003d {\"EVENT\", \"attend\", \"meeting\", \"/at\", \"2021-09-09\", \"0900\"};"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"        AddCommand addEvent \u003d new AddCommand(eventArgs);"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"        Event event \u003d new Event(\"attend meeting \", \"2021-09-09 0900\");"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"        assertEquals(addEvent.makeTask().toString(), event.toString());"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"    void testMakeDeadline() throws InvalidCommandFormatException, InvalidDateTimeFormatException {"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"        String[] deadlineArgs \u003d {\"DEADLINE\", \"finish\", \"quiz\", \"/by\", \"2021-09-09\", \"0900\"};"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"        AddCommand addDeadline \u003d new AddCommand(deadlineArgs);"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"        Deadline deadline \u003d new Deadline(\"finish quiz \", \"2021-09-09 0900\");"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"        assertEquals(addDeadline.makeTask().toString(), deadline.toString());"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"    void testCheckDateTime() throws InvalidDateTimeFormatException {"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"        String[] toDoArgs \u003d {\"TODO\", \"read\", \"a\", \"book\"};"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"        AddCommand addToDo \u003d new AddCommand(toDoArgs);"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"        String date \u003d \"2021-10-10\";"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"        String time \u003d \"1300\";"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"        assertEquals(\"2021-10-10 1300\", addToDo.checkDateTime(date, time));"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":44}},{"path":"src/test/java/yoda/command/EditCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.command;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import yoda.task.InvalidTaskListIndexException;"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import yoda.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"import yoda.task.ToDo;"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"class EditCommandTest {"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"    private TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    void testAccessTasksToBeEdited() throws InvalidTaskListIndexException {"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"        ToDo rest \u003d new ToDo(\"have a break\");"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"        ToDo coffee \u003d new ToDo(\"drink coffee\");"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"        ToDo corrections \u003d new ToDo(\"make corrections\");"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(rest);"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(coffee);"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(corrections);"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"        String[] editCommandArgs \u003d {\"DELETE\", \"1\", \"2\"};"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"        EditCommand editCommand \u003d new EditCommand(editCommandArgs);"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"        TaskList editedTasks \u003d editCommand.accessTasksToBeEdited(tasks);"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"        assertEquals(2, editedTasks.getTaskListSize());"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"        assertEquals(3, tasks.getTaskListSize());"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"    void testDeleteTasks() {"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"        ToDo rest \u003d new ToDo(\"have a break\");"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"        ToDo coffee \u003d new ToDo(\"drink coffee\");"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"        ToDo corrections \u003d new ToDo(\"make corrections\");"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(rest);"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(coffee);"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(corrections);"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"        String[] editCommandArgs \u003d {\"DELETE\", \"1\", \"2\"};"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"        EditCommand editCommand \u003d new EditCommand(editCommandArgs);"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"        editCommand.deleteTasks(tasks);"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"        assertEquals(1, tasks.getTaskListSize());"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":"    void testMarkTasksAsDone() {"},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"        ToDo rest \u003d new ToDo(\"have a break\");"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"        ToDo coffee \u003d new ToDo(\"drink coffee\");"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"        ToDo corrections \u003d new ToDo(\"make corrections\");"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(rest);"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(coffee);"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(corrections);"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"        String[] editCommandArgs \u003d {\"DONE\", \"1\", \"2\"};"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"        EditCommand editCommand \u003d new EditCommand(editCommandArgs);"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"        editCommand.markTasksAsDone(tasks);"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"        assertEquals(1, tasks.getNumberOfUnfinishedTasks());"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":58}},{"path":"src/test/java/yoda/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.command;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import yoda.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"import yoda.task.ToDo;"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"class ListCommandTest {"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"    private TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    void testFindByKeyword() throws InvalidKeywordException {"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"        ToDo rest \u003d new ToDo(\"have a break\");"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"        ToDo coffee \u003d new ToDo(\"drink coffee\");"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"        ToDo corrections \u003d new ToDo(\"make corrections\");"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(rest);"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(coffee);"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(corrections);"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"        String[] listCommandArgs \u003d {\"FIND\", \"coffee\"};"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"        ListCommand listCommand \u003d new ListCommand(listCommandArgs);"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"        TaskList filteredList \u003d listCommand.findByKeyword(\"coffee\", tasks);"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"        assertEquals(1, filteredList.getTaskListSize());"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"        assertThrows(InvalidKeywordException.class, () -\u003e listCommand.findByKeyword(\"a\", tasks));"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":30}},{"path":"src/test/java/yoda/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.parser;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"import yoda.command.AddCommand;"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import yoda.command.Command;"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"import yoda.command.EditCommand;"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"import yoda.command.ErrorCommand;"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"import yoda.command.ExitCommand;"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"import yoda.command.HelpCommand;"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"import yoda.command.ListCommand;"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"class ParserTest {"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"    void parseTest() {"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"        Command addCommand \u003d Parser.parse(\"todo read a book\");"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"        Command listCommand \u003d Parser.parse(\"list -t\");"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":"        Command editCommand \u003d Parser.parse(\"delete 0\");"},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"        Command helpCommand \u003d Parser.parse(\"help\");"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"        Command exitCommand \u003d Parser.parse(\"bye\");"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"        Command errorCommand \u003d Parser.parse(\"invalidCommand\");"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"        assertAll(\"Checking if correct type of command is issued\", ()"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"                -\u003e assertTrue(addCommand instanceof AddCommand), ()"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"                -\u003e assertTrue(listCommand instanceof ListCommand), ()"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"                -\u003e assertTrue(editCommand instanceof EditCommand), ()"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"                -\u003e assertTrue(helpCommand instanceof HelpCommand), ()"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"                -\u003e assertTrue(errorCommand instanceof ErrorCommand), ()"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"                -\u003e assertTrue(exitCommand instanceof ExitCommand)"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"        );"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":34}},{"path":"src/test/java/yoda/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.task;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"class DeadlineTest {"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"    public void checkDateTimeFormatter() {"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"        Deadline deadline \u003d new Deadline(\"finish this\", \"2021-10-10 1300\");"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"        assertEquals(\"Oct 10 2021 1300\", deadline.formatDateTime());"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    public void testMarkAsDone() {"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"        ToDo todo \u003d new ToDo(\"Test task\");"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"        todo.markAsDone();"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"        assertTrue(todo.isDone);"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"    public void testMarkToBeDeleted() {"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"        ToDo todo \u003d new ToDo(\"Test task\");"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"        todo.markToBeDeleted();"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"        assertTrue(todo.isMarkedToBeDeleted);"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"    public void testToString() {"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"        Deadline deadline \u003d new Deadline(\"complete that\", \"2021-01-01 1900\");"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":"        assertEquals(\"[D][ ] complete that ---\u003e by Jan 1 2021 1900\", deadline.toString());"},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":34}},{"path":"src/test/java/yoda/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.task;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"class EventTest {"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"    void testToString() {"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"        Event event \u003d new Event(\"attend this\", \"2021-09-05 1500\");"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"        assertEquals(\"[E][ ] attend this ---\u003e at Sep 5 2021 1500\", event.toString());"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":13}},{"path":"src/test/java/yoda/task/InvalidTaskListIndexExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.task;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"class InvalidTaskListIndexExceptionTest {"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"    private TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    void checkIfExceptionIsThrown() {"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":"        ToDo todo \u003d new ToDo(\"Test task\");"},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(todo);"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"        assertThrows(InvalidTaskListIndexException.class, () -\u003e tasks.accessTask(3));"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":19}},{"path":"src/test/java/yoda/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.task;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"class TaskListTest {"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"    private TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":14,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":15,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"vivegank"},"content":"    void testAddTask() throws InvalidTaskListIndexException {"},{"lineNumber":17,"author":{"gitId":"vivegank"},"content":"        ToDo todo \u003d new ToDo(\"have a break\");"},{"lineNumber":18,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(todo);"},{"lineNumber":19,"author":{"gitId":"vivegank"},"content":"        assertEquals(todo, tasks.accessTask(1));"},{"lineNumber":20,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":22,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"vivegank"},"content":"    void testGetTaskListSize() {"},{"lineNumber":24,"author":{"gitId":"vivegank"},"content":"        ToDo rest \u003d new ToDo(\"have a break\");"},{"lineNumber":25,"author":{"gitId":"vivegank"},"content":"        ToDo coffee \u003d new ToDo(\"drink coffee\");"},{"lineNumber":26,"author":{"gitId":"vivegank"},"content":"        ToDo corrections \u003d new ToDo(\"make corrections\");"},{"lineNumber":27,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(rest);"},{"lineNumber":28,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(coffee);"},{"lineNumber":29,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(corrections);"},{"lineNumber":30,"author":{"gitId":"vivegank"},"content":"        assertEquals(3, tasks.getTaskListSize());"},{"lineNumber":31,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":33,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":34,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"vivegank"},"content":"    void testMarkTaskAsDone() throws InvalidTaskListIndexException {"},{"lineNumber":36,"author":{"gitId":"vivegank"},"content":"        ToDo rest \u003d new ToDo(\"have a break\");"},{"lineNumber":37,"author":{"gitId":"vivegank"},"content":"        ToDo coffee \u003d new ToDo(\"drink coffee\");"},{"lineNumber":38,"author":{"gitId":"vivegank"},"content":"        ToDo corrections \u003d new ToDo(\"make corrections\");"},{"lineNumber":39,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(rest);"},{"lineNumber":40,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(coffee);"},{"lineNumber":41,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(corrections);"},{"lineNumber":42,"author":{"gitId":"vivegank"},"content":"        tasks.markTaskAsDone(2, 3);"},{"lineNumber":43,"author":{"gitId":"vivegank"},"content":"        assertTrue(tasks.accessTask(2).isDone);"},{"lineNumber":44,"author":{"gitId":"vivegank"},"content":"        assertTrue(tasks.accessTask(3).isDone);"},{"lineNumber":45,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":47,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"vivegank"},"content":"    void testMarkAllTasksAsDone() throws InvalidTaskListIndexException {"},{"lineNumber":49,"author":{"gitId":"vivegank"},"content":"        ToDo rest \u003d new ToDo(\"have a break\");"},{"lineNumber":50,"author":{"gitId":"vivegank"},"content":"        ToDo coffee \u003d new ToDo(\"drink coffee\");"},{"lineNumber":51,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(rest);"},{"lineNumber":52,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(coffee);"},{"lineNumber":53,"author":{"gitId":"vivegank"},"content":"        tasks.markAllTasksAsDone();"},{"lineNumber":54,"author":{"gitId":"vivegank"},"content":"        assertTrue(tasks.accessTask(1).isDone);"},{"lineNumber":55,"author":{"gitId":"vivegank"},"content":"        assertTrue(tasks.accessTask(2).isDone);"},{"lineNumber":56,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":58,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"vivegank"},"content":"    void testTaskDeletion() throws InvalidTaskListIndexException {"},{"lineNumber":60,"author":{"gitId":"vivegank"},"content":"        ToDo rest \u003d new ToDo(\"have a break\");"},{"lineNumber":61,"author":{"gitId":"vivegank"},"content":"        ToDo coffee \u003d new ToDo(\"drink coffee\");"},{"lineNumber":62,"author":{"gitId":"vivegank"},"content":"        ToDo corrections \u003d new ToDo(\"make corrections\");"},{"lineNumber":63,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(rest);"},{"lineNumber":64,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(coffee);"},{"lineNumber":65,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(corrections);"},{"lineNumber":66,"author":{"gitId":"vivegank"},"content":"        tasks.markTaskToBeDeleted(1, 3);"},{"lineNumber":67,"author":{"gitId":"vivegank"},"content":"        tasks.deleteMarkedTasks();"},{"lineNumber":68,"author":{"gitId":"vivegank"},"content":"        assertEquals(coffee, tasks.accessTask(1));"},{"lineNumber":69,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":71,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":72,"author":{"gitId":"vivegank"},"content":"    void testDeletingAllTasks() {"},{"lineNumber":73,"author":{"gitId":"vivegank"},"content":"        ToDo rest \u003d new ToDo(\"have a break\");"},{"lineNumber":74,"author":{"gitId":"vivegank"},"content":"        ToDo coffee \u003d new ToDo(\"drink coffee\");"},{"lineNumber":75,"author":{"gitId":"vivegank"},"content":"        ToDo corrections \u003d new ToDo(\"make corrections\");"},{"lineNumber":76,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(rest);"},{"lineNumber":77,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(coffee);"},{"lineNumber":78,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(corrections);"},{"lineNumber":79,"author":{"gitId":"vivegank"},"content":"        tasks.deleteAllTasks();"},{"lineNumber":80,"author":{"gitId":"vivegank"},"content":"        assertEquals(0, tasks.getTaskListSize());"},{"lineNumber":81,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":83,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":84,"author":{"gitId":"vivegank"},"content":"    void testGetNumberOfUnfinishedTasks() {"},{"lineNumber":85,"author":{"gitId":"vivegank"},"content":"        ToDo rest \u003d new ToDo(\"have a break\");"},{"lineNumber":86,"author":{"gitId":"vivegank"},"content":"        ToDo coffee \u003d new ToDo(\"drink coffee\");"},{"lineNumber":87,"author":{"gitId":"vivegank"},"content":"        ToDo corrections \u003d new ToDo(\"make corrections\");"},{"lineNumber":88,"author":{"gitId":"vivegank"},"content":"        ToDo read \u003d new ToDo(\"read a book\");"},{"lineNumber":89,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(rest);"},{"lineNumber":90,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(coffee);"},{"lineNumber":91,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(corrections);"},{"lineNumber":92,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(read);"},{"lineNumber":93,"author":{"gitId":"vivegank"},"content":"        tasks.markTaskAsDone(1, 3, 4);"},{"lineNumber":94,"author":{"gitId":"vivegank"},"content":"        assertEquals(1, tasks.getNumberOfUnfinishedTasks());"},{"lineNumber":95,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":97,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":98,"author":{"gitId":"vivegank"},"content":"    void testFilterByTask() {"},{"lineNumber":99,"author":{"gitId":"vivegank"},"content":"        Event event \u003d new Event(\"attend this\", \"2021-09-05 1500\");"},{"lineNumber":100,"author":{"gitId":"vivegank"},"content":"        Event otherEvent \u003d new Event(\"attend that\", \"2021-09-05 1500\");"},{"lineNumber":101,"author":{"gitId":"vivegank"},"content":"        Deadline deadline \u003d new Deadline(\"complete that\", \"2021-01-01 1900\");"},{"lineNumber":102,"author":{"gitId":"vivegank"},"content":"        ToDo coffee \u003d new ToDo(\"drink coffee\");"},{"lineNumber":103,"author":{"gitId":"vivegank"},"content":"        ToDo corrections \u003d new ToDo(\"make corrections\");"},{"lineNumber":104,"author":{"gitId":"vivegank"},"content":"        ToDo read \u003d new ToDo(\"read a book\");"},{"lineNumber":105,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(event);"},{"lineNumber":106,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(otherEvent);"},{"lineNumber":107,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(deadline);"},{"lineNumber":108,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(coffee);"},{"lineNumber":109,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(corrections);"},{"lineNumber":110,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(read);"},{"lineNumber":111,"author":{"gitId":"vivegank"},"content":"        TaskList toDoList \u003d tasks.filterByTask(\"ToDo\");"},{"lineNumber":112,"author":{"gitId":"vivegank"},"content":"        TaskList eventList \u003d tasks.filterByTask(\"Event\");"},{"lineNumber":113,"author":{"gitId":"vivegank"},"content":"        TaskList deadlineList \u003d tasks.filterByTask(\"Deadline\");"},{"lineNumber":114,"author":{"gitId":"vivegank"},"content":"        TaskList filteredList \u003d tasks.filterByTask(\"that\");"},{"lineNumber":115,"author":{"gitId":"vivegank"},"content":"        assertAll(\"Checking if filter works:\", ()"},{"lineNumber":116,"author":{"gitId":"vivegank"},"content":"                -\u003e assertEquals(3, toDoList.getTaskListSize()), ()"},{"lineNumber":117,"author":{"gitId":"vivegank"},"content":"                -\u003e assertEquals(2, eventList.getTaskListSize()), ()"},{"lineNumber":118,"author":{"gitId":"vivegank"},"content":"                -\u003e assertEquals(1, deadlineList.getTaskListSize()), ()"},{"lineNumber":119,"author":{"gitId":"vivegank"},"content":"                -\u003e assertEquals(2, filteredList.getTaskListSize())"},{"lineNumber":120,"author":{"gitId":"vivegank"},"content":"        );"},{"lineNumber":121,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":123,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":124,"author":{"gitId":"vivegank"},"content":"    void testToString() {"},{"lineNumber":125,"author":{"gitId":"vivegank"},"content":"        Event event \u003d new Event(\"attend this\", \"2021-09-05 1500\");"},{"lineNumber":126,"author":{"gitId":"vivegank"},"content":"        ToDo read \u003d new ToDo(\"read a book\");"},{"lineNumber":127,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(event);"},{"lineNumber":128,"author":{"gitId":"vivegank"},"content":"        tasks.addTask(read);"},{"lineNumber":129,"author":{"gitId":"vivegank"},"content":"        String expectedString \u003d \"1.[E][ ] attend this ---\u003e at Sep 5 2021 1500\\n\""},{"lineNumber":130,"author":{"gitId":"vivegank"},"content":"                              + \"2.[T][ ] read a book\";"},{"lineNumber":131,"author":{"gitId":"vivegank"},"content":"        assertEquals(expectedString, tasks.toString());"},{"lineNumber":132,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":133}},{"path":"src/test/java/yoda/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"package yoda.task;"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":""},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"class ToDoTest {"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"    void testToString() {"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"        ToDo todo \u003d new ToDo(\"do that\");"},{"lineNumber":11,"author":{"gitId":"vivegank"},"content":"        assertEquals(todo.toString(), \"[T][ ] do that\");"},{"lineNumber":12,"author":{"gitId":"vivegank"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"vivegank"},"content":"}"}],"authorContributionMap":{"vivegank":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"vivegank"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"vivegank"},"content":"deadline submit assignment /by Monday"},{"lineNumber":3,"author":{"gitId":"vivegank"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"vivegank"},"content":"list"},{"lineNumber":5,"author":{"gitId":"vivegank"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"vivegank"},"content":"deadline do this /by Wednesday"},{"lineNumber":7,"author":{"gitId":"vivegank"},"content":"event attend that /at Sun 3pm"},{"lineNumber":8,"author":{"gitId":"vivegank"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"vivegank"},"content":"list"},{"lineNumber":10,"author":{"gitId":"vivegank"},"content":"done 3"}],"authorContributionMap":{"vivegank":10}}]
