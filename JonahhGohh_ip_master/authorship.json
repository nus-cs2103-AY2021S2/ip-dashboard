[{"path":"src/main/java/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonahhGohh"},"content":"public enum Commands {"},{"lineNumber":2,"author":{"gitId":"JonahhGohh"},"content":"    TODO(\"todo\"), DEADLINE(\"deadline\"),"},{"lineNumber":3,"author":{"gitId":"JonahhGohh"},"content":"    EVENT(\"event\"), DONE(\"done\"),"},{"lineNumber":4,"author":{"gitId":"JonahhGohh"},"content":"    LIST(\"list\"), DELETE(\"delete\"),"},{"lineNumber":5,"author":{"gitId":"JonahhGohh"},"content":"    HELP(\"help\"), BYE(\"bye\"),"},{"lineNumber":6,"author":{"gitId":"JonahhGohh"},"content":"    INVALID_COMMAND(null);"},{"lineNumber":7,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":8,"author":{"gitId":"JonahhGohh"},"content":"    private String commandString;"},{"lineNumber":9,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":10,"author":{"gitId":"JonahhGohh"},"content":"    private Commands (String commandString) {"},{"lineNumber":11,"author":{"gitId":"JonahhGohh"},"content":"        this.commandString \u003d commandString;"},{"lineNumber":12,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":14,"author":{"gitId":"JonahhGohh"},"content":"    public String getCommandStr() {"},{"lineNumber":15,"author":{"gitId":"JonahhGohh"},"content":"        return this.commandString;"},{"lineNumber":16,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":18,"author":{"gitId":"JonahhGohh"},"content":"    public static Commands get(String str) {"},{"lineNumber":19,"author":{"gitId":"JonahhGohh"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"JonahhGohh"},"content":"            Commands command \u003d Commands.valueOf(commandsToUpperCase(str));"},{"lineNumber":21,"author":{"gitId":"JonahhGohh"},"content":"            return command;"},{"lineNumber":22,"author":{"gitId":"JonahhGohh"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":23,"author":{"gitId":"JonahhGohh"},"content":"            return INVALID_COMMAND;"},{"lineNumber":24,"author":{"gitId":"JonahhGohh"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":26,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":28,"author":{"gitId":"JonahhGohh"},"content":"    private static String commandsToUpperCase(String command) {"},{"lineNumber":29,"author":{"gitId":"JonahhGohh"},"content":"        return command.toUpperCase();"},{"lineNumber":30,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"JonahhGohh"},"content":"}"}],"authorContributionMap":{"JonahhGohh":31}},{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonahhGohh"},"content":"public class Deadlines extends Task {"},{"lineNumber":2,"author":{"gitId":"JonahhGohh"},"content":"    private String dueBy;"},{"lineNumber":3,"author":{"gitId":"JonahhGohh"},"content":"    private static final String DUE_COMMAND \u003d \"/by\";"},{"lineNumber":4,"author":{"gitId":"JonahhGohh"},"content":"    public Deadlines(String input) throws EmptyTaskDukeException {"},{"lineNumber":5,"author":{"gitId":"JonahhGohh"},"content":"        super(getTaskNameFromInput(input));"},{"lineNumber":6,"author":{"gitId":"JonahhGohh"},"content":"        dueBy \u003d getDueDateFromInput(input);"},{"lineNumber":7,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":9,"author":{"gitId":"JonahhGohh"},"content":"    private static String getTaskNameFromInput(String input) {"},{"lineNumber":10,"author":{"gitId":"JonahhGohh"},"content":"        if (input.contains(DUE_COMMAND)) {"},{"lineNumber":11,"author":{"gitId":"JonahhGohh"},"content":"            return input.split(DUE_COMMAND)[0];"},{"lineNumber":12,"author":{"gitId":"JonahhGohh"},"content":"        } else {"},{"lineNumber":13,"author":{"gitId":"JonahhGohh"},"content":"            return input;"},{"lineNumber":14,"author":{"gitId":"JonahhGohh"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":17,"author":{"gitId":"JonahhGohh"},"content":"    private static String getDueDateFromInput(String input) {"},{"lineNumber":18,"author":{"gitId":"JonahhGohh"},"content":"        if (input.contains(DUE_COMMAND)) {"},{"lineNumber":19,"author":{"gitId":"JonahhGohh"},"content":"            return removeStartingWhiteSpace(input.split(DUE_COMMAND)[1]);"},{"lineNumber":20,"author":{"gitId":"JonahhGohh"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"JonahhGohh"},"content":"            return \"not specified\";"},{"lineNumber":22,"author":{"gitId":"JonahhGohh"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":25,"author":{"gitId":"JonahhGohh"},"content":"    private static String removeStartingWhiteSpace(String input) {"},{"lineNumber":26,"author":{"gitId":"JonahhGohh"},"content":"        if (input.substring(0, 1).equals(\" \")) {"},{"lineNumber":27,"author":{"gitId":"JonahhGohh"},"content":"            return input.substring(1);"},{"lineNumber":28,"author":{"gitId":"JonahhGohh"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"JonahhGohh"},"content":"        return input;"},{"lineNumber":30,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":32,"author":{"gitId":"JonahhGohh"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"JonahhGohh"},"content":"    public String setDone() {"},{"lineNumber":34,"author":{"gitId":"JonahhGohh"},"content":"        super.setTaskCompleted();"},{"lineNumber":35,"author":{"gitId":"JonahhGohh"},"content":"        return \"Nice! I\u0027ve marked this deadline as done:\\n\" +"},{"lineNumber":36,"author":{"gitId":"JonahhGohh"},"content":"                toString();"},{"lineNumber":37,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":39,"author":{"gitId":"JonahhGohh"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"JonahhGohh"},"content":"    public String toString() {"},{"lineNumber":41,"author":{"gitId":"JonahhGohh"},"content":"        String taskStringCheck \u003d super.getIsTaskCompleted() ? \"X\" : \" \";"},{"lineNumber":42,"author":{"gitId":"JonahhGohh"},"content":"        return \"[D]\" + \"[\" + taskStringCheck + \"] \" + super.getTaskName() +"},{"lineNumber":43,"author":{"gitId":"JonahhGohh"},"content":"                \"(by: \" + (dueBy.equals(null) ? \"not specified\" : dueBy) +  \")\";"},{"lineNumber":44,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"JonahhGohh"},"content":"}"}],"authorContributionMap":{"JonahhGohh":45}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonahhGohh"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"JonahhGohh"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"JonahhGohh"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"JonahhGohh"},"content":"        // Start up greeting message"},{"lineNumber":8,"author":{"gitId":"JonahhGohh"},"content":"        String greetingMessage \u003d \"Hello! I\u0027m a Chat bot and my name \" +"},{"lineNumber":9,"author":{"gitId":"JonahhGohh"},"content":"                \"is Joe\" + \"\\nHow may I help you?\";"},{"lineNumber":10,"author":{"gitId":"JonahhGohh"},"content":"        System.out.println(formatMessage(greetingMessage));"},{"lineNumber":11,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":12,"author":{"gitId":"JonahhGohh"},"content":"        // Task list"},{"lineNumber":13,"author":{"gitId":"JonahhGohh"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"JonahhGohh"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":15,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":16,"author":{"gitId":"JonahhGohh"},"content":"        boolean isChatBotOnline \u003d true;"},{"lineNumber":17,"author":{"gitId":"JonahhGohh"},"content":"        while (isChatBotOnline) {"},{"lineNumber":18,"author":{"gitId":"JonahhGohh"},"content":"            // Listen to input"},{"lineNumber":19,"author":{"gitId":"JonahhGohh"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":20,"author":{"gitId":"JonahhGohh"},"content":"            String inputCommand \u003d formatCommand(input);"},{"lineNumber":21,"author":{"gitId":"JonahhGohh"},"content":"            Commands command \u003d Commands.get(inputCommand);"},{"lineNumber":22,"author":{"gitId":"JonahhGohh"},"content":"            String additionalText \u003d formatCommandText(input);"},{"lineNumber":23,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":24,"author":{"gitId":"JonahhGohh"},"content":"            // Echoing the input"},{"lineNumber":25,"author":{"gitId":"JonahhGohh"},"content":"            switch (command) {"},{"lineNumber":26,"author":{"gitId":"JonahhGohh"},"content":"                case TODO:"},{"lineNumber":27,"author":{"gitId":"JonahhGohh"},"content":"                    try {"},{"lineNumber":28,"author":{"gitId":"JonahhGohh"},"content":"                        Todos todos \u003d new Todos(additionalText);"},{"lineNumber":29,"author":{"gitId":"JonahhGohh"},"content":"                        taskList.add(todos);"},{"lineNumber":30,"author":{"gitId":"JonahhGohh"},"content":"                        printTaskAddedMessage(todos);"},{"lineNumber":31,"author":{"gitId":"JonahhGohh"},"content":"                    } catch (EmptyTaskDukeException e) {"},{"lineNumber":32,"author":{"gitId":"JonahhGohh"},"content":"                        System.out.println(formatMessage(e + \"\"));"},{"lineNumber":33,"author":{"gitId":"JonahhGohh"},"content":"                    }"},{"lineNumber":34,"author":{"gitId":"JonahhGohh"},"content":"                    break;"},{"lineNumber":35,"author":{"gitId":"JonahhGohh"},"content":"                case DEADLINE:"},{"lineNumber":36,"author":{"gitId":"JonahhGohh"},"content":"                    try {"},{"lineNumber":37,"author":{"gitId":"JonahhGohh"},"content":"                        Deadlines deadlines \u003d new Deadlines(additionalText);"},{"lineNumber":38,"author":{"gitId":"JonahhGohh"},"content":"                        taskList.add(deadlines);"},{"lineNumber":39,"author":{"gitId":"JonahhGohh"},"content":"                        printTaskAddedMessage(deadlines);"},{"lineNumber":40,"author":{"gitId":"JonahhGohh"},"content":"                    } catch (EmptyTaskDukeException e) {"},{"lineNumber":41,"author":{"gitId":"JonahhGohh"},"content":"                        System.out.println(formatMessage(e + \"\"));"},{"lineNumber":42,"author":{"gitId":"JonahhGohh"},"content":"                    }"},{"lineNumber":43,"author":{"gitId":"JonahhGohh"},"content":"                    break;"},{"lineNumber":44,"author":{"gitId":"JonahhGohh"},"content":"                case EVENT:"},{"lineNumber":45,"author":{"gitId":"JonahhGohh"},"content":"                    try {"},{"lineNumber":46,"author":{"gitId":"JonahhGohh"},"content":"                        Events events \u003d new Events(additionalText);"},{"lineNumber":47,"author":{"gitId":"JonahhGohh"},"content":"                        taskList.add(events);"},{"lineNumber":48,"author":{"gitId":"JonahhGohh"},"content":"                        printTaskAddedMessage(events);"},{"lineNumber":49,"author":{"gitId":"JonahhGohh"},"content":"                    } catch (EmptyTaskDukeException e) {"},{"lineNumber":50,"author":{"gitId":"JonahhGohh"},"content":"                        System.out.println(formatMessage(e + \"\"));"},{"lineNumber":51,"author":{"gitId":"JonahhGohh"},"content":"                    }"},{"lineNumber":52,"author":{"gitId":"JonahhGohh"},"content":"                    break;"},{"lineNumber":53,"author":{"gitId":"JonahhGohh"},"content":"                case LIST:"},{"lineNumber":54,"author":{"gitId":"JonahhGohh"},"content":"                    System.out.println(formatMessage(getTaskListString(taskList)));"},{"lineNumber":55,"author":{"gitId":"JonahhGohh"},"content":"                    break;"},{"lineNumber":56,"author":{"gitId":"JonahhGohh"},"content":"                case DONE:"},{"lineNumber":57,"author":{"gitId":"JonahhGohh"},"content":"                    try {"},{"lineNumber":58,"author":{"gitId":"JonahhGohh"},"content":"                        int taskNumber \u003d Integer.parseInt(additionalText);"},{"lineNumber":59,"author":{"gitId":"JonahhGohh"},"content":"                        int arrayNumber \u003d taskNumber - 1;"},{"lineNumber":60,"author":{"gitId":"JonahhGohh"},"content":"                        Task task \u003d taskList.get(arrayNumber);"},{"lineNumber":61,"author":{"gitId":"JonahhGohh"},"content":"                        String doneMessage \u003d task.setDone();"},{"lineNumber":62,"author":{"gitId":"JonahhGohh"},"content":"                        System.out.println(formatMessage(doneMessage));"},{"lineNumber":63,"author":{"gitId":"JonahhGohh"},"content":"                    } catch (NumberFormatException e) {"},{"lineNumber":64,"author":{"gitId":"JonahhGohh"},"content":"                        System.out.println(formatMessage(e +"},{"lineNumber":65,"author":{"gitId":"JonahhGohh"},"content":"                                \"\\nError! Invalid task number.\" +"},{"lineNumber":66,"author":{"gitId":"JonahhGohh"},"content":"                                \"\\nPlease input a valid task number!\"));"},{"lineNumber":67,"author":{"gitId":"JonahhGohh"},"content":"                    } catch (IndexOutOfBoundsException e) {"},{"lineNumber":68,"author":{"gitId":"JonahhGohh"},"content":"                        System.out.println(e +"},{"lineNumber":69,"author":{"gitId":"JonahhGohh"},"content":"                                \"\\nError! Task number does not exist.\" +"},{"lineNumber":70,"author":{"gitId":"JonahhGohh"},"content":"                                \"\\nPlease input a valid task number!\");"},{"lineNumber":71,"author":{"gitId":"JonahhGohh"},"content":"                    }"},{"lineNumber":72,"author":{"gitId":"JonahhGohh"},"content":"                    break;"},{"lineNumber":73,"author":{"gitId":"JonahhGohh"},"content":"                case DELETE:"},{"lineNumber":74,"author":{"gitId":"JonahhGohh"},"content":"                    try {"},{"lineNumber":75,"author":{"gitId":"JonahhGohh"},"content":"                        int taskNumber \u003d Integer.parseInt(additionalText);"},{"lineNumber":76,"author":{"gitId":"JonahhGohh"},"content":"                        int arrayNumber \u003d taskNumber - 1;"},{"lineNumber":77,"author":{"gitId":"JonahhGohh"},"content":"                        Task task \u003d taskList.get(arrayNumber);"},{"lineNumber":78,"author":{"gitId":"JonahhGohh"},"content":"                        taskList.remove(arrayNumber);"},{"lineNumber":79,"author":{"gitId":"JonahhGohh"},"content":"                        System.out.println(formatMessage(\"The following task has been removed:\\n\" +"},{"lineNumber":80,"author":{"gitId":"JonahhGohh"},"content":"                                task + \"\\n\" + Task.getNumOfTasksString()));"},{"lineNumber":81,"author":{"gitId":"JonahhGohh"},"content":"                    } catch (NumberFormatException e) {"},{"lineNumber":82,"author":{"gitId":"JonahhGohh"},"content":"                        System.out.println(formatMessage(e +"},{"lineNumber":83,"author":{"gitId":"JonahhGohh"},"content":"                                \"\\nError! Invalid task number.\" +"},{"lineNumber":84,"author":{"gitId":"JonahhGohh"},"content":"                                \"\\nPlease input a valid task number!\"));"},{"lineNumber":85,"author":{"gitId":"JonahhGohh"},"content":"                    } catch (IndexOutOfBoundsException e) {"},{"lineNumber":86,"author":{"gitId":"JonahhGohh"},"content":"                        System.out.println(e +"},{"lineNumber":87,"author":{"gitId":"JonahhGohh"},"content":"                                \"\\nError! Task number does not exist.\" +"},{"lineNumber":88,"author":{"gitId":"JonahhGohh"},"content":"                                \"\\nPlease input a valid task number!\");"},{"lineNumber":89,"author":{"gitId":"JonahhGohh"},"content":"                    }"},{"lineNumber":90,"author":{"gitId":"JonahhGohh"},"content":"                    break;"},{"lineNumber":91,"author":{"gitId":"JonahhGohh"},"content":"                case HELP:"},{"lineNumber":92,"author":{"gitId":"JonahhGohh"},"content":"                    String allCommands \u003d \"todo\\n\" +"},{"lineNumber":93,"author":{"gitId":"JonahhGohh"},"content":"                            \"deadline *text* /by *date*\\n\" +"},{"lineNumber":94,"author":{"gitId":"JonahhGohh"},"content":"                            \"event *text* /at *text*\\n\" +"},{"lineNumber":95,"author":{"gitId":"JonahhGohh"},"content":"                            \"done *number*\\n\" +"},{"lineNumber":96,"author":{"gitId":"JonahhGohh"},"content":"                            \"list\\n\" +"},{"lineNumber":97,"author":{"gitId":"JonahhGohh"},"content":"                            \"delete *number*\\n\" +"},{"lineNumber":98,"author":{"gitId":"JonahhGohh"},"content":"                            \"bye\";"},{"lineNumber":99,"author":{"gitId":"JonahhGohh"},"content":"                    System.out.println(formatMessage(allCommands));"},{"lineNumber":100,"author":{"gitId":"JonahhGohh"},"content":"                    break;"},{"lineNumber":101,"author":{"gitId":"JonahhGohh"},"content":"                case BYE:"},{"lineNumber":102,"author":{"gitId":"JonahhGohh"},"content":"                    String byeMessage \u003d \"Goodbye, hope you had a great time!\";"},{"lineNumber":103,"author":{"gitId":"JonahhGohh"},"content":"                    System.out.println(formatMessage(byeMessage));"},{"lineNumber":104,"author":{"gitId":"JonahhGohh"},"content":"                    isChatBotOnline \u003d false;"},{"lineNumber":105,"author":{"gitId":"JonahhGohh"},"content":"                    break;"},{"lineNumber":106,"author":{"gitId":"JonahhGohh"},"content":"                default:"},{"lineNumber":107,"author":{"gitId":"JonahhGohh"},"content":"                    System.out.println(formatMessage(\"Please enter a valid command! \\n\" +"},{"lineNumber":108,"author":{"gitId":"JonahhGohh"},"content":"                            \"Type help for a list of commands\"));"},{"lineNumber":109,"author":{"gitId":"JonahhGohh"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"JonahhGohh"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"JonahhGohh"},"content":"        sc.close();"},{"lineNumber":112,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":114,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":115,"author":{"gitId":"JonahhGohh"},"content":"    static String formatMessage(String str) {"},{"lineNumber":116,"author":{"gitId":"JonahhGohh"},"content":"        return \"____________________________________________________________\" +"},{"lineNumber":117,"author":{"gitId":"JonahhGohh"},"content":"                \"\\n\" + str + \"\\n\" +"},{"lineNumber":118,"author":{"gitId":"JonahhGohh"},"content":"                \"____________________________________________________________\\n\";"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":121,"author":{"gitId":"JonahhGohh"},"content":"    // prints all of the tasks in the taskList"},{"lineNumber":122,"author":{"gitId":"JonahhGohh"},"content":"    static String getTaskListString(List\u003cTask\u003e taskList) {"},{"lineNumber":123,"author":{"gitId":"JonahhGohh"},"content":"        String taskListString \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":124,"author":{"gitId":"JonahhGohh"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":125,"author":{"gitId":"JonahhGohh"},"content":"            String taskString \u003d (i + 1) + \". \" + taskList.get(i);"},{"lineNumber":126,"author":{"gitId":"JonahhGohh"},"content":"            taskListString \u003d taskListString + taskString +"},{"lineNumber":127,"author":{"gitId":"JonahhGohh"},"content":"                    (i \u003d\u003d taskList.size() - 1 ? \"\" : \"\\n\");"},{"lineNumber":128,"author":{"gitId":"JonahhGohh"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"JonahhGohh"},"content":"        return taskListString;"},{"lineNumber":130,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":132,"author":{"gitId":"JonahhGohh"},"content":"    // extracts the command from the input"},{"lineNumber":133,"author":{"gitId":"JonahhGohh"},"content":"    static String formatCommand(String input) {"},{"lineNumber":134,"author":{"gitId":"JonahhGohh"},"content":"        return input.split(\" \")[0];"},{"lineNumber":135,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":137,"author":{"gitId":"JonahhGohh"},"content":"    // extracts the additional text after the command from the input"},{"lineNumber":138,"author":{"gitId":"JonahhGohh"},"content":"    static String formatCommandText(String input) {"},{"lineNumber":139,"author":{"gitId":"JonahhGohh"},"content":"        if (input.split(\" \").length \u003d\u003d 1) {"},{"lineNumber":140,"author":{"gitId":"JonahhGohh"},"content":"            return \"\";"},{"lineNumber":141,"author":{"gitId":"JonahhGohh"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"JonahhGohh"},"content":"        return input.substring(formatCommand(input).length() + 1);"},{"lineNumber":143,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":145,"author":{"gitId":"JonahhGohh"},"content":"    static void printTaskAddedMessage(Task task) {"},{"lineNumber":146,"author":{"gitId":"JonahhGohh"},"content":"        System.out.println(formatMessage(\"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":147,"author":{"gitId":"JonahhGohh"},"content":"                + task + \"\\n\" + Task.getNumOfTasksString()));"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"JonahhGohh":144,"-":5}},{"path":"src/main/java/EmptyTaskDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonahhGohh"},"content":"public class EmptyTaskDukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"JonahhGohh"},"content":"    public EmptyTaskDukeException() {"},{"lineNumber":3,"author":{"gitId":"JonahhGohh"},"content":"        super(\"Description of a task cannot be empty!\\n\" +"},{"lineNumber":4,"author":{"gitId":"JonahhGohh"},"content":"                \"Please enter a valid input.\");"},{"lineNumber":5,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"JonahhGohh"},"content":"}"}],"authorContributionMap":{"JonahhGohh":6}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonahhGohh"},"content":"public class Events extends Task {"},{"lineNumber":2,"author":{"gitId":"JonahhGohh"},"content":"    private String dueAt;"},{"lineNumber":3,"author":{"gitId":"JonahhGohh"},"content":"    private static final String DUE_COMMAND \u003d \"/at\";"},{"lineNumber":4,"author":{"gitId":"JonahhGohh"},"content":"    public Events(String input) throws EmptyTaskDukeException {"},{"lineNumber":5,"author":{"gitId":"JonahhGohh"},"content":"        super(getTaskNameFromInput(input));"},{"lineNumber":6,"author":{"gitId":"JonahhGohh"},"content":"        dueAt \u003d getDueDateFromInput(input);"},{"lineNumber":7,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":9,"author":{"gitId":"JonahhGohh"},"content":"    private static String getTaskNameFromInput(String input) {"},{"lineNumber":10,"author":{"gitId":"JonahhGohh"},"content":"        if (input.contains(DUE_COMMAND)) {"},{"lineNumber":11,"author":{"gitId":"JonahhGohh"},"content":"            return input.split(DUE_COMMAND)[0];"},{"lineNumber":12,"author":{"gitId":"JonahhGohh"},"content":"        } else {"},{"lineNumber":13,"author":{"gitId":"JonahhGohh"},"content":"            return input;"},{"lineNumber":14,"author":{"gitId":"JonahhGohh"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":17,"author":{"gitId":"JonahhGohh"},"content":"    private static String getDueDateFromInput(String input) {"},{"lineNumber":18,"author":{"gitId":"JonahhGohh"},"content":"        if (input.contains(DUE_COMMAND)) {"},{"lineNumber":19,"author":{"gitId":"JonahhGohh"},"content":"            return removeStartingWhiteSpace(input.split(DUE_COMMAND)[1]);"},{"lineNumber":20,"author":{"gitId":"JonahhGohh"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"JonahhGohh"},"content":"            return \"not specified\";"},{"lineNumber":22,"author":{"gitId":"JonahhGohh"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":25,"author":{"gitId":"JonahhGohh"},"content":"    private static String removeStartingWhiteSpace(String input) {"},{"lineNumber":26,"author":{"gitId":"JonahhGohh"},"content":"        if (input.substring(0, 1).equals(\" \")) {"},{"lineNumber":27,"author":{"gitId":"JonahhGohh"},"content":"            return input.substring(1);"},{"lineNumber":28,"author":{"gitId":"JonahhGohh"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"JonahhGohh"},"content":"        return input;"},{"lineNumber":30,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":32,"author":{"gitId":"JonahhGohh"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"JonahhGohh"},"content":"    public String setDone() {"},{"lineNumber":34,"author":{"gitId":"JonahhGohh"},"content":"        super.setTaskCompleted();"},{"lineNumber":35,"author":{"gitId":"JonahhGohh"},"content":"        return \"Nice! I\u0027ve marked this event as done:\\n\" +"},{"lineNumber":36,"author":{"gitId":"JonahhGohh"},"content":"                toString();"},{"lineNumber":37,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":39,"author":{"gitId":"JonahhGohh"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"JonahhGohh"},"content":"    public String toString() {"},{"lineNumber":41,"author":{"gitId":"JonahhGohh"},"content":"        String taskStringCheck \u003d super.getIsTaskCompleted() ? \"X\" : \" \";"},{"lineNumber":42,"author":{"gitId":"JonahhGohh"},"content":"        return \"[E]\" + \"[\" + taskStringCheck + \"] \" + super.getTaskName() +"},{"lineNumber":43,"author":{"gitId":"JonahhGohh"},"content":"                \"(at: \" + (dueAt.equals(null) ? \"not specified\" : dueAt) +  \")\";"},{"lineNumber":44,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"JonahhGohh"},"content":"}"}],"authorContributionMap":{"JonahhGohh":45}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonahhGohh"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"JonahhGohh"},"content":"    private static int numOfTasks;"},{"lineNumber":3,"author":{"gitId":"JonahhGohh"},"content":"    private String taskName;"},{"lineNumber":4,"author":{"gitId":"JonahhGohh"},"content":"    private boolean isTaskCompleted;"},{"lineNumber":5,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":6,"author":{"gitId":"JonahhGohh"},"content":"    public Task(String input) throws EmptyTaskDukeException {"},{"lineNumber":7,"author":{"gitId":"JonahhGohh"},"content":"        if (input.replaceAll(\"\\\\s+\",\"\").equals(\"\")) {"},{"lineNumber":8,"author":{"gitId":"JonahhGohh"},"content":"            throw new EmptyTaskDukeException();"},{"lineNumber":9,"author":{"gitId":"JonahhGohh"},"content":"        } else {"},{"lineNumber":10,"author":{"gitId":"JonahhGohh"},"content":"            this.taskName \u003d input;"},{"lineNumber":11,"author":{"gitId":"JonahhGohh"},"content":"            isTaskCompleted \u003d false;"},{"lineNumber":12,"author":{"gitId":"JonahhGohh"},"content":"            numOfTasks++;"},{"lineNumber":13,"author":{"gitId":"JonahhGohh"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":16,"author":{"gitId":"JonahhGohh"},"content":"    public String setDone() {"},{"lineNumber":17,"author":{"gitId":"JonahhGohh"},"content":"        setTaskCompleted();"},{"lineNumber":18,"author":{"gitId":"JonahhGohh"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" +"},{"lineNumber":19,"author":{"gitId":"JonahhGohh"},"content":"                toString();"},{"lineNumber":20,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":22,"author":{"gitId":"JonahhGohh"},"content":"    public void setTaskCompleted() {"},{"lineNumber":23,"author":{"gitId":"JonahhGohh"},"content":"        isTaskCompleted \u003d true;"},{"lineNumber":24,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":26,"author":{"gitId":"JonahhGohh"},"content":"    public boolean getIsTaskCompleted() {"},{"lineNumber":27,"author":{"gitId":"JonahhGohh"},"content":"        return isTaskCompleted;"},{"lineNumber":28,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":30,"author":{"gitId":"JonahhGohh"},"content":"    public String getTaskName() {"},{"lineNumber":31,"author":{"gitId":"JonahhGohh"},"content":"        return taskName;"},{"lineNumber":32,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":34,"author":{"gitId":"JonahhGohh"},"content":"    private static int getNumOfTasks() {"},{"lineNumber":35,"author":{"gitId":"JonahhGohh"},"content":"        return numOfTasks;"},{"lineNumber":36,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":38,"author":{"gitId":"JonahhGohh"},"content":"    public static String getNumOfTasksString() {"},{"lineNumber":39,"author":{"gitId":"JonahhGohh"},"content":"        return \"Now you have \" + getNumOfTasks() +"},{"lineNumber":40,"author":{"gitId":"JonahhGohh"},"content":"                (getNumOfTasks() \u003d\u003d 1 ? \" task\" : \" tasks\") +"},{"lineNumber":41,"author":{"gitId":"JonahhGohh"},"content":"                \" in the list.\";"},{"lineNumber":42,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":43,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"JonahhGohh"},"content":"}"}],"authorContributionMap":{"JonahhGohh":44}},{"path":"src/main/java/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonahhGohh"},"content":"public class Todos extends Task {"},{"lineNumber":2,"author":{"gitId":"JonahhGohh"},"content":"    public Todos(String input) throws EmptyTaskDukeException {"},{"lineNumber":3,"author":{"gitId":"JonahhGohh"},"content":"        super(input);"},{"lineNumber":4,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":6,"author":{"gitId":"JonahhGohh"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"JonahhGohh"},"content":"    public String setDone() {"},{"lineNumber":8,"author":{"gitId":"JonahhGohh"},"content":"        super.setTaskCompleted();"},{"lineNumber":9,"author":{"gitId":"JonahhGohh"},"content":"        return \"Nice! I\u0027ve marked this todo as done:\\n\" +"},{"lineNumber":10,"author":{"gitId":"JonahhGohh"},"content":"                toString();"},{"lineNumber":11,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":13,"author":{"gitId":"JonahhGohh"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"JonahhGohh"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"JonahhGohh"},"content":"        String taskStringCheck \u003d super.getIsTaskCompleted() ? \"X\" : \" \";"},{"lineNumber":16,"author":{"gitId":"JonahhGohh"},"content":"        return \"[T]\" + \"[\" + taskStringCheck + \"] \" + super.getTaskName();"},{"lineNumber":17,"author":{"gitId":"JonahhGohh"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JonahhGohh"},"content":"}"}],"authorContributionMap":{"JonahhGohh":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JonahhGohh"},"content":"todo do homework"},{"lineNumber":2,"author":{"gitId":"JonahhGohh"},"content":"event eat with friends /at Sat 2-4pm"},{"lineNumber":3,"author":{"gitId":"JonahhGohh"},"content":"deadline 3230 assignment /by Sun 12am"},{"lineNumber":4,"author":{"gitId":"JonahhGohh"},"content":"event play games with friends"},{"lineNumber":5,"author":{"gitId":"JonahhGohh"},"content":"list"},{"lineNumber":6,"author":{"gitId":"JonahhGohh"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"JonahhGohh"},"content":"delete 2"},{"lineNumber":8,"author":{"gitId":"JonahhGohh"},"content":"bye"}],"authorContributionMap":{"JonahhGohh":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"JonahhGohh"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"JonahhGohh"},"content":"FC ACTUAL.TXT EXPECTED.TXT /W"}],"authorContributionMap":{"JonahhGohh":2,"-":19}}]
