[{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictBCJJ"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":3,"author":{"gitId":"BenedictBCJJ"},"content":"public enum Command {"},{"lineNumber":4,"author":{"gitId":"BenedictBCJJ"},"content":"    BYE, LIST, DONE, DELETE, TODO, DEADLINE, EVENT, NONE, FIND"},{"lineNumber":5,"author":{"gitId":"BenedictBCJJ"},"content":"}"}],"authorContributionMap":{"BenedictBCJJ":5}},{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictBCJJ"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":3,"author":{"gitId":"BenedictBCJJ"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"BenedictBCJJ"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":6,"author":{"gitId":"BenedictBCJJ"},"content":"public class Deadlines extends Task {"},{"lineNumber":7,"author":{"gitId":"BenedictBCJJ"},"content":"    private LocalDate deadlineTime;"},{"lineNumber":8,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":9,"author":{"gitId":"BenedictBCJJ"},"content":"    public Deadlines(String description, LocalDate deadlineTime) {"},{"lineNumber":10,"author":{"gitId":"BenedictBCJJ"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"BenedictBCJJ"},"content":"        this.deadlineTime \u003d deadlineTime;"},{"lineNumber":12,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":14,"author":{"gitId":"BenedictBCJJ"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"BenedictBCJJ"},"content":"    public String getStatus() {"},{"lineNumber":16,"author":{"gitId":"BenedictBCJJ"},"content":"        return \"[D]\" + super.getStatus() + \"(by: \" + this.deadlineTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":17,"author":{"gitId":"BenedictBCJJ"},"content":"                + \")\";"},{"lineNumber":18,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":20,"author":{"gitId":"BenedictBCJJ"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"BenedictBCJJ"},"content":"    public String saveStatus() {"},{"lineNumber":22,"author":{"gitId":"BenedictBCJJ"},"content":"        return \"D\" + super.saveStatus();"},{"lineNumber":23,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"BenedictBCJJ"},"content":"}"}],"authorContributionMap":{"BenedictBCJJ":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictBCJJ"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":3,"author":{"gitId":"BenedictBCJJ"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"BenedictBCJJ"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"BenedictBCJJ"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":9,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":10,"author":{"gitId":"BenedictBCJJ"},"content":"        Ui.greeting();"},{"lineNumber":11,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":12,"author":{"gitId":"BenedictBCJJ"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"BenedictBCJJ"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");"},{"lineNumber":14,"author":{"gitId":"BenedictBCJJ"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":16,"author":{"gitId":"BenedictBCJJ"},"content":"        Parser parser \u003d new Parser(sc.nextLine());"},{"lineNumber":17,"author":{"gitId":"BenedictBCJJ"},"content":"        while (parser.isCommandNotBye()) {"},{"lineNumber":18,"author":{"gitId":"BenedictBCJJ"},"content":"            try {"},{"lineNumber":19,"author":{"gitId":"BenedictBCJJ"},"content":"                Command taskType \u003d parser.getCommand();"},{"lineNumber":20,"author":{"gitId":"BenedictBCJJ"},"content":"                switch (taskType) {"},{"lineNumber":21,"author":{"gitId":"BenedictBCJJ"},"content":"                    case LIST:"},{"lineNumber":22,"author":{"gitId":"BenedictBCJJ"},"content":"                        Ui.execute(Command.LIST, taskList, null);"},{"lineNumber":23,"author":{"gitId":"BenedictBCJJ"},"content":"                        break;"},{"lineNumber":24,"author":{"gitId":"BenedictBCJJ"},"content":"                    case DELETE:"},{"lineNumber":25,"author":{"gitId":"BenedictBCJJ"},"content":"                        Task deletedTask \u003d taskList.get(parser.getTaskIndex() - 1);"},{"lineNumber":26,"author":{"gitId":"BenedictBCJJ"},"content":"                        taskList.delete(parser.getTaskIndex());"},{"lineNumber":27,"author":{"gitId":"BenedictBCJJ"},"content":"                        Ui.execute(Command.DELETE, taskList, deletedTask.getStatus());"},{"lineNumber":28,"author":{"gitId":"BenedictBCJJ"},"content":"                        break;"},{"lineNumber":29,"author":{"gitId":"BenedictBCJJ"},"content":"                    case DONE:"},{"lineNumber":30,"author":{"gitId":"BenedictBCJJ"},"content":"                        Task doneTask \u003d taskList.get(parser.getTaskIndex() - 1);"},{"lineNumber":31,"author":{"gitId":"BenedictBCJJ"},"content":"                        doneTask.setDone(true);"},{"lineNumber":32,"author":{"gitId":"BenedictBCJJ"},"content":"                        Ui.execute(Command.DONE, taskList, doneTask.getStatus());"},{"lineNumber":33,"author":{"gitId":"BenedictBCJJ"},"content":"                        break;"},{"lineNumber":34,"author":{"gitId":"BenedictBCJJ"},"content":"                    case DEADLINE:"},{"lineNumber":35,"author":{"gitId":"BenedictBCJJ"},"content":"                    case EVENT:"},{"lineNumber":36,"author":{"gitId":"BenedictBCJJ"},"content":"                    case TODO:"},{"lineNumber":37,"author":{"gitId":"BenedictBCJJ"},"content":"                        if (parser.hasDescriptionError()) {"},{"lineNumber":38,"author":{"gitId":"BenedictBCJJ"},"content":"                            Ui.exception(parser.getDescription());"},{"lineNumber":39,"author":{"gitId":"BenedictBCJJ"},"content":"                        } else if (!taskType.equals(Command.TODO) \u0026\u0026 parser.hasDateError()) {"},{"lineNumber":40,"author":{"gitId":"BenedictBCJJ"},"content":"                            Ui.exception(parser.getDate());"},{"lineNumber":41,"author":{"gitId":"BenedictBCJJ"},"content":"                        }"},{"lineNumber":42,"author":{"gitId":"BenedictBCJJ"},"content":"                        Task task \u003d taskType.equals(Command.EVENT)"},{"lineNumber":43,"author":{"gitId":"BenedictBCJJ"},"content":"                                ? new Event(parser.getDescription(), LocalDate.parse(parser.getDate(), formatter))"},{"lineNumber":44,"author":{"gitId":"BenedictBCJJ"},"content":"                                : taskType.equals(Command.TODO) ? new ToDo(parser.getDescription())"},{"lineNumber":45,"author":{"gitId":"BenedictBCJJ"},"content":"                                        : new Deadlines(parser.getDescription(),"},{"lineNumber":46,"author":{"gitId":"BenedictBCJJ"},"content":"                                                LocalDate.parse(parser.getDate(), formatter));"},{"lineNumber":47,"author":{"gitId":"BenedictBCJJ"},"content":"                        taskList.add(task);"},{"lineNumber":48,"author":{"gitId":"BenedictBCJJ"},"content":"                        Ui.execute(Command.TODO, taskList, task.getStatus());"},{"lineNumber":49,"author":{"gitId":"BenedictBCJJ"},"content":"                        break;"},{"lineNumber":50,"author":{"gitId":"BenedictBCJJ"},"content":"                    case FIND:"},{"lineNumber":51,"author":{"gitId":"BenedictBCJJ"},"content":"                        Ui.execute(Command.FIND, taskList, parser.getDescription());"},{"lineNumber":52,"author":{"gitId":"BenedictBCJJ"},"content":"                        break;"},{"lineNumber":53,"author":{"gitId":"BenedictBCJJ"},"content":"                    case NONE:"},{"lineNumber":54,"author":{"gitId":"BenedictBCJJ"},"content":"                        throw new TaskException(\"    â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"},{"lineNumber":55,"author":{"gitId":"BenedictBCJJ"},"content":"                    case BYE:"},{"lineNumber":56,"author":{"gitId":"BenedictBCJJ"},"content":"                        break;"},{"lineNumber":57,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":58,"author":{"gitId":"BenedictBCJJ"},"content":"                    default:"},{"lineNumber":59,"author":{"gitId":"BenedictBCJJ"},"content":"                        break;"},{"lineNumber":60,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":61,"author":{"gitId":"BenedictBCJJ"},"content":"                }"},{"lineNumber":62,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":63,"author":{"gitId":"BenedictBCJJ"},"content":"            } catch (TaskException e) {"},{"lineNumber":64,"author":{"gitId":"BenedictBCJJ"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":65,"author":{"gitId":"BenedictBCJJ"},"content":"            } catch (IllegalArgumentException e) {"},{"lineNumber":66,"author":{"gitId":"BenedictBCJJ"},"content":"                System.out.println(\"    â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"},{"lineNumber":67,"author":{"gitId":"BenedictBCJJ"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"BenedictBCJJ"},"content":"            Storage.createAndWrite(\"savedTasks.txt\", taskList);"},{"lineNumber":69,"author":{"gitId":"BenedictBCJJ"},"content":"            parser \u003d new Parser(sc.nextLine());"},{"lineNumber":70,"author":{"gitId":"BenedictBCJJ"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"BenedictBCJJ"},"content":"        sc.close();"},{"lineNumber":72,"author":{"gitId":"BenedictBCJJ"},"content":"        Ui.execute(Command.BYE, taskList, null);"},{"lineNumber":73,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":4,"BenedictBCJJ":71}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictBCJJ"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":3,"author":{"gitId":"BenedictBCJJ"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"BenedictBCJJ"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":6,"author":{"gitId":"BenedictBCJJ"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"BenedictBCJJ"},"content":"    private LocalDate eventTime;"},{"lineNumber":8,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":9,"author":{"gitId":"BenedictBCJJ"},"content":"    public Event(String description, LocalDate eventTime) {"},{"lineNumber":10,"author":{"gitId":"BenedictBCJJ"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"BenedictBCJJ"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":12,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":14,"author":{"gitId":"BenedictBCJJ"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"BenedictBCJJ"},"content":"    public String getStatus() {"},{"lineNumber":16,"author":{"gitId":"BenedictBCJJ"},"content":"        return \"[E]\" + super.getStatus() + \"(at: \" + this.eventTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"},{"lineNumber":17,"author":{"gitId":"BenedictBCJJ"},"content":"                + \")\";"},{"lineNumber":18,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":20,"author":{"gitId":"BenedictBCJJ"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"BenedictBCJJ"},"content":"    public String saveStatus() {"},{"lineNumber":22,"author":{"gitId":"BenedictBCJJ"},"content":"        return \"E\" + super.saveStatus();"},{"lineNumber":23,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"BenedictBCJJ"},"content":"}"}],"authorContributionMap":{"BenedictBCJJ":24}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictBCJJ"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":3,"author":{"gitId":"BenedictBCJJ"},"content":"public class Parser {"},{"lineNumber":4,"author":{"gitId":"BenedictBCJJ"},"content":"    private String[] information;"},{"lineNumber":5,"author":{"gitId":"BenedictBCJJ"},"content":"    private String date;"},{"lineNumber":6,"author":{"gitId":"BenedictBCJJ"},"content":"    private Command command;"},{"lineNumber":7,"author":{"gitId":"BenedictBCJJ"},"content":"    private String description;"},{"lineNumber":8,"author":{"gitId":"BenedictBCJJ"},"content":"    private int taskIndex;"},{"lineNumber":9,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":10,"author":{"gitId":"BenedictBCJJ"},"content":"    public Parser(String input) {"},{"lineNumber":11,"author":{"gitId":"BenedictBCJJ"},"content":"        try {"},{"lineNumber":12,"author":{"gitId":"BenedictBCJJ"},"content":"            this.information \u003d input.split(\" \", 2);"},{"lineNumber":13,"author":{"gitId":"BenedictBCJJ"},"content":"            this.command \u003d Command.valueOf(this.information[0].toUpperCase());"},{"lineNumber":14,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":15,"author":{"gitId":"BenedictBCJJ"},"content":"            switch (this.command) {"},{"lineNumber":16,"author":{"gitId":"BenedictBCJJ"},"content":"                case FIND:"},{"lineNumber":17,"author":{"gitId":"BenedictBCJJ"},"content":"                    this.description \u003d this.information[1];"},{"lineNumber":18,"author":{"gitId":"BenedictBCJJ"},"content":"                    break;"},{"lineNumber":19,"author":{"gitId":"BenedictBCJJ"},"content":"                case DELETE:"},{"lineNumber":20,"author":{"gitId":"BenedictBCJJ"},"content":"                case DONE:"},{"lineNumber":21,"author":{"gitId":"BenedictBCJJ"},"content":"                    this.taskIndex \u003d Integer.parseInt(this.information[1]);"},{"lineNumber":22,"author":{"gitId":"BenedictBCJJ"},"content":"                    break;"},{"lineNumber":23,"author":{"gitId":"BenedictBCJJ"},"content":"                case TODO:"},{"lineNumber":24,"author":{"gitId":"BenedictBCJJ"},"content":"                case DEADLINE:"},{"lineNumber":25,"author":{"gitId":"BenedictBCJJ"},"content":"                case EVENT:"},{"lineNumber":26,"author":{"gitId":"BenedictBCJJ"},"content":"                    String[] descriptionAndTime \u003d information.length \u003c 2 ? null : information[1].split(\"/\", 2);"},{"lineNumber":27,"author":{"gitId":"BenedictBCJJ"},"content":"                    this.description \u003d descriptionAndTime \u003d\u003d null ? \"DESCRIPTION.ERROR\" : descriptionAndTime[0];"},{"lineNumber":28,"author":{"gitId":"BenedictBCJJ"},"content":"                    this.date \u003d descriptionAndTime \u003d\u003d null || descriptionAndTime.length \u003c 2 ? \"DATE.ERROR\""},{"lineNumber":29,"author":{"gitId":"BenedictBCJJ"},"content":"                            : descriptionAndTime[1].split(\" \", 2)[1];"},{"lineNumber":30,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":31,"author":{"gitId":"BenedictBCJJ"},"content":"                    break;"},{"lineNumber":32,"author":{"gitId":"BenedictBCJJ"},"content":"                case BYE:"},{"lineNumber":33,"author":{"gitId":"BenedictBCJJ"},"content":"                case NONE:"},{"lineNumber":34,"author":{"gitId":"BenedictBCJJ"},"content":"                case LIST:"},{"lineNumber":35,"author":{"gitId":"BenedictBCJJ"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"BenedictBCJJ"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":37,"author":{"gitId":"BenedictBCJJ"},"content":"            this.command \u003d Command.NONE;"},{"lineNumber":38,"author":{"gitId":"BenedictBCJJ"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":40,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":42,"author":{"gitId":"BenedictBCJJ"},"content":"    public boolean hasDescriptionError() {"},{"lineNumber":43,"author":{"gitId":"BenedictBCJJ"},"content":"        return this.description.equals(\"DESCRIPTION.ERROR\");"},{"lineNumber":44,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":46,"author":{"gitId":"BenedictBCJJ"},"content":"    public boolean hasDateError() {"},{"lineNumber":47,"author":{"gitId":"BenedictBCJJ"},"content":"        return this.date.equals(\"DATE.ERROR\");"},{"lineNumber":48,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":50,"author":{"gitId":"BenedictBCJJ"},"content":"    public boolean isCommandNotBye() {"},{"lineNumber":51,"author":{"gitId":"BenedictBCJJ"},"content":"        return !this.command.equals(Command.BYE);"},{"lineNumber":52,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":54,"author":{"gitId":"BenedictBCJJ"},"content":"    public int getTaskIndex() {"},{"lineNumber":55,"author":{"gitId":"BenedictBCJJ"},"content":"        return taskIndex;"},{"lineNumber":56,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":58,"author":{"gitId":"BenedictBCJJ"},"content":"    public Command getCommand() {"},{"lineNumber":59,"author":{"gitId":"BenedictBCJJ"},"content":"        return command;"},{"lineNumber":60,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":62,"author":{"gitId":"BenedictBCJJ"},"content":"    public String getDate() {"},{"lineNumber":63,"author":{"gitId":"BenedictBCJJ"},"content":"        return date;"},{"lineNumber":64,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":66,"author":{"gitId":"BenedictBCJJ"},"content":"    public String getDescription() {"},{"lineNumber":67,"author":{"gitId":"BenedictBCJJ"},"content":"        return description;"},{"lineNumber":68,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"BenedictBCJJ"},"content":"}"}],"authorContributionMap":{"BenedictBCJJ":69}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictBCJJ"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":3,"author":{"gitId":"BenedictBCJJ"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"BenedictBCJJ"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"BenedictBCJJ"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":7,"author":{"gitId":"BenedictBCJJ"},"content":"public class Storage {"},{"lineNumber":8,"author":{"gitId":"BenedictBCJJ"},"content":"    public static void createAndWrite(String path, TaskList listOfTasks) {"},{"lineNumber":9,"author":{"gitId":"BenedictBCJJ"},"content":"        try {"},{"lineNumber":10,"author":{"gitId":"BenedictBCJJ"},"content":"            File savedTasks \u003d new File(path);"},{"lineNumber":11,"author":{"gitId":"BenedictBCJJ"},"content":"            savedTasks.createNewFile();"},{"lineNumber":12,"author":{"gitId":"BenedictBCJJ"},"content":"            FileWriter writer \u003d new FileWriter(path);"},{"lineNumber":13,"author":{"gitId":"BenedictBCJJ"},"content":"            for (int i \u003d 0; i \u003c listOfTasks.numberOfTasks(); i++) {"},{"lineNumber":14,"author":{"gitId":"BenedictBCJJ"},"content":"                writer.write(listOfTasks.get(i).saveStatus());"},{"lineNumber":15,"author":{"gitId":"BenedictBCJJ"},"content":"            }"},{"lineNumber":16,"author":{"gitId":"BenedictBCJJ"},"content":"            writer.close();"},{"lineNumber":17,"author":{"gitId":"BenedictBCJJ"},"content":"        } catch (IOException e) {"},{"lineNumber":18,"author":{"gitId":"BenedictBCJJ"},"content":"            e.printStackTrace();"},{"lineNumber":19,"author":{"gitId":"BenedictBCJJ"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"BenedictBCJJ"},"content":"}"}],"authorContributionMap":{"BenedictBCJJ":21}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictBCJJ"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":3,"author":{"gitId":"BenedictBCJJ"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"BenedictBCJJ"},"content":"    protected final String description;"},{"lineNumber":5,"author":{"gitId":"BenedictBCJJ"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":7,"author":{"gitId":"BenedictBCJJ"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"BenedictBCJJ"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"BenedictBCJJ"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":12,"author":{"gitId":"BenedictBCJJ"},"content":"    public void setDone(boolean isDone) {"},{"lineNumber":13,"author":{"gitId":"BenedictBCJJ"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":14,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":16,"author":{"gitId":"BenedictBCJJ"},"content":"    public String getStatus() {"},{"lineNumber":17,"author":{"gitId":"BenedictBCJJ"},"content":"        String isDoneSymbol \u003d isDone ? \"[X] \" : \"[ ] \";"},{"lineNumber":18,"author":{"gitId":"BenedictBCJJ"},"content":"        return isDoneSymbol + this.description;"},{"lineNumber":19,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":21,"author":{"gitId":"BenedictBCJJ"},"content":"    public String saveStatus() {"},{"lineNumber":22,"author":{"gitId":"BenedictBCJJ"},"content":"        return \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \"\\n\";"},{"lineNumber":23,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":25,"author":{"gitId":"BenedictBCJJ"},"content":"    public boolean doesDescriptionContain(String word) {"},{"lineNumber":26,"author":{"gitId":"BenedictBCJJ"},"content":"        return this.description.contains(word);"},{"lineNumber":27,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"BenedictBCJJ"},"content":"}"}],"authorContributionMap":{"BenedictBCJJ":28}},{"path":"src/main/java/duke/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictBCJJ"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":3,"author":{"gitId":"BenedictBCJJ"},"content":"public class TaskException extends Exception {"},{"lineNumber":4,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":5,"author":{"gitId":"BenedictBCJJ"},"content":"    private static final long serialVersionUID \u003d 1L;"},{"lineNumber":6,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":7,"author":{"gitId":"BenedictBCJJ"},"content":"    public TaskException(String message) {"},{"lineNumber":8,"author":{"gitId":"BenedictBCJJ"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"BenedictBCJJ"},"content":"}"}],"authorContributionMap":{"BenedictBCJJ":10}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictBCJJ"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":3,"author":{"gitId":"BenedictBCJJ"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":5,"author":{"gitId":"BenedictBCJJ"},"content":"public class TaskList {"},{"lineNumber":6,"author":{"gitId":"BenedictBCJJ"},"content":"    private ArrayList\u003cTask\u003e listOfTasks;"},{"lineNumber":7,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":8,"author":{"gitId":"BenedictBCJJ"},"content":"    TaskList() {"},{"lineNumber":9,"author":{"gitId":"BenedictBCJJ"},"content":"        this.listOfTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":10,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":12,"author":{"gitId":"BenedictBCJJ"},"content":"    public void add(Task task) {"},{"lineNumber":13,"author":{"gitId":"BenedictBCJJ"},"content":"        this.listOfTasks.add(task);"},{"lineNumber":14,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":16,"author":{"gitId":"BenedictBCJJ"},"content":"    public void delete(int taskIndex) {"},{"lineNumber":17,"author":{"gitId":"BenedictBCJJ"},"content":"        this.listOfTasks.remove(taskIndex - 1);"},{"lineNumber":18,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":20,"author":{"gitId":"BenedictBCJJ"},"content":"    public void print() {"},{"lineNumber":21,"author":{"gitId":"BenedictBCJJ"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.size(); i++)"},{"lineNumber":22,"author":{"gitId":"BenedictBCJJ"},"content":"            System.out.println(\"    \" + this.listOfTasks.get(i).getStatus());"},{"lineNumber":23,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":25,"author":{"gitId":"BenedictBCJJ"},"content":"    public int numberOfTasks() {"},{"lineNumber":26,"author":{"gitId":"BenedictBCJJ"},"content":"        return this.listOfTasks.size();"},{"lineNumber":27,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":29,"author":{"gitId":"BenedictBCJJ"},"content":"    public Task get(int taskIndex) {"},{"lineNumber":30,"author":{"gitId":"BenedictBCJJ"},"content":"        return this.listOfTasks.get(taskIndex);"},{"lineNumber":31,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":33,"author":{"gitId":"BenedictBCJJ"},"content":"    public void printContains(String words) {"},{"lineNumber":34,"author":{"gitId":"BenedictBCJJ"},"content":"        int j \u003d 0;"},{"lineNumber":35,"author":{"gitId":"BenedictBCJJ"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {"},{"lineNumber":36,"author":{"gitId":"BenedictBCJJ"},"content":"            if (this.listOfTasks.get(i).doesDescriptionContain(words)) {"},{"lineNumber":37,"author":{"gitId":"BenedictBCJJ"},"content":"                j++;"},{"lineNumber":38,"author":{"gitId":"BenedictBCJJ"},"content":"                System.out.println(\"    \" + j + \".\" + this.listOfTasks.get(i).getStatus());"},{"lineNumber":39,"author":{"gitId":"BenedictBCJJ"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"BenedictBCJJ"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"BenedictBCJJ"},"content":"}"}],"authorContributionMap":{"BenedictBCJJ":42}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictBCJJ"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":3,"author":{"gitId":"BenedictBCJJ"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":5,"author":{"gitId":"BenedictBCJJ"},"content":"    public ToDo(String description) {"},{"lineNumber":6,"author":{"gitId":"BenedictBCJJ"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":9,"author":{"gitId":"BenedictBCJJ"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"BenedictBCJJ"},"content":"    public String getStatus() {"},{"lineNumber":11,"author":{"gitId":"BenedictBCJJ"},"content":"        return \"[T]\" + super.getStatus();"},{"lineNumber":12,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":14,"author":{"gitId":"BenedictBCJJ"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"BenedictBCJJ"},"content":"    public String saveStatus() {"},{"lineNumber":16,"author":{"gitId":"BenedictBCJJ"},"content":"        return \"T\" + super.saveStatus();"},{"lineNumber":17,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"BenedictBCJJ"},"content":"}"}],"authorContributionMap":{"BenedictBCJJ":18}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictBCJJ"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":3,"author":{"gitId":"BenedictBCJJ"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"BenedictBCJJ"},"content":"    public static void execute(Command command, TaskList taskList, String status) {"},{"lineNumber":5,"author":{"gitId":"BenedictBCJJ"},"content":"        switch (command) {"},{"lineNumber":6,"author":{"gitId":"BenedictBCJJ"},"content":"            case BYE:"},{"lineNumber":7,"author":{"gitId":"BenedictBCJJ"},"content":"                System.out.println(\"    Bye bye, catch you soon.\");"},{"lineNumber":8,"author":{"gitId":"BenedictBCJJ"},"content":"                break;"},{"lineNumber":9,"author":{"gitId":"BenedictBCJJ"},"content":"            case EVENT:"},{"lineNumber":10,"author":{"gitId":"BenedictBCJJ"},"content":"            case TODO:"},{"lineNumber":11,"author":{"gitId":"BenedictBCJJ"},"content":"            case DEADLINE:"},{"lineNumber":12,"author":{"gitId":"BenedictBCJJ"},"content":"                System.out.println(\"    Got it. I\u0027ve added this task: \");"},{"lineNumber":13,"author":{"gitId":"BenedictBCJJ"},"content":"                break;"},{"lineNumber":14,"author":{"gitId":"BenedictBCJJ"},"content":"            case DELETE:"},{"lineNumber":15,"author":{"gitId":"BenedictBCJJ"},"content":"                System.out.println(\"    Noted. I\u0027ve removed this task:\");"},{"lineNumber":16,"author":{"gitId":"BenedictBCJJ"},"content":"                break;"},{"lineNumber":17,"author":{"gitId":"BenedictBCJJ"},"content":"            case DONE:"},{"lineNumber":18,"author":{"gitId":"BenedictBCJJ"},"content":"                System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":19,"author":{"gitId":"BenedictBCJJ"},"content":"                break;"},{"lineNumber":20,"author":{"gitId":"BenedictBCJJ"},"content":"            case LIST:"},{"lineNumber":21,"author":{"gitId":"BenedictBCJJ"},"content":"                System.out.println(\"    Here are the tasks in your list:\");"},{"lineNumber":22,"author":{"gitId":"BenedictBCJJ"},"content":"                taskList.print();"},{"lineNumber":23,"author":{"gitId":"BenedictBCJJ"},"content":"                break;"},{"lineNumber":24,"author":{"gitId":"BenedictBCJJ"},"content":"            case FIND:"},{"lineNumber":25,"author":{"gitId":"BenedictBCJJ"},"content":"                System.out.println(\"    Here are the matching tasks in your list:\");"},{"lineNumber":26,"author":{"gitId":"BenedictBCJJ"},"content":"                taskList.printContains(status);"},{"lineNumber":27,"author":{"gitId":"BenedictBCJJ"},"content":"                break;"},{"lineNumber":28,"author":{"gitId":"BenedictBCJJ"},"content":"            case NONE:"},{"lineNumber":29,"author":{"gitId":"BenedictBCJJ"},"content":"                break;"},{"lineNumber":30,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":31,"author":{"gitId":"BenedictBCJJ"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"BenedictBCJJ"},"content":"        if (!(command.equals(Command.LIST) || command.equals(Command.BYE) || command.equals(Command.FIND))) {"},{"lineNumber":33,"author":{"gitId":"BenedictBCJJ"},"content":"            System.out.println(\"      \" + status);"},{"lineNumber":34,"author":{"gitId":"BenedictBCJJ"},"content":"            System.out.println(\"    Now you have \" + taskList.numberOfTasks() + \" tasks in the list.\\n\");"},{"lineNumber":35,"author":{"gitId":"BenedictBCJJ"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":37,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":39,"author":{"gitId":"BenedictBCJJ"},"content":"    public static void greeting() {"},{"lineNumber":40,"author":{"gitId":"BenedictBCJJ"},"content":"        System.out.println(\"Hey yo, I\u0027m Travis.\\nI make you work. \\n\");"},{"lineNumber":41,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":43,"author":{"gitId":"BenedictBCJJ"},"content":"    public static void exception(String exceptionMessage) throws TaskException {"},{"lineNumber":44,"author":{"gitId":"BenedictBCJJ"},"content":"        throw new TaskException(exceptionMessage);"},{"lineNumber":45,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"BenedictBCJJ"},"content":"}"}],"authorContributionMap":{"BenedictBCJJ":46}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictBCJJ"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":3,"author":{"gitId":"BenedictBCJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":5,"author":{"gitId":"BenedictBCJJ"},"content":"public class DukeTest {"},{"lineNumber":6,"author":{"gitId":"BenedictBCJJ"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"BenedictBCJJ"},"content":"    public void dummyTest(){"},{"lineNumber":8,"author":{"gitId":"BenedictBCJJ"},"content":"        assertEquals(2, 2);"},{"lineNumber":9,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"BenedictBCJJ"},"content":"}"}],"authorContributionMap":{"BenedictBCJJ":10}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenedictBCJJ"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":3,"author":{"gitId":"BenedictBCJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":5,"author":{"gitId":"BenedictBCJJ"},"content":"public class TaskTest {"},{"lineNumber":6,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":7,"author":{"gitId":"BenedictBCJJ"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"BenedictBCJJ"},"content":"    public void testSetDone() {"},{"lineNumber":9,"author":{"gitId":"BenedictBCJJ"},"content":"        Task testTask \u003d new Task(\"\");"},{"lineNumber":10,"author":{"gitId":"BenedictBCJJ"},"content":"        testTask.setDone(true);"},{"lineNumber":11,"author":{"gitId":"BenedictBCJJ"},"content":"        assertEquals(true, testTask.isDone);"},{"lineNumber":12,"author":{"gitId":"BenedictBCJJ"},"content":"        testTask.setDone(false);"},{"lineNumber":13,"author":{"gitId":"BenedictBCJJ"},"content":"        assertEquals(false, testTask.isDone);"},{"lineNumber":14,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":16,"author":{"gitId":"BenedictBCJJ"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"BenedictBCJJ"},"content":"    public void testGetStatus() {"},{"lineNumber":18,"author":{"gitId":"BenedictBCJJ"},"content":"        Task testTask \u003d new Task(\"\");"},{"lineNumber":19,"author":{"gitId":"BenedictBCJJ"},"content":"        testTask.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"BenedictBCJJ"},"content":"        assertEquals(\"[X] \", testTask.getStatus());"},{"lineNumber":21,"author":{"gitId":"BenedictBCJJ"},"content":"        testTask.isDone \u003d false;"},{"lineNumber":22,"author":{"gitId":"BenedictBCJJ"},"content":"        assertEquals(\"[ ] \", testTask.getStatus());"},{"lineNumber":23,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":25,"author":{"gitId":"BenedictBCJJ"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"BenedictBCJJ"},"content":"    public void testSaveStatus() {"},{"lineNumber":27,"author":{"gitId":"BenedictBCJJ"},"content":"        Task testTask \u003d new Task(\"\");"},{"lineNumber":28,"author":{"gitId":"BenedictBCJJ"},"content":"        testTask.isDone \u003d true;"},{"lineNumber":29,"author":{"gitId":"BenedictBCJJ"},"content":"        assertEquals(\" | 1 | \\n\", testTask.saveStatus());"},{"lineNumber":30,"author":{"gitId":"BenedictBCJJ"},"content":"        testTask.isDone \u003d false;"},{"lineNumber":31,"author":{"gitId":"BenedictBCJJ"},"content":"        assertEquals(\" | 0 | \\n\", testTask.saveStatus());"},{"lineNumber":32,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"BenedictBCJJ"},"content":""},{"lineNumber":34,"author":{"gitId":"BenedictBCJJ"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"BenedictBCJJ"},"content":"    public void testDoesDescriptionContain() {"},{"lineNumber":36,"author":{"gitId":"BenedictBCJJ"},"content":"        Task testTask \u003d new Task(\"\");"},{"lineNumber":37,"author":{"gitId":"BenedictBCJJ"},"content":"        assertEquals(true, testTask.doesDescriptionContain(\"\"));"},{"lineNumber":38,"author":{"gitId":"BenedictBCJJ"},"content":"        assertEquals(false, testTask.doesDescriptionContain(\"123\"));"},{"lineNumber":39,"author":{"gitId":"BenedictBCJJ"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"BenedictBCJJ"},"content":"}"}],"authorContributionMap":{"BenedictBCJJ":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BenedictBCJJ"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"BenedictBCJJ"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"BenedictBCJJ"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"BenedictBCJJ"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"BenedictBCJJ"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"BenedictBCJJ"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"BenedictBCJJ"},"content":"done 4"},{"lineNumber":8,"author":{"gitId":"BenedictBCJJ"},"content":"list"},{"lineNumber":9,"author":{"gitId":"BenedictBCJJ"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"BenedictBCJJ"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":11,"author":{"gitId":"BenedictBCJJ"},"content":"list"},{"lineNumber":12,"author":{"gitId":"BenedictBCJJ"},"content":"delete 3"},{"lineNumber":13,"author":{"gitId":"BenedictBCJJ"},"content":"list"},{"lineNumber":14,"author":{"gitId":"BenedictBCJJ"},"content":"blah"},{"lineNumber":15,"author":{"gitId":"BenedictBCJJ"},"content":"todo"},{"lineNumber":16,"author":{"gitId":"BenedictBCJJ"},"content":"deadline"},{"lineNumber":17,"author":{"gitId":"BenedictBCJJ"},"content":"event"},{"lineNumber":18,"author":{"gitId":"BenedictBCJJ"},"content":"deadline nice"},{"lineNumber":19,"author":{"gitId":"BenedictBCJJ"},"content":"event not nice"}],"authorContributionMap":{"BenedictBCJJ":19}}]
