[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg height\u003d\"640\" src\u003d\"https://soonkeatneo.github.io/ip/Ui.png\"/\u003e\u003c/p\u003e"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":"\u003ch1 align\u003d\"center\"\u003eDukeNukem\u003c/h1\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"[![CI Status](https://github.com/soonkeatneo/ip/workflows/Java%20CI/badge.svg)](https://github.com/soonkeatneo/ip/actions)"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"## Table of Contents"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"* [Introduction](#introduction)"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"* [Getting Started](#getting-started)"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"* [Features](#features)"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"* [Advanced Setup](#advanced-setup)"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"### Introduction"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"DukeNukem is a Java-based application that aims to help remind you of upcoming tasks, deadlines and events."},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"### Getting Started"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"Prerequisites: JDK 11"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"1. Download the latest release from [here](https://github.com/SoonKeatNeo/ip/releases/). "},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"1. Double click the downloaded JAR file. If pathing is not set up, then you will have to use: `java -jar duke.jar`."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"### Features"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"DukeNukem can help you to manage Deadlines, Events and To-Dos."},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"For more comprehensive information, kindly visit the project web-page."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"### Advanced Setup"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":33,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":34,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":"1. After that, locate the `src/main/java/soonkeatneo/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`."}],"authorContributionMap":{"SoonKeatNeo":24,"-":12}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"SoonKeatNeo"},"content":"    mainClassName \u003d \"soonkeatneo.duke.Launcher\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"SoonKeatNeo"},"content":"    enableAssertions \u003d true"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":16,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cp align\u003d\"center\"\u003e\u003cimg height\u003d\"640\" src\u003d\"https://soonkeatneo.github.io/ip/Ui.png\"/\u003e\u003c/p\u003e"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":"\u003ch1 align\u003d\"center\"\u003eDukeNukem\u003c/h1\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"## Table of Contents"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"   * [DukeNukem](#dukenukem)"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"      * [Table of Contents](#table-of-contents)"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"      * [Introduction](#introduction)"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"      * [Getting Started](#getting-started)"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"      * [Features](#features)"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"         * [View all Tasks](#view-all-tasks)"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"         * [Find a Task](#find-a-task)"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"         * [Clear all Tasks](#clear-all-tasks)"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"         * [Add To-Do](#add-to-do)"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"         * [Add Event](#add-event)"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"         * [Add Deadline](#add-deadline)"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"         * [Mark as Complete](#mark-as-complete)"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"         * [Delete a Task](#delete-a-task)"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"         * [Show Help](#show-help)"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"         * [Exit](#exit)"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"## Introduction"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"DukeNukem is a Java-based application that aims to help remind you of upcoming tasks, deadlines and events."},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"## Getting Started"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"Prerequisites: JDK 11"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"1. Download the latest release from [here](https://github.com/SoonKeatNeo/ip/releases/). "},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"1. Double click the downloaded JAR file. If pathing is not set up, then you will have to use: `java -jar duke.jar`."},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"### View all Tasks"},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":"* Description: Shows all tasks that are present in the list."},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":"* Command: `list`"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"### Find a Task"},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":"* Description: Find Tasks matching a given string."},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":"* Format: `find \u003citem\u003e`"},{"lineNumber":41,"author":{"gitId":"SoonKeatNeo"},"content":"* Example: `find abcd`, where the task I wanted to find has `abcd` as a part of it."},{"lineNumber":42,"author":{"gitId":"SoonKeatNeo"},"content":"* Expected Outcome: Tasks matching the string would be printed."},{"lineNumber":43,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":44,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cimg height\u003d\"640\" src\u003d\"find.png\" /\u003e"},{"lineNumber":45,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c/p\u003e"},{"lineNumber":46,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":47,"author":{"gitId":"SoonKeatNeo"},"content":"### Clear all Tasks"},{"lineNumber":48,"author":{"gitId":"SoonKeatNeo"},"content":"* Description: Clears all tasks in DukeNukem."},{"lineNumber":49,"author":{"gitId":"SoonKeatNeo"},"content":"* Command: `clear`"},{"lineNumber":50,"author":{"gitId":"SoonKeatNeo"},"content":"* Expected Outcome: All tasks will be cleared."},{"lineNumber":51,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":52,"author":{"gitId":"SoonKeatNeo"},"content":"### Add To-Do"},{"lineNumber":53,"author":{"gitId":"SoonKeatNeo"},"content":"* Description: Adds a new To-Do with the given details."},{"lineNumber":54,"author":{"gitId":"SoonKeatNeo"},"content":"* Format: `todo \u003cdescription\u003e`"},{"lineNumber":55,"author":{"gitId":"SoonKeatNeo"},"content":"* Example: `todo Bring the kids to school`"},{"lineNumber":56,"author":{"gitId":"SoonKeatNeo"},"content":"* Expected Outcome: Adds a new To-Do with the description of \"Bring the kids to school\"."},{"lineNumber":57,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":58,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cimg height\u003d\"640\" src\u003d\"todo.png\" /\u003e"},{"lineNumber":59,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c/p\u003e"},{"lineNumber":60,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":61,"author":{"gitId":"SoonKeatNeo"},"content":"### Add Event"},{"lineNumber":62,"author":{"gitId":"SoonKeatNeo"},"content":"* Description: Adds a new Event with the given details."},{"lineNumber":63,"author":{"gitId":"SoonKeatNeo"},"content":"* Format: `event \u003cdescription\u003e /at YYYY-MM-DD`"},{"lineNumber":64,"author":{"gitId":"SoonKeatNeo"},"content":"* Example: `event Meeting with Minister /at 2021-02-20`"},{"lineNumber":65,"author":{"gitId":"SoonKeatNeo"},"content":"* Expected Outcome: Adds a new Event with the description \"Meeting with Minister\" on 20th Feb 2021."},{"lineNumber":66,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":67,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cimg height\u003d\"640\" src\u003d\"event.png\" /\u003e"},{"lineNumber":68,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c/p\u003e"},{"lineNumber":69,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":70,"author":{"gitId":"SoonKeatNeo"},"content":"### Add Deadline"},{"lineNumber":71,"author":{"gitId":"SoonKeatNeo"},"content":"* Description: Adds a new Deadline with the given details."},{"lineNumber":72,"author":{"gitId":"SoonKeatNeo"},"content":"* Format: `deadline \u003cdescription\u003e /by YYYY-MM-DD`"},{"lineNumber":73,"author":{"gitId":"SoonKeatNeo"},"content":"* Example: `deadline Submit Project /by 2021-02-19`"},{"lineNumber":74,"author":{"gitId":"SoonKeatNeo"},"content":"* Expected Outcome: Adds a new Deadline with the description \"Submit project\" to be done by 19th Feb 2021."},{"lineNumber":75,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":76,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cimg height\u003d\"640\" src\u003d\"deadline.png\" /\u003e"},{"lineNumber":77,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c/p\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"SoonKeatNeo"},"content":"### Mark as Complete"},{"lineNumber":81,"author":{"gitId":"SoonKeatNeo"},"content":"* Description: Marks the given task as complete."},{"lineNumber":82,"author":{"gitId":"SoonKeatNeo"},"content":"* Format: `done \u003ctask number\u003e`"},{"lineNumber":83,"author":{"gitId":"SoonKeatNeo"},"content":"* Example: `done 2`"},{"lineNumber":84,"author":{"gitId":"SoonKeatNeo"},"content":"* Expected Outcome: Marks the 2nd task in the list as complete."},{"lineNumber":85,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":86,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cimg height\u003d\"640\" src\u003d\"done.png\" /\u003e"},{"lineNumber":87,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c/p\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"SoonKeatNeo"},"content":"### Delete a Task"},{"lineNumber":90,"author":{"gitId":"SoonKeatNeo"},"content":"* Description: Deletes the task at the respective index number."},{"lineNumber":91,"author":{"gitId":"SoonKeatNeo"},"content":"* Format: `delete \u003ctask number\u003e`"},{"lineNumber":92,"author":{"gitId":"SoonKeatNeo"},"content":"* Example: `delete 2`"},{"lineNumber":93,"author":{"gitId":"SoonKeatNeo"},"content":"* Expected Outcome: Deletes the 2nd task in the list."},{"lineNumber":94,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":95,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cimg height\u003d\"640\" src\u003d\"delete.png\" /\u003e"},{"lineNumber":96,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c/p\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"SoonKeatNeo"},"content":"### Show Help"},{"lineNumber":99,"author":{"gitId":"SoonKeatNeo"},"content":"* Description: Prints the help documentation in DukeNukem."},{"lineNumber":100,"author":{"gitId":"SoonKeatNeo"},"content":"* Command: `help`"},{"lineNumber":101,"author":{"gitId":"SoonKeatNeo"},"content":"* Expected Outcome: Help text would be printed."},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"SoonKeatNeo"},"content":"### Exit"},{"lineNumber":104,"author":{"gitId":"SoonKeatNeo"},"content":"* Description: Exits the application."},{"lineNumber":105,"author":{"gitId":"SoonKeatNeo"},"content":"* Command: `bye`"},{"lineNumber":106,"author":{"gitId":"SoonKeatNeo"},"content":"* Expected Outcome: Application is exited."}],"authorContributionMap":{"SoonKeatNeo":91,"-":15}},{"path":"src/main/java/soonkeatneo/duke/AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"import soonkeatneo.duke.task.Deadline;"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"import soonkeatneo.duke.task.Event;"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"import soonkeatneo.duke.task.Todo;"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":" * Implementation for the adding of tasks to the TaskList."},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":" *  @author Soon Keat Neo"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":" *  @version CS2103T AY20/21 Sem 2 iP"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"public class AddTask {"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"     * Handles addition of tasks into the TaskList and returns confirmation message."},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param type type of task to be added"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param inputString string containing description of the task"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param tasks {@TaskList} to be manipulated"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param storage {@Storage} to be manipulated"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return String confirmation of success/failure"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"    public static String addTask(String type, String inputString, TaskList tasks, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"        if (type.equals(\"T\")) {"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"            try {"},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"                String taskString \u003d inputString.substring(5);"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"                Todo newTodo \u003d new Todo(taskString);"},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"                String saveToDisk \u003d \"T | 0 | \" + taskString;"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"                storage.saveTaskToDisk(saveToDisk);"},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"                return tasks.addTask(newTodo);"},{"lineNumber":32,"author":{"gitId":"SoonKeatNeo"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":33,"author":{"gitId":"SoonKeatNeo"},"content":"                throw new InvalidInputException("},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"                        \"Your input format doesn\u0027t seem right! For todos, it needs to be: todo \u003ctitle\u003e\");"},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (type.equals(\"E\")) {"},{"lineNumber":37,"author":{"gitId":"SoonKeatNeo"},"content":"            try {"},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"                String[] eventString \u003d inputString.split(\"/at\");"},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":"                String taskString \u003d eventString[0].substring(6).trim();"},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":"                String dateTime \u003d eventString[1].trim();"},{"lineNumber":41,"author":{"gitId":"SoonKeatNeo"},"content":"                Event newEvent \u003d new Event(taskString, dateTime);"},{"lineNumber":42,"author":{"gitId":"SoonKeatNeo"},"content":"                String saveToDisk \u003d \"E | 0 | \" + taskString + \" | \" + dateTime;"},{"lineNumber":43,"author":{"gitId":"SoonKeatNeo"},"content":"                storage.saveTaskToDisk(saveToDisk);"},{"lineNumber":44,"author":{"gitId":"SoonKeatNeo"},"content":"                return tasks.addTask(newEvent);"},{"lineNumber":45,"author":{"gitId":"SoonKeatNeo"},"content":"            } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {"},{"lineNumber":46,"author":{"gitId":"SoonKeatNeo"},"content":"                throw new InvalidInputException("},{"lineNumber":47,"author":{"gitId":"SoonKeatNeo"},"content":"                        \"Your input format doesn\u0027t seem right!\""},{"lineNumber":48,"author":{"gitId":"SoonKeatNeo"},"content":"                                + \" For events, it needs to be: event \u003ctitle\u003e /at [YYYY-MM-DD]\");"},{"lineNumber":49,"author":{"gitId":"SoonKeatNeo"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":50,"author":{"gitId":"SoonKeatNeo"},"content":"                throw new InvalidInputException("},{"lineNumber":51,"author":{"gitId":"SoonKeatNeo"},"content":"                        \"The format of your date and time seem to be wrong! Ensure it adheres to YYYY-MM-DD format.\");"},{"lineNumber":52,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (type.equals(\"D\")) {"},{"lineNumber":54,"author":{"gitId":"SoonKeatNeo"},"content":"            try {"},{"lineNumber":55,"author":{"gitId":"SoonKeatNeo"},"content":"                String[] eventString \u003d inputString.split(\"/by\");"},{"lineNumber":56,"author":{"gitId":"SoonKeatNeo"},"content":"                String taskString \u003d eventString[0].substring(9).trim();"},{"lineNumber":57,"author":{"gitId":"SoonKeatNeo"},"content":"                String deadlineTime \u003d eventString[1].trim();"},{"lineNumber":58,"author":{"gitId":"SoonKeatNeo"},"content":"                Deadline newDeadline \u003d new Deadline(taskString, deadlineTime);"},{"lineNumber":59,"author":{"gitId":"SoonKeatNeo"},"content":"                String saveToDisk \u003d \"D | 0 | \" + taskString + \" | \" + deadlineTime;"},{"lineNumber":60,"author":{"gitId":"SoonKeatNeo"},"content":"                storage.saveTaskToDisk(saveToDisk);"},{"lineNumber":61,"author":{"gitId":"SoonKeatNeo"},"content":"                return tasks.addTask(newDeadline);"},{"lineNumber":62,"author":{"gitId":"SoonKeatNeo"},"content":"            } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {"},{"lineNumber":63,"author":{"gitId":"SoonKeatNeo"},"content":"                throw new InvalidInputException("},{"lineNumber":64,"author":{"gitId":"SoonKeatNeo"},"content":"                        \"Your input format doesn\u0027t seem right!\""},{"lineNumber":65,"author":{"gitId":"SoonKeatNeo"},"content":"                                + \" For deadlines, it needs to be: deadline \u003ctitle\u003e /by [YYYY-MM-DD]\");"},{"lineNumber":66,"author":{"gitId":"SoonKeatNeo"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":67,"author":{"gitId":"SoonKeatNeo"},"content":"                throw new InvalidInputException("},{"lineNumber":68,"author":{"gitId":"SoonKeatNeo"},"content":"                        \"The format of your date and time seem to be wrong! Ensure it adheres to YYYY-MM-DD format.\");"},{"lineNumber":69,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"SoonKeatNeo"},"content":"        return \"\";"},{"lineNumber":72,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":73}},{"path":"src/main/java/soonkeatneo/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":" * Handles the dialog boxes that are used in the graphical interface of Duke."},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":" *"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":" * @author Soon Keat Neo"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":" * @version CS2103T AY20/21 Sem 2 iP"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"public class DialogBox extends HBox {"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"    private Label dialog;"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"    private ImageView displayPicture;"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"     * Constructor for DialogBox."},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param text message to be shown"},{"lineNumber":33,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param img image of the sender or recipient"},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"SoonKeatNeo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":"            fxmlLoader.load();"},{"lineNumber":41,"author":{"gitId":"SoonKeatNeo"},"content":"        } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"SoonKeatNeo"},"content":"            e.printStackTrace();"},{"lineNumber":43,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":45,"author":{"gitId":"SoonKeatNeo"},"content":"        dialog.setText(text);"},{"lineNumber":46,"author":{"gitId":"SoonKeatNeo"},"content":"        displayPicture.setImage(img);"},{"lineNumber":47,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":49,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"SoonKeatNeo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":51,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"SoonKeatNeo"},"content":"    private void flip() {"},{"lineNumber":53,"author":{"gitId":"SoonKeatNeo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":54,"author":{"gitId":"SoonKeatNeo"},"content":"        Collections.reverse(tmp);"},{"lineNumber":55,"author":{"gitId":"SoonKeatNeo"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":56,"author":{"gitId":"SoonKeatNeo"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":57,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":59,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"SoonKeatNeo"},"content":"     * Gets the dialog box of the User."},{"lineNumber":61,"author":{"gitId":"SoonKeatNeo"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param msg message the user sends to be shown"},{"lineNumber":63,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param img image of the user"},{"lineNumber":64,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return the dialog box of the user"},{"lineNumber":65,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"SoonKeatNeo"},"content":"    public static DialogBox getUserDialog(String msg, Image img) {"},{"lineNumber":67,"author":{"gitId":"SoonKeatNeo"},"content":"        return new DialogBox(msg, img);"},{"lineNumber":68,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":70,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"SoonKeatNeo"},"content":"     * Gets the dialog box of the Bot."},{"lineNumber":72,"author":{"gitId":"SoonKeatNeo"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param msg message the bot will be returning"},{"lineNumber":74,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param img image of the bot"},{"lineNumber":75,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return the dialog box of the bot"},{"lineNumber":76,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"SoonKeatNeo"},"content":"    public static DialogBox getDukeDialog(String msg, Image img) {"},{"lineNumber":78,"author":{"gitId":"SoonKeatNeo"},"content":"        var db \u003d new DialogBox(msg, img);"},{"lineNumber":79,"author":{"gitId":"SoonKeatNeo"},"content":"        db.flip();"},{"lineNumber":80,"author":{"gitId":"SoonKeatNeo"},"content":"        return db;"},{"lineNumber":81,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":82}},{"path":"src/main/java/soonkeatneo/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":" * Main implementation for the Duke chat-bot."},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":" * @author Soon Keat Neo"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":" * @version CS2103T AY20/21 Sem 2 iP"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"    /** Allows for easy change of the bot name in future. **/"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"    protected static final String BOT_NAME \u003d \"DukeNukem\";"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"    private Storage storage;"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"    private boolean isFirstLaunch;"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"     * Creates a new Duke object with the given file-path for {@Storage}."},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param filePath file path for initialization of Storage"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"    public Duke(String filePath) {"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"        this.storage \u003d new Storage(filePath).load();"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"        this.isFirstLaunch \u003d false;"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"        if (this.storage.isSampleDataLoaded()) {"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"            this.isFirstLaunch \u003d true;"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"        tasks \u003d new TaskList(storage);"},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"     * Returns True if this is the first launch, else False."},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return boolean representing if this is the first launch"},{"lineNumber":32,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"SoonKeatNeo"},"content":"    public boolean isFirstLaunch() {"},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"        return this.isFirstLaunch;"},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":37,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"     * Listens to the user\u0027s input, and passes it to the input handler."},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":"    public String handleInput(String inputString) {"},{"lineNumber":41,"author":{"gitId":"SoonKeatNeo"},"content":"        String message;"},{"lineNumber":42,"author":{"gitId":"SoonKeatNeo"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"SoonKeatNeo"},"content":"            message \u003d Parser.parse(inputString, this.tasks, this.storage);"},{"lineNumber":44,"author":{"gitId":"SoonKeatNeo"},"content":"        } catch (InvalidCommandException | InvalidInputException | InvalidTaskException e) {"},{"lineNumber":45,"author":{"gitId":"SoonKeatNeo"},"content":"            return e.getMessage();"},{"lineNumber":46,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"SoonKeatNeo"},"content":"        return message;"},{"lineNumber":48,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":48,"-":2}},{"path":"src/main/java/soonkeatneo/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"public class DukeException extends RuntimeException {"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"    public DukeException() {"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"        super(\"    Something went wrong!\");"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":7}},{"path":"src/main/java/soonkeatneo/duke/Help.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":" * Implementation for printing of help documentation."},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":" *  @author Soon Keat Neo"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":" *  @version CS2103T AY20/21 Sem 2 iP"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"public class Help {"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"     * Returns the help text defined."},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return A String containing the formatted help-text."},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"    public static String print() {"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"        String helpText \u003d \"The following are the implemented functions in \" + Duke.BOT_NAME + \":\\n\""},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"                + \"list - List all Tasks added to the bot.\\n\""},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"                + \"find - Search for a Task containing the given string.\\n\""},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"                + \"clear - Clears all Tasks from the list.\\n\""},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"                + \"todo - Add a new ToDo Task.\\n\""},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"                + \"event - Add a new Event Task.\\n\""},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"                + \"deadline - Add a new Deadline Task.\\n\""},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"                + \"done - Mark a Task as completed.\\n\""},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"                + \"delete - Removes a Task from the application.\\n\""},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"                + \"help - Prints the help text\\n\""},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"                + \"bye - Exit the application.\";"},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"        return helpText;"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":31}},{"path":"src/main/java/soonkeatneo/duke/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"public class InvalidCommandException extends IllegalArgumentException {"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"    public InvalidCommandException() {"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"        super(\"This isn\u0027t a valid command!\");"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":7}},{"path":"src/main/java/soonkeatneo/duke/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"public class InvalidInputException extends IllegalArgumentException {"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"    public InvalidInputException(String msg) {"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"        super(msg);"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":7}},{"path":"src/main/java/soonkeatneo/duke/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"public class InvalidTaskException extends IllegalArgumentException {"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"    public InvalidTaskException() {"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"        super(\"Hmm... Looks like the task number isn\u0027t correct. Check it and try again!\");"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":7}},{"path":"src/main/java/soonkeatneo/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":" * Launcher JavaFX implementation for the DukeNukem chat-bot."},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":" *"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":" * @author Soon Keat Neo"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":" * @version CS2103T AY20/21 Sem 2 iP"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"public class Launcher {"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"     * Launches the Main class."},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param args command line arguments"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"    public static void main(String[] args) {"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":22}},{"path":"src/main/java/soonkeatneo/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":" * Graphical user interface implementation for the Duke chat-bot."},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":" *"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":" * @author Soon Keat Neo"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":" * @version CS2103T AY20/21 Sem 2 iP"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"public class Main extends Application {"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"    private final Duke dukeBot \u003d new Duke(\"data/data.txt\");"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"     * Provides an overridden start implementation of JavaFX."},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param stage primary stage to be used"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"    public void start(Stage stage) {"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":32,"author":{"gitId":"SoonKeatNeo"},"content":"            stage.setScene(scene);"},{"lineNumber":33,"author":{"gitId":"SoonKeatNeo"},"content":"            stage.setTitle(\"DukeNukem\");"},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(dukeBot);"},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":"            stage.show();"},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"SoonKeatNeo"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":40}},{"path":"src/main/java/soonkeatneo/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":" * Main Window implementation for the Duke chat-bot."},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":" *"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":" * @author Soon Keat Neo"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":" * @version CS2103T AY20/21 Sem 2 iP"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"    private TextField userInput;"},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"    private Duke dukeBot;"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream"},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"            (\"/images/user.jpg\"));"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream"},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"            (\"/images/dukenukem.jpg\"));"},{"lineNumber":32,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":33,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"     * Initializes the main window with the parameters and greets the user."},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"SoonKeatNeo"},"content":"    public void initialize() {"},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":"        greetUser();"},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":42,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"SoonKeatNeo"},"content":"     * Sets the instance of the bot to be used"},{"lineNumber":44,"author":{"gitId":"SoonKeatNeo"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param duke the Duke bot instance"},{"lineNumber":46,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"SoonKeatNeo"},"content":"    public void setDuke(Duke duke) {"},{"lineNumber":48,"author":{"gitId":"SoonKeatNeo"},"content":"        this.dukeBot \u003d duke;"},{"lineNumber":49,"author":{"gitId":"SoonKeatNeo"},"content":"        if (this.dukeBot.isFirstLaunch()) {"},{"lineNumber":50,"author":{"gitId":"SoonKeatNeo"},"content":"            printMessage(\"Looks like this is your first time here! \""},{"lineNumber":51,"author":{"gitId":"SoonKeatNeo"},"content":"                    + \"We\u0027ve put some sample data in and printed the help for you:\");"},{"lineNumber":52,"author":{"gitId":"SoonKeatNeo"},"content":"            printMessage(Help.print());"},{"lineNumber":53,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":56,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"SoonKeatNeo"},"content":"     * Greets user with a message on the screen when called."},{"lineNumber":58,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"SoonKeatNeo"},"content":"    public void greetUser() {"},{"lineNumber":60,"author":{"gitId":"SoonKeatNeo"},"content":"        printMessage(\"Henlooooo~! My name is \" + Duke.BOT_NAME"},{"lineNumber":61,"author":{"gitId":"SoonKeatNeo"},"content":"                + \". What can I do for you today? :)\");"},{"lineNumber":62,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":64,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"SoonKeatNeo"},"content":"     * Prints messages to the user."},{"lineNumber":66,"author":{"gitId":"SoonKeatNeo"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param msg message to be printed"},{"lineNumber":68,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"SoonKeatNeo"},"content":"    private void printMessage(String msg) {"},{"lineNumber":70,"author":{"gitId":"SoonKeatNeo"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(msg, dukeImage));"},{"lineNumber":71,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":73,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"SoonKeatNeo"},"content":"     * Handles user input and provides for the printing of returned messages."},{"lineNumber":75,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"SoonKeatNeo"},"content":"    @FXML"},{"lineNumber":77,"author":{"gitId":"SoonKeatNeo"},"content":"    private void handleUserInput() {"},{"lineNumber":78,"author":{"gitId":"SoonKeatNeo"},"content":"        String inputString \u003d userInput.getText().strip();"},{"lineNumber":79,"author":{"gitId":"SoonKeatNeo"},"content":"        dialogContainer.getChildren().add("},{"lineNumber":80,"author":{"gitId":"SoonKeatNeo"},"content":"                DialogBox.getUserDialog(inputString, userImage)"},{"lineNumber":81,"author":{"gitId":"SoonKeatNeo"},"content":"        );"},{"lineNumber":82,"author":{"gitId":"SoonKeatNeo"},"content":"        userInput.clear();"},{"lineNumber":83,"author":{"gitId":"SoonKeatNeo"},"content":"        printMessage(dukeBot.handleInput(inputString));"},{"lineNumber":84,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":86,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":86}},{"path":"src/main/java/soonkeatneo/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"import static soonkeatneo.duke.AddTask.addTask;"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":" * Implementation for parsing of input to be routed to specific handlers."},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":" *  @author Soon Keat Neo"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":" *  @version CS2103T AY20/21 Sem 2 iP"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"     * Handles the input and passes to the relevant methods."},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param inputString User input string to be handled"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param tasks Task List to be manipulated"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param storage {@Storage} object to be used"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return String confirmation of success/failure"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"    public static String parse(String inputString, TaskList tasks, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"        assert inputString !\u003d null;"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"        assert tasks !\u003d null;"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"        assert storage !\u003d null;"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"        if (inputString.equals(\"list\")) {"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"            return tasks.print();"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (inputString.startsWith(\"help\")) {"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"            return Help.print();"},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (inputString.equals(\"bye\")) {"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"            System.exit(0);"},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (inputString.equals(\"clear\")) {"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"            return tasks.clear(storage);"},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (inputString.startsWith(\"done\")) {"},{"lineNumber":32,"author":{"gitId":"SoonKeatNeo"},"content":"            return tasks.completeTask(inputString, storage);"},{"lineNumber":33,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (inputString.startsWith(\"delete\")) {"},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"            return tasks.deleteTask(inputString, storage);"},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (inputString.startsWith(\"todo\")) {"},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":"            return addTask(\"T\", inputString, tasks, storage);"},{"lineNumber":37,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (inputString.startsWith(\"event\")) {"},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"            return addTask(\"E\", inputString, tasks, storage);"},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (inputString.startsWith(\"deadline\")) {"},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":"            return addTask(\"D\", inputString, tasks, storage);"},{"lineNumber":41,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (inputString.startsWith(\"find\")) {"},{"lineNumber":42,"author":{"gitId":"SoonKeatNeo"},"content":"            try {"},{"lineNumber":43,"author":{"gitId":"SoonKeatNeo"},"content":"                return tasks.find(inputString.substring(5).trim());"},{"lineNumber":44,"author":{"gitId":"SoonKeatNeo"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":45,"author":{"gitId":"SoonKeatNeo"},"content":"                throw new InvalidInputException("},{"lineNumber":46,"author":{"gitId":"SoonKeatNeo"},"content":"                        \"Your input format doesn\u0027t seem right! For find, it needs to be: find \u003cstring\u003e\");"},{"lineNumber":47,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"SoonKeatNeo"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"SoonKeatNeo"},"content":"            throw new InvalidCommandException();"},{"lineNumber":50,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"SoonKeatNeo"},"content":"        return \"\";"},{"lineNumber":52,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":53}},{"path":"src/main/java/soonkeatneo/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":" * Handles the opening, writing and opening of files."},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":" * @author Soon Keat Neo"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":" * @version CS2103T AY20/21 Sem 2 iP"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"    private String filePath;"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"    private File dataFile;"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"    private boolean isSampleDataLoaded;"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"     * Constructs the Storage object with the given file-path."},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param filePath File path to be used for the Storage object"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"    public Storage(String filePath) {"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"        this.isSampleDataLoaded \u003d false;"},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"     * Loads the Storage object and creates paths if non-existent."},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return A copy of the Storage object"},{"lineNumber":32,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"SoonKeatNeo"},"content":"    public Storage load() {"},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"        this.dataFile \u003d new File(this.filePath);"},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":"        this.dataFile.getParentFile().mkdirs();"},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":"        if (!dataFile.exists()) {"},{"lineNumber":37,"author":{"gitId":"SoonKeatNeo"},"content":"            try {"},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"                this.dataFile.createNewFile();"},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":"                addSampleData();"},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":"                this.isSampleDataLoaded \u003d true;"},{"lineNumber":41,"author":{"gitId":"SoonKeatNeo"},"content":"            } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"SoonKeatNeo"},"content":"                throw new DukeException();"},{"lineNumber":43,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"SoonKeatNeo"},"content":"        return this;"},{"lineNumber":46,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":48,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"SoonKeatNeo"},"content":"     * Returns True if sample data was loaded, else False."},{"lineNumber":50,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return boolean representing if sample data was loaded"},{"lineNumber":51,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"SoonKeatNeo"},"content":"    public boolean isSampleDataLoaded() {"},{"lineNumber":53,"author":{"gitId":"SoonKeatNeo"},"content":"        return this.isSampleDataLoaded;"},{"lineNumber":54,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":56,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"SoonKeatNeo"},"content":"     * Reads the contents of the opened file."},{"lineNumber":58,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return A String list of contents of the given file."},{"lineNumber":59,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"SoonKeatNeo"},"content":"    public List\u003cString\u003e read() {"},{"lineNumber":61,"author":{"gitId":"SoonKeatNeo"},"content":"        List\u003cString\u003e fileContents;"},{"lineNumber":62,"author":{"gitId":"SoonKeatNeo"},"content":"        try {"},{"lineNumber":63,"author":{"gitId":"SoonKeatNeo"},"content":"            fileContents \u003d Files.readAllLines(dataFile.toPath());"},{"lineNumber":64,"author":{"gitId":"SoonKeatNeo"},"content":"        } catch (IOException e) {"},{"lineNumber":65,"author":{"gitId":"SoonKeatNeo"},"content":"            throw new DukeException();"},{"lineNumber":66,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"SoonKeatNeo"},"content":"        return fileContents;"},{"lineNumber":68,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":70,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"SoonKeatNeo"},"content":"     * Adds sample data to newly created data file."},{"lineNumber":72,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return String value indicating success"},{"lineNumber":73,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"SoonKeatNeo"},"content":"    public String addSampleData() {"},{"lineNumber":75,"author":{"gitId":"SoonKeatNeo"},"content":"        saveTaskToDisk(\"T | 0 | Sample ToDo\");"},{"lineNumber":76,"author":{"gitId":"SoonKeatNeo"},"content":"        saveTaskToDisk(\"E | 1 | Sample Christmas Event | 2021-12-25\");"},{"lineNumber":77,"author":{"gitId":"SoonKeatNeo"},"content":"        saveTaskToDisk(\"D | 0 | Sample Deadline | 2021-01-15\");"},{"lineNumber":78,"author":{"gitId":"SoonKeatNeo"},"content":"        return \"Success\";"},{"lineNumber":79,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":81,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"SoonKeatNeo"},"content":"     * Replaces a line in the file to facilitate deletion and replacement."},{"lineNumber":83,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param oldString String of the old task."},{"lineNumber":84,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param newString String of the new task."},{"lineNumber":85,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"SoonKeatNeo"},"content":"    public void deleteReplaceTaskFromDisk(String oldString, String newString) {"},{"lineNumber":87,"author":{"gitId":"SoonKeatNeo"},"content":"        assert oldString !\u003d null;"},{"lineNumber":88,"author":{"gitId":"SoonKeatNeo"},"content":"        try {"},{"lineNumber":89,"author":{"gitId":"SoonKeatNeo"},"content":"            List\u003cString\u003e fileContents \u003d new ArrayList\u003c\u003e(Files.readAllLines(this.dataFile.toPath()));"},{"lineNumber":90,"author":{"gitId":"SoonKeatNeo"},"content":"            for (int i \u003d 0; i \u003c fileContents.size(); i++) {"},{"lineNumber":91,"author":{"gitId":"SoonKeatNeo"},"content":"                if (fileContents.get(i).equals(oldString)) {"},{"lineNumber":92,"author":{"gitId":"SoonKeatNeo"},"content":"                    fileContents.set(i, newString);"},{"lineNumber":93,"author":{"gitId":"SoonKeatNeo"},"content":"                    break;"},{"lineNumber":94,"author":{"gitId":"SoonKeatNeo"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"SoonKeatNeo"},"content":"            Files.write(this.dataFile.toPath(), fileContents);"},{"lineNumber":97,"author":{"gitId":"SoonKeatNeo"},"content":"        } catch (IOException e) {"},{"lineNumber":98,"author":{"gitId":"SoonKeatNeo"},"content":"            throw new DukeException();"},{"lineNumber":99,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":102,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"SoonKeatNeo"},"content":"     * Appends a given String to the file."},{"lineNumber":104,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param newString String to be appended to the file"},{"lineNumber":105,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"SoonKeatNeo"},"content":"    public void saveTaskToDisk(String newString) {"},{"lineNumber":107,"author":{"gitId":"SoonKeatNeo"},"content":"        assert newString !\u003d null;"},{"lineNumber":108,"author":{"gitId":"SoonKeatNeo"},"content":"        try {"},{"lineNumber":109,"author":{"gitId":"SoonKeatNeo"},"content":"            FileWriter writer \u003d new FileWriter(this.dataFile, true);"},{"lineNumber":110,"author":{"gitId":"SoonKeatNeo"},"content":"            writer.write(newString + System.lineSeparator());"},{"lineNumber":111,"author":{"gitId":"SoonKeatNeo"},"content":"            writer.close();"},{"lineNumber":112,"author":{"gitId":"SoonKeatNeo"},"content":"        } catch (IOException e) {"},{"lineNumber":113,"author":{"gitId":"SoonKeatNeo"},"content":"            throw new DukeException();"},{"lineNumber":114,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":116}},{"path":"src/main/java/soonkeatneo/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"import soonkeatneo.duke.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"import soonkeatneo.duke.task.Event;"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"import soonkeatneo.duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"import soonkeatneo.duke.task.Todo;"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":" * Stores and manages the list of {@Task} created."},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":" * @author Soon Keat Neo"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":" * @version CS2103T AY20/21 Sem 2 iP"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"public class TaskList {"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"    private static List\u003cTask\u003e taskList;"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"     * Creates a new task list without reading from existing storage."},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"    public TaskList() {"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"     * Overloaded constructor creating a new task list reading from existing {@Storage}."},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param storage Storage object to be read from"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"    public TaskList(Storage storage) {"},{"lineNumber":32,"author":{"gitId":"SoonKeatNeo"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"SoonKeatNeo"},"content":"        initializeTasks(storage.read());"},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"SoonKeatNeo"},"content":"     * Prints a list of {@Task} matching the given string."},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param inputString the String to search for"},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":"    public String find(String inputString) {"},{"lineNumber":41,"author":{"gitId":"SoonKeatNeo"},"content":"        List\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":42,"author":{"gitId":"SoonKeatNeo"},"content":"        boolean hasPrintedTasks \u003d false;"},{"lineNumber":43,"author":{"gitId":"SoonKeatNeo"},"content":"        int counter \u003d 0;"},{"lineNumber":44,"author":{"gitId":"SoonKeatNeo"},"content":"        String message \u003d \"\";"},{"lineNumber":45,"author":{"gitId":"SoonKeatNeo"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"},{"lineNumber":46,"author":{"gitId":"SoonKeatNeo"},"content":"            Task task \u003d this.taskList.get(i);"},{"lineNumber":47,"author":{"gitId":"SoonKeatNeo"},"content":"            if (task.getDescription().toLowerCase().contains(inputString.toLowerCase())) {"},{"lineNumber":48,"author":{"gitId":"SoonKeatNeo"},"content":"                if (!hasPrintedTasks) {"},{"lineNumber":49,"author":{"gitId":"SoonKeatNeo"},"content":"                    message +\u003d \"Here are the list of matching tasks: \\n\";"},{"lineNumber":50,"author":{"gitId":"SoonKeatNeo"},"content":"                    hasPrintedTasks \u003d true;"},{"lineNumber":51,"author":{"gitId":"SoonKeatNeo"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"SoonKeatNeo"},"content":"                message +\u003d (counter + 1) + \". \" + task.toString() + \"\\n\";"},{"lineNumber":53,"author":{"gitId":"SoonKeatNeo"},"content":"                counter +\u003d 1;"},{"lineNumber":54,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"SoonKeatNeo"},"content":"        if (!hasPrintedTasks) {"},{"lineNumber":57,"author":{"gitId":"SoonKeatNeo"},"content":"            message +\u003d \"There are no matching tasks!\";"},{"lineNumber":58,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"SoonKeatNeo"},"content":"        return message;"},{"lineNumber":60,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":62,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"SoonKeatNeo"},"content":"     * Adds a new {@Task} to the task list."},{"lineNumber":64,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param task Given task to be added to the task list"},{"lineNumber":65,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"SoonKeatNeo"},"content":"    public String addTask(Task task) {"},{"lineNumber":67,"author":{"gitId":"SoonKeatNeo"},"content":"        taskList.add(task);"},{"lineNumber":68,"author":{"gitId":"SoonKeatNeo"},"content":"        String message \u003d \"Wakarimashita! Task added to list:\\n\";"},{"lineNumber":69,"author":{"gitId":"SoonKeatNeo"},"content":"        message +\u003d task.toString();"},{"lineNumber":70,"author":{"gitId":"SoonKeatNeo"},"content":"        message +\u003d \"\\nThe size of your task list is now: \" + this.getSize();"},{"lineNumber":71,"author":{"gitId":"SoonKeatNeo"},"content":"        return message;"},{"lineNumber":72,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":74,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"SoonKeatNeo"},"content":"     * Mark the specified task as complete."},{"lineNumber":76,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param inputString User input string"},{"lineNumber":77,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"SoonKeatNeo"},"content":"    public String completeTask(String inputString, Storage storage) {"},{"lineNumber":79,"author":{"gitId":"SoonKeatNeo"},"content":"        String message \u003d \"\";"},{"lineNumber":80,"author":{"gitId":"SoonKeatNeo"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"SoonKeatNeo"},"content":"            int taskId \u003d Integer.parseInt(String.valueOf(inputString.split(\" \")[1])) - 1;"},{"lineNumber":82,"author":{"gitId":"SoonKeatNeo"},"content":"            Task doneTask \u003d taskList.get(taskId).setDone();"},{"lineNumber":83,"author":{"gitId":"SoonKeatNeo"},"content":"            String typeOfTask \u003d doneTask.getType();"},{"lineNumber":84,"author":{"gitId":"SoonKeatNeo"},"content":"            String completionOfTask \u003d (doneTask.getDone() ? \"1\" : \"0\");"},{"lineNumber":85,"author":{"gitId":"SoonKeatNeo"},"content":"            String descriptionOfTask \u003d doneTask.getDescription().strip();"},{"lineNumber":86,"author":{"gitId":"SoonKeatNeo"},"content":"            LocalDate date \u003d LocalDate.now();"},{"lineNumber":87,"author":{"gitId":"SoonKeatNeo"},"content":"            if (doneTask instanceof Event) {"},{"lineNumber":88,"author":{"gitId":"SoonKeatNeo"},"content":"                date \u003d ((Event) doneTask).getDate();"},{"lineNumber":89,"author":{"gitId":"SoonKeatNeo"},"content":"            } else if (doneTask instanceof Deadline) {"},{"lineNumber":90,"author":{"gitId":"SoonKeatNeo"},"content":"                date \u003d ((Deadline) doneTask).getDate();"},{"lineNumber":91,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"SoonKeatNeo"},"content":"            String oldString \u003d typeOfTask + \" | \" + \"0\" + \" | \" + descriptionOfTask;"},{"lineNumber":93,"author":{"gitId":"SoonKeatNeo"},"content":"            String newString \u003d typeOfTask + \" | \" + completionOfTask + \" | \" + descriptionOfTask;"},{"lineNumber":94,"author":{"gitId":"SoonKeatNeo"},"content":"            if (doneTask instanceof Event || doneTask instanceof Deadline) {"},{"lineNumber":95,"author":{"gitId":"SoonKeatNeo"},"content":"                oldString +\u003d \" | \" + date.toString();"},{"lineNumber":96,"author":{"gitId":"SoonKeatNeo"},"content":"                newString +\u003d \" | \" + date.toString();"},{"lineNumber":97,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"SoonKeatNeo"},"content":"            storage.deleteReplaceTaskFromDisk(oldString, newString);"},{"lineNumber":99,"author":{"gitId":"SoonKeatNeo"},"content":"            message +\u003d \"Great~! Task completed:\\n\";"},{"lineNumber":100,"author":{"gitId":"SoonKeatNeo"},"content":"            message +\u003d doneTask.toString();"},{"lineNumber":101,"author":{"gitId":"SoonKeatNeo"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":102,"author":{"gitId":"SoonKeatNeo"},"content":"            throw new InvalidTaskException();"},{"lineNumber":103,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"SoonKeatNeo"},"content":"        return message;"},{"lineNumber":105,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":107,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"SoonKeatNeo"},"content":"     * Clears all tasks from the list."},{"lineNumber":109,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param storage Storage object to remove from disk"},{"lineNumber":110,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return String representing output of success"},{"lineNumber":111,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"SoonKeatNeo"},"content":"    public String clear(Storage storage) {"},{"lineNumber":113,"author":{"gitId":"SoonKeatNeo"},"content":"        List\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"},{"lineNumber":114,"author":{"gitId":"SoonKeatNeo"},"content":"        for (Task task : taskList) {"},{"lineNumber":115,"author":{"gitId":"SoonKeatNeo"},"content":"            temp.add(task);"},{"lineNumber":116,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"SoonKeatNeo"},"content":"        for (Task task : temp) {"},{"lineNumber":118,"author":{"gitId":"SoonKeatNeo"},"content":"            String stringDesc \u003d \"delete \" + (taskList.indexOf(task) + 1);"},{"lineNumber":119,"author":{"gitId":"SoonKeatNeo"},"content":"            deleteTask(stringDesc, storage);"},{"lineNumber":120,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"SoonKeatNeo"},"content":"        return \"Successfully cleared all tasks from the task list!\";"},{"lineNumber":122,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":124,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"SoonKeatNeo"},"content":"     * Delete the specified task from the list."},{"lineNumber":126,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param inputString User input string"},{"lineNumber":127,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param storage Storage object to remove from disk"},{"lineNumber":128,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"SoonKeatNeo"},"content":"    public String deleteTask(String inputString, Storage storage) {"},{"lineNumber":130,"author":{"gitId":"SoonKeatNeo"},"content":"        String message \u003d \"\";"},{"lineNumber":131,"author":{"gitId":"SoonKeatNeo"},"content":"        try {"},{"lineNumber":132,"author":{"gitId":"SoonKeatNeo"},"content":"            int taskId \u003d Integer.parseInt(String.valueOf(inputString.split(\" \")[1])) - 1;"},{"lineNumber":133,"author":{"gitId":"SoonKeatNeo"},"content":"            Task deletedTask \u003d taskList.remove(taskId);"},{"lineNumber":134,"author":{"gitId":"SoonKeatNeo"},"content":"            String typeOfTask \u003d deletedTask.getType();"},{"lineNumber":135,"author":{"gitId":"SoonKeatNeo"},"content":"            String completionOfTask \u003d (deletedTask.getDone() ? \"1\" : \"0\");"},{"lineNumber":136,"author":{"gitId":"SoonKeatNeo"},"content":"            String descriptionOfTask \u003d deletedTask.getDescription().strip();"},{"lineNumber":137,"author":{"gitId":"SoonKeatNeo"},"content":"            String oldString \u003d typeOfTask + \" | \" + completionOfTask + \" | \" + descriptionOfTask;"},{"lineNumber":138,"author":{"gitId":"SoonKeatNeo"},"content":"            if (deletedTask.getType() \u003d\u003d \"E\") {"},{"lineNumber":139,"author":{"gitId":"SoonKeatNeo"},"content":"                Event eventTask \u003d (Event) deletedTask;"},{"lineNumber":140,"author":{"gitId":"SoonKeatNeo"},"content":"                oldString +\u003d \" | \" + eventTask.getDate();"},{"lineNumber":141,"author":{"gitId":"SoonKeatNeo"},"content":"            } else if (deletedTask.getType() \u003d\u003d \"D\") {"},{"lineNumber":142,"author":{"gitId":"SoonKeatNeo"},"content":"                Deadline deadlineTask \u003d (Deadline) deletedTask;"},{"lineNumber":143,"author":{"gitId":"SoonKeatNeo"},"content":"                oldString +\u003d \" | \" + deadlineTask.getDate();"},{"lineNumber":144,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"SoonKeatNeo"},"content":"            storage.deleteReplaceTaskFromDisk(oldString, \"\");"},{"lineNumber":146,"author":{"gitId":"SoonKeatNeo"},"content":"            message +\u003d \"Okie! I\u0027ve deleted the task from your list:\\n\";"},{"lineNumber":147,"author":{"gitId":"SoonKeatNeo"},"content":"            message +\u003d deletedTask.toString();"},{"lineNumber":148,"author":{"gitId":"SoonKeatNeo"},"content":"            message +\u003d \"\\nThe size of your task list is now: \" + taskList.size();"},{"lineNumber":149,"author":{"gitId":"SoonKeatNeo"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":150,"author":{"gitId":"SoonKeatNeo"},"content":"            throw new InvalidTaskException();"},{"lineNumber":151,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"SoonKeatNeo"},"content":"        return message;"},{"lineNumber":153,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":155,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"SoonKeatNeo"},"content":"     * Prints the list of tasks in the list, including the status."},{"lineNumber":157,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":158,"author":{"gitId":"SoonKeatNeo"},"content":"    public String print() {"},{"lineNumber":159,"author":{"gitId":"SoonKeatNeo"},"content":"        if (taskList.size() \u003c 1) {"},{"lineNumber":160,"author":{"gitId":"SoonKeatNeo"},"content":"            return \"There are no tasks in your list! :c\";"},{"lineNumber":161,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"SoonKeatNeo"},"content":"        String message \u003d \"Tasks in your list are~: \\n\";"},{"lineNumber":163,"author":{"gitId":"SoonKeatNeo"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":164,"author":{"gitId":"SoonKeatNeo"},"content":"            Task task \u003d taskList.get(i);"},{"lineNumber":165,"author":{"gitId":"SoonKeatNeo"},"content":"            message +\u003d (i + 1) + \".\" + task + \"\\n\";"},{"lineNumber":166,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"SoonKeatNeo"},"content":"        return message;"},{"lineNumber":168,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":170,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"SoonKeatNeo"},"content":"     * Gets the current size of the task list."},{"lineNumber":172,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return An integer representing the number of items in the list"},{"lineNumber":173,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":174,"author":{"gitId":"SoonKeatNeo"},"content":"    public int getSize() {"},{"lineNumber":175,"author":{"gitId":"SoonKeatNeo"},"content":"        return taskList.size();"},{"lineNumber":176,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":178,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":179,"author":{"gitId":"SoonKeatNeo"},"content":"     * Initializes the task list from the data file."},{"lineNumber":180,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param fileContents The contents of the file in a given List"},{"lineNumber":181,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":182,"author":{"gitId":"SoonKeatNeo"},"content":"    public void initializeTasks(List\u003cString\u003e fileContents) {"},{"lineNumber":183,"author":{"gitId":"SoonKeatNeo"},"content":"        for (int i \u003d 0; i \u003c fileContents.size(); i++) {"},{"lineNumber":184,"author":{"gitId":"SoonKeatNeo"},"content":"            String line \u003d fileContents.get(i);"},{"lineNumber":185,"author":{"gitId":"SoonKeatNeo"},"content":"            if (line.length() \u003c 1) {"},{"lineNumber":186,"author":{"gitId":"SoonKeatNeo"},"content":"                continue;"},{"lineNumber":187,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":188,"author":{"gitId":"SoonKeatNeo"},"content":"            String[] lineArray \u003d line.split(\"\\\\|\");"},{"lineNumber":189,"author":{"gitId":"SoonKeatNeo"},"content":"            boolean isDone \u003d false;"},{"lineNumber":190,"author":{"gitId":"SoonKeatNeo"},"content":"            if (lineArray[1].strip().charAt(0) \u003d\u003d \u00271\u0027) {"},{"lineNumber":191,"author":{"gitId":"SoonKeatNeo"},"content":"                isDone \u003d true;"},{"lineNumber":192,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":193,"author":{"gitId":"SoonKeatNeo"},"content":"            if (lineArray[0].strip().charAt(0) \u003d\u003d \u0027T\u0027) {"},{"lineNumber":194,"author":{"gitId":"SoonKeatNeo"},"content":"                // todo"},{"lineNumber":195,"author":{"gitId":"SoonKeatNeo"},"content":"                Todo newTodo \u003d new Todo(lineArray[2].strip());"},{"lineNumber":196,"author":{"gitId":"SoonKeatNeo"},"content":"                if (isDone) {"},{"lineNumber":197,"author":{"gitId":"SoonKeatNeo"},"content":"                    newTodo.setDone();"},{"lineNumber":198,"author":{"gitId":"SoonKeatNeo"},"content":"                }"},{"lineNumber":199,"author":{"gitId":"SoonKeatNeo"},"content":"                taskList.add(newTodo);"},{"lineNumber":200,"author":{"gitId":"SoonKeatNeo"},"content":"            } else if (lineArray[0].strip().charAt(0) \u003d\u003d \u0027D\u0027) {"},{"lineNumber":201,"author":{"gitId":"SoonKeatNeo"},"content":"                // deadline"},{"lineNumber":202,"author":{"gitId":"SoonKeatNeo"},"content":"                Deadline newDeadline \u003d new Deadline(lineArray[2].strip(), lineArray[3].strip());"},{"lineNumber":203,"author":{"gitId":"SoonKeatNeo"},"content":"                if (isDone) {"},{"lineNumber":204,"author":{"gitId":"SoonKeatNeo"},"content":"                    newDeadline.setDone();"},{"lineNumber":205,"author":{"gitId":"SoonKeatNeo"},"content":"                }"},{"lineNumber":206,"author":{"gitId":"SoonKeatNeo"},"content":"                taskList.add(newDeadline);"},{"lineNumber":207,"author":{"gitId":"SoonKeatNeo"},"content":"            } else if (lineArray[0].strip().charAt(0) \u003d\u003d \u0027E\u0027) {"},{"lineNumber":208,"author":{"gitId":"SoonKeatNeo"},"content":"                // event"},{"lineNumber":209,"author":{"gitId":"SoonKeatNeo"},"content":"                Event newEvent \u003d new Event(lineArray[2].strip(), lineArray[3].strip());"},{"lineNumber":210,"author":{"gitId":"SoonKeatNeo"},"content":"                if (isDone) {"},{"lineNumber":211,"author":{"gitId":"SoonKeatNeo"},"content":"                    newEvent.setDone();"},{"lineNumber":212,"author":{"gitId":"SoonKeatNeo"},"content":"                }"},{"lineNumber":213,"author":{"gitId":"SoonKeatNeo"},"content":"                taskList.add(newEvent);"},{"lineNumber":214,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":215,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":217,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":218}},{"path":"src/main/java/soonkeatneo/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke.task;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":" * Implementation for tasks with a specified end-date."},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":" *  @author Soon Keat Neo"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":" *  @version CS2103T AY20/21 Sem 2 iP"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"public class Deadline extends Task {"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"    private final LocalDate lastDate;"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"     * Creates a new Deadline object with the given parameters."},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param taskName Description of the Deadline object"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param lastDate Actual deadline of the object"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"    public Deadline(String taskName, String lastDate) {"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"        super(taskName, \"D\");"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"        this.lastDate \u003d LocalDate.parse(lastDate);"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"     * Returns the date of the instance."},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return date of the object"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"    public LocalDate getDate() {"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"        return this.lastDate;"},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":33,"author":{"gitId":"SoonKeatNeo"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":"        String dayOfWeek \u003d this.lastDate.getDayOfWeek().toString().toLowerCase();"},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":"        dayOfWeek \u003d dayOfWeek.substring(0, 1).toUpperCase() + dayOfWeek.substring(1);"},{"lineNumber":37,"author":{"gitId":"SoonKeatNeo"},"content":"        String date \u003d this.lastDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dayOfWeek + \", \" + date + \")\";"},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":40}},{"path":"src/main/java/soonkeatneo/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke.task;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":" * Implementation for tasks with a given start-time and end-time."},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":" *  @author Soon Keat Neo"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":" *  @version CS2103T AY20/21 Sem 2 iP"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"public class Event extends Task {"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"    private final LocalDate startAndEnd;"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"     * Creates a new Event object with the given parameters."},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param taskName Description of the Event object"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param startAndEnd Actual date of the object"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"    public Event(String taskName, String startAndEnd) {"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"        super(taskName, \"E\");"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"        this.startAndEnd \u003d LocalDate.parse(startAndEnd);"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"     * Returns the date of the instance of the event"},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return the event date"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"    public LocalDate getDate() {"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"        return this.startAndEnd;"},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":33,"author":{"gitId":"SoonKeatNeo"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":"        String dayOfWeek \u003d this.startAndEnd.getDayOfWeek().toString().toLowerCase();"},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":"        dayOfWeek \u003d dayOfWeek.substring(0, 1).toUpperCase() + dayOfWeek.substring(1);"},{"lineNumber":37,"author":{"gitId":"SoonKeatNeo"},"content":"        String date \u003d this.startAndEnd.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + dayOfWeek + \", \" + date + \")\";"},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":40}},{"path":"src/main/java/soonkeatneo/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke.task;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":" * Implementation for the Tasks that the chat-bot stores."},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":" * @author Soon Keat Neo"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":" * @version CS2103T AY20/21 Sem 2 iP"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"    protected String type;"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"    protected boolean isDone;"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"     * Creates a new Task object with the given parameters."},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param description Description of the Task object"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param type Type of object to be made"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"    public Task(String description, String type) {"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"        this.isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"        this.type \u003d type;"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"    public String getDescription() {"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"        return this.description;"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"    public Task setDone() {"},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"        this.isDone \u003d true;"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"        return this;"},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":33,"author":{"gitId":"SoonKeatNeo"},"content":"    public String getType() {"},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"        return this.type;"},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":37,"author":{"gitId":"SoonKeatNeo"},"content":"    public boolean getDone() {"},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"        return this.isDone;"},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":41,"author":{"gitId":"SoonKeatNeo"},"content":"    public String getStatusIcon() {"},{"lineNumber":42,"author":{"gitId":"SoonKeatNeo"},"content":"        return (isDone ? \"\\u2718\" : \" \"); //return X for completed tasks, else whitespace"},{"lineNumber":43,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":45,"author":{"gitId":"SoonKeatNeo"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"SoonKeatNeo"},"content":"    public String toString() {"},{"lineNumber":47,"author":{"gitId":"SoonKeatNeo"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.getDescription();"},{"lineNumber":48,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":49}},{"path":"src/main/java/soonkeatneo/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke.task;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":" * Implementation for {@Task} with no schedules assigned."},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":" * @author Soon Keat Neo"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":" * @version CS2103T AY20/21 Sem 2 iP"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"public class Todo extends Task {"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"    public Todo(String taskName) {"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"        super(taskName, \"T\");"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":18}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-shape: \u0026quot;M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z\u0026quot;\u0026quot;M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z\u0026quot;; -fx-padding: 30; -fx-background-color: #00FFFF; -fx-background-insets: 5;\" text\u003d\"dialogBox\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"SoonKeatNeo":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"soonkeatneo.duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send!\" /\u003e"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" promptText\u003d\"Say something... (I\u0027m giving up on you)\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" fitToWidth\u003d\"true\"\u003e"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"SoonKeatNeo":19}},{"path":"src/test/java/soonkeatneo/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"import soonkeatneo.duke.task.Deadline;"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"public class DeadlineTest {"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"    public void createDeadline_validDate_success() {"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"        assertDoesNotThrow(() -\u003e new Deadline(\"test\", \"1999-12-25\"));"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"    public void createDeadline_invalidDateFormat_exceptionThrown() {"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"        assertThrows(java.time.format.DateTimeParseException.class, () -\u003e {"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"            new Deadline(\"test\", \"abcd\");"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"        });"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"    public void toString_validInputs_correctOutputPrinted() {"},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"        String expected \u003d new Deadline(\"some item\", \"2021-01-01\").toString();"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"        assertEquals(\"[D][ ] some item (by: Friday, Jan 1 2021)\", expected);"},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":31}},{"path":"src/test/java/soonkeatneo/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package soonkeatneo.duke;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"import soonkeatneo.duke.task.Event;"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"public class EventTest {"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"    public void createEvent_validDate_success() {"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"        assertDoesNotThrow(() -\u003e new Event(\"test\", \"1999-12-25\"));"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"    public void createEvent_invalidDateFormat_exceptionThrown() {"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"        assertThrows(java.time.format.DateTimeParseException.class, () -\u003e {"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"            new Event(\"test\", \"abcd\");"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"        });"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"    public void toString_validInputs_correctOutputPrinted() {"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"        String expected \u003d new Event(\"some item\", \"2021-01-01\").toString();"},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"        assertEquals(\"[E][ ] some item (at: Friday, Jan 1 2021)\", expected);"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"todo eat cake"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":"list"},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"todo"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"deadline"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"deadline shoot pancakes /by 2021-01-24"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"list"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"list"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"todo go to school"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"deadline return book /by 2021-01-27"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"list"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"deadline"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"event project meeting /at 2021-01-15"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"list"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"done 4"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"event"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"todo "},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"todo play cards against humanity"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"deadline submit cs2103 assignment /by 2021-02-01"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"event nomination of hawker culture /at 2021-03-01"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"list"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"delete 5"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"delete 2"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"done 7"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"list"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"bye"}],"authorContributionMap":{"SoonKeatNeo":26}}]
