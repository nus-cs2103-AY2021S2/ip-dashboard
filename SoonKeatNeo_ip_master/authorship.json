[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":" * Implementation for tasks with a specified end-date."},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"    private final String lastDate;"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"    public Deadline(String taskName, String lastDate) {"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"        super(taskName);"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"        this.lastDate \u003d lastDate;"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.lastDate + \")\";"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":15}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"import java.text.NumberFormat;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"import java.util.regex.Matcher;"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"import java.util.regex.Pattern;"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":" * Main implementation for the Duke chat-bot."},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":" * @author Soon Keat Neo"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":" * @version CS2103T AY20/21 Sem 1 iP v0.1"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"    /** Allows for easy change of the bot name in future. **/"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"    final private static String BOTNAME \u003d \"DukeNukem\";"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"    final private static String SEPARATORS \u003d \"~~~~~~~~~~~~~~~~~~~~~~\";"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"    final private static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"        greetUser();"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"        listenInput();"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"        quit();"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"     * Greets user with a message on the screen when the function is called."},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"    public static void greetUser() {"},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"        printMessage(\"Henlooooo~! My name is \" + BOTNAME);"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"        printMessage(\"What can I do for you today? :)\");"},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":33,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"     * Prints separators providing for clarity of on-screen text."},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":"    public static void printSeparators() {"},{"lineNumber":37,"author":{"gitId":"SoonKeatNeo"},"content":"        System.out.println(SEPARATORS);"},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"SoonKeatNeo"},"content":"     * Print the requested message in the bot\u0027s formatting"},{"lineNumber":42,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param message The message to be printed"},{"lineNumber":43,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"SoonKeatNeo"},"content":"    public static void printMessage(String message) {"},{"lineNumber":45,"author":{"gitId":"SoonKeatNeo"},"content":"        System.out.println(\"    \" + message);"},{"lineNumber":46,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":48,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"SoonKeatNeo"},"content":"     * Prints the task added and the total size of the list."},{"lineNumber":50,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param addedTask Task that was added to the list."},{"lineNumber":51,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"SoonKeatNeo"},"content":"    public static void addedTaskReply(Task addedTask) {"},{"lineNumber":53,"author":{"gitId":"SoonKeatNeo"},"content":"        printMessage(\"Wakarimashita! Task added to list:\");"},{"lineNumber":54,"author":{"gitId":"SoonKeatNeo"},"content":"        printMessage(addedTask.toString());"},{"lineNumber":55,"author":{"gitId":"SoonKeatNeo"},"content":"        printMessage(\"The size of your task list is now: \" + taskList.size());"},{"lineNumber":56,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":58,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"SoonKeatNeo"},"content":"     * Mark the task passed to the method as complete."},{"lineNumber":60,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param inputString User input string."},{"lineNumber":61,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"SoonKeatNeo"},"content":"    public static void completeTask(String inputString) {"},{"lineNumber":63,"author":{"gitId":"SoonKeatNeo"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"SoonKeatNeo"},"content":"            int taskId \u003d Integer.parseInt(String.valueOf(inputString.split(\" \")[1])) - 1;"},{"lineNumber":65,"author":{"gitId":"SoonKeatNeo"},"content":"            Task doneTask \u003d taskList.get(taskId).setDone();"},{"lineNumber":66,"author":{"gitId":"SoonKeatNeo"},"content":"            printMessage(\"Great~! Task completed:\");"},{"lineNumber":67,"author":{"gitId":"SoonKeatNeo"},"content":"            printMessage(doneTask.toString());"},{"lineNumber":68,"author":{"gitId":"SoonKeatNeo"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":69,"author":{"gitId":"SoonKeatNeo"},"content":"            throw new InvalidTaskException();"},{"lineNumber":70,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":73,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"SoonKeatNeo"},"content":"     * Delete the specified task from the list."},{"lineNumber":75,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param inputString User input string."},{"lineNumber":76,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"SoonKeatNeo"},"content":"    public static void deleteTask(String inputString) {"},{"lineNumber":78,"author":{"gitId":"SoonKeatNeo"},"content":"        try {"},{"lineNumber":79,"author":{"gitId":"SoonKeatNeo"},"content":"            int taskId \u003d Integer.parseInt(String.valueOf(inputString.split(\" \")[1])) - 1;"},{"lineNumber":80,"author":{"gitId":"SoonKeatNeo"},"content":"            Task deletedTask \u003d taskList.remove(taskId);"},{"lineNumber":81,"author":{"gitId":"SoonKeatNeo"},"content":"            printMessage(\"Okie! I\u0027ve deleted the task from your list:\");"},{"lineNumber":82,"author":{"gitId":"SoonKeatNeo"},"content":"            printMessage(deletedTask.toString());"},{"lineNumber":83,"author":{"gitId":"SoonKeatNeo"},"content":"            printMessage(\"The size of your task list is now: \" + taskList.size());"},{"lineNumber":84,"author":{"gitId":"SoonKeatNeo"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":85,"author":{"gitId":"SoonKeatNeo"},"content":"            throw new InvalidTaskException();"},{"lineNumber":86,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":89,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"SoonKeatNeo"},"content":"     * Listens to the user\u0027s input, and passes it to the input handler."},{"lineNumber":91,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"SoonKeatNeo"},"content":"    public static void listenInput() {"},{"lineNumber":93,"author":{"gitId":"SoonKeatNeo"},"content":"        Scanner scannerObject \u003d new Scanner(System.in);"},{"lineNumber":94,"author":{"gitId":"SoonKeatNeo"},"content":"        boolean stillListening \u003d true;"},{"lineNumber":95,"author":{"gitId":"SoonKeatNeo"},"content":"        while (stillListening) {"},{"lineNumber":96,"author":{"gitId":"SoonKeatNeo"},"content":"            printSeparators();"},{"lineNumber":97,"author":{"gitId":"SoonKeatNeo"},"content":"            String inputString \u003d scannerObject.nextLine().trim();;"},{"lineNumber":98,"author":{"gitId":"SoonKeatNeo"},"content":"            printSeparators();"},{"lineNumber":99,"author":{"gitId":"SoonKeatNeo"},"content":"            try {"},{"lineNumber":100,"author":{"gitId":"SoonKeatNeo"},"content":"                handleInput(inputString);"},{"lineNumber":101,"author":{"gitId":"SoonKeatNeo"},"content":"            } catch (InvalidCommandException | InvalidInputException | InvalidTaskException e) {"},{"lineNumber":102,"author":{"gitId":"SoonKeatNeo"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":103,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":107,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"SoonKeatNeo"},"content":"     * Handle the input and passes to the relevant methods."},{"lineNumber":109,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param inputString User input string to be handled."},{"lineNumber":110,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"SoonKeatNeo"},"content":"    public static void handleInput(String inputString) {"},{"lineNumber":112,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":113,"author":{"gitId":"SoonKeatNeo"},"content":"        if (inputString.equals(\"list\")) {"},{"lineNumber":114,"author":{"gitId":"SoonKeatNeo"},"content":"            printList();"},{"lineNumber":115,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (inputString.equals(\"bye\")) {"},{"lineNumber":116,"author":{"gitId":"SoonKeatNeo"},"content":"            quit();"},{"lineNumber":117,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (inputString.startsWith(\"done\")) {"},{"lineNumber":118,"author":{"gitId":"SoonKeatNeo"},"content":"            completeTask(inputString);"},{"lineNumber":119,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (inputString.startsWith(\"delete\")) {"},{"lineNumber":120,"author":{"gitId":"SoonKeatNeo"},"content":"            deleteTask(inputString);"},{"lineNumber":121,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (inputString.startsWith(\"todo\")) {"},{"lineNumber":122,"author":{"gitId":"SoonKeatNeo"},"content":"            try {"},{"lineNumber":123,"author":{"gitId":"SoonKeatNeo"},"content":"                Todo newTodo \u003d new Todo(inputString.substring(5));"},{"lineNumber":124,"author":{"gitId":"SoonKeatNeo"},"content":"                taskList.add(newTodo);"},{"lineNumber":125,"author":{"gitId":"SoonKeatNeo"},"content":"                addedTaskReply(newTodo);"},{"lineNumber":126,"author":{"gitId":"SoonKeatNeo"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":127,"author":{"gitId":"SoonKeatNeo"},"content":"                throw new InvalidInputException();"},{"lineNumber":128,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (inputString.startsWith(\"event\")) {"},{"lineNumber":130,"author":{"gitId":"SoonKeatNeo"},"content":"            try {"},{"lineNumber":131,"author":{"gitId":"SoonKeatNeo"},"content":"                String[] eventString \u003d inputString.split(\"/at\");"},{"lineNumber":132,"author":{"gitId":"SoonKeatNeo"},"content":"                String taskString \u003d eventString[0].substring(6).trim();"},{"lineNumber":133,"author":{"gitId":"SoonKeatNeo"},"content":"                String eventTime \u003d eventString[1].trim();"},{"lineNumber":134,"author":{"gitId":"SoonKeatNeo"},"content":"                Event newEvent \u003d new Event(taskString, eventTime);"},{"lineNumber":135,"author":{"gitId":"SoonKeatNeo"},"content":"                taskList.add(newEvent);"},{"lineNumber":136,"author":{"gitId":"SoonKeatNeo"},"content":"                addedTaskReply(newEvent);"},{"lineNumber":137,"author":{"gitId":"SoonKeatNeo"},"content":"            } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {"},{"lineNumber":138,"author":{"gitId":"SoonKeatNeo"},"content":"                throw new InvalidInputException();"},{"lineNumber":139,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":140,"author":{"gitId":"SoonKeatNeo"},"content":"        } else if (inputString.startsWith(\"deadline\")) {"},{"lineNumber":141,"author":{"gitId":"SoonKeatNeo"},"content":"            try {"},{"lineNumber":142,"author":{"gitId":"SoonKeatNeo"},"content":"                String[] eventString \u003d inputString.split(\"/by\");"},{"lineNumber":143,"author":{"gitId":"SoonKeatNeo"},"content":"                String taskString \u003d eventString[0].substring(9).trim();"},{"lineNumber":144,"author":{"gitId":"SoonKeatNeo"},"content":"                String deadlineTime \u003d eventString[1].trim();"},{"lineNumber":145,"author":{"gitId":"SoonKeatNeo"},"content":"                Deadline newDeadline \u003d new Deadline(taskString, deadlineTime);"},{"lineNumber":146,"author":{"gitId":"SoonKeatNeo"},"content":"                taskList.add(newDeadline);"},{"lineNumber":147,"author":{"gitId":"SoonKeatNeo"},"content":"                addedTaskReply(newDeadline);"},{"lineNumber":148,"author":{"gitId":"SoonKeatNeo"},"content":"            } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {"},{"lineNumber":149,"author":{"gitId":"SoonKeatNeo"},"content":"                throw new InvalidInputException();"},{"lineNumber":150,"author":{"gitId":"SoonKeatNeo"},"content":"            }"},{"lineNumber":151,"author":{"gitId":"SoonKeatNeo"},"content":"        } else {"},{"lineNumber":152,"author":{"gitId":"SoonKeatNeo"},"content":"            throw new InvalidCommandException();"},{"lineNumber":153,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":156,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"SoonKeatNeo"},"content":"     * Prints the list of tasks in the list, including the status."},{"lineNumber":158,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"SoonKeatNeo"},"content":"    public static void printList() {"},{"lineNumber":160,"author":{"gitId":"SoonKeatNeo"},"content":"        if (taskList.size() \u003c 1) {"},{"lineNumber":161,"author":{"gitId":"SoonKeatNeo"},"content":"            printMessage(\"There are no tasks in your list! :c\");"},{"lineNumber":162,"author":{"gitId":"SoonKeatNeo"},"content":"            return;"},{"lineNumber":163,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"SoonKeatNeo"},"content":"        System.out.println(\"    Tasks in your list are~: \");"},{"lineNumber":165,"author":{"gitId":"SoonKeatNeo"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":166,"author":{"gitId":"SoonKeatNeo"},"content":"            Task task \u003d taskList.get(i);"},{"lineNumber":167,"author":{"gitId":"SoonKeatNeo"},"content":"            System.out.println(\"    \" + (i + 1) + \".\" + task);"},{"lineNumber":168,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":171,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":172,"author":{"gitId":"SoonKeatNeo"},"content":"     * Quits the program and provides provisions for clean-up."},{"lineNumber":173,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":174,"author":{"gitId":"SoonKeatNeo"},"content":"    public static void quit() {"},{"lineNumber":175,"author":{"gitId":"SoonKeatNeo"},"content":"        printMessage(\"Hope you had an enjoyable experience! Good-bye~\");"},{"lineNumber":176,"author":{"gitId":"SoonKeatNeo"},"content":"        System.exit(0);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":173,"-":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":" * Implementation for tasks with a given start-time and end-time."},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"    private final String startAndEnd;"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"    public Event(String taskName, String startAndEnd) {"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"        super(taskName);"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"        this.startAndEnd \u003d startAndEnd;"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.startAndEnd + \")\";"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":16}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"public class InvalidCommandException extends IllegalArgumentException {"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":"    public InvalidCommandException() {"},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"        super(\"    This isn\u0027t a valid command!\");"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":5}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"public class InvalidInputException extends IllegalArgumentException {"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":"    public InvalidInputException() {"},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"        super(\"    Your input format doesn\u0027t seem to be valid for this command! Please try it again :c\");"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":5}},{"path":"src/main/java/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"public class InvalidTaskException extends IllegalArgumentException {"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":"    public InvalidTaskException() {"},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"        super(\"    Hmm... Looks like the task number isn\u0027t correct. Check it and try again!\");"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":" * Implementation for the Tasks that the chat-bot stores."},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":" * @author Soon Keat Neo"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":" * @version CS2103T AY20/21 Sem 1 iP"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"    public Task(String description) {"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"        this.description \u003d description;"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"    public Task setDone() {"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"        this.isDone \u003d true;"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"        return this;"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"    public String getStatusIcon() {"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"        return (isDone ? \"\\u2718\" : \" \"); //return X for completed tasks, else whitespace"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"        return \"[\" +getStatusIcon() + \"] \" + this.description;"},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":28}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":" * Implementation for tasks with no schedules assigned."},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"    public Todo(String taskName) {"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"        super(taskName);"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"todo eat cake"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":"list"},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"todo"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"deadline"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"deadline shoot pancakes /by Tuesday"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"list"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"list"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"todo go to school"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"deadline return book /by Sunday"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"list"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"deadline"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"list"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"done 4"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"event"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"todo "},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"todo play cards against humanity"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"deadline submit cs2103 assignment /by tomorrow"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"event nomination of hawker culture /at Sunday wholeday"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"list"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"delete 5"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"delete 2"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"done 7"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"list"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"bye"}],"authorContributionMap":{"SoonKeatNeo":26}}]
