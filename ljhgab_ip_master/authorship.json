[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import duke.exception.DukeException;"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"    private final Storage storage;"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"    private final Ui ui;"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    Duke(String filePath) {"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"        ui \u003d new Ui();"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"            tasks \u003d new TaskList(storage.syncFromFile());"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"        } catch (DukeException e) {"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"        new Duke(System.getProperty(\"user.dir\") + \"/duke.txt\").run();"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    public void run() {"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"        boolean isOver \u003d false;"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"        ui.showWelcome();"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"        while (!isOver) {"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"            try {"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"                String input \u003d ui.readCommand();"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"                ui.printLine();"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"                Command command \u003d Parser.parseCommand(input);"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"                command.execute(tasks, ui, storage);"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"                isOver \u003d command.isExit();"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"                ui.printLine();"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"            } catch (DukeException e) {"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":3,"ljhgab":43}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"public abstract class AddCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"    public void addThisTask(TaskList tasks, Task task, Storage storage) {"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"        System.out.println(\" Added: \");"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"        tasks.add(task);"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"        storage.updateInFile(tasks);"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"        System.out.println(\"  \" + task);"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"        System.out.println(\" Now you have \" + tasks.size() + \" tasks.\");"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"    public abstract Task getTask() throws DukeException;"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"    public boolean isExit() {"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"        return false;"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":23}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"public abstract class Command {"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    public abstract boolean isExit();"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":13}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import duke.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import duke.exception.DescriptionMissingException;"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import duke.exception.InvalidDateTimeException;"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import duke.parser.Parser;"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"import java.time.LocalDateTime;"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"public class DeadlineCommand extends AddCommand {"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    String fullCommand;"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    public DeadlineCommand(String fullCommand) {"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"        Deadline deadline \u003d getTask();"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"        super.addThisTask(tasks, deadline, storage);"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"    public Deadline getTask()"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"            throws DescriptionMissingException, InvalidDateTimeException {"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"        String nameDeadline \u003d fullCommand.substring(8).strip();"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"        if (nameDeadline.equals(\"\")) {"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"            throw new DescriptionMissingException(\"Argument missing!\");"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"        String[] nameAndDeadline \u003d nameDeadline.split(\"/by\");"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"        if (nameAndDeadline.length \u003c 2) {"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"            throw new DescriptionMissingException(\"Argument missing!\");"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"        String name \u003d nameAndDeadline[0].strip();"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"        String deadline \u003d nameAndDeadline[1].strip();"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"        LocalDateTime cutOffTime \u003d Parser.parseDateTime(deadline);"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"        return new Deadline(name, cutOffTime);"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":46}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import duke.exception.TaskIndexOutOfBoundException;"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"public class DeleteCommand extends IndexCommand {"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"    public DeleteCommand(String fullCommand) {"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"        super(fullCommand);"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"        int index \u003d getIndex();"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"        if (index \u003c tasks.size()) {"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"            Task removingTask \u003d tasks.get(index);"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"            tasks.remove(index);"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"            storage.updateInFile(tasks);"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"            System.out.println(\" Following task is removed:\");"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"            System.out.println(\"  \" + removingTask);"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"            System.out.println(\" Now you have \" + tasks.size() + \" tasks.\");"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"            throw new TaskIndexOutOfBoundException(\"There is no task numbered \" + (index + 1) + \"!\");"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":30}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import duke.exception.TaskIndexOutOfBoundException;"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"public class DoneCommand extends IndexCommand {"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"    public DoneCommand(String fullCommand) {"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"        super(fullCommand);"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"        int index \u003d getIndex();"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"        if (index \u003c tasks.size()) {"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"            Task completedTask \u003d tasks.get(index);"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"            completedTask.complete();"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"            storage.updateInFile(tasks);"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"            System.out.println(\" Marked. How cool is that?\");"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"            System.out.println(\"  \" + completedTask);"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"        } else {"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"            throw new TaskIndexOutOfBoundException(\"There is no task numbered \" + (index + 1) + \"!\");"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":28}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import duke.task.Event;"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import duke.exception.DescriptionMissingException;"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import duke.exception.InvalidDateTimeException;"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import duke.parser.Parser;"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import java.time.LocalDateTime;"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"public class EventCommand extends AddCommand {"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    String fullCommand;"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"    public EventCommand(String fullCommand) {"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"        Event event \u003d getTask();"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"        super.addThisTask(tasks, event, storage);"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"    public Event getTask() throws DescriptionMissingException, InvalidDateTimeException {"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"        String nameDate \u003d fullCommand.substring(5).strip();"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"        if (nameDate.equals(\"\")) {"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"            throw new DescriptionMissingException(\"Argument missing!\");"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"        String[] nameAndDate \u003d nameDate.split(\"/at\");"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"        if (nameAndDate.length \u003c 2) {"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"            throw new DescriptionMissingException(\"Argument missing!\");"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"        String name \u003d nameAndDate[0].strip();"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"        String Date \u003d nameAndDate[1].strip();"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"        LocalDateTime startTime \u003d Parser.parseDateTime(Date);"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"        return new Event(name, startTime);"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":44}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"public class ExitCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"    public ExitCommand() {}"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"        ui.sayGoodBye();"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    public boolean isExit() {"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"        return true;"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":19}},{"path":"src/main/java/duke/command/IndexCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import duke.exception.DescriptionMissingException;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"public abstract class IndexCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"    protected String fullCommand;"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"    public IndexCommand(String fullCommand) {"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    public int getIndex() throws DescriptionMissingException {"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"        String[] doneInstructions \u003d fullCommand.strip().split(\" \");"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"        if (doneInstructions.length !\u003d 2) {"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"            throw new DescriptionMissingException(\"Argument missing!\");"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"            try {"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"                String indexString \u003d doneInstructions[1].strip();"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"                return Integer.parseInt(indexString) - 1;"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"                throw new DescriptionMissingException(\"Invalid argument!\");"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"    public boolean isExit() {"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"        return false;"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":31}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"public class ListCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"    public ListCommand() {}"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"        ui.listTasks(tasks);"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    public boolean isExit() {"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"        return false;"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":19}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import duke.exception.DescriptionMissingException;"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"public class TodoCommand extends AddCommand {"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"    String fullCommand;"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    public TodoCommand(String fullCommand) {"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DescriptionMissingException {"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"        Todo todo \u003d getTask();"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"        super.addThisTask(tasks, todo, storage);"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"    public Todo getTask() throws DescriptionMissingException {"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"        String name \u003d fullCommand.substring(4).strip();"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"        if (name.equals(\"\")) {"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"            throw new DescriptionMissingException(\"Argument missing!\");"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"            return new Todo(name);"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":31}},{"path":"src/main/java/duke/exception/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"public class CommandNotFoundException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"    public CommandNotFoundException(String message) {"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":7}},{"path":"src/main/java/duke/exception/DescriptionMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"public class DescriptionMissingException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"    public DescriptionMissingException(String message) {"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":7}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"    public DukeException(String message) {"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":7}},{"path":"src/main/java/duke/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"public class InvalidDateTimeException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"    public InvalidDateTimeException(String message) {"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":7}},{"path":"src/main/java/duke/exception/TaskIndexOutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"public class TaskIndexOutOfBoundException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"    public TaskIndexOutOfBoundException(String message) {"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import duke.command.TodoCommand;"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import duke.command.EventCommand;"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import duke.command.ListCommand;"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import duke.command.DoneCommand;"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import duke.command.ExitCommand;"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import duke.exception.DukeException;"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import duke.exception.CommandNotFoundException;"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"import duke.exception.InvalidDateTimeException;"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"import java.time.DateTimeException;"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"import java.time.LocalDate;"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"import java.time.LocalTime;"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"import java.time.LocalDateTime;"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"public class Parser {"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    public Parser() {}"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"    public static Command parseCommand(String input) throws DukeException {"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"        int endIndex \u003d input.indexOf(\" \");"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"        String potentialCommand \u003d (endIndex \u003d\u003d -1) ? input : input.substring(0, endIndex);"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"        Command command;"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"        if (potentialCommand.equalsIgnoreCase(\"TODO\")) {"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"            command \u003d new TodoCommand(input);"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"        } else if (potentialCommand.equalsIgnoreCase(\"DEADLINE\")) {"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"            command \u003d new DeadlineCommand(input);"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"        } else if (potentialCommand.equalsIgnoreCase(\"EVENT\")) {"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"            command \u003d new EventCommand(input);"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"        } else if (potentialCommand.equalsIgnoreCase(\"LIST\")) {"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"            command \u003d new ListCommand();"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"        } else if (potentialCommand.equalsIgnoreCase(\"DONE\")) {"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"            command \u003d new DoneCommand(input);"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"        } else if (potentialCommand.equalsIgnoreCase(\"BYE\")) {"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"            command \u003d new ExitCommand();"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"        } else if (potentialCommand.equalsIgnoreCase(\"DELETE\")) {"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"            command \u003d new DeleteCommand(input);"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"        } else {"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"            throw new CommandNotFoundException(\"What do you mean? I do not know this command.\");"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"        return command;"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws InvalidDateTimeException {"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"        String[] dateAndTime \u003d dateTime.strip().split(\" \");"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"        LocalDateTime parsedDateTime;"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"        if (dateAndTime.length !\u003d 2) {"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"            throw new InvalidDateTimeException(\"Input date and time is not complete.\");"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"        String date \u003d dateAndTime[0].strip();"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"        String time \u003d dateAndTime[1].strip();"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"        parsedDateTime \u003d LocalDateTime.of(parseDate(date), parseTime(time));"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"        return parsedDateTime;"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"    public static LocalDate parseDate(String date) throws InvalidDateTimeException {"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"        String[] yearMonthDay \u003d date.strip().split(\"-\");"},{"lineNumber":67,"author":{"gitId":"ljhgab"},"content":"        if (yearMonthDay.length !\u003d 3) {"},{"lineNumber":68,"author":{"gitId":"ljhgab"},"content":"            throw new InvalidDateTimeException(\"Input date is not valid.\");"},{"lineNumber":69,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"ljhgab"},"content":"        String year \u003d yearMonthDay[0].strip();"},{"lineNumber":71,"author":{"gitId":"ljhgab"},"content":"        String month \u003d yearMonthDay[1].strip();"},{"lineNumber":72,"author":{"gitId":"ljhgab"},"content":"        String day \u003d yearMonthDay[2].strip();"},{"lineNumber":73,"author":{"gitId":"ljhgab"},"content":"        if (year.length() \u003d\u003d 4 \u0026\u0026 month.length() \u003d\u003d 2 \u0026\u0026 day.length() \u003d\u003d 2) {"},{"lineNumber":74,"author":{"gitId":"ljhgab"},"content":"            try {"},{"lineNumber":75,"author":{"gitId":"ljhgab"},"content":"                return LocalDate.parse(date);"},{"lineNumber":76,"author":{"gitId":"ljhgab"},"content":"            } catch (DateTimeException e) {"},{"lineNumber":77,"author":{"gitId":"ljhgab"},"content":"                throw new InvalidDateTimeException(\"Input date is not valid.\");"},{"lineNumber":78,"author":{"gitId":"ljhgab"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"ljhgab"},"content":"        } else {"},{"lineNumber":80,"author":{"gitId":"ljhgab"},"content":"            throw new InvalidDateTimeException(\"Input date is not valid.\");"},{"lineNumber":81,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":84,"author":{"gitId":"ljhgab"},"content":"    public static LocalTime parseTime(String time) throws InvalidDateTimeException {"},{"lineNumber":85,"author":{"gitId":"ljhgab"},"content":"        String hour \u003d time.strip().substring(0, 2);"},{"lineNumber":86,"author":{"gitId":"ljhgab"},"content":"        String minute \u003d time.strip().substring(2, 4);"},{"lineNumber":87,"author":{"gitId":"ljhgab"},"content":"        try {"},{"lineNumber":88,"author":{"gitId":"ljhgab"},"content":"            return LocalTime.parse(hour + \":\" + minute);"},{"lineNumber":89,"author":{"gitId":"ljhgab"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":90,"author":{"gitId":"ljhgab"},"content":"            throw new InvalidDateTimeException(\"Input time is not valid.\");"},{"lineNumber":91,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":93}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import duke.task.Todo;"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import duke.task.Event;"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import duke.exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import duke.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import duke.parser.Parser;"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import java.io.File;"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import java.io.FileWriter;"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"import java.io.IOException;"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"import java.time.LocalDateTime;"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"import java.util.ArrayList;"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"import java.util.Scanner;"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"public class Storage {"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"    private final String filePath;"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    public Storage(String path) {"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"        filePath \u003d path;"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"    public void createFileNotExists(File file) throws IOException {"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"        file.createNewFile();"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"    public ArrayList\u003cTask\u003e syncFromFile() throws DukeException {"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"            File f \u003d new File(filePath);"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"            if (!f.exists()) {"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"                createFileNotExists(f);"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"            Scanner sc \u003d new Scanner(f);"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"            while (sc.hasNext()) {"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"                String line \u003d sc.nextLine();"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"                String[] keyWords \u003d line.split(\" \\\\| \");"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"                String taskType \u003d keyWords[0].strip();"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"                String taskName;"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"                String taskStatus;"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"                Task thisTask;"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"                if (taskType.equals(\"T\")) {"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"                    taskName \u003d keyWords[2];"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"                    thisTask \u003d new Todo(taskName);"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"                } else if (taskType.equals(\"D\")) {"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"                    taskName \u003d keyWords[2];"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"                    LocalDateTime cutOffDate \u003d Parser.parseDateTime(keyWords[3]);"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"                    thisTask \u003d new Deadline(taskName, cutOffDate);"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"                } else {"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"                    taskName \u003d keyWords[2];"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"                    LocalDateTime startDate \u003d Parser.parseDateTime(keyWords[3]);"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"                    thisTask \u003d new Event(taskName, startDate);"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"                }"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"                taskStatus \u003d keyWords[1].strip();"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"                if (taskStatus.equals(\"1\")) {"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"                    thisTask.complete();"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"                tasks.add(thisTask);"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"ljhgab"},"content":"            return tasks;"},{"lineNumber":68,"author":{"gitId":"ljhgab"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":69,"author":{"gitId":"ljhgab"},"content":"            throw new DukeException(\"File not found!\");"},{"lineNumber":70,"author":{"gitId":"ljhgab"},"content":"        } catch (IOException e) {"},{"lineNumber":71,"author":{"gitId":"ljhgab"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":72,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":75,"author":{"gitId":"ljhgab"},"content":"    public void updateInFile(TaskList tasks) {"},{"lineNumber":76,"author":{"gitId":"ljhgab"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"ljhgab"},"content":"            FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":78,"author":{"gitId":"ljhgab"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":79,"author":{"gitId":"ljhgab"},"content":"                fw.write(tasks.get(i).toFileString() + \"\\n\");"},{"lineNumber":80,"author":{"gitId":"ljhgab"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"ljhgab"},"content":"            fw.close();"},{"lineNumber":82,"author":{"gitId":"ljhgab"},"content":"        } catch (IOException e) {"},{"lineNumber":83,"author":{"gitId":"ljhgab"},"content":"            System.out.println(\"Has no targeted file in: \" + e.getMessage());"},{"lineNumber":84,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":87,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":88,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":88}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"    protected LocalDateTime cutOffTime;"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"    public Deadline(String name, LocalDateTime cutOff) {"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"        super(name);"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"        cutOffTime \u003d cutOff;"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"                + cutOffTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyy HH:mm\"))+ \")\";"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"    public String toFileString() {"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"        return \"D \" + super.toFileString() + \" | \""},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"                + cutOffTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"}"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":""}],"authorContributionMap":{"ljhgab":26}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"    protected LocalDateTime startTime;"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"    public Event(String name, LocalDateTime eventStartTime) {"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"        super(name);"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"        startTime \u003d eventStartTime;"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"                + startTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyy HH:mm\")) + \")\";"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"    public String toFileString() {"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"        return \"E \" + super.toFileString() + \" | \""},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"                + startTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"    protected String name;"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"    public Task(String taskName) {"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"        name \u003d taskName;"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"        isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"     * This is the setter to for the \"isDone\""},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"     * status of the Task."},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    public void complete() {"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"        isDone \u003d true;"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"     * This method is the getter of status."},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"     * @return the status of the task"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    public String getStatusIcon() {"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"     * This method overrides the toString() method."},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"     * @return the status and name of the Task"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"    public String toString() {"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"        return \"[\" + getStatusIcon() + \"] \" + name;"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"    public String toFileString() {"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"        return \"| \" + (isDone ? \"1\" : \"0\") + \" | \" + name;"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":40}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"public class TaskList {"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"    ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"    public TaskList() {}"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"        taskList \u003d tasks;"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"    public void add(Task task) {"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"        taskList.add(task);"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    public void remove(int index) {"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"        taskList.remove(index);"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"    public int size() {"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"        return taskList.size();"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"    public Task get(int index) {"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"        return taskList.get(index);"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":29}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"    public Todo(String name) {"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"        super(name);"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"    public String toFileString() {"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"        return \"T \" + super.toFileString();"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":17}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"    private static final String PARTING_LINE \u003d \"____________________________________________________________\";"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"    public Ui() {}"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"    public String readCommand() {"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"        return sc.nextLine();"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    public void showWelcome() {"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"        System.out.println(PARTING_LINE);"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"        System.out.println(\"Sup. I am Duke.\");"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"        System.out.println(\"How can I help you?\");"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"        System.out.println(PARTING_LINE);"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"    public void printLine() {"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"        System.out.println(PARTING_LINE);"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"    public void sayGoodBye() {"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"        System.out.println(\" See you.\");"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"    public void listTasks(TaskList tasks) {"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"        System.out.println(\" Here are the tasks: \");"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"            Task tempTask \u003d tasks.get(i);"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"            System.out.println(\" \" + (i + 1) + \".\" + tempTask);"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":46}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"    public void testToString() {"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"        LocalDateTime deadlineDateTime \u003d LocalDateTime.of(2021, 01, 27, 23, 59);"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"        Deadline deadline \u003d new Deadline(\"Homework 5\", deadlineDateTime);"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"        assertEquals(\"[D][✘] Homework 5 (by: Jan 27 2021 23:59)\", deadline.toString());"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"    public void testToFileString() {"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"        LocalDateTime deadlineDateTime \u003d LocalDateTime.of(2021, 01, 27, 23, 59);"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"        Deadline deadline \u003d new Deadline(\"Homework 5\", deadlineDateTime);"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"        assertEquals(\"D | 0 | Homework 5 | 2021-01-27 2359\", deadline.toFileString());"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":22}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"public class TodoTest {"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"    public void testToString() {"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"        Todo todo \u003d new Todo(\"read book\");"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"        assertEquals(\"[T][✘] read book\", todo.toString());"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    public void testToFileString() {"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"        Todo todo \u003d new Todo(\"read book\");"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"        assertEquals(\"T | 0 | read book\", todo.toFileString());"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"}"}],"authorContributionMap":{"ljhgab":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"EVENT dinner with Luna /at Friday 5pm"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"deadline homework 2"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"deadline homework 2 /by Sunday"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"list"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"done 3"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"Done 4"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"list"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"delete 1"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"list"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"delete 3"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"bye"}],"authorContributionMap":{"ljhgab":14}}]
