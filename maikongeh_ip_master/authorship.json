[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"1. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"maikongeh":2,"-":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"maikongeh":16,"-":45}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"[T][✘] Homework"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"[E][✘] party (at: Clementi Mall)"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"[D][✘] assignment (by: 2021-03-03)"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"[D][✘] deadline (by: 2021-04-04)"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"[D][✘] deadlineadad (by: 2020-01-01)"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"[D][✘] deadlines (by: 2023-12-12)"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"[D][✘] task1 (by: 2031-12-12)"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"[D][✘] deadlines (by: 2020-12-12)"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"[D][✘] deadline123 (by: 2012-12-12)"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"[D][✘] valid deadline (by: 2030-12-12)"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"[T][✘] hello"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c Updated upstream"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"[D][✘] deadline (by: 2040-12-12)"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e Stashed changes"}],"authorContributionMap":{"maikongeh":15}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"Welcome to MAGATRON!"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"MAGATRON is here to help you keep log important events and keep track of impending deadlines."},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"MAGATRON has a CLI (command-line interface). The valid commands are listed below in \"Features\"."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"### Managing Tasks"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"MAGATRON helps you log tasks. Tasks are split into 3 categories. "},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"* todo"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"* deadline"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"* event"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"MAGATRON allows you to add, view, mark-as-done and delete these tasks whenever necessary."},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"Deadline tasks have an additional feature, reminder, that updates you how long you have left"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"until the deadline for the task."},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"## Commands"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"### Adding Tasks to the TaskList"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"* #### `todo` - Adds Todo task"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"  Adds a \"todo\" task to your task list."},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"  Todo tasks do not have specified due by date or other additional information"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  "},{"lineNumber":29,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"    todo Clean the floor"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"    Got it! I\u0027ve added this new Task!"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"    [T][x] Clean the floor"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"    Now you have 1 task in your TaskList."},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"* #### `deadline` - Adds Deadline task"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"  Adds a \"Deadline\" to your task list."},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"  Deadline tasks have a description and a due date. "},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"  They are split using a \" /by \""},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"  Dates have to follow convention of YYYY-MM-DD."},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"  "},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":" "},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"Example of usage:"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"    deadline homework /by 2021-03-03"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"Expected outcome:"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"    Got it! I\u0027ve added this new Task!"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"    [D][x] homework by (by: 2021-03-03)"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"    Now you have 2 tasks in your TaskList."},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"* #### `event` - Adds Event"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"  Adds an \"event\" task to your task list."},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"  Event tasks have a description and location. "},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"  They are split using a \" /at \". Locations do not have to "},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"  follow any convention."},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"  "},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"Example of usage:"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"    event Party /at Clementi Mall"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"Expected outcome:"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"    Got it! I\u0027ve added this new Task!"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"    [E][x] Party (at: Clementi Mall)"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"    Now you have 3 tasks in your TaskList."},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"### Managing the TaskList"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"* #### `list` - lists all the logged tasks"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"  \"List\" all tasks from your task list."},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"Example of usage:"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"    list"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"    Here are your remainding tasks!"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":"    1. [T][x] Clean the floor"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"    2. [D][x] homework by (by: 2021-03-03)"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":"    3. [E][x] Party (at: Clementi Mall)"},{"lineNumber":91,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"* #### `delete` - Deletes Task"},{"lineNumber":93,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":94,"author":{"gitId":"maikongeh"},"content":"  **Delete** a task from your task list."},{"lineNumber":95,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":96,"author":{"gitId":"maikongeh"},"content":"Example of usage:"},{"lineNumber":97,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":98,"author":{"gitId":"maikongeh"},"content":"    delete 3"},{"lineNumber":99,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":100,"author":{"gitId":"maikongeh"},"content":"Expected outcome:"},{"lineNumber":101,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":102,"author":{"gitId":"maikongeh"},"content":"    Noted! I have removed this task from the list."},{"lineNumber":103,"author":{"gitId":"maikongeh"},"content":"    [E][x] Party (at: Clementi Mall)"},{"lineNumber":104,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":105,"author":{"gitId":"maikongeh"},"content":"* #### `find` - Finds Tasks"},{"lineNumber":106,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":107,"author":{"gitId":"maikongeh"},"content":"  \"Finds\" the tasks from your TaskList containing the given keyword."},{"lineNumber":108,"author":{"gitId":"maikongeh"},"content":"  keywords are only compared to the description of each task."},{"lineNumber":109,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":110,"author":{"gitId":"maikongeh"},"content":"Example of usage:"},{"lineNumber":111,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":112,"author":{"gitId":"maikongeh"},"content":"    find Clean the floor"},{"lineNumber":113,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":114,"author":{"gitId":"maikongeh"},"content":"Expected outcome:"},{"lineNumber":115,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":116,"author":{"gitId":"maikongeh"},"content":"    Here are the relevant tasks:"},{"lineNumber":117,"author":{"gitId":"maikongeh"},"content":"    1. [T][x] Clean the floor"},{"lineNumber":118,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":119,"author":{"gitId":"maikongeh"},"content":"* #### `reminder` - reminds you of impending deadline "},{"lineNumber":120,"author":{"gitId":"maikongeh"},"content":"  \"reminder\" shows a list of all impending deadline tasks in order of"},{"lineNumber":121,"author":{"gitId":"maikongeh"},"content":"  days till the deadline."},{"lineNumber":122,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":123,"author":{"gitId":"maikongeh"},"content":"Example of usage:"},{"lineNumber":124,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":125,"author":{"gitId":"maikongeh"},"content":"    reminder"},{"lineNumber":126,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":127,"author":{"gitId":"maikongeh"},"content":"Expected outcome:"},{"lineNumber":128,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":129,"author":{"gitId":"maikongeh"},"content":"    Here are your upcoming deadline Tasks!"},{"lineNumber":130,"author":{"gitId":"maikongeh"},"content":"    1. [D][x] homework by (by: 2021-03-03) x days left!!"},{"lineNumber":131,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":132,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":133,"author":{"gitId":"maikongeh"},"content":"## Acknowledgement"},{"lineNumber":134,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":135,"author":{"gitId":"maikongeh"},"content":"Reused @banchiang code for GUI implementation."}],"authorContributionMap":{"maikongeh":114,"-":21}},{"path":"src/main/java/duke/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":" * The Database acts as a storage to store tasklist as Strings"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":" */"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"public class Database {"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"    private String name;"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"     * Initializes a database object to handle loading and saving of tasks."},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"     * @param name The name of the path of the file"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"    public Database(String name){"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"        this.name \u003d name;"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"     * Reads from file and initialize Strings of tasks"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"     * @return list of strings representing tasks toString method."},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"    public ArrayList\u003cString\u003e readFile() throws FileNotFoundException {"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"            ArrayList\u003cString\u003e tasksStringName \u003d new ArrayList\u003c\u003e();"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"            File f \u003d new File(name);"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"            f.createNewFile();"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"            Scanner s \u003d new Scanner(f);"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"            while (s.hasNext()) {"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"                tasksStringName.add(s.nextLine());"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"            return tasksStringName;"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"            throw new FileNotFoundException(\"file not found\");"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"        } catch (IOException e){"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"            return new ArrayList\u003cString\u003e();"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"     * Writes to file and update strings"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"     * @params Updated list of tasks."},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"    public  void writeTaskToFile(List\u003cTask\u003e tasks){"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"        String string \u003d \"\";"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"        for (Task task : tasks) {"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"            string \u003d string + task.toString() + \"\\n\";"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"        try {"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"            FileWriter fileWriter \u003d new FileWriter(name);"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"            fileWriter.write(string);"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"            fileWriter.close();"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"        } catch (IOException e) {"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":" }"}],"authorContributionMap":{"maikongeh":73}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":" * The Deadline class has methods for a Deadline object"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":" * Inherits from the Task."},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":" */"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"public class Deadline extends Task implements Comparable\u003cDeadline\u003e{"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"    private LocalDate deadline;"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"     * Constructor for new Deadline"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"     * @param description of the new Deadline"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"     * @param deadline from new Deadline"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"    public Deadline(String description, LocalDate deadline) {"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"     * Gets the LocalDate of deadline tasks"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"     * @return localdate."},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"    public LocalDate getLocalDate(){"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"        return this.deadline;"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"     * representates a Deadline object as a string"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline.toString() + \")\";"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"     * @param o other deadline to compare based on how many days to the deadline"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"     * @return int to be used and interpreted by comparator"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"    public int compareTo(Deadline o) {"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"        if(this.deadline.isBefore(o.deadline)){"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"            return -1;"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"        } else if(this.deadline.isAfter(o.deadline)){"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"            return 1;"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"            return 0;"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":57}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import javafx.geometry.Pos;"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import javafx.scene.Node;"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import javafx.scene.control.Label;"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"import java.io.IOException;"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"import java.util.Collections;"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":" * An example of a custom control using FXML."},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":" */"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"//@@ jellymias-reused"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"// Reused from http://https://github.com/jellymias/ip/blob/master/src/main/java/duke/DialogBox.java"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"public class DialogBox extends HBox {"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    private Label dialog;"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"    private ImageView displayPicture;"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"     * Constructor for dialoguebox that has an image(jpeg/gif) as input"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"     * @param text"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"     * @param img"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"    //@@ banchiang-reused"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"    //Reused from https://github.com/banchiang/ip/blob/master/src/main/java/duke/DialogBox.java"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"            fxmlLoader.load();"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"        } catch (IOException e) {"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"            e.printStackTrace();"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"        dialog.setText(text);"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"        displayPicture.setImage(img);"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"    //@@ banchiang"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"    private void flip() {"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"        Collections.reverse(tmp);"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"     * Gets the User dialogueBox"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"     * @param text"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"     * @param img"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"     * @return new DialogueBox for Users side"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"    public static DialogBox getUserDialogue(String text, Image img) {"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"        return new DialogBox(text, img);"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"     * Gets Duke\u0027s dialogue box"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"     * @param text"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"     * @param img"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"     * @return new Dialogue box for Duke"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"    public static DialogBox getDukeDialogue(String text, Image img) {"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"        db.flip();"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"        return db;"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"}"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"//@@ jellymias"}],"authorContributionMap":{"maikongeh":84}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import java.util.Collections;"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":" * The Duke class scans users inputs as command line arguments."},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":" * It prints the relevant information for the user requests to the CLI."},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":" */"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"//"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"public class Duke {"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"    private Database database;"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"    private Ui ui;"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"    private Parser parser;"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"    private TaskList taskList;"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"    private ArrayList\u003cDeadline\u003e deadlineTasks;"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"    public Duke() throws FileNotFoundException {"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"        this.database \u003d new Database(ui.FILE_PATH);"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"        this.parser \u003d new Parser();"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"        this.taskList \u003d readInput(database.readFile());"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"        this.deadlineTasks \u003d readDeadlineTasks(database.readFile());"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"    public static void main(String[] args) {"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"     * Reads string as input from database and initialize TaskList with tasks"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"     * @param strings from Database."},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"     * @return tasklist as saved in database."},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"    private static TaskList readInput(ArrayList\u003cString\u003e strings) {"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"        for(String str: strings) {"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"            char identifier \u003d str.charAt(1);"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"            switch(identifier) {"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"                case \u0027D\u0027:"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"                    String subString \u003d str.substring(7);"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"                    String[] inputs \u003d subString.split(\"by: \");"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"                    String name \u003d inputs[0].substring(0, inputs[0].length()-2);"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"                    String deadline \u003d inputs[1].substring(0, inputs[1].length()-1);"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"                    LocalDate deadline1 \u003d LocalDate.parse(deadline);"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"                    Deadline deadline2 \u003d new Deadline(name, deadline1);"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"                    tasks.addTask(deadline2);"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"                case \u0027T\u0027:"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"                    String subString1 \u003d str.substring(7);"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"                    Todo todo1 \u003d new Todo(subString1);"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"                    tasks.addTask(todo1);"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"                case \u0027E\u0027:"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"                    String subString2 \u003d str.substring(7);"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"                    String[] inputs1 \u003d subString2.split(\"at: \");"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"                    String desc \u003d inputs1[0].substring(0, inputs1[0].length()-2);"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"                    String at \u003d inputs1[1].substring(0, inputs1[1].length()-1);"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"                    Event event1 \u003d new Event(desc, at);"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"                    tasks.addTask(event1);"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"        return tasks;"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"     * Parses the users input and returns output for given input"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"     * @param wholeInput String representation of User input"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"     * @return String output for for the given command"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"    public String parseCommands(String wholeInput){"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"        String str \u003d wholeInput;"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"        String[] parts \u003d str.split(\" \");"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"        String s \u003d parts[0];"},{"lineNumber":85,"author":{"gitId":"maikongeh"},"content":"        String rest;"},{"lineNumber":86,"author":{"gitId":"maikongeh"},"content":"        switch (s){"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"            case \"todo\":"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":"                rest \u003d str.substring(4);"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"                return parser.parseTodoCommand(rest,taskList,ui,database);"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":91,"author":{"gitId":"maikongeh"},"content":"            case \"deadline\":"},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"                rest \u003d str.substring(8);"},{"lineNumber":93,"author":{"gitId":"maikongeh"},"content":"                return parser.parseDeadlineCommand(rest,taskList,ui,database, deadlineTasks);"},{"lineNumber":94,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":95,"author":{"gitId":"maikongeh"},"content":"            case \"reminder\":"},{"lineNumber":96,"author":{"gitId":"maikongeh"},"content":"                rest \u003d str.substring(8);"},{"lineNumber":97,"author":{"gitId":"maikongeh"},"content":"                if(!rest.isEmpty()){"},{"lineNumber":98,"author":{"gitId":"maikongeh"},"content":"                    return \"Please do not type other chars after reminder\";"},{"lineNumber":99,"author":{"gitId":"maikongeh"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"maikongeh"},"content":"                return parser.parseReminderCommand(deadlineTasks,ui);"},{"lineNumber":101,"author":{"gitId":"maikongeh"},"content":"            case \"event\":"},{"lineNumber":102,"author":{"gitId":"maikongeh"},"content":"                rest \u003d str.substring(5);"},{"lineNumber":103,"author":{"gitId":"maikongeh"},"content":"                return parser.parseEventCommand(rest, taskList, ui, database);"},{"lineNumber":104,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":105,"author":{"gitId":"maikongeh"},"content":"            case \"list\":"},{"lineNumber":106,"author":{"gitId":"maikongeh"},"content":"                rest \u003d str.substring(4);"},{"lineNumber":107,"author":{"gitId":"maikongeh"},"content":"                if(!rest.isEmpty()){"},{"lineNumber":108,"author":{"gitId":"maikongeh"},"content":"                    return \"Please do not type other chars after list\";"},{"lineNumber":109,"author":{"gitId":"maikongeh"},"content":"                }"},{"lineNumber":110,"author":{"gitId":"maikongeh"},"content":"                return parser.parseListCommand(taskList, ui);"},{"lineNumber":111,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":112,"author":{"gitId":"maikongeh"},"content":"            case \"bye\":"},{"lineNumber":113,"author":{"gitId":"maikongeh"},"content":"                return parser.parseByeCommand(ui);"},{"lineNumber":114,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":115,"author":{"gitId":"maikongeh"},"content":"            case \"done\":"},{"lineNumber":116,"author":{"gitId":"maikongeh"},"content":"                rest \u003d str.substring(4);"},{"lineNumber":117,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":118,"author":{"gitId":"maikongeh"},"content":"                return parser.parseDoneCommand(rest,taskList,ui,database);"},{"lineNumber":119,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":120,"author":{"gitId":"maikongeh"},"content":"            case \"delete\":"},{"lineNumber":121,"author":{"gitId":"maikongeh"},"content":"                rest \u003d str.substring(6);"},{"lineNumber":122,"author":{"gitId":"maikongeh"},"content":"                return parser.parseDeleteCommand(rest, taskList, ui, database);"},{"lineNumber":123,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":124,"author":{"gitId":"maikongeh"},"content":"            case \"find\":"},{"lineNumber":125,"author":{"gitId":"maikongeh"},"content":"                rest \u003d str.substring(4);"},{"lineNumber":126,"author":{"gitId":"maikongeh"},"content":"                return parser.parseFindCommand(rest, taskList,ui);"},{"lineNumber":127,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":128,"author":{"gitId":"maikongeh"},"content":"            default:"},{"lineNumber":129,"author":{"gitId":"maikongeh"},"content":"                return parser.parseDefault(ui);"},{"lineNumber":130,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":131,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":134,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"maikongeh"},"content":"     * Reads list of string representation of tasks and returns only deadline tasks in a deadline List"},{"lineNumber":136,"author":{"gitId":"maikongeh"},"content":"     * @param strings"},{"lineNumber":137,"author":{"gitId":"maikongeh"},"content":"     * @return list of deadline tasks that is sorted in order of date"},{"lineNumber":138,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"maikongeh"},"content":"    private static ArrayList\u003cDeadline\u003e readDeadlineTasks(ArrayList\u003cString\u003e strings){"},{"lineNumber":140,"author":{"gitId":"maikongeh"},"content":"        ArrayList\u003cDeadline\u003e arrayListOfDeadlines \u003d new ArrayList\u003c\u003e();"},{"lineNumber":141,"author":{"gitId":"maikongeh"},"content":"        for(String str: strings){"},{"lineNumber":142,"author":{"gitId":"maikongeh"},"content":"            char identifier \u003d str.charAt(1);"},{"lineNumber":143,"author":{"gitId":"maikongeh"},"content":"            if(identifier \u003d\u003d \u0027D\u0027 ){"},{"lineNumber":144,"author":{"gitId":"maikongeh"},"content":"                String subString \u003d str.substring(7);"},{"lineNumber":145,"author":{"gitId":"maikongeh"},"content":"                String[] inputs \u003d subString.split(\"by: \");"},{"lineNumber":146,"author":{"gitId":"maikongeh"},"content":"                String name \u003d inputs[0].substring(0, inputs[0].length()-2);"},{"lineNumber":147,"author":{"gitId":"maikongeh"},"content":"                String deadline \u003d inputs[1].substring(0, inputs[1].length()-1);"},{"lineNumber":148,"author":{"gitId":"maikongeh"},"content":"                LocalDate deadline1 \u003d LocalDate.parse(deadline);"},{"lineNumber":149,"author":{"gitId":"maikongeh"},"content":"                if(deadline1.isAfter(LocalDate.now())){"},{"lineNumber":150,"author":{"gitId":"maikongeh"},"content":"                    Deadline deadline2 \u003d new Deadline(name, deadline1);"},{"lineNumber":151,"author":{"gitId":"maikongeh"},"content":"                    arrayListOfDeadlines.add(deadline2);"},{"lineNumber":152,"author":{"gitId":"maikongeh"},"content":"                }"},{"lineNumber":153,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":154,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"maikongeh"},"content":"        Collections.sort(arrayListOfDeadlines);"},{"lineNumber":156,"author":{"gitId":"maikongeh"},"content":"        return arrayListOfDeadlines;"},{"lineNumber":157,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":159,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":159}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":" *  DukeException class contains information of exceptions for duke"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":" *  Inherits from Exception class."},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":" */"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"public class DukeException extends Exception {"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"     * Creates a new DukeException to be thrown."},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"     * @param errorMessage String representation of the error"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"        super(errorMessage);"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":17}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":" * The Event class has methods for a Event object"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":" * Inherits from the Task."},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":" */"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"    private String at;"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"     * Constructor for new Event"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"     * @param description of the new Event"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"     * @param at from new Event"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"    public Event(String description, String at) {"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"        this.at \u003d at;"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"     * Represents Event object as a String"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"    public String toString(){"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":32}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":" */"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":" */"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"public class Main extends Application  {"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"     * Constructor of new Duke instance"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"    public Main() throws FileNotFoundException {"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"     * Overridden method inherited from application"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"     * @param stage"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"    public void start(Stage stage) {"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"            stage.setScene(scene);"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"            stage.show();"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"            e.printStackTrace();"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":43}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import javafx.application.Platform;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import java.util.Timer;"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"import java.util.TimerTask;"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":" */"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"//@@ jellymias-reused"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"// reused from http://https://github.com/jellymias/ip/blob/master/src/main/java/duke/MainWindow.java"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"    private VBox dialogContainer;"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"    private TextField userInput;"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"    private Button sendButton;"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"    private Duke duke;"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tenor.gif\"));"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/MAGA.gif\"));"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"     * Initialises the Main window with the dialogue box"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"    public void initialize() {"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"                DialogBox.getDukeDialogue(Ui.initGreeting(), dukeImage));"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"     * Sets d as Duke for the main window"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"     * @param d"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"        duke \u003d d;"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"    @FXML"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"    private void handleUserInput() throws Exception {"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"        // GET THE RESPONSE OF COMMAND IN STRING FORM"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"        String response \u003d duke.parseCommands(input);"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"                DialogBox.getUserDialogue(input, userImage),"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"                DialogBox.getDukeDialogue(response, dukeImage)"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"        );"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"        userInput.clear();"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"        if(input.equals(\"bye\")) {"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"            TimerTask timertask \u003d new TimerTask() {"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"                public void run() {"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"                    Platform.exit();"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"                    System.exit(0);"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"                }"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"            };"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"            Timer timer \u003d new Timer();"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"            timer.schedule(timertask, 800);"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"}"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"//@@jellyias"}],"authorContributionMap":{"maikongeh":81}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":" *  The Parser class contains methods to handle user\u0027s input commands."},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":" */"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"     *Parses the rest of the input string after todo and updates database"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"     * @param input Scanner"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"     * @param taskList the current taskList"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"     * @param ui the current ui"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"     * @param database the current database"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"     * @throws DukeException if the user input a command with invalid format."},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"     * @return String response from Ui"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"    public static String parseTodoCommand(String input, TaskList taskList, Ui ui, Database database){"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"            String s1 \u003d input;"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"            if (s1.equals(\"\")) {"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"                throw new DukeException(\" Enter a valid tododwn task\");"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"            } else {"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"                char[] chars \u003d s1.toCharArray();"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"                String ws \u003d s1.substring(1);"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"                String[] parts \u003d ws.split(\" \");"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"                try{"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"                    String desc \u003d s1.substring(1);"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"                    Todo newTodo \u003d new Todo(desc);"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"                    taskList.addTask(newTodo);"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"                    database.writeTaskToFile(taskList.getList());"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"                    return ui.showSuccessfulAddedMessage(taskList.getSize(), newTodo);"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"                } catch (Exception e){"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"                    return \" Enter a valid todo task\";"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"                }"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"        } catch (DukeException e){"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"            //change ui.. to return String"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"            return ui.showErrorMessage(e.getMessage());"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"     *Parses the rest of the input string after event and updates database"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"     * @param input Scanner"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"     * @param taskList the current taskList"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"     * @param ui the current ui"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"     * @param database the current database"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"     * @throws DukeException if the user input a command with invalid format."},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"     * @return String response from Ui"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"    public static String parseEventCommand(String input, TaskList taskList, Ui ui, Database database){"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"        try{"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"            String s1 \u003d input;"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"            if(s1.equals(\"\")){"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"                throw new DukeException(\" Enter a valid event task.\");"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"            } else {"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"                try {"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"                    String wholeString \u003d s1.substring(1);"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"                    String[] parts \u003d wholeString.split(\" /at \");"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"                    String eventDesc \u003d parts[0];"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"                    if(parts.length \u003d\u003d 1){"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"                        throw new DukeException(\" Please adhere to convention:\\nevent event_name /at event_details\");"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"                    } else {"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"                        String eventDetails \u003d parts[1];"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"                        Event newEvent \u003d new Event(eventDesc, eventDetails);"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"                        taskList.addTask(newEvent);"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"                        database.writeTaskToFile(taskList.getList());"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"                        //"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"                        return ui.showSuccessfulAddedMessage(taskList.getSize(), newEvent);"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"                    }"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"                } catch(DukeException e) {"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"                    return ui.showErrorMessage(e.getMessage());"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":85,"author":{"gitId":"maikongeh"},"content":"        } catch (DukeException e){"},{"lineNumber":86,"author":{"gitId":"maikongeh"},"content":"            return ui.showErrorMessage(e.getMessage());"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":91,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"     *Parses the rest of the input string after deadline and updates database"},{"lineNumber":93,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"maikongeh"},"content":"     * @param input Scanner"},{"lineNumber":95,"author":{"gitId":"maikongeh"},"content":"     * @param taskList the current taskList"},{"lineNumber":96,"author":{"gitId":"maikongeh"},"content":"     * @param ui the current ui"},{"lineNumber":97,"author":{"gitId":"maikongeh"},"content":"     * @param database the current database"},{"lineNumber":98,"author":{"gitId":"maikongeh"},"content":"     * @throws DukeException if the user input a command with invalid format."},{"lineNumber":99,"author":{"gitId":"maikongeh"},"content":"     * @return String response from Ui"},{"lineNumber":100,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":102,"author":{"gitId":"maikongeh"},"content":"    public static String parseDeadlineCommand(String input, TaskList taskList, Ui ui, Database database, ArrayList\u003cDeadline\u003e deadlines){"},{"lineNumber":103,"author":{"gitId":"maikongeh"},"content":"        try{"},{"lineNumber":104,"author":{"gitId":"maikongeh"},"content":"            String s1 \u003d input;"},{"lineNumber":105,"author":{"gitId":"maikongeh"},"content":"            if(s1.equals(\"\")){"},{"lineNumber":106,"author":{"gitId":"maikongeh"},"content":"                throw new DukeException(\" Enter valid deadline task after typing deadline.\");"},{"lineNumber":107,"author":{"gitId":"maikongeh"},"content":"            } else {"},{"lineNumber":108,"author":{"gitId":"maikongeh"},"content":"                try {"},{"lineNumber":109,"author":{"gitId":"maikongeh"},"content":"                    String wholeString \u003d s1.substring(1);"},{"lineNumber":110,"author":{"gitId":"maikongeh"},"content":"                    String[] parts \u003d wholeString.split(\" /by \");"},{"lineNumber":111,"author":{"gitId":"maikongeh"},"content":"                    String deadlineDesc \u003d parts[0];"},{"lineNumber":112,"author":{"gitId":"maikongeh"},"content":"                    if(parts.length \u003d\u003d 1){"},{"lineNumber":113,"author":{"gitId":"maikongeh"},"content":"                        throw new DukeException(\" Please adhere to convention:\\ndeadline task_name /by deadline YYYY-MM-DD\");"},{"lineNumber":114,"author":{"gitId":"maikongeh"},"content":"                    } else {"},{"lineNumber":115,"author":{"gitId":"maikongeh"},"content":"                        String dl \u003d parts[1];"},{"lineNumber":116,"author":{"gitId":"maikongeh"},"content":"                        try{"},{"lineNumber":117,"author":{"gitId":"maikongeh"},"content":"                            LocalDate deadline \u003d LocalDate.parse(dl);"},{"lineNumber":118,"author":{"gitId":"maikongeh"},"content":"                            Deadline newDeadline \u003d new Deadline(deadlineDesc, deadline);"},{"lineNumber":119,"author":{"gitId":"maikongeh"},"content":"                            taskList.addTask(newDeadline);"},{"lineNumber":120,"author":{"gitId":"maikongeh"},"content":"                            if(deadline.isAfter(LocalDate.now())){"},{"lineNumber":121,"author":{"gitId":"maikongeh"},"content":"                                deadlines.add(newDeadline);"},{"lineNumber":122,"author":{"gitId":"maikongeh"},"content":"                            }"},{"lineNumber":123,"author":{"gitId":"maikongeh"},"content":"                            database.writeTaskToFile(taskList.getList());"},{"lineNumber":124,"author":{"gitId":"maikongeh"},"content":"                            return ui.showSuccessfulAddedMessage(taskList.getSize(), newDeadline);"},{"lineNumber":125,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":126,"author":{"gitId":"maikongeh"},"content":"                        } catch (DateTimeParseException e){"},{"lineNumber":127,"author":{"gitId":"maikongeh"},"content":"                            return ui.showErrorMessage(\" Please enter date as follows\\n YYYY-MM-DD\");"},{"lineNumber":128,"author":{"gitId":"maikongeh"},"content":"                        }"},{"lineNumber":129,"author":{"gitId":"maikongeh"},"content":"                    }"},{"lineNumber":130,"author":{"gitId":"maikongeh"},"content":"                } catch(DukeException e) {"},{"lineNumber":131,"author":{"gitId":"maikongeh"},"content":"                    return ui.showErrorMessage(e.getMessage());"},{"lineNumber":132,"author":{"gitId":"maikongeh"},"content":"                }"},{"lineNumber":133,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":134,"author":{"gitId":"maikongeh"},"content":"        } catch (DukeException e){"},{"lineNumber":135,"author":{"gitId":"maikongeh"},"content":"            return ui.showErrorMessage(e.getMessage());"},{"lineNumber":136,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":138,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":140,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"maikongeh"},"content":"     *Parses the rest of the input string after done and updates database"},{"lineNumber":142,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":143,"author":{"gitId":"maikongeh"},"content":"     * @param input Scanner"},{"lineNumber":144,"author":{"gitId":"maikongeh"},"content":"     * @param taskList the current taskList"},{"lineNumber":145,"author":{"gitId":"maikongeh"},"content":"     * @param ui the current ui"},{"lineNumber":146,"author":{"gitId":"maikongeh"},"content":"     * @param database the current database"},{"lineNumber":147,"author":{"gitId":"maikongeh"},"content":"     * @throws DukeException if the user input a command with invalid format."},{"lineNumber":148,"author":{"gitId":"maikongeh"},"content":"     * @return String response from Ui"},{"lineNumber":149,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":151,"author":{"gitId":"maikongeh"},"content":"    public static String parseDoneCommand(String input, TaskList taskList, Ui ui, Database database){"},{"lineNumber":152,"author":{"gitId":"maikongeh"},"content":"        try{"},{"lineNumber":153,"author":{"gitId":"maikongeh"},"content":"            String s1 \u003d input;"},{"lineNumber":154,"author":{"gitId":"maikongeh"},"content":"            if(s1.equals(\"\")){"},{"lineNumber":155,"author":{"gitId":"maikongeh"},"content":"                throw new DukeException(\" Please specify what task is done\");"},{"lineNumber":156,"author":{"gitId":"maikongeh"},"content":"            } else {"},{"lineNumber":157,"author":{"gitId":"maikongeh"},"content":"                String parts[] \u003d s1.split(\" \");"},{"lineNumber":158,"author":{"gitId":"maikongeh"},"content":"                if(parts.length\u003e 2){"},{"lineNumber":159,"author":{"gitId":"maikongeh"},"content":"                    throw new DukeException(\" Please insert valid index to mark as done\");"},{"lineNumber":160,"author":{"gitId":"maikongeh"},"content":"                } else {"},{"lineNumber":161,"author":{"gitId":"maikongeh"},"content":"                    try {"},{"lineNumber":162,"author":{"gitId":"maikongeh"},"content":"                        String indexString \u003d parts[1];"},{"lineNumber":163,"author":{"gitId":"maikongeh"},"content":"                        int index \u003dInteger.parseInt(indexString);"},{"lineNumber":164,"author":{"gitId":"maikongeh"},"content":"                        assert index\u003e0 : \"index should be more than zero\";"},{"lineNumber":165,"author":{"gitId":"maikongeh"},"content":"                        Task t \u003d taskList.getList().get(index - 1);"},{"lineNumber":166,"author":{"gitId":"maikongeh"},"content":"                        t.markAsDone();"},{"lineNumber":167,"author":{"gitId":"maikongeh"},"content":"                        database.writeTaskToFile(taskList.getList());"},{"lineNumber":168,"author":{"gitId":"maikongeh"},"content":"                        return ui.markTaskAsDone(t);"},{"lineNumber":169,"author":{"gitId":"maikongeh"},"content":"                    } catch (Exception e){"},{"lineNumber":170,"author":{"gitId":"maikongeh"},"content":"                        return ui.showErrorMessage(\" Please enter a valid index\");"},{"lineNumber":171,"author":{"gitId":"maikongeh"},"content":"                    }"},{"lineNumber":172,"author":{"gitId":"maikongeh"},"content":"                }"},{"lineNumber":173,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":174,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":175,"author":{"gitId":"maikongeh"},"content":"        } catch(DukeException e){"},{"lineNumber":176,"author":{"gitId":"maikongeh"},"content":"            return ui.showErrorMessage(e.getMessage());"},{"lineNumber":177,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":180,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":181,"author":{"gitId":"maikongeh"},"content":"     *Parses the rest of the input string after find and finds tasks in"},{"lineNumber":182,"author":{"gitId":"maikongeh"},"content":"     *TaskList that corresponds to the input keyword"},{"lineNumber":183,"author":{"gitId":"maikongeh"},"content":"     * @param input Scanner"},{"lineNumber":184,"author":{"gitId":"maikongeh"},"content":"     * @param taskList the current taskList"},{"lineNumber":185,"author":{"gitId":"maikongeh"},"content":"     * @param ui the current ui"},{"lineNumber":186,"author":{"gitId":"maikongeh"},"content":"     * @throws DukeException if the user input a command with invalid format."},{"lineNumber":187,"author":{"gitId":"maikongeh"},"content":"     * @return String response from Ui"},{"lineNumber":188,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"maikongeh"},"content":"    public static String parseFindCommand(String input, TaskList taskList, Ui ui){"},{"lineNumber":190,"author":{"gitId":"maikongeh"},"content":"        try{"},{"lineNumber":191,"author":{"gitId":"maikongeh"},"content":"            String s1 \u003d input;"},{"lineNumber":192,"author":{"gitId":"maikongeh"},"content":"            if(s1.equals(\"\")){"},{"lineNumber":193,"author":{"gitId":"maikongeh"},"content":"                throw new DukeException(\"Please specify a keyword you are trying to find\");"},{"lineNumber":194,"author":{"gitId":"maikongeh"},"content":"            } else {"},{"lineNumber":195,"author":{"gitId":"maikongeh"},"content":"                String parts[] \u003d s1.split(\" \");"},{"lineNumber":196,"author":{"gitId":"maikongeh"},"content":"                if(parts.length\u003e 2){"},{"lineNumber":197,"author":{"gitId":"maikongeh"},"content":"                    throw new DukeException(\" Please insert only 1 keyword\");"},{"lineNumber":198,"author":{"gitId":"maikongeh"},"content":"                } else {"},{"lineNumber":199,"author":{"gitId":"maikongeh"},"content":"                    try{"},{"lineNumber":200,"author":{"gitId":"maikongeh"},"content":"                        String keyWord \u003d parts[1];"},{"lineNumber":201,"author":{"gitId":"maikongeh"},"content":"                        ArrayList\u003cString\u003e matchingWithKeyword \u003d new ArrayList\u003c\u003e();"},{"lineNumber":202,"author":{"gitId":"maikongeh"},"content":"                        boolean hasMatch \u003d false;"},{"lineNumber":203,"author":{"gitId":"maikongeh"},"content":"                        for(int i \u003d0; i\u003c taskList.getSize(); i++){"},{"lineNumber":204,"author":{"gitId":"maikongeh"},"content":"                            if(taskList.getList().get(i).hasKeyWord(keyWord)){"},{"lineNumber":205,"author":{"gitId":"maikongeh"},"content":"                                matchingWithKeyword.add(taskList.getList().get(i).toString());"},{"lineNumber":206,"author":{"gitId":"maikongeh"},"content":"                                hasMatch \u003d true;"},{"lineNumber":207,"author":{"gitId":"maikongeh"},"content":"                            }"},{"lineNumber":208,"author":{"gitId":"maikongeh"},"content":"                        }"},{"lineNumber":209,"author":{"gitId":"maikongeh"},"content":"                        if(!hasMatch){"},{"lineNumber":210,"author":{"gitId":"maikongeh"},"content":"                            throw new DukeException(\"Sorry. None of your tasks contain this keyword\");"},{"lineNumber":211,"author":{"gitId":"maikongeh"},"content":"                        } else {"},{"lineNumber":212,"author":{"gitId":"maikongeh"},"content":"                            //"},{"lineNumber":213,"author":{"gitId":"maikongeh"},"content":"                            return ui.showKeyWordMessage(matchingWithKeyword);"},{"lineNumber":214,"author":{"gitId":"maikongeh"},"content":"                        }"},{"lineNumber":215,"author":{"gitId":"maikongeh"},"content":"                    } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":216,"author":{"gitId":"maikongeh"},"content":"                        return ui.showErrorMessage(\"Please specify a keyword you are trying to find\");"},{"lineNumber":217,"author":{"gitId":"maikongeh"},"content":"                    }"},{"lineNumber":218,"author":{"gitId":"maikongeh"},"content":"                }"},{"lineNumber":219,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":220,"author":{"gitId":"maikongeh"},"content":"        } catch (DukeException e){"},{"lineNumber":221,"author":{"gitId":"maikongeh"},"content":"            return ui.showErrorMessage(e.getMessage());"},{"lineNumber":222,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":223,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":225,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":226,"author":{"gitId":"maikongeh"},"content":"     *Parses the rest of the input string after delete and updates database"},{"lineNumber":227,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":228,"author":{"gitId":"maikongeh"},"content":"     * @param input Scanner"},{"lineNumber":229,"author":{"gitId":"maikongeh"},"content":"     * @param taskList the current taskList"},{"lineNumber":230,"author":{"gitId":"maikongeh"},"content":"     * @param ui the current ui"},{"lineNumber":231,"author":{"gitId":"maikongeh"},"content":"     * @param database the current database"},{"lineNumber":232,"author":{"gitId":"maikongeh"},"content":"     * @throws DukeException if the user input a command with invalid format."},{"lineNumber":233,"author":{"gitId":"maikongeh"},"content":"     * @return String response from Ui"},{"lineNumber":234,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":235,"author":{"gitId":"maikongeh"},"content":"    public static String parseDeleteCommand(String input, TaskList taskList, Ui ui, Database database){"},{"lineNumber":236,"author":{"gitId":"maikongeh"},"content":"        try{"},{"lineNumber":237,"author":{"gitId":"maikongeh"},"content":"            String s1 \u003d input;"},{"lineNumber":238,"author":{"gitId":"maikongeh"},"content":"            if(s1.equals(\"\")){"},{"lineNumber":239,"author":{"gitId":"maikongeh"},"content":"                throw new DukeException(\" Please specify which task to delete\");"},{"lineNumber":240,"author":{"gitId":"maikongeh"},"content":"            } else {"},{"lineNumber":241,"author":{"gitId":"maikongeh"},"content":"                String parts[] \u003d s1.split(\" \");"},{"lineNumber":242,"author":{"gitId":"maikongeh"},"content":"                if(parts.length\u003e 2){"},{"lineNumber":243,"author":{"gitId":"maikongeh"},"content":"                    throw new DukeException(\" Please insert valid index to delete\");"},{"lineNumber":244,"author":{"gitId":"maikongeh"},"content":"                } else {"},{"lineNumber":245,"author":{"gitId":"maikongeh"},"content":"                    try {"},{"lineNumber":246,"author":{"gitId":"maikongeh"},"content":"                        String indexString \u003d parts[1];"},{"lineNumber":247,"author":{"gitId":"maikongeh"},"content":"                        int index \u003dInteger.parseInt(indexString);"},{"lineNumber":248,"author":{"gitId":"maikongeh"},"content":"                        assert index\u003e0: \"index should be more than 0\";"},{"lineNumber":249,"author":{"gitId":"maikongeh"},"content":"                        Task t \u003d taskList.getList().get(index-1);"},{"lineNumber":250,"author":{"gitId":"maikongeh"},"content":"                        taskList.removeTask(index-1);"},{"lineNumber":251,"author":{"gitId":"maikongeh"},"content":"                        database.writeTaskToFile(taskList.getList());"},{"lineNumber":252,"author":{"gitId":"maikongeh"},"content":"                        return ui.showTaskAsDeleted(t);"},{"lineNumber":253,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":254,"author":{"gitId":"maikongeh"},"content":"                    } catch (Exception e){"},{"lineNumber":255,"author":{"gitId":"maikongeh"},"content":"                        return ui.showErrorMessage(\" Please enter a valid index\");"},{"lineNumber":256,"author":{"gitId":"maikongeh"},"content":"                    }"},{"lineNumber":257,"author":{"gitId":"maikongeh"},"content":"                }"},{"lineNumber":258,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":259,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":260,"author":{"gitId":"maikongeh"},"content":"        } catch(DukeException e){"},{"lineNumber":261,"author":{"gitId":"maikongeh"},"content":"            return ui.showErrorMessage(e.getMessage());"},{"lineNumber":262,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":263,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":264,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":265,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":266,"author":{"gitId":"maikongeh"},"content":"     *Parses the rest of the input string after List and calls ui to print tasks in TaskList"},{"lineNumber":267,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":268,"author":{"gitId":"maikongeh"},"content":"     * @param taskList the current taskList"},{"lineNumber":269,"author":{"gitId":"maikongeh"},"content":"     * @param ui the current ui"},{"lineNumber":270,"author":{"gitId":"maikongeh"},"content":"     * @return String response from Ui"},{"lineNumber":271,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":272,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":273,"author":{"gitId":"maikongeh"},"content":"    public static String parseListCommand(TaskList taskList, Ui ui){"},{"lineNumber":274,"author":{"gitId":"maikongeh"},"content":"        return ui.showListContent(taskList);"},{"lineNumber":275,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":276,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":277,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":278,"author":{"gitId":"maikongeh"},"content":"     * Parses the deadline tasks to Ui to get String representation of the response."},{"lineNumber":279,"author":{"gitId":"maikongeh"},"content":"     * @param listOfUpComingsTasks"},{"lineNumber":280,"author":{"gitId":"maikongeh"},"content":"     * @param ui"},{"lineNumber":281,"author":{"gitId":"maikongeh"},"content":"     * @return String response from Ui."},{"lineNumber":282,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":283,"author":{"gitId":"maikongeh"},"content":"    public static String parseReminderCommand(ArrayList\u003cDeadline\u003e listOfUpComingsTasks, Ui ui){"},{"lineNumber":284,"author":{"gitId":"maikongeh"},"content":"        return ui.showReminderContent(listOfUpComingsTasks);"},{"lineNumber":285,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":286,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":287,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":288,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":289,"author":{"gitId":"maikongeh"},"content":"     * Calls ui to print bye message"},{"lineNumber":290,"author":{"gitId":"maikongeh"},"content":"     * Empties buffer is System"},{"lineNumber":291,"author":{"gitId":"maikongeh"},"content":"     * @param ui the current ui"},{"lineNumber":292,"author":{"gitId":"maikongeh"},"content":"     * @return String response from Ui"},{"lineNumber":293,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":294,"author":{"gitId":"maikongeh"},"content":"    public static String parseByeCommand(Ui ui){"},{"lineNumber":295,"author":{"gitId":"maikongeh"},"content":"        return ui.showByeMessage();"},{"lineNumber":296,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":297,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":298,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":299,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":300,"author":{"gitId":"maikongeh"},"content":"     * Calls ui to print default message"},{"lineNumber":301,"author":{"gitId":"maikongeh"},"content":"     * @param ui the current ui"},{"lineNumber":302,"author":{"gitId":"maikongeh"},"content":"     * @return String response from Ui"},{"lineNumber":303,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":304,"author":{"gitId":"maikongeh"},"content":"    public static String parseDefault(Ui ui){"},{"lineNumber":305,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":306,"author":{"gitId":"maikongeh"},"content":"        return ui.showDefaultStatement();"},{"lineNumber":307,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":308,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":309,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":309}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":" *  The Task class contains methods for tasks"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":" */"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"    protected boolean isDone;"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"     * Initializes a Task."},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"     * @param description The name of the task."},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"    public Task(String description) {"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"        this.isDone \u003d false;"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"     * Gets status Icon as a string"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    public String getStatusIcon() {"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"     * Marks Task as done, changes icon from x to tick"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"    public void markAsDone() {"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"        this.isDone \u003d true;"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"     * Returns true is task contains keyword"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"     * @return boolean value whether task contains keyword"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"    public boolean hasKeyWord(String keyword){"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"        String[] words \u003d this.description.split(\" \");"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"        boolean containsKeyword \u003d false;"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"        for (int i \u003d 0; i \u003c words.length; i++) {"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"            if (words[i].equals(keyword)) {"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"                containsKeyword \u003d true;"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"        return containsKeyword;"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"     * Represents Tasks object as a String"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"        return \"[\" +this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":59}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":" *  Contains methods in TaskList object"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":" */"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"    public TaskList() {"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"     * Adds task into task list."},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"     * @param task Task to be added."},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    public void addTask(Task task) {"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"        tasks.add(task);"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"     * Removes task at specified index from task list."},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"     * @param index Index of task to be removed."},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"     * @return Task removed."},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"    public Task removeTask(int index) {"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"        Task removed \u003d tasks.remove(index);"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"        return removed;"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"     * Marks task at specified index as done."},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"     * @param index Index of task to be marked as done."},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"    public void doneTask(int index) {"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"        Task task \u003d tasks.get(index);"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"        task.markAsDone();"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"        tasks.add(index, task);"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"        tasks.remove(index + 1);"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"     * gets the List of the instance"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"     * @return tasks"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"    public ArrayList\u003cTask\u003e getList(){"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"        return this.tasks;"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"     /**"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"     * @return Number of tasks in task list."},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"    public int getSize() {"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"        return tasks.size();"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"     * Returns the task at a specified index."},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"     * @param index Index of task to return."},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"     * @return Task."},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"    public Task getTask(int index) {"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"        Task task \u003d this.tasks.get(index);"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"        return task;"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"     * Represents contents of TaskList as a string"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"     * @return String of TaskList"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"    public String toString(){"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"        String output \u003d \"\";"},{"lineNumber":85,"author":{"gitId":"maikongeh"},"content":"        for(int i \u003d 0; i\u003c tasks.size(); i++){"},{"lineNumber":86,"author":{"gitId":"maikongeh"},"content":"            if(i !\u003d tasks.size() - 1){"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"                output +\u003d (i+1) + \". \" + tasks.get(i).toString() + \"\\n\";"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":"            } else {"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"                output +\u003d (i+1) + \". \" + tasks.get(i).toString();"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"        return output;"},{"lineNumber":93,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":94}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":" * The Todo class has methods for a Todo object"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":" * Inherits from the Task."},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":" */"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"public class Todo extends Task {"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"     * Constructor for new Todo"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"     * @param description of the new Todo"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"    public Todo(String description) {"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"     * Represents Todo event as a string."},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":31}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":" *  The Ui class contains methods to handle text represention to users via the CLI."},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":" */"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"public class Ui {"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"    public static final String BLANK_SPACE_BABY \u003d \"\";"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"    public static final String HORIZONTAL_LINE \u003d \"________________________________________________\";"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"    public static final String FILE_PATH \u003d \"data.txt\";"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"    private static final String greeting \u003d\" Hello! I\u0027m duke.\\n What can I do for you?\\n\";"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"    private static String farewell \u003d \" Bye. Hope to see you again soon!\";"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"     * Initialize and prints greeting message when a user runs programme."},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"    public static String initGreeting() {"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"        return HORIZONTAL_LINE + \"\\n\" + greeting + HORIZONTAL_LINE + \"\\n\";"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"     * Prints error message when a user encounters exceptions."},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"    public static String showErrorMessage(String error){"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"        return HORIZONTAL_LINE + \"\\n\"  + error + \"\\n\" +HORIZONTAL_LINE;"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"     * Prints success message when a user successfully adds a task."},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"    public static String showSuccessfulAddedMessage(int numTask, Task task){"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"        String output \u003d \"\";"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"        output +\u003d (HORIZONTAL_LINE + \"\\n\" + \" Got it! I\u0027ve added this new Task!\\n\" );"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"        output +\u003d \"  \" + task.toString() +\"\\n\";"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"        String t;"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"        if(numTask \u003d\u003d 1){"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"            t \u003d \"task\";"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"            t \u003d \"tasks\";"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"        output +\u003d \" Now you have \" + numTask + \" \"+  t +\" in your TaskList.\\n\";"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"        output +\u003d HORIZONTAL_LINE;"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"        return output;"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"     * formars List as a string as output for the user"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"     * @param taskList"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"     * @return string output"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"    public static String showListContent(TaskList taskList){"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"        String output \u003d \"\";"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"        output +\u003d HORIZONTAL_LINE + \"\\n\";"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"        if(taskList.getSize() \u003d\u003d 0){"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"            output +\u003d \" The list is empty!\\n Please add tasks into the list :))\" + \"\\n\";"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"            output +\u003d HORIZONTAL_LINE;"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"            return output;"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"        } else {"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"            output +\u003d \" Here are your remaining tasks!\" + \"\\n\";"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"            output +\u003d BLANK_SPACE_BABY + \u0027\\n\u0027;"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"            output +\u003d taskList.toString() + \u0027\\n\u0027;"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"            output +\u003d HORIZONTAL_LINE;"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"            return output;"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"     * formats the deadline tasks as a string as output for the user"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"     * @param deadlineTasks"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"     * @return string output"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":85,"author":{"gitId":"maikongeh"},"content":"    public static String showReminderContent(ArrayList\u003cDeadline\u003e deadlineTasks){"},{"lineNumber":86,"author":{"gitId":"maikongeh"},"content":"        String output \u003d \"\";"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"        output +\u003d HORIZONTAL_LINE + \"\\n\";"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":"        if(deadlineTasks.size() \u003d\u003d 0){"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"            output +\u003d \"You have no upcoming deadlines\" + \"\\n\";"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":"            output +\u003d HORIZONTAL_LINE;"},{"lineNumber":91,"author":{"gitId":"maikongeh"},"content":"        } else {"},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"            output +\u003d \" Here are your upcoming deadline Tasks!\" +\"\\n\";"},{"lineNumber":93,"author":{"gitId":"maikongeh"},"content":"            output +\u003d BLANK_SPACE_BABY + \"\\n\";"},{"lineNumber":94,"author":{"gitId":"maikongeh"},"content":"            for(int i \u003d 0; i\u003c deadlineTasks.size(); i++){"},{"lineNumber":95,"author":{"gitId":"maikongeh"},"content":"                long noOfDaysBetween \u003d ChronoUnit.DAYS.between( LocalDate.now(), deadlineTasks.get(i).getLocalDate());"},{"lineNumber":96,"author":{"gitId":"maikongeh"},"content":"                output +\u003d  (i+1) + \" \" + deadlineTasks.get(i).toString() + \" \""},{"lineNumber":97,"author":{"gitId":"maikongeh"},"content":"                        + noOfDaysBetween + \" days left!!\" +\"\\n\";"},{"lineNumber":98,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"maikongeh"},"content":"            output +\u003d HORIZONTAL_LINE;"},{"lineNumber":100,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"maikongeh"},"content":"        return output;"},{"lineNumber":102,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":104,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"maikongeh"},"content":"     * formats the done task as a string as output for the user"},{"lineNumber":106,"author":{"gitId":"maikongeh"},"content":"     * @param task"},{"lineNumber":107,"author":{"gitId":"maikongeh"},"content":"     * @return String output"},{"lineNumber":108,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"maikongeh"},"content":"    public static String markTaskAsDone(Task task){"},{"lineNumber":110,"author":{"gitId":"maikongeh"},"content":"        String output \u003d \"\";"},{"lineNumber":111,"author":{"gitId":"maikongeh"},"content":"        output +\u003d HORIZONTAL_LINE + \"\\n\";"},{"lineNumber":112,"author":{"gitId":"maikongeh"},"content":"        output +\u003d \" Nice! I\u0027ve marked this task as done\" + \u0027\\n\u0027;"},{"lineNumber":113,"author":{"gitId":"maikongeh"},"content":"        output +\u003d \" \" + task.toString() + \"\\n\";"},{"lineNumber":114,"author":{"gitId":"maikongeh"},"content":"        output +\u003d HORIZONTAL_LINE;"},{"lineNumber":115,"author":{"gitId":"maikongeh"},"content":"        return output;"},{"lineNumber":116,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":118,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"maikongeh"},"content":"     * formats deleted tasks as a string to be output to the user"},{"lineNumber":120,"author":{"gitId":"maikongeh"},"content":"     * @param task"},{"lineNumber":121,"author":{"gitId":"maikongeh"},"content":"     * @return String output"},{"lineNumber":122,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"maikongeh"},"content":"    public static String showTaskAsDeleted(Task task){"},{"lineNumber":124,"author":{"gitId":"maikongeh"},"content":"        String output \u003d \"\";"},{"lineNumber":125,"author":{"gitId":"maikongeh"},"content":"        output +\u003d HORIZONTAL_LINE + \"\\n\";"},{"lineNumber":126,"author":{"gitId":"maikongeh"},"content":"        output +\u003d \" Noted! I have removed this task from the list.\\n\" ;"},{"lineNumber":127,"author":{"gitId":"maikongeh"},"content":"        output +\u003d task.toString() + \"\\n\";"},{"lineNumber":128,"author":{"gitId":"maikongeh"},"content":"        output +\u003d HORIZONTAL_LINE;"},{"lineNumber":129,"author":{"gitId":"maikongeh"},"content":"        return output;"},{"lineNumber":130,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":132,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":133,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":134,"author":{"gitId":"maikongeh"},"content":"     * formats bye message as string as output for user"},{"lineNumber":135,"author":{"gitId":"maikongeh"},"content":"     * @return String output"},{"lineNumber":136,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":138,"author":{"gitId":"maikongeh"},"content":"    public static String showByeMessage(){"},{"lineNumber":139,"author":{"gitId":"maikongeh"},"content":"        String output \u003d \"\";"},{"lineNumber":140,"author":{"gitId":"maikongeh"},"content":"        output +\u003d HORIZONTAL_LINE + \"\\n\";"},{"lineNumber":141,"author":{"gitId":"maikongeh"},"content":"        output +\u003d farewell + \"\\n\";"},{"lineNumber":142,"author":{"gitId":"maikongeh"},"content":"        output +\u003d HORIZONTAL_LINE;"},{"lineNumber":143,"author":{"gitId":"maikongeh"},"content":"        return output;"},{"lineNumber":144,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":146,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":147,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":148,"author":{"gitId":"maikongeh"},"content":"     * formats list of tasks that has common keywords as a string as output for user"},{"lineNumber":149,"author":{"gitId":"maikongeh"},"content":"     * @param matchingTaks"},{"lineNumber":150,"author":{"gitId":"maikongeh"},"content":"     * @return string output"},{"lineNumber":151,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"maikongeh"},"content":"    public static String showKeyWordMessage(ArrayList\u003cString\u003e matchingTaks){"},{"lineNumber":153,"author":{"gitId":"maikongeh"},"content":"        String output \u003d \"\";"},{"lineNumber":154,"author":{"gitId":"maikongeh"},"content":"        output +\u003d HORIZONTAL_LINE + \"\\n\";"},{"lineNumber":155,"author":{"gitId":"maikongeh"},"content":"        output +\u003d \"Here are the relevant tasks:\\n\" + BLANK_SPACE_BABY;"},{"lineNumber":156,"author":{"gitId":"maikongeh"},"content":"        for(int i\u003d0; i\u003c matchingTaks.size(); i++){"},{"lineNumber":157,"author":{"gitId":"maikongeh"},"content":"            output +\u003d matchingTaks.get(i) + \"\\n\";"},{"lineNumber":158,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"maikongeh"},"content":"        output +\u003d HORIZONTAL_LINE;"},{"lineNumber":160,"author":{"gitId":"maikongeh"},"content":"        return output;"},{"lineNumber":161,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":163,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"maikongeh"},"content":"     * formats default message as a string as output for user"},{"lineNumber":165,"author":{"gitId":"maikongeh"},"content":"     * @return default message, list of all valid commands, as string"},{"lineNumber":166,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":168,"author":{"gitId":"maikongeh"},"content":"    public static String showDefaultStatement(){"},{"lineNumber":169,"author":{"gitId":"maikongeh"},"content":"        String output \u003d \"\";"},{"lineNumber":170,"author":{"gitId":"maikongeh"},"content":"        output +\u003d HORIZONTAL_LINE + \"\\n\";"},{"lineNumber":171,"author":{"gitId":"maikongeh"},"content":"        output +\u003d \" Please enter a valid command\\n Valid commands include:\\n\";"},{"lineNumber":172,"author":{"gitId":"maikongeh"},"content":"        output +\u003d \" bye\\n deadline\\n delete\\n done\\n event\\n find\\n list\\n reminder\\n todo\\n\";"},{"lineNumber":173,"author":{"gitId":"maikongeh"},"content":"        output +\u003d HORIZONTAL_LINE;"},{"lineNumber":174,"author":{"gitId":"maikongeh"},"content":"        return output;"},{"lineNumber":175,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":177,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":177}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/fxml/1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"maikongeh":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"588.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"maikongeh":19}},{"path":"src/test/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"import duke.Deadline;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"import duke.Task;"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import org.junit.Test;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"    public void testToString() {"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"        LocalDate ld \u003d LocalDate.parse(\"2021-12-11\");"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"        Task task \u003d new Deadline( \"CS2103\", ld);"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"        String actual \u003d task.toString();"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"        String expected \u003d \"[D][✘] CS2103 (by: 2021-12-11)\";"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"        assertEquals(expected, actual);"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"        assertEquals(expected, actual);"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"        assertEquals(expected, actual);"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":24}},{"path":"src/test/duke/DeleteTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"public class DeleteTest {"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":2}},{"path":"src/test/duke/DoneTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"public class DoneTest {"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":2}},{"path":"src/test/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"import duke.Event;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"import duke.Task;"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"    public void testToString() {"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"        String EventDetails \u003d \"detailsOfTheEvent\";"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"        Task task \u003d new Event(\"xmas\", EventDetails);"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"        String actual \u003d task.toString();"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"        String expected \u003d \"[E][✘] xmas (at: detailsOfTheEvent)\";"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"        assertEquals(expected, actual);"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":18}},{"path":"src/test/duke/ListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"public class ListTest {"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":2}},{"path":"src/test/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"import duke.*;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"public class TaskListTest {"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"    public void testToString() {"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"        String EventDetails \u003d \" [T][✘] hello\\n\" +"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"                                \" [E][✘] event (at: lanflaf)\\n\" +"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"                                \" [D][✘] deadline (by: 1999-12-12)\";"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"        Todo newTodo \u003d new Todo(\"hello\");"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"        Event newEvent \u003d new Event(\"event\", \"lanflaf\");"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"        LocalDate ld \u003d LocalDate.parse(\"1999-12-12\");"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"        Deadline newDeadline \u003d new Deadline(\"deadline\", ld);"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"        ArrayList\u003cTask\u003e tl \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"        tl.add(newTodo);"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"        tl.add(newEvent);"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"        tl.add(newDeadline);"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"        TaskList newTaskList \u003d new TaskList(tl);"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"        String actual \u003d newTaskList.toString();"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"        String expected \u003d EventDetails;"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"        assertEquals(expected, actual);"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":30}},{"path":"src/test/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"import duke.Task;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"import duke.Todo;"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"public class TodoTest {"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"    public void testToString() {"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"        Task task \u003d new Todo(\"Start yo homework boi\");"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"        String actual \u003d task.toString();"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"        String expected \u003d \"[T][✘] Start yo homework boi\";"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"        assertEquals(actual, expected);"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"todo"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"todo read book"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"deadline"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"deadline return book"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"deadline return book /by Sunday"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"duke.Event event e at/ sometime"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"event"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"event project meeting"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"event project meeting /at 6th August 2pm - 4pm"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"list"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"done"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"done 4"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"done 2"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"list"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"rubbish"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"delete 0"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"delete 1"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"list"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"bye"}],"authorContributionMap":{"maikongeh":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"if not exist Users\\Michael\\Downloads\\bin mkdir Users\\Michael\\Downloads\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"javac  -cp Users\\Michael\\Downloads\\cs2103\\ip\\src\\main\\java -Xlint:none -d Users\\Michael\\Downloads\\bin Users\\Michael\\Downloads\\cs2103\\ip\\main\\java\\duke.Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"java -classpath \\Users\\Michael\\Desktop\\cs2103\\ip\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"ip"}],"authorContributionMap":{"maikongeh":5,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"maikongeh":1,"-":37}}]
