[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"    private String by;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"        ArrayList\u003cTask\u003e myList \u003d new ArrayList();"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"        System.out.println(\"____________________________________\");"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"        System.out.println(\"____________________________________\");"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"        Scanner input \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"        while(input.hasNextLine()) {"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"            String s \u003d input.next();"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"            switch (s){"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"                case \"todo\":"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"____________________________________\");"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"                    try {"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"                        String s1 \u003d input.nextLine();"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"                        if (s1.equals(\"\")) {"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"                            throw new DukeException(\"Enter a valid todo\");"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"                        } else {"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"                            char[] chars \u003d s1.toCharArray();"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"                            if(chars[1] \u003d\u003d \u0027 \u0027){"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"                                throw new DukeException(\"Enter valid todo\");"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"                            } else {"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"                                try{"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(\"Got it. I\u0027ve added this todo:\");"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"                                    String desc \u003d s1.substring(1);"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"                                    Todo newTodo \u003d new Todo(desc);"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(\" \" + newTodo.toString());"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"                                    myList.add(newTodo);"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(\"Now you have \" + myList.size() + \" tasks in the list.\");"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"                                } catch (Exception e){"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(\"Enter valid todo\");"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"                                }"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"                            }"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"                        }"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"                    } catch (DukeException e){"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"                        System.out.println(e.getMessage());"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"                    }"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"____________________________________\");"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"                case \"deadline\":"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"____________________________________\");"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"                    try{"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"                        String s1 \u003d input.nextLine();"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"                        if(s1.equals(\"\")){"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"                            throw new DukeException(\"Enter valid deadline task.\");"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"                        } else {"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"                            try {"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"                                String wholeString \u003d s1.substring(1);"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"                                String[] parts \u003d wholeString.split(\" /by \");"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"                                String deadlineDesc \u003d parts[0];"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"                                if(parts.length \u003d\u003d 1){"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"                                    throw new DukeException(\"Please adhere to convention:\\n(task /by deadline timing)\");"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"                                } else {"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"                                    String deadline \u003d parts[1];"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(\"Got it. I\u0027ve added this deadline:\");"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"                                    Deadline newDeadline \u003d new Deadline(deadlineDesc, deadline);"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(\" \" + newDeadline.toString());"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"                                    myList.add(newDeadline);"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(\"Now you have \" + myList.size() + \" tasks in the list.\");"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"                                }"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"                            } catch(DukeException e) {"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"                                System.out.println(e.getMessage());"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"                            }"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"                        }"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"                    } catch (DukeException e){"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"                        System.out.println(e.getMessage());"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"                    }"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"____________________________________\");"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"                case \"event\":"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"____________________________________\");"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"                    try{"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"                        String s1 \u003d input.nextLine();"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"                        if(s1.equals(\"\")){"},{"lineNumber":85,"author":{"gitId":"maikongeh"},"content":"                            throw new DukeException(\"Enter valid Event.\");"},{"lineNumber":86,"author":{"gitId":"maikongeh"},"content":"                        } else {"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"                            try {"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":"                                String wholeString \u003d s1.substring(1);"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"                                String[] parts \u003d wholeString.split(\" /at \");"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":"                                String eventDesc \u003d parts[0];"},{"lineNumber":91,"author":{"gitId":"maikongeh"},"content":"                                if(parts.length \u003d\u003d 1){"},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"                                    throw new DukeException(\"Please adhere to convention:\\n(Event /at event details)\");"},{"lineNumber":93,"author":{"gitId":"maikongeh"},"content":"                                } else {"},{"lineNumber":94,"author":{"gitId":"maikongeh"},"content":"                                    String eventDetails \u003d parts[1];"},{"lineNumber":95,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(\"Got it. I\u0027ve added this Event:\");"},{"lineNumber":96,"author":{"gitId":"maikongeh"},"content":"                                    Event newEvent \u003d new Event(eventDesc, eventDetails);"},{"lineNumber":97,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(\" \" + newEvent.toString());"},{"lineNumber":98,"author":{"gitId":"maikongeh"},"content":"                                    myList.add(newEvent);"},{"lineNumber":99,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(\"Now you have \" + myList.size() + \" tasks in the list.\");"},{"lineNumber":100,"author":{"gitId":"maikongeh"},"content":"                                }"},{"lineNumber":101,"author":{"gitId":"maikongeh"},"content":"                            } catch(DukeException e) {"},{"lineNumber":102,"author":{"gitId":"maikongeh"},"content":"                                System.out.println(e.getMessage());"},{"lineNumber":103,"author":{"gitId":"maikongeh"},"content":"                            }"},{"lineNumber":104,"author":{"gitId":"maikongeh"},"content":"                        }"},{"lineNumber":105,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":106,"author":{"gitId":"maikongeh"},"content":"                    } catch (DukeException e){"},{"lineNumber":107,"author":{"gitId":"maikongeh"},"content":"                        System.out.println(e.getMessage());"},{"lineNumber":108,"author":{"gitId":"maikongeh"},"content":"                    }"},{"lineNumber":109,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"____________________________________\");"},{"lineNumber":110,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":111,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":112,"author":{"gitId":"maikongeh"},"content":"                case \"list\":"},{"lineNumber":113,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"____________________________________\");"},{"lineNumber":114,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":115,"author":{"gitId":"maikongeh"},"content":"                    for(int i\u003d1; i\u003c myList.size()+1; i++){"},{"lineNumber":116,"author":{"gitId":"maikongeh"},"content":"                        System.out.println(i +\". \" + myList.get(i-1).toString());"},{"lineNumber":117,"author":{"gitId":"maikongeh"},"content":"                    }"},{"lineNumber":118,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"____________________________________\");"},{"lineNumber":119,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":120,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":121,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":122,"author":{"gitId":"maikongeh"},"content":"                case \"bye\":"},{"lineNumber":123,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"____________________________________\");"},{"lineNumber":124,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\" Bye. Hope to see you again soon!\");"},{"lineNumber":125,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"____________________________________\");"},{"lineNumber":126,"author":{"gitId":"maikongeh"},"content":"                    System.exit(0);"},{"lineNumber":127,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":128,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":129,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":130,"author":{"gitId":"maikongeh"},"content":"                case \"done\":"},{"lineNumber":131,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":132,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"____________________________________\");"},{"lineNumber":133,"author":{"gitId":"maikongeh"},"content":"                    try{"},{"lineNumber":134,"author":{"gitId":"maikongeh"},"content":"                        String s1 \u003d input.nextLine();"},{"lineNumber":135,"author":{"gitId":"maikongeh"},"content":"                        if(s1.equals(\"\")){"},{"lineNumber":136,"author":{"gitId":"maikongeh"},"content":"                            throw new DukeException(\"Please specify what task is done\");"},{"lineNumber":137,"author":{"gitId":"maikongeh"},"content":"                        } else {"},{"lineNumber":138,"author":{"gitId":"maikongeh"},"content":"                            String parts[] \u003d s1.split(\" \");"},{"lineNumber":139,"author":{"gitId":"maikongeh"},"content":"                            if(parts.length\u003e 2){"},{"lineNumber":140,"author":{"gitId":"maikongeh"},"content":"                                throw new DukeException(\"Please insert valid index to mark as done\");"},{"lineNumber":141,"author":{"gitId":"maikongeh"},"content":"                            } else {"},{"lineNumber":142,"author":{"gitId":"maikongeh"},"content":"                                try {"},{"lineNumber":143,"author":{"gitId":"maikongeh"},"content":"                                    String indexString \u003d parts[1];"},{"lineNumber":144,"author":{"gitId":"maikongeh"},"content":"                                    int index \u003dInteger.parseInt(indexString);"},{"lineNumber":145,"author":{"gitId":"maikongeh"},"content":"                                    Task t \u003d myList.get(index - 1);"},{"lineNumber":146,"author":{"gitId":"maikongeh"},"content":"                                    t.markAsDone();"},{"lineNumber":147,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(\"Nice! I\u0027ve marked this task as done\");"},{"lineNumber":148,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(t.toString());"},{"lineNumber":149,"author":{"gitId":"maikongeh"},"content":"                                } catch (Exception e){"},{"lineNumber":150,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(\"Please enter a valid index\");"},{"lineNumber":151,"author":{"gitId":"maikongeh"},"content":"                                }"},{"lineNumber":152,"author":{"gitId":"maikongeh"},"content":"                            }"},{"lineNumber":153,"author":{"gitId":"maikongeh"},"content":"                        }"},{"lineNumber":154,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":155,"author":{"gitId":"maikongeh"},"content":"                    } catch(DukeException e){"},{"lineNumber":156,"author":{"gitId":"maikongeh"},"content":"                        System.out.println(e.getMessage());"},{"lineNumber":157,"author":{"gitId":"maikongeh"},"content":"                    }"},{"lineNumber":158,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"____________________________________\");"},{"lineNumber":159,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":160,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":161,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":162,"author":{"gitId":"maikongeh"},"content":"                case \"delete\":"},{"lineNumber":163,"author":{"gitId":"maikongeh"},"content":"//"},{"lineNumber":164,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"____________________________________\");"},{"lineNumber":165,"author":{"gitId":"maikongeh"},"content":"                    try{"},{"lineNumber":166,"author":{"gitId":"maikongeh"},"content":"                        String s1 \u003d input.nextLine();"},{"lineNumber":167,"author":{"gitId":"maikongeh"},"content":"                        if(s1.equals(\"\")){"},{"lineNumber":168,"author":{"gitId":"maikongeh"},"content":"                            throw new DukeException(\"Please specify which task to delete\");"},{"lineNumber":169,"author":{"gitId":"maikongeh"},"content":"                        } else {"},{"lineNumber":170,"author":{"gitId":"maikongeh"},"content":"                            String parts[] \u003d s1.split(\" \");"},{"lineNumber":171,"author":{"gitId":"maikongeh"},"content":"                            if(parts.length\u003e 2){"},{"lineNumber":172,"author":{"gitId":"maikongeh"},"content":"                                throw new DukeException(\"Please insert valid index to delete\");"},{"lineNumber":173,"author":{"gitId":"maikongeh"},"content":"                            } else {"},{"lineNumber":174,"author":{"gitId":"maikongeh"},"content":"                                try {"},{"lineNumber":175,"author":{"gitId":"maikongeh"},"content":"                                    String indexString \u003d parts[1];"},{"lineNumber":176,"author":{"gitId":"maikongeh"},"content":"                                    int index \u003dInteger.parseInt(indexString);"},{"lineNumber":177,"author":{"gitId":"maikongeh"},"content":"                                    Task t \u003d myList.get(index-1);"},{"lineNumber":178,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(\"Noted i have removed this task\");"},{"lineNumber":179,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(myList.get(index-1));"},{"lineNumber":180,"author":{"gitId":"maikongeh"},"content":"                                    myList.remove(index-1);"},{"lineNumber":181,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(\"Now you have \" + myList.size() + \" tasks in the list\");"},{"lineNumber":182,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":183,"author":{"gitId":"maikongeh"},"content":"                                } catch (Exception e){"},{"lineNumber":184,"author":{"gitId":"maikongeh"},"content":"                                    System.out.println(\"Please enter a valid index\");"},{"lineNumber":185,"author":{"gitId":"maikongeh"},"content":"                                }"},{"lineNumber":186,"author":{"gitId":"maikongeh"},"content":"                            }"},{"lineNumber":187,"author":{"gitId":"maikongeh"},"content":"                        }"},{"lineNumber":188,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":189,"author":{"gitId":"maikongeh"},"content":"                    } catch(DukeException e){"},{"lineNumber":190,"author":{"gitId":"maikongeh"},"content":"                        System.out.println(e.getMessage());"},{"lineNumber":191,"author":{"gitId":"maikongeh"},"content":"                    }"},{"lineNumber":192,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"____________________________________\");"},{"lineNumber":193,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":194,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":195,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":196,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":197,"author":{"gitId":"maikongeh"},"content":"                default:"},{"lineNumber":198,"author":{"gitId":"maikongeh"},"content":"                    //clear the buffer"},{"lineNumber":199,"author":{"gitId":"maikongeh"},"content":"                    input.nextLine();"},{"lineNumber":200,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"____________________________________\");"},{"lineNumber":201,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"Please insert a valid command\");"},{"lineNumber":202,"author":{"gitId":"maikongeh"},"content":"                    System.out.println(\"____________________________________\");"},{"lineNumber":203,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":204,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":205,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":206,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":207,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":208,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":209,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"maikongeh":208,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"        super(errorMessage);"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"    private String at;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"    public Event(String description, String at) {"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"        this.at \u003d at;"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"    public String toString(){"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"    //constructor takes in a String that describes the task"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"    public Task(String description) {"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"    public String getStatusIcon() {"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"    public void markAsDone() {"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"        this.isDone \u003d true;"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"        return \"[\" +this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"todo"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"todo read book"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"deadline"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"deadline return book"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"deadline return book /by Sunday"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"Event event e at/ sometime"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"event"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"event project meeting"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"event project meeting /at 6th August 2pm - 4pm"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"list"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"done"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"done 4"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"done 2"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"list"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"rubbish"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"delete 0"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"delete 1"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"list"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"bye"}],"authorContributionMap":{"maikongeh":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"if not exist Users\\Michael\\Downloads\\bin mkdir Users\\Michael\\Downloads\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"javac  -cp Users\\Michael\\Downloads\\cs2103\\ip\\src\\main\\java -Xlint:none -d Users\\Michael\\Downloads\\bin Users\\Michael\\Downloads\\cs2103\\ip\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"java -classpath \\Users\\Michael\\Desktop\\cs2103\\ip\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"ip"}],"authorContributionMap":{"maikongeh":5,"-":18}}]
