[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"1. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"maikongeh":2,"-":21}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"[T][✓] hello"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"[E][✘] event (at: lanflaf)"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"[D][✓] deadline (by: 1999-12-12)"}],"authorContributionMap":{"maikongeh":3}},{"path":"src/main/java/duke/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"public class Database {"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"    String name;"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"    public Database(String name){"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"        this.name \u003d name;"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"    public ArrayList\u003cString\u003e readFile() throws FileNotFoundException {"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"            ArrayList\u003cString\u003e tasksStringName \u003d new ArrayList\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"            File f \u003d new File(name);"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"            Scanner s \u003d new Scanner(f);"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"            while (s.hasNext()) {"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"                tasksStringName.add(s.nextLine());"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"            return tasksStringName;"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"            throw new FileNotFoundException(\"File not found\");"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"    public  void writeTaskToFile(List\u003cTask\u003e tasks){"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"        String string \u003d \"\";"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"        for (Task task : tasks) {"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"            string \u003d string + task.toString() + \"\\n\";"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"            FileWriter fileWriter \u003d new FileWriter(name);"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"            fileWriter.write(string);"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"            fileWriter.close();"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"        } catch (IOException e) {"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":" }"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":""}],"authorContributionMap":{"maikongeh":50}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"    private LocalDate deadline;"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"    public Deadline(String description, LocalDate deadline) {"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline.toString() + \")\";"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":18}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"    public static void main(String[] args) throws DukeException, FileNotFoundException {"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"        Database database \u003d new Database(ui.FILE_PATH);"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"        ArrayList\u003cString\u003e listOfTasks;"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"        ArrayList\u003cTask\u003e myList;"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"            listOfTasks \u003d database.readFile();"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"            taskList \u003d readInput(listOfTasks);"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"        } catch (FileNotFoundException e){"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"            throw new FileNotFoundException(\"No File Detected\");"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"        ui.initGreating();"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"        Scanner input \u003d new Scanner(System.in);"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"        while(input.hasNextLine()) {"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"            String s \u003d input.next();"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"            switch (s){"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"                case \"todo\":"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"                    parser.parseTodoCommand(input,taskList,ui,database);"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"                case \"deadline\":"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"                    parser.parseDeadlineCommand(input,taskList,ui,database);"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"                case \"event\":"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"                    parser.parseEventCommand(input, taskList, ui, database);"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"                case \"list\":"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"                    parser.parseListCommand(taskList, ui);"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"                case \"bye\":"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"                    parser.parseByeCommand(ui);"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"                case \"done\":"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"                    parser.parseDoneCommand(input,taskList,ui,database);"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"                case \"delete\":"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"                    parser.parseDeleteCommand(input, taskList, ui, database);"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"                default:"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"                    parser.parseDefault(input,ui);"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"    private static TaskList readInput(ArrayList\u003cString\u003e strings) {"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"        for(String str: strings) {"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"            char identifier \u003d str.charAt(1);"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"            switch(identifier) {"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"                case \u0027D\u0027:"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"                    String subString \u003d str.substring(7);"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"                    String[] inputs \u003d subString.split(\"by: \");"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"                    String name \u003d inputs[0].substring(0, inputs[0].length()-2);"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"                    String deadline \u003d inputs[1].substring(0, inputs[1].length()-1);"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"                    LocalDate deadline1 \u003d LocalDate.parse(deadline);"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"                    Deadline deadline2 \u003d new Deadline(name, deadline1);"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"                    tasks.addTask(deadline2);"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"                case \u0027T\u0027:"},{"lineNumber":85,"author":{"gitId":"maikongeh"},"content":"                    String subString1 \u003d str.substring(7);"},{"lineNumber":86,"author":{"gitId":"maikongeh"},"content":"                    Todo todo1 \u003d new Todo(subString1);"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"                    tasks.addTask(todo1);"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"                case \u0027E\u0027:"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":"                    String subString2 \u003d str.substring(7);"},{"lineNumber":91,"author":{"gitId":"maikongeh"},"content":"                    String[] inputs1 \u003d subString2.split(\"at: \");"},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"                    String desc \u003d inputs1[0].substring(0, inputs1[0].length()-2);"},{"lineNumber":93,"author":{"gitId":"maikongeh"},"content":"                    String at \u003d inputs1[1].substring(0, inputs1[1].length()-1);"},{"lineNumber":94,"author":{"gitId":"maikongeh"},"content":"                    Event event1 \u003d new Event(desc, at);"},{"lineNumber":95,"author":{"gitId":"maikongeh"},"content":"                    tasks.addTask(event1);"},{"lineNumber":96,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":97,"author":{"gitId":"maikongeh"},"content":"                    break;"},{"lineNumber":98,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"maikongeh"},"content":"        return tasks;"},{"lineNumber":101,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":103,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"maikongeh":101,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"        super(errorMessage);"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":8}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"    private String at;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"    public Event(String description, String at) {"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"        this.at \u003d at;"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"    public String toString(){"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":18}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"    public static void parseTodoCommand(Scanner input, TaskList taskList, Ui ui, Database database){"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"        try {"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"            String s1 \u003d input.nextLine();"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"            if (s1.equals(\"\")) {"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"                throw new DukeException(\" Enter a valid todo task\");"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"            } else {"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"                char[] chars \u003d s1.toCharArray();"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"                if(chars[1] \u003d\u003d \u0027 \u0027){"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"                    throw new DukeException(\" Enter valid todo task\");"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"                } else {"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"                    try{"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"                        String desc \u003d s1.substring(1);"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"                        Todo newTodo \u003d new Todo(desc);"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"                        taskList.addTask(newTodo);"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"                        ui.showSuccessfulAddedMessage(taskList.getSize(), newTodo);"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"                        database.writeTaskToFile(taskList.getList());"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"                    } catch (Exception e){"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"                        System.out.println(\" Enter a valid todo task\");"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"                    }"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"                }"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"        } catch (DukeException e){"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"            ui.showErrorMessage(e.getMessage());"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"    public static void parseEventCommand(Scanner input, TaskList taskList, Ui ui, Database database){"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"        try{"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"            String s1 \u003d input.nextLine();"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"            if(s1.equals(\"\")){"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"                throw new DukeException(\" Enter a valid event task.\");"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"            } else {"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"                try {"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"                    String wholeString \u003d s1.substring(1);"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"                    String[] parts \u003d wholeString.split(\" /at \");"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"                    String eventDesc \u003d parts[0];"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"                    if(parts.length \u003d\u003d 1){"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"                        throw new DukeException(\" Please adhere to convention:\\n(event event_name /at event_details)\");"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"                    } else {"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"                        String eventDetails \u003d parts[1];"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"                        Event newEvent \u003d new Event(eventDesc, eventDetails);"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"                        taskList.addTask(newEvent);"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"                        ui.showSuccessfulAddedMessage(taskList.getSize(), newEvent);"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"                        database.writeTaskToFile(taskList.getList());"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"                    }"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"                } catch(DukeException e) {"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"                    ui.showErrorMessage(e.getMessage());"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"                }"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"        } catch (DukeException e){"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"            ui.showErrorMessage(e.getMessage());"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"    public static void parseDeadlineCommand(Scanner input, TaskList taskList, Ui ui, Database database){"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"        try{"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"            String s1 \u003d input.nextLine();"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"            if(s1.equals(\"\")){"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"                throw new DukeException(\" Enter valid deadline task.\");"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"            } else {"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"                try {"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"                    String wholeString \u003d s1.substring(1);"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"                    String[] parts \u003d wholeString.split(\" /by \");"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"                    String deadlineDesc \u003d parts[0];"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"                    if(parts.length \u003d\u003d 1){"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"                        throw new DukeException(\" Please adhere to convention:\\n(deadline task_name /by deadline date(YYYY-MM-DD))\");"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"                    } else {"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"                        String dl \u003d parts[1];"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"                        try{"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"                            LocalDate deadline \u003d LocalDate.parse(dl);"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"                            Deadline newDeadline \u003d new Deadline(deadlineDesc, deadline);"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"                            taskList.addTask(newDeadline);"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"                            ui.showSuccessfulAddedMessage(taskList.getSize(), newDeadline);"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"                            database.writeTaskToFile(taskList.getList());"},{"lineNumber":85,"author":{"gitId":"maikongeh"},"content":"                        } catch (DateTimeParseException e){"},{"lineNumber":86,"author":{"gitId":"maikongeh"},"content":"                            ui.showErrorMessage(\" Please enter date as follows\\n YYYY-MM-DD\");"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"                        }"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":"                    }"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"                } catch(DukeException e) {"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":"                    ui.showErrorMessage(e.getMessage());"},{"lineNumber":91,"author":{"gitId":"maikongeh"},"content":"                }"},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"maikongeh"},"content":"        } catch (DukeException e){"},{"lineNumber":94,"author":{"gitId":"maikongeh"},"content":"            ui.showErrorMessage(e.getMessage());"},{"lineNumber":95,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":97,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":99,"author":{"gitId":"maikongeh"},"content":"    public static void parseDoneCommand(Scanner input, TaskList taskList, Ui ui, Database database){"},{"lineNumber":100,"author":{"gitId":"maikongeh"},"content":"        try{"},{"lineNumber":101,"author":{"gitId":"maikongeh"},"content":"            String s1 \u003d input.nextLine();"},{"lineNumber":102,"author":{"gitId":"maikongeh"},"content":"            if(s1.equals(\"\")){"},{"lineNumber":103,"author":{"gitId":"maikongeh"},"content":"                throw new DukeException(\" Please specify what task is done\");"},{"lineNumber":104,"author":{"gitId":"maikongeh"},"content":"            } else {"},{"lineNumber":105,"author":{"gitId":"maikongeh"},"content":"                String parts[] \u003d s1.split(\" \");"},{"lineNumber":106,"author":{"gitId":"maikongeh"},"content":"                if(parts.length\u003e 2){"},{"lineNumber":107,"author":{"gitId":"maikongeh"},"content":"                    throw new DukeException(\" Please insert valid index to mark as done\");"},{"lineNumber":108,"author":{"gitId":"maikongeh"},"content":"                } else {"},{"lineNumber":109,"author":{"gitId":"maikongeh"},"content":"                    try {"},{"lineNumber":110,"author":{"gitId":"maikongeh"},"content":"                        String indexString \u003d parts[1];"},{"lineNumber":111,"author":{"gitId":"maikongeh"},"content":"                        int index \u003dInteger.parseInt(indexString);"},{"lineNumber":112,"author":{"gitId":"maikongeh"},"content":"                        Task t \u003d taskList.getList().get(index - 1);"},{"lineNumber":113,"author":{"gitId":"maikongeh"},"content":"                        t.markAsDone();"},{"lineNumber":114,"author":{"gitId":"maikongeh"},"content":"                        ui.markTaskAsDone(t);"},{"lineNumber":115,"author":{"gitId":"maikongeh"},"content":"                        database.writeTaskToFile(taskList.getList());"},{"lineNumber":116,"author":{"gitId":"maikongeh"},"content":"                    } catch (Exception e){"},{"lineNumber":117,"author":{"gitId":"maikongeh"},"content":"                        ui.showErrorMessage(\" Please enter a valid index\");"},{"lineNumber":118,"author":{"gitId":"maikongeh"},"content":"                    }"},{"lineNumber":119,"author":{"gitId":"maikongeh"},"content":"                }"},{"lineNumber":120,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":121,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":122,"author":{"gitId":"maikongeh"},"content":"        } catch(DukeException e){"},{"lineNumber":123,"author":{"gitId":"maikongeh"},"content":"            ui.showErrorMessage(e.getMessage());"},{"lineNumber":124,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":127,"author":{"gitId":"maikongeh"},"content":"    public static void parseDeleteCommand(Scanner input, TaskList taskList, Ui ui, Database database){"},{"lineNumber":128,"author":{"gitId":"maikongeh"},"content":"        try{"},{"lineNumber":129,"author":{"gitId":"maikongeh"},"content":"            String s1 \u003d input.nextLine();"},{"lineNumber":130,"author":{"gitId":"maikongeh"},"content":"            if(s1.equals(\"\")){"},{"lineNumber":131,"author":{"gitId":"maikongeh"},"content":"                throw new DukeException(\" Please specify which task to delete\");"},{"lineNumber":132,"author":{"gitId":"maikongeh"},"content":"            } else {"},{"lineNumber":133,"author":{"gitId":"maikongeh"},"content":"                String parts[] \u003d s1.split(\" \");"},{"lineNumber":134,"author":{"gitId":"maikongeh"},"content":"                if(parts.length\u003e 2){"},{"lineNumber":135,"author":{"gitId":"maikongeh"},"content":"                    throw new DukeException(\" Please insert valid index to delete\");"},{"lineNumber":136,"author":{"gitId":"maikongeh"},"content":"                } else {"},{"lineNumber":137,"author":{"gitId":"maikongeh"},"content":"                    try {"},{"lineNumber":138,"author":{"gitId":"maikongeh"},"content":"                        String indexString \u003d parts[1];"},{"lineNumber":139,"author":{"gitId":"maikongeh"},"content":"                        int index \u003dInteger.parseInt(indexString);"},{"lineNumber":140,"author":{"gitId":"maikongeh"},"content":"                        Task t \u003d taskList.getList().get(index-1);"},{"lineNumber":141,"author":{"gitId":"maikongeh"},"content":"                        taskList.removeTask(index-1);"},{"lineNumber":142,"author":{"gitId":"maikongeh"},"content":"                        ui.showTaskAsDeleted(t);"},{"lineNumber":143,"author":{"gitId":"maikongeh"},"content":"                        database.writeTaskToFile(taskList.getList());"},{"lineNumber":144,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":145,"author":{"gitId":"maikongeh"},"content":"                    } catch (Exception e){"},{"lineNumber":146,"author":{"gitId":"maikongeh"},"content":"                        ui.showErrorMessage(\" Please enter a valid index\");"},{"lineNumber":147,"author":{"gitId":"maikongeh"},"content":"                    }"},{"lineNumber":148,"author":{"gitId":"maikongeh"},"content":"                }"},{"lineNumber":149,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":151,"author":{"gitId":"maikongeh"},"content":"        } catch(DukeException e){"},{"lineNumber":152,"author":{"gitId":"maikongeh"},"content":"            ui.showErrorMessage(e.getMessage());"},{"lineNumber":153,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":156,"author":{"gitId":"maikongeh"},"content":"    public static void parseListCommand(TaskList taskList, Ui ui){"},{"lineNumber":157,"author":{"gitId":"maikongeh"},"content":"        ui.showListContent(taskList);"},{"lineNumber":158,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":159,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":161,"author":{"gitId":"maikongeh"},"content":"    public static void parseByeCommand(Ui ui){"},{"lineNumber":162,"author":{"gitId":"maikongeh"},"content":"        ui.showByeMessage();"},{"lineNumber":163,"author":{"gitId":"maikongeh"},"content":"        System.exit(0);"},{"lineNumber":164,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":166,"author":{"gitId":"maikongeh"},"content":"    public static void parseDefault(Scanner input, Ui ui){"},{"lineNumber":167,"author":{"gitId":"maikongeh"},"content":"        input.nextLine();"},{"lineNumber":168,"author":{"gitId":"maikongeh"},"content":"        ui.showDefaultStatement();"},{"lineNumber":169,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":171,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":171}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"    //constructor takes in a String that describes the task"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"    public String getStatusIcon() {"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"    public void markAsDone() {"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"        this.isDone \u003d true;"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"        return \"[\" +this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":24}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"public class TaskList {"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"    public TaskList() {"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"     * Adds task into task list."},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"     * @param task Task to be added."},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"    public void addTask(Task task) {"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"        tasks.add(task);"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"     * Removes task at specified index from task list."},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"     * @param index Index of task to be removed."},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"     * @return Task removed."},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"    public Task removeTask(int index) {"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"        Task removed \u003d tasks.remove(index);"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"        return removed;"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"     * Marks task at specified index as done."},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"     * @param index Index of task to be marked as done."},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"    public void doneTask(int index) {"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"        Task task \u003d tasks.get(index);"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"        task.markAsDone();"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"        tasks.add(index, task);"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"        tasks.remove(index + 1);"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"    public ArrayList\u003cTask\u003e getList(){"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"        return this.tasks;"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"     * Returns number of tasks in task list."},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"     * @return Number of tasks in task list."},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"    public int getSize() {"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"        return tasks.size();"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"     * Returns the task at a specified index."},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"     * @param index Index of task to return."},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"     * @return Task."},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"    public Task getTask(int index) {"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"        Task task \u003d this.tasks.get(index);"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"        return task;"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"    public String toString(){"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"        String output \u003d \"\";"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"        for(int i \u003d 0; i\u003c tasks.size(); i++){"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"            if(i !\u003d tasks.size() - 1){"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"                output +\u003d \" \" + tasks.get(i).toString() + \"\\n\";"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"            } else {"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"                output +\u003d \" \" + tasks.get(i).toString();"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"        return output;"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":84}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"    public Todo(String description) {"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":13}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"    public static final String HORIZONTAL_LINE \u003d \"________________________________________________\";"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"    public static final String FILE_PATH \u003d \"data.txt\";"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"    private static final String greeting \u003d\" Hello! I\u0027m duke.\\n What can I do for you?\\n\";"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"    private static String farewell \u003d \" Bye. Hope to see you again soon!\";"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"    public static void initGreating() {"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"        System.out.println(HORIZONTAL_LINE + \"\\n\" + greeting + HORIZONTAL_LINE + \"\\n\");"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"    public static void showErrorMessage(String error){"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"        System.out.println(HORIZONTAL_LINE + \"\\n\"  + error + \"\\n\" +HORIZONTAL_LINE);"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"    public static void showSuccessfulAddedMessage(int numTask, Task task){"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"        System.out.println(HORIZONTAL_LINE + \"\\n\" + \" Got it! I\u0027ve added this new Task!\");"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"        System.out.println(\"  \" + task.toString());"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"        System.out.println(\" Now you have \" + numTask + \" tasks in your TaskList.\");"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"        System.out.println(HORIZONTAL_LINE);"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"    public static void showListContent(TaskList taskList){"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"        System.out.println(HORIZONTAL_LINE);"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"        System.out.println(\" Here are your remaining tasks!\\n\");"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"        if(taskList.getSize() \u003d\u003d0){"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"            System.out.println(\" The list is empty!\\n Please add tasks into the list :))\");"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"//        for(int i\u003d1; i\u003c list.size()+1; i++){"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"//            System.out.println(\" \" + i + \". \" + list.get(i-1).toString());"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"//        }"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"        System.out.println(taskList.toString());"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"        System.out.println(HORIZONTAL_LINE);"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"    public static void markTaskAsDone(Task task){"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"        System.out.println(HORIZONTAL_LINE);"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done\");"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"        System.out.println(\" \" + task.toString());"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"        System.out.println(HORIZONTAL_LINE);"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"    public static void showTaskAsDeleted(Task task){"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"        System.out.println(HORIZONTAL_LINE);"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"        System.out.println(\" Noted! I have removed this task from the list.\");"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"        System.out.println(task.toString());"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"        System.out.println(HORIZONTAL_LINE);"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"    public static void showByeMessage(){"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"        System.out.println(HORIZONTAL_LINE);"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"        System.out.println(farewell);"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"        System.out.println(HORIZONTAL_LINE);"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"    public static void showDefaultStatement(){"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"        System.out.println(HORIZONTAL_LINE);"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"        System.out.println(\" Please enter a valid command!\");"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"        System.out.println(\" Valid commands include:\");"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"        System.out.println(\" todo\\n event\\n deadline\\n list\\n done\\n delete\\n bye\");"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"        System.out.println(HORIZONTAL_LINE);"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":66}},{"path":"src/test/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"import duke.Deadline;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"import duke.Task;"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import org.junit.Test;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"    public void testFormatToSave() {"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"        LocalDate ld \u003d LocalDate.parse(\"2021-12-11\");"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"        Task task \u003d new Deadline(\"CS2103\", ld);"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"        String actual \u003d task.toString();"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"        String expected \u003d \"[D][✘] CS2103 (by: 2021-12-11)\";"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"        assertEquals(expected, actual);"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"    public void testToString() {"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"        LocalDate ld \u003d LocalDate.parse(\"2021-12-11\");"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"        Task task \u003d new Deadline( \"CS2103\", ld);"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"        String actual \u003d task.toString();"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"        String expected \u003d \"[D][✘] CS2103 (by: 2021-12-11)\";"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"        assertEquals(expected, actual);"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"        assertEquals(expected, actual);"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"        assertEquals(expected, actual);"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":31}},{"path":"src/test/duke/DeleteTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"public class DeleteTest {"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":2}},{"path":"src/test/duke/DoneTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"public class DoneTest {"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":2}},{"path":"src/test/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"import duke.Event;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"import duke.Task;"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"    public void testFormatToSave() {"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"        String EventDetails \u003d \"detailsOfTheEvent\";"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"        Task task \u003d new Event(\"xmas\", EventDetails);"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"        String actual \u003d task.toString();"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"        String expected \u003d \"[E][✘] xmas (at: detailsOfTheEvent)\";"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"        assertEquals(expected, actual);"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"    public void testToString() {"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"        String EventDetails \u003d \"detailsOfTheEvent\";"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"        Task task \u003d new Event(\"xmas\", EventDetails);"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"        String actual \u003d task.toString();"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"        String expected \u003d \"[E][✘] xmas (at: detailsOfTheEvent)\";"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"        assertEquals(expected, actual);"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":26}},{"path":"src/test/duke/ListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"public class ListTest {"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":2}},{"path":"src/test/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"import duke.Task;"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"import duke.Todo;"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"public class TodoTest {"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"    public void testFormatToSave() {"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"        Task task \u003d new Todo(\"Start yo homework boi\");"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"        String actual \u003d task.toString();"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"        String expected \u003d \"[T][✘] Start yo homework boi\";"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"        assertEquals(actual, expected);"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"    public void testToString() {"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"        Task task \u003d new Todo(\"Start yo homework boi\");"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"        String actual \u003d task.toString();"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"        String expected \u003d \"[T][✘] Start yo homework boi\";"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"        assertEquals(actual, expected);"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"}"}],"authorContributionMap":{"maikongeh":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"todo"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"todo read book"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"deadline"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"deadline return book"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"deadline return book /by Sunday"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"duke.Event event e at/ sometime"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"event"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"event project meeting"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"event project meeting /at 6th August 2pm - 4pm"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"list"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"done"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"done 4"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"done 2"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"list"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"rubbish"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"delete 0"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"delete 1"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"list"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"bye"}],"authorContributionMap":{"maikongeh":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"if not exist Users\\Michael\\Downloads\\bin mkdir Users\\Michael\\Downloads\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"javac  -cp Users\\Michael\\Downloads\\cs2103\\ip\\src\\main\\java -Xlint:none -d Users\\Michael\\Downloads\\bin Users\\Michael\\Downloads\\cs2103\\ip\\main\\java\\duke.Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"java -classpath \\Users\\Michael\\Desktop\\cs2103\\ip\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":""},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"ip"}],"authorContributionMap":{"maikongeh":5,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"maikongeh":1,"-":37}}]
