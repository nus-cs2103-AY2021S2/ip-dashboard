[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garyljj"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"garyljj"},"content":" * Represents an deadline task."},{"lineNumber":3,"author":{"gitId":"garyljj"},"content":" * Has a due date."},{"lineNumber":4,"author":{"gitId":"garyljj"},"content":" */"},{"lineNumber":5,"author":{"gitId":"garyljj"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"garyljj"},"content":"    private String dueDate;"},{"lineNumber":7,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":8,"author":{"gitId":"garyljj"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"garyljj"},"content":"     * Factory method for creating deadline task."},{"lineNumber":10,"author":{"gitId":"garyljj"},"content":"     * @param input Description of the task and its due date. Due date should be indicated after \"/by\"."},{"lineNumber":11,"author":{"gitId":"garyljj"},"content":"     * @return A deadline task"},{"lineNumber":12,"author":{"gitId":"garyljj"},"content":"     * @throws DukeException if due date is missing"},{"lineNumber":13,"author":{"gitId":"garyljj"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"garyljj"},"content":"    public static Deadline createDeadline(String input) throws DukeException {"},{"lineNumber":15,"author":{"gitId":"garyljj"},"content":"        String[] details \u003d input.split(\" /by \");"},{"lineNumber":16,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":17,"author":{"gitId":"garyljj"},"content":"        if (!input.contains(\"/by\") || details.length \u003d\u003d 1) {"},{"lineNumber":18,"author":{"gitId":"garyljj"},"content":"            throw new DukeException(\"Due date is missing!\");"},{"lineNumber":19,"author":{"gitId":"garyljj"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":21,"author":{"gitId":"garyljj"},"content":"        return new Deadline(details[0], details[1]);"},{"lineNumber":22,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":24,"author":{"gitId":"garyljj"},"content":"    private Deadline(String description, String dueDate) {"},{"lineNumber":25,"author":{"gitId":"garyljj"},"content":"        super(description);"},{"lineNumber":26,"author":{"gitId":"garyljj"},"content":"        this.dueDate \u003d dueDate;"},{"lineNumber":27,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":29,"author":{"gitId":"garyljj"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"garyljj"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"garyljj"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), dueDate);"},{"lineNumber":32,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"garyljj"},"content":"}"}],"authorContributionMap":{"garyljj":33}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garyljj"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"garyljj"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"garyljj"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":5,"author":{"gitId":"garyljj"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"garyljj"},"content":" * Duke is a task manager."},{"lineNumber":7,"author":{"gitId":"garyljj"},"content":" * "},{"lineNumber":8,"author":{"gitId":"garyljj"},"content":" * \u003cp\u003eCurrently supports these functionalities:"},{"lineNumber":9,"author":{"gitId":"garyljj"},"content":" * "},{"lineNumber":10,"author":{"gitId":"garyljj"},"content":" * \u003cp\u003ebye "},{"lineNumber":11,"author":{"gitId":"garyljj"},"content":" *   - Close Duke"},{"lineNumber":12,"author":{"gitId":"garyljj"},"content":" * \u003cp\u003elist"},{"lineNumber":13,"author":{"gitId":"garyljj"},"content":" *   - List out all task"},{"lineNumber":14,"author":{"gitId":"garyljj"},"content":" * \u003cp\u003edone [number]"},{"lineNumber":15,"author":{"gitId":"garyljj"},"content":" *   - Mark selected task as done"},{"lineNumber":16,"author":{"gitId":"garyljj"},"content":" * \u003cp\u003etodo [description]"},{"lineNumber":17,"author":{"gitId":"garyljj"},"content":" *   - Add a todo task"},{"lineNumber":18,"author":{"gitId":"garyljj"},"content":" * \u003cp\u003edeadline [description] /by [due date]"},{"lineNumber":19,"author":{"gitId":"garyljj"},"content":" *   - Add a deadline task with a due date"},{"lineNumber":20,"author":{"gitId":"garyljj"},"content":" * \u003cp\u003eevent [description] /at [date]"},{"lineNumber":21,"author":{"gitId":"garyljj"},"content":" *   - Add a event task with a date"},{"lineNumber":22,"author":{"gitId":"garyljj"},"content":" * \u003cp\u003edelete [number]"},{"lineNumber":23,"author":{"gitId":"garyljj"},"content":" *   - Delete a task"},{"lineNumber":24,"author":{"gitId":"garyljj"},"content":" */"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":29,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":33,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":34,"author":{"gitId":"garyljj"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":35,"author":{"gitId":"garyljj"},"content":"        duke.start();"},{"lineNumber":36,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":37,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":39,"author":{"gitId":"garyljj"},"content":"    private List\u003cTask\u003e checkList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":40,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":41,"author":{"gitId":"garyljj"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"garyljj"},"content":"     * Starts the Duke bot"},{"lineNumber":43,"author":{"gitId":"garyljj"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"garyljj"},"content":"    public void start() {"},{"lineNumber":45,"author":{"gitId":"garyljj"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":46,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":47,"author":{"gitId":"garyljj"},"content":"        echo(List.of(\"Hello! I\u0027m Duke\",\"What can I do for you?\"));"},{"lineNumber":48,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":49,"author":{"gitId":"garyljj"},"content":"        for (;;) {"},{"lineNumber":50,"author":{"gitId":"garyljj"},"content":"            String command \u003d sc.next();"},{"lineNumber":51,"author":{"gitId":"garyljj"},"content":"            String input \u003d sc.nextLine().strip();"},{"lineNumber":52,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":53,"author":{"gitId":"garyljj"},"content":"            try {"},{"lineNumber":54,"author":{"gitId":"garyljj"},"content":"                switch(command) { "},{"lineNumber":55,"author":{"gitId":"garyljj"},"content":"                    case \"bye\": "},{"lineNumber":56,"author":{"gitId":"garyljj"},"content":"                        echo(\"Bye. Hope to see you again soon!\");  "},{"lineNumber":57,"author":{"gitId":"garyljj"},"content":"                        return; "},{"lineNumber":58,"author":{"gitId":"garyljj"},"content":"                    case \"list\": "},{"lineNumber":59,"author":{"gitId":"garyljj"},"content":"                        displayList(checkList);"},{"lineNumber":60,"author":{"gitId":"garyljj"},"content":"                        break; "},{"lineNumber":61,"author":{"gitId":"garyljj"},"content":"                    case \"done\":"},{"lineNumber":62,"author":{"gitId":"garyljj"},"content":"                        completeTask(input);"},{"lineNumber":63,"author":{"gitId":"garyljj"},"content":"                        break;"},{"lineNumber":64,"author":{"gitId":"garyljj"},"content":"                    case \"todo\":"},{"lineNumber":65,"author":{"gitId":"garyljj"},"content":"                        checkList.add(Todo.createTodo(input));"},{"lineNumber":66,"author":{"gitId":"garyljj"},"content":"                        taskAdded();"},{"lineNumber":67,"author":{"gitId":"garyljj"},"content":"                        break;"},{"lineNumber":68,"author":{"gitId":"garyljj"},"content":"                    case \"deadline\":"},{"lineNumber":69,"author":{"gitId":"garyljj"},"content":"                        checkList.add(Deadline.createDeadline(input));"},{"lineNumber":70,"author":{"gitId":"garyljj"},"content":"                        taskAdded();"},{"lineNumber":71,"author":{"gitId":"garyljj"},"content":"                        break;"},{"lineNumber":72,"author":{"gitId":"garyljj"},"content":"                    case \"event\":"},{"lineNumber":73,"author":{"gitId":"garyljj"},"content":"                        checkList.add(Event.createEvent(input));"},{"lineNumber":74,"author":{"gitId":"garyljj"},"content":"                        taskAdded();"},{"lineNumber":75,"author":{"gitId":"garyljj"},"content":"                        break;"},{"lineNumber":76,"author":{"gitId":"garyljj"},"content":"                    case \"delete\":"},{"lineNumber":77,"author":{"gitId":"garyljj"},"content":"                        deleteTask(input);"},{"lineNumber":78,"author":{"gitId":"garyljj"},"content":"                        break;"},{"lineNumber":79,"author":{"gitId":"garyljj"},"content":"                    default: "},{"lineNumber":80,"author":{"gitId":"garyljj"},"content":"                        echo(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":81,"author":{"gitId":"garyljj"},"content":"                } "},{"lineNumber":82,"author":{"gitId":"garyljj"},"content":"            } catch (DukeException e) {"},{"lineNumber":83,"author":{"gitId":"garyljj"},"content":"                echo(e.getMessage());"},{"lineNumber":84,"author":{"gitId":"garyljj"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"garyljj"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":88,"author":{"gitId":"garyljj"},"content":"    private void echo(String s) {"},{"lineNumber":89,"author":{"gitId":"garyljj"},"content":"        System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":90,"author":{"gitId":"garyljj"},"content":"        System.out.println(\"\\t  \" + s);"},{"lineNumber":91,"author":{"gitId":"garyljj"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\");"},{"lineNumber":92,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":94,"author":{"gitId":"garyljj"},"content":"    private void echo(List\u003cString\u003e lst) {"},{"lineNumber":95,"author":{"gitId":"garyljj"},"content":"        System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":96,"author":{"gitId":"garyljj"},"content":"        for (String s : lst) {"},{"lineNumber":97,"author":{"gitId":"garyljj"},"content":"            System.out.println(\"\\t  \" + s);"},{"lineNumber":98,"author":{"gitId":"garyljj"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"garyljj"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\");"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":102,"author":{"gitId":"garyljj"},"content":"    private void displayList(List\u003cTask\u003e lst) {"},{"lineNumber":103,"author":{"gitId":"garyljj"},"content":"        System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":104,"author":{"gitId":"garyljj"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");"},{"lineNumber":105,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":106,"author":{"gitId":"garyljj"},"content":"        int num \u003d 1;"},{"lineNumber":107,"author":{"gitId":"garyljj"},"content":"        for (Task t : lst) {"},{"lineNumber":108,"author":{"gitId":"garyljj"},"content":"            System.out.printf(\"\\t  %d. %s\\n\", num++, t);"},{"lineNumber":109,"author":{"gitId":"garyljj"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"garyljj"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\");"},{"lineNumber":111,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":113,"author":{"gitId":"garyljj"},"content":"    private void completeTask(String num) throws DukeException {"},{"lineNumber":114,"author":{"gitId":"garyljj"},"content":"        int taskNum;"},{"lineNumber":115,"author":{"gitId":"garyljj"},"content":"        try {"},{"lineNumber":116,"author":{"gitId":"garyljj"},"content":"            taskNum \u003d Integer.parseInt(num);"},{"lineNumber":117,"author":{"gitId":"garyljj"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":118,"author":{"gitId":"garyljj"},"content":"            throw new DukeException(\"This is not a valid number!\");"},{"lineNumber":119,"author":{"gitId":"garyljj"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"garyljj"},"content":"        if (taskNum \u003e checkList.size()) {"},{"lineNumber":121,"author":{"gitId":"garyljj"},"content":"            throw new DukeException(\"This number is too big!\");"},{"lineNumber":122,"author":{"gitId":"garyljj"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":124,"author":{"gitId":"garyljj"},"content":"        Task t \u003d checkList.get(taskNum-1);"},{"lineNumber":125,"author":{"gitId":"garyljj"},"content":"        t.completed();"},{"lineNumber":126,"author":{"gitId":"garyljj"},"content":"        "},{"lineNumber":127,"author":{"gitId":"garyljj"},"content":"        echo(List.of(\"Nice! I\u0027ve marked this task as done:\", t.toString()));"},{"lineNumber":128,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":130,"author":{"gitId":"garyljj"},"content":"    private void taskAdded() {"},{"lineNumber":131,"author":{"gitId":"garyljj"},"content":"        echo(List.of(\"Got it. I\u0027ve added this task:\","},{"lineNumber":132,"author":{"gitId":"garyljj"},"content":"                checkList.get(checkList.size()-1).toString(),"},{"lineNumber":133,"author":{"gitId":"garyljj"},"content":"                \"Now you have \"+checkList.size()+\" tasks in the list.\"));"},{"lineNumber":134,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":136,"author":{"gitId":"garyljj"},"content":"    private void deleteTask(String num) throws DukeException {"},{"lineNumber":137,"author":{"gitId":"garyljj"},"content":"        int taskNum;"},{"lineNumber":138,"author":{"gitId":"garyljj"},"content":"        try {"},{"lineNumber":139,"author":{"gitId":"garyljj"},"content":"            taskNum \u003d Integer.parseInt(num);"},{"lineNumber":140,"author":{"gitId":"garyljj"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":141,"author":{"gitId":"garyljj"},"content":"            throw new DukeException(\"This is not a valid number!\");"},{"lineNumber":142,"author":{"gitId":"garyljj"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"garyljj"},"content":"        if (taskNum \u003e checkList.size()) {"},{"lineNumber":144,"author":{"gitId":"garyljj"},"content":"            throw new DukeException(\"This number is too big!\");"},{"lineNumber":145,"author":{"gitId":"garyljj"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"garyljj"},"content":"        "},{"lineNumber":147,"author":{"gitId":"garyljj"},"content":"        Task t \u003d checkList.get(taskNum-1);"},{"lineNumber":148,"author":{"gitId":"garyljj"},"content":"        checkList.remove(taskNum-1);"},{"lineNumber":149,"author":{"gitId":"garyljj"},"content":"        "},{"lineNumber":150,"author":{"gitId":"garyljj"},"content":"        echo(List.of(\"Noted. I\u0027ve removed this task:\","},{"lineNumber":151,"author":{"gitId":"garyljj"},"content":"                t.toString(),"},{"lineNumber":152,"author":{"gitId":"garyljj"},"content":"                \"Now you have \"+checkList.size()+\" tasks in the list.\"));"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"garyljj":143,"-":11}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garyljj"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"garyljj"},"content":"    public DukeException(String msg) {"},{"lineNumber":3,"author":{"gitId":"garyljj"},"content":"        super(\"☹ OOPS!!! \" + msg);"},{"lineNumber":4,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"garyljj"},"content":"}"}],"authorContributionMap":{"garyljj":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garyljj"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"garyljj"},"content":" * Represents an Event task."},{"lineNumber":3,"author":{"gitId":"garyljj"},"content":" * Has a date."},{"lineNumber":4,"author":{"gitId":"garyljj"},"content":" */"},{"lineNumber":5,"author":{"gitId":"garyljj"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"garyljj"},"content":"    private String date;"},{"lineNumber":7,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":8,"author":{"gitId":"garyljj"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"garyljj"},"content":"     * Factory method for creating Event task."},{"lineNumber":10,"author":{"gitId":"garyljj"},"content":"     * @param input Description of the task and its date. Date should be indicated after \"/at\"."},{"lineNumber":11,"author":{"gitId":"garyljj"},"content":"     * @return An Event task"},{"lineNumber":12,"author":{"gitId":"garyljj"},"content":"     * @throws DukeException if date is missing"},{"lineNumber":13,"author":{"gitId":"garyljj"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"garyljj"},"content":"    public static Event createEvent(String input) throws DukeException {"},{"lineNumber":15,"author":{"gitId":"garyljj"},"content":"        String[] details \u003d input.split(\" /at \");"},{"lineNumber":16,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":17,"author":{"gitId":"garyljj"},"content":"        if (!input.contains(\"/at\") || details.length \u003d\u003d 1) {"},{"lineNumber":18,"author":{"gitId":"garyljj"},"content":"            throw new DukeException(\"Please include a date for the event!\");"},{"lineNumber":19,"author":{"gitId":"garyljj"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":21,"author":{"gitId":"garyljj"},"content":"        return new Event(details[0], details[1]);"},{"lineNumber":22,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":24,"author":{"gitId":"garyljj"},"content":"    private Event (String description, String date) {"},{"lineNumber":25,"author":{"gitId":"garyljj"},"content":"        super(description);"},{"lineNumber":26,"author":{"gitId":"garyljj"},"content":"        this.date \u003d date;"},{"lineNumber":27,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":29,"author":{"gitId":"garyljj"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"garyljj"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"garyljj"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), date);"},{"lineNumber":32,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"garyljj"},"content":"}"}],"authorContributionMap":{"garyljj":33}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garyljj"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"garyljj"},"content":" * Represents a Task."},{"lineNumber":3,"author":{"gitId":"garyljj"},"content":" * Includes description of the task and an indicator of whether it is completed."},{"lineNumber":4,"author":{"gitId":"garyljj"},"content":" */"},{"lineNumber":5,"author":{"gitId":"garyljj"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"garyljj"},"content":"    private String description;"},{"lineNumber":7,"author":{"gitId":"garyljj"},"content":"    private boolean done;"},{"lineNumber":8,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":9,"author":{"gitId":"garyljj"},"content":"    public Task(String description) {"},{"lineNumber":10,"author":{"gitId":"garyljj"},"content":"        this.description \u003d description;"},{"lineNumber":11,"author":{"gitId":"garyljj"},"content":"        done \u003d false;"},{"lineNumber":12,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":14,"author":{"gitId":"garyljj"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"garyljj"},"content":"     * Set task as completed."},{"lineNumber":16,"author":{"gitId":"garyljj"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"garyljj"},"content":"    public void completed() {"},{"lineNumber":18,"author":{"gitId":"garyljj"},"content":"        done \u003d true;"},{"lineNumber":19,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":21,"author":{"gitId":"garyljj"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"garyljj"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"garyljj"},"content":"        String status \u003d done ? \"X\" : \" \";"},{"lineNumber":24,"author":{"gitId":"garyljj"},"content":"        return String.format(\"[%s] %s\", status, description);"},{"lineNumber":25,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"garyljj"},"content":"}"}],"authorContributionMap":{"garyljj":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garyljj"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"garyljj"},"content":" * Represents a Todo task."},{"lineNumber":3,"author":{"gitId":"garyljj"},"content":" */"},{"lineNumber":4,"author":{"gitId":"garyljj"},"content":"public class Todo extends Task {"},{"lineNumber":5,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":6,"author":{"gitId":"garyljj"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"garyljj"},"content":"     * Factory method for creating Todo task."},{"lineNumber":8,"author":{"gitId":"garyljj"},"content":"     * @param description Description of the task"},{"lineNumber":9,"author":{"gitId":"garyljj"},"content":"     * @return A todo task"},{"lineNumber":10,"author":{"gitId":"garyljj"},"content":"     * @throws DukeException if description is empty"},{"lineNumber":11,"author":{"gitId":"garyljj"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"garyljj"},"content":"    public static Todo createTodo(String description) throws DukeException {"},{"lineNumber":13,"author":{"gitId":"garyljj"},"content":"        if (description.length() \u003d\u003d 0) {"},{"lineNumber":14,"author":{"gitId":"garyljj"},"content":"                throw new DukeException(\"The description of Todo cannot be empty.\");"},{"lineNumber":15,"author":{"gitId":"garyljj"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"garyljj"},"content":"        return new Todo(description);"},{"lineNumber":17,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"garyljj"},"content":""},{"lineNumber":19,"author":{"gitId":"garyljj"},"content":"    private Todo(String description) {"},{"lineNumber":20,"author":{"gitId":"garyljj"},"content":"        super(description);"},{"lineNumber":21,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"garyljj"},"content":"    "},{"lineNumber":23,"author":{"gitId":"garyljj"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"garyljj"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"garyljj"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":26,"author":{"gitId":"garyljj"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"garyljj"},"content":"}"}],"authorContributionMap":{"garyljj":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"garyljj"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"garyljj"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"garyljj"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"garyljj"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"garyljj"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"garyljj"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"garyljj"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"garyljj"},"content":"list"},{"lineNumber":9,"author":{"gitId":"garyljj"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"garyljj"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":11,"author":{"gitId":"garyljj"},"content":"delete 5"},{"lineNumber":12,"author":{"gitId":"garyljj"},"content":"invalidtest"},{"lineNumber":13,"author":{"gitId":"garyljj"},"content":"todo"},{"lineNumber":14,"author":{"gitId":"garyljj"},"content":"deadline"},{"lineNumber":15,"author":{"gitId":"garyljj"},"content":"event"},{"lineNumber":16,"author":{"gitId":"garyljj"},"content":"done 100"},{"lineNumber":17,"author":{"gitId":"garyljj"},"content":"bye"}],"authorContributionMap":{"garyljj":17}}]
