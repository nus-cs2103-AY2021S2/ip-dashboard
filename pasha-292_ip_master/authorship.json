[{"path":"DukeNotes.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"add asd notDone"}],"authorContributionMap":{"pasha-292":1}},{"path":"DukeTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"todo run notDone"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"deadline assignment /by 2021-03-15 23:00:00 done"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"deadline finish assignment 1 /by 2021-04-12 notDone"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"event attend John? Wedding /at 2021-01-12 16:00:00 notDone"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"todo run notDone"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"todo go to the park notDone"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"todo run notDone"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"todo run notDone"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"todo run notDone"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"deadline attend meeting /by 2021-03-12 done"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"deadline sadas asdasd /by 2021-03-12 23:00:00 notDone"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"event sadas asdas /at 2021-03-12 23:00:00 notDone"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"event asd asd /at 2021-03-12 notDone"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"deadline asd asd /by 2021-03-12 notDone"}],"authorContributionMap":{"pasha-292":14}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"pasha-292":16,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"deadline do assignment /by 2021-01-01 notDone"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"todo read book done"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"deadline attend meeting /by 2021-05-18 done"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"event attend dinner /at 2021-03-15 notDone"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"todo prepare coffee notDone"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"deadline do homework /by 2021-10-31 notDone"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"event attend wedding /at 2021-02-15 notDone"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"todo go exercise done"}],"authorContributionMap":{"pasha-292":8}},{"path":"data/dukeGUI.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"todo read book done"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"deadline attend meeting /by 2021-05-18 done"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"event attend dinner /at 2021-03-15 undone"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"deadline finish lab /by 2021-04-10 23:00:00 undone"}],"authorContributionMap":{"pasha-292":4}},{"path":"data/dukeGUINotes.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"add watch movie undone"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"add binge netflix undone"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"add review guide undone"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"add have popcorn undone"}],"authorContributionMap":{"pasha-292":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"**Duke** is a desktop application to help users keep track of tasks, and make notes. It functions using a GUI (Graphical"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"User Interface) to help those potential users be at ease while using Duke."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"### Basic Info"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"**Duke** allows the user to key in three types of tasks: **todo**, **deadlines** and **events**, and also be able to"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"manipulate them."},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"1. **Todo** tasks are those that you expect to finish soon, and so does not have an end date."},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"2. **Deadlines** are tasks that must have an end date, whereas it is optional to add time."},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"3. **Events** are tasks that must have an end date, and although the time here is optional, it is recommended that you"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"   key in the time."},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"**Note:** The time for both deadline and events must be entered in 24-hour format."},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"Duke also allows the user to keep track of **notes**, which are separately stored compared to tasks. Notes are flexible"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"in that you can key in anything, search for them using keywords, and be able to delete them if you know their index."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"### Setting Up"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"1. Create a new folder in your PC."},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"2. Download the latest jar file version into that folder."},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"3. You need atleast Java 11 to run Duke."},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"4. Open and enter in your terminal the following command: `java -jar duke.jar`. Alternatively, you could simply double"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"   click the jar file."},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"### List of Features"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"1. Get list of all tasks"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"2. Save Entries"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"3. Add todo task"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"4. Add deadline task"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"5. Add event task"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"6. Mark a task as done."},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"7. Delete a certain task."},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"8. Find tasks matching keyword."},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"9. Get reminders."},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"10. Add notes."},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"11. Delete a certain note."},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"12. Find Notes."},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"13. Get List of Notes."},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"14. Exit Duke."},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"**Note:** Given the nature of the chatbot, the above features are divided into three categories:"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"1. Main Features: Which deal with the chatbot basic functions that are not directly related to tasks or notes."},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"2. Task Features: Which deal with the tasks."},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"3. Note Features: Which deal with the notes."},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"## Duke Features"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"### Main Features"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"#### Feature 1"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"Save entries"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"##### Usage"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"##### `save` - key in `save`"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"Saves all the data entered so far"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"Example of usage:"},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":68,"author":{"gitId":"pasha-292"},"content":"`save`"},{"lineNumber":69,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":70,"author":{"gitId":"pasha-292"},"content":"Expected outcome:"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":72,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":73,"author":{"gitId":"pasha-292"},"content":"Your entries have been saved :)"},{"lineNumber":74,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":75,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":76,"author":{"gitId":"pasha-292"},"content":"#### Feature 2"},{"lineNumber":77,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":78,"author":{"gitId":"pasha-292"},"content":"Exit Duke"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"pasha-292"},"content":"##### Usage"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"pasha-292"},"content":"##### `bye` or `exit` - key in `bye` or `exit`"},{"lineNumber":83,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":84,"author":{"gitId":"pasha-292"},"content":"Saves all the data and exits duke"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"pasha-292"},"content":"`bye` or `exit`"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":91,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":92,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":93,"author":{"gitId":"pasha-292"},"content":"Goodbye for now."},{"lineNumber":94,"author":{"gitId":"pasha-292"},"content":"Hope to see you soon!"},{"lineNumber":95,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":96,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":97,"author":{"gitId":"pasha-292"},"content":"### Task Features"},{"lineNumber":98,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":99,"author":{"gitId":"pasha-292"},"content":"#### Feature 1"},{"lineNumber":100,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":101,"author":{"gitId":"pasha-292"},"content":"Get the list of tasks"},{"lineNumber":102,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":103,"author":{"gitId":"pasha-292"},"content":"##### Usage"},{"lineNumber":104,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":105,"author":{"gitId":"pasha-292"},"content":"##### `list` - key in `list`"},{"lineNumber":106,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":107,"author":{"gitId":"pasha-292"},"content":"Returns the list of tasks"},{"lineNumber":108,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":109,"author":{"gitId":"pasha-292"},"content":"Example of usage:"},{"lineNumber":110,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":111,"author":{"gitId":"pasha-292"},"content":"`list`"},{"lineNumber":112,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":113,"author":{"gitId":"pasha-292"},"content":"Expected outcome:"},{"lineNumber":114,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":115,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":116,"author":{"gitId":"pasha-292"},"content":"Contents:"},{"lineNumber":117,"author":{"gitId":"pasha-292"},"content":"1. [D][-] hw (by: Mar 18 2021) "},{"lineNumber":118,"author":{"gitId":"pasha-292"},"content":"2. [E][-] meeting (at: Mar 22 2021 04:00PM)"},{"lineNumber":119,"author":{"gitId":"pasha-292"},"content":"3. [T][X] run"},{"lineNumber":120,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":121,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":122,"author":{"gitId":"pasha-292"},"content":"Returns the list of all the tasks and they are numbered starting from 1."},{"lineNumber":123,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":124,"author":{"gitId":"pasha-292"},"content":"#### Feature 2"},{"lineNumber":125,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":126,"author":{"gitId":"pasha-292"},"content":"add todo task"},{"lineNumber":127,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":128,"author":{"gitId":"pasha-292"},"content":"##### Usage"},{"lineNumber":129,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":130,"author":{"gitId":"pasha-292"},"content":"##### `todo` - key in `todo \u003ctask description\u003e`"},{"lineNumber":131,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":132,"author":{"gitId":"pasha-292"},"content":"Example of Usage:"},{"lineNumber":133,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":134,"author":{"gitId":"pasha-292"},"content":"`todo read book`"},{"lineNumber":135,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":136,"author":{"gitId":"pasha-292"},"content":"Expected outcome:"},{"lineNumber":137,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":138,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":139,"author":{"gitId":"pasha-292"},"content":"Got it! Added: "},{"lineNumber":140,"author":{"gitId":"pasha-292"},"content":"[T][-] read book"},{"lineNumber":141,"author":{"gitId":"pasha-292"},"content":"Now you have 6 items in your list"},{"lineNumber":142,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":143,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":144,"author":{"gitId":"pasha-292"},"content":"#### Feature 3"},{"lineNumber":145,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":146,"author":{"gitId":"pasha-292"},"content":"add deadline task"},{"lineNumber":147,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":148,"author":{"gitId":"pasha-292"},"content":"##### Usage"},{"lineNumber":149,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":150,"author":{"gitId":"pasha-292"},"content":"##### `deadline` - key in `deadline \u003ctask description\u003e /by \u003cDate: Format(yyyy-mm-dd)\u003e \u003cTime: Format(hh:mm:ss)\u003e`"},{"lineNumber":151,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":152,"author":{"gitId":"pasha-292"},"content":"Example of Usage:"},{"lineNumber":153,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":154,"author":{"gitId":"pasha-292"},"content":"`deadline finish lab /by 2021-03-15 18:00:00`"},{"lineNumber":155,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":156,"author":{"gitId":"pasha-292"},"content":"Expected outcome:"},{"lineNumber":157,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":158,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":159,"author":{"gitId":"pasha-292"},"content":"Got it! Added: "},{"lineNumber":160,"author":{"gitId":"pasha-292"},"content":"[D][-] finish lab (by: Mar 15 2021 6:00PM)"},{"lineNumber":161,"author":{"gitId":"pasha-292"},"content":"Now you have 7 items in your list"},{"lineNumber":162,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":163,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":164,"author":{"gitId":"pasha-292"},"content":"##### Note:"},{"lineNumber":165,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":166,"author":{"gitId":"pasha-292"},"content":"1. You may not key in the time, and the task would still be added."},{"lineNumber":167,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":168,"author":{"gitId":"pasha-292"},"content":"2. Time is in 24-hour format."},{"lineNumber":169,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":170,"author":{"gitId":"pasha-292"},"content":"#### Feature 4"},{"lineNumber":171,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":172,"author":{"gitId":"pasha-292"},"content":"add event task"},{"lineNumber":173,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":174,"author":{"gitId":"pasha-292"},"content":"##### Usage"},{"lineNumber":175,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":176,"author":{"gitId":"pasha-292"},"content":"##### `event` - key in `event \u003ctask description\u003e /at \u003cDate: Format(yyyy-mm-dd)\u003e \u003cTime: Format(hh:mm:ss)\u003e`"},{"lineNumber":177,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":178,"author":{"gitId":"pasha-292"},"content":"Example of Usage:"},{"lineNumber":179,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":180,"author":{"gitId":"pasha-292"},"content":"`event attend meeting /at 2021-03-15 18:00:00`"},{"lineNumber":181,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":182,"author":{"gitId":"pasha-292"},"content":"Expected outcome:"},{"lineNumber":183,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":184,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":185,"author":{"gitId":"pasha-292"},"content":"Got it! Added: "},{"lineNumber":186,"author":{"gitId":"pasha-292"},"content":"[E][-] attend meeting (at: Mar 15 2021 6:00PM)"},{"lineNumber":187,"author":{"gitId":"pasha-292"},"content":"Now you have 8 items in your list"},{"lineNumber":188,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":189,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":190,"author":{"gitId":"pasha-292"},"content":"##### Note:"},{"lineNumber":191,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":192,"author":{"gitId":"pasha-292"},"content":"1. You may not key in the time, and the task would still be added."},{"lineNumber":193,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":194,"author":{"gitId":"pasha-292"},"content":"2. Time is in 24-hour format."},{"lineNumber":195,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":196,"author":{"gitId":"pasha-292"},"content":"#### Feature 5"},{"lineNumber":197,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":198,"author":{"gitId":"pasha-292"},"content":"Mark a task as done"},{"lineNumber":199,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":200,"author":{"gitId":"pasha-292"},"content":"##### Usage"},{"lineNumber":201,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":202,"author":{"gitId":"pasha-292"},"content":"##### `done` - key in `done \u003cindex\u003e`"},{"lineNumber":203,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":204,"author":{"gitId":"pasha-292"},"content":"Index must be greater than 0"},{"lineNumber":205,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":206,"author":{"gitId":"pasha-292"},"content":"Example of Usage:"},{"lineNumber":207,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":208,"author":{"gitId":"pasha-292"},"content":"`done 6`"},{"lineNumber":209,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":210,"author":{"gitId":"pasha-292"},"content":"Expected outcome:"},{"lineNumber":211,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":212,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":213,"author":{"gitId":"pasha-292"},"content":"Task 6 is complete:"},{"lineNumber":214,"author":{"gitId":"pasha-292"},"content":"[T][X] read book"},{"lineNumber":215,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":216,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":217,"author":{"gitId":"pasha-292"},"content":"Similar output is expected for other type of tasks"},{"lineNumber":218,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":219,"author":{"gitId":"pasha-292"},"content":"#### Feature 6"},{"lineNumber":220,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":221,"author":{"gitId":"pasha-292"},"content":"Remove a task"},{"lineNumber":222,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":223,"author":{"gitId":"pasha-292"},"content":"##### Usage"},{"lineNumber":224,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":225,"author":{"gitId":"pasha-292"},"content":"##### `delete` or `remove` - key in `delete \u003cindex\u003e` or `remove \u003cindex\u003e`"},{"lineNumber":226,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":227,"author":{"gitId":"pasha-292"},"content":"Index must be greater than 0"},{"lineNumber":228,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":229,"author":{"gitId":"pasha-292"},"content":"Example of Usage:"},{"lineNumber":230,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":231,"author":{"gitId":"pasha-292"},"content":"`delete 6` or `remove 6`"},{"lineNumber":232,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":233,"author":{"gitId":"pasha-292"},"content":"Expected outcome:"},{"lineNumber":234,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":235,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":236,"author":{"gitId":"pasha-292"},"content":"Noted. Item removed:"},{"lineNumber":237,"author":{"gitId":"pasha-292"},"content":"[T][X] read book"},{"lineNumber":238,"author":{"gitId":"pasha-292"},"content":"Now you have 6 items in your list"},{"lineNumber":239,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":240,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":241,"author":{"gitId":"pasha-292"},"content":"Similar output is expected for other type of tasks"},{"lineNumber":242,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":243,"author":{"gitId":"pasha-292"},"content":"#### Feature 7"},{"lineNumber":244,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":245,"author":{"gitId":"pasha-292"},"content":"Find matching tasks based on keyword"},{"lineNumber":246,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":247,"author":{"gitId":"pasha-292"},"content":"##### Usage"},{"lineNumber":248,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":249,"author":{"gitId":"pasha-292"},"content":"##### `find` or `search` - key in `find \u003ckeyword\u003e` or `search \u003ckeyword\u003e`"},{"lineNumber":250,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":251,"author":{"gitId":"pasha-292"},"content":"Example of Usage:"},{"lineNumber":252,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":253,"author":{"gitId":"pasha-292"},"content":"`find meeting` or `search meeting`"},{"lineNumber":254,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":255,"author":{"gitId":"pasha-292"},"content":"Expected outcome:"},{"lineNumber":256,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":257,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":258,"author":{"gitId":"pasha-292"},"content":"We have found the following 2 item(s)"},{"lineNumber":259,"author":{"gitId":"pasha-292"},"content":"Contents:"},{"lineNumber":260,"author":{"gitId":"pasha-292"},"content":"1. [E][X] meeting (at: Mar 18 2021) "},{"lineNumber":261,"author":{"gitId":"pasha-292"},"content":"2. [E][-] meeting (at: Mar 22 2021 04:00PM)"},{"lineNumber":262,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":263,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":264,"author":{"gitId":"pasha-292"},"content":"The output depends on the number of matching tasks found"},{"lineNumber":265,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":266,"author":{"gitId":"pasha-292"},"content":"#### Feature 8"},{"lineNumber":267,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":268,"author":{"gitId":"pasha-292"},"content":"Get tasks that are currently due"},{"lineNumber":269,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":270,"author":{"gitId":"pasha-292"},"content":"##### Usage"},{"lineNumber":271,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":272,"author":{"gitId":"pasha-292"},"content":"##### `dues` or `reminders` - key in `dues` or `reminders`"},{"lineNumber":273,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":274,"author":{"gitId":"pasha-292"},"content":"Example of Usage:"},{"lineNumber":275,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":276,"author":{"gitId":"pasha-292"},"content":"`dues` or `reminders`"},{"lineNumber":277,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":278,"author":{"gitId":"pasha-292"},"content":"Expected outcome:"},{"lineNumber":279,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":280,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":281,"author":{"gitId":"pasha-292"},"content":"These are the due tasks"},{"lineNumber":282,"author":{"gitId":"pasha-292"},"content":"Contents:"},{"lineNumber":283,"author":{"gitId":"pasha-292"},"content":"1. [D][-] hw (by: Mar 18 2021) "},{"lineNumber":284,"author":{"gitId":"pasha-292"},"content":"2. [E][-] meeting (at: Mar 22 2021 04:00PM)"},{"lineNumber":285,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":286,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":287,"author":{"gitId":"pasha-292"},"content":"The output depends on the number of matching tasks found"},{"lineNumber":288,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":289,"author":{"gitId":"pasha-292"},"content":"### Note Features"},{"lineNumber":290,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":291,"author":{"gitId":"pasha-292"},"content":"#### Feature 1"},{"lineNumber":292,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":293,"author":{"gitId":"pasha-292"},"content":"Get the list of notes"},{"lineNumber":294,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":295,"author":{"gitId":"pasha-292"},"content":"##### Usage"},{"lineNumber":296,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":297,"author":{"gitId":"pasha-292"},"content":"##### `notes` - key in `notes`"},{"lineNumber":298,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":299,"author":{"gitId":"pasha-292"},"content":"Returns the list of notes"},{"lineNumber":300,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":301,"author":{"gitId":"pasha-292"},"content":"Example of usage:"},{"lineNumber":302,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":303,"author":{"gitId":"pasha-292"},"content":"`notes`"},{"lineNumber":304,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":305,"author":{"gitId":"pasha-292"},"content":"Expected outcome:"},{"lineNumber":306,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":307,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":308,"author":{"gitId":"pasha-292"},"content":"Contents:"},{"lineNumber":309,"author":{"gitId":"pasha-292"},"content":"1. watch movies"},{"lineNumber":310,"author":{"gitId":"pasha-292"},"content":"2. play video games"},{"lineNumber":311,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":312,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":313,"author":{"gitId":"pasha-292"},"content":"Returns the list of all the notes and they are numbered starting from 1."},{"lineNumber":314,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":315,"author":{"gitId":"pasha-292"},"content":"#### Feature 2"},{"lineNumber":316,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":317,"author":{"gitId":"pasha-292"},"content":"add note"},{"lineNumber":318,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":319,"author":{"gitId":"pasha-292"},"content":"##### Usage"},{"lineNumber":320,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":321,"author":{"gitId":"pasha-292"},"content":"##### `add` - key in `add \u003cnote description\u003e`"},{"lineNumber":322,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":323,"author":{"gitId":"pasha-292"},"content":"Example of Usage:"},{"lineNumber":324,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":325,"author":{"gitId":"pasha-292"},"content":"`add play video games`"},{"lineNumber":326,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":327,"author":{"gitId":"pasha-292"},"content":"Expected outcome:"},{"lineNumber":328,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":329,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":330,"author":{"gitId":"pasha-292"},"content":"Got it! Added: "},{"lineNumber":331,"author":{"gitId":"pasha-292"},"content":"play video games"},{"lineNumber":332,"author":{"gitId":"pasha-292"},"content":"Now you have 6 items in your list"},{"lineNumber":333,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":334,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":335,"author":{"gitId":"pasha-292"},"content":"#### Feature 3"},{"lineNumber":336,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":337,"author":{"gitId":"pasha-292"},"content":"Remove a note"},{"lineNumber":338,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":339,"author":{"gitId":"pasha-292"},"content":"##### Usage"},{"lineNumber":340,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":341,"author":{"gitId":"pasha-292"},"content":"##### `delete-note` or `remove-note` - key in `delete-note \u003cindex\u003e` or `remove-note \u003cindex\u003e`"},{"lineNumber":342,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":343,"author":{"gitId":"pasha-292"},"content":"Index must be greater than 0"},{"lineNumber":344,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":345,"author":{"gitId":"pasha-292"},"content":"Example of Usage:"},{"lineNumber":346,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":347,"author":{"gitId":"pasha-292"},"content":"`delete-note 6` or `remove-note 6`"},{"lineNumber":348,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":349,"author":{"gitId":"pasha-292"},"content":"Expected outcome:"},{"lineNumber":350,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":351,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":352,"author":{"gitId":"pasha-292"},"content":"Noted. Item removed:"},{"lineNumber":353,"author":{"gitId":"pasha-292"},"content":"play video games"},{"lineNumber":354,"author":{"gitId":"pasha-292"},"content":"Now you have 5 items in your list"},{"lineNumber":355,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":356,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":357,"author":{"gitId":"pasha-292"},"content":"#### Feature 4"},{"lineNumber":358,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":359,"author":{"gitId":"pasha-292"},"content":"Find matching notes based on keyword"},{"lineNumber":360,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":361,"author":{"gitId":"pasha-292"},"content":"##### Usage"},{"lineNumber":362,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":363,"author":{"gitId":"pasha-292"},"content":"##### `find-note` or `search-note` - key in `find-note \u003ckeyword\u003e` or `search-note \u003ckeyword\u003e`"},{"lineNumber":364,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":365,"author":{"gitId":"pasha-292"},"content":"Example of Usage:"},{"lineNumber":366,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":367,"author":{"gitId":"pasha-292"},"content":"`find-note movies` or `search-note movies`"},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":372,"author":{"gitId":"pasha-292"},"content":"We have found the following 2 item(s)"},{"lineNumber":373,"author":{"gitId":"pasha-292"},"content":"Contents:"},{"lineNumber":374,"author":{"gitId":"pasha-292"},"content":"1. watch movies"},{"lineNumber":375,"author":{"gitId":"pasha-292"},"content":"2. go to the movie theatre"},{"lineNumber":376,"author":{"gitId":"pasha-292"},"content":"```"},{"lineNumber":377,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":378,"author":{"gitId":"pasha-292"},"content":"The size of the list depends on the number of matches"},{"lineNumber":379,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":380,"author":{"gitId":"pasha-292"},"content":"### Summary of features:"},{"lineNumber":381,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":382,"author":{"gitId":"pasha-292"},"content":"1. Save entries - `save`"},{"lineNumber":383,"author":{"gitId":"pasha-292"},"content":"2. Exit duke - `bye` or `exit`"},{"lineNumber":384,"author":{"gitId":"pasha-292"},"content":"3. Get list of all tasks - `list`"},{"lineNumber":385,"author":{"gitId":"pasha-292"},"content":"4. Add todo task - `todo \u003ctask description\u003e`"},{"lineNumber":386,"author":{"gitId":"pasha-292"},"content":"5. Add deadline task - `deadline \u003ctask description\u003e /by \u003cDate: Format(yyyy-mm-dd)\u003e \u003cTime: Format(hh:mm:ss)\u003e`"},{"lineNumber":387,"author":{"gitId":"pasha-292"},"content":"6. Add event task - `event \u003ctask description\u003e /at \u003cDate: Format(yyyy-mm-dd)\u003e \u003cTime: Format(hh:mm:ss)\u003e`"},{"lineNumber":388,"author":{"gitId":"pasha-292"},"content":"7. Mark task as done - `done \u003cindex\u003e`"},{"lineNumber":389,"author":{"gitId":"pasha-292"},"content":"8. Remove a task - `delete \u003cindex\u003e` or `remove \u003cindex\u003e`"},{"lineNumber":390,"author":{"gitId":"pasha-292"},"content":"9. Find tasks matching a keyword - `find \u003ckeyword\u003e` or `search \u003ckeyword\u003e`"},{"lineNumber":391,"author":{"gitId":"pasha-292"},"content":"10. Get tasks that are due - `dues` or `reminders`"},{"lineNumber":392,"author":{"gitId":"pasha-292"},"content":"11. Get list of notes - `notes`"},{"lineNumber":393,"author":{"gitId":"pasha-292"},"content":"12. Add notes - `add \u003cnote description\u003e`"},{"lineNumber":394,"author":{"gitId":"pasha-292"},"content":"13. Delete a note - `delete-note \u003cindex\u003e` or `remove-note \u003cindex\u003e`"},{"lineNumber":395,"author":{"gitId":"pasha-292"},"content":"14. Find notes based on keyword - `find-note \u003ckeyword\u003e` or `search-note \u003ckeyword\u003e`"},{"lineNumber":396,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":397,"author":{"gitId":"pasha-292"},"content":"#### Note:"},{"lineNumber":398,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":399,"author":{"gitId":"pasha-292"},"content":"- Remember to key in the commands in the exact format provided. Especially for date and time."},{"lineNumber":400,"author":{"gitId":"pasha-292"},"content":"- For commands where you need to key in index, make sure that index is always greater than 0."},{"lineNumber":401,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":402,"author":{"gitId":"pasha-292"},"content":"#### Storage Issue:"},{"lineNumber":403,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":404,"author":{"gitId":"pasha-292"},"content":"Duke saves all your entries automatically, and so the chances of storage errors are remote. However in rare cases, there"},{"lineNumber":405,"author":{"gitId":"pasha-292"},"content":"might be storage problems. This would most likely happen if you enter the commands in the wrong format and somehow the"},{"lineNumber":406,"author":{"gitId":"pasha-292"},"content":"task is added in the list of tasks but not stored. Hence, Duke may not be able to save tasks afterwards. When this"},{"lineNumber":407,"author":{"gitId":"pasha-292"},"content":"happens, remove all the contents from the storage files namely _DukeTasks.txt_ and _DukeNotes.txt_, and start Duke"},{"lineNumber":408,"author":{"gitId":"pasha-292"},"content":"again. The storage files are created in the same folder in which Duke was downloaded. Then it should run properly again."},{"lineNumber":409,"author":{"gitId":"pasha-292"},"content":"It is also worth noting that exiting duke using the `bye` or `exit` command is the safest way, in order to ensure that"},{"lineNumber":410,"author":{"gitId":"pasha-292"},"content":"there are no discrepancies in storage."},{"lineNumber":411,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":412,"author":{"gitId":"pasha-292"},"content":"## Hope you have a wonderful time using Duke!"},{"lineNumber":413,"author":{"gitId":"pasha-292"},"content":""}],"authorContributionMap":{"pasha-292":394,"-":19}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import duke.gui.Main;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import duke.register.Parser;"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import duke.register.Storage;"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import duke.task.*;"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"import javafx.application.Application;"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"import java.time.LocalDate;"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"import java.time.LocalTime;"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":" * The class where duke is initialized and then launch GUI"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    private final Storage storage;"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    private final Storage notesStorage;"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"    private TaskList taskList;"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    private TaskList noteList;"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"    public Duke() {"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"        storage \u003d new Storage(\"DukeTasks.txt\");"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"        notesStorage \u003d new Storage(\"DukeNotes.txt\");"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"            taskList \u003d storage.load();"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"            noteList \u003d notesStorage.load();"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"        } catch (Exception e) {"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"            noteList \u003d new TaskList();"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"     * The main method launching Duke"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"     * @param args"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"    public static void main(String[] args) {"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"     * This method takes in the input from the GUI"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"     * @param input"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"     * @return the result of the command"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"    public String processGUI(String input) {"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"        String command \u003d input;"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"        Parser p \u003d new Parser(command);"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"        p.parse();"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"        String TaskType \u003d p.getTaskType().toLowerCase();"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"        String result \u003d \"\";"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"        if (TaskType.equals(\"bye\") || TaskType.equals(\"exit\")) {"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"            storage.saveTask(taskList);"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"            notesStorage.saveTask(noteList);"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"            result \u003d \"Goodbye for now.\\nHope to see you soon!\";"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"        } else if (TaskType.equals(\"save\")) {"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"            storage.saveTask(taskList);"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"            notesStorage.saveTask(noteList);"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"            result \u003d \"Your entries have been saved :)\";"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"        } else if (TaskType.equals(\"list\")) {"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"            result \u003d taskList.getAllTasks();"},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"        } else if (TaskType.equals(\"notes\")) {"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":"            result \u003d noteList.getAllTasks();"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"        } else if (TaskType.equals(\"reminders\") || TaskType.equals(\"dues\")) {"},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":"            result \u003d taskList.getReminders();"},{"lineNumber":68,"author":{"gitId":"pasha-292"},"content":"        } else if (p.getCommandLength() \u003e 1) {"},{"lineNumber":69,"author":{"gitId":"pasha-292"},"content":"            result \u003d processLongCommands(p, command);"},{"lineNumber":70,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":"            if (TaskType.equals(\"todo\") || TaskType.equals(\"deadline\")"},{"lineNumber":72,"author":{"gitId":"pasha-292"},"content":"                    || TaskType.equals(\"event\")) {"},{"lineNumber":73,"author":{"gitId":"pasha-292"},"content":"                result \u003d \"Oops!!! Incomplete command :(\";"},{"lineNumber":74,"author":{"gitId":"pasha-292"},"content":"            } else {"},{"lineNumber":75,"author":{"gitId":"pasha-292"},"content":"                result \u003d \"Oops!!! Invalid Input :(\";"},{"lineNumber":76,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"pasha-292"},"content":"        storage.saveTask(taskList);"},{"lineNumber":79,"author":{"gitId":"pasha-292"},"content":"        notesStorage.saveTask(noteList);"},{"lineNumber":80,"author":{"gitId":"pasha-292"},"content":"        return result;"},{"lineNumber":81,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":83,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"pasha-292"},"content":"     * Method created to shorten the process method"},{"lineNumber":85,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"pasha-292"},"content":"     * @param p"},{"lineNumber":87,"author":{"gitId":"pasha-292"},"content":"     * @param command"},{"lineNumber":88,"author":{"gitId":"pasha-292"},"content":"     * @return Duke response"},{"lineNumber":89,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"pasha-292"},"content":"    public String processLongCommands(Parser p, String command) {"},{"lineNumber":91,"author":{"gitId":"pasha-292"},"content":"        p.parse();"},{"lineNumber":92,"author":{"gitId":"pasha-292"},"content":"        String TaskType \u003d p.getTaskType().toLowerCase();"},{"lineNumber":93,"author":{"gitId":"pasha-292"},"content":"        String result \u003d \"\";"},{"lineNumber":94,"author":{"gitId":"pasha-292"},"content":"        if (TaskType.equals(\"done\")) {"},{"lineNumber":95,"author":{"gitId":"pasha-292"},"content":"            result \u003d validIndex(p.getIndex())"},{"lineNumber":96,"author":{"gitId":"pasha-292"},"content":"                    ? taskList.markAsDone(Integer.parseInt(p.getIndex()))"},{"lineNumber":97,"author":{"gitId":"pasha-292"},"content":"                    : \"Invalid Index!\";"},{"lineNumber":98,"author":{"gitId":"pasha-292"},"content":"        } else if (TaskType.equals(\"delete\") || TaskType.equals(\"remove\")) {"},{"lineNumber":99,"author":{"gitId":"pasha-292"},"content":"            result \u003d validIndex(p.getIndex())"},{"lineNumber":100,"author":{"gitId":"pasha-292"},"content":"                    ? taskList.DeleteTask(Integer.parseInt(p.getIndex()))"},{"lineNumber":101,"author":{"gitId":"pasha-292"},"content":"                    : \"Invalid Index!\";"},{"lineNumber":102,"author":{"gitId":"pasha-292"},"content":"        } else if (TaskType.equals(\"delete-note\") || TaskType.equals(\"remove-note\")) {"},{"lineNumber":103,"author":{"gitId":"pasha-292"},"content":"            result \u003d validIndex(p.getIndex())"},{"lineNumber":104,"author":{"gitId":"pasha-292"},"content":"                    ? noteList.DeleteTask(Integer.parseInt(p.getIndex()))"},{"lineNumber":105,"author":{"gitId":"pasha-292"},"content":"                    : \"Invalid Index!\";"},{"lineNumber":106,"author":{"gitId":"pasha-292"},"content":"        } else if (TaskType.equals(\"find\") || TaskType.equals(\"search\")) {"},{"lineNumber":107,"author":{"gitId":"pasha-292"},"content":"            result \u003d taskList.findTask(p.getTaskName());"},{"lineNumber":108,"author":{"gitId":"pasha-292"},"content":"        } else if (TaskType.equals(\"find-note\") || TaskType.equals(\"search-note\")) {"},{"lineNumber":109,"author":{"gitId":"pasha-292"},"content":"            result \u003d noteList.findTask(p.getTaskWithoutType());"},{"lineNumber":110,"author":{"gitId":"pasha-292"},"content":"        } else if (TaskType.equals(\"todo\")) {"},{"lineNumber":111,"author":{"gitId":"pasha-292"},"content":"            result \u003d taskList.addTask(new TodoTask(command));"},{"lineNumber":112,"author":{"gitId":"pasha-292"},"content":"        } else if (TaskType.equals(\"deadline\")) {"},{"lineNumber":113,"author":{"gitId":"pasha-292"},"content":"            result \u003d getDeadline(command);"},{"lineNumber":114,"author":{"gitId":"pasha-292"},"content":"        } else if (TaskType.equals(\"event\")) {"},{"lineNumber":115,"author":{"gitId":"pasha-292"},"content":"            result \u003d getEvent(command);"},{"lineNumber":116,"author":{"gitId":"pasha-292"},"content":"        } else if (TaskType.equals(\"add\")) {"},{"lineNumber":117,"author":{"gitId":"pasha-292"},"content":"            result \u003d noteList.addTask(new Notes(command));"},{"lineNumber":118,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":119,"author":{"gitId":"pasha-292"},"content":"            result \u003d \"Oops!!! Invalid Input :(\";"},{"lineNumber":120,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"pasha-292"},"content":"        return result;"},{"lineNumber":122,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":124,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"pasha-292"},"content":"     * This method ensures that deadline is input in the correct format"},{"lineNumber":126,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":127,"author":{"gitId":"pasha-292"},"content":"     * @param command"},{"lineNumber":128,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":129,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"pasha-292"},"content":"    public String getDeadline(String command) {"},{"lineNumber":131,"author":{"gitId":"pasha-292"},"content":"        String result \u003d \"\";"},{"lineNumber":132,"author":{"gitId":"pasha-292"},"content":"        String[] divide \u003d command.split(\"/\");"},{"lineNumber":133,"author":{"gitId":"pasha-292"},"content":"        if (divide.length \u003d\u003d 1 || divide[0].split(\" \").length \u003d\u003d 1) {"},{"lineNumber":134,"author":{"gitId":"pasha-292"},"content":"            result \u003d \"Oops!!! Incomplete command :(\";"},{"lineNumber":135,"author":{"gitId":"pasha-292"},"content":"        } else if (divide[1].split(\" \").length \u003d\u003d 1"},{"lineNumber":136,"author":{"gitId":"pasha-292"},"content":"                || divide[1].split(\" \").length \u003e 3) {"},{"lineNumber":137,"author":{"gitId":"pasha-292"},"content":"            result \u003d \"Oops!!! Invalid Input :(\";"},{"lineNumber":138,"author":{"gitId":"pasha-292"},"content":"        } else if (!isDate(divide[1].split(\" \")[1])"},{"lineNumber":139,"author":{"gitId":"pasha-292"},"content":"                || (divide[1].split(\" \").length \u003e 2"},{"lineNumber":140,"author":{"gitId":"pasha-292"},"content":"                \u0026\u0026 !isTime(divide[1].split(\" \")[2]))) {"},{"lineNumber":141,"author":{"gitId":"pasha-292"},"content":"            result \u003d \"Oops!!! Invalid Date/Time :(\";"},{"lineNumber":142,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":143,"author":{"gitId":"pasha-292"},"content":"            result \u003d taskList.addTask(new DeadlineTask(command));"},{"lineNumber":144,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"pasha-292"},"content":"        return result;"},{"lineNumber":146,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":148,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"pasha-292"},"content":"     * This method ensures that the event is input in the correct format"},{"lineNumber":150,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":151,"author":{"gitId":"pasha-292"},"content":"     * @param command"},{"lineNumber":152,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":153,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"pasha-292"},"content":"    public String getEvent(String command) {"},{"lineNumber":155,"author":{"gitId":"pasha-292"},"content":"        String result \u003d \"\";"},{"lineNumber":156,"author":{"gitId":"pasha-292"},"content":"        String[] divide \u003d command.split(\"/\");"},{"lineNumber":157,"author":{"gitId":"pasha-292"},"content":"        if (divide.length \u003d\u003d 1 || divide[0].split(\" \").length \u003d\u003d 1) {"},{"lineNumber":158,"author":{"gitId":"pasha-292"},"content":"            result \u003d \"Oops!!! Incomplete command :(\";"},{"lineNumber":159,"author":{"gitId":"pasha-292"},"content":"        } else if (divide[1].split(\" \").length \u003d\u003d 1"},{"lineNumber":160,"author":{"gitId":"pasha-292"},"content":"                || divide[1].split(\" \").length \u003e 3) {"},{"lineNumber":161,"author":{"gitId":"pasha-292"},"content":"            result \u003d \"Oops!!! Invalid Input :(\";"},{"lineNumber":162,"author":{"gitId":"pasha-292"},"content":"        } else if (!isDate(divide[1].split(\" \")[1])"},{"lineNumber":163,"author":{"gitId":"pasha-292"},"content":"                || (divide[1].split(\" \").length \u003e 2"},{"lineNumber":164,"author":{"gitId":"pasha-292"},"content":"                \u0026\u0026 !isTime(divide[1].split(\" \")[2]))) {"},{"lineNumber":165,"author":{"gitId":"pasha-292"},"content":"            result \u003d \"Oops!!! Invalid Date/Time :(\";"},{"lineNumber":166,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":167,"author":{"gitId":"pasha-292"},"content":"            result \u003d taskList.addTask(new EventTask(command));"},{"lineNumber":168,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"pasha-292"},"content":"        return result;"},{"lineNumber":170,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":172,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":173,"author":{"gitId":"pasha-292"},"content":"     * Returns Duke\u0027s response to the GUI"},{"lineNumber":174,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":175,"author":{"gitId":"pasha-292"},"content":"     * @param input"},{"lineNumber":176,"author":{"gitId":"pasha-292"},"content":"     * @return response"},{"lineNumber":177,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":178,"author":{"gitId":"pasha-292"},"content":"    public String getResponse(String input) {"},{"lineNumber":179,"author":{"gitId":"pasha-292"},"content":"        return processGUI(input);"},{"lineNumber":180,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":182,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":183,"author":{"gitId":"pasha-292"},"content":"     * Checks if date format is correct"},{"lineNumber":184,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":185,"author":{"gitId":"pasha-292"},"content":"     * @param date"},{"lineNumber":186,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":187,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":188,"author":{"gitId":"pasha-292"},"content":"    public boolean isDate(String date) {"},{"lineNumber":189,"author":{"gitId":"pasha-292"},"content":"        try {"},{"lineNumber":190,"author":{"gitId":"pasha-292"},"content":"            LocalDate.parse(date);"},{"lineNumber":191,"author":{"gitId":"pasha-292"},"content":"            return true;"},{"lineNumber":192,"author":{"gitId":"pasha-292"},"content":"        } catch (Exception e) {"},{"lineNumber":193,"author":{"gitId":"pasha-292"},"content":"            return false;"},{"lineNumber":194,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":195,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":197,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":198,"author":{"gitId":"pasha-292"},"content":"     * Checks if time format is correct"},{"lineNumber":199,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":200,"author":{"gitId":"pasha-292"},"content":"     * @param time"},{"lineNumber":201,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":202,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":203,"author":{"gitId":"pasha-292"},"content":"    public boolean isTime(String time) {"},{"lineNumber":204,"author":{"gitId":"pasha-292"},"content":"        try {"},{"lineNumber":205,"author":{"gitId":"pasha-292"},"content":"            LocalTime.parse(time);"},{"lineNumber":206,"author":{"gitId":"pasha-292"},"content":"            return true;"},{"lineNumber":207,"author":{"gitId":"pasha-292"},"content":"        } catch (Exception e) {"},{"lineNumber":208,"author":{"gitId":"pasha-292"},"content":"            return false;"},{"lineNumber":209,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":210,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":212,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":213,"author":{"gitId":"pasha-292"},"content":"     * Check if the string is a valid index"},{"lineNumber":214,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":215,"author":{"gitId":"pasha-292"},"content":"     * @param input"},{"lineNumber":216,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":217,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":218,"author":{"gitId":"pasha-292"},"content":"    public boolean validIndex(String input) {"},{"lineNumber":219,"author":{"gitId":"pasha-292"},"content":"        try {"},{"lineNumber":220,"author":{"gitId":"pasha-292"},"content":"            int index \u003d Integer.parseInt(input);"},{"lineNumber":221,"author":{"gitId":"pasha-292"},"content":"            if (index \u003c\u003d 0) {"},{"lineNumber":222,"author":{"gitId":"pasha-292"},"content":"                return false;"},{"lineNumber":223,"author":{"gitId":"pasha-292"},"content":"            } else {"},{"lineNumber":224,"author":{"gitId":"pasha-292"},"content":"                return true;"},{"lineNumber":225,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":226,"author":{"gitId":"pasha-292"},"content":"        } catch (Exception e) {"},{"lineNumber":227,"author":{"gitId":"pasha-292"},"content":"            return false;"},{"lineNumber":228,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":229,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"pasha-292":227,"-":3}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":" * Stores the dukeExceptions"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"    public DukeException() {"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"        super();"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":14}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"import javafx.geometry.Pos;"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.Node;"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.control.Label;"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"import java.io.IOException;"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"import java.util.Collections;"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"        return new DialogBox(text, img);"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"        db.flip();"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"        return db;"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"    private void flip() {"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"        Collections.reverse(tmp);"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":61}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":" * A GUI for Duke using FXML."},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"public class Main extends Application {"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"            stage.getIcons().add(new Image(\"/images/Logo.png\"));"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"            stage.setScene(scene);"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"            stage.show();"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":35}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import javafx.application.Platform;"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"import javafx.util.Duration;"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"    private final String logo \u003d \" ____        _        \\n\""},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"    private final String welcome \u003d \"Hello this is DUKE\\nHow may I help you?\";"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"    private VBox dialogContainer;"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"    private TextField userInput;"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"    private Button sendButton;"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"    private Duke duke;"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"    @FXML"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"    public void initialize() {"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcome, dukeImage));"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"     * Create an instance of duke"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"     * @param d"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"        duke \u003d d;"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"    @FXML"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"    private void handleUserInput() {"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"        if (response.equals(\"\")) {"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"            response \u003d \"Oops!!! Invalid Input :(\";"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"        );"},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":"        userInput.clear();"},{"lineNumber":68,"author":{"gitId":"pasha-292"},"content":"        if (input.equals(\"bye\") || input.equals(\"exit\")) {"},{"lineNumber":69,"author":{"gitId":"pasha-292"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));"},{"lineNumber":70,"author":{"gitId":"pasha-292"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":"            delay.play();"},{"lineNumber":72,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":75,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":75}},{"path":"src/main/java/duke/register/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.register;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":" * This class processes the command by breaking down into components"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"     * The various components of a command"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"     * Their might be overlaps, such as taskName and index are both second elements of commandSeparate array"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"     * but for different commands"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"    private final String command;"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    private final String[] commandSeparate;"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"    private String taskType;"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"    private String taskName;"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    private String date \u003d \"\";"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    private String index;"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    public Parser(String command) {"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"        this.command \u003d command;"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"        commandSeparate \u003d command.split(\" \");"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"    public void parseTaskType() {"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"        taskType \u003d commandSeparate[0].toLowerCase();"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"    public void parseTaskName() {"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"        taskName \u003d commandSeparate[1] + \" \" + commandSeparate[2];"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"    public void parseTaskDate() {"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"        if (commandSeparate.length \u003c\u003d 3) {"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"            date \u003d \"\";"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"            for (int i \u003d 4; i \u003c commandSeparate.length; i++) {"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"                date +\u003d i \u003d\u003d commandSeparate.length - 1"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"                        ? commandSeparate[i] : commandSeparate[i] + \" \";"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"     * This method parses the command"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"    public void parse() {"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"        if (commandSeparate.length \u003d\u003d 1) {"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"            parseTaskType();"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"        } else if (commandSeparate.length \u003d\u003d 2) {"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"            parseTaskType();"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"            index \u003d commandSeparate[1];"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"            taskName \u003d commandSeparate[1];"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"            parseTaskType();"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"            parseTaskName();"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"            parseTaskDate();"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"    public int getCommandLength() {"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"        return commandSeparate.length;"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"    public String getTaskType() {"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":"        return taskType;"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":68,"author":{"gitId":"pasha-292"},"content":"    public String getTaskName() {"},{"lineNumber":69,"author":{"gitId":"pasha-292"},"content":"        return taskName;"},{"lineNumber":70,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":72,"author":{"gitId":"pasha-292"},"content":"    public String getDate() {"},{"lineNumber":73,"author":{"gitId":"pasha-292"},"content":"        return date;"},{"lineNumber":74,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":76,"author":{"gitId":"pasha-292"},"content":"    public String getIndex() {"},{"lineNumber":77,"author":{"gitId":"pasha-292"},"content":"        return index;"},{"lineNumber":78,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":80,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"pasha-292"},"content":"     * This one is for inputting the note"},{"lineNumber":82,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":84,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"pasha-292"},"content":"    public String getTaskWithoutType() {"},{"lineNumber":86,"author":{"gitId":"pasha-292"},"content":"        String out \u003d \"\";"},{"lineNumber":87,"author":{"gitId":"pasha-292"},"content":"        for (int i \u003d 1; i \u003c commandSeparate.length; i++) {"},{"lineNumber":88,"author":{"gitId":"pasha-292"},"content":"            out +\u003d i \u003d\u003d commandSeparate.length - 1"},{"lineNumber":89,"author":{"gitId":"pasha-292"},"content":"                    ? commandSeparate[i] : commandSeparate[i] + \" \";"},{"lineNumber":90,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"pasha-292"},"content":"        return out;"},{"lineNumber":92,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":94,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":94}},{"path":"src/main/java/duke/register/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.register;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import duke.task.*;"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"import java.io.PrintWriter;"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":" * Storage class to store the data in a file"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    private final String path;"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    private final File file;"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"     * Constructor to initialize storage"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    public Storage(String filePath) {"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"        this.path \u003d filePath;"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"        file \u003d new File(filePath);"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"     * Checks if the file exist"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"    private void createIfNotExist() {"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"        if (file.exists()) {"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"            return;"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"            file.createNewFile();"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"     * Reads the data from the file and returns then in a task list"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"     * @throws DukeException"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"    public TaskList load() throws DukeException {"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"            TaskList taskList \u003d new TaskList();"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"            Scanner fio \u003d new Scanner(file);"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"            while (fio.hasNextLine()) {"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"                String line \u003d fio.nextLine();"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"                String[] command \u003d line.split(\" \");"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"                String type \u003d command[0];"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"                String status \u003d command[command.length - 1];"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"                if (type.equals(\"todo\")) {"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"                    TodoTask task \u003d new TodoTask(createTask(command));"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"                    if (status.equals(\"done\")) {"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"                        task.markDone();"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"                    }"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"                    taskList.addTask(task);"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"                } else if (type.equals(\"deadline\")) {"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"                    DeadlineTask task \u003d new DeadlineTask(createTask(command));"},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"                    if (status.equals(\"done\")) {"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":"                        task.markDone();"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"                    }"},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":"                    taskList.addTask(task);"},{"lineNumber":68,"author":{"gitId":"pasha-292"},"content":"                } else if (type.equals(\"event\")) {"},{"lineNumber":69,"author":{"gitId":"pasha-292"},"content":"                    EventTask task \u003d new EventTask(createTask(command));"},{"lineNumber":70,"author":{"gitId":"pasha-292"},"content":"                    if (status.equals(\"done\")) {"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":"                        task.markDone();"},{"lineNumber":72,"author":{"gitId":"pasha-292"},"content":"                    }"},{"lineNumber":73,"author":{"gitId":"pasha-292"},"content":"                    taskList.addTask(task);"},{"lineNumber":74,"author":{"gitId":"pasha-292"},"content":"                } else if (type.equals(\"add\")) {"},{"lineNumber":75,"author":{"gitId":"pasha-292"},"content":"                    taskList.addTask(new Notes(createTask(command)));"},{"lineNumber":76,"author":{"gitId":"pasha-292"},"content":"                }"},{"lineNumber":77,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"pasha-292"},"content":"            fio.close();"},{"lineNumber":79,"author":{"gitId":"pasha-292"},"content":"            return taskList;"},{"lineNumber":80,"author":{"gitId":"pasha-292"},"content":"        } catch (IOException e) {"},{"lineNumber":81,"author":{"gitId":"pasha-292"},"content":"            throw new DukeException(\"failed to load file\");"},{"lineNumber":82,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":85,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"pasha-292"},"content":"     * Creates a task line from the command array"},{"lineNumber":87,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"pasha-292"},"content":"     * @param command"},{"lineNumber":89,"author":{"gitId":"pasha-292"},"content":"     * @return task line"},{"lineNumber":90,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"pasha-292"},"content":"    public String createTask(String[] command) {"},{"lineNumber":92,"author":{"gitId":"pasha-292"},"content":"        String result \u003d \"\";"},{"lineNumber":93,"author":{"gitId":"pasha-292"},"content":"        for (int i \u003d 0; i \u003c command.length - 1; i++) {"},{"lineNumber":94,"author":{"gitId":"pasha-292"},"content":"            result +\u003d i \u003d\u003d command.length - 2"},{"lineNumber":95,"author":{"gitId":"pasha-292"},"content":"                    ? command[i] : command[i] + \" \";"},{"lineNumber":96,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"pasha-292"},"content":"        return result;"},{"lineNumber":98,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":100,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"pasha-292"},"content":"     * Saves the tasks into a file so that they can be loaded on to the taskList"},{"lineNumber":102,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"pasha-292"},"content":"     * @param tasks"},{"lineNumber":104,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"pasha-292"},"content":"    public void saveTask(TaskList tasks) {"},{"lineNumber":106,"author":{"gitId":"pasha-292"},"content":"        this.createIfNotExist();"},{"lineNumber":107,"author":{"gitId":"pasha-292"},"content":"        try {"},{"lineNumber":108,"author":{"gitId":"pasha-292"},"content":"            PrintWriter pw \u003d new PrintWriter(file);"},{"lineNumber":109,"author":{"gitId":"pasha-292"},"content":"            for (int i \u003d 0; i \u003c tasks.numOfTasks(); i++) {"},{"lineNumber":110,"author":{"gitId":"pasha-292"},"content":"                String status \u003d tasks.getTask(i).isDone() ? \"done\" : \"notDone\";"},{"lineNumber":111,"author":{"gitId":"pasha-292"},"content":"                pw.println(tasks.getTask(i).getTaskName() + \" \" + status);"},{"lineNumber":112,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"pasha-292"},"content":"            pw.close();"},{"lineNumber":114,"author":{"gitId":"pasha-292"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":115,"author":{"gitId":"pasha-292"},"content":"            e.printStackTrace();"},{"lineNumber":116,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":119,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":119}},{"path":"src/main/java/duke/register/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.register;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":" * This class is mainly for the text input"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"    Scanner ui;"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"    public Ui() {"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"        ui \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"     * Gets the command from the user"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"    public String getCommand() {"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"        return ui.nextLine();"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"    public void greetings() {"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"        System.out.println(logo + \"\\nHello this is Duke\\nHow may I help you?\");"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"    public void goodbye() {"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"        System.out.println(\"Goodbye for now.\\nHope to see you soon!\");"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":36}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":" * This class handles the deadlineTasks"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"     * Constructor for deadlines"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"     * @param task"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"    public DeadlineTask(String task) {"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"        super(task);"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"     * String representation of the deadline"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"        String taskRepresent \u003d \"\";"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"        taskRepresent \u003d getName() + \" (by: \" + getDateFormat();"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"        taskRepresent +\u003d getTime() \u003d\u003d null ? \")\""},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"                : \" \" + getTimeFormat() + \")\";"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"        if (this.isDone()) {"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"            return \"[D][X] \" + taskRepresent;"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"            return \"[D][-] \" + taskRepresent;"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":33}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":" * This class handles the eventTask."},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"public class EventTask extends Task {"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"     * Constructor for event"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"     * @param task"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    public EventTask(String task) {"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"        super(task);"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"     * String representation of event"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"        String taskRepresent \u003d \"\";"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"        taskRepresent \u003d getName() + \" (at: \" + getDateFormat();"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"        taskRepresent +\u003d getTime() \u003d\u003d null ? \")\""},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"                : \" \" + getTimeFormat() + \")\";"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"        if (this.isDone()) {"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"            return \"[E][X] \" + taskRepresent;"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"            return \"[E][-] \" + taskRepresent;"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":35}},{"path":"src/main/java/duke/task/Notes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":" * Notes class to store notes"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":" * This class extends Task so that they can be added to a taskList"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"public class Notes extends Task {"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"     * Constructor for Notes"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"     * @param task"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    public Notes(String task) {"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"        super(task);"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"        divideCommand \u003d task.split(\" \");"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"     * Returns the note Name"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"    public String getNote() {"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"        String note \u003d \"\";"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"        for (int i \u003d 1; i \u003c divideCommand.length; i++) {"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"            note +\u003d i \u003d\u003d divideCommand.length - 1"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"                    ? divideCommand[i] : divideCommand[i] + \" \";"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"        return note;"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"        return getNote();"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":" * Basic task class from which the specific tasks are formed"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"public class Task {"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"    String task;"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"    boolean done \u003d false;"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    String[] divideCommand;"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"    String[] taskPart;"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"    String[] datePart;"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    Task(String task) {"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"        this.task \u003d task;"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"        if (task.split(\" \")[0].equalsIgnoreCase(\"add\")) {"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"            divideCommand \u003d task.split(\" \");"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"        } else if (!task.split(\" \")[0].equalsIgnoreCase(\"todo\")) {"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"            divideCommand \u003d task.split(\"/\");"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"            taskPart \u003d divideCommand[0].split(\" \");"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"            datePart \u003d divideCommand[1].split(\" \");"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"     * Returns the type of task which is the first element of the array"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"    public String getType() {"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"        return task.split(\" \")[0];"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"     * Marks a task as done"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"    public void markDone() {"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"        this.done \u003d true;"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"     * Checks if a task is done"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"     * @return status of task"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"    public boolean isDone() {"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"        return this.done;"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"     * Returns the full task"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"     * @return entire task/command"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"    public String getTaskName() {"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"        return this.task;"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"     * Gets only the task name"},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":"     * @return just the task name"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":"    public String getName() {"},{"lineNumber":68,"author":{"gitId":"pasha-292"},"content":"        String result \u003d \"\";"},{"lineNumber":69,"author":{"gitId":"pasha-292"},"content":"        for (int i \u003d 1; i \u003c taskPart.length; i++) {"},{"lineNumber":70,"author":{"gitId":"pasha-292"},"content":"            result +\u003d i \u003d\u003d taskPart.length - 1"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":"                    ? taskPart[i] : taskPart[i] + \" \";"},{"lineNumber":72,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"pasha-292"},"content":"        return result;"},{"lineNumber":74,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":76,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"pasha-292"},"content":"     * returns the date of task to be completed"},{"lineNumber":78,"author":{"gitId":"pasha-292"},"content":"     * applicable to deadlines and events tasks"},{"lineNumber":79,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"pasha-292"},"content":"     * @return the date of the task"},{"lineNumber":81,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"pasha-292"},"content":"    public LocalDate getDate() {"},{"lineNumber":83,"author":{"gitId":"pasha-292"},"content":"        String StringDate \u003d \"\";"},{"lineNumber":84,"author":{"gitId":"pasha-292"},"content":"        StringDate \u003d datePart[1];"},{"lineNumber":85,"author":{"gitId":"pasha-292"},"content":"        return LocalDate.parse(StringDate);"},{"lineNumber":86,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":88,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"pasha-292"},"content":"     * Formats the date according to the specification"},{"lineNumber":90,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"pasha-292"},"content":"     * @return the formatted date"},{"lineNumber":92,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"pasha-292"},"content":"    public String getDateFormat() {"},{"lineNumber":94,"author":{"gitId":"pasha-292"},"content":"        return getDate().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":95,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":97,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"pasha-292"},"content":"     * Returns the size of the command"},{"lineNumber":99,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":101,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"pasha-292"},"content":"    public int getSizeOfCommand() {"},{"lineNumber":103,"author":{"gitId":"pasha-292"},"content":"        return divideCommand.length;"},{"lineNumber":104,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":106,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"pasha-292"},"content":"     * Returns the time of the task to be completed"},{"lineNumber":108,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":110,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"pasha-292"},"content":"    public LocalTime getTime() {"},{"lineNumber":112,"author":{"gitId":"pasha-292"},"content":"        String StringTime \u003d \"\";"},{"lineNumber":113,"author":{"gitId":"pasha-292"},"content":"        if (datePart.length \u003e 2) {"},{"lineNumber":114,"author":{"gitId":"pasha-292"},"content":"            StringTime \u003d datePart[2];"},{"lineNumber":115,"author":{"gitId":"pasha-292"},"content":"            return LocalTime.parse(StringTime);"},{"lineNumber":116,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":117,"author":{"gitId":"pasha-292"},"content":"            return null;"},{"lineNumber":118,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":121,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"pasha-292"},"content":"     * Structures the time in the relevant format"},{"lineNumber":123,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":124,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":125,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"pasha-292"},"content":"    public String getTimeFormat() {"},{"lineNumber":127,"author":{"gitId":"pasha-292"},"content":"        return getTime() \u003d\u003d null ? \"\""},{"lineNumber":128,"author":{"gitId":"pasha-292"},"content":"                : getTime().format(DateTimeFormatter.ofPattern(\"hh:mma\"));"},{"lineNumber":129,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":131,"author":{"gitId":"pasha-292"},"content":"    @Override"},{"lineNumber":132,"author":{"gitId":"pasha-292"},"content":"    public String toString() {"},{"lineNumber":133,"author":{"gitId":"pasha-292"},"content":"        if (this.isDone()) {"},{"lineNumber":134,"author":{"gitId":"pasha-292"},"content":"            return \"[X] \" + this.task;"},{"lineNumber":135,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":136,"author":{"gitId":"pasha-292"},"content":"            return \"[-] \" + this.task;"},{"lineNumber":137,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":139}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":" * Class for storing the taskList which stores the tasks"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"    ArrayList\u003cTask\u003e Tasks;"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"     * Initializes the task list as an arraylist"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"        Tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"     * Adds the task to the end of the list"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"     * @param task"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"     * @return Success message of adding"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"    public String addTask(Task task) {"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"        Tasks.add(task);"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"        String out \u003d \"Got it! Added: \\n\" + task + \"\\n\""},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"                + \"Now you have \" + numOfTasks() + \" items in your list\";"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"        return out;"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"     * This method silently adds the task to the end of the list"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"     * @param task"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"    public void silentAdd(Task task) {"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"        Tasks.add(task);"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"     * This method finds the tasks if they match the keyword"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"     * As an additional feature, partial match will also yeild results"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"     * Integrate BetterSearch into the existing findTask method"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"     * @param keyword"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"    public String findTask(String keyword) {"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"        String out \u003d \"\";"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"        TaskList matches \u003d new TaskList();"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"        for (Task t : Tasks) {"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"            String task \u003d t.getTaskName();"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"            if (task.contains(keyword)) {"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"                matches.silentAdd(t);"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"        if (matches.numOfTasks() \u003e 0) {"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"            out +\u003d \"We have found the following \" + matches.numOfTasks()"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"                    + \" item(s)\\n\";"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"            out +\u003d matches.getAllTasks();"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"            out +\u003d \"Sorry! Could not find any matches :(\";"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"        return out;"},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":69,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"pasha-292"},"content":"     * Deletes the task at idx"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"pasha-292"},"content":"     * @param idx"},{"lineNumber":73,"author":{"gitId":"pasha-292"},"content":"     * @return Message upon completion of the task"},{"lineNumber":74,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"pasha-292"},"content":"    public String DeleteTask(int idx) {"},{"lineNumber":76,"author":{"gitId":"pasha-292"},"content":"        assert idx \u003e 0 : \"Invalid Index!\";"},{"lineNumber":77,"author":{"gitId":"pasha-292"},"content":"        String out \u003d \"\";"},{"lineNumber":78,"author":{"gitId":"pasha-292"},"content":"        if (idx \u003c\u003d Tasks.size()) {"},{"lineNumber":79,"author":{"gitId":"pasha-292"},"content":"            out +\u003d \"Noted. Item removed: \\n\" + Tasks.get(idx - 1) + \"\\n\";"},{"lineNumber":80,"author":{"gitId":"pasha-292"},"content":"            Tasks.remove(idx - 1);"},{"lineNumber":81,"author":{"gitId":"pasha-292"},"content":"            out +\u003d \"Now you have \" + numOfTasks() + \" items in your list\";"},{"lineNumber":82,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":83,"author":{"gitId":"pasha-292"},"content":"            out +\u003d \"Sorry! The system does not have that many elements. Try again :(\";"},{"lineNumber":84,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"pasha-292"},"content":"        return out;"},{"lineNumber":86,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":88,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"pasha-292"},"content":"     * Marks task at idx as done"},{"lineNumber":90,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"pasha-292"},"content":"     * @param idx"},{"lineNumber":92,"author":{"gitId":"pasha-292"},"content":"     * @return Message upon the completion of task"},{"lineNumber":93,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"pasha-292"},"content":"    public String markAsDone(int idx) {"},{"lineNumber":95,"author":{"gitId":"pasha-292"},"content":"        assert idx \u003e 0 : \"Invalid Index!\";"},{"lineNumber":96,"author":{"gitId":"pasha-292"},"content":"        String out;"},{"lineNumber":97,"author":{"gitId":"pasha-292"},"content":"        if (idx \u003c\u003d Tasks.size()) {"},{"lineNumber":98,"author":{"gitId":"pasha-292"},"content":"            Tasks.get(idx - 1).markDone();"},{"lineNumber":99,"author":{"gitId":"pasha-292"},"content":"            out \u003d \"Task \" + idx + \" is complete:\\n\" + Tasks.get(idx - 1);"},{"lineNumber":100,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":101,"author":{"gitId":"pasha-292"},"content":"            out \u003d \"Sorry! The system does not have that many elements. Try again :(\";"},{"lineNumber":102,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"pasha-292"},"content":"        return out;"},{"lineNumber":104,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":106,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"pasha-292"},"content":"     * Gets the number of tasks"},{"lineNumber":108,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"pasha-292"},"content":"     * @return number of tasks"},{"lineNumber":110,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"pasha-292"},"content":"    public int numOfTasks() {"},{"lineNumber":112,"author":{"gitId":"pasha-292"},"content":"        return Tasks.size();"},{"lineNumber":113,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":115,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"pasha-292"},"content":"     * Gets the task at a given index"},{"lineNumber":117,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"pasha-292"},"content":"     * @param idx"},{"lineNumber":119,"author":{"gitId":"pasha-292"},"content":"     * @return task at idx"},{"lineNumber":120,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"pasha-292"},"content":"    public Task getTask(int idx) {"},{"lineNumber":122,"author":{"gitId":"pasha-292"},"content":"        assert idx \u003e\u003d 0 : \"Invalid Index!\";"},{"lineNumber":123,"author":{"gitId":"pasha-292"},"content":"        return Tasks.get(idx);"},{"lineNumber":124,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":126,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"pasha-292"},"content":"     * Checks the tasks\u0027 due dates with current date"},{"lineNumber":128,"author":{"gitId":"pasha-292"},"content":"     * If the the task is after/on current date, push reminder"},{"lineNumber":129,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"pasha-292"},"content":"     * @return List of all the due tasks"},{"lineNumber":131,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"pasha-292"},"content":"    public String getReminders() {"},{"lineNumber":133,"author":{"gitId":"pasha-292"},"content":"        String out \u003d \"These are the due tasks: \\n\";"},{"lineNumber":134,"author":{"gitId":"pasha-292"},"content":"        TaskList dues \u003d new TaskList();"},{"lineNumber":135,"author":{"gitId":"pasha-292"},"content":"        LocalDate today \u003d LocalDate.now();"},{"lineNumber":136,"author":{"gitId":"pasha-292"},"content":"        for (Task t : Tasks) {"},{"lineNumber":137,"author":{"gitId":"pasha-292"},"content":"            if (!t.isDone()) {"},{"lineNumber":138,"author":{"gitId":"pasha-292"},"content":"                if (t.getType().equalsIgnoreCase(\"deadline\")"},{"lineNumber":139,"author":{"gitId":"pasha-292"},"content":"                        || t.getType().equalsIgnoreCase(\"event\")) {"},{"lineNumber":140,"author":{"gitId":"pasha-292"},"content":"                    if (today.compareTo(t.getDate()) \u003c\u003d 0) {"},{"lineNumber":141,"author":{"gitId":"pasha-292"},"content":"                        dues.silentAdd(t);"},{"lineNumber":142,"author":{"gitId":"pasha-292"},"content":"                    }"},{"lineNumber":143,"author":{"gitId":"pasha-292"},"content":"                }"},{"lineNumber":144,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"pasha-292"},"content":"        out +\u003d dues.getAllTasks();"},{"lineNumber":147,"author":{"gitId":"pasha-292"},"content":"        return out;"},{"lineNumber":148,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":150,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"pasha-292"},"content":"     * The method returns all the tasks in a String representation"},{"lineNumber":152,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":153,"author":{"gitId":"pasha-292"},"content":"     * @return all the tasks"},{"lineNumber":154,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"pasha-292"},"content":"    public String getAllTasks() {"},{"lineNumber":156,"author":{"gitId":"pasha-292"},"content":"        String out \u003d \"Contents: \\n\";"},{"lineNumber":157,"author":{"gitId":"pasha-292"},"content":"        for (int j \u003d 0; j \u003c Tasks.size(); j++) {"},{"lineNumber":158,"author":{"gitId":"pasha-292"},"content":"            if (Tasks.get(j) instanceof TodoTask) {"},{"lineNumber":159,"author":{"gitId":"pasha-292"},"content":"                out +\u003d j + 1 + \".\" + Tasks.get(j) + \"\\n\";"},{"lineNumber":160,"author":{"gitId":"pasha-292"},"content":"            } else if (Tasks.get(j) instanceof DeadlineTask) {"},{"lineNumber":161,"author":{"gitId":"pasha-292"},"content":"                out +\u003d j + 1 + \".\" + Tasks.get(j) + \"\\n\";"},{"lineNumber":162,"author":{"gitId":"pasha-292"},"content":"            } else if (Tasks.get(j) instanceof EventTask) {"},{"lineNumber":163,"author":{"gitId":"pasha-292"},"content":"                out +\u003d j + 1 + \".\" + Tasks.get(j) + \"\\n\";"},{"lineNumber":164,"author":{"gitId":"pasha-292"},"content":"            } else {"},{"lineNumber":165,"author":{"gitId":"pasha-292"},"content":"                out +\u003d j + 1 + \".\" + Tasks.get(j) + \"\\n\";"},{"lineNumber":166,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":167,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"pasha-292"},"content":"        return out;"},{"lineNumber":169,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":171,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":171}},{"path":"src/main/java/duke/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":" * This class handles the TodoTask."},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"public class TodoTask extends Task {"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"     * Constructor of todoTask"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"     * @param task"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"    public TodoTask(String task) {"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"        super(task);"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"        divideCommand \u003d task.split(\" \");"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"    public String getName() {"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"        String result \u003d \"\";"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"        for (int i \u003d 1; i \u003c divideCommand.length; i++) {"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"            result +\u003d i \u003d\u003d divideCommand.length - 1"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"                    ? divideCommand[i] : divideCommand[i] + \" \";"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"        return result;"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"     * String representation of todoTask"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"    public String toString() {"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"        if (this.isDone()) {"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"            return \"[T][X] \" + getName();"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"            return \"[T][-] \" + getName();"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":40}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\""},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"         maxWidth\u003d\"1.7976931348623157E308\""},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"\u003e"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\""},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"               style\u003d\"-fx-background-color: rgba(255, 255, 255, 0.5); -fx-padding: 10; -fx-background-radius: 10;\""},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"               text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"    \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    \u003cpadding\u003e"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"    \u003c/padding\u003e"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"pasha-292":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.ParallelCamera?\u003e"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\""},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"            minWidth\u003d\"-Infinity\""},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\""},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"            fx:controller\u003d\"duke.gui.MainWindow\"\u003e"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    \u003cchildren\u003e"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"                    vvalue\u003d\"1.0\"\u003e"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"            \u003ccontent\u003e"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"            \u003c/content\u003e"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"        \u003cParallelCamera/\u003e"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"    \u003c/children\u003e"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"pasha-292":26}},{"path":"src/test/java/duke/task/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"public class DeadlineTaskTest {"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"    public void Test1() {"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"        DeadlineTask dTask \u003d new DeadlineTask(\"deadline do assignment /by 2021-03-15\");"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"        String dTaskString \u003d dTask.toString();"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"        assertEquals(\"[D][ ] do assignment (by: Mar 15 2021)\", dTaskString);"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    public void Test2() {"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"        DeadlineTask dTask \u003d new DeadlineTask(\"deadline do assignment /by 2021-03-15\");"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"        dTask.markDone();"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"        String dTaskString \u003d dTask.toString();"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"        assertNotEquals(\"[D][ ] do assignment (by: Mar 15 2021)\", dTaskString);"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":23}},{"path":"src/test/java/duke/task/TodoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"public class TodoTaskTest {"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"    public void Test1() {"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"        TodoTask task \u003d new TodoTask(\"todo read books\");"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"        String taskRepresentation \u003d task.toString();"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"        assertEquals(\"[T][ ] todo read books\", taskRepresentation);"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    public void Test2() {"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"        TodoTask task \u003d new TodoTask(\"todo read books\");"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"        task.markDone();"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"        String taskRepresentation \u003d task.toString();"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"        assertNotEquals(\"[T][ ] todo read books\", taskRepresentation);"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"list"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"deadline do homework /by Monday"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"done 3"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"event attend meeting /at 6:45pm"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"todo make coffee"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"todo clean room"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"done 5"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"list"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"delete 5"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"list"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"bye"}],"authorContributionMap":{"pasha-292":13}},{"path":"text-ui-test/output.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":" ____        _        "},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"|  _ \\ _   _| | _____ "},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"| | | | | | | |/ / _ \\"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"| |_| | |_| |   \u003c  __/"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"|____/ \\__,_|_|\\_\\___|"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"Hello this is Duke"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"How may I help you?"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"todo borrow book"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"Got it! Added: "},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"[T][ ] todo borrow book"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"Now you have 1 items in your list"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"list"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"Contents: "},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"1.[T][ ] todo borrow book"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"deadline return book /by Sunday"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"Got it! Added: "},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"[D][ ] return book (by: Sunday)"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"Now you have 2 items in your list"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"deadline do homework /by Monday"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"Got it! Added: "},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"[D][ ] do homework (by: Monday)"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"Now you have 3 items in your list"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"done 3"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"Task 3 is complete:"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"[D][X] do homework (by: Monday)"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"event attend meeting /at 6:45pm"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"Got it! Added: "},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"[E][ ] attend meeting (at: 6:45pm)"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"Now you have 4 items in your list"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"todo make coffee"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"Got it! Added: "},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"[T][ ] todo make coffee"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"Now you have 5 items in your list"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"todo clean room"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"Got it! Added: "},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"[T][ ] todo clean room"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"Now you have 6 items in your list"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"done 5"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"Task 5 is complete:"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"[T][X] todo make coffee"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"list"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"Contents: "},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"1.[T][ ] todo borrow book"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"2.[D][ ] return book (by: Sunday)"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"3.[D][X] do homework (by: Monday)"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"4.[E][ ] attend meeting (at: 6:45pm)"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"5.[T][X] todo make coffee"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"6.[T][ ] todo clean room"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"delete 5"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"Noted. Task removed: "},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"[T][X] todo make coffee"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"Now you have 5 items in your list"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"list"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"Contents: "},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"1.[T][ ] todo borrow book"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"2.[D][ ] return book (by: Sunday)"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"3.[D][X] do homework (by: Monday)"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"4.[E][ ] attend meeting (at: 6:45pm)"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"5.[T][ ] todo clean room"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"bye"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"Goodbye for now."},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"Hope to see you soon!"}],"authorContributionMap":{"pasha-292":63}}]
