[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"pasha-292":16,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"deadline do assignment /by 2021-01-01 undone"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"todo read book done"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"deadline attend meeting /by 2021-05-18 done"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"event attend dinner /at 2021-03-15 undone"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"todo prepare coffee undone"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"deadline do homework /by 2021-10-31 undone"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"event attend wedding /at 2021-02-15 undone"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"todo go exercise done"}],"authorContributionMap":{"pasha-292":8}},{"path":"data/dukeGUI.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"deadline do assignment /by 2021-01-01 undone"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"todo read book done"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"deadline attend meeting /by 2021-05-18 done"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"event attend dinner /at 2021-03-15 undone"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"todo prepare coffee undone"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"deadline do homework /by 2021-10-31 undone"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"event attend wedding /at 2021-02-15 undone"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"todo visit gym done"}],"authorContributionMap":{"pasha-292":8}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import duke.gui.Main;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import duke.register.Parser;"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import duke.register.Storage;"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"import duke.task.DeadlineTask;"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"import duke.task.EventTask;"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"import duke.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"import duke.task.TodoTask;"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"import javafx.application.Application;"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":" * The class where duke is initialized and then launch GUI"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    private TaskList taskList;"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"    private Storage storage;"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    public Duke(String path) {"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"        storage \u003d new Storage(path);"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"            taskList \u003d storage.load();"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"        } catch (Exception e) {"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"     * This method takes in the input from the GUI"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"     * @param input"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"     * @return the result of the command"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"    public String processGUI(String input) {"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"        String command \u003d input;"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"        Parser p \u003d new Parser(command);"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"        p.parse();"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"        String TaskType \u003d p.getTaskType().toLowerCase();"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"        String result \u003d \"\";"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"        if (TaskType.equals(\"bye\") || TaskType.equals(\"exit\")) {"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"            storage.saveTask(taskList);"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"            result \u003d \"Goodbye for now.\\nHope to see you soon!\";"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"        } else if (TaskType.equals(\"list\")) {"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"            result \u003d taskList.printTasks();"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"        } else if (p.getCommandLength() \u003e 1) {"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"            if (TaskType.equals(\"done\")) {"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"                result \u003d taskList.markAsDone(Integer.parseInt(p.getIndex()));"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"            } else if (TaskType.equals(\"delete\") || TaskType.equals(\"remove\")) {"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"                result \u003d taskList.DeleteTask(Integer.parseInt(p.getIndex()));"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"            } else if (TaskType.equals(\"find\") || TaskType.equals(\"search\")) {"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"                result \u003d taskList.findTask(p.getTaskName());"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"            } else if (TaskType.equals(\"todo\")) {"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"                result \u003d taskList.addTask(new TodoTask(command));"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"            } else if (TaskType.equals(\"deadline\")) {"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"                result \u003d taskList.addTask(new DeadlineTask(command));"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"            } else if (TaskType.equals(\"event\")) {"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"                result \u003d taskList.addTask(new EventTask(command));"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"            if (TaskType.equals(\"todo\") || TaskType.equals(\"deadline\")"},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"                    || TaskType.equals(\"event\")) {"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":"                result \u003d \"Oops!!! Incomplete command :(\";"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"            } else {"},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":"                result \u003d \"Oops!!! Invalid Input :(\";"},{"lineNumber":68,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"pasha-292"},"content":"        return result;"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":73,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"pasha-292"},"content":"     * Returns Duke\u0027s response to the GUI"},{"lineNumber":75,"author":{"gitId":"pasha-292"},"content":"     * @param input"},{"lineNumber":76,"author":{"gitId":"pasha-292"},"content":"     * @return response"},{"lineNumber":77,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"pasha-292"},"content":"    public String getResponse(String input) {"},{"lineNumber":79,"author":{"gitId":"pasha-292"},"content":"        return processGUI(input);"},{"lineNumber":80,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":82,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"pasha-292"},"content":"     * The main method launching Duke"},{"lineNumber":84,"author":{"gitId":"pasha-292"},"content":"     * @param args"},{"lineNumber":85,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"pasha-292"},"content":"    public static void main(String[] args) {"},{"lineNumber":87,"author":{"gitId":"pasha-292"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":88,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"pasha-292":86,"-":3}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":" * Stores the dukeExceptions"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"public class DukeException extends Exception{"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"    public DukeException(String errorMessage){"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"        super(errorMessage);"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":9}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"import javafx.geometry.Pos;"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.Node;"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.control.Label;"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"import java.io.IOException;"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"import java.util.Collections;"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":61}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    private Duke duke \u003d new Duke(\"data/dukeGUI.txt\");"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":32}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"    private Duke duke;"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"    private String logo \u003d \" ____        _        \\n\""},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"    private String welcome \u003d \"Hello this is DUKE\\nHow may I help you?\";"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"    @FXML"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"    public void initialize() {"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcome, dukeImage));"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"        duke \u003d d;"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"    @FXML"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"    private void handleUserInput() {"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"        );"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"        userInput.clear();"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":62}},{"path":"src/main/java/duke/register/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.register;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":" * This class processes the command by breaking down into components"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"    private String command;"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"    private String[] commandSeparate;"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"    private String taskType;"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"    private String taskName;"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"    private String date \u003d \"\";"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"    private String index;"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    public Parser(String command) {"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"        this.command \u003d command;"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"        commandSeparate \u003d command.split(\" \");"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"    public void parseTaskType() {"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"        taskType \u003d commandSeparate[0].toLowerCase();"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    public void parseTaskName() {"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"        taskName \u003d commandSeparate[1] + \" \" + commandSeparate[2];"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"    public void parseTaskDate() {"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"        if (commandSeparate.length \u003c\u003d 3) {"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"            date \u003d \"\";"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"            for (int i \u003d 4; i \u003c commandSeparate.length; i++) {"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"                date +\u003d i \u003d\u003d commandSeparate.length - 1"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"                        ? commandSeparate[i] : commandSeparate[i] + \" \";"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"    public void parse() {"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"        if (commandSeparate.length \u003d\u003d 1) {"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"            parseTaskType();"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"        } else if (commandSeparate.length \u003d\u003d 2) {"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"            parseTaskType();"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"            index \u003d commandSeparate[1];"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"            taskName \u003d commandSeparate[1];"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"            parseTaskType();"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"            parseTaskName();"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"            parseTaskDate();"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"    public int getCommandLength() {"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"        return commandSeparate.length;"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"    public String getTaskType() {"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"        return taskType;"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"    public String getTaskName() {"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"        return taskName;"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"    public String getDate() {"},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"        return date;"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":"    public String getIndex(){"},{"lineNumber":68,"author":{"gitId":"pasha-292"},"content":"        return index;"},{"lineNumber":69,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":71}},{"path":"src/main/java/duke/register/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.register;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import duke.task.*;"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"import java.io.PrintWriter;"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":" * Storage class to store the data in a file"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    private String path;"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    private File file;"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"     * Constructor to initialize storage"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    public Storage(String filePath) {"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"        this.path \u003d filePath;"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"        file \u003d new File(filePath);"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"     * Checks if the file exist"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"    public void checkIfExist() {"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"        if (file.exists()) {"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"            return;"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"            file.createNewFile();"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"     * Reads the data from the file and returns then in a task list"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"     * @throws DukeException"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"    public TaskList load() throws DukeException {"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"            TaskList taskList \u003d new TaskList();"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"            Scanner fio \u003d new Scanner(file);"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"            while (fio.hasNextLine()) {"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"                String line \u003d fio.nextLine();"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"                String[] command \u003d line.split(\" \");"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"                String type \u003d command[0];"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"                String status \u003d command[command.length - 1];"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"                if (type.equals(\"todo\")) {"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"                    TodoTask task \u003d new TodoTask(createTask(command));"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"                    if (status.equals(\"done\")) {"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"                        task.markDone();"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"                    }"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"                    taskList.addTask(task);"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"                } else if (type.equals(\"deadline\")) {"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"                    DeadlineTask task \u003d new DeadlineTask(createTask(command));"},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"                    if (status.equals(\"done\")) {"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":"                        task.markDone();"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"                    }"},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":"                    taskList.addTask(task);"},{"lineNumber":68,"author":{"gitId":"pasha-292"},"content":"                } else if (type.equals(\"event\")) {"},{"lineNumber":69,"author":{"gitId":"pasha-292"},"content":"                    EventTask task \u003d new EventTask(createTask(command));"},{"lineNumber":70,"author":{"gitId":"pasha-292"},"content":"                    if (status.equals(\"done\")) {"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":"                        task.markDone();"},{"lineNumber":72,"author":{"gitId":"pasha-292"},"content":"                    }"},{"lineNumber":73,"author":{"gitId":"pasha-292"},"content":"                    taskList.addTask(task);"},{"lineNumber":74,"author":{"gitId":"pasha-292"},"content":"                }"},{"lineNumber":75,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"pasha-292"},"content":"            fio.close();"},{"lineNumber":77,"author":{"gitId":"pasha-292"},"content":"            return taskList;"},{"lineNumber":78,"author":{"gitId":"pasha-292"},"content":"        } catch (IOException e) {"},{"lineNumber":79,"author":{"gitId":"pasha-292"},"content":"            throw new DukeException(\"failed to load file\");"},{"lineNumber":80,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":83,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"pasha-292"},"content":"     * Creates a task line from the command array"},{"lineNumber":85,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"pasha-292"},"content":"     * @param command"},{"lineNumber":87,"author":{"gitId":"pasha-292"},"content":"     * @return task line"},{"lineNumber":88,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"pasha-292"},"content":"    public String createTask(String[] command) {"},{"lineNumber":90,"author":{"gitId":"pasha-292"},"content":"        String result \u003d \"\";"},{"lineNumber":91,"author":{"gitId":"pasha-292"},"content":"        for (int i \u003d 0; i \u003c command.length - 1; i++) {"},{"lineNumber":92,"author":{"gitId":"pasha-292"},"content":"            result +\u003d i \u003d\u003d command.length - 2"},{"lineNumber":93,"author":{"gitId":"pasha-292"},"content":"                    ? command[i] : command[i] + \" \";"},{"lineNumber":94,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"pasha-292"},"content":"        return result;"},{"lineNumber":96,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":98,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"pasha-292"},"content":"     * Saves the tasks into a file so that they can be loaded on to the taskList"},{"lineNumber":100,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"pasha-292"},"content":"     * @param tasks"},{"lineNumber":102,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"pasha-292"},"content":"    public void saveTask(TaskList tasks) {"},{"lineNumber":104,"author":{"gitId":"pasha-292"},"content":"        this.checkIfExist();"},{"lineNumber":105,"author":{"gitId":"pasha-292"},"content":"        try {"},{"lineNumber":106,"author":{"gitId":"pasha-292"},"content":"            PrintWriter pw \u003d new PrintWriter(file);"},{"lineNumber":107,"author":{"gitId":"pasha-292"},"content":"            for (int i \u003d 0; i \u003c tasks.numOfTasks(); i++) {"},{"lineNumber":108,"author":{"gitId":"pasha-292"},"content":"                String status \u003d tasks.getTask(i).isDone() ? \"done\" : \"undone\";"},{"lineNumber":109,"author":{"gitId":"pasha-292"},"content":"                pw.println(tasks.getTask(i).getTaskName() + \" \" + status);"},{"lineNumber":110,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"pasha-292"},"content":"            pw.close();"},{"lineNumber":112,"author":{"gitId":"pasha-292"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":113,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":114,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":117,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":117}},{"path":"src/main/java/duke/register/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.register;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":" * This class is mainly for the input"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"    Scanner ui;"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"    public Ui() {"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"        ui \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"     * Gets the command from the user"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"     * @return"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"    public String getCommand() {"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"        return ui.nextLine();"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"    public void greetings() {"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"        System.out.println(logo + \"\\nHello this is Duke\\nHow may I help you?\");"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"    public void goodbye() {"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"        System.out.println(\"Goodbye for now.\\nHope to see you soon!\");"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":36}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":" * This class handles the deadlineTasks"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"    private LocalDate date;"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"    public DeadlineTask(String task) {"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"        super(task);"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"    String[] divideCommand \u003d task.split(\" \");"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"        String time \u003d \"\";"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"        for (int i \u003d 4; i \u003c divideCommand.length; i++) {"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"            if (i \u003d\u003d divideCommand.length - 1) {"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"                time +\u003d divideCommand[i];"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"            } else {"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"                time +\u003d divideCommand[i] + \" \";"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"        date \u003d LocalDate.parse(time);"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"        String dateFormat \u003d date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"        String taskRepresent \u003d divideCommand[1] + \" \" + divideCommand[2]"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"                + \" (\" + divideCommand[3].substring(1) + \": \" + dateFormat + \")\";"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"        if (this.isDone()) {"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"            return \"[D][X] \" + taskRepresent;"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"            return \"[D][ ] \" + taskRepresent;"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":37}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":" * This class handles the eventTask."},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"public class EventTask extends Task {"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"    private LocalDate date;"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"    public EventTask(String task) {"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"        super(task);"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    String[] divideCommand \u003d task.split(\" \");"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"        String time \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"        for (int i \u003d 4; i \u003c divideCommand.length; i++) {"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"            if (i \u003d\u003d divideCommand.length - 1) {"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"                time +\u003d divideCommand[i];"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"            } else {"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"                time +\u003d divideCommand[i] + \" \";"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"        date \u003d LocalDate.parse(time);"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"        String dateFormat \u003d date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"        String taskRepresent \u003d divideCommand[1] + \" \" + divideCommand[2]"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"                + \" (\" + divideCommand[3].substring(1) + \": \" + dateFormat + \")\";"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"        if (this.isDone()) {"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"            return \"[E][X] \" + taskRepresent;"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"            return \"[E][ ] \" + taskRepresent;"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":38}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":" * Basic task class from which the specific tasks are formed"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"    String task;"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"    boolean done \u003d false;"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"    Task(String task) {"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"        this.task \u003d task;"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    public void markDone() {"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"        this.done \u003d true;"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    public boolean isDone() {"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"        return this.done;"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"    public String getTaskName() {"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"        return this.task;"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"        if (this.isDone()) {"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"            return \"[X] \" + this.task;"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"            return \"[ ] \" + this.task;"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":33}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":" * Class for storing the taskList which stores the tasks"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"    ArrayList\u003cTask\u003e Tasks;"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"    //Initializes the taskList"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"    public TaskList() {"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"        Tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    //Adds a task to the task list."},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    public String addTask(Task task) {"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"        Tasks.add(task);"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"        String out \u003d \"Got it! Added: \\n\" + task + \"\\n\""},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"                + \"Now you have \" + numOfTasks() + \" items in your list\";"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"        return out;"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"    //Second add method which does not print any message"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"    public void silentAdd(Task task) {"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"        Tasks.add(task);"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"    //Returns a taskList of the tasks that have matching keyword."},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"    public String findTask(String keyword) {"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"        String out \u003d \"\";"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"        TaskList matches \u003d new TaskList();"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"        for (Task t : Tasks) {"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"            String task \u003d t.getTaskName();"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"            String[] taskName \u003d task.split(\" \");"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"            if (keyword.equals(taskName[0]) || keyword.equals(taskName[1])"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"                    || keyword.equals(taskName[2])) {"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"                matches.silentAdd(t);"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"            } else if (taskName[0].contains(keyword) || taskName[1].contains(keyword)"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"                    || taskName[2].contains(keyword)) {"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"                matches.silentAdd(t);"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"        if (matches.numOfTasks() \u003e 0) {"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"            out +\u003d \"We have found the following tasks\\n\";"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"            System.out.println(\"We have found the following tasks\");"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"            out +\u003d matches.printTasks();"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"            out +\u003d \"Sorry! Could not find any matches :(\";"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"        return out;"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"    //Delete a task"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"    public String DeleteTask(int idx) {"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"        String out \u003d \"\";"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"        if (idx \u003c\u003d Tasks.size()) {"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"            out +\u003d \"Noted. Task removed: \\n\" + Tasks.get(idx - 1) + \"\\n\";"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"            Tasks.remove(idx - 1);"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"            out +\u003d \"Now you have \" + numOfTasks() + \" items in your list\";"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"            out +\u003d \"Sorry! The system does not have that many elements. Try again :(\";"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"        return out;"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":"    //Marks a task as done"},{"lineNumber":68,"author":{"gitId":"pasha-292"},"content":"    public String markAsDone(int idx) {"},{"lineNumber":69,"author":{"gitId":"pasha-292"},"content":"        String out;"},{"lineNumber":70,"author":{"gitId":"pasha-292"},"content":"        if (idx \u003c\u003d Tasks.size()) {"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":"            Tasks.get(idx - 1).markDone();"},{"lineNumber":72,"author":{"gitId":"pasha-292"},"content":"            out \u003d \"Task \" + idx + \" is complete:\\n\" + Tasks.get(idx - 1);"},{"lineNumber":73,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":74,"author":{"gitId":"pasha-292"},"content":"            out \u003d \"Sorry! The system does not have that many elements. Try again :(\";"},{"lineNumber":75,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"pasha-292"},"content":"        return out;"},{"lineNumber":77,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":79,"author":{"gitId":"pasha-292"},"content":"    //Retrieves the number of tasks"},{"lineNumber":80,"author":{"gitId":"pasha-292"},"content":"    public int numOfTasks() {"},{"lineNumber":81,"author":{"gitId":"pasha-292"},"content":"        return Tasks.size();"},{"lineNumber":82,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":84,"author":{"gitId":"pasha-292"},"content":"    //Retrieves the task at the given index"},{"lineNumber":85,"author":{"gitId":"pasha-292"},"content":"    public Task getTask(int idx) {"},{"lineNumber":86,"author":{"gitId":"pasha-292"},"content":"        return Tasks.get(idx);"},{"lineNumber":87,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":89,"author":{"gitId":"pasha-292"},"content":"    //Prints all the tasks"},{"lineNumber":90,"author":{"gitId":"pasha-292"},"content":"    public String printTasks() {"},{"lineNumber":91,"author":{"gitId":"pasha-292"},"content":"        String out \u003d \"Contents: \\n\";"},{"lineNumber":92,"author":{"gitId":"pasha-292"},"content":"        for (int j \u003d 0; j \u003c Tasks.size(); j++) {"},{"lineNumber":93,"author":{"gitId":"pasha-292"},"content":"            if (Tasks.get(j) instanceof TodoTask) {"},{"lineNumber":94,"author":{"gitId":"pasha-292"},"content":"                out +\u003d j + 1 + \".\" + Tasks.get(j) + \"\\n\";"},{"lineNumber":95,"author":{"gitId":"pasha-292"},"content":"            } else if (Tasks.get(j) instanceof DeadlineTask) {"},{"lineNumber":96,"author":{"gitId":"pasha-292"},"content":"                out +\u003d j + 1 + \".\" + Tasks.get(j) + \"\\n\";"},{"lineNumber":97,"author":{"gitId":"pasha-292"},"content":"            } else if (Tasks.get(j) instanceof EventTask) {"},{"lineNumber":98,"author":{"gitId":"pasha-292"},"content":"                out +\u003d j + 1 + \".\" + Tasks.get(j) + \"\\n\";"},{"lineNumber":99,"author":{"gitId":"pasha-292"},"content":"            } else {"},{"lineNumber":100,"author":{"gitId":"pasha-292"},"content":"                out +\u003d j + 1 + \".\" + Tasks.get(j) + \"\\n\";"},{"lineNumber":101,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"pasha-292"},"content":"        return out;"},{"lineNumber":104,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":105}},{"path":"src/main/java/duke/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":" * This class handles the TodoTask."},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"public class TodoTask extends Task {"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"    public TodoTask(String task) {"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"        super(task);"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"        if (this.isDone()) {"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"            return \"[T][X] \" + task;"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"            return \"[T][ ] \" + task;"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":18}},{"path":"src/main/java/duke/textUi/DukeText.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.textUi;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import duke.register.Storage;"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import duke.register.Ui;"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import duke.task.DeadlineTask;"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"import duke.task.EventTask;"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"import duke.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"import duke.task.TodoTask;"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"import duke.register.Parser;"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":" * The main class where the duke text ui is run"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":" */"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"public class DukeText {"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    private Ui ui;"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    private TaskList taskList;"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"    private Storage storage;"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"    public DukeText(String path) {"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"        ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"        storage \u003d new Storage(path);"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"            taskList \u003d storage.load();"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"        } catch (Exception e) {"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"        ui.greetings();"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"    //Uses the UI and runs against various conditions"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"    public void process() throws DukeException {"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"        String command;"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"        while (true) {"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"            command \u003d ui.getCommand();"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"            Parser p \u003d new Parser(command);"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"            p.parse();"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"            String TaskType \u003d p.getTaskType();"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"            if (command.equals(\"bye\") || command.equals(\"exit\")) {"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"                ui.goodbye();"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"                storage.saveTask(taskList);"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"                break;"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"            } else if (command.equals(\"list\")) {"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"                printMessage(taskList.printTasks());"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"            } else if (p.getCommandLength() \u003e 1) {"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"                if (TaskType.equals(\"done\")) {"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"                    printMessage(taskList.markAsDone(Integer.parseInt(p.getIndex())));"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"                } else if (TaskType.equals(\"delete\") || TaskType.equals(\"remove\")) {"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"                    printMessage(taskList.DeleteTask(Integer.parseInt(p.getIndex())));"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"                } else if (TaskType.equals(\"find\") || TaskType.equals(\"search\")) {"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"                    printMessage(taskList.findTask(p.getTaskName()));"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"                } else if (TaskType.equals(\"todo\")) {"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"                    printMessage(taskList.addTask(new TodoTask(command)));"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"                } else if (TaskType.equals(\"deadline\")) {"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"                    printMessage(taskList.addTask(new DeadlineTask(command)));"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"                } else if (TaskType.equals(\"event\")) {"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"                    printMessage(taskList.addTask(new EventTask(command)));"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"                }"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"            } else {"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"                if (TaskType.equals(\"todo\") || TaskType.equals(\"deadline\")"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"                        || TaskType.equals(\"event\")) {"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"                    throw new DukeException(\"Oops!!! Incomplete command :(\");"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"                } else {"},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"                    throw new DukeException(\"Oops!!! Invalid Input :(\");"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":"                }"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":70,"author":{"gitId":"pasha-292"},"content":"    public String processGUI(String input) {"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":"        String command \u003d input;"},{"lineNumber":72,"author":{"gitId":"pasha-292"},"content":"        Parser p \u003d new Parser(command);"},{"lineNumber":73,"author":{"gitId":"pasha-292"},"content":"        p.parse();"},{"lineNumber":74,"author":{"gitId":"pasha-292"},"content":"        String TaskType \u003d p.getTaskType();"},{"lineNumber":75,"author":{"gitId":"pasha-292"},"content":"        String result \u003d \"\";"},{"lineNumber":76,"author":{"gitId":"pasha-292"},"content":"        if (command.equals(\"bye\") || command.equals(\"exit\")) {"},{"lineNumber":77,"author":{"gitId":"pasha-292"},"content":"            ui.goodbye();"},{"lineNumber":78,"author":{"gitId":"pasha-292"},"content":"            storage.saveTask(taskList);"},{"lineNumber":79,"author":{"gitId":"pasha-292"},"content":"            result \u003d \"Goodbye for now.\\nHope to see you soon!\";"},{"lineNumber":80,"author":{"gitId":"pasha-292"},"content":"        } else if (command.equals(\"list\")) {"},{"lineNumber":81,"author":{"gitId":"pasha-292"},"content":"            result \u003d taskList.printTasks();"},{"lineNumber":82,"author":{"gitId":"pasha-292"},"content":"        } else if (p.getCommandLength() \u003e 1) {"},{"lineNumber":83,"author":{"gitId":"pasha-292"},"content":"            if (TaskType.equals(\"done\")) {"},{"lineNumber":84,"author":{"gitId":"pasha-292"},"content":"                result \u003d taskList.markAsDone(Integer.parseInt(p.getIndex()));"},{"lineNumber":85,"author":{"gitId":"pasha-292"},"content":"            } else if (TaskType.equals(\"delete\") || TaskType.equals(\"remove\")) {"},{"lineNumber":86,"author":{"gitId":"pasha-292"},"content":"                result \u003d taskList.DeleteTask(Integer.parseInt(p.getIndex()));"},{"lineNumber":87,"author":{"gitId":"pasha-292"},"content":"            } else if (TaskType.equals(\"find\") || TaskType.equals(\"search\")) {"},{"lineNumber":88,"author":{"gitId":"pasha-292"},"content":"                result \u003d taskList.findTask(p.getTaskName());"},{"lineNumber":89,"author":{"gitId":"pasha-292"},"content":"            } else if (TaskType.equals(\"todo\")) {"},{"lineNumber":90,"author":{"gitId":"pasha-292"},"content":"                result \u003d taskList.addTask(new TodoTask(command));"},{"lineNumber":91,"author":{"gitId":"pasha-292"},"content":"            } else if (TaskType.equals(\"deadline\")) {"},{"lineNumber":92,"author":{"gitId":"pasha-292"},"content":"                result \u003d taskList.addTask(new DeadlineTask(command));"},{"lineNumber":93,"author":{"gitId":"pasha-292"},"content":"            } else if (TaskType.equals(\"event\")) {"},{"lineNumber":94,"author":{"gitId":"pasha-292"},"content":"                result \u003d taskList.addTask(new EventTask(command));"},{"lineNumber":95,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"pasha-292"},"content":"        } else {"},{"lineNumber":97,"author":{"gitId":"pasha-292"},"content":"            if (TaskType.equals(\"todo\") || TaskType.equals(\"deadline\")"},{"lineNumber":98,"author":{"gitId":"pasha-292"},"content":"                    || TaskType.equals(\"event\")) {"},{"lineNumber":99,"author":{"gitId":"pasha-292"},"content":"                result \u003d \"Oops!!! Incomplete command :(\";"},{"lineNumber":100,"author":{"gitId":"pasha-292"},"content":"                //    throw new DukeException(\"Oops!!! Incomplete command :(\");"},{"lineNumber":101,"author":{"gitId":"pasha-292"},"content":"            } else {"},{"lineNumber":102,"author":{"gitId":"pasha-292"},"content":"                result \u003d \"Oops!!! Invalid Input :(\";"},{"lineNumber":103,"author":{"gitId":"pasha-292"},"content":"                //    throw new DukeException(\"Oops!!! Invalid Input :(\");"},{"lineNumber":104,"author":{"gitId":"pasha-292"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"pasha-292"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"pasha-292"},"content":"        return result;"},{"lineNumber":107,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":109,"author":{"gitId":"pasha-292"},"content":"    public String getResponse(String input) {"},{"lineNumber":110,"author":{"gitId":"pasha-292"},"content":"        return processGUI(input);"},{"lineNumber":111,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":113,"author":{"gitId":"pasha-292"},"content":"    public void printMessage(String out) {"},{"lineNumber":114,"author":{"gitId":"pasha-292"},"content":"        System.out.println(out);"},{"lineNumber":115,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":117,"author":{"gitId":"pasha-292"},"content":"    //Main method where duke is initialized"},{"lineNumber":118,"author":{"gitId":"pasha-292"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":119,"author":{"gitId":"pasha-292"},"content":"        DukeText duke \u003d new DukeText(\"data/duke.txt\");"},{"lineNumber":120,"author":{"gitId":"pasha-292"},"content":"        duke.process();"},{"lineNumber":121,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":122}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"pasha-292":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.ParallelCamera?\u003e"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"            \u003ccontent\u003e"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"            \u003c/content\u003e"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"      \u003cParallelCamera /\u003e"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"    \u003c/children\u003e"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"pasha-292":21}},{"path":"src/test/java/duke/task/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"public class DeadlineTaskTest {"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"    public void Test1() {"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"        DeadlineTask dTask \u003d new DeadlineTask(\"deadline do assignment /by 2021-03-15\");"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"        String dTaskString \u003d dTask.toString();"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"        assertEquals(\"[D][ ] do assignment (by: Mar 15 2021)\", dTaskString);"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    public void Test2() {"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"        DeadlineTask dTask \u003d new DeadlineTask(\"deadline do assignment /by 2021-03-15\");"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"        dTask.markDone();"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"        String dTaskString \u003d dTask.toString();"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"        assertNotEquals(\"[D][ ] do assignment (by: Mar 15 2021)\", dTaskString);"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":22}},{"path":"src/test/java/duke/task/TodoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"public class TodoTaskTest {"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"    public void Test1() {"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"        TodoTask task \u003d new TodoTask(\"todo read books\");"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"        String taskRepresentation \u003d task.toString();"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"        assertEquals(\"[T][ ] todo read books\", taskRepresentation);"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    public void Test2() {"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"        TodoTask task \u003d new TodoTask(\"todo read books\");"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"        task.markDone();"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"        String taskRepresentation \u003d task.toString();"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"        assertNotEquals(\"[T][ ] todo read books\", taskRepresentation);"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"}"}],"authorContributionMap":{"pasha-292":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"list"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"deadline do homework /by Monday"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"done 3"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"event attend meeting /at 6:45pm"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"todo make coffee"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"todo clean room"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"done 5"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"list"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"delete 5"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"list"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"bye"}],"authorContributionMap":{"pasha-292":13}},{"path":"text-ui-test/output.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":" ____        _        "},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"|  _ \\ _   _| | _____ "},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"| | | | | | | |/ / _ \\"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"| |_| | |_| |   \u003c  __/"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"|____/ \\__,_|_|\\_\\___|"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":""},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"Hello this is Duke"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"How may I help you?"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"todo borrow book"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"Got it! Added: "},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"[T][ ] todo borrow book"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"Now you have 1 items in your list"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"list"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"Contents: "},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"1.[T][ ] todo borrow book"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"deadline return book /by Sunday"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"Got it! Added: "},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"[D][ ] return book (by: Sunday)"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"Now you have 2 items in your list"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"deadline do homework /by Monday"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"Got it! Added: "},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"[D][ ] do homework (by: Monday)"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"Now you have 3 items in your list"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"done 3"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"Task 3 is complete:"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"[D][X] do homework (by: Monday)"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"event attend meeting /at 6:45pm"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"Got it! Added: "},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"[E][ ] attend meeting (at: 6:45pm)"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"Now you have 4 items in your list"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"todo make coffee"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"Got it! Added: "},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"[T][ ] todo make coffee"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"Now you have 5 items in your list"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"todo clean room"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"Got it! Added: "},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"[T][ ] todo clean room"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"Now you have 6 items in your list"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"done 5"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"Task 5 is complete:"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"[T][X] todo make coffee"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"list"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"Contents: "},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"1.[T][ ] todo borrow book"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"2.[D][ ] return book (by: Sunday)"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"3.[D][X] do homework (by: Monday)"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"4.[E][ ] attend meeting (at: 6:45pm)"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"5.[T][X] todo make coffee"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"6.[T][ ] todo clean room"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"delete 5"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"Noted. Task removed: "},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"[T][X] todo make coffee"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"Now you have 5 items in your list"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"list"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"Contents: "},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"1.[T][ ] todo borrow book"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"2.[D][ ] return book (by: Sunday)"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"3.[D][X] do homework (by: Monday)"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"4.[E][ ] attend meeting (at: 6:45pm)"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"5.[T][ ] todo clean room"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"bye"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"Goodbye for now."},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"Hope to see you soon!"}],"authorContributionMap":{"pasha-292":63}}]
