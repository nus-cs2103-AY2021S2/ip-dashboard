[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"chenzaza"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"chenzaza":1,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":" * Represents the main class of the application \u003ccode\u003eDuke\u003c/code\u003e."},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":"    private Storage storage;"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":"    private TaskList tasks;"},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"    private Ui ui;"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"     * Constructor for Duke class that initiates task storage locally."},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"     * @param filePath the path of the file that stores tasks."},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"    public Duke(String filePath) {"},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"        ui \u003d new Ui();"},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":"            tasks \u003d storage.openFile();"},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":"        } catch (DukeException e) {"},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"            ui.showError(e);"},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":28,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"chenzaza"},"content":"     * Executes the command lines from a user."},{"lineNumber":30,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"chenzaza"},"content":"    public void run() {"},{"lineNumber":32,"author":{"gitId":"chenzaza"},"content":"        ui.showWelcome();"},{"lineNumber":33,"author":{"gitId":"chenzaza"},"content":"        boolean isExit \u003d false;"},{"lineNumber":34,"author":{"gitId":"chenzaza"},"content":"        while (!isExit) {"},{"lineNumber":35,"author":{"gitId":"chenzaza"},"content":"            try {"},{"lineNumber":36,"author":{"gitId":"chenzaza"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":37,"author":{"gitId":"chenzaza"},"content":"                ui.showLine();"},{"lineNumber":38,"author":{"gitId":"chenzaza"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":39,"author":{"gitId":"chenzaza"},"content":"                c.execute(tasks, ui, storage);"},{"lineNumber":40,"author":{"gitId":"chenzaza"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":41,"author":{"gitId":"chenzaza"},"content":"            } catch (DukeException e) {"},{"lineNumber":42,"author":{"gitId":"chenzaza"},"content":"                ui.showError(e);"},{"lineNumber":43,"author":{"gitId":"chenzaza"},"content":"            } finally {"},{"lineNumber":44,"author":{"gitId":"chenzaza"},"content":"                ui.showLine();"},{"lineNumber":45,"author":{"gitId":"chenzaza"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":49,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"chenzaza"},"content":"     * Starts running the application Duke."},{"lineNumber":51,"author":{"gitId":"chenzaza"},"content":"     * @param args the command line arguments."},{"lineNumber":52,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"chenzaza"},"content":"    public static void main(String[] args) {"},{"lineNumber":54,"author":{"gitId":"chenzaza"},"content":"        new Duke(\"src/main/java/data/tasks.txt\").run();"},{"lineNumber":55,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"chenzaza":54,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":" * Represents exceptions specified by Duke application."},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"public class DukeException extends Exception {"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":"    protected String message;"},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":"     * Constructor for DukeException class that handles exceptions."},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":"     * @param message Error message."},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":"    public DukeException(String message) {"},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"        this.message \u003d message;"},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"     * Generates output message when an exception is caught."},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"        return \":\u003c OOPS!!! \" + message;"},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":22}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":"import duke.command.AddDeadline;"},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":"import duke.command.AddEvent;"},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":"import duke.command.AddTodo;"},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":"import duke.command.Command;"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"import duke.command.DoneCommand;"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":"import duke.command.ExitCommand;"},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"import duke.command.FindCommand;"},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"import duke.command.ListCommand;"},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"import duke.task.Deadline;"},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"import duke.task.Event;"},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"import duke.task.Todo;"},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":" * Represents a parser that processes input command lines from a user."},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":"public class Parser {"},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"     * Parses the input line from a user."},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":"     * @param commandLine Input string to be parsed."},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"     * @return A command based on the input."},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":"     * @throws DukeException If invalid command is given."},{"lineNumber":28,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"chenzaza"},"content":"    public static Command parse(String commandLine) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"chenzaza"},"content":"        String[] messages \u003d commandLine.split(\" \");"},{"lineNumber":31,"author":{"gitId":"chenzaza"},"content":"        String commandType \u003d messages[0];"},{"lineNumber":32,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":33,"author":{"gitId":"chenzaza"},"content":"        switch (commandType) {"},{"lineNumber":34,"author":{"gitId":"chenzaza"},"content":"        case \"bye\":"},{"lineNumber":35,"author":{"gitId":"chenzaza"},"content":"            return new ExitCommand();"},{"lineNumber":36,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":37,"author":{"gitId":"chenzaza"},"content":"        case \"delete\":"},{"lineNumber":38,"author":{"gitId":"chenzaza"},"content":"            if (messages.length \u003d\u003d 1) {"},{"lineNumber":39,"author":{"gitId":"chenzaza"},"content":"                throw new DukeException(\"The task index is missing.\");"},{"lineNumber":40,"author":{"gitId":"chenzaza"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"chenzaza"},"content":"            return new DeleteCommand(Integer.parseInt(messages[1]));"},{"lineNumber":42,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":43,"author":{"gitId":"chenzaza"},"content":"        case \"done\":"},{"lineNumber":44,"author":{"gitId":"chenzaza"},"content":"            if (messages.length \u003d\u003d 1) {"},{"lineNumber":45,"author":{"gitId":"chenzaza"},"content":"                throw new DukeException(\"The task index is missing.\");"},{"lineNumber":46,"author":{"gitId":"chenzaza"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"chenzaza"},"content":"            int id \u003d Integer.parseInt(messages[1]);"},{"lineNumber":48,"author":{"gitId":"chenzaza"},"content":"            return new DoneCommand(id);"},{"lineNumber":49,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":50,"author":{"gitId":"chenzaza"},"content":"        case \"deadline\":"},{"lineNumber":51,"author":{"gitId":"chenzaza"},"content":"            if (messages.length \u003d\u003d 1) {"},{"lineNumber":52,"author":{"gitId":"chenzaza"},"content":"                throw new DukeException(\"The task description is missing.\");"},{"lineNumber":53,"author":{"gitId":"chenzaza"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"chenzaza"},"content":"            try {"},{"lineNumber":55,"author":{"gitId":"chenzaza"},"content":"                return generateDeadline(processTask(commandLine));"},{"lineNumber":56,"author":{"gitId":"chenzaza"},"content":"            } catch (Exception ex) {"},{"lineNumber":57,"author":{"gitId":"chenzaza"},"content":"                throw new DukeException(\"Deadline description is in wrong format.\");"},{"lineNumber":58,"author":{"gitId":"chenzaza"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":60,"author":{"gitId":"chenzaza"},"content":"        case \"event\":"},{"lineNumber":61,"author":{"gitId":"chenzaza"},"content":"            if (messages.length \u003d\u003d 1) {"},{"lineNumber":62,"author":{"gitId":"chenzaza"},"content":"                throw new DukeException(\"The task description is missing.\");"},{"lineNumber":63,"author":{"gitId":"chenzaza"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"chenzaza"},"content":"            try {"},{"lineNumber":65,"author":{"gitId":"chenzaza"},"content":"                return generateEvent(processTask(commandLine));"},{"lineNumber":66,"author":{"gitId":"chenzaza"},"content":"            } catch (Exception ex) {"},{"lineNumber":67,"author":{"gitId":"chenzaza"},"content":"                throw new DukeException(\"Event description is in wrong format.\");"},{"lineNumber":68,"author":{"gitId":"chenzaza"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":70,"author":{"gitId":"chenzaza"},"content":"        case \"todo\":"},{"lineNumber":71,"author":{"gitId":"chenzaza"},"content":"            if (messages.length \u003d\u003d 1) {"},{"lineNumber":72,"author":{"gitId":"chenzaza"},"content":"                throw new DukeException(\"The task description is missing.\");"},{"lineNumber":73,"author":{"gitId":"chenzaza"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"chenzaza"},"content":"            return new AddTodo(new Todo(processTask(commandLine), 0));"},{"lineNumber":75,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":76,"author":{"gitId":"chenzaza"},"content":"        case \"list\":"},{"lineNumber":77,"author":{"gitId":"chenzaza"},"content":"            return new ListCommand();"},{"lineNumber":78,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":79,"author":{"gitId":"chenzaza"},"content":"        case \"find\":"},{"lineNumber":80,"author":{"gitId":"chenzaza"},"content":"            if (messages.length \u003d\u003d 1) {"},{"lineNumber":81,"author":{"gitId":"chenzaza"},"content":"                throw new DukeException(\"The keyword is missing.\");"},{"lineNumber":82,"author":{"gitId":"chenzaza"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"chenzaza"},"content":"            return new FindCommand(processTask(commandLine));"},{"lineNumber":84,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":85,"author":{"gitId":"chenzaza"},"content":"        default:"},{"lineNumber":86,"author":{"gitId":"chenzaza"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what \" + commandType + \" means.\");"},{"lineNumber":87,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":88,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":91,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"chenzaza"},"content":"     * Processes the String to get the task description."},{"lineNumber":93,"author":{"gitId":"chenzaza"},"content":"     * @param message Input string to be processed."},{"lineNumber":94,"author":{"gitId":"chenzaza"},"content":"     * @return A task description."},{"lineNumber":95,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"chenzaza"},"content":"    public static String processTask(String message) {"},{"lineNumber":97,"author":{"gitId":"chenzaza"},"content":"        return message.substring(message.indexOf(\u0027 \u0027) + 1);"},{"lineNumber":98,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":100,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"chenzaza"},"content":"     * Generates a AddEvent command from the task description."},{"lineNumber":102,"author":{"gitId":"chenzaza"},"content":"     * @param description Event description."},{"lineNumber":103,"author":{"gitId":"chenzaza"},"content":"     * @return A command that adds a Event to the task list."},{"lineNumber":104,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"chenzaza"},"content":"    public static AddEvent generateEvent(String description) {"},{"lineNumber":106,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":107,"author":{"gitId":"chenzaza"},"content":"        String name \u003d description.substring(0, description.indexOf(\" /at \"));"},{"lineNumber":108,"author":{"gitId":"chenzaza"},"content":"        String time \u003d description.substring(description.indexOf(\" /at \") + 5);"},{"lineNumber":109,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":110,"author":{"gitId":"chenzaza"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":111,"author":{"gitId":"chenzaza"},"content":"        LocalDateTime at \u003d LocalDateTime.parse(time, dateTimeFormat);"},{"lineNumber":112,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":113,"author":{"gitId":"chenzaza"},"content":"        return new AddEvent(new Event(name, 0, at));"},{"lineNumber":114,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":116,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"chenzaza"},"content":"     * Generates a AddDeadline command from the task description."},{"lineNumber":118,"author":{"gitId":"chenzaza"},"content":"     * @param description Deadline description."},{"lineNumber":119,"author":{"gitId":"chenzaza"},"content":"     * @return A command that adds a Deadline to the task list."},{"lineNumber":120,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"chenzaza"},"content":"    public static AddDeadline generateDeadline(String description) {"},{"lineNumber":122,"author":{"gitId":"chenzaza"},"content":"        String name \u003d description.substring(0, description.indexOf(\" /by \"));"},{"lineNumber":123,"author":{"gitId":"chenzaza"},"content":"        String time \u003d description.substring(description.indexOf(\" /by \") + 5);"},{"lineNumber":124,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":125,"author":{"gitId":"chenzaza"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":126,"author":{"gitId":"chenzaza"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(time, dateTimeFormat);"},{"lineNumber":127,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":128,"author":{"gitId":"chenzaza"},"content":"        return new AddDeadline(new Deadline(name, 0, by));"},{"lineNumber":129,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":131,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":132,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":133,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":133}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"import duke.task.Deadline;"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":"import duke.task.Event;"},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"import duke.task.Task;"},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"import duke.task.Todo;"},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":" * Represents local storage of task data."},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"public class Storage {"},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"    private String path;"},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":"    private TaskList taskList \u003d new TaskList();"},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"     * Constructor for Storage."},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":"     * @param path Path of the file storing task data."},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":"    public Storage(String path) {"},{"lineNumber":28,"author":{"gitId":"chenzaza"},"content":"        this.path \u003d path;"},{"lineNumber":29,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":31,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"chenzaza"},"content":"     * Loads and opens the file with a specified path."},{"lineNumber":33,"author":{"gitId":"chenzaza"},"content":"     * @return Task list."},{"lineNumber":34,"author":{"gitId":"chenzaza"},"content":"     * @throws DukeException If file for storage cannot be created."},{"lineNumber":35,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"chenzaza"},"content":"    public TaskList openFile() throws DukeException {"},{"lineNumber":37,"author":{"gitId":"chenzaza"},"content":"        File file \u003d new File(path);"},{"lineNumber":38,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":39,"author":{"gitId":"chenzaza"},"content":"        if (!file.exists()) {"},{"lineNumber":40,"author":{"gitId":"chenzaza"},"content":"            try {"},{"lineNumber":41,"author":{"gitId":"chenzaza"},"content":"                file.getParentFile().mkdir();"},{"lineNumber":42,"author":{"gitId":"chenzaza"},"content":"                file.createNewFile();"},{"lineNumber":43,"author":{"gitId":"chenzaza"},"content":"            } catch (IOException e) {"},{"lineNumber":44,"author":{"gitId":"chenzaza"},"content":"                throw new DukeException(\"File cannot be created.\");"},{"lineNumber":45,"author":{"gitId":"chenzaza"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":48,"author":{"gitId":"chenzaza"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"chenzaza"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":50,"author":{"gitId":"chenzaza"},"content":"            while (sc.hasNext()) {"},{"lineNumber":51,"author":{"gitId":"chenzaza"},"content":"                String txtLine \u003d sc.nextLine();"},{"lineNumber":52,"author":{"gitId":"chenzaza"},"content":"                Task task \u003d processContent(txtLine);"},{"lineNumber":53,"author":{"gitId":"chenzaza"},"content":"                taskList.addTask(task);"},{"lineNumber":54,"author":{"gitId":"chenzaza"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"chenzaza"},"content":"            return taskList;"},{"lineNumber":56,"author":{"gitId":"chenzaza"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":57,"author":{"gitId":"chenzaza"},"content":"            throw new DukeException(\"File cannot be found.\");"},{"lineNumber":58,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":61,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"chenzaza"},"content":"     * Retrieves a task by processing the content stored locally."},{"lineNumber":63,"author":{"gitId":"chenzaza"},"content":"     * @param txtLine A line of text stored in the txt file."},{"lineNumber":64,"author":{"gitId":"chenzaza"},"content":"     * @return Task based on the file content."},{"lineNumber":65,"author":{"gitId":"chenzaza"},"content":"     * @throws DukeException If text is invalid."},{"lineNumber":66,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"chenzaza"},"content":"    public Task processContent (String txtLine) throws DukeException {"},{"lineNumber":68,"author":{"gitId":"chenzaza"},"content":"        String[] content \u003d txtLine.split(\" \\\\| \");"},{"lineNumber":69,"author":{"gitId":"chenzaza"},"content":"        String taskType \u003d content[0];"},{"lineNumber":70,"author":{"gitId":"chenzaza"},"content":"        int taskStatus \u003d Integer.parseInt(content[1]);"},{"lineNumber":71,"author":{"gitId":"chenzaza"},"content":"        String taskDescription \u003d content[2];"},{"lineNumber":72,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":73,"author":{"gitId":"chenzaza"},"content":"        switch(taskType) {"},{"lineNumber":74,"author":{"gitId":"chenzaza"},"content":"        case \"D\":"},{"lineNumber":75,"author":{"gitId":"chenzaza"},"content":"            return new Deadline(taskDescription, taskStatus, LocalDateTime.parse(content[3],"},{"lineNumber":76,"author":{"gitId":"chenzaza"},"content":"                    DateTimeFormatter.ofPattern(\"HHmm, MMM dd yyyy\")));"},{"lineNumber":77,"author":{"gitId":"chenzaza"},"content":"        case \"E\":"},{"lineNumber":78,"author":{"gitId":"chenzaza"},"content":"            return new Event(taskDescription, taskStatus, LocalDateTime.parse(content[3],"},{"lineNumber":79,"author":{"gitId":"chenzaza"},"content":"                    DateTimeFormatter.ofPattern(\"HHmm, MMM dd yyyy\")));"},{"lineNumber":80,"author":{"gitId":"chenzaza"},"content":"        case \"T\":"},{"lineNumber":81,"author":{"gitId":"chenzaza"},"content":"            return new Todo(taskDescription, taskStatus);"},{"lineNumber":82,"author":{"gitId":"chenzaza"},"content":"        default:"},{"lineNumber":83,"author":{"gitId":"chenzaza"},"content":"            throw new DukeException(taskType + \" is an invalid text type. Please modify the file accordingly.\");"},{"lineNumber":84,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":87,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"chenzaza"},"content":"     * Updates the local file every time there is a change in the task list."},{"lineNumber":89,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"chenzaza"},"content":"    public void updateFile() {"},{"lineNumber":91,"author":{"gitId":"chenzaza"},"content":"        try {"},{"lineNumber":92,"author":{"gitId":"chenzaza"},"content":"            FileWriter fw \u003d new FileWriter(path);"},{"lineNumber":93,"author":{"gitId":"chenzaza"},"content":"            for (Task t : taskList.getTasks()) {"},{"lineNumber":94,"author":{"gitId":"chenzaza"},"content":"                fw.write(t.toTxt());"},{"lineNumber":95,"author":{"gitId":"chenzaza"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"chenzaza"},"content":"            fw.close();"},{"lineNumber":97,"author":{"gitId":"chenzaza"},"content":"        } catch (IOException e) {"},{"lineNumber":98,"author":{"gitId":"chenzaza"},"content":"            System.out.println(\"File cannot be found\");"},{"lineNumber":99,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":101}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":" * Represents a list of tasks."},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"     * Constructor for TaskList."},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"    public TaskList() {"},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":"     * Gets the task of the given id."},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":"     * @param id ID of the needed task."},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"     * @return Task to be retrieved."},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":"    public Task getTask(int id) {"},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"        return tasks.get(id - 1);"},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":29,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"chenzaza"},"content":"     * Gets a list of all tasks."},{"lineNumber":31,"author":{"gitId":"chenzaza"},"content":"     * @return ArrayList of tasks to be retrieved."},{"lineNumber":32,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"chenzaza"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":34,"author":{"gitId":"chenzaza"},"content":"        return tasks;"},{"lineNumber":35,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":37,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"chenzaza"},"content":"     * Gets the size of the task list."},{"lineNumber":39,"author":{"gitId":"chenzaza"},"content":"     * @return Number of tasks in the list."},{"lineNumber":40,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"chenzaza"},"content":"    public int getSize() {"},{"lineNumber":42,"author":{"gitId":"chenzaza"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":43,"author":{"gitId":"chenzaza"},"content":"            return 0;"},{"lineNumber":44,"author":{"gitId":"chenzaza"},"content":"        } else {"},{"lineNumber":45,"author":{"gitId":"chenzaza"},"content":"            return tasks.size();"},{"lineNumber":46,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":49,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"chenzaza"},"content":"     * Adds a task into the task list."},{"lineNumber":51,"author":{"gitId":"chenzaza"},"content":"     * @param task Task to be added."},{"lineNumber":52,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"chenzaza"},"content":"    public void addTask(Task task) {"},{"lineNumber":54,"author":{"gitId":"chenzaza"},"content":"        tasks.add(task);"},{"lineNumber":55,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":57,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"chenzaza"},"content":"     * Removed a task of the given id."},{"lineNumber":59,"author":{"gitId":"chenzaza"},"content":"     * @param id ID of the removed task."},{"lineNumber":60,"author":{"gitId":"chenzaza"},"content":"     * @return Task to be removed."},{"lineNumber":61,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"chenzaza"},"content":"    public Task removeTask(int id) {"},{"lineNumber":63,"author":{"gitId":"chenzaza"},"content":"        return tasks.remove(id - 1);"},{"lineNumber":64,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":66,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"chenzaza"},"content":"     * Generates output message that displays all the tasks in the list."},{"lineNumber":68,"author":{"gitId":"chenzaza"},"content":"     * @return Message output of a TaskList."},{"lineNumber":69,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"chenzaza"},"content":"    public String toString() {"},{"lineNumber":72,"author":{"gitId":"chenzaza"},"content":"        StringBuilder message \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"},{"lineNumber":73,"author":{"gitId":"chenzaza"},"content":"        if (this.getSize() \u003d\u003d 0) {"},{"lineNumber":74,"author":{"gitId":"chenzaza"},"content":"            message.append(\"There is no task in the list.\\n\");"},{"lineNumber":75,"author":{"gitId":"chenzaza"},"content":"        } else {"},{"lineNumber":76,"author":{"gitId":"chenzaza"},"content":"            for (int i \u003d 1; i \u003c\u003d this.getSize(); i++) {"},{"lineNumber":77,"author":{"gitId":"chenzaza"},"content":"                message.append(i + \". \" + this.getTask(i - 1) + \"\\n\");"},{"lineNumber":78,"author":{"gitId":"chenzaza"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"chenzaza"},"content":"        return message.toString();"},{"lineNumber":81,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":83,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":84,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":84}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":" * Represents interactions with the user."},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":"public class Ui {"},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"     * Displays the welcome message."},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"    public void showWelcome() {"},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"        System.out.println(\"Hi there! I\u0027m Duke.\\nWhat can I do for you?\\n\");"},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"chenzaza"},"content":"     * Reads the input commands from the user."},{"lineNumber":29,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"chenzaza"},"content":"    public String readCommand() {"},{"lineNumber":31,"author":{"gitId":"chenzaza"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":32,"author":{"gitId":"chenzaza"},"content":"        return sc.nextLine();"},{"lineNumber":33,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":35,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"chenzaza"},"content":"     * Displays a message after a task is added to the list."},{"lineNumber":37,"author":{"gitId":"chenzaza"},"content":"     * @param task Task to be added."},{"lineNumber":38,"author":{"gitId":"chenzaza"},"content":"     * @param tasks Task List."},{"lineNumber":39,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"chenzaza"},"content":"    public void showAdded(Task task, TaskList tasks) {"},{"lineNumber":41,"author":{"gitId":"chenzaza"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + task);"},{"lineNumber":42,"author":{"gitId":"chenzaza"},"content":"        System.out.println(\"Now you have \" + tasks.getSize() + \" task\""},{"lineNumber":43,"author":{"gitId":"chenzaza"},"content":"                + (tasks.getSize() \u003e 1 ? \"s in the list.\" : \" in the list.\"));"},{"lineNumber":44,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":46,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"chenzaza"},"content":"     * Displays a message after a task is deleted from the list."},{"lineNumber":48,"author":{"gitId":"chenzaza"},"content":"     * @param task Task to be deleted."},{"lineNumber":49,"author":{"gitId":"chenzaza"},"content":"     * @param tasks Task List."},{"lineNumber":50,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"chenzaza"},"content":"    public void showDeleted(Task task, TaskList tasks) {"},{"lineNumber":52,"author":{"gitId":"chenzaza"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + task);"},{"lineNumber":53,"author":{"gitId":"chenzaza"},"content":"        System.out.println(\"Now you have \" + tasks.getSize() + \" task\""},{"lineNumber":54,"author":{"gitId":"chenzaza"},"content":"                + (tasks.getSize() \u003e 1 ? \"s in the list.\" : \" in the list.\"));"},{"lineNumber":55,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":56,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":58,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"chenzaza"},"content":"     * Displays a message after a task is done."},{"lineNumber":60,"author":{"gitId":"chenzaza"},"content":"     * @param id Task ID."},{"lineNumber":61,"author":{"gitId":"chenzaza"},"content":"     * @param tasks Task List."},{"lineNumber":62,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"chenzaza"},"content":"    public void showDone(int id, TaskList tasks) {"},{"lineNumber":64,"author":{"gitId":"chenzaza"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":65,"author":{"gitId":"chenzaza"},"content":"        System.out.println(tasks.getTask(id));"},{"lineNumber":66,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":68,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"chenzaza"},"content":"     * Displays all the tasks when the user requests to view task list."},{"lineNumber":70,"author":{"gitId":"chenzaza"},"content":"     * @param tasks Task List."},{"lineNumber":71,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"chenzaza"},"content":"    public void showList(TaskList tasks) {"},{"lineNumber":73,"author":{"gitId":"chenzaza"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":74,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":75,"author":{"gitId":"chenzaza"},"content":"        if (tasks.getSize() \u003d\u003d 0) {"},{"lineNumber":76,"author":{"gitId":"chenzaza"},"content":"            System.out.println(\"There is no task in the list.\");"},{"lineNumber":77,"author":{"gitId":"chenzaza"},"content":"        } else {"},{"lineNumber":78,"author":{"gitId":"chenzaza"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"},{"lineNumber":79,"author":{"gitId":"chenzaza"},"content":"                System.out.println(i + \". \" + tasks.getTask(i));"},{"lineNumber":80,"author":{"gitId":"chenzaza"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":83,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":85,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"chenzaza"},"content":"     * Displays all the tasks that contain the keyword."},{"lineNumber":87,"author":{"gitId":"chenzaza"},"content":"     * @param keyword Keyword to be found."},{"lineNumber":88,"author":{"gitId":"chenzaza"},"content":"     * @param tasks Task List used to find the matching tasks."},{"lineNumber":89,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"chenzaza"},"content":"    public void showFound(String keyword, TaskList tasks) {"},{"lineNumber":91,"author":{"gitId":"chenzaza"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":92,"author":{"gitId":"chenzaza"},"content":"        int count \u003d 1;"},{"lineNumber":93,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":94,"author":{"gitId":"chenzaza"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"},{"lineNumber":95,"author":{"gitId":"chenzaza"},"content":"            Task task \u003d tasks.getTask(i);"},{"lineNumber":96,"author":{"gitId":"chenzaza"},"content":"            if (task.getDescription().contains(keyword)) {"},{"lineNumber":97,"author":{"gitId":"chenzaza"},"content":"                System.out.println(count + \". \" + tasks.getTask(i));"},{"lineNumber":98,"author":{"gitId":"chenzaza"},"content":"                count++;"},{"lineNumber":99,"author":{"gitId":"chenzaza"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":102,"author":{"gitId":"chenzaza"},"content":"        if (count \u003d\u003d 1) {"},{"lineNumber":103,"author":{"gitId":"chenzaza"},"content":"            System.out.println(\"There is no matching task in the list. You can try another keyword.\");"},{"lineNumber":104,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":106,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":108,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":109,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"chenzaza"},"content":"     * Displays error messages when an exception is caught."},{"lineNumber":111,"author":{"gitId":"chenzaza"},"content":"     * @param error Error being caught."},{"lineNumber":112,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"chenzaza"},"content":"    public void showError(Exception error) {"},{"lineNumber":114,"author":{"gitId":"chenzaza"},"content":"        System.out.println(error);"},{"lineNumber":115,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":117,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"chenzaza"},"content":"     * Displays the divider line."},{"lineNumber":119,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"chenzaza"},"content":"    public void showLine() {"},{"lineNumber":121,"author":{"gitId":"chenzaza"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":122,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":124,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"chenzaza"},"content":"     * Displays farewell message."},{"lineNumber":126,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"chenzaza"},"content":"    public void sayBye() {"},{"lineNumber":128,"author":{"gitId":"chenzaza"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\");"},{"lineNumber":129,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":130}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":" * Represents a command that adds task into the task list."},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"public class AddCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":"    private Task task;"},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"     * Constructor for AddCommand class."},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"     * @param task Task to be added."},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"    public AddCommand(Task task) {"},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"        this.task \u003d task;"},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"     * Executes the command."},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"     * @param tasks The task list used for execution of the command."},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":"     * @param ui Interactions with users."},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"     * @param storage Data stored in the local file path."},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"chenzaza"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":30,"author":{"gitId":"chenzaza"},"content":"        tasks.addTask(task);"},{"lineNumber":31,"author":{"gitId":"chenzaza"},"content":"        ui.showAdded(task, tasks);"},{"lineNumber":32,"author":{"gitId":"chenzaza"},"content":"        storage.updateFile();"},{"lineNumber":33,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":35,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"chenzaza"},"content":"     * Returns a boolean value to signal the chat bot to exit."},{"lineNumber":37,"author":{"gitId":"chenzaza"},"content":"     * @return False as the command does not signal the bot to exit."},{"lineNumber":38,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"chenzaza"},"content":"    public boolean isExit() {"},{"lineNumber":41,"author":{"gitId":"chenzaza"},"content":"        return false;"},{"lineNumber":42,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":43}},{"path":"src/main/java/duke/command/AddDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":" * Represents a command that adds Deadline into the task list."},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":"public class AddDeadline extends AddCommand {"},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":"    private Deadline task;"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":"     * Constructor for AddDeadline class."},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"     * @param task Deadline to be added."},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"    public AddDeadline(Deadline task) {"},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"        super(task);"},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":19}},{"path":"src/main/java/duke/command/AddEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import duke.task.Event;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":" * Represents a command that adds Event into the task list."},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":"public class AddEvent extends AddCommand {"},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":"    private Event task;"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":"     * Constructor for AddEvent class."},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"     * @param task Event to be added."},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"    public AddEvent(Event task) {"},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"        super(task);"},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":18}},{"path":"src/main/java/duke/command/AddTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import duke.task.Todo;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":" * Represents a command that adds Todo into the task list."},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":"public class AddTodo extends AddCommand {"},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":"    private Todo task;"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":"     * Constructor for AddTodo class."},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"     * @param task Todo to be added."},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"    public AddTodo(Todo task) {"},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"        super(task);"},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":18}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":" * Represents a general command which can be executed and can decide whether to exit the programme or stay."},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"     * Executes the command."},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"     * @param tasks The task list used for execution of the command."},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"     * @param ui Interactions with users."},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"     * @param storage Data stored in the local file path."},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"     * @throws DukeException If there is any invalid command."},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"     * Returns a boolean value to signal the chat bot to exit."},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"     * @return False if the command does not signal the bot to exit."},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"    public abstract boolean isExit();"},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":27}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":" * Represents a command that deletes task from the task list."},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"    private final int id;"},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"     * Constructor for DeleteCommand class."},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"     * @param id ID of Task to be deleted."},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"    public DeleteCommand(int id) {"},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"        this.id \u003d id;"},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"     * Executes the command."},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":"     * @param tasks The task list used for execution of the command."},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"     * @param ui Interactions with users."},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":"     * @param storage Data stored in the local file path."},{"lineNumber":28,"author":{"gitId":"chenzaza"},"content":"     * @throws DukeException If there is any invalid command."},{"lineNumber":29,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"chenzaza"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":32,"author":{"gitId":"chenzaza"},"content":"        if (id \u003c 1 || id \u003e tasks.getSize()) {"},{"lineNumber":33,"author":{"gitId":"chenzaza"},"content":"            throw new DukeException(\"The task id is invalid.\");"},{"lineNumber":34,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"chenzaza"},"content":"        Task removed \u003d tasks.removeTask(id);"},{"lineNumber":36,"author":{"gitId":"chenzaza"},"content":"        ui.showDeleted(removed, tasks);"},{"lineNumber":37,"author":{"gitId":"chenzaza"},"content":"        storage.updateFile();"},{"lineNumber":38,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":40,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"chenzaza"},"content":"     * Returns a boolean value to signal the chat bot to exit."},{"lineNumber":42,"author":{"gitId":"chenzaza"},"content":"     * @return False as the command does not signal the bot to exit."},{"lineNumber":43,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"chenzaza"},"content":"    public boolean isExit() {"},{"lineNumber":46,"author":{"gitId":"chenzaza"},"content":"        return false;"},{"lineNumber":47,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":48}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":"public class DoneCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":"    private final int id;"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":"     * Constructor for DoneCommand class."},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"     * @param id ID of Task that is done."},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"    public DoneCommand(int id) {"},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"        this.id \u003d id;"},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"     * Executes the command."},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":"     * @param tasks The task list used for execution of the command."},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":"     * @param ui Interactions with users."},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"     * @param storage Data stored in the local file path."},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"     * @throws DukeException If there is any invalid command."},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":28,"author":{"gitId":"chenzaza"},"content":"        if (id \u003c 1 || id \u003e tasks.getSize()) {"},{"lineNumber":29,"author":{"gitId":"chenzaza"},"content":"            throw new DukeException(\"The task id is invalid.\");"},{"lineNumber":30,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"chenzaza"},"content":"        tasks.getTask(id).markAsDone();"},{"lineNumber":32,"author":{"gitId":"chenzaza"},"content":"        ui.showDone(id, tasks);"},{"lineNumber":33,"author":{"gitId":"chenzaza"},"content":"        storage.updateFile();"},{"lineNumber":34,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":36,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"chenzaza"},"content":"     * Returns a boolean value to signal the chat bot to exit."},{"lineNumber":38,"author":{"gitId":"chenzaza"},"content":"     * @return False as the command does not signal the bot to exit."},{"lineNumber":39,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"chenzaza"},"content":"    public boolean isExit() {"},{"lineNumber":42,"author":{"gitId":"chenzaza"},"content":"        return false;"},{"lineNumber":43,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":44}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":" * Represents a command that makes the chat bot exit."},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":"public class ExitCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":"     * Executes the command."},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"     * @param tasks The task list used for execution of the command."},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"     * @param ui Interactions with users."},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"     * @param storage Data stored in the local file path."},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"        ui.sayBye();"},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"     * Returns a boolean value to signal the chat bot to exit."},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"     * @return True as the command signals the bot to exit."},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":"    public boolean isExit() {"},{"lineNumber":28,"author":{"gitId":"chenzaza"},"content":"        return true;"},{"lineNumber":29,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":30}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":" * Represents a command that displays all the tasks that contain a specified keyword."},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":"public class FindCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"    private String keyword;"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"     * Constructor for FindCommand class."},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"     * @param keyword Keyword to be found."},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":"     * Executes the command."},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"     * @param tasks The task list used for execution of the command."},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"     * @param ui Interactions with users."},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":"     * @param storage Data stored in the local file path."},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"chenzaza"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":29,"author":{"gitId":"chenzaza"},"content":"        ui.showFound(keyword, tasks);"},{"lineNumber":30,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":32,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"chenzaza"},"content":"     * Returns a boolean value to signal the chat bot to exit."},{"lineNumber":34,"author":{"gitId":"chenzaza"},"content":"     * @return False as the command does not signal the bot to exit."},{"lineNumber":35,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"chenzaza"},"content":"    public boolean isExit() {"},{"lineNumber":38,"author":{"gitId":"chenzaza"},"content":"        return false;"},{"lineNumber":39,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":40}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":" * Represents a command that displays all tasks in the task list."},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"     * Executes the command."},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"     * @param tasks The task list used for execution of the command."},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"     * @param ui Interactions with users."},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"     * @param storage Data stored in the local file path."},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"        ui.showList(tasks);"},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"     * Returns a boolean value to signal the chat bot to exit."},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":"     * @return False as the command does not signal the bot to exit."},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"chenzaza"},"content":"    public boolean isExit() {"},{"lineNumber":29,"author":{"gitId":"chenzaza"},"content":"        return false;"},{"lineNumber":30,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":31}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":" * Represents any deadline specified with deadline description, status and due date and time."},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"    protected LocalDateTime by;"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"     * Constructor for Deadline class."},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"     * @param description Description of the deadline."},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"     * @param status To check if the deadline is done."},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"     * @param by Due date and time."},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"    public Deadline(String description, int status, LocalDateTime by) {"},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"        super(description, status);"},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":"        this.by \u003d by;"},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":"     * Converts deadline details into txt format for local storage."},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"     * @return The text stored in the local file."},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"chenzaza"},"content":"    public String toTxt() {"},{"lineNumber":30,"author":{"gitId":"chenzaza"},"content":"        return \"D \" + super.toTxt() + \" | \" + by.format(DateTimeFormatter.ofPattern(\"HHmm, MMM dd yyyy\")) + \"\\n\";"},{"lineNumber":31,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":33,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"chenzaza"},"content":"     * Generates deadline details displayed on the user interface."},{"lineNumber":35,"author":{"gitId":"chenzaza"},"content":"     * @return Message output for Deadline."},{"lineNumber":36,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"chenzaza"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"chenzaza"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"HHmm, MMM dd yyyy\")) + \")\";"},{"lineNumber":40,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":" * Represents any event specified with event description, status and date and time."},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":"    protected LocalDateTime at;"},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"     * Constructor for Event class."},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"     * @param description Description of the event."},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"     * @param status To check if the event is done."},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"     * @param at Date and time of the event."},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"    public Event(String description, int status, LocalDateTime at) {"},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"        super(description, status);"},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"        this.at \u003d at;"},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"     * Converts event details into txt format for local storage."},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":"     * @return The text stored in the local file."},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"chenzaza"},"content":"    public String toTxt() {"},{"lineNumber":29,"author":{"gitId":"chenzaza"},"content":"        return \"E \" + super.toTxt() + \" | \" + at.format(DateTimeFormatter.ofPattern(\"HHmm, MMM dd yyyy\")) + \"\\n\";"},{"lineNumber":30,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":32,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"chenzaza"},"content":"     * Generates event details displayed on the user interface."},{"lineNumber":34,"author":{"gitId":"chenzaza"},"content":"     * @return Message output for Event."},{"lineNumber":35,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"chenzaza"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"chenzaza"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"HHmm, MMM dd yyyy\")) + \")\";"},{"lineNumber":39,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":" * Represents any task specified with task description and status."},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":"    protected int status;"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":"     * Constructor for Event class."},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"     * @param description Description of the task."},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"     * @param status To check if the task is done."},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"    public Task(String description, int status) {"},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"        this.status \u003d status;"},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"        if (status \u003d\u003d 1) {"},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"            this.isDone \u003d true;"},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":"            this.isDone \u003d false;"},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":"     * Gets the task description."},{"lineNumber":28,"author":{"gitId":"chenzaza"},"content":"     * @return Task description."},{"lineNumber":29,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"chenzaza"},"content":"    public String getDescription() {"},{"lineNumber":31,"author":{"gitId":"chenzaza"},"content":"        return description;"},{"lineNumber":32,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":34,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"chenzaza"},"content":"     * Gets the icon to display on the user interface based on the task status."},{"lineNumber":36,"author":{"gitId":"chenzaza"},"content":"     * @return Tick for Done task and Cross for Not Done Task."},{"lineNumber":37,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"chenzaza"},"content":"    public String getStatusIcon() {"},{"lineNumber":39,"author":{"gitId":"chenzaza"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":40,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":42,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"chenzaza"},"content":"     * Updates the task as done."},{"lineNumber":44,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"chenzaza"},"content":"    public void markAsDone() {"},{"lineNumber":46,"author":{"gitId":"chenzaza"},"content":"        this.isDone \u003d true;"},{"lineNumber":47,"author":{"gitId":"chenzaza"},"content":"        this.status \u003d 1;"},{"lineNumber":48,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":50,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"chenzaza"},"content":"     * Converts task details into txt format for local storage."},{"lineNumber":52,"author":{"gitId":"chenzaza"},"content":"     * @return The text stored in the local file."},{"lineNumber":53,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"chenzaza"},"content":"    public String toTxt() {"},{"lineNumber":55,"author":{"gitId":"chenzaza"},"content":"        return String.format(\"| %s | %s\", isDone ? \"1\" : \"0\", this.description);"},{"lineNumber":56,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":58,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"chenzaza"},"content":"     * Generates event details displayed on the user interface."},{"lineNumber":60,"author":{"gitId":"chenzaza"},"content":"     * @return Message output for Task."},{"lineNumber":61,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"chenzaza"},"content":"    public String toString() {"},{"lineNumber":64,"author":{"gitId":"chenzaza"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":65,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":67,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":67}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":" * Represents any todo task specified with event description and status."},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":"     * Constructor for Event class."},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":"     * @param description Description of the todo task."},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"     * @param status To check if the todo task is done."},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"    public Todo(String description, int status) {"},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"        super(description, status);"},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"     * Converts todo task details into txt format for local storage."},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"     * @return The text stored in the local file."},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":"    public String toTxt() {"},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"        return \"T \" + super.toTxt() + \"\\n\";"},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":"     * Generates todo task details displayed on the user interface."},{"lineNumber":28,"author":{"gitId":"chenzaza"},"content":"     * @return Message output for Todo."},{"lineNumber":29,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"chenzaza"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"chenzaza"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"chenzaza"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":33,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":34}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":"import duke.command.Command;"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":"import duke.command.ExitCommand;"},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":"import duke.command.ListCommand;"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":" * Represents a test driver for \u003ccode\u003eParser\u003c/code\u003e."},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"public class ParserTest {"},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"     * Tests how Parser parses valid command input."},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"     * @throws DukeException If invalid command is given."},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"    public void parse_normalInput_parsedCorrectly() throws DukeException {"},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"        Command c1 \u003d Parser.parse(\"bye\");"},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":"        Command c2 \u003d Parser.parse(\"list\");"},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"        assertTrue(c1 instanceof ExitCommand);"},{"lineNumber":27,"author":{"gitId":"chenzaza"},"content":"        assertTrue(c2 instanceof ListCommand);"},{"lineNumber":28,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":30,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"chenzaza"},"content":"     * Tests how Parser parses invalid command input."},{"lineNumber":32,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"chenzaza"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"chenzaza"},"content":"    public void parse_partialInput_exceptionThrown() {"},{"lineNumber":35,"author":{"gitId":"chenzaza"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"chenzaza"},"content":"            Parser.parse(\"delete\");"},{"lineNumber":37,"author":{"gitId":"chenzaza"},"content":"            fail(); // the test should not reach this line"},{"lineNumber":38,"author":{"gitId":"chenzaza"},"content":"        } catch (DukeException e) {"},{"lineNumber":39,"author":{"gitId":"chenzaza"},"content":"            assertEquals(\":\u003c OOPS!!! The task index is missing.\", e.toString());"},{"lineNumber":40,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":42,"author":{"gitId":"chenzaza"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"chenzaza"},"content":"            Parser.parse(\"todo\");"},{"lineNumber":44,"author":{"gitId":"chenzaza"},"content":"            fail(); // the test should not reach this line"},{"lineNumber":45,"author":{"gitId":"chenzaza"},"content":"        } catch (DukeException e) {"},{"lineNumber":46,"author":{"gitId":"chenzaza"},"content":"            assertEquals(\":\u003c OOPS!!! The task description is missing.\", e.toString());"},{"lineNumber":47,"author":{"gitId":"chenzaza"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":49}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":"import duke.task.Todo;"},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":" * Represents a test driver for \u003ccode\u003eTaskList\u003c/code\u003e."},{"lineNumber":11,"author":{"gitId":"chenzaza"},"content":" */"},{"lineNumber":12,"author":{"gitId":"chenzaza"},"content":"public class TaskListTest {"},{"lineNumber":13,"author":{"gitId":"chenzaza"},"content":""},{"lineNumber":14,"author":{"gitId":"chenzaza"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"chenzaza"},"content":"     * Tests the addTask() method."},{"lineNumber":16,"author":{"gitId":"chenzaza"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"chenzaza"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"chenzaza"},"content":"    public void addTask_normalInput_addedCorrectly() {"},{"lineNumber":19,"author":{"gitId":"chenzaza"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"chenzaza"},"content":"        assertEquals(0, taskList.getSize());"},{"lineNumber":21,"author":{"gitId":"chenzaza"},"content":"        Todo tester \u003d new Todo(\"read book\", 0);"},{"lineNumber":22,"author":{"gitId":"chenzaza"},"content":"        taskList.addTask(tester);"},{"lineNumber":23,"author":{"gitId":"chenzaza"},"content":"        assertEquals(1, taskList.getSize());"},{"lineNumber":24,"author":{"gitId":"chenzaza"},"content":"        assertEquals(tester, taskList.getTask(1));"},{"lineNumber":25,"author":{"gitId":"chenzaza"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"chenzaza"},"content":"}"}],"authorContributionMap":{"chenzaza":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chenzaza"},"content":"list"},{"lineNumber":2,"author":{"gitId":"chenzaza"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":3,"author":{"gitId":"chenzaza"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"chenzaza"},"content":"todo borrow book"},{"lineNumber":5,"author":{"gitId":"chenzaza"},"content":"list"},{"lineNumber":6,"author":{"gitId":"chenzaza"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"chenzaza"},"content":"list"},{"lineNumber":8,"author":{"gitId":"chenzaza"},"content":"done 3"},{"lineNumber":9,"author":{"gitId":"chenzaza"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"chenzaza"},"content":"list"}],"authorContributionMap":{"chenzaza":10}}]
