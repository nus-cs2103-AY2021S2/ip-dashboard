[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":20,"author":{"gitId":"cheeerynne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":21,"author":{"gitId":"cheeerynne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":22,"author":{"gitId":"cheeerynne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"cheeerynne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"cheeerynne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"cheeerynne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"cheeerynne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"cheeerynne"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"cheeerynne"},"content":"      mainClassName \u003d \"duke.Launcher\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"cheeerynne"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"cheeerynne"},"content":"    enableAssertions \u003d true"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"cheeerynne":19,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":"## What is Duke? "},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"Duke is a command line task manager that helps users to keep track of tasks."},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":"With a Command Line Interface (CLI) along with a Graphical User Interface (GUI), "},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":"users who can type fast will find it to be a better alternative than a GUI-only "},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"task manager."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"  "},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"| No. | Features | Command Syntax |  "},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"| :---: | :--------: | :--------------: |  "},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"| 1. | todo | todo [task_description] |  "},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"| 2. | deadline | deadline [task_description] /by [yyyy-MM-dd HHmm] |  "},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"| 3. | event | event [task_description] /at [yyyy-MM-dd HHmm] |  "},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"| 4. | list | list |  "},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"| 5. | delete | delete [task_index] |  "},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":"| 6. | done | done [task_index] |  "},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"| 7. | find | find [keyword] |  "},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":"| 8. | update |  update [task_index] description [new_description] \u003cbr\u003e OR \u003cbr\u003e update [task_index] date/time [new_dateTime, format: yyyy-MM-dd HHmm] |   "},{"lineNumber":20,"author":{"gitId":"cheeerynne"},"content":"| 9. | bye | bye |  "},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"cheeerynne"},"content":"### 1. **`todo`**"},{"lineNumber":23,"author":{"gitId":"cheeerynne"},"content":"Add a todo task into the list.  "},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"cheeerynne"},"content":"- **Command Syntax:**  "},{"lineNumber":26,"author":{"gitId":"cheeerynne"},"content":"`todo [task_description]`"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  "},{"lineNumber":28,"author":{"gitId":"cheeerynne"},"content":"- **Example of Usage:**  "},{"lineNumber":29,"author":{"gitId":"cheeerynne"},"content":"`todo math assignment`"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  "},{"lineNumber":31,"author":{"gitId":"cheeerynne"},"content":"- **Expected Outcome:**  "},{"lineNumber":32,"author":{"gitId":"cheeerynne"},"content":"`Yes sir! I\u0027ve added this task:`  "},{"lineNumber":33,"author":{"gitId":"cheeerynne"},"content":"`[T][] math assignment`  "},{"lineNumber":34,"author":{"gitId":"cheeerynne"},"content":"`Now you have 1 task in the list.`"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"cheeerynne"},"content":"### 2. **`deadline`**"},{"lineNumber":37,"author":{"gitId":"cheeerynne"},"content":"Add a deadline task into the list."},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"cheeerynne"},"content":"- **Command Syntax:**  "},{"lineNumber":40,"author":{"gitId":"cheeerynne"},"content":"`deadline [task_description] /by [yyyy-MM-dd HHmm]`"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"cheeerynne"},"content":"- **Example of Usage:**  "},{"lineNumber":43,"author":{"gitId":"cheeerynne"},"content":"`deadline complete tutorial /by 2021-03-10 2359`"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"cheeerynne"},"content":"- **Expected Outcome:**  "},{"lineNumber":46,"author":{"gitId":"cheeerynne"},"content":"`Yes sir! I\u0027ve added this task:`  "},{"lineNumber":47,"author":{"gitId":"cheeerynne"},"content":"`[D][] complete tutorial (by: Mar 10 2021 23:59)`  "},{"lineNumber":48,"author":{"gitId":"cheeerynne"},"content":"`Now you have 2 task in the list.`"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"cheeerynne"},"content":"### 3. **`event`**"},{"lineNumber":51,"author":{"gitId":"cheeerynne"},"content":"Add an event task into the list."},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"cheeerynne"},"content":"- **Command Syntax:**  "},{"lineNumber":54,"author":{"gitId":"cheeerynne"},"content":"`event [task_description] /at [yyyy-MM-dd HHmm]`"},{"lineNumber":55,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":56,"author":{"gitId":"cheeerynne"},"content":"- **Example of Usage:**  "},{"lineNumber":57,"author":{"gitId":"cheeerynne"},"content":"`event birthday party /at 2021-03-08 1400`"},{"lineNumber":58,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":59,"author":{"gitId":"cheeerynne"},"content":"- **Expected Outcome:**  "},{"lineNumber":60,"author":{"gitId":"cheeerynne"},"content":"`Yes sir! I\u0027ve added this task:`  "},{"lineNumber":61,"author":{"gitId":"cheeerynne"},"content":"`[E][] birthday party (at: Mar 08 2021 14:00)`  "},{"lineNumber":62,"author":{"gitId":"cheeerynne"},"content":"`Now you have 3 task in the list.`"},{"lineNumber":63,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":64,"author":{"gitId":"cheeerynne"},"content":"### 4. **`list`**"},{"lineNumber":65,"author":{"gitId":"cheeerynne"},"content":"Lists all the tasks.  "},{"lineNumber":66,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":67,"author":{"gitId":"cheeerynne"},"content":"- **Command Syntax:**  "},{"lineNumber":68,"author":{"gitId":"cheeerynne"},"content":"`list`"},{"lineNumber":69,"author":{"gitId":"cheeerynne"},"content":"- **Example of Usage:**  "},{"lineNumber":70,"author":{"gitId":"cheeerynne"},"content":"`list`"},{"lineNumber":71,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":72,"author":{"gitId":"cheeerynne"},"content":"- **Expected Outcome:**  "},{"lineNumber":73,"author":{"gitId":"cheeerynne"},"content":"`Here are the tasks in your list:`  "},{"lineNumber":74,"author":{"gitId":"cheeerynne"},"content":"`1. [T][] math assignment`  "},{"lineNumber":75,"author":{"gitId":"cheeerynne"},"content":"`2. [D][] complete tutorial (by: Mar 10 2021 23:59)`  "},{"lineNumber":76,"author":{"gitId":"cheeerynne"},"content":"`3. [E][] birthday party (at: Mar 08 2021 14:00)`"},{"lineNumber":77,"author":{"gitId":"cheeerynne"},"content":"  "},{"lineNumber":78,"author":{"gitId":"cheeerynne"},"content":"### 5. **`delete`**"},{"lineNumber":79,"author":{"gitId":"cheeerynne"},"content":"Deletes the specific task from the list. "},{"lineNumber":80,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":81,"author":{"gitId":"cheeerynne"},"content":"- **Command Syntax:**  "},{"lineNumber":82,"author":{"gitId":"cheeerynne"},"content":"`delete [task_index]`"},{"lineNumber":83,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":84,"author":{"gitId":"cheeerynne"},"content":"- **Example of Usage:**  "},{"lineNumber":85,"author":{"gitId":"cheeerynne"},"content":"`delete 3`"},{"lineNumber":86,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":87,"author":{"gitId":"cheeerynne"},"content":"- **Expected Outcome:**  "},{"lineNumber":88,"author":{"gitId":"cheeerynne"},"content":"`Noted! I\u0027ve removed this task:`  "},{"lineNumber":89,"author":{"gitId":"cheeerynne"},"content":"`[E][] birthday party (at: Mar 08 2021 14:00)`  "},{"lineNumber":90,"author":{"gitId":"cheeerynne"},"content":"`Now you have 2 tasks in the list`"},{"lineNumber":91,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":92,"author":{"gitId":"cheeerynne"},"content":"### 6. **`done`**"},{"lineNumber":93,"author":{"gitId":"cheeerynne"},"content":"Marks the specific task as \u0027done\u0027 by indicating on the list with a cross."},{"lineNumber":94,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":95,"author":{"gitId":"cheeerynne"},"content":"- **Command Syntax:**  "},{"lineNumber":96,"author":{"gitId":"cheeerynne"},"content":"`done [task_index]`"},{"lineNumber":97,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":98,"author":{"gitId":"cheeerynne"},"content":"- **Example of Usage:**  "},{"lineNumber":99,"author":{"gitId":"cheeerynne"},"content":"`done 1`"},{"lineNumber":100,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":101,"author":{"gitId":"cheeerynne"},"content":"- **Expected Outcome:**  "},{"lineNumber":102,"author":{"gitId":"cheeerynne"},"content":"`Nice! I\u0027ve marked this task as done:`  "},{"lineNumber":103,"author":{"gitId":"cheeerynne"},"content":"`[T][X] math assignment`"},{"lineNumber":104,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":105,"author":{"gitId":"cheeerynne"},"content":"### 7. **`find`**"},{"lineNumber":106,"author":{"gitId":"cheeerynne"},"content":"Find tasks with the matching keyword specified.  "},{"lineNumber":107,"author":{"gitId":"cheeerynne"},"content":"Keyword specified can be in the form of [MMM dd yyyy] or [HH:mm] "},{"lineNumber":108,"author":{"gitId":"cheeerynne"},"content":"to search for tasks with the specific date/time. "},{"lineNumber":109,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":110,"author":{"gitId":"cheeerynne"},"content":"- **Command Syntax:**  "},{"lineNumber":111,"author":{"gitId":"cheeerynne"},"content":"`find [keyword]`"},{"lineNumber":112,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":113,"author":{"gitId":"cheeerynne"},"content":"- **Example of Usage:**  "},{"lineNumber":114,"author":{"gitId":"cheeerynne"},"content":"`find tutorial`"},{"lineNumber":115,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":116,"author":{"gitId":"cheeerynne"},"content":"- **Expected Outcome:**  "},{"lineNumber":117,"author":{"gitId":"cheeerynne"},"content":"`Here are the matching tasks in your list:`  "},{"lineNumber":118,"author":{"gitId":"cheeerynne"},"content":"`1. [D][] complete tutorial (by: Mar 10 2021 23:59)`"},{"lineNumber":119,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":120,"author":{"gitId":"cheeerynne"},"content":"### 8. **`update`**"},{"lineNumber":121,"author":{"gitId":"cheeerynne"},"content":"Updates the specific task accordingly. "},{"lineNumber":122,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":123,"author":{"gitId":"cheeerynne"},"content":"- **Command Syntax:**  "},{"lineNumber":124,"author":{"gitId":"cheeerynne"},"content":" Description: `update [task_index] description [new_description]`  "},{"lineNumber":125,"author":{"gitId":"cheeerynne"},"content":" Date/Time: `update [task_index] date/time [new_dateTime, format: yyyy-MM-dd HHmm]`"},{"lineNumber":126,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":127,"author":{"gitId":"cheeerynne"},"content":"- **Example of Usage:**  "},{"lineNumber":128,"author":{"gitId":"cheeerynne"},"content":" Description: `update 1 description chinese assignment`  "},{"lineNumber":129,"author":{"gitId":"cheeerynne"},"content":" Date/Time: `update 2 date/time 2021-03-15 1900`"},{"lineNumber":130,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":131,"author":{"gitId":"cheeerynne"},"content":"- **Expected Outcome:**  "},{"lineNumber":132,"author":{"gitId":"cheeerynne"},"content":" Description:  "},{"lineNumber":133,"author":{"gitId":"cheeerynne"},"content":"  `Noted. I\u0027ve updated the following task to:`  "},{"lineNumber":134,"author":{"gitId":"cheeerynne"},"content":"  `[T][X] chinese assignment`  "},{"lineNumber":135,"author":{"gitId":"cheeerynne"},"content":" Date/Time:   "},{"lineNumber":136,"author":{"gitId":"cheeerynne"},"content":"  `Noted. I\u0027ve updated the following task to:`  "},{"lineNumber":137,"author":{"gitId":"cheeerynne"},"content":"  `[D][] complete tutorial (by: Mar 15 2021 19:00)`"},{"lineNumber":138,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":139,"author":{"gitId":"cheeerynne"},"content":"### 9. **`bye`**"},{"lineNumber":140,"author":{"gitId":"cheeerynne"},"content":"Duke application terminates upon calling bye. "},{"lineNumber":141,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":142,"author":{"gitId":"cheeerynne"},"content":"- **Command Syntax:**  "},{"lineNumber":143,"author":{"gitId":"cheeerynne"},"content":"`bye`"},{"lineNumber":144,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":145,"author":{"gitId":"cheeerynne"},"content":"- **Example of Usage:**  "},{"lineNumber":146,"author":{"gitId":"cheeerynne"},"content":"`bye`"},{"lineNumber":147,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":148,"author":{"gitId":"cheeerynne"},"content":"- **Expected Outcome:**  "},{"lineNumber":149,"author":{"gitId":"cheeerynne"},"content":"`Bye, this was Eeyore serving you!`  "},{"lineNumber":150,"author":{"gitId":"cheeerynne"},"content":"`Hope to see you again, take care!`"}],"authorContributionMap":{"cheeerynne":138,"-":12}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"import javafx.geometry.Insets;"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":20,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":21,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":22,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eDialogBox\u003c/code\u003e class is a custom control using FXML."},{"lineNumber":24,"author":{"gitId":"cheeerynne"},"content":" * Represents a dialog box consisting of an ImageView to"},{"lineNumber":25,"author":{"gitId":"cheeerynne"},"content":" * represent the user\u0027s image and a label containing text from the user."},{"lineNumber":26,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":27,"author":{"gitId":"cheeerynne"},"content":"public class DialogBox extends HBox {"},{"lineNumber":28,"author":{"gitId":"cheeerynne"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"cheeerynne"},"content":"    private Label dialog;"},{"lineNumber":30,"author":{"gitId":"cheeerynne"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"cheeerynne"},"content":"    private ImageView displayPicture;"},{"lineNumber":32,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":33,"author":{"gitId":"cheeerynne"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":34,"author":{"gitId":"cheeerynne"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"cheeerynne"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class"},{"lineNumber":36,"author":{"gitId":"cheeerynne"},"content":"                    .getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":37,"author":{"gitId":"cheeerynne"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":38,"author":{"gitId":"cheeerynne"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":39,"author":{"gitId":"cheeerynne"},"content":"            fxmlLoader.load();"},{"lineNumber":40,"author":{"gitId":"cheeerynne"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"cheeerynne"},"content":"            e.printStackTrace();"},{"lineNumber":42,"author":{"gitId":"cheeerynne"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":44,"author":{"gitId":"cheeerynne"},"content":"        dialog.setText(text);"},{"lineNumber":45,"author":{"gitId":"cheeerynne"},"content":"        displayPicture.setImage(img);"},{"lineNumber":46,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":48,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"cheeerynne"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":50,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"cheeerynne"},"content":"    private void flip() {"},{"lineNumber":52,"author":{"gitId":"cheeerynne"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":53,"author":{"gitId":"cheeerynne"},"content":"        Collections.reverse(tmp);"},{"lineNumber":54,"author":{"gitId":"cheeerynne"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":55,"author":{"gitId":"cheeerynne"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":56,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":58,"author":{"gitId":"cheeerynne"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":59,"author":{"gitId":"cheeerynne"},"content":"        var dialogBox \u003d new DialogBox(text, img);"},{"lineNumber":60,"author":{"gitId":"cheeerynne"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(Color.rgb(198, 216, 211),"},{"lineNumber":61,"author":{"gitId":"cheeerynne"},"content":"                CornerRadii.EMPTY, Insets.EMPTY);"},{"lineNumber":62,"author":{"gitId":"cheeerynne"},"content":"        Background background \u003d new Background(backgroundFill);"},{"lineNumber":63,"author":{"gitId":"cheeerynne"},"content":"        dialogBox.setBackground(background);"},{"lineNumber":64,"author":{"gitId":"cheeerynne"},"content":"        return dialogBox;"},{"lineNumber":65,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":67,"author":{"gitId":"cheeerynne"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":68,"author":{"gitId":"cheeerynne"},"content":"        var dialogBox \u003d new DialogBox(text, img);"},{"lineNumber":69,"author":{"gitId":"cheeerynne"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(Color.rgb(253, 240, 213),"},{"lineNumber":70,"author":{"gitId":"cheeerynne"},"content":"                CornerRadii.EMPTY, Insets.EMPTY);"},{"lineNumber":71,"author":{"gitId":"cheeerynne"},"content":"        Background background \u003d new Background(backgroundFill);"},{"lineNumber":72,"author":{"gitId":"cheeerynne"},"content":"        dialogBox.setBackground(background);"},{"lineNumber":73,"author":{"gitId":"cheeerynne"},"content":"        dialogBox.flip();"},{"lineNumber":74,"author":{"gitId":"cheeerynne"},"content":"        return dialogBox;"},{"lineNumber":75,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":76}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":"import duke.exceptions.InvalidFileDataException;"},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"import duke.exceptions.InvalidFolderException;"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"import duke.exceptions.InvalidInputException;"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"import duke.task.Task;"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eDuke\u003c/code\u003e class to support the GUI for Duke."},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"    private static Storage storage;"},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":"    private static TaskList tasks;"},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"    private static Ui ui;"},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":"    private static Parser parser;"},{"lineNumber":20,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":21,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for Duke class."},{"lineNumber":23,"author":{"gitId":"cheeerynne"},"content":"     * Initializes Ui, Storage and TaskList."},{"lineNumber":24,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"cheeerynne"},"content":"    public Duke() {"},{"lineNumber":26,"author":{"gitId":"cheeerynne"},"content":"        ui \u003d new Ui();"},{"lineNumber":27,"author":{"gitId":"cheeerynne"},"content":"        parser \u003d new Parser();"},{"lineNumber":28,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":29,"author":{"gitId":"cheeerynne"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"cheeerynne"},"content":"            storage \u003d new Storage();"},{"lineNumber":31,"author":{"gitId":"cheeerynne"},"content":"            tasks \u003d new TaskList(storage.readFileContents());"},{"lineNumber":32,"author":{"gitId":"cheeerynne"},"content":"        } catch (FileNotFoundException | InvalidFolderException"},{"lineNumber":33,"author":{"gitId":"cheeerynne"},"content":"                | InvalidFileDataException e) {"},{"lineNumber":34,"author":{"gitId":"cheeerynne"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":35,"author":{"gitId":"cheeerynne"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":38,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"cheeerynne"},"content":"     * Generates responses to user input."},{"lineNumber":40,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"cheeerynne"},"content":"     * @return Response generated according to the task action."},{"lineNumber":42,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"cheeerynne"},"content":"    public String getResponse(String userInput) {"},{"lineNumber":44,"author":{"gitId":"cheeerynne"},"content":"        StringBuilder response \u003d new StringBuilder();"},{"lineNumber":45,"author":{"gitId":"cheeerynne"},"content":"        String[] parsedUserInput \u003d parser.parseUserInput(userInput);"},{"lineNumber":46,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":47,"author":{"gitId":"cheeerynne"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"cheeerynne"},"content":"            parser.checkUserInput(tasks.list, userInput);"},{"lineNumber":49,"author":{"gitId":"cheeerynne"},"content":"            String userAction \u003d parsedUserInput[0];"},{"lineNumber":50,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":51,"author":{"gitId":"cheeerynne"},"content":"            switch (userAction) {"},{"lineNumber":52,"author":{"gitId":"cheeerynne"},"content":"            case \"bye\":"},{"lineNumber":53,"author":{"gitId":"cheeerynne"},"content":"                response.append(ui.exit());"},{"lineNumber":54,"author":{"gitId":"cheeerynne"},"content":"                break;"},{"lineNumber":55,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":56,"author":{"gitId":"cheeerynne"},"content":"            case \"list\":"},{"lineNumber":57,"author":{"gitId":"cheeerynne"},"content":"                response.append(ui.printTaskList(tasks.list));"},{"lineNumber":58,"author":{"gitId":"cheeerynne"},"content":"                break;"},{"lineNumber":59,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":60,"author":{"gitId":"cheeerynne"},"content":"            case \"todo\":"},{"lineNumber":61,"author":{"gitId":"cheeerynne"},"content":"            case \"deadline\":"},{"lineNumber":62,"author":{"gitId":"cheeerynne"},"content":"            case \"event\":"},{"lineNumber":63,"author":{"gitId":"cheeerynne"},"content":"                Task newTask \u003d tasks.addNewTask(userInput);"},{"lineNumber":64,"author":{"gitId":"cheeerynne"},"content":"                response.append(ui.printAddTask(newTask, tasks.list));"},{"lineNumber":65,"author":{"gitId":"cheeerynne"},"content":"                break;"},{"lineNumber":66,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":67,"author":{"gitId":"cheeerynne"},"content":"            case \"done\":"},{"lineNumber":68,"author":{"gitId":"cheeerynne"},"content":"                tasks.markAsDone(userInput);"},{"lineNumber":69,"author":{"gitId":"cheeerynne"},"content":"                response.append(ui.printDoneTask(Integer"},{"lineNumber":70,"author":{"gitId":"cheeerynne"},"content":"                                .parseInt(parsedUserInput[1]) - 1,"},{"lineNumber":71,"author":{"gitId":"cheeerynne"},"content":"                        tasks.list));"},{"lineNumber":72,"author":{"gitId":"cheeerynne"},"content":"                break;"},{"lineNumber":73,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":74,"author":{"gitId":"cheeerynne"},"content":"            case \"delete\":"},{"lineNumber":75,"author":{"gitId":"cheeerynne"},"content":"                response.append(ui.printDeleteTask(Integer"},{"lineNumber":76,"author":{"gitId":"cheeerynne"},"content":"                                .parseInt(parsedUserInput[1]) - 1,"},{"lineNumber":77,"author":{"gitId":"cheeerynne"},"content":"                        tasks.list));"},{"lineNumber":78,"author":{"gitId":"cheeerynne"},"content":"                tasks.deleteTask(userInput);"},{"lineNumber":79,"author":{"gitId":"cheeerynne"},"content":"                break;"},{"lineNumber":80,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":81,"author":{"gitId":"cheeerynne"},"content":"            case \"find\":"},{"lineNumber":82,"author":{"gitId":"cheeerynne"},"content":"                List\u003cTask\u003e tempList \u003d tasks.findTask(userInput);"},{"lineNumber":83,"author":{"gitId":"cheeerynne"},"content":"                response.append(ui.printFindKeyword(tempList));"},{"lineNumber":84,"author":{"gitId":"cheeerynne"},"content":"                break;"},{"lineNumber":85,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":86,"author":{"gitId":"cheeerynne"},"content":"            case \"update\":"},{"lineNumber":87,"author":{"gitId":"cheeerynne"},"content":"                int taskToUpdate \u003d Integer.parseInt(parsedUserInput[1]) - 1;"},{"lineNumber":88,"author":{"gitId":"cheeerynne"},"content":"                String detailToUpdate \u003d parsedUserInput[2];"},{"lineNumber":89,"author":{"gitId":"cheeerynne"},"content":"                String newDetail \u003d parser.parseUpdateInput(parsedUserInput).trim();"},{"lineNumber":90,"author":{"gitId":"cheeerynne"},"content":"                tasks.updateTask(taskToUpdate, detailToUpdate, newDetail);"},{"lineNumber":91,"author":{"gitId":"cheeerynne"},"content":"                response.append(ui.printUpdatePrompt(tasks.list, taskToUpdate));"},{"lineNumber":92,"author":{"gitId":"cheeerynne"},"content":"                break;"},{"lineNumber":93,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":94,"author":{"gitId":"cheeerynne"},"content":"            default:"},{"lineNumber":95,"author":{"gitId":"cheeerynne"},"content":"                throw new InvalidInputException();"},{"lineNumber":96,"author":{"gitId":"cheeerynne"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"cheeerynne"},"content":"            storage.overWriteFile(tasks.list);"},{"lineNumber":98,"author":{"gitId":"cheeerynne"},"content":"        } catch (DukeException ex) {"},{"lineNumber":99,"author":{"gitId":"cheeerynne"},"content":"            response.append(ex.getMessage());"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"cheeerynne"},"content":"        return response.toString();"},{"lineNumber":102,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"cheeerynne":100,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eLauncher\u003c/code\u003e class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"        Application.launch(duke.Main.class, args);"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"    public void start(Stage stage) {"},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"cheeerynne"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":21,"author":{"gitId":"cheeerynne"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":22,"author":{"gitId":"cheeerynne"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":23,"author":{"gitId":"cheeerynne"},"content":"            stage.setScene(scene);"},{"lineNumber":24,"author":{"gitId":"cheeerynne"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"cheeerynne"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"cheeerynne"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"cheeerynne"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"cheeerynne"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":30}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":"import javafx.application.Platform;"},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"import javafx.util.Duration;"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":" * Controller for MainWindow."},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":" * Provides the layout for the other controls."},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"cheeerynne"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":22,"author":{"gitId":"cheeerynne"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"cheeerynne"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":25,"author":{"gitId":"cheeerynne"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"cheeerynne"},"content":"    private TextField userInput;"},{"lineNumber":27,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":28,"author":{"gitId":"cheeerynne"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"cheeerynne"},"content":"    private Button sendButton;"},{"lineNumber":30,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":31,"author":{"gitId":"cheeerynne"},"content":"    private Duke duke;"},{"lineNumber":32,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":33,"author":{"gitId":"cheeerynne"},"content":"    private Ui ui \u003d new Ui();"},{"lineNumber":34,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":35,"author":{"gitId":"cheeerynne"},"content":"    private final Image userImage \u003d new Image(this.getClass()"},{"lineNumber":36,"author":{"gitId":"cheeerynne"},"content":"            .getResourceAsStream(\"/images/Pooh.png\"));"},{"lineNumber":37,"author":{"gitId":"cheeerynne"},"content":"    private final Image dukeImage \u003d new Image(this.getClass()"},{"lineNumber":38,"author":{"gitId":"cheeerynne"},"content":"            .getResourceAsStream(\"/images/Eeyore.png\"));"},{"lineNumber":39,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":40,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"cheeerynne"},"content":"     * Initializes dialog box."},{"lineNumber":42,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"cheeerynne"},"content":"    @FXML"},{"lineNumber":44,"author":{"gitId":"cheeerynne"},"content":"    public void initialize() {"},{"lineNumber":45,"author":{"gitId":"cheeerynne"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":46,"author":{"gitId":"cheeerynne"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(ui.welcome(), dukeImage));"},{"lineNumber":47,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":49,"author":{"gitId":"cheeerynne"},"content":"    public void setDuke(Duke duke) {"},{"lineNumber":50,"author":{"gitId":"cheeerynne"},"content":"        this.duke \u003d duke;"},{"lineNumber":51,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":53,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"cheeerynne"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing"},{"lineNumber":55,"author":{"gitId":"cheeerynne"},"content":"     * Duke\u0027s reply and then appends them to the dialog container."},{"lineNumber":56,"author":{"gitId":"cheeerynne"},"content":"     * Clears the user input after processing."},{"lineNumber":57,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"cheeerynne"},"content":"    @FXML"},{"lineNumber":59,"author":{"gitId":"cheeerynne"},"content":"    private void handleUserInput() {"},{"lineNumber":60,"author":{"gitId":"cheeerynne"},"content":"        String response;"},{"lineNumber":61,"author":{"gitId":"cheeerynne"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":62,"author":{"gitId":"cheeerynne"},"content":"        response \u003d duke.getResponse(input);"},{"lineNumber":63,"author":{"gitId":"cheeerynne"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage),"},{"lineNumber":64,"author":{"gitId":"cheeerynne"},"content":"                DialogBox.getDukeDialog(response, dukeImage));"},{"lineNumber":65,"author":{"gitId":"cheeerynne"},"content":"        userInput.clear();"},{"lineNumber":66,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":67,"author":{"gitId":"cheeerynne"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":68,"author":{"gitId":"cheeerynne"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(4));"},{"lineNumber":69,"author":{"gitId":"cheeerynne"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());"},{"lineNumber":70,"author":{"gitId":"cheeerynne"},"content":"            delay.play();"},{"lineNumber":71,"author":{"gitId":"cheeerynne"},"content":"            //Platform.exit();"},{"lineNumber":72,"author":{"gitId":"cheeerynne"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":74}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":"import duke.exceptions.EmptyDescriptionException;"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"import duke.exceptions.InvalidInputException;"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":"import duke.exceptions.InvalidTaskNumberException;"},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"import duke.exceptions.MissingTaskNumberException;"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eParser\u003c/code\u003e class deals with making sense of the user command."},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"public class Parser {"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"    protected static String task;"},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for Parser class."},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"cheeerynne"},"content":"    public Parser() {"},{"lineNumber":21,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":23,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"cheeerynne"},"content":"     * Parses the String user input into an array of Strings."},{"lineNumber":25,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"cheeerynne"},"content":"     * @return An array of Strings of the parsed user input."},{"lineNumber":27,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"cheeerynne"},"content":"    public String[] parseUserInput(String userInput) {"},{"lineNumber":29,"author":{"gitId":"cheeerynne"},"content":"        return userInput.split(\" \");"},{"lineNumber":30,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":32,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"cheeerynne"},"content":"     * Parses the String of the new detail for the update function."},{"lineNumber":34,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"cheeerynne"},"content":"     * @param parsedUserInput String array of user input."},{"lineNumber":36,"author":{"gitId":"cheeerynne"},"content":"     * @return String of the new details to be updated."},{"lineNumber":37,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"cheeerynne"},"content":"    public String parseUpdateInput(String[] parsedUserInput) {"},{"lineNumber":39,"author":{"gitId":"cheeerynne"},"content":"        StringBuilder newDetail \u003d new StringBuilder();"},{"lineNumber":40,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":41,"author":{"gitId":"cheeerynne"},"content":"        for (int i \u003d 3; i \u003c parsedUserInput.length; i++) {"},{"lineNumber":42,"author":{"gitId":"cheeerynne"},"content":"            newDetail.append(parsedUserInput[i] + \" \");"},{"lineNumber":43,"author":{"gitId":"cheeerynne"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":45,"author":{"gitId":"cheeerynne"},"content":"        return newDetail.toString();"},{"lineNumber":46,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":48,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"cheeerynne"},"content":"     * Checks the user input and ensures that it makes sense."},{"lineNumber":50,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"cheeerynne"},"content":"     * @param list List of existing tasks."},{"lineNumber":52,"author":{"gitId":"cheeerynne"},"content":"     * @throws MissingTaskNumberException If there is no task number for done or delete actions."},{"lineNumber":53,"author":{"gitId":"cheeerynne"},"content":"     * @throws InvalidTaskNumberException If the task number is outside the list range."},{"lineNumber":54,"author":{"gitId":"cheeerynne"},"content":"     * @throws EmptyDescriptionException If there is no description for the task action."},{"lineNumber":55,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"cheeerynne"},"content":"    public void checkUserInput(List\u003cTask\u003e list, String userInput)"},{"lineNumber":57,"author":{"gitId":"cheeerynne"},"content":"            throws MissingTaskNumberException,"},{"lineNumber":58,"author":{"gitId":"cheeerynne"},"content":"            InvalidTaskNumberException,"},{"lineNumber":59,"author":{"gitId":"cheeerynne"},"content":"            EmptyDescriptionException,"},{"lineNumber":60,"author":{"gitId":"cheeerynne"},"content":"            InvalidInputException {"},{"lineNumber":61,"author":{"gitId":"cheeerynne"},"content":"        String[] userInputArr \u003d userInput.split(\" \");"},{"lineNumber":62,"author":{"gitId":"cheeerynne"},"content":"        String task \u003d userInputArr[0];"},{"lineNumber":63,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":64,"author":{"gitId":"cheeerynne"},"content":"        switch (task) {"},{"lineNumber":65,"author":{"gitId":"cheeerynne"},"content":"        case \"list\":"},{"lineNumber":66,"author":{"gitId":"cheeerynne"},"content":"        case \"bye\":"},{"lineNumber":67,"author":{"gitId":"cheeerynne"},"content":"            if (userInputArr.length \u003e 1) {"},{"lineNumber":68,"author":{"gitId":"cheeerynne"},"content":"                throw new InvalidInputException();"},{"lineNumber":69,"author":{"gitId":"cheeerynne"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"cheeerynne"},"content":"            break;"},{"lineNumber":71,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":72,"author":{"gitId":"cheeerynne"},"content":"        case \"todo\":"},{"lineNumber":73,"author":{"gitId":"cheeerynne"},"content":"        case \"deadline\":"},{"lineNumber":74,"author":{"gitId":"cheeerynne"},"content":"        case \"event\":"},{"lineNumber":75,"author":{"gitId":"cheeerynne"},"content":"        case \"find\":"},{"lineNumber":76,"author":{"gitId":"cheeerynne"},"content":"            if (userInputArr.length \u003d\u003d 1) {"},{"lineNumber":77,"author":{"gitId":"cheeerynne"},"content":"                throw new EmptyDescriptionException(task);"},{"lineNumber":78,"author":{"gitId":"cheeerynne"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"cheeerynne"},"content":"            break;"},{"lineNumber":80,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":81,"author":{"gitId":"cheeerynne"},"content":"        case \"done\":"},{"lineNumber":82,"author":{"gitId":"cheeerynne"},"content":"        case \"delete\":"},{"lineNumber":83,"author":{"gitId":"cheeerynne"},"content":"            if (userInputArr.length \u003d\u003d 1) {"},{"lineNumber":84,"author":{"gitId":"cheeerynne"},"content":"                throw new MissingTaskNumberException();"},{"lineNumber":85,"author":{"gitId":"cheeerynne"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":87,"author":{"gitId":"cheeerynne"},"content":"            int taskNumber \u003d Integer.parseInt(userInputArr[1]) - 1;"},{"lineNumber":88,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":89,"author":{"gitId":"cheeerynne"},"content":"            if (taskNumber \u003c 0 || taskNumber \u003e list.size() - 1) {"},{"lineNumber":90,"author":{"gitId":"cheeerynne"},"content":"                throw new InvalidTaskNumberException();"},{"lineNumber":91,"author":{"gitId":"cheeerynne"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"cheeerynne"},"content":"            break;"},{"lineNumber":93,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":94,"author":{"gitId":"cheeerynne"},"content":"        case \"update\":"},{"lineNumber":95,"author":{"gitId":"cheeerynne"},"content":"            if (userInputArr.length \u003c 4) {"},{"lineNumber":96,"author":{"gitId":"cheeerynne"},"content":"                throw new EmptyDescriptionException(task);"},{"lineNumber":97,"author":{"gitId":"cheeerynne"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"cheeerynne"},"content":"            break;"},{"lineNumber":99,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":100,"author":{"gitId":"cheeerynne"},"content":"        default:"},{"lineNumber":101,"author":{"gitId":"cheeerynne"},"content":"            throw new InvalidInputException();"},{"lineNumber":102,"author":{"gitId":"cheeerynne"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":104}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"import duke.exceptions.InvalidFileDataException;"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"import duke.exceptions.InvalidFolderException;"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"import duke.task.Deadline;"},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"import duke.task.Event;"},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":"import duke.task.Task;"},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"import duke.task.ToDo;"},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":20,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eStorage\u003c/code\u003e class handles the loading of"},{"lineNumber":22,"author":{"gitId":"cheeerynne"},"content":" * tasks from the file and saving tasks in the file."},{"lineNumber":23,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":24,"author":{"gitId":"cheeerynne"},"content":"public class Storage {"},{"lineNumber":25,"author":{"gitId":"cheeerynne"},"content":"    private static final String filePath \u003d \"./data/duke.txt\";"},{"lineNumber":26,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":27,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for Storage class."},{"lineNumber":29,"author":{"gitId":"cheeerynne"},"content":"     * Initializes File for the task file."},{"lineNumber":30,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"cheeerynne"},"content":"     * @throws InvalidFolderException If folder to store the file does not exist."},{"lineNumber":32,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"cheeerynne"},"content":"    public Storage() throws InvalidFolderException {"},{"lineNumber":34,"author":{"gitId":"cheeerynne"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"cheeerynne"},"content":"            File file \u003d new File(filePath);"},{"lineNumber":36,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":37,"author":{"gitId":"cheeerynne"},"content":"            if (!file.exists()) {"},{"lineNumber":38,"author":{"gitId":"cheeerynne"},"content":"                file.getParentFile().mkdirs();"},{"lineNumber":39,"author":{"gitId":"cheeerynne"},"content":"                file.createNewFile();"},{"lineNumber":40,"author":{"gitId":"cheeerynne"},"content":"            } else {"},{"lineNumber":41,"author":{"gitId":"cheeerynne"},"content":"                readFileContents();"},{"lineNumber":42,"author":{"gitId":"cheeerynne"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"cheeerynne"},"content":"        } catch (IOException ex) {"},{"lineNumber":44,"author":{"gitId":"cheeerynne"},"content":"            throw new InvalidFolderException();"},{"lineNumber":45,"author":{"gitId":"cheeerynne"},"content":"        } catch (InvalidFileDataException ex) {"},{"lineNumber":46,"author":{"gitId":"cheeerynne"},"content":"            ex.getMessage();"},{"lineNumber":47,"author":{"gitId":"cheeerynne"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":50,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"cheeerynne"},"content":"     * Returns a List of existing tasks from the file when Duke starts up."},{"lineNumber":52,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"cheeerynne"},"content":"     * @return List of existing tasks in the file."},{"lineNumber":54,"author":{"gitId":"cheeerynne"},"content":"     * @throws FileNotFoundException If the file cannot be found."},{"lineNumber":55,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"cheeerynne"},"content":"    public List\u003cTask\u003e readFileContents()"},{"lineNumber":57,"author":{"gitId":"cheeerynne"},"content":"            throws FileNotFoundException, InvalidFileDataException {"},{"lineNumber":58,"author":{"gitId":"cheeerynne"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":59,"author":{"gitId":"cheeerynne"},"content":"        Scanner scanner \u003d new Scanner(file);"},{"lineNumber":60,"author":{"gitId":"cheeerynne"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":61,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":62,"author":{"gitId":"cheeerynne"},"content":"        while (scanner.hasNextLine()) {"},{"lineNumber":63,"author":{"gitId":"cheeerynne"},"content":"            String taskString \u003d scanner.nextLine();"},{"lineNumber":64,"author":{"gitId":"cheeerynne"},"content":"            String[] splitString \u003d taskString.split(\" \\\\| \");"},{"lineNumber":65,"author":{"gitId":"cheeerynne"},"content":"            Task task;"},{"lineNumber":66,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":67,"author":{"gitId":"cheeerynne"},"content":"            String taskType \u003d splitString[0];"},{"lineNumber":68,"author":{"gitId":"cheeerynne"},"content":"            String taskDone \u003d splitString[1];"},{"lineNumber":69,"author":{"gitId":"cheeerynne"},"content":"            String taskDescription \u003d splitString[2] + \" \";"},{"lineNumber":70,"author":{"gitId":"cheeerynne"},"content":"            LocalDateTime taskDate;"},{"lineNumber":71,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":72,"author":{"gitId":"cheeerynne"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");"},{"lineNumber":73,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":74,"author":{"gitId":"cheeerynne"},"content":"            switch (taskType) {"},{"lineNumber":75,"author":{"gitId":"cheeerynne"},"content":"            case \"T\":"},{"lineNumber":76,"author":{"gitId":"cheeerynne"},"content":"                task \u003d new ToDo(taskDescription);"},{"lineNumber":77,"author":{"gitId":"cheeerynne"},"content":"                break;"},{"lineNumber":78,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":79,"author":{"gitId":"cheeerynne"},"content":"            case \"D\":"},{"lineNumber":80,"author":{"gitId":"cheeerynne"},"content":"                taskDate \u003d LocalDateTime.parse(splitString[3], formatter);"},{"lineNumber":81,"author":{"gitId":"cheeerynne"},"content":"                task \u003d new Deadline(taskDescription, taskDate);"},{"lineNumber":82,"author":{"gitId":"cheeerynne"},"content":"                break;"},{"lineNumber":83,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":84,"author":{"gitId":"cheeerynne"},"content":"            case \"E\":"},{"lineNumber":85,"author":{"gitId":"cheeerynne"},"content":"                taskDate \u003d LocalDateTime.parse(splitString[3], formatter);"},{"lineNumber":86,"author":{"gitId":"cheeerynne"},"content":"                task \u003d new Event(taskDescription, taskDate);"},{"lineNumber":87,"author":{"gitId":"cheeerynne"},"content":"                break;"},{"lineNumber":88,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":89,"author":{"gitId":"cheeerynne"},"content":"            default:"},{"lineNumber":90,"author":{"gitId":"cheeerynne"},"content":"                throw new InvalidFileDataException();"},{"lineNumber":91,"author":{"gitId":"cheeerynne"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":93,"author":{"gitId":"cheeerynne"},"content":"            if (taskDone.equals(\"1\")) {"},{"lineNumber":94,"author":{"gitId":"cheeerynne"},"content":"                task.markAsDone();"},{"lineNumber":95,"author":{"gitId":"cheeerynne"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"cheeerynne"},"content":"            list.add(task);"},{"lineNumber":97,"author":{"gitId":"cheeerynne"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"cheeerynne"},"content":"        return list;"},{"lineNumber":99,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":101,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"cheeerynne"},"content":"     * Saves the tasks in the file whenever the task list changes."},{"lineNumber":103,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":104,"author":{"gitId":"cheeerynne"},"content":"     * @param list List of existing tasks."},{"lineNumber":105,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"cheeerynne"},"content":"    public void overWriteFile(List\u003cTask\u003e list) {"},{"lineNumber":107,"author":{"gitId":"cheeerynne"},"content":"        try {"},{"lineNumber":108,"author":{"gitId":"cheeerynne"},"content":"            FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":109,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":110,"author":{"gitId":"cheeerynne"},"content":"            for (Task task : list) {"},{"lineNumber":111,"author":{"gitId":"cheeerynne"},"content":"                boolean done \u003d task.isDone();"},{"lineNumber":112,"author":{"gitId":"cheeerynne"},"content":"                String doneString \u003d \"0\";"},{"lineNumber":113,"author":{"gitId":"cheeerynne"},"content":"                String taskDescription \u003d task.getDescription();"},{"lineNumber":114,"author":{"gitId":"cheeerynne"},"content":"                String taskDate;"},{"lineNumber":115,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":116,"author":{"gitId":"cheeerynne"},"content":"                if (done) {"},{"lineNumber":117,"author":{"gitId":"cheeerynne"},"content":"                    doneString \u003d \"1\";"},{"lineNumber":118,"author":{"gitId":"cheeerynne"},"content":"                }"},{"lineNumber":119,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":120,"author":{"gitId":"cheeerynne"},"content":"                if (task.getTaskType().equals(\"ToDo\")) {"},{"lineNumber":121,"author":{"gitId":"cheeerynne"},"content":"                    fw.write(\"T | \" + doneString"},{"lineNumber":122,"author":{"gitId":"cheeerynne"},"content":"                            + \" | \" + taskDescription + \"\\n\");"},{"lineNumber":123,"author":{"gitId":"cheeerynne"},"content":"                } else {"},{"lineNumber":124,"author":{"gitId":"cheeerynne"},"content":"                    taskDate \u003d task.getTaskDate();"},{"lineNumber":125,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":126,"author":{"gitId":"cheeerynne"},"content":"                    if (task.getTaskType().equals(\"Deadline\")) {"},{"lineNumber":127,"author":{"gitId":"cheeerynne"},"content":"                        fw.write(\"D | \" + doneString"},{"lineNumber":128,"author":{"gitId":"cheeerynne"},"content":"                                + \" | \" + taskDescription + \"| \" + taskDate + \"\\n\");"},{"lineNumber":129,"author":{"gitId":"cheeerynne"},"content":"                    } else {"},{"lineNumber":130,"author":{"gitId":"cheeerynne"},"content":"                        fw.write(\"E | \" + doneString"},{"lineNumber":131,"author":{"gitId":"cheeerynne"},"content":"                                + \" | \" + taskDescription + \"| \" + taskDate + \"\\n\");"},{"lineNumber":132,"author":{"gitId":"cheeerynne"},"content":"                    }"},{"lineNumber":133,"author":{"gitId":"cheeerynne"},"content":"                }"},{"lineNumber":134,"author":{"gitId":"cheeerynne"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"cheeerynne"},"content":"            fw.close();"},{"lineNumber":136,"author":{"gitId":"cheeerynne"},"content":"        } catch (IOException e) {"},{"lineNumber":137,"author":{"gitId":"cheeerynne"},"content":"            e.getMessage();"},{"lineNumber":138,"author":{"gitId":"cheeerynne"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":140}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"import duke.exceptions.InvalidDateException;"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"import duke.exceptions.InvalidInputException;"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"import duke.task.Deadline;"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"import duke.task.Event;"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"import duke.task.Task;"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"import duke.task.ToDo;"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eTaskList\u003c/code\u003e class contains the task list."},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":" * It has methods to carry out task actions - add, delete,"},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":" * mark as done, commanded by the user."},{"lineNumber":20,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":21,"author":{"gitId":"cheeerynne"},"content":"public class TaskList {"},{"lineNumber":22,"author":{"gitId":"cheeerynne"},"content":"    protected List\u003cTask\u003e list;"},{"lineNumber":23,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":24,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for TaskList class when there is no existing"},{"lineNumber":26,"author":{"gitId":"cheeerynne"},"content":"     * task list in the Duke application yet."},{"lineNumber":27,"author":{"gitId":"cheeerynne"},"content":"     * Initializes a new list to store tasks."},{"lineNumber":28,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"cheeerynne"},"content":"    public TaskList() {"},{"lineNumber":30,"author":{"gitId":"cheeerynne"},"content":"        this.list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":31,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":33,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for TaskList class when there is an existing list of tasks in the"},{"lineNumber":35,"author":{"gitId":"cheeerynne"},"content":"     * Duke application already."},{"lineNumber":36,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"cheeerynne"},"content":"     * @param list List of existing tasks."},{"lineNumber":38,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"cheeerynne"},"content":"    public TaskList(List\u003cTask\u003e list) {"},{"lineNumber":40,"author":{"gitId":"cheeerynne"},"content":"        this.list \u003d list;"},{"lineNumber":41,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":43,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"cheeerynne"},"content":"     * Adds a new task to the list of existing tasks."},{"lineNumber":45,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"cheeerynne"},"content":"     * @param userInput User input of the new task to be added."},{"lineNumber":47,"author":{"gitId":"cheeerynne"},"content":"     * @return New task added by the user."},{"lineNumber":48,"author":{"gitId":"cheeerynne"},"content":"     * @throws InvalidDateException If the date is in an invalid format."},{"lineNumber":49,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"cheeerynne"},"content":"    public Task addNewTask(String userInput)"},{"lineNumber":51,"author":{"gitId":"cheeerynne"},"content":"            throws InvalidDateException {"},{"lineNumber":52,"author":{"gitId":"cheeerynne"},"content":"        Task newTask;"},{"lineNumber":53,"author":{"gitId":"cheeerynne"},"content":"        String taskName;"},{"lineNumber":54,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":55,"author":{"gitId":"cheeerynne"},"content":"        try {"},{"lineNumber":56,"author":{"gitId":"cheeerynne"},"content":"            if (userInput.startsWith(\"todo\")) {"},{"lineNumber":57,"author":{"gitId":"cheeerynne"},"content":"                taskName \u003d userInput.substring(5);"},{"lineNumber":58,"author":{"gitId":"cheeerynne"},"content":"                newTask \u003d new ToDo(taskName);"},{"lineNumber":59,"author":{"gitId":"cheeerynne"},"content":"            } else {"},{"lineNumber":60,"author":{"gitId":"cheeerynne"},"content":"                int index \u003d userInput.indexOf(\u0027/\u0027);"},{"lineNumber":61,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":62,"author":{"gitId":"cheeerynne"},"content":"                String dateString \u003d userInput.substring(index + 4);"},{"lineNumber":63,"author":{"gitId":"cheeerynne"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":64,"author":{"gitId":"cheeerynne"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(dateString, formatter);"},{"lineNumber":65,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":66,"author":{"gitId":"cheeerynne"},"content":"                if (userInput.startsWith(\"deadline\")) {"},{"lineNumber":67,"author":{"gitId":"cheeerynne"},"content":"                    newTask \u003d new Deadline(userInput.substring(9, index), dateTime);"},{"lineNumber":68,"author":{"gitId":"cheeerynne"},"content":"                } else {"},{"lineNumber":69,"author":{"gitId":"cheeerynne"},"content":"                    assert userInput.startsWith(\"event\");"},{"lineNumber":70,"author":{"gitId":"cheeerynne"},"content":"                    newTask \u003d new Event(userInput.substring(6, index), dateTime);"},{"lineNumber":71,"author":{"gitId":"cheeerynne"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"cheeerynne"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"cheeerynne"},"content":"            list.add(newTask);"},{"lineNumber":74,"author":{"gitId":"cheeerynne"},"content":"            return newTask;"},{"lineNumber":75,"author":{"gitId":"cheeerynne"},"content":"        } catch (DateTimeException ex) {"},{"lineNumber":76,"author":{"gitId":"cheeerynne"},"content":"            throw new InvalidDateException();"},{"lineNumber":77,"author":{"gitId":"cheeerynne"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":80,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"cheeerynne"},"content":"     * Marks an existing task in the list as done."},{"lineNumber":82,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"cheeerynne"},"content":"     * @param userInput User input of the task to be marked as done."},{"lineNumber":84,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"cheeerynne"},"content":"    public void markAsDone(String userInput) {"},{"lineNumber":86,"author":{"gitId":"cheeerynne"},"content":"        int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;"},{"lineNumber":87,"author":{"gitId":"cheeerynne"},"content":"        list.get(taskNumber).markAsDone();"},{"lineNumber":88,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":90,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"cheeerynne"},"content":"     * Deletes an existing task in the list."},{"lineNumber":92,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"cheeerynne"},"content":"     * @param userInput User input of the task to be deleted."},{"lineNumber":94,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"cheeerynne"},"content":"    public void deleteTask(String userInput) {"},{"lineNumber":96,"author":{"gitId":"cheeerynne"},"content":"        int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;"},{"lineNumber":97,"author":{"gitId":"cheeerynne"},"content":"        list.remove(taskNumber);"},{"lineNumber":98,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":100,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"cheeerynne"},"content":"     * Finds a task by searching for a keyword."},{"lineNumber":102,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"cheeerynne"},"content":"     * @param userInput User input of the keyword to be found."},{"lineNumber":104,"author":{"gitId":"cheeerynne"},"content":"     * @return List of tasks that contains the keyword."},{"lineNumber":105,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"cheeerynne"},"content":"    public List\u003cTask\u003e findTask(String userInput) {"},{"lineNumber":107,"author":{"gitId":"cheeerynne"},"content":"        String keyword \u003d userInput.split(\" \")[1];"},{"lineNumber":108,"author":{"gitId":"cheeerynne"},"content":"        List\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":109,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":110,"author":{"gitId":"cheeerynne"},"content":"        for (Task task : list) {"},{"lineNumber":111,"author":{"gitId":"cheeerynne"},"content":"            String taskString \u003d task.toString();"},{"lineNumber":112,"author":{"gitId":"cheeerynne"},"content":"            String[] taskStringArr \u003d taskString.split(\" \");"},{"lineNumber":113,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":114,"author":{"gitId":"cheeerynne"},"content":"            for (String currentWord : taskStringArr) {"},{"lineNumber":115,"author":{"gitId":"cheeerynne"},"content":"                if (currentWord.equals(keyword)) {"},{"lineNumber":116,"author":{"gitId":"cheeerynne"},"content":"                    tempList.add(task);"},{"lineNumber":117,"author":{"gitId":"cheeerynne"},"content":"                    break;"},{"lineNumber":118,"author":{"gitId":"cheeerynne"},"content":"                }"},{"lineNumber":119,"author":{"gitId":"cheeerynne"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"cheeerynne"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":122,"author":{"gitId":"cheeerynne"},"content":"        return tempList;"},{"lineNumber":123,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":125,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"cheeerynne"},"content":"     * Updates an existing task in the list."},{"lineNumber":127,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":128,"author":{"gitId":"cheeerynne"},"content":"     * @param taskNumber Number of the task to be updated."},{"lineNumber":129,"author":{"gitId":"cheeerynne"},"content":"     * @param detailToUpdate Detail of the task to be updated."},{"lineNumber":130,"author":{"gitId":"cheeerynne"},"content":"     * @param newDetail New detail to update to."},{"lineNumber":131,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"cheeerynne"},"content":"    public void updateTask(int taskNumber, String detailToUpdate, String newDetail)"},{"lineNumber":133,"author":{"gitId":"cheeerynne"},"content":"            throws InvalidInputException {"},{"lineNumber":134,"author":{"gitId":"cheeerynne"},"content":"        Task task \u003d list.get(taskNumber);"},{"lineNumber":135,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":136,"author":{"gitId":"cheeerynne"},"content":"        switch(detailToUpdate) {"},{"lineNumber":137,"author":{"gitId":"cheeerynne"},"content":"        case \"done\":"},{"lineNumber":138,"author":{"gitId":"cheeerynne"},"content":"            if (task.isDone()) {"},{"lineNumber":139,"author":{"gitId":"cheeerynne"},"content":"                task.markAsUndone();"},{"lineNumber":140,"author":{"gitId":"cheeerynne"},"content":"            } else {"},{"lineNumber":141,"author":{"gitId":"cheeerynne"},"content":"                task.markAsDone();"},{"lineNumber":142,"author":{"gitId":"cheeerynne"},"content":"            }"},{"lineNumber":143,"author":{"gitId":"cheeerynne"},"content":"            break;"},{"lineNumber":144,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":145,"author":{"gitId":"cheeerynne"},"content":"        case \"description\":"},{"lineNumber":146,"author":{"gitId":"cheeerynne"},"content":"            task.setDescription(newDetail);"},{"lineNumber":147,"author":{"gitId":"cheeerynne"},"content":"            break;"},{"lineNumber":148,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":149,"author":{"gitId":"cheeerynne"},"content":"        case \"date/time\":"},{"lineNumber":150,"author":{"gitId":"cheeerynne"},"content":"            task.setDateTime(newDetail);"},{"lineNumber":151,"author":{"gitId":"cheeerynne"},"content":"            break;"},{"lineNumber":152,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":153,"author":{"gitId":"cheeerynne"},"content":"        default:"},{"lineNumber":154,"author":{"gitId":"cheeerynne"},"content":"            throw new InvalidInputException();"},{"lineNumber":155,"author":{"gitId":"cheeerynne"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":157}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eUi\u003c/code\u003e class handles the interactions with the user."},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"public class Ui {"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for Ui class."},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"    public Ui() {"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"     * Generates a welcome message when the Duke application starts up."},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"cheeerynne"},"content":"     * @return Welcome message."},{"lineNumber":21,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"cheeerynne"},"content":"    public String welcome() {"},{"lineNumber":23,"author":{"gitId":"cheeerynne"},"content":"        return \"Hey there! I\u0027m Eeyore, your best friend!\\n\""},{"lineNumber":24,"author":{"gitId":"cheeerynne"},"content":"                + \"How may I help you?\";"},{"lineNumber":25,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":27,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"cheeerynne"},"content":"     * Generates a goodbye message when the"},{"lineNumber":29,"author":{"gitId":"cheeerynne"},"content":"     * user terminates the Duke application."},{"lineNumber":30,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"cheeerynne"},"content":"     * @return Goodbye message."},{"lineNumber":32,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"cheeerynne"},"content":"    public String exit() {"},{"lineNumber":34,"author":{"gitId":"cheeerynne"},"content":"        return \"Bye, this was Eeyore serving you!\\n\""},{"lineNumber":35,"author":{"gitId":"cheeerynne"},"content":"                + \"Hope to see you again, take care! \";"},{"lineNumber":36,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":38,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"cheeerynne"},"content":"     * Generates the list of existing tasks when user input \"list\" command."},{"lineNumber":40,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"cheeerynne"},"content":"     * @param list List of existing tasks."},{"lineNumber":42,"author":{"gitId":"cheeerynne"},"content":"     * @return String message of the list of existing tasks."},{"lineNumber":43,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"cheeerynne"},"content":"    public String printTaskList(List\u003cTask\u003e list) {"},{"lineNumber":45,"author":{"gitId":"cheeerynne"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":46,"author":{"gitId":"cheeerynne"},"content":"            return \"There is currently no task in your list.\";"},{"lineNumber":47,"author":{"gitId":"cheeerynne"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"cheeerynne"},"content":"            assert list.size() \u003e 0 : \"List size must be greater than 0\";"},{"lineNumber":49,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":50,"author":{"gitId":"cheeerynne"},"content":"            String firstReply \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":51,"author":{"gitId":"cheeerynne"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":52,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":53,"author":{"gitId":"cheeerynne"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":54,"author":{"gitId":"cheeerynne"},"content":"                int number \u003d 1 + i;"},{"lineNumber":55,"author":{"gitId":"cheeerynne"},"content":"                stringBuilder.append(\"     \" + number + \". \" + list.get(i) + \"\\n\");"},{"lineNumber":56,"author":{"gitId":"cheeerynne"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"cheeerynne"},"content":"            stringBuilder.insert(0, firstReply);"},{"lineNumber":58,"author":{"gitId":"cheeerynne"},"content":"            return stringBuilder.toString();"},{"lineNumber":59,"author":{"gitId":"cheeerynne"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":62,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"cheeerynne"},"content":"     * Prints a validation message when user adds a new Task to the list."},{"lineNumber":64,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"cheeerynne"},"content":"     * @param newTask New Task added by the user."},{"lineNumber":66,"author":{"gitId":"cheeerynne"},"content":"     * @param list    List of existing tasks."},{"lineNumber":67,"author":{"gitId":"cheeerynne"},"content":"     * @return String message of the task added to the list."},{"lineNumber":68,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"cheeerynne"},"content":"    public String printAddTask(Task newTask, List\u003cTask\u003e list) {"},{"lineNumber":70,"author":{"gitId":"cheeerynne"},"content":"        return \"Yes sir! I\u0027ve added this task:\\n\""},{"lineNumber":71,"author":{"gitId":"cheeerynne"},"content":"                + \"            \" + newTask + \"\\n\""},{"lineNumber":72,"author":{"gitId":"cheeerynne"},"content":"                + \"Now you have \" + list.size() + \" tasks in the list.\";"},{"lineNumber":73,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":75,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"cheeerynne"},"content":"     * Prints a validation message when user marks a Task as done."},{"lineNumber":77,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"cheeerynne"},"content":"     * @param taskNumber Number of the task that the user marked as done."},{"lineNumber":79,"author":{"gitId":"cheeerynne"},"content":"     * @param list       List of existing tasks."},{"lineNumber":80,"author":{"gitId":"cheeerynne"},"content":"     * @return String message of the task marked as done."},{"lineNumber":81,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"cheeerynne"},"content":"    public String printDoneTask(int taskNumber, List\u003cTask\u003e list) {"},{"lineNumber":83,"author":{"gitId":"cheeerynne"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":84,"author":{"gitId":"cheeerynne"},"content":"                + \"        \" + list.get(taskNumber);"},{"lineNumber":85,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":87,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"cheeerynne"},"content":"     * Prints a validation message when user deletes a task from the list."},{"lineNumber":89,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"cheeerynne"},"content":"     * @param taskNumber Number of the task that the user wants to delete."},{"lineNumber":91,"author":{"gitId":"cheeerynne"},"content":"     * @param list List of existing tasks."},{"lineNumber":92,"author":{"gitId":"cheeerynne"},"content":"     * @return String message of the deleted task."},{"lineNumber":93,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"cheeerynne"},"content":"    public String printDeleteTask(int taskNumber, List\u003cTask\u003e list) {"},{"lineNumber":95,"author":{"gitId":"cheeerynne"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":96,"author":{"gitId":"cheeerynne"},"content":"                + \"        \" + list.get(taskNumber)"},{"lineNumber":97,"author":{"gitId":"cheeerynne"},"content":"                + \"\\nNow you have \" + (list.size() - 1) + \" tasks in the list.\";"},{"lineNumber":98,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":100,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"cheeerynne"},"content":"     * Prints a validation message when user finds a task by searching for a keyword."},{"lineNumber":102,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"cheeerynne"},"content":"     * @param tempList List of tasks containing the keyword."},{"lineNumber":104,"author":{"gitId":"cheeerynne"},"content":"     * @return String message of the tasks containing the keyword."},{"lineNumber":105,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"cheeerynne"},"content":"    public String printFindKeyword(List\u003cTask\u003e tempList) {"},{"lineNumber":107,"author":{"gitId":"cheeerynne"},"content":"        String firstReply \u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":108,"author":{"gitId":"cheeerynne"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":109,"author":{"gitId":"cheeerynne"},"content":"        stringBuilder.append(firstReply);"},{"lineNumber":110,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":111,"author":{"gitId":"cheeerynne"},"content":"        if (tempList.size() \u003d\u003d 0) {"},{"lineNumber":112,"author":{"gitId":"cheeerynne"},"content":"            return \"There are no matching tasks in your list!!\";"},{"lineNumber":113,"author":{"gitId":"cheeerynne"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":115,"author":{"gitId":"cheeerynne"},"content":"        for (int i \u003d 0; i \u003c tempList.size(); i++) {"},{"lineNumber":116,"author":{"gitId":"cheeerynne"},"content":"            int number \u003d i + 1;"},{"lineNumber":117,"author":{"gitId":"cheeerynne"},"content":"            stringBuilder.append(\"     \" + number + \". \" + tempList.get(i) + \"\\n\");"},{"lineNumber":118,"author":{"gitId":"cheeerynne"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"cheeerynne"},"content":"        return stringBuilder.toString();"},{"lineNumber":120,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":122,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"cheeerynne"},"content":"     * Prints a validation message when user updates a task."},{"lineNumber":124,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"cheeerynne"},"content":"     * @param list List of existing tasks."},{"lineNumber":126,"author":{"gitId":"cheeerynne"},"content":"     * @param taskNumber Number of the task to be updated."},{"lineNumber":127,"author":{"gitId":"cheeerynne"},"content":"     * @return String message of the updated task."},{"lineNumber":128,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"cheeerynne"},"content":"    public String printUpdatePrompt(List\u003cTask\u003e list, int taskNumber) {"},{"lineNumber":130,"author":{"gitId":"cheeerynne"},"content":"        return \"Noted. I\u0027ve updated the following task to:\\n\""},{"lineNumber":131,"author":{"gitId":"cheeerynne"},"content":"                + list.get(taskNumber);"},{"lineNumber":132,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":133}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eDukeException\u003c/code\u003e class handles incorrect inputs entered by the user."},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for DukeException class."},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"     * @param message Error message."},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"    public DukeException(String message) {"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"        super (message);"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":16}},{"path":"src/main/java/duke/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eEmptyDescriptionException\u003c/code\u003e handles incorrect user"},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":" * inputs which has no description for the task entered."},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":"public class EmptyDescriptionException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for EmptyDescriptionException class."},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"     * @param task Specific type of task."},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"    public EmptyDescriptionException(String task) {"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"        super (\"☹ OOPS!!! The description for the following type of task cannot be empty. ☹\\n \""},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"                + \"Please try again!\\n\""},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":"                + \"      Task Type: \" + task);"},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":19}},{"path":"src/main/java/duke/exceptions/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eInvalidDateException\u003c/code\u003e handles incorrect user inputs with invalid date entered."},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"public class InvalidDateException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for InvalidDateException class."},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"    public InvalidDateException() {"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"        super (\"☹ OOPS!!! You have entered an invalid date/time. ☹\");"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":14}},{"path":"src/main/java/duke/exceptions/InvalidFileDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eInvalidFileDataException\u003c/code\u003e handles the case where"},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":" * there is an invalid data in the file to be read."},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":"public class InvalidFileDataException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for InvalidFileDataException class."},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"    public InvalidFileDataException() {"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"        super (\"☹ OOPS!!! Error reading the file. ☹\");"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":15}},{"path":"src/main/java/duke/exceptions/InvalidFolderException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eInvalidFolderException\u003c/code\u003e handles the case where"},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":" * there is no folder for the task file to be created in."},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":"public class InvalidFolderException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for InvalidFolderException class."},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"    public InvalidFolderException() {"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"        super (\"☹ OOPS!!! Error creating the file. ☹\");"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":15}},{"path":"src/main/java/duke/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eInvalidInputException\u003c/code\u003e handles invalid user inputs."},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"public class InvalidInputException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for InvalidInputException."},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"    public InvalidInputException() {"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"        super (\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means. ☹\");"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":14}},{"path":"src/main/java/duke/exceptions/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eInvalidTaskNumberException\u003c/code\u003e handles incorrect user inputs invalid task number entered."},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"public class InvalidTaskNumberException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for InvalidTaskNumberException class."},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"    public InvalidTaskNumberException() {"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"        super (\"☹ OOPS!!! You have entered an invalid task number. ☹\");"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":14}},{"path":"src/main/java/duke/exceptions/MissingTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eMissingTaskNumberException\u003c/code\u003e handles incorrect user inputs with missing task number."},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"public class MissingTaskNumberException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for MissingTaskNumberException."},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"    public MissingTaskNumberException() {"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"        super (\"Error!! Please enter a task number and try again! ☹\");"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":14}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eDeadline\u003c/code\u003e class represents any deadline task with a description and date."},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"    private LocalDateTime date;"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for \u003ccode\u003eDeadline\u003c/code\u003e class."},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"     * @param description Description of the deadline task."},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"     * @param date Date of the deadline task."},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"    public Deadline(String description, LocalDateTime date) {"},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":"        super (description);"},{"lineNumber":20,"author":{"gitId":"cheeerynne"},"content":"        this.date \u003d date;"},{"lineNumber":21,"author":{"gitId":"cheeerynne"},"content":"        this.taskType \u003d \"Deadline\";"},{"lineNumber":22,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":24,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"cheeerynne"},"content":"     * Generates the date of the deadline task."},{"lineNumber":26,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"cheeerynne"},"content":"     * @return Date of the task in String format."},{"lineNumber":28,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"cheeerynne"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"cheeerynne"},"content":"    public String getTaskDate() {"},{"lineNumber":31,"author":{"gitId":"cheeerynne"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");"},{"lineNumber":32,"author":{"gitId":"cheeerynne"},"content":"        return this.date.format(formatter);"},{"lineNumber":33,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":35,"author":{"gitId":"cheeerynne"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"cheeerynne"},"content":"    public void setDateTime(String newDateTime) {"},{"lineNumber":37,"author":{"gitId":"cheeerynne"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":38,"author":{"gitId":"cheeerynne"},"content":"        this.date \u003d LocalDateTime.parse(newDateTime, formatter);"},{"lineNumber":39,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":41,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"cheeerynne"},"content":"     * Generates details of a deadline task - description, date."},{"lineNumber":43,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"cheeerynne"},"content":"     * @return String output for a deadline task."},{"lineNumber":45,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"cheeerynne"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"cheeerynne"},"content":"    public String toString() {"},{"lineNumber":48,"author":{"gitId":"cheeerynne"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + getTaskDate() + \")\";"},{"lineNumber":49,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":50}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eEvent\u003c/code\u003e class represents any event task with a description and date."},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"    private LocalDateTime date;"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for \u003ccode\u003eEvent\u003c/code\u003e class"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"     * @param description Description of the event task."},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"     * @param date Date of the event task."},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"    public Event(String description, LocalDateTime date) {"},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":"        super (description);"},{"lineNumber":20,"author":{"gitId":"cheeerynne"},"content":"        this.date \u003d date;"},{"lineNumber":21,"author":{"gitId":"cheeerynne"},"content":"        this.taskType \u003d \"Event\";"},{"lineNumber":22,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":24,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"cheeerynne"},"content":"     * Generates the date of the event task."},{"lineNumber":26,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"cheeerynne"},"content":"     * @return Date of the task in String format."},{"lineNumber":28,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"cheeerynne"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"cheeerynne"},"content":"    public String getTaskDate() {"},{"lineNumber":31,"author":{"gitId":"cheeerynne"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");"},{"lineNumber":32,"author":{"gitId":"cheeerynne"},"content":"        return this.date.format(formatter);"},{"lineNumber":33,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":35,"author":{"gitId":"cheeerynne"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"cheeerynne"},"content":"    public void setDateTime(String newDateTime) {"},{"lineNumber":37,"author":{"gitId":"cheeerynne"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":38,"author":{"gitId":"cheeerynne"},"content":"        this.date \u003d LocalDateTime.parse(newDateTime, formatter);"},{"lineNumber":39,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":41,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"cheeerynne"},"content":"     * Generates details of an event task - description, date."},{"lineNumber":43,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"cheeerynne"},"content":"     * @return String output for a event task."},{"lineNumber":45,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"cheeerynne"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"cheeerynne"},"content":"    public String toString() {"},{"lineNumber":48,"author":{"gitId":"cheeerynne"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + getTaskDate() + \")\";"},{"lineNumber":49,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eTask\u003c/code\u003e class represents any task with a description - deadline, event, todo."},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"    protected String taskType;"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for \u003ccode\u003eTask\u003c/code\u003e class."},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"     * @param description Description of the task."},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"    public Task(String description) {"},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":"        this.taskType \u003d \"\";"},{"lineNumber":20,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":22,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"cheeerynne"},"content":"     * Generates the appropriate symbol according to whether the task is marked as done."},{"lineNumber":24,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"cheeerynne"},"content":"     * @return String format of the symbol."},{"lineNumber":26,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"cheeerynne"},"content":"    public String getStatusIcon() {"},{"lineNumber":28,"author":{"gitId":"cheeerynne"},"content":"        return (isDone ? \"\\u2718\" : \" \");"},{"lineNumber":29,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":31,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"cheeerynne"},"content":"     * Indicates the task as done."},{"lineNumber":33,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"cheeerynne"},"content":"    public void markAsDone() {"},{"lineNumber":35,"author":{"gitId":"cheeerynne"},"content":"        this.isDone \u003d true;"},{"lineNumber":36,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":38,"author":{"gitId":"cheeerynne"},"content":"    public void markAsUndone() {"},{"lineNumber":39,"author":{"gitId":"cheeerynne"},"content":"        this.isDone \u003d false;"},{"lineNumber":40,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":42,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"cheeerynne"},"content":"     * Checks if the task is marked as done."},{"lineNumber":44,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"cheeerynne"},"content":"     * @return True if the task is done otherwise false."},{"lineNumber":46,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"cheeerynne"},"content":"    public boolean isDone() {"},{"lineNumber":48,"author":{"gitId":"cheeerynne"},"content":"        return this.isDone;"},{"lineNumber":49,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":51,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"cheeerynne"},"content":"     * Generates the date of the task."},{"lineNumber":53,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"cheeerynne"},"content":"     * @return Date of the task in String format."},{"lineNumber":55,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"cheeerynne"},"content":"    public String getTaskDate() {"},{"lineNumber":57,"author":{"gitId":"cheeerynne"},"content":"        return \"\";"},{"lineNumber":58,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":60,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"cheeerynne"},"content":"     * Generates the description of the task."},{"lineNumber":62,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"cheeerynne"},"content":"     * @return Description of the task."},{"lineNumber":64,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"cheeerynne"},"content":"    public String getDescription() {"},{"lineNumber":66,"author":{"gitId":"cheeerynne"},"content":"        return this.description;"},{"lineNumber":67,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":69,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"cheeerynne"},"content":"     * Generates the specific type of the task - deadline, event, todo."},{"lineNumber":71,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"cheeerynne"},"content":"     * @return Specific type of task."},{"lineNumber":73,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"cheeerynne"},"content":"    public String getTaskType() {"},{"lineNumber":75,"author":{"gitId":"cheeerynne"},"content":"        return this.taskType;"},{"lineNumber":76,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":78,"author":{"gitId":"cheeerynne"},"content":"    public void setDescription(String newDescription) {"},{"lineNumber":79,"author":{"gitId":"cheeerynne"},"content":"        this.description \u003d newDescription;"},{"lineNumber":80,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":82,"author":{"gitId":"cheeerynne"},"content":"    public void setDateTime(String newDateTime) {}"},{"lineNumber":83,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":84,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"cheeerynne"},"content":"     * Generates details of a task - description, done."},{"lineNumber":86,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"cheeerynne"},"content":"     * @return String output for a task."},{"lineNumber":88,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"cheeerynne"},"content":"    @Override"},{"lineNumber":90,"author":{"gitId":"cheeerynne"},"content":"    public String toString() {"},{"lineNumber":91,"author":{"gitId":"cheeerynne"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;"},{"lineNumber":92,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":93}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":" * \u003ccode\u003eToDo\u003c/code\u003e class represents any todo task with a description."},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"     * Constructor for \u003ccode\u003eToDo\u003c/code\u003e class"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"     * @param description Description of the todo task."},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"    public ToDo(String description) {"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"        super (description);"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"        this.taskType \u003d \"ToDo\";"},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":"     * Generates details of a todo task - description."},{"lineNumber":20,"author":{"gitId":"cheeerynne"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"cheeerynne"},"content":"     * @return String output for a todo task."},{"lineNumber":22,"author":{"gitId":"cheeerynne"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"cheeerynne"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"cheeerynne"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"cheeerynne"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":26,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":27}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"            \u003cfont\u003e"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"                \u003cFont name\u003d\"Georgia\" size\u003d\"13.0\"/\u003e"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"            \u003c/font\u003e"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"            \u003cpadding\u003e"},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":"            \u003c/padding\u003e"},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"        \u003c/Label\u003e"},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"110.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":20,"author":{"gitId":"cheeerynne"},"content":"    \u003c/children\u003e"},{"lineNumber":21,"author":{"gitId":"cheeerynne"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"cheeerynne":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\""},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"               prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\""},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":"            onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\""},{"lineNumber":19,"author":{"gitId":"cheeerynne"},"content":"                prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":20,"author":{"gitId":"cheeerynne"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"  alignment\u003d\"TOP_CENTER\" \u003e"},{"lineNumber":21,"author":{"gitId":"cheeerynne"},"content":"            \u003cLabel fx:id\u003d\"header\" text\u003d\"Eeyore Helper\" style\u003d\"-fx-background-color: #A8E0FF; -fx-padding: 8,5,5,5; -fx-font-weight: bold\"\u003e"},{"lineNumber":22,"author":{"gitId":"cheeerynne"},"content":"                \u003cfont\u003e"},{"lineNumber":23,"author":{"gitId":"cheeerynne"},"content":"                    \u003cFont name\u003d\"Georgia\" size\u003d\"18.0\"/\u003e"},{"lineNumber":24,"author":{"gitId":"cheeerynne"},"content":"                \u003c/font\u003e"},{"lineNumber":25,"author":{"gitId":"cheeerynne"},"content":"            \u003c/Label\u003e"},{"lineNumber":26,"author":{"gitId":"cheeerynne"},"content":"        \u003c/VBox\u003e"},{"lineNumber":27,"author":{"gitId":"cheeerynne"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":28,"author":{"gitId":"cheeerynne"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"cheeerynne":28}},{"path":"src/test/java/duke/task/DeadLineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"public class DeadLineTest {"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"    public void getDateTest() {"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2021-04-16 1800\", df);"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"        Deadline deadline \u003d new Deadline(\"clean room\", dateTime);"},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"        assertEquals(\"Apr 16 2021 18:00\", deadline.getTaskDate());"},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":18}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"public class EventTest {"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"    public void getDateTest() {"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":14,"author":{"gitId":"cheeerynne"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2021-03-20 1800\", df);"},{"lineNumber":15,"author":{"gitId":"cheeerynne"},"content":"        Deadline deadline \u003d new Deadline(\"birthday party\", dateTime);"},{"lineNumber":16,"author":{"gitId":"cheeerynne"},"content":"        assertEquals(\"Mar 20 2021 18:00\", deadline.getTaskDate());"},{"lineNumber":17,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":18}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":""},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":"public class TaskTest {"},{"lineNumber":8,"author":{"gitId":"cheeerynne"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"cheeerynne"},"content":"    public void getDescriptionTest() {"},{"lineNumber":10,"author":{"gitId":"cheeerynne"},"content":"        Task task \u003d new Task(\"watch youtube\");"},{"lineNumber":11,"author":{"gitId":"cheeerynne"},"content":"        assertEquals(\"watch youtube\", task.getDescription());"},{"lineNumber":12,"author":{"gitId":"cheeerynne"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"cheeerynne"},"content":"}"}],"authorContributionMap":{"cheeerynne":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheeerynne"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"cheeerynne"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"cheeerynne"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"cheeerynne"},"content":"list"},{"lineNumber":5,"author":{"gitId":"cheeerynne"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"cheeerynne"},"content":"list"},{"lineNumber":7,"author":{"gitId":"cheeerynne"},"content":"bye"}],"authorContributionMap":{"cheeerynne":7}}]
