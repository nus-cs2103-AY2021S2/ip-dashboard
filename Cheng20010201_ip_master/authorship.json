[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"# IP Project: Lihua"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"**Lihua** is a friendly **task management bot** residing in a **desktop application**."},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"The bot is optimized for use via a **Command Line Interface** (CLI) while still having the benefit of"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"a Graphical User Interface (GUI). If you can type fast, Lihua can get your daily task management job done"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"faster than traditional GUI apps."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"## Documentation"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"The User Guide of the project can be found [here](https://cheng20010201.github.io/ip)."},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"## Acknowledgement"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"### External Library:"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"- [json-simple-1.1.1.jar](https://code.google.com/archive/p/json-simple/)"}],"authorContributionMap":{"Cheng20010201":10,"-":3}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    implementation \u0027com.googlecode.json-simple:json-simple:1.1.1\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    String javaFxVersion \u003d \u002715.0.1\u0027"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"    mainClassName \u003d \"lihua.main.Launcher\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"    archiveBaseName \u003d \"Lihua\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"    toolVersion \u003d \u00278.39\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"    enableAssertions \u003d true"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Cheng20010201":20,"-":43}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"\u003c!-- https://se-education.org/addressbook-level3/UserGuide.html --\u003e"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"# User Guide for Lihua"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"**Lihua** is a friendly **task management bot** residing in a **desktop application**."},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"The bot is optimized for use via a **Command Line Interface** (CLI) while still having the benefit of"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"a Graphical User Interface (GUI). If you can type fast, Lihua can get your daily task management job done"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"faster than traditional GUI apps."},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"- [Quick start](#quick-start)"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"- [Features](#features)"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"  - [Viewing Help](#viewing-help): `help`"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"  - [Adding a task](#adding-a-task):"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    - [Adding a todo](#adding-a-todo): `todo`"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    - [Adding a deadline](#adding-a-deadline): `deadline`"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    - [Adding an event](#adding-an-event): `event`"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"  - [Listing tasks](#listing-tasks): `list`"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"  - [Finding tasks by key word](#finding-tasks-by-key-word): `find`"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"  - [Marking a task as done](#marking-a-task-as-done): `done`"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"  - [Deleting a task](#deleting-a-task): `delete`"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"  - [Exiting the program](#exiting-the-program): `bye`"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"  - [Saving the data](#saving-the-data)"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"  - [Editing the data file](#editing-the-data-file)"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"- [FAQ](#faq)"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"- [Command summary](#command-summary)"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    "},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"## Quick start"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"1. Ensure you have `Java 11` or above installed in your computer."},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"2. Download the latest `Lihua.jar` from [here](https://github.com/Cheng20010201/ip/releases/tag/A-Release)."},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"3. Copy the file you downloaded in step 2 to the folder you want to use as the *home folder* for Lihua. "},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"   E.g. `~/Desktop/Lihua/Lihua.jar`"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"4. Open the terminal window, make sure your present working directory is the *home folder* you created in step 3."},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"5. Run `java -jar Lihua.jar`. The GUI similar to the below should appear in a few seconds."},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"   "},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"![Ui-start](./images/Ui-start.png)"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"6. Type the command in the command box and press Enter to execute it. "},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"   e.g. typing `help` and pressing Enter will let Lihua list help information for all tasks."},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"   "},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"   Some example commands you can try:"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"   * `list`: Lists all tasks."},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"   * `todo Do CS2103T IP tasks.`: Adds a `todo` task named \"Do CS2103T IP tasks.\"."},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"   * `done 1`: Marks the first task in your list as done."},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"   * `delete 1`: Deletes the first task in your list."},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"   * `bye`: Exits the application."},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"7. Refer to the [Features](#features) below for details of each command."},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"Notes about the features:"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user."},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"  e.g. in `todo TASKNAME`, `TASKNAME` is a parameter which can be used as `todo Do homework`."},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"- Items in square brackets are optional."},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"  e.g. `list [-time]` can be used as `list` or as `list -time`."},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"- Command keywords do not distinguish lower case and upper case."},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"  e.g. `list` is equivalent to `LiSt`."},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"- Extraneous parameters for commands that do not take in parameters "},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"  (such as `help` and `exit`) will be ignored."},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"- Tasks will be stored based on their alphabetic order in the list, from the smallest to the largest. "},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"### Viewing Help"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"Shows a message giving detailed explanation of available commands."},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"Format: `help`."},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"### Adding a task"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"Adds a task to the Lihua\u0027s task list. "},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"More specifically, there are 3 types of tasks you can add, as specified below."},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"#### Adding a todo"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"Adds a `todo` task to Lihua. A `todo` task is a task with only a task name."},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"Format: `todo TASKNAME`."},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"Example: `todo Do homework`."},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"#### Adding a deadline"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"Adds a `deadline` task to Lihua. A `deadline` task is a task with a task name and a task deadline date."},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"Format: `deadline TASKNAME /by YYYY-MM-DD`."},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"Example: `deadline Submit IP /by 2021-02-19`."},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"Notes:"},{"lineNumber":83,"author":{"gitId":"Cheng20010201"},"content":"- The date format must be `YYYY-MM-DD`."},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"- The indicator ` /by ` cannot be omitted nor replaced."},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":"#### Adding an event"},{"lineNumber":87,"author":{"gitId":"Cheng20010201"},"content":"Adds an `event` task to Lihua. An `event` task is a task with a task name and a task commencement date."},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"Format: `event TASKNAME /at YYYY-MM-DD`."},{"lineNumber":90,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":91,"author":{"gitId":"Cheng20010201"},"content":"Example: `event Party for PGPR /at 2020-02-23`."},{"lineNumber":92,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":93,"author":{"gitId":"Cheng20010201"},"content":"Notes:"},{"lineNumber":94,"author":{"gitId":"Cheng20010201"},"content":"- The date format must be `YYYY-MM-DD`."},{"lineNumber":95,"author":{"gitId":"Cheng20010201"},"content":"- The indicator ` /at ` cannot be omitted nor replaced."},{"lineNumber":96,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":"### Listing tasks"},{"lineNumber":98,"author":{"gitId":"Cheng20010201"},"content":"Lists all tasks stored in Lihua."},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":100,"author":{"gitId":"Cheng20010201"},"content":"Format: `list [-time]`."},{"lineNumber":101,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":102,"author":{"gitId":"Cheng20010201"},"content":"Example:"},{"lineNumber":103,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":104,"author":{"gitId":"Cheng20010201"},"content":"![Ui-list](./images/Ui-list.png)"},{"lineNumber":105,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":106,"author":{"gitId":"Cheng20010201"},"content":"Notes:"},{"lineNumber":107,"author":{"gitId":"Cheng20010201"},"content":"- If `-time` is not applied, Lihua will list all current tasks in alphabetic order of task names."},{"lineNumber":108,"author":{"gitId":"Cheng20010201"},"content":"- If `-time` is applied, Lihua will list all current tasks with date information in chronological order."},{"lineNumber":109,"author":{"gitId":"Cheng20010201"},"content":"If two tasks are on the same date, then the relative ordering of the tasks will not change, "},{"lineNumber":110,"author":{"gitId":"Cheng20010201"},"content":"  which is specified in the whole task list."},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"Cheng20010201"},"content":"### Finding tasks by key word"},{"lineNumber":113,"author":{"gitId":"Cheng20010201"},"content":"Finds all tasks containing the key word specified."},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"Cheng20010201"},"content":"Format: `find KEYWORDS`."},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"Cheng20010201"},"content":"Example: `find abc`."},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"Cheng20010201"},"content":"![Ui-find](./images/Ui-find.png)"},{"lineNumber":120,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":121,"author":{"gitId":"Cheng20010201"},"content":"Notes:"},{"lineNumber":122,"author":{"gitId":"Cheng20010201"},"content":"- Only one keyword is allowed. Extra parameters will be ignored."},{"lineNumber":123,"author":{"gitId":"Cheng20010201"},"content":"e.g. `find abc a`, `a` will be ignored here."},{"lineNumber":124,"author":{"gitId":"Cheng20010201"},"content":"- The search is not case-sensitive."},{"lineNumber":125,"author":{"gitId":"Cheng20010201"},"content":"e.g. `find A` is equivalent to `find a`."},{"lineNumber":126,"author":{"gitId":"Cheng20010201"},"content":"- The key word only needs to be part of the task name. It does not need to be the whole task name."},{"lineNumber":127,"author":{"gitId":"Cheng20010201"},"content":"e.g. `find a` can return you a `todo` task named `abc`."},{"lineNumber":128,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":129,"author":{"gitId":"Cheng20010201"},"content":"### Marking a task as done"},{"lineNumber":130,"author":{"gitId":"Cheng20010201"},"content":"Marks a task as done."},{"lineNumber":131,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":132,"author":{"gitId":"Cheng20010201"},"content":"Format: `done TASKINDEX`."},{"lineNumber":133,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":134,"author":{"gitId":"Cheng20010201"},"content":"Example: `done 1`."},{"lineNumber":135,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":136,"author":{"gitId":"Cheng20010201"},"content":"Notes:"},{"lineNumber":137,"author":{"gitId":"Cheng20010201"},"content":"- The `TASKINDEX` refers to the index number shown in the displayed task list by calling `list`."},{"lineNumber":138,"author":{"gitId":"Cheng20010201"},"content":"- The `TASKINDEX` you can specify is **an integer from 1 to total number tasks, inclusive**. "},{"lineNumber":139,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":140,"author":{"gitId":"Cheng20010201"},"content":"### Deleting a task"},{"lineNumber":141,"author":{"gitId":"Cheng20010201"},"content":"Deletes a task."},{"lineNumber":142,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":143,"author":{"gitId":"Cheng20010201"},"content":"Format: `delete TASKINDEX`."},{"lineNumber":144,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":145,"author":{"gitId":"Cheng20010201"},"content":"Example: `delete 1`."},{"lineNumber":146,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":147,"author":{"gitId":"Cheng20010201"},"content":"Notes:"},{"lineNumber":148,"author":{"gitId":"Cheng20010201"},"content":"- The `TASKINDEX` refers to the index number shown in the displayed task list by calling `list`."},{"lineNumber":149,"author":{"gitId":"Cheng20010201"},"content":"- The `TASKINDEX` you can specify is **an integer from 1 to total number tasks, inclusive**."},{"lineNumber":150,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":151,"author":{"gitId":"Cheng20010201"},"content":"### Exiting the program"},{"lineNumber":152,"author":{"gitId":"Cheng20010201"},"content":"Exits the application."},{"lineNumber":153,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":154,"author":{"gitId":"Cheng20010201"},"content":"Format: `bye`."},{"lineNumber":155,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":156,"author":{"gitId":"Cheng20010201"},"content":"### Saving the data"},{"lineNumber":157,"author":{"gitId":"Cheng20010201"},"content":"Lihua\u0027s data is saved in the hard disk automatically after any command that changes the data. "},{"lineNumber":158,"author":{"gitId":"Cheng20010201"},"content":"There is no need to save manually."},{"lineNumber":159,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":160,"author":{"gitId":"Cheng20010201"},"content":"### Editing the data file"},{"lineNumber":161,"author":{"gitId":"Cheng20010201"},"content":"Lihua\u0027s data is saved as a JSON file `[JAR file location]/data/lihua.json`. "},{"lineNumber":162,"author":{"gitId":"Cheng20010201"},"content":"Advanced users are welcome to update data directly by editing that data file."},{"lineNumber":163,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":164,"author":{"gitId":"Cheng20010201"},"content":"## FAQ"},{"lineNumber":165,"author":{"gitId":"Cheng20010201"},"content":"**Q**: How do I transfer my data to another Computer?"},{"lineNumber":166,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":167,"author":{"gitId":"Cheng20010201"},"content":"**A**: Install the app in the other computer and overwrite the empty data file "},{"lineNumber":168,"author":{"gitId":"Cheng20010201"},"content":"it creates with the file that contains the data of your previous Lihua *home folder*."},{"lineNumber":169,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":170,"author":{"gitId":"Cheng20010201"},"content":"## Command Summary"},{"lineNumber":171,"author":{"gitId":"Cheng20010201"},"content":"| Command | Format | Example / Explanation |"},{"lineNumber":172,"author":{"gitId":"Cheng20010201"},"content":"| ------- | ------ | --------------------- |"},{"lineNumber":173,"author":{"gitId":"Cheng20010201"},"content":"| **bye** | `bye` | application exits |"},{"lineNumber":174,"author":{"gitId":"Cheng20010201"},"content":"| **deadline** | `deadline TASKNAME /by YYYY-MM-DD` | `deadline homework /by 2021-01-01` | "},{"lineNumber":175,"author":{"gitId":"Cheng20010201"},"content":"| **delete** | `delete TASKINDEX` | `delete 1` |"},{"lineNumber":176,"author":{"gitId":"Cheng20010201"},"content":"| **done** | `done TASKINDEX` | `done 1` |"},{"lineNumber":177,"author":{"gitId":"Cheng20010201"},"content":"| **event** | `event TASKNAME /at YYYY-MM-DD` | `event party /at 2020-01-01` |"},{"lineNumber":178,"author":{"gitId":"Cheng20010201"},"content":"| **find** | `find abc` | tasks containing `abc` will be listed |"},{"lineNumber":179,"author":{"gitId":"Cheng20010201"},"content":"| **help** | `help` | help message for commands will be printed |"},{"lineNumber":180,"author":{"gitId":"Cheng20010201"},"content":"| **list** | `list [-time]` | tasks \\[with date\\] will be listed |"},{"lineNumber":181,"author":{"gitId":"Cheng20010201"},"content":"| **todo** | `todo TASKNAME` | `todo Eat` |"}],"authorContributionMap":{"Cheng20010201":164,"-":17}},{"path":"src/main/java/lihua/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.feedback.CommandResult;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.Messages;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":" * Command class representing a command to add a task."},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":" * The task might be a todo, a deadline, or an event."},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"public class AddCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    /** Command help information for adding command */"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_USAGE \u003d"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"            \"todo/deadline/event: add a task of a specific type to the task list.\\n\""},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"                      + \"---- Example 1: todo [task name]\\n\""},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"                      + \"---- Example 2: deadline [task name] /by [yyyy-mm-dd]\\n\""},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"                      + \"---- Example 3: event [task name] /at [yyyy-mm-dd]\";"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    private final Task toAdd;"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a new AddCommand with a task."},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"     * @param toAdd The task to be added to the list."},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    public AddCommand(Task toAdd) {"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"        super();"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"        this.toAdd \u003d toAdd;"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the adding command. Add the task into list and give feedback to user."},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"     * @return A CommandResult Object containing feedback to user."},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult execute() {"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"            tasks.addTask(toAdd);"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"            assert tasks.getSize() \u003e\u003d 1;"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"            String noun \u003d tasks.getSize() \u003c\u003d 1 ? \"task\" : \"tasks\";"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"            String message \u003d String.format(\"Got it. I have added this task to your list:\\n---- %s\\n\""},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"                            + \"Now you have %d %s in total. Good luck.\", toAdd.toString(), tasks.getSize(), noun);"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(message);"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"        } catch (Exception e) {"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(Messages.MESSAGE_REPORTING_ADDING_FAILURE, true);"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":48}},{"path":"src/main/java/lihua/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.feedback.CommandResult;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Tasks;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" * Parent class for all commands. This class should be abstract since"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":" * it is meaningless to initialize instances of \u0027Command\u0027 only."},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    /** The tasks list to operate on */"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    protected Tasks tasks;"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    /** The target index of the task list, if applicable */"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    protected int targetIndex \u003d -1;"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a Command Object with a target index."},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"     * @param targetIndex The 1-based index of the task to be operated on."},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    public Command(int targetIndex) {"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"        this.targetIndex \u003d targetIndex;"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a default Command Object."},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    public Command() {"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"     * Set a task list to the command object."},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"     * @param tasks The tasks list to operate on later."},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"    public void setTaskList(Tasks tasks) {"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the command. To be implemented by children classes."},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"     * @return A CommandResult Object containing feedback to user."},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"    public abstract CommandResult execute();"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":46}},{"path":"src/main/java/lihua/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.feedback.CommandResult;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.Messages;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":" * Command class representing a command to delete a task."},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    /** Command help information for deleting command */"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_USAGE \u003d \"delete: Remove a specific task from the list.\\n\""},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"            + \"---- Example: delete [valid index number]\";"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a new DeleteCommand with a task index."},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     * @param targetIndex The 1-based index of the task to be deleted."},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    public DeleteCommand(int targetIndex) {"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"        super(targetIndex);"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the deleting command."},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     * Delete the task from the list and give feedback to user."},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"     * @return A CommandResult Object containing feedback to user."},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult execute() {"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"            Task deleted \u003d tasks.removeTask(targetIndex);"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"            assert tasks.getSize() \u003e\u003d 0;"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"            String noun \u003d tasks.getSize() \u003c\u003d 1 ? \"task\" : \"tasks\";"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"            String message \u003d String.format(\"Got it. I have removed this task from your list:\\n---- %s\\n\""},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"                            + \"Now you have %d %s in total. Good luck.\", deleted.toString(), tasks.getSize(), noun);"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(message);"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(Messages.MESSAGE_REPORTING_INVALID_INDEX, true);"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"        } catch (Exception e) {"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(Messages.MESSAGE_REPORTING_ADDING_FAILURE, true);"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":45}},{"path":"src/main/java/lihua/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.feedback.CommandResult;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.Messages;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":" * Command class representing a command to get a task done."},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"public class DoneCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    /** Command help information for done command */"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_USAGE \u003d \"done: Get a specific task done.\\n\""},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"            + \"---- Example: done [valid index number]\";"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    public DoneCommand(int targetIndex) {"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"        super(targetIndex);"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the done command."},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"     * Get the task done and give feedback to user."},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"     * @return A CommandResult Object containing feedback to user."},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult execute() {"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"            Task done \u003d tasks.getTaskDone(targetIndex);"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"            assert tasks.getSize() \u003e\u003d 0;"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"            String message \u003d String.format(\"Got it. I have mark this task as done:\\n---- %s\", done.toString());"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(message);"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(Messages.MESSAGE_REPORTING_INVALID_INDEX, true);"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"        } catch (Exception e) {"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(Messages.MESSAGE_REPORTING_ADDING_FAILURE, true);"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":38}},{"path":"src/main/java/lihua/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.feedback.CommandResult;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.Messages;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" * Command class representing a command to exit the application."},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"public class ExitCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"    /** Command help information for exit command */"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_USAGE \u003d \"bye: Exit the application. Data will be auto-saved.\\n\""},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"            + \"---- Example: bye\";"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a new ExitCommand."},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    public ExitCommand() {"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"        super();"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the exit command."},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"     * Exit the application and give feedback to user."},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     * @return A CommandResult Object containing feedback to user."},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult execute() {"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"        return new CommandResult(Messages.MESSAGE_INFORM_EXIT);"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"     * Checks whether a command is of type ExitCommand."},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"     * @param command The Command object to be checked."},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"     * @return True if the Command object is of type ExitCommand, false otherwise"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"    public static boolean isExit(Command command) {"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"        return command instanceof ExitCommand; // instanceof returns false if it is null"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":41}},{"path":"src/main/java/lihua/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.feedback.CommandResult;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":" * Command class representing a command to find tasks by keyword."},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"public class FindCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    /** Command help information for help command */"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_USAGE \u003d \"find: List down all the tasks containing the key word specified.\";"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    /** Keyword to find in tasks */"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    private final String keyWord;"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a new FindCommand with a keyword."},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"     * @param keyWord The keyword to find in tasks."},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    public FindCommand(String keyWord) {"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"        this.keyWord \u003d keyWord;"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the find command. Gathers the tasks containing the keyword."},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     * @return A CommandResult Object containing feedback to user."},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult execute() {"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"        String message \u003d tasks.listTasks(keyWord);"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"        return new CommandResult(message);"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":32}},{"path":"src/main/java/lihua/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.feedback.CommandResult;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.Messages;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" * Command class representing a command to get help."},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"public class HelpCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"    /** Command help information for help command */"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_USAGE \u003d \"help: Shows application usage instructions.\\n\""},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"            + \"---- Example: help\";"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    private boolean isAskingForHelp;"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a new HelpCommand with additional boolean parameter."},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"     * @param isAskingForHelp True if the user is really asking for help,"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"     *                        false if the user is confused with commands"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"     *                        and the application prompts the user to get help."},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    public HelpCommand(boolean isAskingForHelp) {"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"        super();"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"        this.isAskingForHelp \u003d isAskingForHelp;"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the help command. If the user is really asking for help then"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"     * give user the help instructions. If the user is confused with commands then"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"     * prompts the user to get help."},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"     * @return A CommandResult Object containing feedback to user."},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult execute() {"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"        String feedback \u003d isAskingForHelp"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"                ? Messages.MESSAGE_VIEW_COMMANDS"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"                : Messages.MESSAGE_GET_HELP;"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"        if (isAskingForHelp) {"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(feedback);"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"        return new CommandResult(feedback, true);"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":45}},{"path":"src/main/java/lihua/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.feedback.CommandResult;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.enums.ListTagCode;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":" * Command class representing a command to list tasks."},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"public class ListCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    /** Command help information for list command */"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_USAGE \u003d \"list: List down all the tasks. \""},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"            + \"List down all the tasks on a specific date, if additional date argument is given\\n\""},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"            + \"List down all time-related tasks in a chronological order, if additional tag -t is given.\\n\""},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"            + \"---- Example 1: list\\n\""},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"            + \"---- Example 2: list [yyyy-mm-dd]\\n\""},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"            + \"---- Example 3: list -time\";"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    /** Optional argument indicating the date of tasks to be listed */"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    private final LocalDate date;"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    private ListTagCode tagCode \u003d ListTagCode.NORMAL;"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a new ListCommand with a LocalDate."},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"     * @param date The date on which the tasks should be listed."},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    public ListCommand(LocalDate date) {"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"        super();"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"        this.date \u003d date;"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a default ListCommand, listing all existing tasks."},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"    public ListCommand() {"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"        super();"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"        date \u003d null;"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a ListCommand with a ListTagCode Enum Object."},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"     * @param code A listTagCode Enum object specifying the type of tag the command is receiving."},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"    public ListCommand(ListTagCode code) {"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"        date \u003d null;"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"        tagCode \u003d code;"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the list command."},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"     * List all the tasks or all the tasks on a specific date."},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"     * @return A CommandResult Object containing feedback to user."},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult execute() {"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"        String message \u003d tasks.listTasks(date, tagCode);"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"        assert message !\u003d null;"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"        assert !message.equals(\" \");"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"        return new CommandResult(message);"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":65}},{"path":"src/main/java/lihua/commands/feedback/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands.feedback;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":" * Command Result class representing the result and feedback after the command is executed."},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"public class CommandResult {"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"    /** The feedback to user */"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    private final String feedbackToUser;"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    private boolean isUserCommandError \u003d false;"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a CommandResult object with a feedback."},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"     * @param feedbackToUser The feedback to user."},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult(String feedbackToUser) {"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"        assert feedbackToUser !\u003d null;"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"        this.feedbackToUser \u003d feedbackToUser;"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a CommandResult object with a feedback."},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     * @param feedbackToUser The feedback to user."},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult(String feedbackToUser, boolean isUserCommandError) {"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"        assert feedbackToUser !\u003d null;"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"        this.feedbackToUser \u003d feedbackToUser;"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"        this.isUserCommandError \u003d isUserCommandError;"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"     * Retrieve the feedback for user."},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"     * @return The feedback for user."},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"    public String getFeedBack() {"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"        assert feedbackToUser !\u003d null;"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"        return feedbackToUser;"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"     * Check whether the instance is resulted from user\u0027s error in commands."},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"     * @return True if the instance is resulted from user\u0027s error in commands."},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"    public boolean isUserCommandError() {"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"        return isUserCommandError;"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":50}},{"path":"src/main/java/lihua/commons/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commons;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.AddCommand;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.DeleteCommand;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.DoneCommand;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.ExitCommand;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.FindCommand;"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.HelpCommand;"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.ListCommand;"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":" * Messages class containing static messages of lihua.entry.Lihua."},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"public class Messages {"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    /** Hello message */"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_HELLO \u003d"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"            \"Hello! My name is Lihua.\\n\""},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"                    + \"What can I do for you today? (\u003dV\u003d)\";"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    /** Help prompt message */"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_GET_HELP \u003d"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"            \"Sorry, I do not understand your command :\u0027)\\n\""},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"                    + \"If you are stuck, type \u0027help\u0027 to get a list of operations available.\";"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    /** Line divider */"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_LINE \u003d"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"            \"-------------------------------------------------\";"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    /** Exit message */"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_INFORM_EXIT \u003d"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"            \"Exiting Lihua as requested...\\n\""},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"                    + \"Goodbye! Hope to see you again soon! (\u003dV\u003d)\";"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    /** Adding task failure message */"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_REPORTING_ADDING_FAILURE \u003d"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"            \"Sorry, the task adding failed. :( Please check your storage devices.\";"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"    /** Help message */"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_VIEW_COMMANDS \u003d"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"            \"No worries! Here are the commands available:\\n\""},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"                    + AddCommand.MESSAGE_USAGE"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + DoneCommand.MESSAGE_USAGE"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + DeleteCommand.MESSAGE_USAGE"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + ListCommand.MESSAGE_USAGE"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + FindCommand.MESSAGE_USAGE"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + HelpCommand.MESSAGE_USAGE"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + ExitCommand.MESSAGE_USAGE;"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"    /** Invalid index report message */"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_REPORTING_INVALID_INDEX \u003d"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"            \"Sorry, the index you specified does not exist :\u0027), \""},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"                    + \"please type \u0027list\u0027 to see available indices to delete.\";"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":47}},{"path":"src/main/java/lihua/commons/comparators/TimeTaskComparatorChronological.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commons.comparators;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.TimeTask;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":" * Comparator for TimeTask. This comparator compares two TimeTasks in chronological order."},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"public class TimeTaskComparatorChronological implements java.util.Comparator\u003clihua.tasks.TimeTask\u003e {"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"     * compareTo method for two tasks with time information."},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"     * @param t1 The first TimeTask to compare."},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"     * @param t2 The second TimeTask to compare."},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"     * @return 1 if the first task is chronologically larger than second one, -1 otherwise. When there is a tie, compare"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"     * the two tasks based one their names\u0027 alphabetical order."},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    public int compare(TimeTask t1, TimeTask t2) {"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"        int dateComparison \u003d t1.getDate().compareTo(t2.getDate());"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"        if (dateComparison \u003d\u003d 0) {"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"            return t1.compareTo(t2);"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"        return dateComparison;"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":25}},{"path":"src/main/java/lihua/commons/enums/ListTagCode.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commons.enums;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":" * The Tag Code for List command"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"public enum ListTagCode {"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"    NORMAL, TIME_NORMAL"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":8}},{"path":"src/main/java/lihua/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.main;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"//@@author Cheng20010201"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with minor modifications."},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"public class Launcher {"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    public static void main(String[] args) {"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"}"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"//@@author"}],"authorContributionMap":{"Cheng20010201":15}},{"path":"src/main/java/lihua/main/Lihua.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.main;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.Command;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.ExitCommand;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.feedback.CommandResult;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import lihua.parser.Parser;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import lihua.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Tasks;"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":" * Main class for chat box Lihua"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"// Adapted from https://github.com/se-edu/addressbook-level2 with modifications specific to the customized bot."},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"public class Lihua {"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    private final Tasks tasks;"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    private final Storage storage;"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    private final Parser parser;"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"     * Constructor for Lihua. Initializing necessary fields."},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    public Lihua() {"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"        storage \u003d new Storage();"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"        tasks \u003d storage.load();"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"        parser \u003d new Parser();"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"     * Gets the response from the user."},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"     * @param userInput User\u0027s input string."},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"     * @return A string containing feedback for the user."},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"     * If user sends a terminating signal, the method returns null."},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult getResponse(String userInput) {"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"        Command command \u003d parser.parseUserInput(userInput);"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"        if (ExitCommand.isExit(command)) {"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"            System.exit(0);"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"        CommandResult result \u003d executeCommand(command);"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"        return result;"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the command argument. If successful then saves the current task list."},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"     * If there are unchecked exception then shows user the error message and throws an RuntimeException."},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"     * Throwing RuntimeException is because the user would not"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"     * be expected to handle the unchecked exception him/herself."},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"     * @param command The command to be executed."},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"     * @return The CommandResult of the command\u0027s execution."},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"    private CommandResult executeCommand(Command command) {"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"            command.setTaskList(tasks);"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"            CommandResult result \u003d command.execute();"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"            storage.saveTasks(tasks);"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"            return result;"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"        } catch (Exception e) {"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"            throw new RuntimeException(e);"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":62}},{"path":"src/main/java/lihua/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.main;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import lihua.ui.MainWindow;"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":" * A GUI for Lihua using FXML."},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"//@@author Cheng20010201"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with minor modifications."},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"public class Main extends Application {"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    private static final String GUI_RESOURCE_PATH \u003d \"/view/MainWindow.fxml\";"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    private Lihua lihua \u003d new Lihua();"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"     * Starts the application with a javafx.stage.Stage"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     * @param stage The UI stage on which the application launches."},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    public void start(Stage stage) {"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(GUI_RESOURCE_PATH));"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"            stage.setTitle(\"Lihua\");"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"            stage.setScene(scene);"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setLihua(lihua);"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"            stage.show();"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"}"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"//@@author"}],"authorContributionMap":{"Cheng20010201":41}},{"path":"src/main/java/lihua/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.parser;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.AddCommand;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.Command;"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.DeleteCommand;"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.DoneCommand;"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.ExitCommand;"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.FindCommand;"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.HelpCommand;"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.ListCommand;"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.enums.ListTagCode;"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Deadline;"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Event;"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.ToDo;"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"public class Parser {"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"     * Parses user input string and returns relevant command."},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     * @param userInput User input string."},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     * @return Relevant command, as specified in the userInput."},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    public Command parseUserInput(String userInput) {"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"        assert userInput !\u003d null;"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"        // Allow multiple white spaces between:"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"        // first argument, center argument(s), and last argument."},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"        String[] split \u003d userInput.split(\"\\\\s+\"); // Split by one or more white spaces."},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"        Command command;"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"            String firstArgument \u003d split[0].toLowerCase();"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"            command \u003d parseUserInput(userInput, firstArgument, split);"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"            command \u003d new HelpCommand(false);"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"        assert command !\u003d null;"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"        return command;"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"     * Parses user input string and returns relevant command."},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"     * @param userInput User input string."},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"     * @param firstArgument First argument in the user input string."},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"     * @param split User input string. Split by one or more white spaces."},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"     * @return Relevant command, as specified in the userInput."},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"     * @throws IndexOutOfBoundsException If the command is not in the correct format, then an exception will be thrown."},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"    private Command parseUserInput(String userInput, String firstArgument, String[] split)"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"            throws IndexOutOfBoundsException {"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"        assert firstArgument.toLowerCase().equals(firstArgument);"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"        switch (firstArgument) {"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"        case \"bye\":"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"            return new ExitCommand();"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"        case \"todo\":"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"            return new AddCommand(getToDo(userInput));"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"        case \"event\":"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"            return new AddCommand(getEvent(userInput));"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"        case \"deadline\":"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"            return new AddCommand(getDeadline(userInput));"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"        case \"done\":"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"            // exception could be thrown here, if first argument is not of integer format"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"            return new DoneCommand(Integer.valueOf(split[1]));"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"        case \"delete\":"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"            // same as above"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"            return new DeleteCommand(Integer.valueOf(split[1]));"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"        case \"list\":"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"            return getListCommand(userInput, split);"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"        case \"help\":"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"            return new HelpCommand(true);"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"        case \"find\":"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"            return new FindCommand(split[1]);"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"        default:"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"            return new HelpCommand(false);"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"    private Command getListCommand(String userInput, String[] split) {"},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":83,"author":{"gitId":"Cheng20010201"},"content":"            String[] tagSplit \u003d userInput.split(\"-\");"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"            String tag \u003d tagSplit[1].split(\"\\\\s+\")[0];"},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":"            if (tag.equals(\"time\")) {"},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":"                return new ListCommand(ListTagCode.TIME_NORMAL);"},{"lineNumber":87,"author":{"gitId":"Cheng20010201"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"            String dateString \u003d split[1];"},{"lineNumber":90,"author":{"gitId":"Cheng20010201"},"content":"            LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":91,"author":{"gitId":"Cheng20010201"},"content":"            return new ListCommand(date);"},{"lineNumber":92,"author":{"gitId":"Cheng20010201"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":93,"author":{"gitId":"Cheng20010201"},"content":"            return new ListCommand();"},{"lineNumber":94,"author":{"gitId":"Cheng20010201"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":95,"author":{"gitId":"Cheng20010201"},"content":"            return new HelpCommand(false);"},{"lineNumber":96,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"Cheng20010201"},"content":"     * Extracts a deadline object out of the user input string."},{"lineNumber":101,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"Cheng20010201"},"content":"     * @param userInput User input string."},{"lineNumber":103,"author":{"gitId":"Cheng20010201"},"content":"     * @return The deadline object, as specified by the user input string."},{"lineNumber":104,"author":{"gitId":"Cheng20010201"},"content":"     * @throws IndexOutOfBoundsException If the user input string starts with \u0027deadline\u0027 but the format is incorrect,"},{"lineNumber":105,"author":{"gitId":"Cheng20010201"},"content":"     * an exception will be thrown."},{"lineNumber":106,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"Cheng20010201"},"content":"    private Deadline getDeadline(String userInput) throws IndexOutOfBoundsException {"},{"lineNumber":108,"author":{"gitId":"Cheng20010201"},"content":"        assert userInput !\u003d null;"},{"lineNumber":109,"author":{"gitId":"Cheng20010201"},"content":"        String[] split \u003d userInput.split(\"\\\\s+/by\\\\s+\");"},{"lineNumber":110,"author":{"gitId":"Cheng20010201"},"content":"        String date \u003d split[1]; // Assume the argument is correct, or an Exception will be thrown."},{"lineNumber":111,"author":{"gitId":"Cheng20010201"},"content":"        userInput \u003d split[0];"},{"lineNumber":112,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":113,"author":{"gitId":"Cheng20010201"},"content":"        int index \u003d userInput.indexOf(\"deadline\") + 8;"},{"lineNumber":114,"author":{"gitId":"Cheng20010201"},"content":"        while (userInput.charAt(index) \u003d\u003d \u0027 \u0027) {"},{"lineNumber":115,"author":{"gitId":"Cheng20010201"},"content":"            index++;"},{"lineNumber":116,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"Cheng20010201"},"content":"        String content \u003d userInput.substring(index);"},{"lineNumber":118,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":119,"author":{"gitId":"Cheng20010201"},"content":"        return new Deadline(content, LocalDate.parse(date));"},{"lineNumber":120,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":122,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"Cheng20010201"},"content":"     * Extracts an event object out of the user input string."},{"lineNumber":124,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"Cheng20010201"},"content":"     * @param userInput User input string."},{"lineNumber":126,"author":{"gitId":"Cheng20010201"},"content":"     * @return The event object, as specified by the user input string."},{"lineNumber":127,"author":{"gitId":"Cheng20010201"},"content":"     * @throws IndexOutOfBoundsException If the user input string starts with \u0027event\u0027 but the format is incorrect,"},{"lineNumber":128,"author":{"gitId":"Cheng20010201"},"content":"     * an exception will be thrown."},{"lineNumber":129,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"Cheng20010201"},"content":"    private Event getEvent(String userInput) throws IndexOutOfBoundsException {"},{"lineNumber":131,"author":{"gitId":"Cheng20010201"},"content":"        assert userInput !\u003d null;"},{"lineNumber":132,"author":{"gitId":"Cheng20010201"},"content":"        String[] split \u003d userInput.split(\"\\\\s+/at\\\\s+\");"},{"lineNumber":133,"author":{"gitId":"Cheng20010201"},"content":"        String date \u003d split[1]; // Assume the argument is correct, or an Exception will be thrown."},{"lineNumber":134,"author":{"gitId":"Cheng20010201"},"content":"        userInput \u003d split[0];"},{"lineNumber":135,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":136,"author":{"gitId":"Cheng20010201"},"content":"        int index \u003d userInput.indexOf(\"event\") + 5;"},{"lineNumber":137,"author":{"gitId":"Cheng20010201"},"content":"        while (userInput.charAt(index) \u003d\u003d \u0027 \u0027) {"},{"lineNumber":138,"author":{"gitId":"Cheng20010201"},"content":"            index++;"},{"lineNumber":139,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"Cheng20010201"},"content":"        String content \u003d userInput.substring(index);"},{"lineNumber":141,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":142,"author":{"gitId":"Cheng20010201"},"content":"        return new Event(content, LocalDate.parse(date));"},{"lineNumber":143,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":145,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":146,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"Cheng20010201"},"content":"     * Extracts a todo object out of the user input string."},{"lineNumber":148,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":149,"author":{"gitId":"Cheng20010201"},"content":"     * @param userInput User input string."},{"lineNumber":150,"author":{"gitId":"Cheng20010201"},"content":"     * @return The todo object, as specified by the user input string."},{"lineNumber":151,"author":{"gitId":"Cheng20010201"},"content":"     * @throws IndexOutOfBoundsException If the user input string starts with \u0027todo\u0027 but the format is incorrect,"},{"lineNumber":152,"author":{"gitId":"Cheng20010201"},"content":"     * an exception will be thrown."},{"lineNumber":153,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"Cheng20010201"},"content":"    private ToDo getToDo(String userInput) throws IndexOutOfBoundsException {"},{"lineNumber":155,"author":{"gitId":"Cheng20010201"},"content":"        assert userInput !\u003d null;"},{"lineNumber":156,"author":{"gitId":"Cheng20010201"},"content":"        int index \u003d userInput.indexOf(\"todo\") + 4;"},{"lineNumber":157,"author":{"gitId":"Cheng20010201"},"content":"        while (userInput.charAt(index) \u003d\u003d \u0027 \u0027) {"},{"lineNumber":158,"author":{"gitId":"Cheng20010201"},"content":"            index++;"},{"lineNumber":159,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":161,"author":{"gitId":"Cheng20010201"},"content":"        return new ToDo(userInput.substring(index));"},{"lineNumber":162,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":163}},{"path":"src/main/java/lihua/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.storage;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import java.io.Reader;"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONArray;"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONObject;"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.parser.JSONParser;"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.parser.ParseException;"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Deadline;"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Event;"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Task;"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Tasks;"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.ToDo;"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"public class Storage {"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    /** Default path in which the task data is stored */"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    public static final String DATA_PATH \u003d \"data/lihua.json\";"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"     * Loads the tasks from hard disk."},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"     * @return The task list object, generated from data extracted from hard disk."},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    public Tasks load() {"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"        Tasks tasks \u003d new Tasks();"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"            // create a file in the path, in case the file does not exist"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"            boolean isTheFileOriginallyExist \u003d createFileRecursively();"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"            if (!isTheFileOriginallyExist) {"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"                return tasks;"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"            JSONParser parser \u003d new JSONParser();"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"            Reader reader \u003d new FileReader(DATA_PATH);"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"            JSONArray jsonArray \u003d (JSONArray) parser.parse(reader);"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"            populateTasks(jsonArray, tasks);"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"        } catch (IOException | ParseException | DateTimeParseException e) {"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"            System.err.println(\"Storage issues encountered. Task cannot be loaded.\");"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"        return tasks;"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"    private void populateTasks(JSONArray jsonArray, Tasks tasks) throws ParseException, DateTimeParseException {"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"        for (int i \u003d 0; i \u003c jsonArray.size(); i++) {"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"            JSONObject jsonObject \u003d (JSONObject) jsonArray.get(i);"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"            String type \u003d (String) jsonObject.get(\"type\");"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"            String description \u003d (String) jsonObject.get(\"description\");"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"            boolean isDone \u003d (boolean) jsonObject.get(\"isDone\");"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"            Task t \u003d null;"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"            if (type.equals(\"todo\")) {"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"                t \u003d new ToDo(description);"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"            } else {"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"                LocalDate time \u003d LocalDate.parse((String) jsonObject.get(\"time\"));"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"                if (type.equals(\"deadline\")) {"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"                    t \u003d new Deadline(description, time);"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"                } else if (type.equals(\"event\")) {"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"                    t \u003d new Event(description, time);"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"                }"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"                assert t !\u003d null;"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"            t.setDone(isDone);"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"            tasks.addTask(t);"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"    /** Returns true if the file previously exists */"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"    private boolean createFileRecursively() {"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"            File fileChecker \u003d new File(DATA_PATH);"},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"            if (!fileChecker.exists()) {"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"                fileChecker.getParentFile().mkdir();"},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"                fileChecker.createNewFile();"},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"                writeDummyDataToInitializedDataFile();"},{"lineNumber":83,"author":{"gitId":"Cheng20010201"},"content":"                return false;"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":"            return true;"},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":"        } catch (IOException e) {"},{"lineNumber":87,"author":{"gitId":"Cheng20010201"},"content":"            return false;"},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":91,"author":{"gitId":"Cheng20010201"},"content":"    // will only be called if a new file is initialized"},{"lineNumber":92,"author":{"gitId":"Cheng20010201"},"content":"    private void writeDummyDataToInitializedDataFile() throws IOException {"},{"lineNumber":93,"author":{"gitId":"Cheng20010201"},"content":"        JSONArray emptyJsonArray \u003d new JSONArray();"},{"lineNumber":94,"author":{"gitId":"Cheng20010201"},"content":"        writeToFile(emptyJsonArray);"},{"lineNumber":95,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"Cheng20010201"},"content":"     * Saves the tasks configuration to hard disk. The new data will overwrite old data."},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"Cheng20010201"},"content":"     * @param tasks The tasks configuration to be saved in hard disk."},{"lineNumber":101,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"Cheng20010201"},"content":"    public void saveTasks(Tasks tasks) {"},{"lineNumber":103,"author":{"gitId":"Cheng20010201"},"content":"        JSONArray jsonArray \u003d tasks.getJsonArray();"},{"lineNumber":104,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":105,"author":{"gitId":"Cheng20010201"},"content":"            createFile();"},{"lineNumber":106,"author":{"gitId":"Cheng20010201"},"content":"            writeToFile(jsonArray);"},{"lineNumber":107,"author":{"gitId":"Cheng20010201"},"content":"        } catch (IOException e) {"},{"lineNumber":108,"author":{"gitId":"Cheng20010201"},"content":"            System.err.println(\"Storage issues encountered. Task cannot be stored.\");"},{"lineNumber":109,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":112,"author":{"gitId":"Cheng20010201"},"content":"    private void createFile() throws IOException {"},{"lineNumber":113,"author":{"gitId":"Cheng20010201"},"content":"        File fileToCreate \u003d new File(DATA_PATH);"},{"lineNumber":114,"author":{"gitId":"Cheng20010201"},"content":"        fileToCreate.getParentFile().mkdir();"},{"lineNumber":115,"author":{"gitId":"Cheng20010201"},"content":"        fileToCreate.createNewFile();"},{"lineNumber":116,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":118,"author":{"gitId":"Cheng20010201"},"content":"    private void writeToFile(JSONArray jsonArray) throws IOException {"},{"lineNumber":119,"author":{"gitId":"Cheng20010201"},"content":"        FileWriter fileWriter \u003d new FileWriter(DATA_PATH);"},{"lineNumber":120,"author":{"gitId":"Cheng20010201"},"content":"        fileWriter.write(jsonArray.toJSONString());"},{"lineNumber":121,"author":{"gitId":"Cheng20010201"},"content":"        fileWriter.close();"},{"lineNumber":122,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":123}},{"path":"src/main/java/lihua/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.tasks;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONObject;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":" * Represents a lihua.tasks.Deadline item, which is a child of lihua.tasks.Task"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"public class Deadline extends TimeTask {"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a lihua.tasks.Deadline item with a given end time"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"     * @param name The name of the deadline"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"     * @param deadlineDate The end time of the item, assumed to be \u0027yyyy-mm-dd\u0027"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    public Deadline(String name, LocalDate deadlineDate) {"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"        super(name, deadlineDate);"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     * toString method overriding the one in class lihua.tasks.Task"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     * @return a user-friendly String representation of the lihua.tasks.Deadline item"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"        String doneMark \u003d isDone ? \"X\" : \" \";"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", doneMark, name,"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"                getDate().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")));"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"     * Wraps the deadline object inside a json object to be stored in hard disk."},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"     * @return The json object representing the deadline object."},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"    public JSONObject toJsonObject() {"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"        JSONObject jsonObject \u003d new JSONObject();"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"type\", \"deadline\");"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"isDone\", isDone);"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"description\", name);"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"time\", getDate().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"        return jsonObject;"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":49}},{"path":"src/main/java/lihua/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.tasks;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONObject;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":" * Represent an lihua.tasks.Event item, which is a child of lihua.tasks.Task"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"public class Event extends TimeTask {"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"     * Initialize an lihua.tasks.Event with a time period"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"     * @param name The name of the event"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"     * @param period The date of the event, assumed to be \u0027yyyy-mm-dd\u0027"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    public Event(String name, LocalDate period) {"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"        super(name, period);"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     * toString method overriding the one in class lihua.tasks.Task"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     * @return a user-friendly String representation of the lihua.tasks.Event item"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"        String doneMark \u003d isDone ? \"X\" : \" \";"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"        return String.format(\"[E][%s] %s (at: %s)\", doneMark, name,"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"                getDate().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")));"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"     * Wraps the event object inside a json object to be stored in hard disk."},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"     * @return The json obejct representing the deadline object."},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"    public JSONObject toJsonObject() {"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"        JSONObject jsonObject \u003d new JSONObject();"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"type\", \"event\");"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"isDone\", isDone);"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"description\", name);"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"time\", getDate().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"        return jsonObject;"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":49}},{"path":"src/main/java/lihua/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.tasks;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONObject;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":" * Represent a task in the task list"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"public class Task implements Comparable\u003cTask\u003e {"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    /** The name/description/content of the task */"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    protected String name;"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    /** Indicator of whether the task is done or not */"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    protected boolean isDone;"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"     * Initialize a new undone task"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     * @param name Name of the task"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    public Task(String name) {"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"        this.name \u003d name;"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"        isDone \u003d false;"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     * Compares to another task."},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"     * @param o Reference to another task"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"     * @return \u003e0 if this task\u0027s name is larger than o\u0027s name in dictionary order. \u003c0 other wise. \u003d0 if draws."},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    public int compareTo(Task o) {"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"        return name.toLowerCase().compareTo(o.name.toLowerCase());"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"     * Sets the status of the task; e.g. done or not done"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"     * @param isDone the status to set to the task"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"    public void setDone(boolean isDone) {"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"     * Gets the name for the task."},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"     * @return The name description of the task in a string."},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"    public String getName() {"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"        return name;"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"     * Gets the date for the task."},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"     * @return NULL as this is a dummy method."},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"    public LocalDate getDate() {"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"        return null;"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"     * toString method overriding its predefined one"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"     * @return a user-friendly String representation of the task"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"    public String toString() {"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"        String doneMark \u003d isDone ? \"X\" : \" \";"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"        return String.format(\"[%s] %s\", doneMark, name);"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"     * Wraps the task object inside a json object to be stored in hard disk."},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"     * @return NULL as this is a dummy method."},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"    public JSONObject toJsonObject() {"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"        return null;"},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":80}},{"path":"src/main/java/lihua/tasks/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.tasks;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import java.util.stream.Collectors;"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONArray;"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.comparators.TimeTaskComparatorChronological;"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.enums.ListTagCode;"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":" * Store all the tasks in a list DS"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"public class Tasks {"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    private final List\u003cTask\u003e tasks;"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes the task list with an empty ArrayList"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    public Tasks() {"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"     * Adds a task to the task list."},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"     * @param t The task object to be added to the list."},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    public void addTask(Task t) {"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"        tasks.add(t);"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"        Collections.sort(tasks);"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"     * Removes the task from the list at a specific index."},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"     * @param i The index of the task to be deleted."},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"     * @return The task that gets deleted."},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"     * @throws IndexOutOfBoundsException If the i specified is invalid for the list."},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"    public Task removeTask(int i) throws IndexOutOfBoundsException {"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"        // the sorted  order will be maintained, if an item is"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"        return tasks.remove(i - 1);"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"     * Retrieves the task from the list at a specific index."},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"     * @param i The index of the task to be retrieved."},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"     * @return The task at index i."},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"     * @throws IndexOutOfBoundsException If the i specified is invalid for the list."},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"    public Task getTaskDone(int i) throws IndexOutOfBoundsException {"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"        tasks.get(i - 1).setDone(true);"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"        return tasks.get(i - 1);"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"     * Finds tasks by a given keyword."},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"     * @param keyWord The keyword specified."},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"     * @return A readable string representation of all tasks whose name contain the keyword as part of the substring."},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"    public String listTasks(String keyWord) {"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"        String message \u003d \"\";"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"        assert tasks !\u003d null;"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"            boolean doesTaskNameContainKeyword \u003d tasks.get(i - 1).getName()"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"                    .toLowerCase().contains(keyWord.toLowerCase());"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"            if (doesTaskNameContainKeyword) {"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"                message +\u003d String.format(\"%d. %s\\n\", i, tasks.get(i - 1));"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"        if (message.equals(\"\")) {"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"            message \u003d String.format(\"Tasks containing \u0027%s\u0027 do not exist :\u0027)\", keyWord);"},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"        } else {"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"            message \u003d String.format(\"Here are all your tasks containing \u0027%s\u0027:\\n%sGood luck. :D\", keyWord, message);"},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"        assert !message.equals(\"\");"},{"lineNumber":83,"author":{"gitId":"Cheng20010201"},"content":"        return message;"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"Cheng20010201"},"content":"     * Lists down the content of the list in a readable string manner."},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"     * @param date The date on which the tasks is expected to be finished."},{"lineNumber":90,"author":{"gitId":"Cheng20010201"},"content":"     * @return If the specified date is null, returns the string representation for all tasks;"},{"lineNumber":91,"author":{"gitId":"Cheng20010201"},"content":"     * if the specified date is not null, returns the string representation of all the tasks on the date."},{"lineNumber":92,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"Cheng20010201"},"content":"    public String listTasks(LocalDate date, ListTagCode code) {"},{"lineNumber":94,"author":{"gitId":"Cheng20010201"},"content":"        assert tasks !\u003d null;"},{"lineNumber":95,"author":{"gitId":"Cheng20010201"},"content":"        List\u003c? extends Task\u003e validTasks \u003d getValidTasks(date);"},{"lineNumber":96,"author":{"gitId":"Cheng20010201"},"content":"        List\u003c? extends Task\u003e sortedTasks \u003d sortTasksAccordingToCodeIfAppicable(validTasks, code);"},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":98,"author":{"gitId":"Cheng20010201"},"content":"        String message \u003d constructMessage(sortedTasks);"},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":100,"author":{"gitId":"Cheng20010201"},"content":"        return message;"},{"lineNumber":101,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":103,"author":{"gitId":"Cheng20010201"},"content":"    private String constructMessage(List\u003c? extends Task\u003e sortedTasks) {"},{"lineNumber":104,"author":{"gitId":"Cheng20010201"},"content":"        String message \u003d \"\";"},{"lineNumber":105,"author":{"gitId":"Cheng20010201"},"content":"        for (int i \u003d 1; i \u003c\u003d sortedTasks.size(); i++) {"},{"lineNumber":106,"author":{"gitId":"Cheng20010201"},"content":"            message +\u003d String.format(\"%d. %s\\n\", i, sortedTasks.get(i - 1));"},{"lineNumber":107,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"Cheng20010201"},"content":"        if (message.equals(\"\")) {"},{"lineNumber":109,"author":{"gitId":"Cheng20010201"},"content":"            message \u003d \"You do not have any task right now. Please add one first. :\u0027)\";"},{"lineNumber":110,"author":{"gitId":"Cheng20010201"},"content":"        } else {"},{"lineNumber":111,"author":{"gitId":"Cheng20010201"},"content":"            message \u003d \"Here are all your tasks:\\n\" + message + \"Good luck. :D\";"},{"lineNumber":112,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"Cheng20010201"},"content":"        assert !message.equals(\"\");"},{"lineNumber":114,"author":{"gitId":"Cheng20010201"},"content":"        return message;"},{"lineNumber":115,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":117,"author":{"gitId":"Cheng20010201"},"content":"    private List\u003c? extends Task\u003e sortTasksAccordingToCodeIfAppicable(List\u003c? extends Task\u003e validTasks,"},{"lineNumber":118,"author":{"gitId":"Cheng20010201"},"content":"                                                                     ListTagCode code) {"},{"lineNumber":119,"author":{"gitId":"Cheng20010201"},"content":"        switch (code) {"},{"lineNumber":120,"author":{"gitId":"Cheng20010201"},"content":"        case NORMAL:"},{"lineNumber":121,"author":{"gitId":"Cheng20010201"},"content":"            return validTasks;"},{"lineNumber":122,"author":{"gitId":"Cheng20010201"},"content":"        case TIME_NORMAL:"},{"lineNumber":123,"author":{"gitId":"Cheng20010201"},"content":"            // we only consider TimeTask here"},{"lineNumber":124,"author":{"gitId":"Cheng20010201"},"content":"            List\u003cTimeTask\u003e timeTasks \u003d getTimeTasks(validTasks);"},{"lineNumber":125,"author":{"gitId":"Cheng20010201"},"content":"            timeTasks.sort(new TimeTaskComparatorChronological());"},{"lineNumber":126,"author":{"gitId":"Cheng20010201"},"content":"            return timeTasks;"},{"lineNumber":127,"author":{"gitId":"Cheng20010201"},"content":"        default:"},{"lineNumber":128,"author":{"gitId":"Cheng20010201"},"content":"            return null;"},{"lineNumber":129,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":132,"author":{"gitId":"Cheng20010201"},"content":"    private List\u003cTimeTask\u003e getTimeTasks(List\u003c? extends Task\u003e validTasks) {"},{"lineNumber":133,"author":{"gitId":"Cheng20010201"},"content":"        List\u003cTimeTask\u003e timeTasks \u003d validTasks.stream()"},{"lineNumber":134,"author":{"gitId":"Cheng20010201"},"content":"                .filter(t -\u003e t instanceof TimeTask).map(t -\u003e (TimeTask) t).collect(Collectors.toList());"},{"lineNumber":135,"author":{"gitId":"Cheng20010201"},"content":"        return timeTasks;"},{"lineNumber":136,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":138,"author":{"gitId":"Cheng20010201"},"content":"    private List\u003cTask\u003e getValidTasks(LocalDate date) {"},{"lineNumber":139,"author":{"gitId":"Cheng20010201"},"content":"        assert tasks !\u003d null;"},{"lineNumber":140,"author":{"gitId":"Cheng20010201"},"content":"        List\u003cTask\u003e validTasks \u003d tasks.stream()"},{"lineNumber":141,"author":{"gitId":"Cheng20010201"},"content":"                .filter(t -\u003e {"},{"lineNumber":142,"author":{"gitId":"Cheng20010201"},"content":"                    if (date \u003d\u003d null) {"},{"lineNumber":143,"author":{"gitId":"Cheng20010201"},"content":"                        return true;"},{"lineNumber":144,"author":{"gitId":"Cheng20010201"},"content":"                    }"},{"lineNumber":145,"author":{"gitId":"Cheng20010201"},"content":"                    boolean isTaskOnTheDaySpecified \u003d date.equals(t.getDate());"},{"lineNumber":146,"author":{"gitId":"Cheng20010201"},"content":"                    if (isTaskOnTheDaySpecified) {"},{"lineNumber":147,"author":{"gitId":"Cheng20010201"},"content":"                        return true;"},{"lineNumber":148,"author":{"gitId":"Cheng20010201"},"content":"                    }"},{"lineNumber":149,"author":{"gitId":"Cheng20010201"},"content":"                    return false;"},{"lineNumber":150,"author":{"gitId":"Cheng20010201"},"content":"                }).collect(Collectors.toList());"},{"lineNumber":151,"author":{"gitId":"Cheng20010201"},"content":"        return validTasks;"},{"lineNumber":152,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":154,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"Cheng20010201"},"content":"     * Wraps the task list object inside a json array to be stored in hard disk."},{"lineNumber":156,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":157,"author":{"gitId":"Cheng20010201"},"content":"     * @return The json array representing the task list."},{"lineNumber":158,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"Cheng20010201"},"content":"    public JSONArray getJsonArray() {"},{"lineNumber":160,"author":{"gitId":"Cheng20010201"},"content":"        JSONArray jsonArray \u003d new JSONArray();"},{"lineNumber":161,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":162,"author":{"gitId":"Cheng20010201"},"content":"        for (Task t : tasks) {"},{"lineNumber":163,"author":{"gitId":"Cheng20010201"},"content":"            jsonArray.add(t.toJsonObject());"},{"lineNumber":164,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"Cheng20010201"},"content":"        assert jsonArray !\u003d null;"},{"lineNumber":166,"author":{"gitId":"Cheng20010201"},"content":"        return jsonArray;"},{"lineNumber":167,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":169,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":170,"author":{"gitId":"Cheng20010201"},"content":"     * Gets the current size of the task list."},{"lineNumber":171,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":172,"author":{"gitId":"Cheng20010201"},"content":"     * @return The size of the task list."},{"lineNumber":173,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":174,"author":{"gitId":"Cheng20010201"},"content":"    public int getSize() {"},{"lineNumber":175,"author":{"gitId":"Cheng20010201"},"content":"        return tasks.size();"},{"lineNumber":176,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":177}},{"path":"src/main/java/lihua/tasks/TimeTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.tasks;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"public class TimeTask extends Task {"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"    private final LocalDate date;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a task with a date and a name."},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"     * @param name The name of the task."},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"     * @param date The date of the task."},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    public TimeTask(String name, LocalDate date) {"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"        super(name);"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"        this.date \u003d date;"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"     * Gets the date of the event."},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"     * @return The date of the event."},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    public LocalDate getDate() {"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"        return date;"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":27}},{"path":"src/main/java/lihua/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.tasks;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONObject;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":" * Represent a lihua.tasks.ToDo item, which is a child of lihua.tasks.Task"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"public class ToDo extends Task {"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"     * Initialize a lihua.tasks.ToDo item"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"     * @param name The name of the item"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    public ToDo(String name) {"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"        super(name);"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     * toString method overriding the one in class lihua.tasks.Task"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"     * @return a user-friendly String representation of the lihua.tasks.ToDo item"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"        String doneMark \u003d isDone ? \"X\" : \" \";"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"        return String.format(\"[T][%s] %s\", doneMark, name);"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"     * Wraps the todo object inside a json object to be stored in hard disk."},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"     * @return The json object representing the todo object."},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"    public JSONObject toJsonObject() {"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"        JSONObject jsonObject \u003d new JSONObject();"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"type\", \"todo\");"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"isDone\", isDone);"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"description\", name);"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"time\", \"\");"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"        return jsonObject;"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":42}},{"path":"src/main/java/lihua/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.ui;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import javafx.geometry.Insets;"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.SnapshotParameters;"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.control.Label;"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.effect.DropShadow;"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.image.Image;"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.image.WritableImage;"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.shape.Rectangle;"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":" * An example of a custom control using FXML."},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":" * containing text from the speaker."},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"//@@author Cheng20010201"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with minor modifications."},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"public class DialogBox extends HBox {"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    private Label dialog;"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"    private ImageView displayPicture;"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"            fxmlLoader.load();"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"            e.printStackTrace();"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"        setupDisplayPicture(img);"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"        dialog.setText(text);"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"    // @author Cheng20010201-reused"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"    // Code snippet modified from https://stackoverflow.com/questions/25622445/how-to-make-imageviews-rounded"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"    private void setupDisplayPicture(Image img) {"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"        // set a clip to apply rounded border to the original image."},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"        Rectangle clip \u003d new Rectangle("},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"                displayPicture.getFitWidth(), displayPicture.getFitHeight()"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"        );"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"        clip.setArcWidth(20);"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"        clip.setArcHeight(20);"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"        displayPicture.setClip(clip);"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"        // snapshot the rounded image."},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"        SnapshotParameters parameters \u003d new SnapshotParameters();"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"        parameters.setFill(Color.TRANSPARENT);"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"        WritableImage image \u003d displayPicture.snapshot(parameters, null);"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"        // remove the rounding clip so that our effect can show through."},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"        displayPicture.setClip(null);"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"        // apply a shadow effect."},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"        displayPicture.setEffect(new DropShadow(20, Color.YELLOWGREEN));"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"        displayPicture.setImage(img);"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"    // @author"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"    private void flip() {"},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"        Collections.reverse(tmp);"},{"lineNumber":83,"author":{"gitId":"Cheng20010201"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":87,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":"     * Gets a dialog box object containing the bot response."},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"Cheng20010201"},"content":"     * @param text Bot response."},{"lineNumber":91,"author":{"gitId":"Cheng20010201"},"content":"     * @param img Bot img."},{"lineNumber":92,"author":{"gitId":"Cheng20010201"},"content":"     * @return A new DialogBox containing the input information."},{"lineNumber":93,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"Cheng20010201"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":95,"author":{"gitId":"Cheng20010201"},"content":"        DialogBox dBox \u003d new DialogBox(text, img);"},{"lineNumber":96,"author":{"gitId":"Cheng20010201"},"content":"        dBox.setBackground(getUserBackground());"},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":"        return dBox;"},{"lineNumber":98,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":100,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"Cheng20010201"},"content":"     * Gets a flipped dialog box object containing the human message."},{"lineNumber":102,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"Cheng20010201"},"content":"     * @param text Human input."},{"lineNumber":104,"author":{"gitId":"Cheng20010201"},"content":"     * @param img Human message content."},{"lineNumber":105,"author":{"gitId":"Cheng20010201"},"content":"     * @return A new DialogBox containing the input information."},{"lineNumber":106,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"Cheng20010201"},"content":"    public static DialogBox getLihuaDialogError(String text, Image img) {"},{"lineNumber":108,"author":{"gitId":"Cheng20010201"},"content":"        DialogBox dBox \u003d new DialogBox(text, img);"},{"lineNumber":109,"author":{"gitId":"Cheng20010201"},"content":"        dBox.flip();"},{"lineNumber":110,"author":{"gitId":"Cheng20010201"},"content":"        dBox.setBackground(getLihuaBackgroundError());"},{"lineNumber":111,"author":{"gitId":"Cheng20010201"},"content":"        return dBox;"},{"lineNumber":112,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":114,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"Cheng20010201"},"content":"     * Gets a flipped dialog box object containing the human message."},{"lineNumber":116,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"Cheng20010201"},"content":"     * @param text Human input."},{"lineNumber":118,"author":{"gitId":"Cheng20010201"},"content":"     * @param img Human message content."},{"lineNumber":119,"author":{"gitId":"Cheng20010201"},"content":"     * @return A new DialogBox containing the input information."},{"lineNumber":120,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"Cheng20010201"},"content":"    public static DialogBox getLihuaDialog(String text, Image img) {"},{"lineNumber":122,"author":{"gitId":"Cheng20010201"},"content":"        DialogBox dBox \u003d new DialogBox(text, img);"},{"lineNumber":123,"author":{"gitId":"Cheng20010201"},"content":"        dBox.flip();"},{"lineNumber":124,"author":{"gitId":"Cheng20010201"},"content":"        dBox.setBackground(getLihuaBackground());"},{"lineNumber":125,"author":{"gitId":"Cheng20010201"},"content":"        return dBox;"},{"lineNumber":126,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":128,"author":{"gitId":"Cheng20010201"},"content":"    //@@author"},{"lineNumber":129,"author":{"gitId":"Cheng20010201"},"content":"    private static Background getUserBackground() {"},{"lineNumber":130,"author":{"gitId":"Cheng20010201"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(Color.SKYBLUE,"},{"lineNumber":131,"author":{"gitId":"Cheng20010201"},"content":"                CornerRadii.EMPTY, Insets.EMPTY);"},{"lineNumber":132,"author":{"gitId":"Cheng20010201"},"content":"        Background background \u003d new Background(backgroundFill);"},{"lineNumber":133,"author":{"gitId":"Cheng20010201"},"content":"        return background;"},{"lineNumber":134,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":136,"author":{"gitId":"Cheng20010201"},"content":"    private static Background getLihuaBackground() {"},{"lineNumber":137,"author":{"gitId":"Cheng20010201"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(Color.LIGHTPINK,"},{"lineNumber":138,"author":{"gitId":"Cheng20010201"},"content":"                CornerRadii.EMPTY, Insets.EMPTY);"},{"lineNumber":139,"author":{"gitId":"Cheng20010201"},"content":"        Background background \u003d new Background(backgroundFill);"},{"lineNumber":140,"author":{"gitId":"Cheng20010201"},"content":"        return background;"},{"lineNumber":141,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":143,"author":{"gitId":"Cheng20010201"},"content":"    private static Background getLihuaBackgroundError() {"},{"lineNumber":144,"author":{"gitId":"Cheng20010201"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(Color.LIGHTCORAL,"},{"lineNumber":145,"author":{"gitId":"Cheng20010201"},"content":"                CornerRadii.EMPTY, Insets.EMPTY);"},{"lineNumber":146,"author":{"gitId":"Cheng20010201"},"content":"        Background background \u003d new Background(backgroundFill);"},{"lineNumber":147,"author":{"gitId":"Cheng20010201"},"content":"        return background;"},{"lineNumber":148,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":149}},{"path":"src/main/java/lihua/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.ui;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.feedback.CommandResult;"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.Messages;"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"import lihua.main.Lihua;"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":" * Controller for lihua.ui.MainWindow. Provides the layout for the other controls."},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"//@@author Cheng20010201"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFxPart4.html with minor modifications."},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    private TextField userInput;"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    private Button sendButton;"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    private Lihua lihua;"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/geisha-2-concrete.jpg\"));"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    private Image lihuaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/geisha-concrete.jpg\"));"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes the main window."},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"    @FXML"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"    public void initialize() {"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"     * Configures the bot with entity Lihua."},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"     * @param lihua The entity to be configured."},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"    public void setLihua(Lihua lihua) {"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"        this.lihua \u003d lihua;"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"        sendWelcomeMessage();"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"     * Sends a welcome message to the user."},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"    public void sendWelcomeMessage() {"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getLihuaDialog(Messages.MESSAGE_HELLO, lihuaImage));"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Lihua\u0027s reply and then appends them to"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"     * If the response is null, the application should exit."},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"    @FXML"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"    private void handleUserInput() {"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"        CommandResult result \u003d lihua.getResponse(input);"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"        String response \u003d result.getFeedBack();"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"        if (result.isUserCommandError()) {"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"            dialogContainer.getChildren().add(DialogBox.getLihuaDialogError(response, lihuaImage));"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"            dialogContainer.getChildren().add(DialogBox.getLihuaDialog(response, lihuaImage));"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"        userInput.clear();"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"}"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"//@@author"}],"authorContributionMap":{"Cheng20010201":78}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c!-- @@author Cheng20010201-reused --\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c!-- From the javaFX tutorial https://se-education.org/guides/tutorials/javaFxPart4.html --\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.effect.Blend?\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c!-- Idea adopted from github.com/QY-H00/ip --\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c!-- @@author --\u003e"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"105.0\" prefWidth\u003d\"327.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    \u003cchildren\u003e"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"         \u003cfont\u003e"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"            \u003cFont name\u003d\"Calibri Bold\" size\u003d\"13.0\" /\u003e"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"         \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" blendMode\u003d\"ADD\" fitHeight\u003d\"75.0\" fitWidth\u003d\"78.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    \u003c/children\u003e"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    \u003cpadding\u003e"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    \u003c/padding\u003e"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"   \u003ceffect\u003e"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"      \u003cBlend /\u003e"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"   \u003c/effect\u003e"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Cheng20010201":18,"-":12}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!-- @@author Cheng20010201-reused --\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c!-- From the javaFX tutorial https://se-education.org/guides/tutorials/javaFxPart4.html --\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"lihua.ui.MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" opacity\u003d\"0.93\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter your command here\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"         \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cFont name\u003d\"Calibri\" size\u003d\"14.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"         \u003c/font\u003e\u003c/TextField\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#4d4a4a\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"         \u003cfont\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003cFont name\u003d\"System Bold\" size\u003d\"18.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"         \u003c/font\u003e\u003c/Button\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003ccontent\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/content\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/children\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/AnchorPane\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c!-- @@author --\u003e"}],"authorContributionMap":{"Cheng20010201":1,"-":27}},{"path":"src/test/java/lihua/commands/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class AddCommandTest {"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public void commandDescription_noGivenInput_descriptionMatches() {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        String expected \u003d \"todo/deadline/event: add a task of a specific type to the task list.\\n\""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example 1: todo [task name]\\n\" + \"---- Example 2: deadline [task name] /by [yyyy-mm-dd]\\n\""},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example 3: event [task name] /at [yyyy-mm-dd]\";"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(expected, AddCommand.MESSAGE_USAGE);"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":15}},{"path":"src/test/java/lihua/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class DeleteCommandTest {"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public void commandDescription_noGivenInput_descriptionMatches() {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        String expected \u003d \"delete: Remove a specific task from the list.\\n\""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example: delete [valid index number]\";"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(expected, DeleteCommand.MESSAGE_USAGE);"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":14}},{"path":"src/test/java/lihua/commands/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class DoneCommandTest {"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public void commandDescription_noGivenInput_descriptionMatches() {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        String expected \u003d \"done: Get a specific task done.\\n\""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example: done [valid index number]\";"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(expected, DoneCommand.MESSAGE_USAGE);"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":14}},{"path":"src/test/java/lihua/commands/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class ExitCommandTest {"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public void commandDescription_noGivenInput_descriptionMatches() {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        String expected \u003d \"bye: Exit the application. Data will be auto-saved.\\n\""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example: bye\";"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(expected, ExitCommand.MESSAGE_USAGE);"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":14}},{"path":"src/test/java/lihua/commands/HelpCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class HelpCommandTest {"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public void commandDescription_noGivenInput_descriptionMatches() {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        String expected \u003d \"help: Shows application usage instructions.\\n\""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example: help\";"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(expected, HelpCommand.MESSAGE_USAGE);"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":14}},{"path":"src/test/java/lihua/commands/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class ListCommandTest {"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public void commandDescription_noGivenInput_descriptionMatches() {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        String expected \u003d \"list: List down all the tasks. \""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"                + \"List down all the tasks on a specific date, if additional date argument is given\\n\""},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"                + \"List down all time-related tasks in a chronological order, if additional tag -t is given.\\n\""},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example 1: list\\n\""},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example 2: list [yyyy-mm-dd]\\n\""},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example 3: list -time\";"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(expected, ListCommand.MESSAGE_USAGE);"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":18}},{"path":"src/test/java/lihua/commons/MessagesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commons;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class MessagesTest {"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_HELLO_EXPECTED \u003d"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"            \"Hello! My name is Lihua.\\n\""},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"                    + \"What can I do for you today? (\u003dV\u003d)\";"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_GET_HELP_EXPECTED \u003d"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"            \"Sorry, I do not understand your command :\u0027)\\n\""},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"                    + \"If you are stuck, type \u0027help\u0027 to get a list of operations available.\";"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_LINE_EXPECTED \u003d"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"            \"-------------------------------------------------\";"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_INFORM_EXIT_EXPECTED \u003d"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"            \"Exiting Lihua as requested...\\n\""},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"                    + \"Goodbye! Hope to see you again soon! (\u003dV\u003d)\";"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_REPORTING_ADDING_FAILURE_EXPECTED \u003d"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"            \"Sorry, the task adding failed. :( Please check your storage devices.\";"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_VIEW_COMMANDS_EXPECTED \u003d"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"            \"No worries! Here are the commands available:\\n\""},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"                    + \"todo/deadline/event: add a task of a specific type to the task list.\\n\""},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example 1: todo [task name]\\n\""},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example 2: deadline [task name] /by [yyyy-mm-dd]\\n\""},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example 3: event [task name] /at [yyyy-mm-dd]\\n\""},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"                    + \"done: Get a specific task done.\\n\""},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example: done [valid index number]\\n\""},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"                    + \"delete: Remove a specific task from the list.\\n\""},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example: delete [valid index number]\\n\""},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"                    + \"list: List down all the tasks. \""},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"                    + \"List down all the tasks on a specific date, if additional date argument is given\\n\""},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"                    + \"List down all time-related tasks in a chronological order, if additional tag -t is given.\\n\""},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example 1: list\\n\""},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example 2: list [yyyy-mm-dd]\\n\""},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example 3: list -time\\n\""},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"                    + \"find: List down all the tasks containing the key word specified.\\n\""},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"                    + \"help: Shows application usage instructions.\\n\""},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example: help\\n\""},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"                    + \"bye: Exit the application. Data will be auto-saved.\\n\""},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example: bye\";"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_REPORTING_INVALID_INDEX_EXPECTED \u003d"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"            \"Sorry, the index you specified does not exist :\u0027), \""},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"                    + \"please type \u0027list\u0027 to see available indices to delete.\";"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"    public void messagesContent_noGivenInput_contentMatches() {"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(MESSAGE_HELLO_EXPECTED, Messages.MESSAGE_HELLO);"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(MESSAGE_GET_HELP_EXPECTED, Messages.MESSAGE_GET_HELP);"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(MESSAGE_LINE_EXPECTED, Messages.MESSAGE_LINE);"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(MESSAGE_INFORM_EXIT_EXPECTED, Messages.MESSAGE_INFORM_EXIT);"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(MESSAGE_REPORTING_ADDING_FAILURE_EXPECTED, Messages.MESSAGE_REPORTING_ADDING_FAILURE);"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(MESSAGE_VIEW_COMMANDS_EXPECTED, Messages.MESSAGE_VIEW_COMMANDS);"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(MESSAGE_REPORTING_INVALID_INDEX_EXPECTED, Messages.MESSAGE_REPORTING_INVALID_INDEX);"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":55}},{"path":"src/test/java/lihua/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.tasks;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class ToDoTest {"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public void toString_normalInitialization_success() {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        ToDo t \u003d new ToDo(\"I am a todo object.\");"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(\"[T][ ] I am a todo object.\", t.toString());"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":13}}]
