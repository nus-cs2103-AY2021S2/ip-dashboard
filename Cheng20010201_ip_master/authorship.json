[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"## Acknowledgement"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"#### External Library:"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"- [json-simple-1.1.1.jar](https://code.google.com/archive/p/json-simple/)"}],"authorContributionMap":{"Cheng20010201":3,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    implementation \u0027com.googlecode.json-simple:json-simple:1.1.1\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    String javaFxVersion \u003d \u002715.0.1\u0027"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"    mainClassName \u003d \"lihua.main.Launcher\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"    archiveBaseName \u003d \"Lihua\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"    toolVersion \u003d \u00278.39\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"    enableAssertions \u003d true"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Cheng20010201":20,"-":43}},{"path":"src/main/java/lihua/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.Messages;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" * Command class representing a command to add a task."},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":" * The task might be a todo, a deadline, or an event."},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"public class AddCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    /** Command word for adding command */"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    public static final String COMMAND_WORD \u003d \"todo/deadline/event\";"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    /** Command help information for adding command */"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_USAGE \u003d"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"            String.format(\"%s: add a task of a specific type to the task list.\\n\""},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"                      + \"---- Example 1: todo [task name]\\n\""},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"                      + \"---- Example 2: deadline [task name] /by [yyyy-mm-dd]\\n\""},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"                      + \"---- Example 3: event [task name] /at [yyyy-mm-dd]\", COMMAND_WORD);"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    private final Task toAdd;"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a new AddCommand with a task."},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     * @param toAdd The task to be added to the list."},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    public AddCommand(Task toAdd) {"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"        super();"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"        this.toAdd \u003d toAdd;"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the adding command. Add the task into list and give feedback to user."},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"     * @return A CommandResult Object containing feedback to user."},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult execute() {"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"            tasks.addTask(toAdd);"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"            String noun \u003d tasks.getSize() \u003c\u003d 1 ? \"task\" : \"tasks\";"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"            String message \u003d String.format(\"Got it. I have added this task to your list:\\n---- %s\\n\""},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"                            + \"Now you have %d %s in total. Good luck.\", toAdd.toString(), tasks.getSize(), noun);"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(message);"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"        } catch (Exception e) {"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(Messages.MESSAGE_REPORTING_ADDING_FAILURE);"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":49}},{"path":"src/main/java/lihua/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Tasks;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":" * Parent class for all commands. This class should be abstract since"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" * it is meaningless to initialize instances of \u0027Command\u0027 only."},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"public abstract class Command {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"    /** The tasks list to operate on */"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    protected Tasks tasks;"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    /** The target index of the task list, if applicable */"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    protected int targetIndex \u003d -1;"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a Command Object with a target index."},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     * @param targetIndex The 1-based index of the task to be operated on."},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    public Command(int targetIndex) {"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"        this.targetIndex \u003d targetIndex;"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a default Command Object."},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    public Command() {"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"     * Set a task list to the command object."},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"     * @param tasks The tasks list to operate on later."},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    public void setTaskList(Tasks tasks) {"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the command. To be implemented by children classes."},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"     * @return A CommandResult Object containing feedback to user."},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"    public abstract CommandResult execute();"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":45}},{"path":"src/main/java/lihua/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":" * Command Result class representing the result and feedback after the command is executed."},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"public class CommandResult {"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"    /** The feedback to user */"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    private final String feedbackToUser;"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a CommandResult object with a feedback."},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"     * @param feedbackToUser The feedback to user."},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult(String feedbackToUser) {"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"        this.feedbackToUser \u003d feedbackToUser;"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"     * Retrieve the feedback for user."},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"     * @return The feedback for user."},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    public String getFeedBack() {"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"        return feedbackToUser;"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":27}},{"path":"src/main/java/lihua/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.Messages;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" * Command class representing a command to delete a task."},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"    /** Command word for deleting command */"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    /** Command help information for deleting command */"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"            + \": Remove a specific task from the list.\\n\""},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"            + \"---- Example: \" + COMMAND_WORD + \" [valid index number]\";"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a new DeleteCommand with a task index."},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"     * @param targetIndex The 1-based index of the task to be deleted."},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    public DeleteCommand(int targetIndex) {"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"        super(targetIndex);"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the deleting command."},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"     * Delete the task from the list and give feedback to user."},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"     * @return A CommandResult Object containing feedback to user."},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult execute() {"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"            Task deleted \u003d tasks.removeTask(targetIndex); // IndexOutOfBound Exception should be handled"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"            String noun \u003d tasks.getSize() \u003c\u003d 1 ? \"task\" : \"tasks\";"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"            String message \u003d String.format(\"Got it. I have removed this task from your list:\\n---- %s\\n\""},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"                            + \"Now you have %d %s in total. Good luck.\", deleted.toString(), tasks.getSize(), noun);"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(message);"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(Messages.MESSAGE_REPORTING_INVALID_INDEX);"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"        } catch (Exception e) {"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(Messages.MESSAGE_REPORTING_ADDING_FAILURE);"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":47}},{"path":"src/main/java/lihua/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.Messages;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" * Command class representing a command to get a task done."},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"public class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"    /** Command word for done command */"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    public static final String COMMAND_WORD \u003d \"done\";"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    /** Command help information for done command */"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"            + \": Get a specific task done.\\n\""},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"            + \"---- Example: \" + COMMAND_WORD"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"            + \" [valid index number]\";"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    public DoneCommand(int targetIndex) {"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"        super(targetIndex);"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the done command."},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     * Get the task done and give feedback to user."},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     * @return A CommandResult Object containing feedback to user."},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult execute() {"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"            Task done \u003d tasks.getTaskDone(targetIndex); // IndexOutOfBound Exception should be handled"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"            String message \u003d String.format(\"Got it. I have mark this task as done:\\n---- %s\", done.toString());"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(message);"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(Messages.MESSAGE_REPORTING_INVALID_INDEX);"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"        } catch (Exception e) {"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"            return new CommandResult(Messages.MESSAGE_REPORTING_ADDING_FAILURE);"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":41}},{"path":"src/main/java/lihua/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.Messages;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":" * Command class representing a command to exit the application."},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"public class ExitCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    /** Command word for exit command */"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    /** Command help information for exit command */"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"            + \": Exit the application. Data will be auto-saved.\\n\""},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"            + \"---- Example: \" + COMMAND_WORD;"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a new ExitCommand."},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    public ExitCommand() {"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"        super();"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the exit command."},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     * Exit the application and give feedback to user."},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"     * @return A CommandResult Object containing feedback to user."},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult execute() {"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"        return new CommandResult(Messages.MESSAGE_INFORM_EXIT);"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"     * Checks whether a command is of type ExitCommand."},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"     * @param command The Command object to be checked."},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"     * @return True if the Command object is of type ExitCommand, false otherwise"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"    public static boolean isExit(Command command) {"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"        return command instanceof ExitCommand; // instanceof returns false if it is null"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":43}},{"path":"src/main/java/lihua/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":" * Command class representing a command to find tasks by keyword."},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"public class FindCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"    /** Command word for find command */"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    public static final String COMMAND_WORD \u003d \"find\";"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    /** Command help information for help command */"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"            + \": List down all the tasks containing the key word specified.\";"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    /** Keyword to find in tasks */"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    private final String keyWord;"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a new FindCommand with a keyword."},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     * @param keyWord The keyword to find in tasks."},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    public FindCommand(String keyWord) {"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"        this.keyWord \u003d keyWord;"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the find command. Gathers the tasks containing the keyword."},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"     * @return A CommandResult Object containing feedback to user."},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult execute() {"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"        String message \u003d tasks.listTasks(keyWord);"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"        return new CommandResult(message);"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":33}},{"path":"src/main/java/lihua/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.Messages;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":" * Command class representing a command to get help."},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"public class HelpCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    /** Command word for help command */"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"    public static final String COMMAND_WORD \u003d \"help\";"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    /** Command help information for help command */"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"            + \": Shows application usage instructions.\\n\""},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"            + \"---- Example: \" + COMMAND_WORD;"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    private boolean isAskingForHelp \u003d true;"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a new default HelpCommand."},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    public HelpCommand() {"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"        super();"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a new HelpCommand with additional boolean parameter."},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"     * @param isAskingForHelp True if the user is really asking for help,"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"     *                        false if the user is confused with commands"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"     *                        and the application prompts the user to get help."},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    public HelpCommand(boolean isAskingForHelp) {"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"        super();"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"        this.isAskingForHelp \u003d isAskingForHelp;"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the help command. If the user is really asking for help then"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"     * give user the help instructions. If the user is confused with commands then"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"     * prompts the user to get help."},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"     * @return A CommandResult Object containing feedback to user."},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult execute() {"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"        String feedback \u003d isAskingForHelp"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"                ? Messages.MESSAGE_VIEW_COMMANDS"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"                : Messages.MESSAGE_GET_HELP;"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"        return new CommandResult(feedback);"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":50}},{"path":"src/main/java/lihua/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":" * Command class representing a command to list tasks."},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"public class ListCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    /** Command word for list command */"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"    public static final String COMMAND_WORD \u003d \"list\";"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    /** Command help information for list command */"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"            + \": List down all the tasks. \""},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"            + \"List down all the tasks on a specific date, if additional date argument is given\\n\""},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"            + \"---- Example 1: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"            + \"---- Example 2: \" + COMMAND_WORD + \" [yyyy-mm-dd]\";"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    /** Optional argument indicating the date of tasks to be listed */"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    private final LocalDate date;"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a new ListCommand with a LocalDate."},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"     * @param date The date on which the tasks should be listed."},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    public ListCommand(LocalDate date) {"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"        super();"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"        this.date \u003d date;"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a default ListCommand, listing all existing tasks."},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"    public ListCommand() {"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"        super();"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"        this.date \u003d null;"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the list command."},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"     * List all the tasks or all the tasks on a specific date."},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"     * @return A CommandResult Object containing feedback to user."},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"    public CommandResult execute() {"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"        // Let lihua.tasks.Tasks check if it is null or not, then perform relevant operations."},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"        String message \u003d tasks.listTasks(date);"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"        return new CommandResult(message);"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":50}},{"path":"src/main/java/lihua/commons/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commons;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.AddCommand;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.DeleteCommand;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.DoneCommand;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.ExitCommand;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.FindCommand;"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.HelpCommand;"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.ListCommand;"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":" * Messages class containing static messages of lihua.entry.Lihua."},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"public class Messages {"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    /** Hello message */"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_HELLO \u003d"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"            \"Hello! My name is Lihua.\\n\""},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"                    + \"What can I do for you today? (\u003dV\u003d)\";"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    /** Help prompt message */"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_GET_HELP \u003d"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"            \"Sorry, I do not understand your command :\u0027)\\n\""},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"                    + \"If you are stuck, type \u0027help\u0027 to get a list of operations available.\";"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    /** Line divider */"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_LINE \u003d"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"            \"-------------------------------------------------\";"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    /** Exit message */"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_INFORM_EXIT \u003d"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"            \"Exiting Lihua as requested...\\n\""},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"                    + \"Goodbye! Hope to see you again soon! (\u003dV\u003d)\";"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    /** Adding task failure message */"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_REPORTING_ADDING_FAILURE \u003d"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"            \"Sorry, the task adding failed. :( Please check your storage devices.\";"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"    /** Help message */"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_VIEW_COMMANDS \u003d"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"            \"No worries! Here are the commands available:\\n\""},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"                    + AddCommand.MESSAGE_USAGE"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + DoneCommand.MESSAGE_USAGE"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + DeleteCommand.MESSAGE_USAGE"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + ListCommand.MESSAGE_USAGE"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + FindCommand.MESSAGE_USAGE"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + HelpCommand.MESSAGE_USAGE"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + ExitCommand.MESSAGE_USAGE;"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"    /** Invalid index report message */"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_REPORTING_INVALID_INDEX \u003d"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"            \"Sorry, the index you specified does not exist :\u0027), \""},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"                    + \"please type \u0027list\u0027 to see available indices to delete.\";"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":47}},{"path":"src/main/java/lihua/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.main;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":12}},{"path":"src/main/java/lihua/main/Lihua.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.main;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.Command;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.CommandResult;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.ExitCommand;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import lihua.parser.Parser;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import lihua.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Tasks;"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import lihua.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"// Design idea adapted from https://github.com/se-edu/addressbook-level2"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"public class Lihua {"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    private final Tasks tasks;"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    private final Storage storage;"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    private final Ui ui;"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    private final Parser parser;"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"     * Constructor for Lihua. Initializing necessary fields."},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    public Lihua() {"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"        ui \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"        storage \u003d new Storage();"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"        tasks \u003d storage.load();"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"        parser \u003d new Parser();"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"     * Gets the response from the user."},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"     * @param userInput User\u0027s input string."},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"     * @return A string containing feedback for the user."},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"     * If user sends a terminating signal, the method returns null."},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    public String getResponse(String userInput) {"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"        Command command \u003d parser.parseUserInput(userInput);"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"        if (ExitCommand.isExit(command)) {"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"            System.exit(0);"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"        CommandResult result \u003d executeCommand(command);"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"        return result.getFeedBack();"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"     * Executes the command argument. If successful then saves the current task list."},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"     * If there are unchecked exception then shows user the error message and throws an RuntimeException."},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"     * Throwing RuntimeException is because the user would not"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"     * be expected to handle the unchecked exception him/herself."},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"     * @param command The command to be executed."},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"     * @return The CommandResult of the command\u0027s execution."},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"    private CommandResult executeCommand(Command command) {"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"            command.setTaskList(tasks);"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"            CommandResult result \u003d command.execute();"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"            storage.saveTasks(tasks);"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"            return result;"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"        } catch (Exception e) {"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"            ui.showFeedbackToUser(e.getMessage());"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"            throw new RuntimeException(e);"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":63}},{"path":"src/main/java/lihua/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.main;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import lihua.ui.MainWindow;"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    private static final String GUI_RESOURCE_PATH \u003d \"/view/MainWindow.fxml\";"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    private Lihua lihua \u003d new Lihua();"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(GUI_RESOURCE_PATH));"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"            stage.setTitle(\"Lihua\");"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setLihua(lihua);"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":33}},{"path":"src/main/java/lihua/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.parser;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.AddCommand;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.Command;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.DeleteCommand;"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.DoneCommand;"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.ExitCommand;"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.FindCommand;"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.HelpCommand;"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.ListCommand;"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Deadline;"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Event;"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.ToDo;"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"public class Parser {"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    // need to handle input argument mismatch here"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    // e.g. if the input is \u0027wrong\u0027, the program should handle the exception and prompt get-help message"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"     * Parses user input string and returns relevant command."},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     * @param userInput User input string."},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     * @return Relevant command, as specified in the userInput."},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    public Command parseUserInput(String userInput) {"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"        // Allow multiple white spaces between:"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"        // first argument, center argument(s), and last argument."},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"        String[] split \u003d userInput.split(\"\\\\s+\"); // Split by one or more white spaces."},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"        String firstArgument \u003d split[0].toLowerCase();"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"        Command command;"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"            switch (firstArgument) {"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"            case \"bye\":"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"                command \u003d new ExitCommand();"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"                break;"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"            case \"todo\":"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"                ToDo todo \u003d getToDo(userInput);"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"                command \u003d new AddCommand(todo);"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"                break;"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"            case \"event\":"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"                Event event \u003d getEvent(userInput);"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"                command \u003d new AddCommand(event);"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"                break;"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"            case \"deadline\":"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"                Deadline deadline \u003d getDeadline(userInput);"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"                command \u003d new AddCommand(deadline);"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"                break;"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"            case \"done\":"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"                command \u003d new DoneCommand(Integer.valueOf(split[1]));"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"                break;"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"            case \"delete\":"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"                command \u003d new DeleteCommand(Integer.valueOf(split[1]));"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"                break;"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"            case \"list\":"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"                // try to see if second argument (date) exists"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"                try {"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"                    String dateString \u003d split[1];"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"                    // date exists"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"                    LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"                    command \u003d new ListCommand(date); // list on a specific date"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"                    // date does not exists"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"                    command \u003d new ListCommand(); // list all"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"                }"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"                // If date format is incorrect, an exception will be thrown and caught by below catch statement."},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"                // A helper command would then be prompted."},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"                break;"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"            case \"help\":"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"                command \u003d new HelpCommand();"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"                break;"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"            case \"find\":"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"                command \u003d new FindCommand(split[1]);"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"                break;"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"            default:"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"                command \u003d new HelpCommand(false);"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"                break;"},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"        } catch (Exception e) {"},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"            command \u003d new HelpCommand(false);"},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"        return command;"},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":87,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":"     * Extracts a deadline object out of the user input string."},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"Cheng20010201"},"content":"     * @param userInput User input string."},{"lineNumber":91,"author":{"gitId":"Cheng20010201"},"content":"     * @return The deadline object, as specified by the user input string."},{"lineNumber":92,"author":{"gitId":"Cheng20010201"},"content":"     * @throws Exception If the user input string starts with \u0027deadline\u0027 but the format is incorrect,"},{"lineNumber":93,"author":{"gitId":"Cheng20010201"},"content":"     * an exception will be thrown."},{"lineNumber":94,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"Cheng20010201"},"content":"    private Deadline getDeadline(String userInput) throws Exception {"},{"lineNumber":96,"author":{"gitId":"Cheng20010201"},"content":"        String[] split \u003d userInput.split(\"\\\\s+/by\\\\s+\");"},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":"        String date \u003d split[1]; // Assume the argument is correct, or an Exception will be thrown."},{"lineNumber":98,"author":{"gitId":"Cheng20010201"},"content":"        userInput \u003d split[0];"},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":100,"author":{"gitId":"Cheng20010201"},"content":"        int index \u003d userInput.indexOf(\"deadline\") + 8;"},{"lineNumber":101,"author":{"gitId":"Cheng20010201"},"content":"        while (userInput.charAt(index) \u003d\u003d \u0027 \u0027) {"},{"lineNumber":102,"author":{"gitId":"Cheng20010201"},"content":"            index++;"},{"lineNumber":103,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"Cheng20010201"},"content":"        String content \u003d userInput.substring(index);"},{"lineNumber":105,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":106,"author":{"gitId":"Cheng20010201"},"content":"        return new Deadline(content, LocalDate.parse(date));"},{"lineNumber":107,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":109,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"Cheng20010201"},"content":"     * Extracts an event object out of the user input string."},{"lineNumber":111,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"Cheng20010201"},"content":"     * @param userInput User input string."},{"lineNumber":113,"author":{"gitId":"Cheng20010201"},"content":"     * @return The event object, as specified by the user input string."},{"lineNumber":114,"author":{"gitId":"Cheng20010201"},"content":"     * @throws Exception If the user input string starts with \u0027event\u0027 but the format is incorrect,"},{"lineNumber":115,"author":{"gitId":"Cheng20010201"},"content":"     * an exception will be thrown."},{"lineNumber":116,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"Cheng20010201"},"content":"    private Event getEvent(String userInput) throws Exception {"},{"lineNumber":118,"author":{"gitId":"Cheng20010201"},"content":"        String[] split \u003d userInput.split(\"\\\\s+/at\\\\s+\");"},{"lineNumber":119,"author":{"gitId":"Cheng20010201"},"content":"        String date \u003d split[1]; // Assume the argument is correct, or an Exception will be thrown."},{"lineNumber":120,"author":{"gitId":"Cheng20010201"},"content":"        userInput \u003d split[0];"},{"lineNumber":121,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":122,"author":{"gitId":"Cheng20010201"},"content":"        int index \u003d userInput.indexOf(\"event\") + 5;"},{"lineNumber":123,"author":{"gitId":"Cheng20010201"},"content":"        while (userInput.charAt(index) \u003d\u003d \u0027 \u0027) {"},{"lineNumber":124,"author":{"gitId":"Cheng20010201"},"content":"            index++;"},{"lineNumber":125,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"Cheng20010201"},"content":"        String content \u003d userInput.substring(index);"},{"lineNumber":127,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":128,"author":{"gitId":"Cheng20010201"},"content":"        return new Event(content, LocalDate.parse(date));"},{"lineNumber":129,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":131,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":132,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"Cheng20010201"},"content":"     * Extracts a todo object out of the user input string."},{"lineNumber":134,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"Cheng20010201"},"content":"     * @param userInput User input string."},{"lineNumber":136,"author":{"gitId":"Cheng20010201"},"content":"     * @return The todo object, as specified by the user input string."},{"lineNumber":137,"author":{"gitId":"Cheng20010201"},"content":"     * @throws Exception If the user input string starts with \u0027todo\u0027 but the format is incorrect,"},{"lineNumber":138,"author":{"gitId":"Cheng20010201"},"content":"     * an exception will be thrown."},{"lineNumber":139,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"Cheng20010201"},"content":"    private ToDo getToDo(String userInput) throws Exception {"},{"lineNumber":141,"author":{"gitId":"Cheng20010201"},"content":"        int index \u003d userInput.indexOf(\"todo\") + 4;"},{"lineNumber":142,"author":{"gitId":"Cheng20010201"},"content":"        while (userInput.charAt(index) \u003d\u003d \u0027 \u0027) {"},{"lineNumber":143,"author":{"gitId":"Cheng20010201"},"content":"            index++;"},{"lineNumber":144,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":146,"author":{"gitId":"Cheng20010201"},"content":"        return new ToDo(userInput.substring(index));"},{"lineNumber":147,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":148}},{"path":"src/main/java/lihua/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.storage;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import java.io.Reader;"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONArray;"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONObject;"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.parser.JSONParser;"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Deadline;"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Event;"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Task;"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.Tasks;"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"import lihua.tasks.ToDo;"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"public class Storage {"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    /** Default path in which the task data is stored */"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    public static final String DATA_PATH \u003d \"data/lihua.json\";"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes an storage instance."},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    public Storage() {"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"     * Loads the tasks from hard disk."},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"     * @return The task list object, generated from data extracted from hard disk."},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    public Tasks load() {"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"        Tasks tasks \u003d new Tasks();"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"            // will create a file in the path, in case the file does not exist"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"            File fileChecker \u003d new File(DATA_PATH);"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"            if (!fileChecker.exists()) {"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"                fileChecker.getParentFile().mkdir();"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"                fileChecker.createNewFile();"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"                return tasks;"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"            JSONParser parser \u003d new JSONParser();"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"            Reader reader \u003d new FileReader(DATA_PATH);"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"            JSONArray jsonArray \u003d (JSONArray) parser.parse(reader);"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"            for (int i \u003d 0; i \u003c jsonArray.size(); i++) {"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"                JSONObject jsonObject \u003d (JSONObject) jsonArray.get(i);"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"                String type \u003d (String) jsonObject.get(\"type\");"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"                String description \u003d (String) jsonObject.get(\"description\");"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"                boolean isDone \u003d (boolean) jsonObject.get(\"isDone\");"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"                Task t \u003d null;"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"                // either one of the cases will be entered"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"                // \u003c-\u003e t will not be null"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"                if (type.equals(\"todo\")) {"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"                    t \u003d new ToDo(description);"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"                } else {"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"                    LocalDate time \u003d LocalDate.parse((String) jsonObject.get(\"time\"));"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"                    if (type.equals(\"deadline\")) {"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"                        t \u003d new Deadline(description, time);"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"                    } else if (type.equals(\"event\")) {"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"                        t \u003d new Event(description, time);"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"                    }"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"                // t will not result in NPE"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"                t.setDone(isDone);"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"                tasks.addTask(t);"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"        } catch (Exception e) {"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"            System.out.println(\"Something bad happens, cannot load data. :\u0027)\");"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"        return tasks;"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"     * Saves the tasks configuration to hard disk. The new data will overwrite old data."},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"     * @param tasks The tasks configuration to be saved in hard disk."},{"lineNumber":83,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"    public void saveTasks(Tasks tasks) {"},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":"        JSONArray jsonArray \u003d tasks.getJsonArray();"},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":87,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":"            File fileToCreate \u003d new File(DATA_PATH);"},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"            fileToCreate.getParentFile().mkdir();"},{"lineNumber":90,"author":{"gitId":"Cheng20010201"},"content":"            fileToCreate.createNewFile();"},{"lineNumber":91,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":92,"author":{"gitId":"Cheng20010201"},"content":"            FileWriter fileWriter \u003d new FileWriter(DATA_PATH);"},{"lineNumber":93,"author":{"gitId":"Cheng20010201"},"content":"            fileWriter.write(jsonArray.toJSONString());"},{"lineNumber":94,"author":{"gitId":"Cheng20010201"},"content":"            fileWriter.close();"},{"lineNumber":95,"author":{"gitId":"Cheng20010201"},"content":"        } catch (IOException e) {"},{"lineNumber":96,"author":{"gitId":"Cheng20010201"},"content":"            System.out.println(\"Sorry, this task cannot be saved right now. :\u0027)\");"},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":99}},{"path":"src/main/java/lihua/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.tasks;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONObject;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":" * Represents a lihua.tasks.Deadline item, which is a child of lihua.tasks.Task"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"public class Deadline extends Task {"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    private final LocalDate by;"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a lihua.tasks.Deadline item with a given end time"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"     * @param name The name of the deadline"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     * @param by The end time of the item, assumed to be \u0027yyyy-mm-dd\u0027"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    public Deadline(String name, LocalDate by) {"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"        super(name);"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"        this.by \u003d by;"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     * Gets the date of the deadline."},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"     * @return The date of the deadline."},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    public LocalDate getDate() {"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"        return by;"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"     * toString method overriding the one in class lihua.tasks.Task"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"     * @return a user-friendly String representation of the lihua.tasks.Deadline item"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"        String doneMark \u003d isDone ? \"X\" : \" \";"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", doneMark, name,"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"                by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")));"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"     * Wraps the deadline object inside a json object to be stored in hard disk."},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"     * @return The json object representing the deadline object."},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"    public JSONObject toJsonObject() {"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"        JSONObject jsonObject \u003d new JSONObject();"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"type\", \"deadline\");"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"isDone\", isDone);"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"description\", name);"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"time\", by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"        return jsonObject;"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":60}},{"path":"src/main/java/lihua/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.tasks;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONObject;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":" * Represent an lihua.tasks.Event item, which is a child of lihua.tasks.Task"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"public class Event extends Task {"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    /** The date of the event */"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    private final LocalDate period;"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"     * Initialize an lihua.tasks.Event with a time period"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"     * @param name The name of the event"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     * @param period The date of the event, assumed to be \u0027yyyy-mm-dd\u0027"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    public Event(String name, LocalDate period) {"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"        super(name);"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"        this.period \u003d period;"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     * Gets the date of the event."},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"     * @return The date of the event."},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    public LocalDate getDate() {"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"        return period;"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"     * toString method overriding the one in class lihua.tasks.Task"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"     * @return a user-friendly String representation of the lihua.tasks.Event item"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"        String doneMark \u003d isDone ? \"X\" : \" \";"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"        return String.format(\"[E][%s] %s (at: %s)\", doneMark, name,"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"                period.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")));"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"     * Wraps the event object inside a json object to be stored in hard disk."},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"     * @return The json obejct representing the deadline object."},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"    public JSONObject toJsonObject() {"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"        JSONObject jsonObject \u003d new JSONObject();"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"type\", \"event\");"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"isDone\", isDone);"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"description\", name);"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"time\", period.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"        return jsonObject;"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":60}},{"path":"src/main/java/lihua/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.tasks;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONObject;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":" * Represent a task in the task list"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"public class Task {"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    /** The name/description/content of the task */"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    protected String name;"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    /** Indicator of whether the task is done or not */"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    protected boolean isDone;"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"     * Initialize a new undone task"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     * @param name Name of the task"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    public Task(String name) {"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"        this.name \u003d name;"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"        isDone \u003d false;"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     * Set the status of the task; e.g. done or not done"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"     * @param isDone the status to set to the task"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    public void setDone(boolean isDone) {"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"    public String getName() {"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"        return name;"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"     * Gets the date for the class."},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"     * @return NULL as this is a dummy method."},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"    public LocalDate getDate() {"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"        return null;"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"     * toString method overriding its predefined one"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"     * @return a user-friendly String representation of the task"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"        String doneMark \u003d isDone ? \"X\" : \" \";"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"        return String.format(\"[%s] %s\", doneMark, name);"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"     * Wraps the task object inside a json object to be stored in hard disk."},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"     * @return NULL as this is a dummy method."},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"    public JSONObject toJsonObject() {"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"        return null;"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":64}},{"path":"src/main/java/lihua/tasks/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.tasks;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONArray;"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":" * Store all the tasks in a list DS"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"public class Tasks {"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    private final List\u003cTask\u003e tasks;"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes the task list with an empty ArrayList"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    public Tasks() {"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"     * Adds a task to the task list."},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"     * @param t The task object to be added to the list."},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    public void addTask(Task t) {"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"        tasks.add(t);"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"     * Removes the task from the list at a specific index."},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"     * @param i The index of the task to be deleted."},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"     * @return The task that gets deleted."},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"     * @throws IndexOutOfBoundsException If the i specified is invalid for the list."},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"    public Task removeTask(int i) throws IndexOutOfBoundsException {"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"        return tasks.remove(i - 1);"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"     * Retrieves the task from the list at a specific index."},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"     * @param i The index of the task to be retrieved."},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"     * @return The task at index i."},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"     * @throws IndexOutOfBoundsException If the i specified is invalid for the list."},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"    public Task getTaskDone(int i) throws IndexOutOfBoundsException {"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"        tasks.get(i - 1).setDone(true);"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"        return tasks.get(i - 1);"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"     * Finds tasks by a given keyword."},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"     * @param keyWord The keyword specified."},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"     * @return A readable string representation of all tasks whose name contain the keyword as part of the substring."},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"    public String listTasks(String keyWord) {"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"        String message \u003d \"\";"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"        // tasks is not null, but maybe empty"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"            if (tasks.get(i - 1).getName().toLowerCase().contains(keyWord.toLowerCase())) {"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"                message +\u003d String.format(\"%d. %s\\n\", i, tasks.get(i - 1));"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"        if (message.equals(\"\")) {"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"            message \u003d String.format(\"Tasks containing \u0027%s\u0027 do not exist :\u0027)\", keyWord);"},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"        } else {"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"            message \u003d String.format(\"Here are all your tasks containing \u0027%s\u0027:\\n%sGood luck. :D\", keyWord, message);"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"        return message;"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"Cheng20010201"},"content":"     * Lists down the content of the list in a readable string manner."},{"lineNumber":78,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"Cheng20010201"},"content":"     * @param date The date on which the tasks is expected to be finished."},{"lineNumber":80,"author":{"gitId":"Cheng20010201"},"content":"     * @return If the specified date is null, returns the string representation for all tasks;"},{"lineNumber":81,"author":{"gitId":"Cheng20010201"},"content":"     * if the specified date is not null, returns the string representation of all the tasks on the date."},{"lineNumber":82,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"Cheng20010201"},"content":"    public String listTasks(LocalDate date) {"},{"lineNumber":84,"author":{"gitId":"Cheng20010201"},"content":"        String message \u003d \"\";"},{"lineNumber":85,"author":{"gitId":"Cheng20010201"},"content":"        // tasks is not null, but maybe empty"},{"lineNumber":86,"author":{"gitId":"Cheng20010201"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":87,"author":{"gitId":"Cheng20010201"},"content":"            if (date !\u003d null) {"},{"lineNumber":88,"author":{"gitId":"Cheng20010201"},"content":"                // list on a specific date"},{"lineNumber":89,"author":{"gitId":"Cheng20010201"},"content":"                // date is not null here"},{"lineNumber":90,"author":{"gitId":"Cheng20010201"},"content":"                if (date.equals(tasks.get(i - 1).getDate())) {"},{"lineNumber":91,"author":{"gitId":"Cheng20010201"},"content":"                    // getDate() is not null here"},{"lineNumber":92,"author":{"gitId":"Cheng20010201"},"content":"                    message +\u003d String.format(\"%d. %s\\n\", i, tasks.get(i - 1));"},{"lineNumber":93,"author":{"gitId":"Cheng20010201"},"content":"                }"},{"lineNumber":94,"author":{"gitId":"Cheng20010201"},"content":"            } else {"},{"lineNumber":95,"author":{"gitId":"Cheng20010201"},"content":"                message +\u003d String.format(\"%d. %s\\n\", i, tasks.get(i - 1));"},{"lineNumber":96,"author":{"gitId":"Cheng20010201"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"Cheng20010201"},"content":"        if (message.equals(\"\")) {"},{"lineNumber":99,"author":{"gitId":"Cheng20010201"},"content":"            message \u003d \"You do not have any task right now. Please add one first. :\u0027)\";"},{"lineNumber":100,"author":{"gitId":"Cheng20010201"},"content":"        } else {"},{"lineNumber":101,"author":{"gitId":"Cheng20010201"},"content":"            message \u003d \"Here are all your tasks:\\n\" + message + \"Good luck. :D\";"},{"lineNumber":102,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"Cheng20010201"},"content":"        return message;"},{"lineNumber":104,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":106,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"Cheng20010201"},"content":"     * Wraps the task list object inside a json array to be stored in hard disk."},{"lineNumber":108,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"Cheng20010201"},"content":"     * @return The json array representing the task list."},{"lineNumber":110,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"Cheng20010201"},"content":"    public JSONArray getJsonArray() {"},{"lineNumber":112,"author":{"gitId":"Cheng20010201"},"content":"        JSONArray jsonArray \u003d new JSONArray();"},{"lineNumber":113,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":114,"author":{"gitId":"Cheng20010201"},"content":"        for (Task t : tasks) {"},{"lineNumber":115,"author":{"gitId":"Cheng20010201"},"content":"            jsonArray.add(t.toJsonObject());"},{"lineNumber":116,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"Cheng20010201"},"content":"        return jsonArray;"},{"lineNumber":118,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":120,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"Cheng20010201"},"content":"     * Gets the current size of the task list."},{"lineNumber":122,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":123,"author":{"gitId":"Cheng20010201"},"content":"     * @return The size of the task list."},{"lineNumber":124,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"Cheng20010201"},"content":"    public int getSize() {"},{"lineNumber":126,"author":{"gitId":"Cheng20010201"},"content":"        return tasks.size();"},{"lineNumber":127,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":128}},{"path":"src/main/java/lihua/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.tasks;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import org.json.simple.JSONObject;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":" * Represent a lihua.tasks.ToDo item, which is a child of lihua.tasks.Task"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"public class ToDo extends Task {"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"     * Initialize a lihua.tasks.ToDo item"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"     * @param name The name of the item"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    public ToDo(String name) {"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"        super(name);"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"     * toString method overriding the one in class lihua.tasks.Task"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"     * @return a user-friendly String representation of the lihua.tasks.ToDo item"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"        String doneMark \u003d isDone ? \"X\" : \" \";"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"        return String.format(\"[T][%s] %s\", doneMark, name);"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"     * Wraps the todo object inside a json object to be stored in hard disk."},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"     * @return The json object representing the todo object."},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"    public JSONObject toJsonObject() {"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"        JSONObject jsonObject \u003d new JSONObject();"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"type\", \"todo\");"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"isDone\", isDone);"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"description\", name);"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"        jsonObject.put(\"time\", \"\");"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"        return jsonObject;"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":42}},{"path":"src/main/java/lihua/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.ui;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"        displayPicture.setImage(img);"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"    private void flip() {"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"        Collections.reverse(tmp);"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"     * Gets a dialog box object containing the bot response."},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"     * @param text Bot response."},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"     * @param img Bot img."},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"     * @return A new DialogBox containing the input information."},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"        return new DialogBox(text, img);"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"     * Gets a flipped dialog box object containing the human message."},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"     * @param text Human input."},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"     * @param img Human message content."},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"     * @return A new DialogBox containing the input information."},{"lineNumber":70,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"Cheng20010201"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":72,"author":{"gitId":"Cheng20010201"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":73,"author":{"gitId":"Cheng20010201"},"content":"        db.flip();"},{"lineNumber":74,"author":{"gitId":"Cheng20010201"},"content":"        return db;"},{"lineNumber":75,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":76}},{"path":"src/main/java/lihua/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.ui;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.Messages;"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"import lihua.main.Lihua;"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":" * Controller for lihua.ui.MainWindow. Provides the layout for the other controls."},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":" */"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    private Button sendButton;"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"    private Lihua lihua;"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/geisha-2-concrete.png\"));"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/geisha-concrete.png\"));"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"    public void initialize() {"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"     * Configures the bot with entity Lihua."},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"     * @param lihua The entity to be configured."},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"    public void setLihua(Lihua lihua) {"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"        this.lihua \u003d lihua;"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"        sendWelcomMessage();"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"     * Sends a welcome message to the user."},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"    public void sendWelcomMessage() {"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(Messages.MESSAGE_HELLO, dukeImage));"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"     * If the response is null, the application should exit."},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"    @FXML"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"    private void handleUserInput() {"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"        String response \u003d lihua.getResponse(input);"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":66,"author":{"gitId":"Cheng20010201"},"content":"        );"},{"lineNumber":67,"author":{"gitId":"Cheng20010201"},"content":"        userInput.clear();"},{"lineNumber":68,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":69}},{"path":"src/main/java/lihua/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.ui;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commands.CommandResult;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"import lihua.commons.Messages;"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    /** Scanner object to read user input string */"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"    private final Scanner sc;"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"     * Initializes a new Ui object with a Scanner object."},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    public Ui() {"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"     * Reads the user\u0027s next line of input string."},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"     * @return The user\u0027s input string."},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"    public String getUserInput() {"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"        return sc.nextLine();"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"     * Prints greeting message to the user when the user starts the application."},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"    public void printHello() {"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"        printHorizontalLine();"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"        System.out.println(Messages.MESSAGE_HELLO);"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"        printHorizontalLine();"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"     * Prints a line divider to the user."},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"    public void printHorizontalLine() {"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"        System.out.println(Messages.MESSAGE_LINE);"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"     * Prints the feedback after a command is executed to the user."},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"     * @param result The CommandResult object returned by a command\u0027s execution."},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"    public void showFeedbackToUser(CommandResult result) {"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"        printHorizontalLine();"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"        System.out.println(result.getFeedBack());"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"        printHorizontalLine();"},{"lineNumber":53,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":55,"author":{"gitId":"Cheng20010201"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"Cheng20010201"},"content":"     * Prints a string feedback to the user."},{"lineNumber":57,"author":{"gitId":"Cheng20010201"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"Cheng20010201"},"content":"     * @param feedback The feedback string."},{"lineNumber":59,"author":{"gitId":"Cheng20010201"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"Cheng20010201"},"content":"    public void showFeedbackToUser(String feedback) {"},{"lineNumber":61,"author":{"gitId":"Cheng20010201"},"content":"        printHorizontalLine();"},{"lineNumber":62,"author":{"gitId":"Cheng20010201"},"content":"        System.out.println(feedback);"},{"lineNumber":63,"author":{"gitId":"Cheng20010201"},"content":"        printHorizontalLine();"},{"lineNumber":64,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":65}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"0.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"75.0\" fitWidth\u003d\"75.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Cheng20010201":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"lihua.ui.MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" opacity\u003d\"0.93\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter your command here\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"         \u003cfont\u003e"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"            \u003cFont name\u003d\"Calibri\" size\u003d\"14.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"         \u003c/font\u003e\u003c/TextField\u003e"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#4d4a4a\"\u003e"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"         \u003cfont\u003e"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"            \u003cFont name\u003d\"System Bold\" size\u003d\"18.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"         \u003c/font\u003e\u003c/Button\u003e"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"            \u003ccontent\u003e"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"            \u003c/content\u003e"},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"    \u003c/children\u003e"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Cheng20010201":26}},{"path":"src/test/java/lihua/commands/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class AddCommandTest {"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public void commandDescription_noGivenInput_descriptionMatches() {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        String expected \u003d \"todo/deadline/event: add a task of a specific type to the task list.\\n\""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example 1: todo [task name]\\n\" + \"---- Example 2: deadline [task name] /by [yyyy-mm-dd]\\n\""},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example 3: event [task name] /at [yyyy-mm-dd]\";"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(expected, AddCommand.MESSAGE_USAGE);"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":15}},{"path":"src/test/java/lihua/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class DeleteCommandTest {"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public void commandDescription_noGivenInput_descriptionMatches() {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        String expected \u003d \"delete: Remove a specific task from the list.\\n\""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example: delete [valid index number]\";"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(expected, DeleteCommand.MESSAGE_USAGE);"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":14}},{"path":"src/test/java/lihua/commands/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class DoneCommandTest {"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public void commandDescription_noGivenInput_descriptionMatches() {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        String expected \u003d \"done: Get a specific task done.\\n\""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example: done [valid index number]\";"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(expected, DoneCommand.MESSAGE_USAGE);"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":14}},{"path":"src/test/java/lihua/commands/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class ExitCommandTest {"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public void commandDescription_noGivenInput_descriptionMatches() {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        String expected \u003d \"bye: Exit the application. Data will be auto-saved.\\n\""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example: bye\";"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(expected, ExitCommand.MESSAGE_USAGE);"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":14}},{"path":"src/test/java/lihua/commands/HelpCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class HelpCommandTest {"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public void commandDescription_noGivenInput_descriptionMatches() {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        String expected \u003d \"help: Shows application usage instructions.\\n\""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example: help\";"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(expected, HelpCommand.MESSAGE_USAGE);"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":14}},{"path":"src/test/java/lihua/commands/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commands;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class ListCommandTest {"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public void commandDescription_noGivenInput_descriptionMatches() {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        String expected \u003d \"list: List down all the tasks. \""},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"                + \"List down all the tasks on a specific date, if additional date argument is given\\n\""},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example 1: list\\n\""},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"                + \"---- Example 2: list [yyyy-mm-dd]\";"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(expected, ListCommand.MESSAGE_USAGE);"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":16}},{"path":"src/test/java/lihua/commons/MessagesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.commons;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class MessagesTest {"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_HELLO_EXPECTED \u003d"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"            \"Hello! My name is lihua.entry.Lihua.\\n\""},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"                    + \"What can I do for you today? (\u003dV\u003d)\";"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_GET_HELP_EXPECTED \u003d"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"            \"Sorry, I do not understand your command :\u0027)\\n\""},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"                    + \"If you are stuck, type \u0027help\u0027 to get a list of operations available.\";"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_LINE_EXPECTED \u003d"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"            \"-------------------------------------------------\";"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_INFORM_EXIT_EXPECTED \u003d"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"            \"Exiting lihua.entry.Lihua as requested...\\n\""},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"                    + \"Goodbye! Hope to see you again soon! (\u003dV\u003d)\";"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_REPORTING_ADDING_FAILURE_EXPECTED \u003d"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"            \"Sorry, the task adding failed. :( Please check your storage devices.\";"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_VIEW_COMMANDS_EXPECTED \u003d"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":"            \"No worries! Here are the commands available:\\n\""},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"                    + \"todo/deadline/event: add a task of a specific type to the task list.\\n\""},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example 1: todo [task name]\\n\" + \"---- Example 2: deadline [task name] /by [yyyy-mm-dd]\\n\""},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example 3: event [task name] /at [yyyy-mm-dd]\""},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + \"done: Get a specific task done.\\n\""},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example: done [valid index number]\""},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + \"delete: Remove a specific task from the list.\\n\""},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example: delete [valid index number]\""},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + \"list: List down all the tasks. \""},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"                    + \"List down all the tasks on a specific date, if additional date argument is given\\n\""},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example 1: list\\n\""},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example 2: list [yyyy-mm-dd]\""},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + \"find: List down all the tasks containing the key word specified.\""},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + \"help: Shows application usage instructions.\\n\""},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example: help\""},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"                    + \"\\n\" + \"bye: Exit the application. Data will be auto-saved.\\n\""},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"                    + \"---- Example: bye\";"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"    public static final String MESSAGE_REPORTING_INVALID_INDEX_EXPECTED \u003d"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"            \"Sorry, the index you specified does not exist :\u0027), \""},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"                    + \"please type \u0027list\u0027 to see available indices to delete.\";"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"    public void messagesContent_noGivenInput_contentMatches() {"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(MESSAGE_HELLO_EXPECTED, Messages.MESSAGE_HELLO);"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(MESSAGE_GET_HELP_EXPECTED, Messages.MESSAGE_GET_HELP);"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(MESSAGE_LINE_EXPECTED, Messages.MESSAGE_LINE);"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(MESSAGE_INFORM_EXIT_EXPECTED, Messages.MESSAGE_INFORM_EXIT);"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(MESSAGE_REPORTING_ADDING_FAILURE_EXPECTED, Messages.MESSAGE_REPORTING_ADDING_FAILURE);"},{"lineNumber":49,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(MESSAGE_VIEW_COMMANDS_EXPECTED, Messages.MESSAGE_VIEW_COMMANDS);"},{"lineNumber":50,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(MESSAGE_REPORTING_INVALID_INDEX_EXPECTED, Messages.MESSAGE_REPORTING_INVALID_INDEX);"},{"lineNumber":51,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":52}},{"path":"src/test/java/lihua/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.tasks;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"public class DeadlineTest {"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":4}},{"path":"src/test/java/lihua/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.tasks;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"public class EventTest {"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":4}},{"path":"src/test/java/lihua/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"package lihua.tasks;"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"public class ToDoTest {"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"    public void toString_normalInitialization_success() {"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"        ToDo t \u003d new ToDo(\"I am a todo object.\");"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"        assertEquals(\"[T][ ] I am a todo object.\", t.toString());"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"}"}],"authorContributionMap":{"Cheng20010201":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cheng20010201"},"content":"todo a"},{"lineNumber":2,"author":{"gitId":"Cheng20010201"},"content":"todo a b c"},{"lineNumber":3,"author":{"gitId":"Cheng20010201"},"content":"todo"},{"lineNumber":4,"author":{"gitId":"Cheng20010201"},"content":"todo"},{"lineNumber":5,"author":{"gitId":"Cheng20010201"},"content":"todos haha"},{"lineNumber":6,"author":{"gitId":"Cheng20010201"},"content":"list"},{"lineNumber":7,"author":{"gitId":"Cheng20010201"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"Cheng20010201"},"content":"list"},{"lineNumber":9,"author":{"gitId":"Cheng20010201"},"content":"done 999"},{"lineNumber":10,"author":{"gitId":"Cheng20010201"},"content":"done -1"},{"lineNumber":11,"author":{"gitId":"Cheng20010201"},"content":"deadline have fun /by Sunday 10pm"},{"lineNumber":12,"author":{"gitId":"Cheng20010201"},"content":"deadline cook /by Sunday"},{"lineNumber":13,"author":{"gitId":"Cheng20010201"},"content":"deadline wrong /byy Monday"},{"lineNumber":14,"author":{"gitId":"Cheng20010201"},"content":"deadlinewrong /by Sunday"},{"lineNumber":15,"author":{"gitId":"Cheng20010201"},"content":"event party /at Sunday 2-4 pm"},{"lineNumber":16,"author":{"gitId":"Cheng20010201"},"content":"event wrong /by Sunday"},{"lineNumber":17,"author":{"gitId":"Cheng20010201"},"content":"events wrong /by Sunday"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"list"},{"lineNumber":19,"author":{"gitId":"Cheng20010201"},"content":"wrong"},{"lineNumber":20,"author":{"gitId":"Cheng20010201"},"content":"wrong message"},{"lineNumber":21,"author":{"gitId":"Cheng20010201"},"content":"very wrong message"},{"lineNumber":22,"author":{"gitId":"Cheng20010201"},"content":""},{"lineNumber":23,"author":{"gitId":"Cheng20010201"},"content":"."},{"lineNumber":24,"author":{"gitId":"Cheng20010201"},"content":"done 5"},{"lineNumber":25,"author":{"gitId":"Cheng20010201"},"content":"list"},{"lineNumber":26,"author":{"gitId":"Cheng20010201"},"content":"list all"},{"lineNumber":27,"author":{"gitId":"Cheng20010201"},"content":"list everything"},{"lineNumber":28,"author":{"gitId":"Cheng20010201"},"content":"done"},{"lineNumber":29,"author":{"gitId":"Cheng20010201"},"content":"done"},{"lineNumber":30,"author":{"gitId":"Cheng20010201"},"content":"done haha"},{"lineNumber":31,"author":{"gitId":"Cheng20010201"},"content":"done hahaha12345"},{"lineNumber":32,"author":{"gitId":"Cheng20010201"},"content":"done ha 123"},{"lineNumber":33,"author":{"gitId":"Cheng20010201"},"content":"delete"},{"lineNumber":34,"author":{"gitId":"Cheng20010201"},"content":"delete"},{"lineNumber":35,"author":{"gitId":"Cheng20010201"},"content":"deletes hah"},{"lineNumber":36,"author":{"gitId":"Cheng20010201"},"content":"delete abc"},{"lineNumber":37,"author":{"gitId":"Cheng20010201"},"content":"delete a b c"},{"lineNumber":38,"author":{"gitId":"Cheng20010201"},"content":"delete 5"},{"lineNumber":39,"author":{"gitId":"Cheng20010201"},"content":"delete 1"},{"lineNumber":40,"author":{"gitId":"Cheng20010201"},"content":"delete 4"},{"lineNumber":41,"author":{"gitId":"Cheng20010201"},"content":"delete 0"},{"lineNumber":42,"author":{"gitId":"Cheng20010201"},"content":"delete 3"},{"lineNumber":43,"author":{"gitId":"Cheng20010201"},"content":"delete 1"},{"lineNumber":44,"author":{"gitId":"Cheng20010201"},"content":"delete 1"},{"lineNumber":45,"author":{"gitId":"Cheng20010201"},"content":"delete 9"},{"lineNumber":46,"author":{"gitId":"Cheng20010201"},"content":"done 10"},{"lineNumber":47,"author":{"gitId":"Cheng20010201"},"content":"help"},{"lineNumber":48,"author":{"gitId":"Cheng20010201"},"content":"bye"}],"authorContributionMap":{"Cheng20010201":48}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"Cheng20010201"},"content":"java -classpath ..\\bin lihua.main.Lihua \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Cheng20010201":1,"-":20}}]
