[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":"    protected String period;"},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"    public Deadline(String description, String period) {"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"        this.period \u003d period;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + period + \")\";"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"import java.awt.*;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"    private static String separator \u003d \"____________________________________________________________\";"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"    private static ArrayList\u003cTask\u003e tasksList;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"    private static int counter;"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"    private static TaskType taskType;"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"    public enum TaskType {"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"        TODO, DEADLINE, EVENT, OTHER;"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"    private static void replyFormat(String reply) {"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"        System.out.println(separator + \"\\n\" + reply + \"\\n\" + separator);"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"    private static void greet() {"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"        replyFormat(greeting);"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"    private static void bye() {"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"        String byeMessage \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"        replyFormat(byeMessage);"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"    // Adds a task to tasksList"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"    private static void addTask(String promptDescription) {"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"        String[] strings;"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"        String systemMessage;"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"        String description;"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"        String period;"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"        Task newTask;"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"        switch (taskType) {"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"            case TODO:"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"                counter++;"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"                description \u003d promptDescription;"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"                newTask \u003d new ToDo(description);"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"                tasksList.add(newTask);"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"                systemMessage \u003d \"Got it. I\u0027ve added this task:\\n\" +  \"  \" + newTask + \"\\n\" + \"Now you have \""},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"                                            + counter + (counter \u003c\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\";"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"                break;"},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"            case DEADLINE:"},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":"                counter++;"},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":"                strings \u003d promptDescription.split(\" /by \");"},{"lineNumber":50,"author":{"gitId":"pngsebastian"},"content":"                description \u003d strings[0];"},{"lineNumber":51,"author":{"gitId":"pngsebastian"},"content":"                period \u003d strings[1];"},{"lineNumber":52,"author":{"gitId":"pngsebastian"},"content":"                newTask \u003d new Deadline(description, period);"},{"lineNumber":53,"author":{"gitId":"pngsebastian"},"content":"                tasksList.add(newTask);"},{"lineNumber":54,"author":{"gitId":"pngsebastian"},"content":"                systemMessage \u003d \"Got it. I\u0027ve added this task:\\n\" + \"  \" + newTask + \"\\n\" + \"Now you have \""},{"lineNumber":55,"author":{"gitId":"pngsebastian"},"content":"                                            + counter + (counter \u003c\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\";"},{"lineNumber":56,"author":{"gitId":"pngsebastian"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":58,"author":{"gitId":"pngsebastian"},"content":"            case EVENT:"},{"lineNumber":59,"author":{"gitId":"pngsebastian"},"content":"                counter++;"},{"lineNumber":60,"author":{"gitId":"pngsebastian"},"content":"                strings \u003d promptDescription.split(\" /at \");"},{"lineNumber":61,"author":{"gitId":"pngsebastian"},"content":"                description \u003d strings[0];"},{"lineNumber":62,"author":{"gitId":"pngsebastian"},"content":"                period \u003d strings[1];"},{"lineNumber":63,"author":{"gitId":"pngsebastian"},"content":"                newTask \u003d new Event(description, period);"},{"lineNumber":64,"author":{"gitId":"pngsebastian"},"content":"                tasksList.add(newTask);"},{"lineNumber":65,"author":{"gitId":"pngsebastian"},"content":"                systemMessage \u003d \"Got it. I\u0027ve added this task:\\n\" + \"  \" + newTask + \"\\n\" + \"Now you have \""},{"lineNumber":66,"author":{"gitId":"pngsebastian"},"content":"                                            + counter + (counter \u003c\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\";"},{"lineNumber":67,"author":{"gitId":"pngsebastian"},"content":"                break;"},{"lineNumber":68,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":69,"author":{"gitId":"pngsebastian"},"content":"            default:"},{"lineNumber":70,"author":{"gitId":"pngsebastian"},"content":"                systemMessage \u003d \"Task type not recognised. List of recognised task types:\\n\""},{"lineNumber":71,"author":{"gitId":"pngsebastian"},"content":"                                    + \"  1. todo (E.g. todo borrow book)\\n\""},{"lineNumber":72,"author":{"gitId":"pngsebastian"},"content":"                                        + \"  2. deadline (E.g. deadline return book /by Sunday\\n\""},{"lineNumber":73,"author":{"gitId":"pngsebastian"},"content":"                                            + \"  3. event (E.g. event project meeting /at Mon 2-4pm\";"},{"lineNumber":74,"author":{"gitId":"pngsebastian"},"content":"                break;"},{"lineNumber":75,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":77,"author":{"gitId":"pngsebastian"},"content":"        replyFormat(systemMessage);"},{"lineNumber":78,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":80,"author":{"gitId":"pngsebastian"},"content":"    // Marks a task as done and informs the user about it"},{"lineNumber":81,"author":{"gitId":"pngsebastian"},"content":"    private static void completeTask(int taskNo) {"},{"lineNumber":82,"author":{"gitId":"pngsebastian"},"content":"        if (taskNo \u003e 0 \u0026 taskNo \u003c\u003d tasksList.size()) {"},{"lineNumber":83,"author":{"gitId":"pngsebastian"},"content":"            Task taskToComplete \u003d tasksList.get(taskNo - 1);"},{"lineNumber":84,"author":{"gitId":"pngsebastian"},"content":"            taskToComplete.markAsDone();"},{"lineNumber":85,"author":{"gitId":"pngsebastian"},"content":"            String doneMessage \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + \"  \" + taskToComplete;"},{"lineNumber":86,"author":{"gitId":"pngsebastian"},"content":"            replyFormat(doneMessage);"},{"lineNumber":87,"author":{"gitId":"pngsebastian"},"content":"        } else {"},{"lineNumber":88,"author":{"gitId":"pngsebastian"},"content":"            replyFormat(\"Task \" + taskNo + \" is not in the task list!\");"},{"lineNumber":89,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":92,"author":{"gitId":"pngsebastian"},"content":"    // Displays all the tasks in tasksList to the user"},{"lineNumber":93,"author":{"gitId":"pngsebastian"},"content":"    private static void displayTasks(ArrayList\u003cTask\u003e tasksList) {"},{"lineNumber":94,"author":{"gitId":"pngsebastian"},"content":"        if (tasksList.size() \u003c\u003d 0) {"},{"lineNumber":95,"author":{"gitId":"pngsebastian"},"content":"            replyFormat(\"There are no tasks at the moment.\");"},{"lineNumber":96,"author":{"gitId":"pngsebastian"},"content":"        } else {"},{"lineNumber":97,"author":{"gitId":"pngsebastian"},"content":"            System.out.println(separator);"},{"lineNumber":98,"author":{"gitId":"pngsebastian"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":99,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":100,"author":{"gitId":"pngsebastian"},"content":"            for (int i \u003d 1; i \u003c\u003d tasksList.size(); i++) {"},{"lineNumber":101,"author":{"gitId":"pngsebastian"},"content":"                Task currentTask \u003d tasksList.get(i - 1);"},{"lineNumber":102,"author":{"gitId":"pngsebastian"},"content":"                System.out.println(i + \". \" + currentTask);"},{"lineNumber":103,"author":{"gitId":"pngsebastian"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":105,"author":{"gitId":"pngsebastian"},"content":"            System.out.println(separator + \"\\n\");"},{"lineNumber":106,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":110,"author":{"gitId":"pngsebastian"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":111,"author":{"gitId":"pngsebastian"},"content":"        tasksList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":112,"author":{"gitId":"pngsebastian"},"content":"        counter \u003d 0;"},{"lineNumber":113,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":114,"author":{"gitId":"pngsebastian"},"content":"        greet();"},{"lineNumber":115,"author":{"gitId":"pngsebastian"},"content":"        String userInput \u003d sc.nextLine();"},{"lineNumber":116,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":117,"author":{"gitId":"pngsebastian"},"content":"        while (!userInput.equals(\"bye\")) {"},{"lineNumber":118,"author":{"gitId":"pngsebastian"},"content":"            String[] inputArray \u003d userInput.split(\" \", 2);"},{"lineNumber":119,"author":{"gitId":"pngsebastian"},"content":"            String prompt \u003d inputArray[0];"},{"lineNumber":120,"author":{"gitId":"pngsebastian"},"content":"            String promptDescription \u003d \"\";"},{"lineNumber":121,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":122,"author":{"gitId":"pngsebastian"},"content":"            if (inputArray.length \u003e 1) {"},{"lineNumber":123,"author":{"gitId":"pngsebastian"},"content":"                promptDescription \u003d inputArray[1];"},{"lineNumber":124,"author":{"gitId":"pngsebastian"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":126,"author":{"gitId":"pngsebastian"},"content":"            if (prompt.equals(\"list\")) {"},{"lineNumber":127,"author":{"gitId":"pngsebastian"},"content":"                displayTasks(tasksList);"},{"lineNumber":128,"author":{"gitId":"pngsebastian"},"content":"            } else if (prompt.equals(\"done\")) {"},{"lineNumber":129,"author":{"gitId":"pngsebastian"},"content":"                completeTask(Integer.valueOf(inputArray[1]));"},{"lineNumber":130,"author":{"gitId":"pngsebastian"},"content":"            } else {"},{"lineNumber":131,"author":{"gitId":"pngsebastian"},"content":"                if (prompt.equals(\"todo\")) {"},{"lineNumber":132,"author":{"gitId":"pngsebastian"},"content":"                    taskType \u003d TaskType.TODO;"},{"lineNumber":133,"author":{"gitId":"pngsebastian"},"content":"                } else if (prompt.equals(\"deadline\")) {"},{"lineNumber":134,"author":{"gitId":"pngsebastian"},"content":"                    taskType \u003d TaskType.DEADLINE;"},{"lineNumber":135,"author":{"gitId":"pngsebastian"},"content":"                } else if (prompt.equals(\"event\")) {"},{"lineNumber":136,"author":{"gitId":"pngsebastian"},"content":"                    taskType \u003d TaskType.EVENT;"},{"lineNumber":137,"author":{"gitId":"pngsebastian"},"content":"                } else {"},{"lineNumber":138,"author":{"gitId":"pngsebastian"},"content":"                    taskType \u003d TaskType.OTHER;"},{"lineNumber":139,"author":{"gitId":"pngsebastian"},"content":"                }"},{"lineNumber":140,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":141,"author":{"gitId":"pngsebastian"},"content":"                addTask(promptDescription);"},{"lineNumber":142,"author":{"gitId":"pngsebastian"},"content":"            }"},{"lineNumber":143,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":144,"author":{"gitId":"pngsebastian"},"content":"            taskType \u003d TaskType.OTHER;"},{"lineNumber":145,"author":{"gitId":"pngsebastian"},"content":"            userInput \u003d sc.nextLine();"},{"lineNumber":146,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":148,"author":{"gitId":"pngsebastian"},"content":"        bye();"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"pngsebastian":146,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":"    protected String period;"},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"    public Event(String description, String period) {"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"        this.period \u003d period;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + period + \")\";"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"    public void markAsDone() {"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"        this.isDone \u003d true;"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"    public String getStatusIcon() {"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"        return isDone ? \"[X]\" : \"[ ]\";"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"        return this.getStatusIcon() + \" \" + this.description;"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":22}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":"    protected String period;"},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"    public ToDo(String description) {"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"todo go through cs2103 weekly topics"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":"deadline cs2103 week 2 post-lecture quiz /by Thurs 2359"},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"deadline cs2103 week 2 project /by Thurs 2359"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"list"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"event cs2103 lecture /at Fri 2-4pm"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"event cs2103 tutorial /at Wed 5-6pm"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"blah"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"list"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"bye"}],"authorContributionMap":{"pngsebastian":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"pngsebastian":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"pngsebastian":1,"-":37}}]
