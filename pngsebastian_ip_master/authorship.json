[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"# \u003cspan style\u003d\"color:darkorange\"\u003eDuke\u003c/span\u003e"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":"As part of CS2103 Software Engineering, this project aims to build a product named Duke, a personal assistant chatbot that helps a person to keep track of various tasks, such as"},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"deadlines, events and todos. The user guide can be found [here.](https://pngsebastian.github.io/ip/) \u003cbr\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"![](docs/Ui.png)"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"---"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"## \u003ca id\u003d\"commandSummary\"\u003e\u003c/a\u003e \u003cspan style\u003d\"color:darkorange\"\u003eCommand Summary\u003c/span\u003e"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"\u003ctable\u003e"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"    \u003cth\u003eCommand\u003c/th\u003e"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"    \u003cth\u003eFormat, Examples\u003c/th\u003e"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003cstrong\u003eBye\u003c/strong\u003e\u003c/td\u003e"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003ebye\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003cstrong\u003eDeadline\u003c/strong\u003e\u003c/td\u003e"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003edeadline DESCRIPTION /by DATE\u003c/code\u003e \u003cbr /\u003e e.g. \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003edeadline return book /by 2021-02-04\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003cstrong\u003eDelete\u003c/strong\u003e\u003c/td\u003e"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003edelete INDEX\u003c/code\u003e \u003cbr /\u003e e.g. \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003edelete 2\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003cstrong\u003eDone\u003c/strong\u003e\u003c/td\u003e"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003edone INDEX\u003c/code\u003e \u003cbr /\u003e e.g. \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003edone 2\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003cstrong\u003eEvent\u003c/strong\u003e\u003c/td\u003e"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003eevent DESCRIPTION /at DATE\u003c/code\u003e \u003cbr /\u003e e.g. \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003eevent project meeting /at 2021-03-05\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003cstrong\u003eFind\u003c/strong\u003e\u003c/td\u003e"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003efind KEYWORD\u003c/code\u003e \u003cbr /\u003e e.g. \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003efind book\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003cstrong\u003eHelp\u003c/strong\u003e\u003c/td\u003e"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003ehelp\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003cstrong\u003eList\u003c/strong\u003e\u003c/td\u003e"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003elist\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003cstrong\u003eTodo\u003c/strong\u003e\u003c/td\u003e"},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003etodo DESCRIPTION\u003c/code\u003e \u003cbr /\u003e e.g. \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003etodo borrow book\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":50,"author":{"gitId":"pngsebastian"},"content":"\u003c/table\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"pngsebastian"},"content":"---"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"pngsebastian"},"content":"# \u003ca id\u003d\"acknowledgements\"\u003e\u003c/a\u003e \u003cspan style\u003d\"color:darkorange\"\u003e Acknowledgements \u003c/span\u003e"},{"lineNumber":55,"author":{"gitId":"pngsebastian"},"content":"\u003cdiv\u003eIcons made by \u003ca href\u003d\"https://www.freepik.com\" title\u003d\"Freepik\"\u003eFreepik\u003c/a\u003e from \u003ca href\u003d\"https://www.flaticon.com/\" title\u003d\"Flaticon\"\u003ewww.flaticon.com\u003c/a\u003e\u003c/div\u003e"}],"authorContributionMap":{"pngsebastian":51,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"}"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"}"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"}"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"}"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":"}"},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":50,"author":{"gitId":"pngsebastian"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"pngsebastian"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"pngsebastian"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"pngsebastian"},"content":"}"},{"lineNumber":54,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":55,"author":{"gitId":"pngsebastian"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"pngsebastian"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"pngsebastian"},"content":"}"},{"lineNumber":58,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":59,"author":{"gitId":"pngsebastian"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"pngsebastian"},"content":"    enableAssertions \u003d true;"},{"lineNumber":61,"author":{"gitId":"pngsebastian"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":62}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":"Duke is a personal assistant chatbot that helps you to keep track of various tasks, such as"},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"deadlines, events and todos."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"- [Quick start](#quickStart)"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"- [Features](#features)"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"    - [Viewing help: `help`](#help)"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"    - [Adding a todo: `todo`](#todo)"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"    - [Adding a deadline: `deadline`](#deadline)"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"    - [Adding an event: `event`](#event)"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"    - [Listing all tasks: `list`](#list)"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"    - [Marking a task as done: `done`](#done)"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"    - [Locating tasks by keyword: `find`](#find)"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"    - [Deleting a task: `delete`](#delete)"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"    - [Exiting the program: `bye`](#bye)"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"- [Command summary](#commandSummary)"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"- [Acknowledgements](#acknowledgements)"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"---"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"## \u003ca id\u003d\"quickStart\"\u003e\u003c/a\u003e \u003cspan style\u003d\"color:darkorange\"\u003eQuick start\u003c/span\u003e"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"1. Ensure you have Java `11` or above installed in your computer."},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"2. Download the latest `jar` from [here](https://github.com/pngsebastian/ip/releases)"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your Duke"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"4. Double-click the file to start the app. The GUI should appear in a few seconds."},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"5. Type the command in the command box and press Enter to execute it."},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"6. Refer to the [Features](#features) below for details of each command."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"---"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"## \u003ca id\u003d\"features\"\u003e\u003c/a\u003e \u003cspan style\u003d\"color:darkorange\"\u003eFeatures\u003c/span\u003e"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"\u003e#### Notes about the command format:"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"\u003e- Words in `UPPER_CASE` are the parameters to be supplied by the user. \u003cbr\u003e"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"  e.g in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as \u003cbr\u003e"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"  `todo homework`."},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"### \u003ca id\u003d\"help\"\u003e\u003c/a\u003e \u003cspan style\u003d\"color:darkorange\"\u003eViewing help: `help`\u003c/span\u003e"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"Shows a message with all recognised commands and their formats. \u003cbr\u003e"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"Format: `help` \u003cbr\u003e"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"Expected output: \u003cbr\u003e"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"![](screenshots/help.png)"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"### \u003ca id\u003d\"todo\"\u003e\u003c/a\u003e \u003cspan style\u003d\"color:darkorange\"\u003eAdding a todo: `todo`\u003c/span\u003e"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"Adds a todo to the task list. \u003cbr\u003e"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"Format: `todo DESCRIPTION` \u003cbr\u003e"},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"Example of usage: \u003cbr\u003e"},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"`todo borrow book` \u003cbr\u003e"},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":"Expected output: \u003cbr\u003e"},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":"![](screenshots/todo.png)"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"pngsebastian"},"content":"### \u003ca id\u003d\"deadline\"\u003e\u003c/a\u003e \u003cspan style\u003d\"color:darkorange\"\u003eAdding a deadline: `deadline`\u003c/span\u003e"},{"lineNumber":52,"author":{"gitId":"pngsebastian"},"content":"Adds a deadline to the task list. \u003cbr\u003e"},{"lineNumber":53,"author":{"gitId":"pngsebastian"},"content":"Format: `deadline DESCRIPTION /by DATE` \u003cbr\u003e"},{"lineNumber":54,"author":{"gitId":"pngsebastian"},"content":"- The date **must be in the format of `YYYY-MM-DD`**"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"pngsebastian"},"content":"Example of usage: \u003cbr\u003e"},{"lineNumber":57,"author":{"gitId":"pngsebastian"},"content":"`deadline return book /by 2021-02-04` \u003cbr\u003e"},{"lineNumber":58,"author":{"gitId":"pngsebastian"},"content":"Expected output: \u003cbr\u003e"},{"lineNumber":59,"author":{"gitId":"pngsebastian"},"content":"![](screenshots/deadline.png)"},{"lineNumber":60,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":61,"author":{"gitId":"pngsebastian"},"content":"### \u003ca id\u003d\"event\"\u003e\u003c/a\u003e \u003cspan style\u003d\"color:darkorange\"\u003eAdding an event: `event`\u003c/span\u003e"},{"lineNumber":62,"author":{"gitId":"pngsebastian"},"content":"Adds an event to the task list. \u003cbr\u003e"},{"lineNumber":63,"author":{"gitId":"pngsebastian"},"content":"Format: `event DESCRIPTION /at DATE` \u003cbr\u003e"},{"lineNumber":64,"author":{"gitId":"pngsebastian"},"content":"- The date **must be in the format of `YYYY-MM-DD`**"},{"lineNumber":65,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":66,"author":{"gitId":"pngsebastian"},"content":"Example of usage: \u003cbr\u003e"},{"lineNumber":67,"author":{"gitId":"pngsebastian"},"content":"`event project meeting /at 2021-03-05` \u003cbr\u003e"},{"lineNumber":68,"author":{"gitId":"pngsebastian"},"content":"Expected output: \u003cbr\u003e"},{"lineNumber":69,"author":{"gitId":"pngsebastian"},"content":"![](screenshots/event.png)"},{"lineNumber":70,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":71,"author":{"gitId":"pngsebastian"},"content":"### \u003ca id\u003d\"list\"\u003e\u003c/a\u003e \u003cspan style\u003d\"color:darkorange\"\u003eListing all tasks: `list`\u003c/span\u003e"},{"lineNumber":72,"author":{"gitId":"pngsebastian"},"content":"Shows a list of all the tasks in the task list. \u003cbr\u003e"},{"lineNumber":73,"author":{"gitId":"pngsebastian"},"content":"Format: `list` \u003cbr\u003e"},{"lineNumber":74,"author":{"gitId":"pngsebastian"},"content":"Expected output: \u003cbr\u003e"},{"lineNumber":75,"author":{"gitId":"pngsebastian"},"content":"![](screenshots/list.png)"},{"lineNumber":76,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":77,"author":{"gitId":"pngsebastian"},"content":"### \u003ca id\u003d\"done\"\u003e\u003c/a\u003e \u003cspan style\u003d\"color:darkorange\"\u003eMarking a task as done: `done`\u003c/span\u003e"},{"lineNumber":78,"author":{"gitId":"pngsebastian"},"content":"Marks the specified task from the task list as done. \u003cbr\u003e"},{"lineNumber":79,"author":{"gitId":"pngsebastian"},"content":"Format: `done INDEX`"},{"lineNumber":80,"author":{"gitId":"pngsebastian"},"content":"- Marks the task at the specified `INDEX` as done"},{"lineNumber":81,"author":{"gitId":"pngsebastian"},"content":"- The index refers to the index number shown in the displayed task list. \u003cbr\u003e"},{"lineNumber":82,"author":{"gitId":"pngsebastian"},"content":"- The index **must be a positive integer (E.g. 1, 2, 3...)** \u003cbr\u003e"},{"lineNumber":83,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":84,"author":{"gitId":"pngsebastian"},"content":"Example of usage: \u003cbr\u003e"},{"lineNumber":85,"author":{"gitId":"pngsebastian"},"content":"`done 2` \u003cbr\u003e"},{"lineNumber":86,"author":{"gitId":"pngsebastian"},"content":"Expected output: \u003cbr\u003e"},{"lineNumber":87,"author":{"gitId":"pngsebastian"},"content":"![](screenshots/done.png)"},{"lineNumber":88,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":89,"author":{"gitId":"pngsebastian"},"content":"### \u003ca id\u003d\"find\"\u003e\u003c/a\u003e \u003cspan style\u003d\"color:darkorange\"\u003eLocating tasks by keyword: `find`\u003c/span\u003e"},{"lineNumber":90,"author":{"gitId":"pngsebastian"},"content":"Finds tasks with names that contain the given keyword \u003cbr\u003e"},{"lineNumber":91,"author":{"gitId":"pngsebastian"},"content":"Format: `find KEYWORD` \u003cbr\u003e"},{"lineNumber":92,"author":{"gitId":"pngsebastian"},"content":"Example of usage: \u003cbr\u003e"},{"lineNumber":93,"author":{"gitId":"pngsebastian"},"content":"`find book` \u003cbr\u003e"},{"lineNumber":94,"author":{"gitId":"pngsebastian"},"content":"Expected output: \u003cbr\u003e"},{"lineNumber":95,"author":{"gitId":"pngsebastian"},"content":"![](screenshots/find.png)"},{"lineNumber":96,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":97,"author":{"gitId":"pngsebastian"},"content":"### \u003ca id\u003d\"delete\"\u003e\u003c/a\u003e \u003cspan style\u003d\"color:darkorange\"\u003eDeleting a task: `delete`\u003c/span\u003e"},{"lineNumber":98,"author":{"gitId":"pngsebastian"},"content":"Deletes the specified task from the task list. \u003cbr\u003e"},{"lineNumber":99,"author":{"gitId":"pngsebastian"},"content":"Format: `delete INDEX`"},{"lineNumber":100,"author":{"gitId":"pngsebastian"},"content":"- Deletes the task at the specified `INDEX`"},{"lineNumber":101,"author":{"gitId":"pngsebastian"},"content":"- The index refers to the index number shown in the displayed task list. \u003cbr\u003e"},{"lineNumber":102,"author":{"gitId":"pngsebastian"},"content":"- The index **must be a positive integer (E.g. 1, 2, 3...)** \u003cbr\u003e"},{"lineNumber":103,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":104,"author":{"gitId":"pngsebastian"},"content":"Example of usage: \u003cbr\u003e"},{"lineNumber":105,"author":{"gitId":"pngsebastian"},"content":"`delete 2` \u003cbr\u003e"},{"lineNumber":106,"author":{"gitId":"pngsebastian"},"content":"Expected output: \u003cbr\u003e"},{"lineNumber":107,"author":{"gitId":"pngsebastian"},"content":"![](screenshots/delete.png)"},{"lineNumber":108,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":109,"author":{"gitId":"pngsebastian"},"content":"### \u003ca id\u003d\"bye\"\u003e\u003c/a\u003e \u003cspan style\u003d\"color:darkorange\"\u003eExiting the program: `bye`\u003c/span\u003e"},{"lineNumber":110,"author":{"gitId":"pngsebastian"},"content":"Exits the program. \u003cbr\u003e"},{"lineNumber":111,"author":{"gitId":"pngsebastian"},"content":"Format: `bye` \u003cbr\u003e"},{"lineNumber":112,"author":{"gitId":"pngsebastian"},"content":"Expected output: \u003cbr\u003e"},{"lineNumber":113,"author":{"gitId":"pngsebastian"},"content":"![](screenshots/bye.png)"},{"lineNumber":114,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":115,"author":{"gitId":"pngsebastian"},"content":"---"},{"lineNumber":116,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":117,"author":{"gitId":"pngsebastian"},"content":"## \u003ca id\u003d\"commandSummary\"\u003e\u003c/a\u003e \u003cspan style\u003d\"color:darkorange\"\u003eCommand Summary\u003c/span\u003e"},{"lineNumber":118,"author":{"gitId":"pngsebastian"},"content":"\u003ctable\u003e"},{"lineNumber":119,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":120,"author":{"gitId":"pngsebastian"},"content":"    \u003cth\u003eCommand\u003c/th\u003e"},{"lineNumber":121,"author":{"gitId":"pngsebastian"},"content":"    \u003cth\u003eFormat, Examples\u003c/th\u003e"},{"lineNumber":122,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":123,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":124,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ca href\u003d\"#bye\"\u003e\u003cstrong\u003eBye\u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e"},{"lineNumber":125,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003ebye\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":126,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":127,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":128,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ca href\u003d\"#deadline\"\u003e\u003cstrong\u003eDeadline\u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e"},{"lineNumber":129,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003edeadline DESCRIPTION /by DATE\u003c/code\u003e \u003cbr /\u003e e.g. \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003edeadline return book /by 2021-02-04\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":130,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":131,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":132,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ca href\u003d\"#delete\"\u003e\u003cstrong\u003eDelete\u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e"},{"lineNumber":133,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003edelete INDEX\u003c/code\u003e \u003cbr /\u003e e.g. \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003edelete 2\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":134,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":135,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":136,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ca href\u003d\"#done\"\u003e\u003cstrong\u003eDone\u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e"},{"lineNumber":137,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003edone INDEX\u003c/code\u003e \u003cbr /\u003e e.g. \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003edone 2\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":138,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":139,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":140,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ca href\u003d\"#event\"\u003e\u003cstrong\u003eEvent\u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e"},{"lineNumber":141,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003eevent DESCRIPTION /at DATE\u003c/code\u003e \u003cbr /\u003e e.g. \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003eevent project meeting /at 2021-03-05\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":142,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":143,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":144,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ca href\u003d\"#find\"\u003e\u003cstrong\u003eFind\u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e"},{"lineNumber":145,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003efind KEYWORD\u003c/code\u003e \u003cbr /\u003e e.g. \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003efind book\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":146,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":147,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":148,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ca href\u003d\"#help\"\u003e\u003cstrong\u003eHelp\u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e"},{"lineNumber":149,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003ehelp\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":150,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":151,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":152,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ca href\u003d\"#list\"\u003e\u003cstrong\u003eList\u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e"},{"lineNumber":153,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003elist\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":154,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":155,"author":{"gitId":"pngsebastian"},"content":"  \u003ctr\u003e"},{"lineNumber":156,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ca href\u003d\"#todo\"\u003e\u003cstrong\u003eTodo\u003c/strong\u003e\u003c/a\u003e\u003c/td\u003e"},{"lineNumber":157,"author":{"gitId":"pngsebastian"},"content":"    \u003ctd\u003e\u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003etodo DESCRIPTION\u003c/code\u003e \u003cbr /\u003e e.g. \u003ccode class\u003d\"language-plaintext highlighter-rouge\"\u003etodo borrow book\u003c/code\u003e\u003c/td\u003e"},{"lineNumber":158,"author":{"gitId":"pngsebastian"},"content":"  \u003c/tr\u003e"},{"lineNumber":159,"author":{"gitId":"pngsebastian"},"content":"\u003c/table\u003e"},{"lineNumber":160,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":161,"author":{"gitId":"pngsebastian"},"content":"---"},{"lineNumber":162,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":163,"author":{"gitId":"pngsebastian"},"content":"## \u003ca id\u003d\"acknowledgements\"\u003e\u003c/a\u003e \u003cspan style\u003d\"color:darkorange\"\u003e Acknowledgements \u003c/span\u003e"},{"lineNumber":164,"author":{"gitId":"pngsebastian"},"content":"\u003cdiv\u003eIcons made by \u003ca href\u003d\"https://www.freepik.com\" title\u003d\"Freepik\"\u003eFreepik\u003c/a\u003e from \u003ca href\u003d\"https://www.flaticon.com/\" title\u003d\"Flaticon\"\u003ewww.flaticon.com\u003c/a\u003e\u003c/div\u003e"}],"authorContributionMap":{"pngsebastian":154,"-":10}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":51,"author":{"gitId":"pngsebastian"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":53,"author":{"gitId":"pngsebastian"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"pngsebastian"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"pngsebastian"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":57,"author":{"gitId":"pngsebastian"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":59,"author":{"gitId":"pngsebastian"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"pngsebastian"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"pngsebastian"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"pngsebastian"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"pngsebastian"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":65,"author":{"gitId":"pngsebastian"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":67,"author":{"gitId":"pngsebastian"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"pngsebastian"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":70,"author":{"gitId":"pngsebastian"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":72,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":73,"author":{"gitId":"pngsebastian"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"pngsebastian"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":76,"author":{"gitId":"pngsebastian"},"content":":end"},{"lineNumber":77,"author":{"gitId":"pngsebastian"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"pngsebastian"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":80,"author":{"gitId":"pngsebastian"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"pngsebastian"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"pngsebastian"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"pngsebastian"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"pngsebastian"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":86,"author":{"gitId":"pngsebastian"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"pngsebastian"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":89,"author":{"gitId":"pngsebastian"},"content":":omega"}],"authorContributionMap":{"pngsebastian":89}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.Command;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"import duke.ui.DukeResponses;"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":" * class Duke"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represent a chatbot program that keeps track of tasks"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"public class Duke {"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"    private final String FILEPATH \u003d \"data/tasks.txt\";"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"    private Storage storage;"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"    private TaskList tasks;"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"    private DukeResponses dukeResponses;"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a new Duke program"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"    public Duke() {"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"        dukeResponses \u003d new DukeResponses();"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"        storage \u003d new Storage(FILEPATH);"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"            tasks \u003d new TaskList(storage.loadFile());"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"        } catch (DukeException e) {"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"            dukeResponses.showError(e);"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"     * getResponse: Generates a response from Duke based on inputs from the user"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"     * @param userInput"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"     * @return a response from Duke"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"    public String getResponse(String userInput) {"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"        assert userInput !\u003d null : \"user input should not be null\";"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"            Command c \u003d Parser.parse(userInput);"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"            return c.execute(tasks, dukeResponses, storage);"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"        } catch (DukeException e) {"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"            return dukeResponses.showError(e);"},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"pngsebastian"},"content":"     * getDukeResponses: Retrieves DukeResponses object"},{"lineNumber":51,"author":{"gitId":"pngsebastian"},"content":"     * @return DukeResponses"},{"lineNumber":52,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"pngsebastian"},"content":"    public DukeResponses getDukeResponses() {"},{"lineNumber":54,"author":{"gitId":"pngsebastian"},"content":"        return dukeResponses;"},{"lineNumber":55,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":56}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":" * class Launcher"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":" * Description: A launcher class to workaround classpath issues."},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"public class Launcher {"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"     * main procedure"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"     * @param args"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"    public static void main(String[] args) {"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.ui.MainWindow;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"import javafx.application.Application;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":" * class Main"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":" * Description: A GUI for Duke using FXML."},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"public class Main extends Application {"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"     * start: Starts the GUI for Duke"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"     * @param stage"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"    public void start(Stage stage) {"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"            stage.setTitle(\"Duke - Personal Assistant Chatbot\");"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"            stage.setScene(scene);"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showWelcome();"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"            stage.show();"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"            e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":39}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import duke.ui.DukeResponses;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":" * class ByeCommand"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represent an executable command that corresponds to the user input \"bye\""},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"public class ByeCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"     * execute: executes the command"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"     * @param tasks the list of tasks"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"     * @param dukeResponses"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"     * @param storage"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"     * @return goodbye message"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"    public String execute(TaskList tasks, DukeResponses dukeResponses, Storage storage) {"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"        return dukeResponses.showGoodbye();"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":23}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import duke.ui.DukeResponses;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":" * class Command"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":" * Description: An abstract class to represent executable user commands"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"public abstract class Command {"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"     * execute: executes the command"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"     * @param tasks the list of tasks"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"     * @param dukeResponses"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"     * @param storage"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"     * @return execution message"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"    public abstract String execute(TaskList tasks, DukeResponses dukeResponses, Storage storage);"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":21}},{"path":"src/main/java/duke/commands/CommandWord.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":" * class CommandWord"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":" * Description: A enumeration to represent all Commands recognised by Duke"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"public enum CommandWord {"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"    BYE, DEADLINE, DELETE, DONE, EVENT, FIND, HELP, LIST, TODO;"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":10}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.Deadline;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.Task;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"import duke.ui.DukeResponses;"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":" * class DeadlineCommand"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represent an executable command that corresponds to the user input \"deadline\""},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"public class DeadlineCommand extends Command{"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"    private String deadlineDescription;"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"    private String date;"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a new DeadlineCommand"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"     * @param deadlineDescription description of Deadline"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"     * @param date period of Deadline"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"    public DeadlineCommand(String deadlineDescription, String date) {"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"        this.deadlineDescription \u003d deadlineDescription;"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"        this.date \u003d date;"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"     * execute: executes the command"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"     * @param tasks the list of tasks"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"     * @param dukeResponses"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"     * @param storage"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"     * @return add deadline success message, or"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"     *         an error message"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"    public String execute(TaskList tasks, DukeResponses dukeResponses, Storage storage) {"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"            Task deadline \u003d new Deadline(deadlineDescription, date);"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"            tasks.addTask(deadline);"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"            storage.saveFile(tasks.getTaskList());"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"            return dukeResponses.showAddTask(deadline, tasks);"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"        } catch (DukeException e) {"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"            return dukeResponses.showError(e);"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":47}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"import duke.ui.DukeResponses;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":" * class DeleteCommand"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represent an executable command that corresponds to the user input \"delete\""},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"    private int index;"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a new DeleteCommand"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"     * @param index position of Task in TaskList to delete"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"    public DeleteCommand (int index) {"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"        this.index \u003d index;"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"     * execute: executes the command"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"     * @param tasks the list of tasks"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"     * @param dukeResponses"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"     * @param storage"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"     * @return delete task success message, or"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"     *         an error message"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"    public String execute(TaskList tasks, DukeResponses dukeResponses, Storage storage) {"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"            Task taskToDelete \u003d tasks.getTask(index);"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"            tasks.deleteTask(index);"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"            storage.saveFile(tasks.getTaskList());"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"            return dukeResponses.showDeleteTask(taskToDelete, tasks);"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"        } catch (DukeException e) {"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"            return dukeResponses.showError(e);"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":43}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"import duke.ui.DukeResponses;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":" * class DoneCommand"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represent an executable command that corresponds to the user input \"done\""},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"public class DoneCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"    private int index;"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a new DoneCommand"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"     * @param index position of Task in TaskList to mark as complete"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"    public DoneCommand (int index) {"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"        this.index \u003d index;"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"     * execute: executes the command"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"     * @param tasks the list of tasks"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"     * @param dukeResponses"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"     * @param storage"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"     * @return complete task success message, or"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"     *         an error message"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"    public String execute(TaskList tasks, DukeResponses dukeResponses, Storage storage) {"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"            Task taskToComplete \u003d tasks.getTask(index);"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"            tasks.completeTask(index);"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"            storage.saveFile(tasks.getTaskList());"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"            return dukeResponses.showCompleteTask(taskToComplete);"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"        } catch (DukeException e) {"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"            return dukeResponses.showError(e);"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":43}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.Event;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.Task;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"import duke.ui.DukeResponses;"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":" * class EventCommand"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represent an executable command that corresponds to the user input \"event\""},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"public class EventCommand extends Command{"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"    private String eventDescription;"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"    private String date;"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a new EventCommand"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"     * @param eventDescription description of Event"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"     * @param date period of Event"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"    public EventCommand(String eventDescription, String date) {"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"        this.eventDescription \u003d eventDescription;"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"        this.date \u003d date;"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"     * execute: executes the command"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"     * @param tasks the list of tasks"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"     * @param dukeResponses"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"     * @param storage"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"     * @return add event success message, or"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"     *         an error message"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"    public String execute(TaskList tasks, DukeResponses dukeResponses, Storage storage) {"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"            Task event \u003d new Event(eventDescription, date);"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"            tasks.addTask(event);"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"            storage.saveFile(tasks.getTaskList());"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"            return dukeResponses.showAddTask(event, tasks);"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"        } catch (DukeException e) {"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"            return dukeResponses.showError(e);"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":47}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"import duke.ui.DukeResponses;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":" * class FindCommand"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represent an executable command that corresponds to the user input \"find\""},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"public class FindCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"    private String keyword;"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a new EventCommand"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"     * @param keyword keyword to search for matching tasks"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"     * execute: executes the command"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"     * @param tasks the list of tasks"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"     * @param dukeResponses"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"     * @param storage"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"     * @return result of find task message"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"    public String execute(TaskList tasks, DukeResponses dukeResponses, Storage storage) {"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d tasks.findTask(keyword);"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"        return dukeResponses.showTaskList(filteredTasks, \"matching \");"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":37}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import duke.ui.DukeResponses;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":" * class HelpCommand"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represent an executable command that corresponds to the user input \"help\""},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"public class HelpCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"     * execute: executes the command"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"     * @param tasks the list of tasks"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"     * @param dukeResponses"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"     * @param storage"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"     * @return list of commands recognised by Duke"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"    public String execute(TaskList tasks, DukeResponses dukeResponses, Storage storage) {"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"        return dukeResponses.showCommands();"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":23}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"import duke.ui.DukeResponses;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":" * class ListCommand"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represent an executable command that corresponds to the user input \"list\""},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"public class ListCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"     * execute: executes the command"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"     * @param tasks the list of tasks"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"     * @param dukeResponses"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"     * @param storage"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"     * @return list of tasks"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"    public String execute(TaskList tasks, DukeResponses dukeResponses, Storage storage) {"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"        ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"        return dukeResponses.showTaskList(taskList, \"\");"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":27}},{"path":"src/main/java/duke/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.ToDo;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"import duke.ui.DukeResponses;"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":" * class ToDoCommand"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represent an executable command that corresponds to the user input \"todo\""},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"public class ToDoCommand extends Command{"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"    private String toDoDescription;"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a new ToDoCommand"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"     * @param toDoDescription description of ToDo"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"    public ToDoCommand(String toDoDescription) {"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"        this.toDoDescription \u003d toDoDescription;"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"     * execute: executes the command"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"     * @param tasks the list of tasks"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"     * @param dukeResponses"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"     * @param storage"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"     * @return add todo success message, or"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"     *         an error message"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"    public String execute(TaskList tasks, DukeResponses dukeResponses, Storage storage) {"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"            Task toDo \u003d new ToDo(toDoDescription);"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"            tasks.addTask(toDo);"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"            storage.saveFile(tasks.getTaskList());"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"            return dukeResponses.showAddTask(toDo, tasks);"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"        } catch (DukeException e) {"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"            return dukeResponses.showError(e);"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":44}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":" * class DukeException"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represents the exceptions in Duke"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"public class DukeException extends Exception {"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a new DukeException"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"     * @param message the error message"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"    public DukeException(String message) {"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"        super(message);"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"     * getMessage: retrieves error message"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"     * @return errorMessage"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"    public String getMessage() {"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"        String errorMessage \u003d \"OOPS!!! \" + super.getMessage();"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"        return errorMessage;"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":26}},{"path":"src/main/java/duke/exceptions/IncompleteInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.CommandWord;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":" * class IncompleteInputException"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represents a DukeException when the user input is incomplete"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"public class IncompleteInputException extends DukeException{"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"    private String errorMessage;"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a new IncompleteInputException"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"     * @param commandWord"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"    public IncompleteInputException(CommandWord commandWord) {"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"        super(\"\");"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"        switch(commandWord) {"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"        case DEADLINE:"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"            errorMessage \u003d \"Deadline description cannot be omitted!\";"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"            break;"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"        case DELETE:"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"            errorMessage \u003d \"Index of task to delete cannot be omitted!\";"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"            break;"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"        case DONE:"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"            errorMessage \u003d \"Index of task to be marked as done cannot be omitted!\";"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"            break;"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"        case EVENT:"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"            errorMessage \u003d \"Event description cannot be omitted!\";"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"            break;"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"        case FIND:"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"            errorMessage \u003d \"Keyword to find specific tasks cannot be omitted!\";"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"            break;"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"        case TODO:"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"            errorMessage \u003d \"ToDo description cannot be omitted!\";"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"            break;"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"        default:"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"            errorMessage \u003d \"Something went wrong with Duke!\";"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"     * getMessage: retrieves error message"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"     * @return errorMessage"},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":"    public String getMessage() {"},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":"        String updatedErrorMessage \u003d super.getMessage() + this.errorMessage;"},{"lineNumber":50,"author":{"gitId":"pngsebastian"},"content":"        return updatedErrorMessage;"},{"lineNumber":51,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":52}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":" * class InvalidCommandException"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represents a DukeException when the user inputs a command not recognised by Duke"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"public class InvalidCommandException extends DukeException {"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"    private String errorMessage;"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a new InvalidCommandException"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"    public InvalidCommandException () {"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"        super(\"\");"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"        errorMessage \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"                \"    Type \u003chelp\u003e for a list of commands that I recognise!\";"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"     * getMessage: retrieves error message"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"     * @return errorMessage"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"    public String getMessage() {"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"        String updatedErrorMessage \u003d super.getMessage() + this.errorMessage;"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"        return updatedErrorMessage;"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":29}},{"path":"src/main/java/duke/exceptions/InvalidInputFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.CommandWord;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":" * class InvalidInputFormatException"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represents a DukeException when the user input has an invalid format"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"public class InvalidInputFormatException extends DukeException {"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"    private String errorMessage;"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a new InvalidInputFormatException"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"     * @param commandWord"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"    public InvalidInputFormatException(CommandWord commandWord) {"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"        super(\"\");"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"        switch(commandWord) {"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"        case DEADLINE:"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"            errorMessage \u003d \"Please specify deadline in this format:\\n\" + \"    deadline [description] /by [yyyy-mm-dd]\\n\""},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"                    + \"(E.g. deadline project /by 2021-01-22\";"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"            break;"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"        case DELETE:"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"            errorMessage \u003d \"Please specify a task number in this format:\\n\""},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"                    + \"    delete [task number] (E.g. delete 2)\";"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"            break;"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"        case DONE:"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"            errorMessage \u003d \"Please specify a task number in this format:\\n\" +"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"                    \"    done [task number] (E.g. done 2)\";"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"            break;"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"        case EVENT:"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"            errorMessage \u003d \"Please specify event in this format:\\n\" + \"    event [description] /at [yyyy-mm-dd]\\n\""},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"                    + \"(E.g. event wedding anniversary /at 2021-01-22\";"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"            break;"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"        default:"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"            errorMessage \u003d \"Something went wrong with Duke!\";"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"     * getMessage: retrieves error message"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"     * @return errorMessage"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"    public String getMessage() {"},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"        String updatedErrorMessage \u003d super.getMessage() + this.errorMessage;"},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":"        return updatedErrorMessage;"},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":50}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.ByeCommand;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.Command;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.CommandWord;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.DeadlineCommand;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.DeleteCommand;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.DoneCommand;"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.EventCommand;"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.FindCommand;"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.HelpCommand;"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.ListCommand;"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.ToDoCommand;"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.IncompleteInputException;"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.InvalidCommandException;"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.InvalidInputFormatException;"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"import java.util.regex.Matcher;"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"import java.util.regex.Pattern;"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":" * class Parser"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":" * Description: Parses the user inputs into executable commands"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"public class Parser {"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"     * parse: parses the user inputs into executable commands"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"     * @param userInput input string by user"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"     * @return an executable command"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"     * @throws DukeException"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"    public static Command parse(String userInput) throws DukeException {"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"        assert userInput !\u003d null : \"user input should not be null\";"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"        Pattern BASE_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003ccommandDescription\u003e.*)\");"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"        Matcher matcher \u003d BASE_COMMAND_FORMAT.matcher(userInput.trim());"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"        if (!matcher.matches()) {"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"            throw new InvalidCommandException();"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"            CommandWord commandWord \u003d CommandWord.valueOf(matcher.group(\"commandWord\").toUpperCase());"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"            String commandDescription \u003d matcher.group(\"commandDescription\").trim();"},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"            switch (commandWord) {"},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":"            case DEADLINE:"},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":"            case EVENT:"},{"lineNumber":50,"author":{"gitId":"pngsebastian"},"content":"                return commandWithDateHandler(commandWord, commandDescription);"},{"lineNumber":51,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":52,"author":{"gitId":"pngsebastian"},"content":"            case DELETE:"},{"lineNumber":53,"author":{"gitId":"pngsebastian"},"content":"            case DONE:"},{"lineNumber":54,"author":{"gitId":"pngsebastian"},"content":"                return commandWithIndexHandler(commandWord, commandDescription);"},{"lineNumber":55,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":56,"author":{"gitId":"pngsebastian"},"content":"            default:"},{"lineNumber":57,"author":{"gitId":"pngsebastian"},"content":"                return commandWithoutDateHandler(commandWord, commandDescription);"},{"lineNumber":58,"author":{"gitId":"pngsebastian"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"pngsebastian"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":60,"author":{"gitId":"pngsebastian"},"content":"            throw new InvalidCommandException();"},{"lineNumber":61,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":64,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"pngsebastian"},"content":"     * commandWithoutDateHandler: handles bye, help, list, find, todo commands"},{"lineNumber":66,"author":{"gitId":"pngsebastian"},"content":"     * @param commandWord"},{"lineNumber":67,"author":{"gitId":"pngsebastian"},"content":"     * @param commandDescription"},{"lineNumber":68,"author":{"gitId":"pngsebastian"},"content":"     * @return an executable command"},{"lineNumber":69,"author":{"gitId":"pngsebastian"},"content":"     * @throws IncompleteInputException"},{"lineNumber":70,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"pngsebastian"},"content":"    private static Command commandWithoutDateHandler(CommandWord commandWord, String commandDescription)"},{"lineNumber":72,"author":{"gitId":"pngsebastian"},"content":"            throws DukeException {"},{"lineNumber":73,"author":{"gitId":"pngsebastian"},"content":"        if (commandDescription.isEmpty()) {"},{"lineNumber":74,"author":{"gitId":"pngsebastian"},"content":"            switch(commandWord) {"},{"lineNumber":75,"author":{"gitId":"pngsebastian"},"content":"            case BYE:"},{"lineNumber":76,"author":{"gitId":"pngsebastian"},"content":"                return new ByeCommand();"},{"lineNumber":77,"author":{"gitId":"pngsebastian"},"content":"            case HELP:"},{"lineNumber":78,"author":{"gitId":"pngsebastian"},"content":"                return new HelpCommand();"},{"lineNumber":79,"author":{"gitId":"pngsebastian"},"content":"            case LIST:"},{"lineNumber":80,"author":{"gitId":"pngsebastian"},"content":"                return new ListCommand();"},{"lineNumber":81,"author":{"gitId":"pngsebastian"},"content":"            default:"},{"lineNumber":82,"author":{"gitId":"pngsebastian"},"content":"                throw new IncompleteInputException(commandWord);"},{"lineNumber":83,"author":{"gitId":"pngsebastian"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"pngsebastian"},"content":"        } else if (commandWord.equals(CommandWord.FIND)) {"},{"lineNumber":85,"author":{"gitId":"pngsebastian"},"content":"            return new FindCommand(commandDescription);"},{"lineNumber":86,"author":{"gitId":"pngsebastian"},"content":"        } else if (commandWord.equals(CommandWord.TODO)) {"},{"lineNumber":87,"author":{"gitId":"pngsebastian"},"content":"            return new ToDoCommand(commandDescription);"},{"lineNumber":88,"author":{"gitId":"pngsebastian"},"content":"        } else {"},{"lineNumber":89,"author":{"gitId":"pngsebastian"},"content":"            throw new InvalidCommandException();"},{"lineNumber":90,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":93,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"pngsebastian"},"content":"     * commandWithDateHandler: handles deadline and event commands"},{"lineNumber":95,"author":{"gitId":"pngsebastian"},"content":"     * @param commandWord"},{"lineNumber":96,"author":{"gitId":"pngsebastian"},"content":"     * @param commandDescription"},{"lineNumber":97,"author":{"gitId":"pngsebastian"},"content":"     * @return an executable command"},{"lineNumber":98,"author":{"gitId":"pngsebastian"},"content":"     * @throws DukeException"},{"lineNumber":99,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"pngsebastian"},"content":"    private static Command commandWithDateHandler(CommandWord commandWord, String commandDescription)"},{"lineNumber":101,"author":{"gitId":"pngsebastian"},"content":"            throws DukeException {"},{"lineNumber":102,"author":{"gitId":"pngsebastian"},"content":"        if (commandDescription.isEmpty()) {"},{"lineNumber":103,"author":{"gitId":"pngsebastian"},"content":"            throw new IncompleteInputException(commandWord);"},{"lineNumber":104,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":106,"author":{"gitId":"pngsebastian"},"content":"        if (commandWord.equals(CommandWord.DEADLINE)) {"},{"lineNumber":107,"author":{"gitId":"pngsebastian"},"content":"            Pattern DEADLINE_FORMAT \u003d Pattern.compile(\"(?\u003cdeadlineDescription\u003e.*) /by (?\u003cdeadlineDate\u003e.*)\");"},{"lineNumber":108,"author":{"gitId":"pngsebastian"},"content":"            Matcher deadlineMatcher \u003d DEADLINE_FORMAT.matcher(commandDescription);"},{"lineNumber":109,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":110,"author":{"gitId":"pngsebastian"},"content":"            if (!deadlineMatcher.matches()) {"},{"lineNumber":111,"author":{"gitId":"pngsebastian"},"content":"                throw new InvalidInputFormatException(commandWord);"},{"lineNumber":112,"author":{"gitId":"pngsebastian"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"pngsebastian"},"content":"            return new DeadlineCommand(deadlineMatcher.group(\"deadlineDescription\"),"},{"lineNumber":114,"author":{"gitId":"pngsebastian"},"content":"                    deadlineMatcher.group(\"deadlineDate\"));"},{"lineNumber":115,"author":{"gitId":"pngsebastian"},"content":"        } else if (commandWord.equals(CommandWord.EVENT)) {"},{"lineNumber":116,"author":{"gitId":"pngsebastian"},"content":"            Pattern EVENT_FORMAT \u003d Pattern.compile(\"(?\u003ceventDescription\u003e.*) /at (?\u003ceventDate\u003e.*)\");"},{"lineNumber":117,"author":{"gitId":"pngsebastian"},"content":"            Matcher eventMatcher \u003d EVENT_FORMAT.matcher(commandDescription);"},{"lineNumber":118,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":119,"author":{"gitId":"pngsebastian"},"content":"            if (!eventMatcher.matches()) {"},{"lineNumber":120,"author":{"gitId":"pngsebastian"},"content":"                throw new InvalidInputFormatException(commandWord);"},{"lineNumber":121,"author":{"gitId":"pngsebastian"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"pngsebastian"},"content":"            return new EventCommand(eventMatcher.group(\"eventDescription\"), eventMatcher.group(\"eventDate\"));"},{"lineNumber":123,"author":{"gitId":"pngsebastian"},"content":"        } else {"},{"lineNumber":124,"author":{"gitId":"pngsebastian"},"content":"            throw new InvalidCommandException();"},{"lineNumber":125,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":128,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"pngsebastian"},"content":"     * commandWithIndexHandler: handles delete and done commands"},{"lineNumber":130,"author":{"gitId":"pngsebastian"},"content":"     * @param commandWord"},{"lineNumber":131,"author":{"gitId":"pngsebastian"},"content":"     * @param commandDescription"},{"lineNumber":132,"author":{"gitId":"pngsebastian"},"content":"     * @return an executable command"},{"lineNumber":133,"author":{"gitId":"pngsebastian"},"content":"     * @throws DukeException"},{"lineNumber":134,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"pngsebastian"},"content":"    private static Command commandWithIndexHandler(CommandWord commandWord, String commandDescription)"},{"lineNumber":136,"author":{"gitId":"pngsebastian"},"content":"            throws DukeException {"},{"lineNumber":137,"author":{"gitId":"pngsebastian"},"content":"        if (commandDescription.isEmpty()) {"},{"lineNumber":138,"author":{"gitId":"pngsebastian"},"content":"            throw new IncompleteInputException(commandWord);"},{"lineNumber":139,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":141,"author":{"gitId":"pngsebastian"},"content":"        try {"},{"lineNumber":142,"author":{"gitId":"pngsebastian"},"content":"            int index \u003d Integer.parseInt(commandDescription);"},{"lineNumber":143,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":144,"author":{"gitId":"pngsebastian"},"content":"            if (commandWord.equals(CommandWord.DELETE)) {"},{"lineNumber":145,"author":{"gitId":"pngsebastian"},"content":"                return new DeleteCommand(index);"},{"lineNumber":146,"author":{"gitId":"pngsebastian"},"content":"            } else if (commandWord.equals(CommandWord.DONE)) {"},{"lineNumber":147,"author":{"gitId":"pngsebastian"},"content":"                return new DoneCommand(index);"},{"lineNumber":148,"author":{"gitId":"pngsebastian"},"content":"            } else {"},{"lineNumber":149,"author":{"gitId":"pngsebastian"},"content":"                throw new InvalidCommandException();"},{"lineNumber":150,"author":{"gitId":"pngsebastian"},"content":"            }"},{"lineNumber":151,"author":{"gitId":"pngsebastian"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":152,"author":{"gitId":"pngsebastian"},"content":"            throw new InvalidInputFormatException(commandWord);"},{"lineNumber":153,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":155}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.Deadline;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.Event;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.ToDo;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"import java.io.BufferedWriter;"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"import java.io.FileWriter;"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"import java.util.Scanner;"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":" * class Storage"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":" * Description: Saves and loads the list of tasks to a designated file path"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"public class Storage {"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"    private String filePath;"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a new Storage"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"     * @param filePath path where the list of tasks is saved"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"    public Storage(String filePath) {"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"     * loadFile: loads the saved list of tasks"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"     * @return an ArrayList of tasks"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"     * @throws DukeException"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws DukeException {"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"        File tasksListFile \u003d new File(filePath);"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"        if (!tasksListFile.exists()) {"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"            tasksListFile.getParentFile().mkdir();"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"            tasksListFile.createNewFile();"},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"            Scanner sc \u003d new Scanner(tasksListFile);"},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":50,"author":{"gitId":"pngsebastian"},"content":"                String savedTask \u003d sc.nextLine();"},{"lineNumber":51,"author":{"gitId":"pngsebastian"},"content":"                String[] savedTaskDetails \u003d savedTask.split(\" \\\\| \");"},{"lineNumber":52,"author":{"gitId":"pngsebastian"},"content":"                String savedTaskType \u003d savedTaskDetails[0];"},{"lineNumber":53,"author":{"gitId":"pngsebastian"},"content":"                String savedTaskDescription \u003d savedTaskDetails[2];"},{"lineNumber":54,"author":{"gitId":"pngsebastian"},"content":"                boolean isTaskDone \u003d (Integer.parseInt(savedTaskDetails[1]) \u003d\u003d 1);"},{"lineNumber":55,"author":{"gitId":"pngsebastian"},"content":"                Task taskToLoad;"},{"lineNumber":56,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":57,"author":{"gitId":"pngsebastian"},"content":"                switch (savedTaskType) {"},{"lineNumber":58,"author":{"gitId":"pngsebastian"},"content":"                case \"T\":"},{"lineNumber":59,"author":{"gitId":"pngsebastian"},"content":"                    taskToLoad \u003d new ToDo(savedTaskDescription);"},{"lineNumber":60,"author":{"gitId":"pngsebastian"},"content":"                    break;"},{"lineNumber":61,"author":{"gitId":"pngsebastian"},"content":"                case \"D\":"},{"lineNumber":62,"author":{"gitId":"pngsebastian"},"content":"                    taskToLoad \u003d new Deadline(savedTaskDescription, savedTaskDetails[3]);"},{"lineNumber":63,"author":{"gitId":"pngsebastian"},"content":"                    break;"},{"lineNumber":64,"author":{"gitId":"pngsebastian"},"content":"                case \"E\":"},{"lineNumber":65,"author":{"gitId":"pngsebastian"},"content":"                    taskToLoad \u003d new Event(savedTaskDescription, savedTaskDetails[3]);"},{"lineNumber":66,"author":{"gitId":"pngsebastian"},"content":"                    break;"},{"lineNumber":67,"author":{"gitId":"pngsebastian"},"content":"                default:"},{"lineNumber":68,"author":{"gitId":"pngsebastian"},"content":"                    throw new DukeException(\"There are issues in loading the saved file of the tasks list.\");"},{"lineNumber":69,"author":{"gitId":"pngsebastian"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":71,"author":{"gitId":"pngsebastian"},"content":"                if (isTaskDone) {"},{"lineNumber":72,"author":{"gitId":"pngsebastian"},"content":"                    taskToLoad.markAsDone();"},{"lineNumber":73,"author":{"gitId":"pngsebastian"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":75,"author":{"gitId":"pngsebastian"},"content":"                tasksList.add(taskToLoad);"},{"lineNumber":76,"author":{"gitId":"pngsebastian"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":78,"author":{"gitId":"pngsebastian"},"content":"            return tasksList;"},{"lineNumber":79,"author":{"gitId":"pngsebastian"},"content":"        } catch (IOException e){"},{"lineNumber":80,"author":{"gitId":"pngsebastian"},"content":"            throw new DukeException(\"There is no saved file of the tasks list in this directory.\");"},{"lineNumber":81,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":84,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"pngsebastian"},"content":"     * saveFile: save the list of tasks into a text file"},{"lineNumber":86,"author":{"gitId":"pngsebastian"},"content":"     * @param tasks the ArrayList of tasks"},{"lineNumber":87,"author":{"gitId":"pngsebastian"},"content":"     * @throws DukeException"},{"lineNumber":88,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"pngsebastian"},"content":"    public void saveFile(ArrayList\u003cTask\u003e tasks) throws DukeException {"},{"lineNumber":90,"author":{"gitId":"pngsebastian"},"content":"        File tasksListFile \u003d new File(filePath);"},{"lineNumber":91,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":92,"author":{"gitId":"pngsebastian"},"content":"        if (!tasksListFile.exists()) {"},{"lineNumber":93,"author":{"gitId":"pngsebastian"},"content":"            tasksListFile.getParentFile().mkdir();"},{"lineNumber":94,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":96,"author":{"gitId":"pngsebastian"},"content":"        try {"},{"lineNumber":97,"author":{"gitId":"pngsebastian"},"content":"            tasksListFile.createNewFile();"},{"lineNumber":98,"author":{"gitId":"pngsebastian"},"content":"            FileWriter fw \u003d new FileWriter(tasksListFile);"},{"lineNumber":99,"author":{"gitId":"pngsebastian"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);"},{"lineNumber":100,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":101,"author":{"gitId":"pngsebastian"},"content":"            for (Task task : tasks) {"},{"lineNumber":102,"author":{"gitId":"pngsebastian"},"content":"                bw.write(task.saveFormat());"},{"lineNumber":103,"author":{"gitId":"pngsebastian"},"content":"                bw.newLine();"},{"lineNumber":104,"author":{"gitId":"pngsebastian"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":106,"author":{"gitId":"pngsebastian"},"content":"            bw.close();"},{"lineNumber":107,"author":{"gitId":"pngsebastian"},"content":"            fw.close();"},{"lineNumber":108,"author":{"gitId":"pngsebastian"},"content":"        } catch (IOException e) {"},{"lineNumber":109,"author":{"gitId":"pngsebastian"},"content":"            throw new DukeException(\"Tasks list cannot be saved.\");"},{"lineNumber":110,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":112}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.CommandWord;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.InvalidInputFormatException;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":" * class Deadline"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represent a deadline in the task list"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"public class Deadline extends Task {"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"    protected LocalDate date;"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a new Deadline"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"     * @param description Deadline description"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"    public Deadline(String description, String date) throws InvalidInputFormatException {"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"        super(description);"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"            this.date \u003d LocalDate.parse(date);"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"            throw new InvalidInputFormatException(CommandWord.DEADLINE);"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"     * saveFormat: creates a formatted representation of a Deadline to be saved"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"     * @return representation of a Deadline to be saved"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"    public String saveFormat() {"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"        return \"D | \" + super.saveFormat() + \" | \" + date;"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"     * toString: creates a String representation of a Deadline"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"     * @return String representation of a Deadline"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";"},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":49}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.CommandWord;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.InvalidInputFormatException;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":" * class Event"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represent an event in the task list"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"public class Event extends Task {"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"    protected LocalDate date;"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a new Event"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"     * @param description Event description"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"    public Event(String description, String date) throws InvalidInputFormatException {"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"        super(description);"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"            this.date \u003d LocalDate.parse(date);"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"            throw new InvalidInputFormatException(CommandWord.EVENT);"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"     * saveFormat: creates a formatted representation of an Event to be saved"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"     * @return representation of an Event to be saved"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"    public String saveFormat() {"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"        return \"E | \" + super.saveFormat() + \" | \" + date;"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"     * toString: creates a String representation of an Event"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"     * @return String representation of an Event"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \")\";"},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":49}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":" * class Task"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represent a task in the task list"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"    protected boolean isDone;"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a new Task"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"     * @param description task description"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"    public Task(String description) {"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"     * markAsDone: marks a task as completed"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"    public void markAsDone() {"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"        this.isDone \u003d true;"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"     * getStatusIcon: retrieves the icon that represents the completion status of a task"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"     * @return status icon"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"    public String getStatusIcon() {"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"        return isDone ? \"[X]\" : \"[ ]\";"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"     * saveFormat: creates a formatted representation of a task to be saved"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"     * @return representation of a task to be saved"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"    public String saveFormat() {"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"        return (isDone ? \"1\" : \"0\") +  \" | \" + description;"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"     * toString: creates a String representation of a task"},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"     * @return String representation of a task"},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":"    public String toString() {"},{"lineNumber":50,"author":{"gitId":"pngsebastian"},"content":"        return this.getStatusIcon() + \" \" + this.description;"},{"lineNumber":51,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":52}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":" * class TaskList"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represent the list of tasks"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"    private static ArrayList\u003cTask\u003e tasks;"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a new TaskList"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"    public TaskList() {"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"     * Constructor: creates a TaskList from an existing ArrayList of Task"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"     * @param tasks the ArrayList of Task"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"     * getSize: retrieves the size of the TaskList"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"     * @return size of TaskList"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"    public int getSize() {"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"        return tasks.size();"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"     * getTaskList: retrieves the ArrayList of Task"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"     * @return ArrayList of Task"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"        return tasks;"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"     * getTask: retrieves a Task in the TaskList"},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":"     * @param taskNum position of the Task in the TaskList"},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":"     * @return Task in the specified position"},{"lineNumber":50,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"pngsebastian"},"content":"    public static Task getTask(int taskNum) throws DukeException {"},{"lineNumber":52,"author":{"gitId":"pngsebastian"},"content":"        if (taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d tasks.size()) {"},{"lineNumber":53,"author":{"gitId":"pngsebastian"},"content":"            return tasks.get(taskNum - 1);"},{"lineNumber":54,"author":{"gitId":"pngsebastian"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"pngsebastian"},"content":"            throw new DukeException(\"Task \" + taskNum + \" is not in the task list!\");"},{"lineNumber":56,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":59,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"pngsebastian"},"content":"     * addTask: adds a Task into the TaskList"},{"lineNumber":61,"author":{"gitId":"pngsebastian"},"content":"     * @param task task to be added in the TaskList"},{"lineNumber":62,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"pngsebastian"},"content":"    public void addTask(Task task) {"},{"lineNumber":64,"author":{"gitId":"pngsebastian"},"content":"        tasks.add(task);"},{"lineNumber":65,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":67,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"pngsebastian"},"content":"     * deleteTask: deletes a Task from the TaskList"},{"lineNumber":69,"author":{"gitId":"pngsebastian"},"content":"     * @param taskNum position of the Task to be deleted in the TaskList"},{"lineNumber":70,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"pngsebastian"},"content":"    public static void deleteTask(int taskNum) throws DukeException {"},{"lineNumber":72,"author":{"gitId":"pngsebastian"},"content":"        if (taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d tasks.size()) {"},{"lineNumber":73,"author":{"gitId":"pngsebastian"},"content":"            tasks.remove(taskNum - 1);"},{"lineNumber":74,"author":{"gitId":"pngsebastian"},"content":"        } else {"},{"lineNumber":75,"author":{"gitId":"pngsebastian"},"content":"            throw new DukeException(\"Task \" + taskNum + \" is not in the task list!\");"},{"lineNumber":76,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":79,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"pngsebastian"},"content":"     * completeTask: marks a Task in the TaskList as completed"},{"lineNumber":81,"author":{"gitId":"pngsebastian"},"content":"     * @param taskNum position of the Task to be completed in the TaskList"},{"lineNumber":82,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"pngsebastian"},"content":"    public static void completeTask(int taskNum) throws DukeException {"},{"lineNumber":84,"author":{"gitId":"pngsebastian"},"content":"        if (taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d tasks.size()) {"},{"lineNumber":85,"author":{"gitId":"pngsebastian"},"content":"            Task taskToComplete \u003d getTask(taskNum);"},{"lineNumber":86,"author":{"gitId":"pngsebastian"},"content":"            taskToComplete.markAsDone();"},{"lineNumber":87,"author":{"gitId":"pngsebastian"},"content":"        } else {"},{"lineNumber":88,"author":{"gitId":"pngsebastian"},"content":"            throw new DukeException(\"Task \" + taskNum + \" is not in the task list!\");"},{"lineNumber":89,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":92,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"pngsebastian"},"content":"     * findTask: finds tasks that matches keyword input by user"},{"lineNumber":94,"author":{"gitId":"pngsebastian"},"content":"     * @param keyword keyword to search for matching tasks"},{"lineNumber":95,"author":{"gitId":"pngsebastian"},"content":"     * @return a array list of tasks that matches the keyword"},{"lineNumber":96,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"pngsebastian"},"content":"    public static ArrayList\u003cTask\u003e findTask(String keyword) {"},{"lineNumber":98,"author":{"gitId":"pngsebastian"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":99,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":100,"author":{"gitId":"pngsebastian"},"content":"        for (Task task : tasks) {"},{"lineNumber":101,"author":{"gitId":"pngsebastian"},"content":"            if (task.description.matches(\"(.*)\" + keyword + \"(.*)\")) {"},{"lineNumber":102,"author":{"gitId":"pngsebastian"},"content":"                filteredTasks.add(task);"},{"lineNumber":103,"author":{"gitId":"pngsebastian"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":106,"author":{"gitId":"pngsebastian"},"content":"        return filteredTasks;"},{"lineNumber":107,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":108}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":" * class ToDo"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represent a todo in the task list"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"public class ToDo extends Task {"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"    public ToDo(String description) {"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"     * saveFormat: creates a formatted representation of a ToDo to be saved"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"     * @return representation of a ToDo to be saved"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"    public String saveFormat() {"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"        return \"T | \" + super.saveFormat();"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"     * toString: creates a String representation of a ToDo"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"     * @return String representation of a ToDo"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":30}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":" * class DialogBox"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":" * Description: This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":" *              a label containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"     * flip: Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":52,"author":{"gitId":"pngsebastian"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"pngsebastian"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":56,"author":{"gitId":"pngsebastian"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"pngsebastian"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"pngsebastian"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"pngsebastian"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":61}},{"path":"src/main/java/duke/ui/DukeResponses.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":" * class DukeResponses"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":" * @author Png Zheng Jie, Sebastian"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":" * Description: A class to represent all of Duke\u0027s responses to the user inputs"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"public class DukeResponses {"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"     * showWelcome: show welcome message to user"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"     * @return welcome message"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"    public String showWelcome() {"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"        return \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"     * showGoodbye: show goodbye message to user"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"     * @return goodbye message"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"    public String showGoodbye() {"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"     * showError: show error message to user"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"     * @param e a DukeException"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"     * @return error message"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"    public String showError(DukeException e) {"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"        assert e !\u003d null : \"Error should not be null\";"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":"        return e.getMessage();"},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":"     * showCommands: show list of available commands that Duke recognises to user"},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"     * @return list of available commands"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"    public String showCommands() {"},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"        return \"List of recognised user commands:\\n\""},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"                + \"  1. todo - adds a todo (E.g. todo borrow book)\\n\""},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":"                + \"  2. deadline - adds a deadline (E.g. deadline return book /by 2021-02-04)\\n\""},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":"                + \"  3. event - adds an event (E.g. event project meeting /at 2021-03-05)\\n\""},{"lineNumber":50,"author":{"gitId":"pngsebastian"},"content":"                + \"  4. delete - removes a task from the lists of task (E.g. delete 2)\\n\""},{"lineNumber":51,"author":{"gitId":"pngsebastian"},"content":"                + \"  5. done - marks a task as done in the list of tasks (E.g. done 2)\\n\""},{"lineNumber":52,"author":{"gitId":"pngsebastian"},"content":"                + \"  6. find - finds and displays tasks that matches the input keyword (E.g. find book)\\n\""},{"lineNumber":53,"author":{"gitId":"pngsebastian"},"content":"                + \"  7. list - displays the list of tasks\\n\""},{"lineNumber":54,"author":{"gitId":"pngsebastian"},"content":"                + \"  8. help - displays the list of commands that Duke recognises\\n\""},{"lineNumber":55,"author":{"gitId":"pngsebastian"},"content":"                + \"  9. bye - terminates Duke\";"},{"lineNumber":56,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":58,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"pngsebastian"},"content":"     * showAddTask: show to user that task is successfully added to the TaskList"},{"lineNumber":60,"author":{"gitId":"pngsebastian"},"content":"     * @param task task to be added into the TaskList"},{"lineNumber":61,"author":{"gitId":"pngsebastian"},"content":"     * @param tasks list of Task"},{"lineNumber":62,"author":{"gitId":"pngsebastian"},"content":"     * @return add task success message"},{"lineNumber":63,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"pngsebastian"},"content":"    public String showAddTask(Task task, TaskList tasks) {"},{"lineNumber":65,"author":{"gitId":"pngsebastian"},"content":"        assert task !\u003d null : \"task should not be null\";"},{"lineNumber":66,"author":{"gitId":"pngsebastian"},"content":"        int numOfTasks \u003d tasks.getSize();"},{"lineNumber":67,"author":{"gitId":"pngsebastian"},"content":"        return\"Got it. I\u0027ve added this task:\\n\" + \"  \" + task + \"\\n\" + \"Now you have \" +"},{"lineNumber":68,"author":{"gitId":"pngsebastian"},"content":"                    numOfTasks + (numOfTasks \u003c\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\";"},{"lineNumber":69,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":71,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"pngsebastian"},"content":"     * showDeleteTask: show to user that task is successfully deleted from the TaskList"},{"lineNumber":73,"author":{"gitId":"pngsebastian"},"content":"     * @param task task to be deleted from the TaskList"},{"lineNumber":74,"author":{"gitId":"pngsebastian"},"content":"     * @param tasks list of Task"},{"lineNumber":75,"author":{"gitId":"pngsebastian"},"content":"     * @return delete task success message"},{"lineNumber":76,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"pngsebastian"},"content":"    public String showDeleteTask(Task task, TaskList tasks) {"},{"lineNumber":78,"author":{"gitId":"pngsebastian"},"content":"        assert task !\u003d null : \"task should not be null\";"},{"lineNumber":79,"author":{"gitId":"pngsebastian"},"content":"        int numOfTasks \u003d tasks.getSize();"},{"lineNumber":80,"author":{"gitId":"pngsebastian"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + \"  \" + task + \"\\n\" + \"Now you have \" + numOfTasks +"},{"lineNumber":81,"author":{"gitId":"pngsebastian"},"content":"                    \" tasks in the list.\";"},{"lineNumber":82,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":84,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"pngsebastian"},"content":"     * showCompleteTask: show to user that task is successfully marked as completed in the TaskList"},{"lineNumber":86,"author":{"gitId":"pngsebastian"},"content":"     * @param task task to be marked as completed in the TaskList"},{"lineNumber":87,"author":{"gitId":"pngsebastian"},"content":"     * @return complete task success message"},{"lineNumber":88,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"pngsebastian"},"content":"    public String showCompleteTask(Task task) {"},{"lineNumber":90,"author":{"gitId":"pngsebastian"},"content":"        assert task !\u003d null : \"task should not be null\";"},{"lineNumber":91,"author":{"gitId":"pngsebastian"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + \"  \" + task;"},{"lineNumber":92,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":94,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"pngsebastian"},"content":"     * showTaskList: show to user the entire TaskList"},{"lineNumber":96,"author":{"gitId":"pngsebastian"},"content":"     * @param tasks list of Task"},{"lineNumber":97,"author":{"gitId":"pngsebastian"},"content":"     * @param taskType"},{"lineNumber":98,"author":{"gitId":"pngsebastian"},"content":"     * @return list of tasks"},{"lineNumber":99,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"pngsebastian"},"content":"    public String showTaskList(ArrayList\u003cTask\u003e tasks, String taskType) {"},{"lineNumber":101,"author":{"gitId":"pngsebastian"},"content":"        if (tasks.size() \u003c\u003d 0) {"},{"lineNumber":102,"author":{"gitId":"pngsebastian"},"content":"            return \"There are no \" + taskType + \"tasks at the moment.\";"},{"lineNumber":103,"author":{"gitId":"pngsebastian"},"content":"        } else {"},{"lineNumber":104,"author":{"gitId":"pngsebastian"},"content":"            int counter \u003d 1;"},{"lineNumber":105,"author":{"gitId":"pngsebastian"},"content":"            String listHeader \u003d \"Here are the \" + taskType + \"tasks in your list:\\n\";"},{"lineNumber":106,"author":{"gitId":"pngsebastian"},"content":"            StringBuilder outputList \u003d new StringBuilder();"},{"lineNumber":107,"author":{"gitId":"pngsebastian"},"content":"            outputList.append(listHeader);"},{"lineNumber":108,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":109,"author":{"gitId":"pngsebastian"},"content":"            for (Task task : tasks) {"},{"lineNumber":110,"author":{"gitId":"pngsebastian"},"content":"                String t \u003d \"  \" + counter + \". \" + task + \"\\n\";"},{"lineNumber":111,"author":{"gitId":"pngsebastian"},"content":"                outputList.append(t);"},{"lineNumber":112,"author":{"gitId":"pngsebastian"},"content":"                counter++;"},{"lineNumber":113,"author":{"gitId":"pngsebastian"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"pngsebastian"},"content":"            return outputList.toString();"},{"lineNumber":115,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":117}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"import java.util.Timer;"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"import java.util.TimerTask;"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":" * class MainWindow"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":" * Description: Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":" */"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"    private TextField userInput;"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"    private Button sendButton;"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"    private Duke duke;"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\")); //Credit: Freepik"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\")); //Credit: Freepik"},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"    public void initialize() {"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":39,"author":{"gitId":"pngsebastian"},"content":"    public void setDuke(Duke duke) {"},{"lineNumber":40,"author":{"gitId":"pngsebastian"},"content":"        this.duke \u003d duke;"},{"lineNumber":41,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":43,"author":{"gitId":"pngsebastian"},"content":"    @FXML"},{"lineNumber":44,"author":{"gitId":"pngsebastian"},"content":"    public void showWelcome() {"},{"lineNumber":45,"author":{"gitId":"pngsebastian"},"content":"        String welcomeMessage \u003d duke.getDukeResponses().showWelcome();"},{"lineNumber":46,"author":{"gitId":"pngsebastian"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeMessage, dukeImage));"},{"lineNumber":47,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":49,"author":{"gitId":"pngsebastian"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"pngsebastian"},"content":"     * handleUserInput: Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and"},{"lineNumber":51,"author":{"gitId":"pngsebastian"},"content":"     *                  then appends them to the dialog container. Clears the user input after processing."},{"lineNumber":52,"author":{"gitId":"pngsebastian"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"pngsebastian"},"content":"    @FXML"},{"lineNumber":54,"author":{"gitId":"pngsebastian"},"content":"    private void handleUserInput() {"},{"lineNumber":55,"author":{"gitId":"pngsebastian"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":56,"author":{"gitId":"pngsebastian"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":57,"author":{"gitId":"pngsebastian"},"content":"        String goodbyeMessage \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":58,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":59,"author":{"gitId":"pngsebastian"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":60,"author":{"gitId":"pngsebastian"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":61,"author":{"gitId":"pngsebastian"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":62,"author":{"gitId":"pngsebastian"},"content":"        );"},{"lineNumber":63,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":64,"author":{"gitId":"pngsebastian"},"content":"        userInput.clear();"},{"lineNumber":65,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":66,"author":{"gitId":"pngsebastian"},"content":"        // Allows Duke to display bye message before terminating program"},{"lineNumber":67,"author":{"gitId":"pngsebastian"},"content":"        if (response.equals(goodbyeMessage)) {"},{"lineNumber":68,"author":{"gitId":"pngsebastian"},"content":"            Timer tm \u003d new Timer();"},{"lineNumber":69,"author":{"gitId":"pngsebastian"},"content":"            tm.schedule(new TimerTask(){"},{"lineNumber":70,"author":{"gitId":"pngsebastian"},"content":"                @Override"},{"lineNumber":71,"author":{"gitId":"pngsebastian"},"content":"                public void run() {"},{"lineNumber":72,"author":{"gitId":"pngsebastian"},"content":"                    System.exit(0);"},{"lineNumber":73,"author":{"gitId":"pngsebastian"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"pngsebastian"},"content":"            }, 500);"},{"lineNumber":75,"author":{"gitId":"pngsebastian"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":77}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"    \u003c!-- Resizing of dialogue box adapted from https://github.com/xinweit --\u003e"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"    \u003cHBox maxHeight\u003d\"-Infinity\"\u003e"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"        \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"            \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"        \u003c/children\u003e"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"        \u003cpadding\u003e"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"            \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"        \u003c/padding\u003e"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"    \u003c/HBox\u003e"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"    \u003cpadding\u003e"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"    \u003c/padding\u003e"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"pngsebastian":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"pngsebastian":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.commands.InvalidCommand;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"public class ParserTest {"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"    private Parser parser;"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"    @BeforeEach"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"    public void init() {"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"        parser \u003d new Parser();"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"    public void parse_emptyInput_success() throws DukeException {"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"        final String input \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"        assertTrue(parser.parse(input).getClass().isAssignableFrom(InvalidCommand.class));"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":23}},{"path":"src/test/java/duke/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"public class TaskListTest {"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"    private Task todo;"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"    private Task event;"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"    private Task deadline;"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"    private TaskList tasks;"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"    @BeforeEach"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"    public void init() throws DukeException {"},{"lineNumber":18,"author":{"gitId":"pngsebastian"},"content":"        todo \u003d new ToDo(\"todo\"); //task 1"},{"lineNumber":19,"author":{"gitId":"pngsebastian"},"content":"        event \u003d new Event(\"event\", \"2021-02-02\"); //task 2"},{"lineNumber":20,"author":{"gitId":"pngsebastian"},"content":"        deadline \u003d new Deadline(\"deadline\", \"2021-02-02\"); //task 3"},{"lineNumber":21,"author":{"gitId":"pngsebastian"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":22,"author":{"gitId":"pngsebastian"},"content":"        tasks.addTask(todo);"},{"lineNumber":23,"author":{"gitId":"pngsebastian"},"content":"        tasks.addTask(event);"},{"lineNumber":24,"author":{"gitId":"pngsebastian"},"content":"        tasks.addTask(deadline);"},{"lineNumber":25,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":27,"author":{"gitId":"pngsebastian"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"pngsebastian"},"content":"    public void getTask_success() throws DukeException {"},{"lineNumber":29,"author":{"gitId":"pngsebastian"},"content":"        Task task \u003d tasks.getTask(0);"},{"lineNumber":30,"author":{"gitId":"pngsebastian"},"content":"        assertEquals(task, todo);"},{"lineNumber":31,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"pngsebastian"},"content":""},{"lineNumber":33,"author":{"gitId":"pngsebastian"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"pngsebastian"},"content":"    public void getTask_invalidTaskNum_throwsDukeException() {"},{"lineNumber":35,"author":{"gitId":"pngsebastian"},"content":"        assertThrows(DukeException.class, () -\u003e tasks.getTask(-1));"},{"lineNumber":36,"author":{"gitId":"pngsebastian"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"pngsebastian"},"content":"}"}],"authorContributionMap":{"pngsebastian":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pngsebastian"},"content":"todo go through cs2103 weekly topics"},{"lineNumber":2,"author":{"gitId":"pngsebastian"},"content":"deadline cs2103 week 2 post-lecture quiz /by 2021-01-21"},{"lineNumber":3,"author":{"gitId":"pngsebastian"},"content":"deadline cs2103 week 2 project /by 2021-01-21"},{"lineNumber":4,"author":{"gitId":"pngsebastian"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"pngsebastian"},"content":"deadline test /by"},{"lineNumber":6,"author":{"gitId":"pngsebastian"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"pngsebastian"},"content":"list"},{"lineNumber":8,"author":{"gitId":"pngsebastian"},"content":"event cs2103 lecture /at 2021-01-22"},{"lineNumber":9,"author":{"gitId":"pngsebastian"},"content":"event cs2103 tutorial /at 2021-01-27"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"blah"},{"lineNumber":11,"author":{"gitId":"pngsebastian"},"content":"list"},{"lineNumber":12,"author":{"gitId":"pngsebastian"},"content":"done 0"},{"lineNumber":13,"author":{"gitId":"pngsebastian"},"content":"delete 3"},{"lineNumber":14,"author":{"gitId":"pngsebastian"},"content":"done 3"},{"lineNumber":15,"author":{"gitId":"pngsebastian"},"content":"list"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"find lecture"},{"lineNumber":17,"author":{"gitId":"pngsebastian"},"content":"bye"}],"authorContributionMap":{"pngsebastian":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"pngsebastian"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"pngsebastian":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"pngsebastian"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"pngsebastian":1,"-":37}}]
