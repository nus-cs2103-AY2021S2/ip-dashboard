[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"# SurrealChat User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"Introducing... a custom chatbot based on Meme Man and the Surreal Memes."},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"Not only will Meme Man entertain you every step of the way, Meme Man will also help you keep track of your tasks."},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"If your task has a tick, it\u0027s done. If your task has a cross, it\u0027s not done."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"Meme Man will also catch exceptions for you, because Meme Man thinks exceptions are not stonks..."},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"Based on the Duke chatbot."},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Add tasks of different types"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"You can add 3 types of tasks:"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"1. ToDo tasks (Fuss-free, own time own target)"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"2. Deadline tasks (Be sure not to miss these deadlines!)"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"3. Event tasks (Used to reserve certain timings like a calendar app)"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Delete tasks"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"If you feel that keeping them on the list is not necessary, Meme Man will delete them for you."},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"### List tasks"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"You can key in \"list\" and Meme Man will display the tasks in the order that you have keyed them in."},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Save and load tasks"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"You can now save the tasks on your computer and Meme Man will load them upon starting up. "},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"It\u0027s automatic. No user input required!"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Mark tasks as done"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"You can key in \"done\" along with a task number and Meme Man will tick that task for you."},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Mark tasks as undone"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"You can key in \"done\" along with a task number and Meme Man will cross that task for you."},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Find tasks"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"You can key in a single keyword and get a narrowed list of tasks. "},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Surreal Memes easter eggs"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"Keep scrolling to find them."},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"## Commands related to tasks"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"###  Add ToDo task - `todo`"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"Format: `todo DESCRIPTION`"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in along with task description to cause Meme Man to add a ToDo task."},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"Everytime a task is added, the new total number of tasks is displayed."},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"Example of usage:"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010x"},"content":"`todo Watch CS2103T lecture`"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010x"},"content":"Expected outcome:"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010x"},"content":"Meme Man is now adding to-do task: [T][✘] Watch CS2103T lecture"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010x"},"content":"Total number of tasks: 1"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Add Deadline task - `deadline`"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010x"},"content":"Format: `deadline DESCRIPTION /by DATE`"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in along with task description and deadline date to cause Meme Man to add a Deadline task."},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010x"},"content":"Deadline date must be in this format: YYYY-MM-DD."},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010x"},"content":"Everytime a task is added, the new total number of tasks is displayed."},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010x"},"content":"Example of usage:"},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T lecture quiz /by 2021-01-12"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T ip /by 2021-01-13"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010x"},"content":"Expected outcome:"},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":78,"author":{"gitId":"yhtMinceraft1010x"},"content":"Meme Man is now adding deadline task: [D][✘] Do CS2103T lecture quiz (by: 2021-01-12)"},{"lineNumber":79,"author":{"gitId":"yhtMinceraft1010x"},"content":"Total number of tasks: 2"},{"lineNumber":80,"author":{"gitId":"yhtMinceraft1010x"},"content":"Meme Man is now adding deadline task: [D][✘] Do CS2103T ip (by: 2021-01-13)"},{"lineNumber":81,"author":{"gitId":"yhtMinceraft1010x"},"content":"Total number of tasks: 3"},{"lineNumber":82,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":83,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":84,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if \"/by\" is missing:"},{"lineNumber":85,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":86,"author":{"gitId":"yhtMinceraft1010x"},"content":"Wrong formatting. Did you forget to put \u0027/by\u0027? Not stonks!"},{"lineNumber":87,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":88,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":89,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome for incorrect date format:"},{"lineNumber":90,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":91,"author":{"gitId":"yhtMinceraft1010x"},"content":"\"Input date format is incorrect. Not stonks!\""},{"lineNumber":92,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":93,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":94,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Add Event task - `event`"},{"lineNumber":95,"author":{"gitId":"yhtMinceraft1010x"},"content":"Format: `event DESCRIPTION /at DATE`"},{"lineNumber":96,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":97,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in along with task description and event date to cause Meme Man to add a Event task."},{"lineNumber":98,"author":{"gitId":"yhtMinceraft1010x"},"content":"Event date must be in this format: YYYY-MM-DD."},{"lineNumber":99,"author":{"gitId":"yhtMinceraft1010x"},"content":"Everytime a task is added, the new total number of tasks is displayed."},{"lineNumber":100,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":101,"author":{"gitId":"yhtMinceraft1010x"},"content":"Example of usage:"},{"lineNumber":102,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":103,"author":{"gitId":"yhtMinceraft1010x"},"content":"`event Attend CS2101 class /at 2021-01-14`"},{"lineNumber":104,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":105,"author":{"gitId":"yhtMinceraft1010x"},"content":"Expected outcome:"},{"lineNumber":106,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":107,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":108,"author":{"gitId":"yhtMinceraft1010x"},"content":"Meme Man is now adding event task: [E][✘] Attend CS2101 class (at: 2021-01-14)"},{"lineNumber":109,"author":{"gitId":"yhtMinceraft1010x"},"content":"Total number of tasks: 4"},{"lineNumber":110,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":111,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if \"/at\" is missing:"},{"lineNumber":112,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":113,"author":{"gitId":"yhtMinceraft1010x"},"content":"Wrong formatting. Did you forget to put \u0027/at\u0027? Not stonks!"},{"lineNumber":114,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":115,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":116,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome for incorrect date format:"},{"lineNumber":117,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":118,"author":{"gitId":"yhtMinceraft1010x"},"content":"\"Input date format is incorrect. Not stonks!\""},{"lineNumber":119,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":120,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":121,"author":{"gitId":"yhtMinceraft1010x"},"content":"### What happens if task description is empty?"},{"lineNumber":122,"author":{"gitId":"yhtMinceraft1010x"},"content":"This applies to all 3 types of tasks:"},{"lineNumber":123,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":124,"author":{"gitId":"yhtMinceraft1010x"},"content":"Empty (insert task type) task description. Not stonks!"},{"lineNumber":125,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":126,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":127,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Edit task description - `edit`"},{"lineNumber":128,"author":{"gitId":"yhtMinceraft1010x"},"content":"Format: `edit TASK_NUMBER /edit NEW_DESCRIPTION`"},{"lineNumber":129,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":130,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in along with task number, \"/edit\" and a new description to change that task\u0027s description."},{"lineNumber":131,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":132,"author":{"gitId":"yhtMinceraft1010x"},"content":"Example of usage:"},{"lineNumber":133,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":134,"author":{"gitId":"yhtMinceraft1010x"},"content":"`edit 1 /edit Do CS2103T optional ip tasks`"},{"lineNumber":135,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":136,"author":{"gitId":"yhtMinceraft1010x"},"content":"Expected outcome:"},{"lineNumber":137,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":138,"author":{"gitId":"yhtMinceraft1010x"},"content":"You have edited a task description to this:"},{"lineNumber":139,"author":{"gitId":"yhtMinceraft1010x"},"content":"Do CS2103T optional ip tasks"},{"lineNumber":140,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":141,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":142,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if you only put edit command:"},{"lineNumber":143,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":144,"author":{"gitId":"yhtMinceraft1010x"},"content":"Did you forget to add the task number and new description? Not stonks!"},{"lineNumber":145,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":146,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":147,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcomes if you forget to put /edit:"},{"lineNumber":148,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":149,"author":{"gitId":"yhtMinceraft1010x"},"content":"Task number not parsed. Did you forget to put \u0027/edit\u0027? Or did you not put a number? Not stonks!"},{"lineNumber":150,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":151,"author":{"gitId":"yhtMinceraft1010x"},"content":"Wrong formatting. Did you forget to put \u0027/edit\u0027 and/or the description? Not stonks! (Happens if you only put a number too!)"},{"lineNumber":152,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":153,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":154,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if you did not put a proper task number but still have /edit:"},{"lineNumber":155,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":156,"author":{"gitId":"yhtMinceraft1010x"},"content":"Task number not parsed. Did you forget to put \u0027/edit\u0027? Or did you not put a number? Not stonks!"},{"lineNumber":157,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":158,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":159,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if your description is empty but you still put /edit:"},{"lineNumber":160,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":161,"author":{"gitId":"yhtMinceraft1010x"},"content":"Wrong formatting. Did you forget to put \u0027/edit\u0027 and/or the description? Not stonks!"},{"lineNumber":162,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":163,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":164,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Mark task as done - `done`"},{"lineNumber":165,"author":{"gitId":"yhtMinceraft1010x"},"content":"Format: `done TASK_NUMBER`"},{"lineNumber":166,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":167,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in along with task number to put a tick for that task."},{"lineNumber":168,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":169,"author":{"gitId":"yhtMinceraft1010x"},"content":"Example of usage:"},{"lineNumber":170,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":171,"author":{"gitId":"yhtMinceraft1010x"},"content":"`done 1`"},{"lineNumber":172,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":173,"author":{"gitId":"yhtMinceraft1010x"},"content":"Expected outcome:"},{"lineNumber":174,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":175,"author":{"gitId":"yhtMinceraft1010x"},"content":"Stonks! You\u0027ve done this task:"},{"lineNumber":176,"author":{"gitId":"yhtMinceraft1010x"},"content":"Do CS2103T lecture quiz"},{"lineNumber":177,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":178,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":179,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if number field is empty:"},{"lineNumber":180,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":181,"author":{"gitId":"yhtMinceraft1010x"},"content":"Did you forget to put a number for the command you just typed in? Not stonks!"},{"lineNumber":182,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":183,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":184,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if number field has anything other than number or improper number (e.g. `done meme` or `done 1b`):"},{"lineNumber":185,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":186,"author":{"gitId":"yhtMinceraft1010x"},"content":"Did you put something other than a number or did you put a number incorrectly? Not stonks!"},{"lineNumber":187,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":188,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":189,"author":{"gitId":"yhtMinceraft1010x"},"content":"A task number is invalid if any of the following conditions are met:"},{"lineNumber":190,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":191,"author":{"gitId":"yhtMinceraft1010x"},"content":"1. 0"},{"lineNumber":192,"author":{"gitId":"yhtMinceraft1010x"},"content":"2. Negative number"},{"lineNumber":193,"author":{"gitId":"yhtMinceraft1010x"},"content":"3. Number is greater than number of tasks Meme Man has stored"},{"lineNumber":194,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":195,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":196,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if task number is invalid:"},{"lineNumber":197,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":198,"author":{"gitId":"yhtMinceraft1010x"},"content":"Invalid task number. Not stonks!"},{"lineNumber":199,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":200,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":201,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if task was already done:"},{"lineNumber":202,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":203,"author":{"gitId":"yhtMinceraft1010x"},"content":"This task is already done."},{"lineNumber":204,"author":{"gitId":"yhtMinceraft1010x"},"content":"I would have wanted to say Stonks..."},{"lineNumber":205,"author":{"gitId":"yhtMinceraft1010x"},"content":"but your usage of an illegal operation is Not Stonks!"},{"lineNumber":206,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":207,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":208,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Mark task as undone - `undone`"},{"lineNumber":209,"author":{"gitId":"yhtMinceraft1010x"},"content":"Format: `undone TASK_NUMBER`"},{"lineNumber":210,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":211,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in along with task number to put a cross for that task."},{"lineNumber":212,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":213,"author":{"gitId":"yhtMinceraft1010x"},"content":"Example of usage:"},{"lineNumber":214,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":215,"author":{"gitId":"yhtMinceraft1010x"},"content":"`undone 1`"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":218,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":219,"author":{"gitId":"yhtMinceraft1010x"},"content":"Not stonks! This task has been marked as undone: "},{"lineNumber":220,"author":{"gitId":"yhtMinceraft1010x"},"content":"Do CS2103T lecture quiz"},{"lineNumber":221,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":222,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":223,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if number field is empty:"},{"lineNumber":224,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":225,"author":{"gitId":"yhtMinceraft1010x"},"content":"Did you forget to put a number for the command you just typed in? Not stonks!"},{"lineNumber":226,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":227,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if number field has anything other than number or improper number (e.g. `undone meme` or `undone 1b`):"},{"lineNumber":228,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":229,"author":{"gitId":"yhtMinceraft1010x"},"content":"Did you put something other than a number or did you put a number incorrectly? Not stonks!"},{"lineNumber":230,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":231,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":232,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if task number is invalid:"},{"lineNumber":233,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":234,"author":{"gitId":"yhtMinceraft1010x"},"content":"Invalid task number. Not stonks!"},{"lineNumber":235,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":236,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":237,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if task was not done in the first place:"},{"lineNumber":238,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":239,"author":{"gitId":"yhtMinceraft1010x"},"content":"This task is already not done. Not stonks anyway!"},{"lineNumber":240,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":241,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":242,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Delete task - `delete`"},{"lineNumber":243,"author":{"gitId":"yhtMinceraft1010x"},"content":"Format: `delete TASK_NUMBER`"},{"lineNumber":244,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":245,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in along with task number to delete the corresponding task."},{"lineNumber":246,"author":{"gitId":"yhtMinceraft1010x"},"content":"Meme Man will display how many tasks you have left."},{"lineNumber":247,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":248,"author":{"gitId":"yhtMinceraft1010x"},"content":"Example of usage:"},{"lineNumber":249,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":250,"author":{"gitId":"yhtMinceraft1010x"},"content":"`delete 1`"},{"lineNumber":251,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":252,"author":{"gitId":"yhtMinceraft1010x"},"content":"Expected outcome:"},{"lineNumber":253,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":254,"author":{"gitId":"yhtMinceraft1010x"},"content":"This task has been deleted:"},{"lineNumber":255,"author":{"gitId":"yhtMinceraft1010x"},"content":"[T][✓] Watch CS2103T lecture"},{"lineNumber":256,"author":{"gitId":"yhtMinceraft1010x"},"content":"Total number of tasks: 3"},{"lineNumber":257,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":258,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":259,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if number field is empty:"},{"lineNumber":260,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":261,"author":{"gitId":"yhtMinceraft1010x"},"content":"Did you forget to put a number for the command you just typed in? Not stonks!"},{"lineNumber":262,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":263,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":264,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if number field has anything other than number or improper number (e.g. `delete meme` or `delete 1b`):"},{"lineNumber":265,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":266,"author":{"gitId":"yhtMinceraft1010x"},"content":"Did you put something other than a number or did you put a number incorrectly? Not stonks!"},{"lineNumber":267,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":268,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":269,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if task number is invalid:"},{"lineNumber":270,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":271,"author":{"gitId":"yhtMinceraft1010x"},"content":"Invalid task number. Not stonks!"},{"lineNumber":272,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":273,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Find tasks - `find`"},{"lineNumber":274,"author":{"gitId":"yhtMinceraft1010x"},"content":"Format: `find KEYWORD`"},{"lineNumber":275,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":276,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in along with a single keyword to find tasks that contain that keyword."},{"lineNumber":277,"author":{"gitId":"yhtMinceraft1010x"},"content":"Case-insensitive."},{"lineNumber":278,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":279,"author":{"gitId":"yhtMinceraft1010x"},"content":"Example usage:"},{"lineNumber":280,"author":{"gitId":"yhtMinceraft1010x"},"content":"`find CS2103T` "},{"lineNumber":281,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":282,"author":{"gitId":"yhtMinceraft1010x"},"content":"Expected outcome:"},{"lineNumber":283,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":284,"author":{"gitId":"yhtMinceraft1010x"},"content":"Here are my search results:"},{"lineNumber":285,"author":{"gitId":"yhtMinceraft1010x"},"content":"1. [T][✘] Watch CS2103T lecture"},{"lineNumber":286,"author":{"gitId":"yhtMinceraft1010x"},"content":"2. [D][✘] Do CS2103T lecture quiz (by: 2021-01-12)"},{"lineNumber":287,"author":{"gitId":"yhtMinceraft1010x"},"content":"3. [D][✘] Do CS2103T ip (by: 2021-01-13)"},{"lineNumber":288,"author":{"gitId":"yhtMinceraft1010x"},"content":"Hmmst\u0027ve... Stonks"},{"lineNumber":289,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":290,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":291,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if keyword field is empty:"},{"lineNumber":292,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":293,"author":{"gitId":"yhtMinceraft1010x"},"content":"No keyword given! Not stonks!"},{"lineNumber":294,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":295,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":296,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if no tasks are returned:"},{"lineNumber":297,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":298,"author":{"gitId":"yhtMinceraft1010x"},"content":"My search returned nothing. Not stonks!"},{"lineNumber":299,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":300,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":301,"author":{"gitId":"yhtMinceraft1010x"},"content":"## Other commands"},{"lineNumber":302,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":303,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Exit - `bye`"},{"lineNumber":304,"author":{"gitId":"yhtMinceraft1010x"},"content":"Format: `bye`"},{"lineNumber":305,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":306,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in to cause Meme Man to save your tasks and EJECT you... er... I mean leave..."},{"lineNumber":307,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":308,"author":{"gitId":"yhtMinceraft1010x"},"content":"### List - `list`"},{"lineNumber":309,"author":{"gitId":"yhtMinceraft1010x"},"content":"Format: `list`"},{"lineNumber":310,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":311,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in to cause Meme Man to show you your tasks in order and whether you have completed the tasks."},{"lineNumber":312,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":313,"author":{"gitId":"yhtMinceraft1010x"},"content":"Now suppose you have 4 tasks:"},{"lineNumber":314,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":315,"author":{"gitId":"yhtMinceraft1010x"},"content":"1. Watch CS2103T lecture (ToDo, Done)"},{"lineNumber":316,"author":{"gitId":"yhtMinceraft1010x"},"content":"2. Do CS2103T lecture quiz (Deadline of this Saturday, Done)"},{"lineNumber":317,"author":{"gitId":"yhtMinceraft1010x"},"content":"3. Do CS2103T ip (Deadline of next Monday, Not done)"},{"lineNumber":318,"author":{"gitId":"yhtMinceraft1010x"},"content":"4. Attend CS2101 class (Event happens next Tuesday, Not done)"},{"lineNumber":319,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":320,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":321,"author":{"gitId":"yhtMinceraft1010x"},"content":"How to get Meme Man to list out above tasks:"},{"lineNumber":322,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":323,"author":{"gitId":"yhtMinceraft1010x"},"content":"`list` "},{"lineNumber":324,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":325,"author":{"gitId":"yhtMinceraft1010x"},"content":"Expected outcome:"},{"lineNumber":326,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":327,"author":{"gitId":"yhtMinceraft1010x"},"content":"I print the tasks:"},{"lineNumber":328,"author":{"gitId":"yhtMinceraft1010x"},"content":"1. [T][✓] Watch CS2103T lecture"},{"lineNumber":329,"author":{"gitId":"yhtMinceraft1010x"},"content":"2. [D][✓] Do CS2103T lecture quiz (by: 2021-01-12)"},{"lineNumber":330,"author":{"gitId":"yhtMinceraft1010x"},"content":"3. [D][✘] Do CS2103T ip (by: 2021-01-13)"},{"lineNumber":331,"author":{"gitId":"yhtMinceraft1010x"},"content":"4. [E][✘] Attend CS2101 class (at: 2021-01-14)"},{"lineNumber":332,"author":{"gitId":"yhtMinceraft1010x"},"content":"Hmmst\u0027ve... Stonks"},{"lineNumber":333,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":334,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":335,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if there is nothing in task list:"},{"lineNumber":336,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":337,"author":{"gitId":"yhtMinceraft1010x"},"content":"I have nothing to print. Not stonks!"},{"lineNumber":338,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":339,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":340,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Easter egg - `orang`"},{"lineNumber":341,"author":{"gitId":"yhtMinceraft1010x"},"content":"Format: `orang`"},{"lineNumber":342,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":343,"author":{"gitId":"yhtMinceraft1010x"},"content":"The orang here refers to the Surreal Memes orange (spelled \"Orang\"), not Orang Utan orang."},{"lineNumber":344,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in and you\u0027d be pleasantly surprised at how punny Orang can be (AND have a realisation about the nature of CS2103/T)."},{"lineNumber":345,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":346,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Easter egg - `vegetal`"},{"lineNumber":347,"author":{"gitId":"yhtMinceraft1010x"},"content":"Format: `vegetal`"},{"lineNumber":348,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":349,"author":{"gitId":"yhtMinceraft1010x"},"content":"Did someone said... NO VEGETALS?"},{"lineNumber":350,"author":{"gitId":"-"},"content":""},{"lineNumber":351,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Invalid commands"},{"lineNumber":352,"author":{"gitId":"yhtMinceraft1010x"},"content":"If you key in an unrecognised command, this is what Meme Man has to say:"},{"lineNumber":353,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":354,"author":{"gitId":"yhtMinceraft1010x"},"content":"Command not recognised. Not stonks!"},{"lineNumber":355,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":356,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Excess inputs"},{"lineNumber":357,"author":{"gitId":"yhtMinceraft1010x"},"content":"If you key in additional inputs next to a no-input command such as `list`, this is what Meme Man has to say:"},{"lineNumber":358,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":359,"author":{"gitId":"yhtMinceraft1010x"},"content":"Excessive inputs for a no-input command. Not stonks!"},{"lineNumber":360,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"}],"authorContributionMap":{"yhtMinceraft1010x":345,"-":15}},{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":" * Represents a task with a deadline."},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":" */"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private LocalDate deadline;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Creates instance of DeadlineTask object."},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param taskDescription The description of task."},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param deadline LocalDate object of the date by which task should be completed."},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param isDone Boolean flag of whether task is done or not."},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public DeadlineTask(String taskDescription, LocalDate deadline, boolean isDone) {"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"        super(taskDescription, \"D\", isDone);"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Changes the description of the DeadlineTask"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param newDescription New description of the task."},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return New DeadlineTask with edited description"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public DeadlineTask editDescription(String newDescription) {"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return new DeadlineTask(newDescription, this.deadline, this.isDone);"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Marks a Deadline as done."},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Deadline that is marked as done."},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public DeadlineTask markAsDone() {"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (!this.isDone) {"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return new DeadlineTask(this.getDescription(), this.deadline, true);"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new UnsupportedOperationException(\"This task is already done.\\n\" +"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"                    \"I would have wanted to say Stonks...\\n\" +"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"                    \"but your usage of an illegal operation is Not Stonks!\");"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Marks a Deadline as undone."},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Deadline that is marked as undone."},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public DeadlineTask markAsUndone() {"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (this.isDone) {"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return new DeadlineTask(this.getDescription(), this.deadline, false);"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new UnsupportedOperationException(\"This task is already not done. Not stonks anyway!\");"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Converts the DeadlineTask into a string format for saving into file."},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return DeadlineTask in string format for file storage."},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String saveTask() {"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return String.format(\"%s /by %s\", super.saveTask(), this.deadline);"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Converts the DeadlineTask into a string format for display on user output."},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return DeadlineTask in string format for user output."},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String toString() {"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), this.deadline);"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":74}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":" * Represents a task that can occur only at a certain time."},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":" */"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class EventTask extends Task {"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private LocalDate event;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Creates instance of EventTask object."},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param taskDescription The description of task."},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param event LocalDate object of the date at which task should happen."},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param isDone Boolean flag of whether task is done or not."},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public EventTask(String taskDescription, LocalDate event, boolean isDone) {"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"        super(taskDescription, \"E\", isDone);"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.event \u003d event;"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Changes the description of the EventTask"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param newDescription New description of the task."},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return New EventTask with edited description"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public EventTask editDescription(String newDescription) {"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return new EventTask(newDescription, this.event, this.isDone);"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Marks an EventTask as done."},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return EventTask that is marked as done"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public EventTask markAsDone() {"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (!this.isDone) {"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return new EventTask(this.getDescription(), this.event, true);"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new UnsupportedOperationException(\"This task is already done.\\n\" +"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"                    \"I would have wanted to say Stonks...\\n\" +"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"                    \"but your usage of an illegal operation is Not Stonks!\");"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Marks an EventTask as undone."},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return EventTask that is marked as undone."},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public EventTask markAsUndone() {"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (this.isDone) {"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return new EventTask(this.getDescription(), this.event, false);"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new UnsupportedOperationException(\"This task is already not done. Not stonks anyway!\");"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Converts the EventTask into a string format for saving into file."},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return EventTask in string format for file storage."},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String saveTask() {"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return String.format(\"%s /at %s\", super.saveTask(), this.event);"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Converts the EventTask into a string format for display on user output."},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return EventTask in string format for user output."},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String toString() {"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return String.format(\"%s (at: %s)\", super.toString(), this.event);"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":74}},{"path":"src/main/java/FileManagement.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"package surrealchat.files;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":" * Handles file save/load operations."},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":" */"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class FileManagement {"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected File file;"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Creates a new FileManagement instance."},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param file File object with specified file path for save/load."},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public FileManagement(File file) {"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.file \u003d file;"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Scans a file to generate list of tasks in the file."},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return List of tasks as taken from file."},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @throws IOException If error arises during file creation process."},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public List\u003cString\u003e loadTaskFile() throws IOException {"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"        //Create file if not available and scan the file"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.file.createNewFile();"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"        Scanner fileScanner \u003d new Scanner(this.file);"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"        //Obtain task lines"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"        List\u003cString\u003e fileLines \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"        while (fileScanner.hasNext()) {"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"            String nextTask \u003d fileScanner.nextLine();"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"            fileLines.add(nextTask);"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return fileLines;"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Writes tasks into file to be saved."},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param fileTaskList List of tasks to be keyed into the file."},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void saveTasksToFile(List\u003cString\u003e fileTaskList) {"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"            //Write the tasks to file"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"            FileWriter fw \u003d new FileWriter(this.file);"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"            for (int i \u003d 0; i \u003c fileTaskList.size(); i++) {"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010x"},"content":"                fw.write(String.format(\"%s\\n\", fileTaskList.get(i)));"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010x"},"content":"            fw.close();"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } catch (IOException e) {"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.err.println(\"Something went wrong! Not stonks!\\n\");"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":59}},{"path":"src/main/java/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"package surrealchat;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":" * Stores 2 different types of objects."},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":" * @param \u003cT\u003e Generic type for first object."},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":" * @param \u003cU\u003e Generic type for second object."},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":" */"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class Pair\u003cT,U\u003e {"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected final T firstItem;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected final U secondItem;"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Creates a new Pair instance."},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param firstItem Any object considered first. Usually a String for tagging."},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param secondItem Any object considered second."},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public Pair(T firstItem, U secondItem) {"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.firstItem \u003d firstItem;"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.secondItem \u003d secondItem;"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Obtains the first item."},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return First item."},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public T getFirstItem() {"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return this.firstItem;"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Obtains the second item."},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Second item."},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public U getSecondItem() {"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return this.secondItem;"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":37}},{"path":"src/main/java/SurrealChat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"import surrealchat.Pair;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"import surrealchat.task.Task;"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"import surrealchat.task.TaskParser;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"import surrealchat.user.UserInput;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"import surrealchat.user.UserOutput;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"import surrealchat.files.FileManagement;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.io.File;"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":" * Handles logic of SurrealChat."},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":" */"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class SurrealChat {"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected static final String TASK_FILE_PATH \u003d \"tasks.txt\";"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected UserInput userInput;"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected TaskParser taskParser;"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected FileManagement fileManagement;"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected UserOutput userOutput;"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private SurrealChat(UserInput userInput, TaskParser taskParser,"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"                        FileManagement fileManagement, UserOutput userOutput) {"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.userInput \u003d userInput;"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.taskParser \u003d taskParser;"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.fileManagement \u003d fileManagement;"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.userOutput \u003d userOutput;"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Creates new SurrealChat instance."},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param filePath Path of file for save/load."},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param verboseFlag Flag to determine whether to print verbose output."},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return SurrealChat instance."},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public static SurrealChat initSurrealChat(File filePath, boolean verboseFlag) {"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"        UserInput userInput \u003d new UserInput(new Scanner(System.in));"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"        TaskParser taskParser \u003d new TaskParser();"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"        FileManagement fileManagement \u003d new FileManagement(filePath);"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"        UserOutput userOutput \u003d new UserOutput(verboseFlag);"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return new SurrealChat(userInput, taskParser, fileManagement, userOutput);"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private void initialGreeting() {"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.userOutput.printInitialGreeting();"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private void exitProgram() {"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.userOutput.printExitProgram();"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private void printEasterEgg(String easterEgg) {"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.userOutput.printEasterEggOutput(easterEgg);"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private boolean commandLogic(boolean maintainLoop, String userCommand) {"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010x"},"content":"        switch(userCommand) {"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"bye\":"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.userInput.checkExcessArguments();"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010x"},"content":"            maintainLoop \u003d false; //Break out of infinite loop"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010x"},"content":"            break;"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case\"list\":"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.userInput.checkExcessArguments();"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Pair\u003cString, List\u003cTask\u003e\u003e listPair \u003d this.taskParser.sendListToPrint();"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.userOutput.printOutput(listPair);"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010x"},"content":"            break;"},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"todo\", \"deadline\", \"event\":"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010x"},"content":"            String description \u003d this.userInput.getInputDescription();"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Pair\u003cString, Pair\u003cTask, Integer\u003e\u003e taskPair \u003d"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010x"},"content":"                    this.taskParser.parseUserTaskInput(userCommand, description);"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.userOutput.printOutput(taskPair);"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010x"},"content":"            break;"},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"edit\":"},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010x"},"content":"            description \u003d this.userInput.getInputDescription(); //Get raw form"},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Pair\u003cString, Task\u003e editPair \u003d this.taskParser.editDescription(description);"},{"lineNumber":78,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.userOutput.printOutput(editPair);"},{"lineNumber":79,"author":{"gitId":"yhtMinceraft1010x"},"content":"            break;"},{"lineNumber":80,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"done\":"},{"lineNumber":81,"author":{"gitId":"yhtMinceraft1010x"},"content":"            description \u003d this.userInput.getInputDescription(); //Get raw form"},{"lineNumber":82,"author":{"gitId":"yhtMinceraft1010x"},"content":"            int taskNumber \u003d this.userInput.getInputNumber(description); //Process to obtain int"},{"lineNumber":83,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Pair\u003cString, Task\u003e donePair \u003d this.taskParser.markAsDone(taskNumber);"},{"lineNumber":84,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.userOutput.printOutput(donePair);"},{"lineNumber":85,"author":{"gitId":"yhtMinceraft1010x"},"content":"            break;"},{"lineNumber":86,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"undone\":"},{"lineNumber":87,"author":{"gitId":"yhtMinceraft1010x"},"content":"            description \u003d this.userInput.getInputDescription(); //Get raw form"},{"lineNumber":88,"author":{"gitId":"yhtMinceraft1010x"},"content":"            taskNumber \u003d this.userInput.getInputNumber(description); //Process to obtain int"},{"lineNumber":89,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Pair\u003cString, Task\u003e undonePair \u003d this.taskParser.markAsUndone(taskNumber);"},{"lineNumber":90,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.userOutput.printOutput(undonePair);"},{"lineNumber":91,"author":{"gitId":"yhtMinceraft1010x"},"content":"            break;"},{"lineNumber":92,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"delete\":"},{"lineNumber":93,"author":{"gitId":"yhtMinceraft1010x"},"content":"            description \u003d this.userInput.getInputDescription(); //Get raw form"},{"lineNumber":94,"author":{"gitId":"yhtMinceraft1010x"},"content":"            taskNumber \u003d this.userInput.getInputNumber(description); //Process to obtain int"},{"lineNumber":95,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Pair\u003cString, Pair\u003cTask, Integer\u003e\u003e deletePair \u003d this.taskParser.deleteTask(taskNumber);"},{"lineNumber":96,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.userOutput.printOutput(deletePair);"},{"lineNumber":97,"author":{"gitId":"yhtMinceraft1010x"},"content":"            break;"},{"lineNumber":98,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"find\":"},{"lineNumber":99,"author":{"gitId":"yhtMinceraft1010x"},"content":"            String keyword \u003d this.userInput.getInputDescription();"},{"lineNumber":100,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Pair\u003cString, List\u003cTask\u003e\u003e searchPair \u003d this.taskParser.searchTasks(keyword);"},{"lineNumber":101,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.userOutput.printOutput(searchPair);"},{"lineNumber":102,"author":{"gitId":"yhtMinceraft1010x"},"content":"            break;"},{"lineNumber":103,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"orang\", \"vegetal\":"},{"lineNumber":104,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.userInput.checkExcessArguments();"},{"lineNumber":105,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.printEasterEgg(userCommand);"},{"lineNumber":106,"author":{"gitId":"yhtMinceraft1010x"},"content":"            break;"},{"lineNumber":107,"author":{"gitId":"yhtMinceraft1010x"},"content":"        default:"},{"lineNumber":108,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.userInput.scannerNextLine(); //Clear input line"},{"lineNumber":109,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new UnsupportedOperationException(\"Command not recognised. Not stonks!\");"},{"lineNumber":110,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return maintainLoop;"},{"lineNumber":112,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":114,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * The driver code for Meme Man chatbot."},{"lineNumber":116,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param args - Optional argument"},{"lineNumber":117,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public static void main(String[] args) {"},{"lineNumber":119,"author":{"gitId":"yhtMinceraft1010x"},"content":"        //Initialise SurrealChat"},{"lineNumber":120,"author":{"gitId":"yhtMinceraft1010x"},"content":"        boolean verboseFlag \u003d true;"},{"lineNumber":121,"author":{"gitId":"yhtMinceraft1010x"},"content":"        SurrealChat surrealChat \u003d SurrealChat.initSurrealChat(new File(SurrealChat.TASK_FILE_PATH), verboseFlag);"},{"lineNumber":122,"author":{"gitId":"yhtMinceraft1010x"},"content":"        surrealChat.initialGreeting();"},{"lineNumber":123,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":124,"author":{"gitId":"yhtMinceraft1010x"},"content":"        //Try to read from file"},{"lineNumber":125,"author":{"gitId":"yhtMinceraft1010x"},"content":"        try {"},{"lineNumber":126,"author":{"gitId":"yhtMinceraft1010x"},"content":"            List\u003cString\u003e fileLines \u003d surrealChat.fileManagement.loadTaskFile();"},{"lineNumber":127,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Pair\u003cString, List\u003cTask\u003e\u003e filePair \u003d surrealChat.taskParser.parseFileLines(fileLines);"},{"lineNumber":128,"author":{"gitId":"yhtMinceraft1010x"},"content":"            surrealChat.userOutput.printOutput(filePair);"},{"lineNumber":129,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } catch (IOException e) {"},{"lineNumber":130,"author":{"gitId":"yhtMinceraft1010x"},"content":"            surrealChat.userOutput.printException(e);"},{"lineNumber":131,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":133,"author":{"gitId":"yhtMinceraft1010x"},"content":"        //Read user commands"},{"lineNumber":134,"author":{"gitId":"yhtMinceraft1010x"},"content":"        String userCommand;"},{"lineNumber":135,"author":{"gitId":"yhtMinceraft1010x"},"content":"        boolean maintainLoop \u003d true;"},{"lineNumber":136,"author":{"gitId":"yhtMinceraft1010x"},"content":"        while (maintainLoop) {"},{"lineNumber":137,"author":{"gitId":"yhtMinceraft1010x"},"content":"            userCommand \u003d surrealChat.userInput.getInputCommand();"},{"lineNumber":138,"author":{"gitId":"yhtMinceraft1010x"},"content":"            try {"},{"lineNumber":139,"author":{"gitId":"yhtMinceraft1010x"},"content":"                maintainLoop \u003d surrealChat.commandLogic(maintainLoop, userCommand);"},{"lineNumber":140,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } catch (Exception e) {"},{"lineNumber":141,"author":{"gitId":"yhtMinceraft1010x"},"content":"                surrealChat.userOutput.printException(e);"},{"lineNumber":142,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":143,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":145,"author":{"gitId":"yhtMinceraft1010x"},"content":"        //Save and exit"},{"lineNumber":146,"author":{"gitId":"yhtMinceraft1010x"},"content":"        List\u003cString\u003e fileTaskList \u003d surrealChat.taskParser.convertTasksForFile();"},{"lineNumber":147,"author":{"gitId":"yhtMinceraft1010x"},"content":"        surrealChat.fileManagement.saveTasksToFile(fileTaskList);"},{"lineNumber":148,"author":{"gitId":"yhtMinceraft1010x"},"content":"        surrealChat.userInput.closeScanner();"},{"lineNumber":149,"author":{"gitId":"yhtMinceraft1010x"},"content":"        surrealChat.exitProgram();"},{"lineNumber":150,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":151}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"//Below solution adapted from partial solution in: https://nus-cs2103-ay2021s2.github.io/website/schedule/week2/project.html"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":" * Represents an abstract task, which task subclasses inherit from."},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":" */"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"public abstract class Task {"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected final String description;"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected final String type;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected final boolean isDone;"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Creates instance of Task object."},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param description Description of task."},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param type Type in terms of todo (denoted \"T\"), deadline (denoted \"D\"), event (denoted \"E\")."},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param isDone Boolean flag of whether task is done or not."},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public Task(String description, String type, boolean isDone) {"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.type \u003d type;"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String getType() {"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return this.type;"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Converts status of isDone into integer."},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return 1 if task was completed and 0 if task was not completed."},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public int getStatusInt() {"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (this.isDone) {"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return 1;"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return 0;"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Gives an icon displaying whether task was completed."},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Tick if task was completed and cross if task was not completed."},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String getStatusIcon() {"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Gives a description of the Task."},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Task description."},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String getDescription() {"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return this.description;"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Changes the description of the Task"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return New Task with edited description"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public abstract Task editDescription(String newDescription);"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Marks the Task as done."},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Task marked as done."},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public abstract Task markAsDone();"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Marks the Task as undone."},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Task marked as undone."},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public abstract Task markAsUndone();"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Converts the Task into a string format for saving into file."},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Task in string format for file storage."},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String saveTask() {"},{"lineNumber":79,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return String.format(\"%s/split/%s/split/%s\", this.getType(), this.getStatusInt(), this.getDescription());"},{"lineNumber":80,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":82,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Converts the Task into a string format for display on user output."},{"lineNumber":84,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Task in string format for user output."},{"lineNumber":85,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Override"},{"lineNumber":87,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String toString() {"},{"lineNumber":88,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return String.format(\"[%s][%s] %s\", this.getType(), this.getStatusIcon(), this.getDescription());"},{"lineNumber":89,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":90}},{"path":"src/main/java/TaskManagement.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":" * Handles storing of tasks."},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":" */"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class TaskManagement {"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected List\u003cTask\u003e taskList;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Creates instance of TaskManagement object."},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param taskList List of tasks."},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public TaskManagement(List\u003cTask\u003e taskList) {"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Returns List of tasks for further processing."},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return List of tasks."},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public List\u003cTask\u003e getTaskList() {"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return this.taskList;"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Adds task to internal task list."},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param task Task to be added."},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void addTask(Task task) {"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.taskList.add(task);"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Changes the description of a task designated by a number."},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param taskNumber Position number of task (starting from 1) to be edited."},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param newDescription New description of the task."},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Task that has been edited."},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public Task editDescription(int taskNumber, String newDescription) {"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"        Task editedTask \u003d this.taskList.get(taskNumber - 1).editDescription(newDescription);"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.taskList.set(taskNumber - 1, editedTask);"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return editedTask;"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Marks a task designated by number as done."},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param taskNumber Position number of task (starting from 1) to be marked as done."},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Task that has been marked as done."},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public Task markAsDone(int taskNumber) {"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010x"},"content":"        Task doneTask \u003d this.taskList.get(taskNumber - 1).markAsDone();"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.taskList.set(taskNumber - 1, doneTask);"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return doneTask;"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Marks a task designated by number as undone."},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param taskNumber Position number of task (starting from 1) to be marked as undone."},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Task that has been marked as undone."},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public Task markAsUndone(int taskNumber) {"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010x"},"content":"        Task undoneTask \u003d this.taskList.get(taskNumber - 1).markAsUndone();"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.taskList.set(taskNumber - 1, undoneTask);"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return undoneTask;"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Deletes a task from the list."},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param taskNumber Position number of task (starting from 1) to be deleted."},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Deleted task."},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public Task deleteTask(int taskNumber) {"},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return this.taskList.remove(taskNumber - 1);"},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":77}},{"path":"src/main/java/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"import surrealchat.Pair;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.InputMismatchException;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.time.LocalDate;"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":" * Handles intermediary operations between TaskManagement and other classes."},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":" */"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class TaskParser {"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected TaskManagement taskManagement;"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected static final int TASK_UNDONE \u003d 0;"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Creates new TaskParser object."},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public TaskParser() {"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.taskManagement \u003d new TaskManagement(new ArrayList\u003cTask\u003e());"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Parses isDone int into boolean."},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param isDone Integer indicating whether task is completed or not."},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return true if isDone \u003d\u003d 1, false if isDone \u003d\u003d 0."},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public boolean parseIsDoneInt(int isDone) {"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"        switch(isDone) {"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case 0:"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return false;"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case 1:"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return true;"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"        default:"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new InputMismatchException(\"Int has to be 0 or 1. Not stonks!\");"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Converts tasks in file string format to Task objects."},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param fileLines List of tasks in file string format."},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Pair of a \"fileTasksAdded\" string and a list of Task objects."},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public Pair\u003cString, List\u003cTask\u003e\u003e parseFileLines(List\u003cString\u003e fileLines) {"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"        for (int i \u003d 0; i \u003c fileLines.size(); i++) {"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"            //Parse strings"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"            String[] taskComponents \u003d fileLines.get(i).split(\"/split/\");"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010x"},"content":"            String taskType \u003d taskComponents[0];"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010x"},"content":"            int taskDone \u003d Integer.valueOf(taskComponents[1]);"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010x"},"content":"            String description \u003d taskComponents[2];"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010x"},"content":"            //Convert to Task objects"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010x"},"content":"            switch(taskType) {"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010x"},"content":"            case \"T\":"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010x"},"content":"                this.addToDo(description, taskDone);"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010x"},"content":"            case \"D\":"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010x"},"content":"                this.addDeadline(description, taskDone);"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010x"},"content":"            case \"E\":"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010x"},"content":"                this.addEvent(description, taskDone);"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010x"},"content":"            default:"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new InputMismatchException(\"The task type scanned from file is invalid. Not Stonks!\");"},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010x"},"content":"        //Obtain list for printing"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010x"},"content":"        List\u003cTask\u003e taskList \u003d this.taskManagement.getTaskList();"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return new Pair\u003cString, List\u003cTask\u003e\u003e(\"fileTasksAdded\", taskList);"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Returns total number of tasks."},{"lineNumber":78,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Total number of tasks."},{"lineNumber":79,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public int getNumberOfTasks() {"},{"lineNumber":81,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return this.taskManagement.getTaskList().size();"},{"lineNumber":82,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":84,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Converts a task from user input into Task objects."},{"lineNumber":86,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param command Type of task."},{"lineNumber":87,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param taskDescription"},{"lineNumber":88,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Pair consisting of a \"userTaskAdded\" string and another pair of the added Task object and total number of tasks."},{"lineNumber":89,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public Pair\u003cString, Pair\u003cTask, Integer\u003e\u003e parseUserTaskInput(String command, String taskDescription) {"},{"lineNumber":91,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (taskDescription.isEmpty()) {"},{"lineNumber":92,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new InputMismatchException(\"Empty \" + command + \" task description. Not stonks!\");"},{"lineNumber":93,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":94,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Task addedTask;"},{"lineNumber":95,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":96,"author":{"gitId":"yhtMinceraft1010x"},"content":"            //Convert to Task object"},{"lineNumber":97,"author":{"gitId":"yhtMinceraft1010x"},"content":"            switch(command) {"},{"lineNumber":98,"author":{"gitId":"yhtMinceraft1010x"},"content":"            case \"todo\":"},{"lineNumber":99,"author":{"gitId":"yhtMinceraft1010x"},"content":"                addedTask \u003d this.addToDo(taskDescription, this.TASK_UNDONE);"},{"lineNumber":100,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":101,"author":{"gitId":"yhtMinceraft1010x"},"content":"            case \"deadline\":"},{"lineNumber":102,"author":{"gitId":"yhtMinceraft1010x"},"content":"                addedTask \u003d this.addDeadline(taskDescription, this.TASK_UNDONE);"},{"lineNumber":103,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":104,"author":{"gitId":"yhtMinceraft1010x"},"content":"            case \"event\":"},{"lineNumber":105,"author":{"gitId":"yhtMinceraft1010x"},"content":"                addedTask \u003d this.addEvent(taskDescription, this.TASK_UNDONE);"},{"lineNumber":106,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":107,"author":{"gitId":"yhtMinceraft1010x"},"content":"            default:"},{"lineNumber":108,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new InputMismatchException(\"Somehow, a wrong command was entered. \" +"},{"lineNumber":109,"author":{"gitId":"yhtMinceraft1010x"},"content":"                        \"Command has to be task type. Not stonks!\");"},{"lineNumber":110,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":112,"author":{"gitId":"yhtMinceraft1010x"},"content":"            //Output pair for printing"},{"lineNumber":113,"author":{"gitId":"yhtMinceraft1010x"},"content":"            int numberOfTasks \u003d this.getNumberOfTasks();"},{"lineNumber":114,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return new Pair\u003cString, Pair\u003cTask, Integer\u003e\u003e(\"userTaskAdded\","},{"lineNumber":115,"author":{"gitId":"yhtMinceraft1010x"},"content":"                    new Pair\u003cTask, Integer\u003e(addedTask, numberOfTasks));"},{"lineNumber":116,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":118,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":120,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private ToDoTask addToDo(String taskDescription, int isDone) {"},{"lineNumber":121,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (taskDescription.isEmpty()) {"},{"lineNumber":122,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new NoSuchElementException(\"Empty todo task description. Not stonks!\");"},{"lineNumber":123,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":124,"author":{"gitId":"yhtMinceraft1010x"},"content":"            ToDoTask newTask \u003d new ToDoTask(taskDescription.trim(), this.parseIsDoneInt(isDone));"},{"lineNumber":125,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.taskManagement.addTask(newTask);"},{"lineNumber":126,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return newTask;"},{"lineNumber":127,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":130,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private LocalDate parseDate(String dateString) {"},{"lineNumber":131,"author":{"gitId":"yhtMinceraft1010x"},"content":"        try {"},{"lineNumber":132,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return LocalDate.parse(dateString);"},{"lineNumber":133,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":134,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new IllegalArgumentException(\"Input date format is incorrect. Not stonks!\");"},{"lineNumber":135,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":138,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private DeadlineTask addDeadline(String taskDescription, int isDone) {"},{"lineNumber":139,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (taskDescription.isEmpty()) {"},{"lineNumber":140,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new NoSuchElementException(\"Empty deadline task description. Not stonks!\");"},{"lineNumber":141,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":142,"author":{"gitId":"yhtMinceraft1010x"},"content":"            //Split the description into description and deadline"},{"lineNumber":143,"author":{"gitId":"yhtMinceraft1010x"},"content":"            String[] descriptionSplitArray \u003d taskDescription.split(\"/by\");"},{"lineNumber":144,"author":{"gitId":"yhtMinceraft1010x"},"content":"            try {"},{"lineNumber":145,"author":{"gitId":"yhtMinceraft1010x"},"content":"                LocalDate deadlineDate \u003d this.parseDate(descriptionSplitArray[1].trim());"},{"lineNumber":146,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":147,"author":{"gitId":"yhtMinceraft1010x"},"content":"                //Create Deadline task"},{"lineNumber":148,"author":{"gitId":"yhtMinceraft1010x"},"content":"                DeadlineTask newTask \u003d new DeadlineTask(descriptionSplitArray[0].trim(),"},{"lineNumber":149,"author":{"gitId":"yhtMinceraft1010x"},"content":"                        deadlineDate, this.parseIsDoneInt(isDone));"},{"lineNumber":150,"author":{"gitId":"yhtMinceraft1010x"},"content":"                this.taskManagement.addTask(newTask);"},{"lineNumber":151,"author":{"gitId":"yhtMinceraft1010x"},"content":"                return newTask;"},{"lineNumber":152,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } catch (ArrayIndexOutOfBoundsException e) { //Happens if split does not occur"},{"lineNumber":153,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new ArrayIndexOutOfBoundsException(\"Wrong formatting. Did you forget to put \u0027/by\u0027? Not stonks!\");"},{"lineNumber":154,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":158,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private EventTask addEvent(String taskDescription, int isDone) {"},{"lineNumber":159,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (taskDescription.isEmpty()) {"},{"lineNumber":160,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new NoSuchElementException(\"Empty event task description. Not stonks!\");"},{"lineNumber":161,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":162,"author":{"gitId":"yhtMinceraft1010x"},"content":"            //Split the description into description and event"},{"lineNumber":163,"author":{"gitId":"yhtMinceraft1010x"},"content":"            String[] descriptionSplitArray \u003d taskDescription.split(\"/at\");"},{"lineNumber":164,"author":{"gitId":"yhtMinceraft1010x"},"content":"            try {"},{"lineNumber":165,"author":{"gitId":"yhtMinceraft1010x"},"content":"                LocalDate eventDate \u003d this.parseDate(descriptionSplitArray[1].trim());"},{"lineNumber":166,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":167,"author":{"gitId":"yhtMinceraft1010x"},"content":"                //Create Event task"},{"lineNumber":168,"author":{"gitId":"yhtMinceraft1010x"},"content":"                EventTask newTask \u003d new EventTask(descriptionSplitArray[0].trim(),"},{"lineNumber":169,"author":{"gitId":"yhtMinceraft1010x"},"content":"                        eventDate, this.parseIsDoneInt(isDone));"},{"lineNumber":170,"author":{"gitId":"yhtMinceraft1010x"},"content":"                this.taskManagement.addTask(newTask);"},{"lineNumber":171,"author":{"gitId":"yhtMinceraft1010x"},"content":"                return newTask;"},{"lineNumber":172,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } catch (ArrayIndexOutOfBoundsException e) { //Happens if split does not occur"},{"lineNumber":173,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new ArrayIndexOutOfBoundsException(\"Wrong formatting. Did you forget to put \u0027/at\u0027? Not stonks!\");"},{"lineNumber":174,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":175,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":176,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":179,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private boolean checkInvalidTaskNumber(int taskNumber) {"},{"lineNumber":180,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return ((taskNumber \u003c\u003d 0) || (taskNumber \u003e this.taskManagement.getTaskList().size()));"},{"lineNumber":181,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":183,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":184,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Edits the description of a task."},{"lineNumber":185,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param rawDescription A raw user input with both task number and new description."},{"lineNumber":186,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Pair of \"editDescript\" string and the edited task."},{"lineNumber":187,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":188,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public Pair\u003cString, Task\u003e editDescription(String rawDescription) {"},{"lineNumber":189,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (rawDescription.isEmpty()) {"},{"lineNumber":190,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new NoSuchElementException(\"Did you forget to add the task number and new description? Not stonks!\");"},{"lineNumber":191,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":192,"author":{"gitId":"yhtMinceraft1010x"},"content":"            //Split the description into task number and description"},{"lineNumber":193,"author":{"gitId":"yhtMinceraft1010x"},"content":"            String[] descriptionSplitArray \u003d rawDescription.split(\"/edit\");"},{"lineNumber":194,"author":{"gitId":"yhtMinceraft1010x"},"content":"            try {"},{"lineNumber":195,"author":{"gitId":"yhtMinceraft1010x"},"content":"                int taskNumber \u003d Integer.valueOf(descriptionSplitArray[0].trim());"},{"lineNumber":196,"author":{"gitId":"yhtMinceraft1010x"},"content":"                String newDescription \u003d descriptionSplitArray[1].trim();"},{"lineNumber":197,"author":{"gitId":"yhtMinceraft1010x"},"content":"                //Edit task description"},{"lineNumber":198,"author":{"gitId":"yhtMinceraft1010x"},"content":"                if (this.checkInvalidTaskNumber(taskNumber)) {"},{"lineNumber":199,"author":{"gitId":"yhtMinceraft1010x"},"content":"                    throw new IllegalArgumentException(\"Invalid task number. Not stonks!\");"},{"lineNumber":200,"author":{"gitId":"yhtMinceraft1010x"},"content":"                } else if (newDescription.isEmpty()) {"},{"lineNumber":201,"author":{"gitId":"yhtMinceraft1010x"},"content":"                    throw new IllegalArgumentException(\"No description provided for editing. Not stonks!\");"},{"lineNumber":202,"author":{"gitId":"yhtMinceraft1010x"},"content":"                } else {"},{"lineNumber":203,"author":{"gitId":"yhtMinceraft1010x"},"content":"                    Task editedTask \u003d this.taskManagement.editDescription(taskNumber, newDescription);"},{"lineNumber":204,"author":{"gitId":"yhtMinceraft1010x"},"content":"                    return new Pair\u003cString, Task\u003e(\"editDescript\", editedTask);"},{"lineNumber":205,"author":{"gitId":"yhtMinceraft1010x"},"content":"                }"},{"lineNumber":206,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } catch (NumberFormatException e) { //Can happen if clean split does not occur."},{"lineNumber":207,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new NumberFormatException("},{"lineNumber":208,"author":{"gitId":"yhtMinceraft1010x"},"content":"                        \"Task number not parsed. Did you forget to put \u0027/edit\u0027? Or did you not put a number? Not stonks!\");"},{"lineNumber":209,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":210,"author":{"gitId":"yhtMinceraft1010x"},"content":"            catch (ArrayIndexOutOfBoundsException e) { //Happens if split does not occur."},{"lineNumber":211,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new ArrayIndexOutOfBoundsException("},{"lineNumber":212,"author":{"gitId":"yhtMinceraft1010x"},"content":"                        \"Wrong formatting. Did you forget to put \u0027/edit\u0027 and/or the description? Not stonks!\");"},{"lineNumber":213,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":214,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":217,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":218,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Marks a task designated by number as done."},{"lineNumber":219,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param taskNumber Position number of task (starting from 1) to be marked as done."},{"lineNumber":220,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Pair of \"markDone\" string and the task marked as done."},{"lineNumber":221,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":222,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public Pair\u003cString, Task\u003e markAsDone(int taskNumber) {"},{"lineNumber":223,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (this.checkInvalidTaskNumber(taskNumber)) {"},{"lineNumber":224,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new IllegalArgumentException(\"Invalid task number. Not stonks!\");"},{"lineNumber":225,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":226,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Task doneTask \u003d this.taskManagement.markAsDone(taskNumber);"},{"lineNumber":227,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return new Pair\u003cString, Task\u003e(\"markDone\", doneTask);"},{"lineNumber":228,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":229,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":231,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":232,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Marks a task designated by number as undone."},{"lineNumber":233,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param taskNumber Position number of task (starting from 1) to be marked as undone."},{"lineNumber":234,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Pair of \"markunDone\" string and the task marked as undone."},{"lineNumber":235,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":236,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public Pair\u003cString, Task\u003e markAsUndone(int taskNumber) {"},{"lineNumber":237,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (this.checkInvalidTaskNumber(taskNumber)) {"},{"lineNumber":238,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new IllegalArgumentException(\"Invalid task number. Not stonks!\");"},{"lineNumber":239,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":240,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Task undoneTask \u003d this.taskManagement.markAsUndone(taskNumber);"},{"lineNumber":241,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return new Pair\u003cString, Task\u003e(\"markUndone\", undoneTask);"},{"lineNumber":242,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":243,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":245,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":246,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Deletes a task from the list."},{"lineNumber":247,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param taskNumber Position number of task (starting from 1) to be deleted."},{"lineNumber":248,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Pair of \"deleteTask\" string and another pair of the deleted Task and total number of tasks remaining."},{"lineNumber":249,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":250,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public Pair\u003cString, Pair\u003cTask, Integer\u003e\u003e deleteTask(int taskNumber) {"},{"lineNumber":251,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (this.checkInvalidTaskNumber(taskNumber)) {"},{"lineNumber":252,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new IllegalArgumentException(\"Invalid task number. Not stonks!\");"},{"lineNumber":253,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":254,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Task deletedTask \u003d this.taskManagement.deleteTask(taskNumber);"},{"lineNumber":255,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Pair\u003cString, Pair\u003cTask, Integer\u003e\u003e deletePair \u003d new Pair\u003cString, Pair\u003cTask, Integer\u003e\u003e(\"deleteTask\","},{"lineNumber":256,"author":{"gitId":"yhtMinceraft1010x"},"content":"                    new Pair\u003cTask, Integer\u003e(deletedTask, this.getNumberOfTasks()));"},{"lineNumber":257,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return deletePair;"},{"lineNumber":258,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":259,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":261,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":262,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Searches for tasks based on whether task contains keyword. Is case-insensitive."},{"lineNumber":263,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param keyword Keyword to search for tasks."},{"lineNumber":264,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return A pair of \"searchTasks\" string and a list of tasks containing keyword."},{"lineNumber":265,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":266,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public Pair\u003cString, List\u003cTask\u003e\u003e searchTasks(String keyword) {"},{"lineNumber":267,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (keyword.isEmpty()) {"},{"lineNumber":268,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new IllegalArgumentException(\"No keyword given! Not stonks!\");"},{"lineNumber":269,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":270,"author":{"gitId":"yhtMinceraft1010x"},"content":"            List\u003cTask\u003e searchResults \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":271,"author":{"gitId":"yhtMinceraft1010x"},"content":"            List\u003cTask\u003e allTasks \u003d this.taskManagement.getTaskList();"},{"lineNumber":272,"author":{"gitId":"yhtMinceraft1010x"},"content":"            for (int i \u003d 0; i \u003c allTasks.size(); i++) {"},{"lineNumber":273,"author":{"gitId":"yhtMinceraft1010x"},"content":"                Task task \u003d allTasks.get(i);"},{"lineNumber":274,"author":{"gitId":"yhtMinceraft1010x"},"content":"                if (task.toString().toLowerCase().contains(keyword.toLowerCase())) {"},{"lineNumber":275,"author":{"gitId":"yhtMinceraft1010x"},"content":"                    searchResults.add(task);"},{"lineNumber":276,"author":{"gitId":"yhtMinceraft1010x"},"content":"                }"},{"lineNumber":277,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":278,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return new Pair\u003cString, List\u003cTask\u003e\u003e(\"searchTasks\", searchResults);"},{"lineNumber":279,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":280,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":281,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":282,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":283,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Generates list of tasks for saving into a file."},{"lineNumber":284,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return List of tasks in file string format."},{"lineNumber":285,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":286,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public List\u003cString\u003e convertTasksForFile() {"},{"lineNumber":287,"author":{"gitId":"yhtMinceraft1010x"},"content":"        List\u003cTask\u003e rawTaskList \u003d this.taskManagement.getTaskList();"},{"lineNumber":288,"author":{"gitId":"yhtMinceraft1010x"},"content":"        List\u003cString\u003e fileTaskList \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":289,"author":{"gitId":"yhtMinceraft1010x"},"content":"        for (int i \u003d 0; i \u003c rawTaskList.size(); i++) {"},{"lineNumber":290,"author":{"gitId":"yhtMinceraft1010x"},"content":"            fileTaskList.add(rawTaskList.get(i).saveTask());"},{"lineNumber":291,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":292,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return fileTaskList;"},{"lineNumber":293,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":294,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":295,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":296,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Generates list of tasks with tag for print by UserOutput."},{"lineNumber":297,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Pair of \"printTaskList\" string and list of tasks."},{"lineNumber":298,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":299,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public Pair\u003cString, List\u003cTask\u003e\u003e sendListToPrint() {"},{"lineNumber":300,"author":{"gitId":"yhtMinceraft1010x"},"content":"        List\u003cTask\u003e rawTaskList \u003d this.taskManagement.getTaskList();"},{"lineNumber":301,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return new Pair\u003cString, List\u003cTask\u003e\u003e(\"printTaskList\", rawTaskList);"},{"lineNumber":302,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":303,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":303}},{"path":"src/main/java/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":" * Represents a task with no condition."},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class ToDoTask extends Task {"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Creates instance of ToDoTask object."},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param taskDescription The description of task."},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param isDone Boolean flag of whether task is done or not."},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public ToDoTask(String taskDescription, boolean isDone) {"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"        super(taskDescription, \"T\", isDone);"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Changes the description of the ToDoTask"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param newDescription New description of the task."},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return New ToDoTask with edited description"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public ToDoTask editDescription(String newDescription) {"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return new ToDoTask(newDescription, this.isDone);"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Marks a ToDoTask as done."},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return ToDoTask that is marked as done."},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public ToDoTask markAsDone() {"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (!this.isDone) {"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return new ToDoTask(this.getDescription(), true);"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new UnsupportedOperationException(\"This task is already done.\\n\" +"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"                    \"I would have wanted to say Stonks...\\n\" +"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"                    \"but your usage of an illegal operation is Not Stonks!\");"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Marks a ToDoTask as undone."},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return ToDoTask that is marked as undone."},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public ToDoTask markAsUndone() {"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (this.isDone) {"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return new ToDoTask(this.getDescription(), false);"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new UnsupportedOperationException(\"This task is already not done. Not stonks anyway!\");"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":50}},{"path":"src/main/java/UserInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"package surrealchat.user;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.InputMismatchException;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":" * Processes inputs given by the user."},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":" */"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class UserInput {"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected Scanner sc;"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Creates a new UserInput instance."},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param sc Scanner object used for input processing."},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public UserInput(Scanner sc) {"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.sc \u003d sc;"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Advances scanner to next line."},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void scannerNextLine() {"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.sc.nextLine();"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Closes the scanner at the end of code execution."},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void closeScanner() {"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.sc.close();"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Obtains the first one-word command from input line."},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Command for Meme Man."},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String getInputCommand() {"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"        String command \u003d this.sc.next();"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return command;"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Obtains the task description from remainder of input line."},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Description used to create task."},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String getInputDescription() {"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"        String taskDescription \u003d this.sc.nextLine();"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return taskDescription; //Note: Every task description comes with a space"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Obtains number from a given description."},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param description - The raw description."},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return The number to find task in the list."},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public int getInputNumber(String description) {"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010x"},"content":"        description \u003d description.trim();"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (description.isEmpty()) {"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new NoSuchElementException(\"Did you forget to put a number for the command you just typed in? Not stonks!\");"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010x"},"content":"            try {"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010x"},"content":"                int taskNumber \u003d Integer.valueOf(description);"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010x"},"content":"                return taskNumber;"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new NumberFormatException(\"Did you put something other than a number or did you put a number incorrectly? Not stonks!\");"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Checks for any excess arguments in commands that should not have arguments."},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void checkExcessArguments() {"},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010x"},"content":"        String excess \u003d this.sc.nextLine();"},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (!excess.isEmpty()) {"},{"lineNumber":78,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new InputMismatchException(\"Excessive inputs for a no-input command. Not stonks!\");"},{"lineNumber":79,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":81}},{"path":"src/main/java/UserOutput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"package surrealchat.user;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"import surrealchat.Pair;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"import surrealchat.task.Task;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.InputMismatchException;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":" * Handles printing of output."},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":" */"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class UserOutput {"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected boolean verboseFlag;"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Creates new UserOutput instance."},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param verboseFlag Flag for whether additional output should be printed."},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public UserOutput(boolean verboseFlag) {"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.verboseFlag \u003d verboseFlag;"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Converts task type from one capital letter to full lowercase spelling."},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param taskType Type of task in one capital letter."},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return Type of task in full lowercase spelling."},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String spellTaskType(String taskType) {"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"        switch(taskType) {"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"T\":"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return \"todo\";"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"D\":"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return \"deadline\";"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"E\":"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"            return \"event\";"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"        default:"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new InputMismatchException(\"The task type in task is invalid. Not Stonks!\");"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Calls the appropriate print methods based on string tag of pair."},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param pair Pair consisting of a string tag and a generic object."},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param \u003cU\u003e Generic type of second item in pair."},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public \u003cU\u003e void printOutput(Pair\u003cString, U\u003e pair) {"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"        String printType \u003d pair.getFirstItem();"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"        switch(printType) {"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"userTaskAdded\":"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Pair\u003cTask, Integer\u003e intermediatePair;"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010x"},"content":"            if (pair.getSecondItem() instanceof Pair) {"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010x"},"content":"                intermediatePair \u003d (Pair\u003cTask, Integer\u003e)pair.getSecondItem();"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010x"},"content":"                this.printUserTaskAdded(intermediatePair.getFirstItem(), intermediatePair.getSecondItem());"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } else {"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new ClassCastException(\"Invalid class casting. Not stonks!\");"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"fileTasksAdded\":"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010x"},"content":"            List\u003cTask\u003e taskList;"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010x"},"content":"            if (pair.getSecondItem() instanceof List) {"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010x"},"content":"                taskList \u003d (List\u003cTask\u003e)pair.getSecondItem();"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010x"},"content":"                this.printFileTasksAdded(taskList);"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } else {"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new ClassCastException(\"Invalid class casting. Not stonks!\");"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"editDescript\":"},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Task task;"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010x"},"content":"            if (pair.getSecondItem() instanceof Task) {"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010x"},"content":"                task \u003d (Task)pair.getSecondItem();"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010x"},"content":"                this.printEditDescription(task);"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } else {"},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new ClassCastException(\"Invalid class casting. Not stonks!\");"},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"markDone\":"},{"lineNumber":78,"author":{"gitId":"yhtMinceraft1010x"},"content":"            if (pair.getSecondItem() instanceof Task) {"},{"lineNumber":79,"author":{"gitId":"yhtMinceraft1010x"},"content":"                task \u003d (Task)pair.getSecondItem();"},{"lineNumber":80,"author":{"gitId":"yhtMinceraft1010x"},"content":"                this.printTaskDone(task);"},{"lineNumber":81,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":82,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } else {"},{"lineNumber":83,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new ClassCastException(\"Invalid class casting. Not stonks!\");"},{"lineNumber":84,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"markUndone\":"},{"lineNumber":86,"author":{"gitId":"yhtMinceraft1010x"},"content":"            if (pair.getSecondItem() instanceof Task) {"},{"lineNumber":87,"author":{"gitId":"yhtMinceraft1010x"},"content":"                task \u003d (Task)pair.getSecondItem();"},{"lineNumber":88,"author":{"gitId":"yhtMinceraft1010x"},"content":"                this.printTaskUndone(task);"},{"lineNumber":89,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":90,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } else {"},{"lineNumber":91,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new ClassCastException(\"Invalid class casting. Not stonks!\");"},{"lineNumber":92,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"deleteTask\":"},{"lineNumber":94,"author":{"gitId":"yhtMinceraft1010x"},"content":"            if (pair.getSecondItem() instanceof Pair) {"},{"lineNumber":95,"author":{"gitId":"yhtMinceraft1010x"},"content":"                intermediatePair \u003d (Pair\u003cTask, Integer\u003e)pair.getSecondItem();"},{"lineNumber":96,"author":{"gitId":"yhtMinceraft1010x"},"content":"                this.printTaskDelete(intermediatePair.getFirstItem(), intermediatePair.getSecondItem());"},{"lineNumber":97,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":98,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } else {"},{"lineNumber":99,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new ClassCastException(\"Invalid class casting. Not stonks!\");"},{"lineNumber":100,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"searchTasks\":"},{"lineNumber":102,"author":{"gitId":"yhtMinceraft1010x"},"content":"            if (pair.getSecondItem() instanceof List) {"},{"lineNumber":103,"author":{"gitId":"yhtMinceraft1010x"},"content":"                List\u003cTask\u003e searchResults \u003d (List\u003cTask\u003e)pair.getSecondItem();"},{"lineNumber":104,"author":{"gitId":"yhtMinceraft1010x"},"content":"                this.printSearchResults(searchResults);"},{"lineNumber":105,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":106,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } else {"},{"lineNumber":107,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new ClassCastException(\"Invalid class casting. Not stonks!\");"},{"lineNumber":108,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":109,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"printTaskList\":"},{"lineNumber":110,"author":{"gitId":"yhtMinceraft1010x"},"content":"            if (pair.getSecondItem() instanceof List) {"},{"lineNumber":111,"author":{"gitId":"yhtMinceraft1010x"},"content":"                taskList \u003d (List\u003cTask\u003e)pair.getSecondItem();"},{"lineNumber":112,"author":{"gitId":"yhtMinceraft1010x"},"content":"                this.printTaskList(taskList);"},{"lineNumber":113,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":114,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } else {"},{"lineNumber":115,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new ClassCastException(\"Invalid class casting. Not stonks!\");"},{"lineNumber":116,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"yhtMinceraft1010x"},"content":"        default:"},{"lineNumber":118,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new UnsupportedOperationException(\"Somehow I got an invalid tag. Not stonks!\");"},{"lineNumber":119,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":122,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Calls the appropriate print methods based on what easter egg user has activated."},{"lineNumber":124,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param easterEgg Command for the appropriate easter egg."},{"lineNumber":125,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void printEasterEggOutput(String easterEgg) {"},{"lineNumber":127,"author":{"gitId":"yhtMinceraft1010x"},"content":"        switch(easterEgg){"},{"lineNumber":128,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"orang\":"},{"lineNumber":129,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.printOrang();"},{"lineNumber":130,"author":{"gitId":"yhtMinceraft1010x"},"content":"            break;"},{"lineNumber":131,"author":{"gitId":"yhtMinceraft1010x"},"content":"        case \"vegetal\":"},{"lineNumber":132,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.printVegetal();"},{"lineNumber":133,"author":{"gitId":"yhtMinceraft1010x"},"content":"            break;"},{"lineNumber":134,"author":{"gitId":"yhtMinceraft1010x"},"content":"        default:"},{"lineNumber":135,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new InputMismatchException(\"Somehow, the easter egg input does not match. Not stonks!\");"},{"lineNumber":136,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":139,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Prints out a greeting upon start up."},{"lineNumber":141,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void printInitialGreeting() {"},{"lineNumber":143,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.out.println(\"I am Meme Man. Whoms\u0027t be entering the VIMension?\");"},{"lineNumber":144,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (this.verboseFlag) {"},{"lineNumber":145,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.println(\"I speak a lot. For I am verbose!\\n\");"},{"lineNumber":146,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":147,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.println(\"\\n\");"},{"lineNumber":148,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":151,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private void printFileTasksAdded(List\u003cTask\u003e taskList) {"},{"lineNumber":152,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (this.verboseFlag) {"},{"lineNumber":153,"author":{"gitId":"yhtMinceraft1010x"},"content":"            int total \u003d taskList.size();"},{"lineNumber":154,"author":{"gitId":"yhtMinceraft1010x"},"content":"            for (int i \u003d 0; i \u003c total; i++) {"},{"lineNumber":155,"author":{"gitId":"yhtMinceraft1010x"},"content":"                Task task \u003d taskList.get(i);"},{"lineNumber":156,"author":{"gitId":"yhtMinceraft1010x"},"content":"                String printTaskType \u003d this.spellTaskType(task.getType());"},{"lineNumber":157,"author":{"gitId":"yhtMinceraft1010x"},"content":"                System.out.printf(\"Meme Man has added %s task from file: %s\\n\", printTaskType, task);"},{"lineNumber":158,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":159,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.printf(\"Total number of tasks loaded from file: %s\\n\\n\", total);"},{"lineNumber":160,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":163,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private void printUserTaskAdded(Task task, int total) {"},{"lineNumber":164,"author":{"gitId":"yhtMinceraft1010x"},"content":"        String taskType \u003d task.getType();"},{"lineNumber":165,"author":{"gitId":"yhtMinceraft1010x"},"content":"        String printTaskType \u003d this.spellTaskType(taskType);"},{"lineNumber":166,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.out.printf(\"Meme Man has added %s task: %s\\n\", printTaskType, task);"},{"lineNumber":167,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.out.printf(\"Total number of tasks: %d\\n\\n\", total);"},{"lineNumber":168,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":170,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private void printEditDescription(Task editTask) {"},{"lineNumber":171,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.out.println(\"You have edited a task description to this:\");"},{"lineNumber":172,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.out.println(editTask.getDescription() + \"\\n\");"},{"lineNumber":173,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":175,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private void printTaskDone(Task doneTask) {"},{"lineNumber":176,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.out.println(\"Stonks! You\u0027ve done this task:\");"},{"lineNumber":177,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.out.println(doneTask.getDescription() + \"\\n\");"},{"lineNumber":178,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":180,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private void printTaskUndone(Task undoneTask) {"},{"lineNumber":181,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.out.println(\"Not stonks! This task has been marked as undone:\");"},{"lineNumber":182,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.out.println(undoneTask.getDescription() + \"\\n\");"},{"lineNumber":183,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":185,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private void printTaskDelete(Task deletedTask, int numberOfTasks) {"},{"lineNumber":186,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.out.println(\"This task has been deleted:\");"},{"lineNumber":187,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.out.println(deletedTask);"},{"lineNumber":188,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.out.printf(\"Total number of tasks: %d\\n\\n\", numberOfTasks);"},{"lineNumber":189,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":191,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private void printTaskList(List\u003cTask\u003e taskList) {"},{"lineNumber":192,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (taskList.isEmpty()) {"},{"lineNumber":193,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new NoSuchElementException(\"I have nothing to print. Not stonks!\");"},{"lineNumber":194,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":195,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.println(\"I print the tasks:\");"},{"lineNumber":196,"author":{"gitId":"yhtMinceraft1010x"},"content":"            for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"},{"lineNumber":197,"author":{"gitId":"yhtMinceraft1010x"},"content":"                System.out.println(i + \". \" + taskList.get(i - 1));"},{"lineNumber":198,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":199,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.println(\"Hmmst\u0027ve... Stonks\\n\");"},{"lineNumber":200,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":203,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private void printSearchResults(List\u003cTask\u003e searchResults) {"},{"lineNumber":204,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (searchResults.isEmpty()) {"},{"lineNumber":205,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new NoSuchElementException(\"My search returned nothing. Not stonks!\");"},{"lineNumber":206,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":207,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.println(\"Here are my search results:\");"},{"lineNumber":208,"author":{"gitId":"yhtMinceraft1010x"},"content":"            for (int i \u003d 1; i \u003c\u003d searchResults.size(); i++) {"},{"lineNumber":209,"author":{"gitId":"yhtMinceraft1010x"},"content":"                System.out.println(i + \". \" + searchResults.get(i - 1));"},{"lineNumber":210,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":211,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.println(\"Hmmst\u0027ve... Stonks\\n\");"},{"lineNumber":212,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":215,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":216,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Prints out the farewell message upon program exiting normally."},{"lineNumber":217,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":218,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void printExitProgram() {"},{"lineNumber":219,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (this.verboseFlag) {"},{"lineNumber":220,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.println(\"Saving tasks now...\");"},{"lineNumber":221,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":222,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.out.println(\"You have been EJECTED!\");"},{"lineNumber":223,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":225,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private void printOrang() {"},{"lineNumber":226,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.err.println(\"Meme Man: ORANG! IT S U...\");"},{"lineNumber":227,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.err.println(\"Orang: No you can\u0027t SU\");"},{"lineNumber":228,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.err.println(\"Meme Man: ANGERY!\\n\");"},{"lineNumber":229,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":231,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private void printVegetal() {"},{"lineNumber":232,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.err.println(\"Vegetal: Did someone said... NO VEGETALS?\");"},{"lineNumber":233,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.err.println(\"Meme Man: I taste a vegetal... ANGERY!\\n\");"},{"lineNumber":234,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":235,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":236,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":237,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Prints out exception message."},{"lineNumber":238,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param e Any caught exception."},{"lineNumber":239,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":240,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void printException(Exception e) {"},{"lineNumber":241,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.err.println(e.getMessage() + \"\\n\");"},{"lineNumber":242,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":243,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":243}},{"path":"src/main/java/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"T/split/0/split/porg"}],"authorContributionMap":{"yhtMinceraft1010x":1}},{"path":"src/test/java/surrealchat/PairTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"package surrealchat;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class PairTest {"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testFirstGetter(){"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(new Pair\u003cString, Integer\u003e(\"Test\", 5).getFirstItem(), \"Test\");"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testSecondGetter(){"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(new Pair\u003cString, Integer\u003e(\"Test\", 5).getSecondItem(), 5);"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":17}},{"path":"src/test/java/surrealchat/task/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class DeadlineTaskTest {"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public static final String TEST_DESCRIPTION \u003d \"Do CS2103T quiz\";"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public static final LocalDate TEST_DEADLINE \u003d LocalDate.parse(\"2020-10-21\");"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public static final boolean TEST_DONE \u003d false;"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public static final DeadlineTask STARTING_TASK \u003d new DeadlineTask("},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"            DeadlineTaskTest.TEST_DESCRIPTION, DeadlineTaskTest.TEST_DEADLINE, DeadlineTaskTest.TEST_DONE);"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testPrintStringConversion(){"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(DeadlineTaskTest.STARTING_TASK.toString(),"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"[D][\\u2718] Do CS2103T quiz (by: 2020-10-21)\");"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testFileStringConversion(){"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(DeadlineTaskTest.STARTING_TASK.saveTask(),"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"D/split/0/split/Do CS2103T quiz /by 2020-10-21\");"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testDeadlineTaskType(){"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(DeadlineTaskTest.STARTING_TASK.getType(),"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"D\");"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testEditDescription() {"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(DeadlineTaskTest.STARTING_TASK.editDescription(\"Eat biscuits\").getDescription(),"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"Eat biscuits\");"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testMarkDone() {"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(DeadlineTaskTest.STARTING_TASK.markAsDone().toString(),"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"[D][\\u2713] Do CS2103T quiz (by: 2020-10-21)\");"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testMarkUndone() {"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(DeadlineTaskTest.STARTING_TASK.markAsDone().markAsUndone().toString(),"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"[D][\\u2718] Do CS2103T quiz (by: 2020-10-21)\");"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":51}},{"path":"src/test/java/surrealchat/task/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class EventTaskTest {"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public static final String TEST_DESCRIPTION \u003d \"Do CS2103T quiz\";"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public static final LocalDate TEST_EVENT \u003d LocalDate.parse(\"2020-10-21\");"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public static final boolean TEST_DONE \u003d false;"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public static final EventTask STARTING_TASK \u003d new EventTask("},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"            EventTaskTest.TEST_DESCRIPTION, EventTaskTest.TEST_EVENT, EventTaskTest.TEST_DONE);"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testPrintStringConversion(){"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(EventTaskTest.STARTING_TASK.toString(),"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"[E][\\u2718] Do CS2103T quiz (at: 2020-10-21)\");"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testFileStringConversion(){"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(EventTaskTest.STARTING_TASK.saveTask(),"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"E/split/0/split/Do CS2103T quiz /at 2020-10-21\");"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testEventTaskType(){"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(EventTaskTest.STARTING_TASK.getType(),"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"E\");"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testEditDescription() {"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(EventTaskTest.STARTING_TASK.editDescription(\"Eat biscuits\").getDescription(),"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"Eat biscuits\");"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testMarkDone() {"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(EventTaskTest.STARTING_TASK.markAsDone().toString(),"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"[E][\\u2713] Do CS2103T quiz (at: 2020-10-21)\");"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testMarkUndone() {"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(EventTaskTest.STARTING_TASK.markAsDone().markAsUndone().toString(),"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"[E][\\u2718] Do CS2103T quiz (at: 2020-10-21)\");"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":51}},{"path":"src/test/java/surrealchat/task/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class ToDoTaskTest {"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public static final String TEST_DESCRIPTION \u003d \"Do CS2103T quiz\";"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public static final boolean TEST_DONE \u003d false;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public static final ToDoTask STARTING_TASK \u003d new ToDoTask(ToDoTaskTest.TEST_DESCRIPTION, ToDoTaskTest.TEST_DONE);"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testPrintStringConversion(){"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(ToDoTaskTest.STARTING_TASK.toString(),"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"[T][\\u2718] Do CS2103T quiz\");"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testFileStringConversion(){"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(ToDoTaskTest.STARTING_TASK.saveTask(),"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"T/split/0/split/Do CS2103T quiz\");"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testToDoTaskType(){"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(ToDoTaskTest.STARTING_TASK.getType(),"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"T\");"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testGetDescription() {"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(ToDoTaskTest.STARTING_TASK.getDescription(),"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"Do CS2103T quiz\");"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testEditDescription() {"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(ToDoTaskTest.STARTING_TASK.editDescription(\"Eat biscuits\").getDescription(),"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"Eat biscuits\");"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testMarkDone() {"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(ToDoTaskTest.STARTING_TASK.markAsDone().toString(),"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"[T][\\u2713] Do CS2103T quiz\");"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testMarkUndone() {"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(ToDoTaskTest.STARTING_TASK.markAsDone().markAsUndone().toString(),"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"                \"[T][\\u2718] Do CS2103T quiz\");"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":53}},{"path":"src/test/java/surrealchat/user/UserInputTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"package surrealchat.user;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class UserInputTest {"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testGetInputNumber() {"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(new UserInput(new Scanner(System.in)).getInputNumber(\"2103\"),"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"                2103);"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":15}},{"path":"src/test/java/surrealchat/user/UserOutputTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"package surrealchat.user;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class UserOutputTest {"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void testSpellTaskType(){"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(new UserOutput(false).spellTaskType(\"T\"), \"todo\");"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(new UserOutput(false).spellTaskType(\"D\"), \"deadline\");"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"        assertEquals(new UserOutput(false).spellTaskType(\"E\"), \"event\");"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":14}},{"path":"text-ui-test/Test_1/input1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"todo Watch CS2103T lecture"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T lecture quiz /by 2021-01-01"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T ip /by 2021-01-01"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"event Attend CS2101 class /at 2021-01-01"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 2"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 1"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 2"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 2"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 3"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 4"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 4"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 3"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 2"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 1"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"bye"}],"authorContributionMap":{"yhtMinceraft1010x":22}},{"path":"text-ui-test/Test_1/runtest1.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if not exist ..\\..\\bin mkdir ..\\..\\bin"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM delete standard output from previous run"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_OK_1.TXT del ACTUAL_OK_1.TXT"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"javac  -cp ..\\..\\src\\main\\java -Xlint:none -d ..\\..\\bin ..\\..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":")"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM run the program, feed commands from input1.txt file and redirect the standard output to the ACTUAL_OK_1.TXT"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ..\\..\\bin SurrealChat \u003c input1.txt \u003e ACTUAL_OK_1.TXT"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_OK_1.TXT EXPECTED_OK_1.TXT"}],"authorContributionMap":{"yhtMinceraft1010x":21}},{"path":"text-ui-test/Test_1/runtest1.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ ! -d \"../../bin\" ]"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"    mkdir ../../bin"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_OK_1.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_OK_1.TXT"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"if ! javac -cp ../../src/main/java -Xlint:none -d ../../bin ../../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"# run the program, feed commands from input1.txt file and redirect the standard output to the ACTUAL_OK_1.TXT"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ../../bin SurrealChat \u003c input1.txt \u003e ACTUAL_OK_1.TXT"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_OK_1.TXT EXPECTED-UNIX_OK_1.TXT"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_OK_1.TXT EXPECTED-UNIX_OK_1.TXT"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_OK_1.TXT EXPECTED-UNIX_OK_1.TXT"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"}],"authorContributionMap":{"yhtMinceraft1010x":38}},{"path":"text-ui-test/Test_2/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"orang"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"vegetal"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"done"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 1"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 1"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"find"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"find CS2103T"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"bye"}],"authorContributionMap":{"yhtMinceraft1010x":12}},{"path":"text-ui-test/Test_2/runtest2.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if not exist ..\\..\\bin mkdir ..\\..\\bin"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM delete standard and error output from previous run"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_OK_2.TXT del ACTUAL_OK_2.TXT"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_ERR_2.TXT del ACTUAL_ERR_2.TXT"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compile the code into the bin folder"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"javac  -cp ..\\..\\src\\main\\java -Xlint:none -d ..\\..\\bin ..\\..\\src\\main\\java\\*.java"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":")"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM run the program, feed commands from input2.txt file and redirect the standard output to the ACTUAL_OK_2.TXT and error output to ACTUAL_ERR_2.txt"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ..\\..\\bin SurrealChat \u003c input2.txt \u003e ACTUAL_OK_2.TXT 2\u003e ACTUAL_ERR_2.TXT"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compare the output to the expected output"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_OK_2.TXT EXPECTED_OK_2.TXT"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_ERR_2.TXT EXPECTED_ERR_2.TXT"}],"authorContributionMap":{"yhtMinceraft1010x":23}},{"path":"text-ui-test/Test_2/runtest2.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ ! -d \"../../bin\" ]"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"    mkdir ../../bin"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_OK_2.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_OK_2.TXT"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_ERR_2.TXT\" ]"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_ERR_2.TXT"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"if ! javac -cp ../../src/main/java -Xlint:none -d ../../bin ../../src/main/java/*.java"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"# run the program, feed commands from input2.txt file and redirect the standard output to the ACTUAL_OK_2.TXT and error output to ACTUAL_ERR_2.TXT"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ../../bin SurrealChat \u003c input2.txt \u003e ACTUAL_OK_2.TXT 2\u003eACTUAL_ERR_2.TXT"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"# convert to UNIX format"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_OK_2.TXT EXPECTED-UNIX_OK_2.TXT"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_OK_2.TXT EXPECTED-UNIX_OK_2.TXT"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_ERR_2.TXT EXPECTED-UNIX_ERR_2.TXT"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_ERR_2.TXT EXPECTED-UNIX_ERR_2.TXT"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compare the output to the expected output"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_OK_2.TXT EXPECTED-UNIX_OK_2.TXT"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_ERR_2.TXT EXPECTED-UNIX_ERR_2.TXT"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"}],"authorContributionMap":{"yhtMinceraft1010x":51}},{"path":"text-ui-test/Test_3/input3.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"orang"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"vegetal"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"todo"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"todo Watch CS2103T lecture"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T lecture quiz /by 2021-01-01"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T ip by 2021-01-01"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T ip /by 20t310101"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T ip /by 2021-01-01"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"event"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"event Attend CS2101 class at 2021-01-01"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"event Attend CS2101 class /at 20t310101"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"event Attend CS2101 class /at 2021-01-01"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 2"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 1"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 1"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 2"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 2"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 3"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 4"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"done notInt"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 0"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"done -1"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 5"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone notInt"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 0"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 5"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone -1"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"find"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"find CS2101"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 5"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete notInt"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 4"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 3"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 2"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 1"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"bye"}],"authorContributionMap":{"yhtMinceraft1010x":47}},{"path":"text-ui-test/Test_3/runtest3.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if not exist ..\\..\\bin mkdir ..\\..\\bin"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM delete standard and error output from previous run"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_OK_3.TXT del ACTUAL_OK_3.TXT"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_ERR_3.TXT del ACTUAL_ERR_3.TXT"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compile the code into the bin folder"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"javac  -cp ..\\..\\src\\main\\java -Xlint:none -d ..\\..\\bin ..\\..\\src\\main\\java\\*.java"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":")"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM run the program, feed commands from input3.txt file and redirect the standard output to the ACTUAL_OK_3.TXT and error output to ACTUAL_ERR_3.txt"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ..\\..\\bin SurrealChat \u003c input3.txt \u003e ACTUAL_OK_3.TXT 2\u003e ACTUAL_ERR_3.TXT"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compare the output to the expected output"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_OK_3.TXT EXPECTED_OK_3.TXT"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_ERR_3.TXT EXPECTED_ERR_3.TXT"}],"authorContributionMap":{"yhtMinceraft1010x":23}},{"path":"text-ui-test/Test_3/runtest3.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ ! -d \"../../bin\" ]"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"    mkdir ../../bin"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_OK_3.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_OK_3.TXT"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_ERR_3.TXT\" ]"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_ERR_3.TXT"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"if ! javac -cp ../../src/main/java -Xlint:none -d ../../bin ../../src/main/java/*.java"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"# run the program, feed commands from input3.txt file and redirect the standard output to the ACTUAL_OK_3.TXT and error output to ACTUAL_ERR_3.TXT"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ../../bin SurrealChat \u003c input3.txt \u003e ACTUAL_OK_3.TXT 2\u003eACTUAL_ERR_3.TXT"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"# convert to UNIX format"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_OK_3.TXT EXPECTED-UNIX_OK_3.TXT"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_OK_3.TXT EXPECTED-UNIX_OK_3.TXT"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_ERR_2.TXT EXPECTED-UNIX_ERR_3.TXT"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_ERR_3.TXT EXPECTED-UNIX_ERR_3.TXT"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compare the output to the expected output"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_OK_3.TXT EXPECTED-UNIX_OK_3.TXT"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_ERR_3.TXT EXPECTED-UNIX_ERR_3.TXT"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"}],"authorContributionMap":{"yhtMinceraft1010x":51}},{"path":"text-ui-test/Test_4/input4.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"orang"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"vegetal"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"todo"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"todo Watch CS2103T lecture"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T lecture quiz /by 2021-01-01"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T ip by 2021-01-01"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T ip /by 20t310101"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T ip /by 2021-01-01"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"event"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"event Attend CS2101 class at 2021-01-01"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"event Attend CS2101 class /at 20t310101"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"event Attend CS2101 class /at 2021-01-01"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 2"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 1"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 1"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 2"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 2"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 3"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 4"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"done notInt"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 0"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"done -1"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 5"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone notInt"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 0"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 5"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone -1"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"find"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"find CS2101"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"edit"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"edit 1 Do CS2103T optional ip tasks"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"edit 1"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"edit 1 /edit"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"edit notInt /edit Do CS2103T optional ip tasks"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"edit 1 /edit Do CS2103T optional ip tasks"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 5"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete notInt"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 4"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 3"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 2"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 1"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010x"},"content":"bye"}],"authorContributionMap":{"yhtMinceraft1010x":53}},{"path":"text-ui-test/Test_4/runtest4.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if not exist ..\\..\\bin mkdir ..\\..\\bin"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM delete standard and error output from previous run"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_OK_4.TXT del ACTUAL_OK_4.TXT"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_ERR_4.TXT del ACTUAL_ERR_4.TXT"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compile the code into the bin folder"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"javac  -cp ..\\..\\src\\main\\java -Xlint:none -d ..\\..\\bin ..\\..\\src\\main\\java\\*.java"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":")"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM run the program, feed commands from input4.txt file and redirect the standard output to the ACTUAL_OK_4.TXT and error output to ACTUAL_ERR_4.txt"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ..\\..\\bin SurrealChat \u003c input4.txt \u003e ACTUAL_OK_4.TXT 2\u003e ACTUAL_ERR_4.TXT"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compare the output to the expected output"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_OK_4.TXT EXPECTED_OK_4.TXT"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_ERR_4.TXT EXPECTED_ERR_4.TXT"}],"authorContributionMap":{"yhtMinceraft1010x":23}},{"path":"text-ui-test/Test_4/runtest4.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ ! -d \"../../bin\" ]"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"    mkdir ../../bin"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_OK_4.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_OK_4.TXT"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_ERR_4.TXT\" ]"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_ERR_4.TXT"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"if ! javac -cp ../../src/main/java -Xlint:none -d ../../bin ../../src/main/java/*.java"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"# run the program, feed commands from input4.txt file and redirect the standard output to the ACTUAL_OK_4.TXT and error output to ACTUAL_ERR_4.TXT"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ../../bin SurrealChat \u003c input4.txt \u003e ACTUAL_OK_4.TXT 2\u003eACTUAL_ERR_4.TXT"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"# convert to UNIX format"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_OK_4.TXT EXPECTED-UNIX_OK_4.TXT"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_OK_4.TXT EXPECTED-UNIX_OK_4.TXT"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_ERR_2.TXT EXPECTED-UNIX_ERR_4.TXT"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_ERR_4.TXT EXPECTED-UNIX_ERR_4.TXT"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compare the output to the expected output"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_OK_4.TXT EXPECTED-UNIX_OK_4.TXT"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_ERR_4.TXT EXPECTED-UNIX_ERR_4.TXT"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"}],"authorContributionMap":{"yhtMinceraft1010x":51}}]
