[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"Introducing... a custom chatbot based on Meme Man and the Surreal Memes."},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"Not only will Meme Man entertain you every step of the way, Meme Man will also help you keep track of your tasks."},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"If your task has a tick, it\u0027s done. If your task has a cross, it\u0027s not done."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"Meme Man will also catch exceptions for you, because Meme Man thinks exceptions are not stonks..."},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"Based on the Duke chatbot."},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Add tasks of different types"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"You can add 3 types of tasks:"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"1. ToDo tasks (Fuss-free, own time own target)"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"2. Deadline tasks (Be sure not to miss these deadlines!)"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"3. Event tasks (Used to reserve certain timings like a calendar app)"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Delete tasks"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"If you feel that keeping them on the list is not necessary, Meme Man will delete them for you."},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"### List tasks"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"You can key in \"list\" and Meme Man will display the tasks in the order that you have keyed them in."},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Mark tasks as done"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"You can key in \"done\" along with a task number and Meme Man will tick that task for you."},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Mark tasks as undone"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"You can key in \"done\" along with a task number and Meme Man will cross that task for you."},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Surreal Memes easter eggs"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"Keep scrolling to find them."},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"## Commands related to tasks"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"### `todo (insert task description)` - Add ToDo task command"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in along with task description to cause Meme Man to add a ToDo task."},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"Everytime a task is added, the new total number of tasks is displayed."},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"Example of usage:"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"`todo Watch CS2103T lecture`"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"Expected outcome:"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"Meme Man is now adding to-do task: [T][✘] Watch CS2103T lecture"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"Total number of tasks: 1"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010x"},"content":"### `deadline (insert task description) /by (insert deadline)` - Add Deadline task command"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in along with task description and deadline to cause Meme Man to add a Deadline task."},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010x"},"content":"Everytime a task is added, the new total number of tasks is displayed."},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010x"},"content":"Example of usage:"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T lecture quiz /by this Saturday"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T ip /by next Monday"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010x"},"content":"Expected outcome:"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010x"},"content":"Meme Man is now adding deadline task: [D][✘] Do CS2103T lecture quiz (by: this Saturday)"},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010x"},"content":"Total number of tasks: 2"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010x"},"content":"Meme Man is now adding deadline task: [D][✘] Do CS2103T ip (by: next Monday)"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010x"},"content":"Total number of tasks: 3"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if \"/by\" is missing:"},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010x"},"content":"Wrong formatting. Did you forget to put \u0027/by\u0027? Not stonks!"},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":78,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":79,"author":{"gitId":"yhtMinceraft1010x"},"content":"### `event (insert task description) /at (insert time)` - Add Event task command"},{"lineNumber":80,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":81,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in along with task description and event time to cause Meme Man to add a Event task."},{"lineNumber":82,"author":{"gitId":"yhtMinceraft1010x"},"content":"Everytime a task is added, the new total number of tasks is displayed."},{"lineNumber":83,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":84,"author":{"gitId":"yhtMinceraft1010x"},"content":"Example of usage:"},{"lineNumber":85,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":86,"author":{"gitId":"yhtMinceraft1010x"},"content":"`event Attend CS2101 class /at next Tuesday`"},{"lineNumber":87,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":88,"author":{"gitId":"yhtMinceraft1010x"},"content":"Expected outcome:"},{"lineNumber":89,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":90,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":91,"author":{"gitId":"yhtMinceraft1010x"},"content":"Meme Man is now adding event task: [E][✘] Attend CS2101 class (at: next Tuesday)"},{"lineNumber":92,"author":{"gitId":"yhtMinceraft1010x"},"content":"Total number of tasks: 4"},{"lineNumber":93,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":94,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if \"/at\" is missing:"},{"lineNumber":95,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":96,"author":{"gitId":"yhtMinceraft1010x"},"content":"Wrong formatting. Did you forget to put \u0027/at\u0027? Not stonks!"},{"lineNumber":97,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":98,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":99,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":100,"author":{"gitId":"yhtMinceraft1010x"},"content":"### What happens if task description is empty?"},{"lineNumber":101,"author":{"gitId":"yhtMinceraft1010x"},"content":"This applies to all 3 types of tasks:"},{"lineNumber":102,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":103,"author":{"gitId":"yhtMinceraft1010x"},"content":"Empty (insert task type) task description. Not stonks!"},{"lineNumber":104,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":105,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":106,"author":{"gitId":"yhtMinceraft1010x"},"content":"### `done (insert number)` - Do task command"},{"lineNumber":107,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":108,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in along with task number to put a tick for that task."},{"lineNumber":109,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":110,"author":{"gitId":"yhtMinceraft1010x"},"content":"Example of usage:"},{"lineNumber":111,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":112,"author":{"gitId":"yhtMinceraft1010x"},"content":"`done 1`"},{"lineNumber":113,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":114,"author":{"gitId":"yhtMinceraft1010x"},"content":"Expected outcome:"},{"lineNumber":115,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":116,"author":{"gitId":"yhtMinceraft1010x"},"content":"Stonks! You\u0027ve done this task:"},{"lineNumber":117,"author":{"gitId":"yhtMinceraft1010x"},"content":"Do CS2103T lecture quiz"},{"lineNumber":118,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":119,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":120,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if number field is empty:"},{"lineNumber":121,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":122,"author":{"gitId":"yhtMinceraft1010x"},"content":"Did you forget to put a number for the command you just typed in? Not stonks!"},{"lineNumber":123,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":124,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":125,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if number field has anything other than number or improper number (e.g. `done meme` or `done 1b`):"},{"lineNumber":126,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":127,"author":{"gitId":"yhtMinceraft1010x"},"content":"Did you put something other than a number or did you put a number incorrectly? Not stonks!"},{"lineNumber":128,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":129,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":130,"author":{"gitId":"yhtMinceraft1010x"},"content":"A task number is invalid if any of the following conditions are met:"},{"lineNumber":131,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":132,"author":{"gitId":"yhtMinceraft1010x"},"content":"1. 0"},{"lineNumber":133,"author":{"gitId":"yhtMinceraft1010x"},"content":"2. Negative number"},{"lineNumber":134,"author":{"gitId":"yhtMinceraft1010x"},"content":"3. Number is greater than number of tasks Meme Man has stored"},{"lineNumber":135,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":136,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":137,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if task number is invalid:"},{"lineNumber":138,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":139,"author":{"gitId":"yhtMinceraft1010x"},"content":"Invalid task number. Not stonks!"},{"lineNumber":140,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":141,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":142,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if task was already done:"},{"lineNumber":143,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":144,"author":{"gitId":"yhtMinceraft1010x"},"content":"This task is already done."},{"lineNumber":145,"author":{"gitId":"yhtMinceraft1010x"},"content":"I would have wanted to say Stonks..."},{"lineNumber":146,"author":{"gitId":"yhtMinceraft1010x"},"content":"but your usage of an illegal operation is Not Stonks!"},{"lineNumber":147,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":148,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":149,"author":{"gitId":"yhtMinceraft1010x"},"content":"### `undone (insert number)` - Undo task command"},{"lineNumber":150,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":151,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in along with task number to put a cross for that task."},{"lineNumber":152,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":153,"author":{"gitId":"yhtMinceraft1010x"},"content":"Example of usage:"},{"lineNumber":154,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":155,"author":{"gitId":"yhtMinceraft1010x"},"content":"`undone 1`"},{"lineNumber":156,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":157,"author":{"gitId":"yhtMinceraft1010x"},"content":"Expected outcome:"},{"lineNumber":158,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":159,"author":{"gitId":"yhtMinceraft1010x"},"content":"Not stonks! This task has been marked as undone: "},{"lineNumber":160,"author":{"gitId":"yhtMinceraft1010x"},"content":"Do CS2103T lecture quiz"},{"lineNumber":161,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":162,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":163,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if number field is empty:"},{"lineNumber":164,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":165,"author":{"gitId":"yhtMinceraft1010x"},"content":"Did you forget to put a number for the command you just typed in? Not stonks!"},{"lineNumber":166,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":167,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if number field has anything other than number or improper number (e.g. `undone meme` or `undone 1b`):"},{"lineNumber":168,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":169,"author":{"gitId":"yhtMinceraft1010x"},"content":"Did you put something other than a number or did you put a number incorrectly? Not stonks!"},{"lineNumber":170,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":171,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":172,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if task number is invalid:"},{"lineNumber":173,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":174,"author":{"gitId":"yhtMinceraft1010x"},"content":"Invalid task number. Not stonks!"},{"lineNumber":175,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":176,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":177,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if task was not done in the first place:"},{"lineNumber":178,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":179,"author":{"gitId":"yhtMinceraft1010x"},"content":"This task is already not done. Not stonks anyway!"},{"lineNumber":180,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":181,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":182,"author":{"gitId":"yhtMinceraft1010x"},"content":"### `delete (insert number)` - Delete task command"},{"lineNumber":183,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":184,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in along with task number to delete the corresponding task."},{"lineNumber":185,"author":{"gitId":"yhtMinceraft1010x"},"content":"Meme Man will display how many tasks you have left."},{"lineNumber":186,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":187,"author":{"gitId":"yhtMinceraft1010x"},"content":"Example of usage:"},{"lineNumber":188,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":189,"author":{"gitId":"yhtMinceraft1010x"},"content":"`delete 1`"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":192,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":193,"author":{"gitId":"yhtMinceraft1010x"},"content":"This task has been deleted:"},{"lineNumber":194,"author":{"gitId":"yhtMinceraft1010x"},"content":"[T][✓] Watch CS2103T lecture"},{"lineNumber":195,"author":{"gitId":"yhtMinceraft1010x"},"content":"Total number of tasks: 3"},{"lineNumber":196,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":197,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":198,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if number field is empty:"},{"lineNumber":199,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":200,"author":{"gitId":"yhtMinceraft1010x"},"content":"Did you forget to put a number for the command you just typed in? Not stonks!"},{"lineNumber":201,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":202,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":203,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if number field has anything other than number or improper number (e.g. `delete meme` or `delete 1b`):"},{"lineNumber":204,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":205,"author":{"gitId":"yhtMinceraft1010x"},"content":"Did you put something other than a number or did you put a number incorrectly? Not stonks!"},{"lineNumber":206,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":207,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":208,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if task number is invalid:"},{"lineNumber":209,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":210,"author":{"gitId":"yhtMinceraft1010x"},"content":"Invalid task number. Not stonks!"},{"lineNumber":211,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":212,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":213,"author":{"gitId":"yhtMinceraft1010x"},"content":"## Other commands"},{"lineNumber":214,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":215,"author":{"gitId":"yhtMinceraft1010x"},"content":"### `bye` - Exit command"},{"lineNumber":216,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":217,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in to cause Meme Man to EJECT you... er... I mean leave..."},{"lineNumber":218,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":219,"author":{"gitId":"yhtMinceraft1010x"},"content":"### `list` - List command"},{"lineNumber":220,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":221,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in to cause Meme Man to show you your tasks in order and whether you have completed the tasks."},{"lineNumber":222,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":223,"author":{"gitId":"yhtMinceraft1010x"},"content":"Now suppose you have 4 tasks:"},{"lineNumber":224,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":225,"author":{"gitId":"yhtMinceraft1010x"},"content":"1. Watch CS2103T lecture (ToDo, Done)"},{"lineNumber":226,"author":{"gitId":"yhtMinceraft1010x"},"content":"2. Do CS2103T lecture quiz (Deadline of this Saturday, Done)"},{"lineNumber":227,"author":{"gitId":"yhtMinceraft1010x"},"content":"3. Do CS2103T ip (Deadline of next Monday, Not done)"},{"lineNumber":228,"author":{"gitId":"yhtMinceraft1010x"},"content":"4. Attend CS2101 class (Event happens next Tuesday, Not done)"},{"lineNumber":229,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":230,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":231,"author":{"gitId":"yhtMinceraft1010x"},"content":"How to get Meme Man to list out above tasks:"},{"lineNumber":232,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":233,"author":{"gitId":"yhtMinceraft1010x"},"content":"`list` "},{"lineNumber":234,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":235,"author":{"gitId":"yhtMinceraft1010x"},"content":"Expected outcome:"},{"lineNumber":236,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":237,"author":{"gitId":"yhtMinceraft1010x"},"content":"I print the tasks:"},{"lineNumber":238,"author":{"gitId":"yhtMinceraft1010x"},"content":"1. [T][✓] Watch CS2103T lecture"},{"lineNumber":239,"author":{"gitId":"yhtMinceraft1010x"},"content":"2. [D][✓] Do CS2103T lecture quiz (by: this Saturday)"},{"lineNumber":240,"author":{"gitId":"yhtMinceraft1010x"},"content":"3. [D][✘] Do CS2103T ip (by: next Monday)"},{"lineNumber":241,"author":{"gitId":"yhtMinceraft1010x"},"content":"4. [E][✘] Attend CS2101 class (at: next Tuesday)"},{"lineNumber":242,"author":{"gitId":"yhtMinceraft1010x"},"content":"Hmmst\u0027ve... Stonks"},{"lineNumber":243,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":244,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":245,"author":{"gitId":"yhtMinceraft1010x"},"content":"Outcome if there is nothing in task list:"},{"lineNumber":246,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":247,"author":{"gitId":"yhtMinceraft1010x"},"content":"I have nothing to print. Not stonks!"},{"lineNumber":248,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":249,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":250,"author":{"gitId":"yhtMinceraft1010x"},"content":"### `orang` - Easter egg command"},{"lineNumber":251,"author":{"gitId":"yhtMinceraft1010x"},"content":"The orang here refers to the Surreal Memes orange (spelled \"Orang\"), not Orang Utan orang."},{"lineNumber":252,"author":{"gitId":"yhtMinceraft1010x"},"content":"Key this command in and you\u0027d be pleasantly surprised at how punny Orang can be (AND have a realisation about the nature of CS2103/T)."},{"lineNumber":253,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":254,"author":{"gitId":"yhtMinceraft1010x"},"content":"### `vegetal` - Easter egg command"},{"lineNumber":255,"author":{"gitId":"yhtMinceraft1010x"},"content":"Did someone said... NO VEGETALS?"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"yhtMinceraft1010x"},"content":"### Invalid commands"},{"lineNumber":258,"author":{"gitId":"yhtMinceraft1010x"},"content":"If you key in an unrecognised command, this is what Meme Man has to say:"},{"lineNumber":259,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"},{"lineNumber":260,"author":{"gitId":"yhtMinceraft1010x"},"content":"Command not recognised. Not stonks!"},{"lineNumber":261,"author":{"gitId":"yhtMinceraft1010x"},"content":"```"}],"authorContributionMap":{"yhtMinceraft1010x":245,"-":16}},{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private String deadline;"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public DeadlineTask(String taskDescription, String deadline) {"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"        super(taskDescription);"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.deadline);"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public static List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static void initialGreeting() {"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.out.println(\"I am Meme Man. Whoms\u0027t be entering the VIMension?\\n\");"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Used to obtain the first one-word command from input line."},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param sc - The scanner. Used to obtain the command"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return command - command for Meme Man"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static String getInputCommand(Scanner sc) {"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"        String command \u003d sc.next();"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return command;"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Used to obtain the task description from remainder of input line"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param sc - The scanner. Used to obtain the task description"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return taskDescription - Description used to create task"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static String getInputDescription(Scanner sc) {"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"        String taskDescription \u003d sc.nextLine();"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return taskDescription; //Note: Every task description comes with a space"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * Used to obtain number from a given description"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param description - The raw description"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @return taskNumber - The number to find task in the array"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static int getInputNumber(String description) {"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"        description \u003d description.trim();"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (description.isEmpty()) {"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new NoSuchElementException(\"Did you forget to put a number for the command you just typed in? Not stonks!\");"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"            try {"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"                Integer taskNumber \u003d Integer.valueOf(description);"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"                return taskNumber;"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new NumberFormatException(\"Did you put something other than a number or did you put a number incorrectly? Not stonks!\");"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static void addToDo(String taskDescription) {"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (taskDescription.isEmpty()) {"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new NoSuchElementException(\"Empty todo task description. Not stonks!\");"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010x"},"content":"            ToDoTask newTask \u003d new ToDoTask(taskDescription.trim());"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.printf(\"Meme Man is now adding to-do task: %s\\n\", newTask);"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Duke.addTask(newTask);"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static void addDeadline(String taskDescription) {"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (taskDescription.isEmpty()) {"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new NoSuchElementException(\"Empty deadline task description. Not stonks!\");"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010x"},"content":"            String[] descriptionSplitArray \u003d taskDescription.split(\"/by\");"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010x"},"content":"            try {"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010x"},"content":"                DeadlineTask newTask \u003d new DeadlineTask(descriptionSplitArray[0].trim(), descriptionSplitArray[1].trim());"},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010x"},"content":"                System.out.printf(\"Meme Man is now adding deadline task: %s\\n\", newTask);"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010x"},"content":"                Duke.addTask(newTask);"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } catch (ArrayIndexOutOfBoundsException e) { //Happens if split does not occur"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new ArrayIndexOutOfBoundsException(\"Wrong formatting. Did you forget to put \u0027/by\u0027? Not stonks!\");"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static void addEvent(String taskDescription) {"},{"lineNumber":78,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (taskDescription.isEmpty()) {"},{"lineNumber":79,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new NoSuchElementException(\"Empty event task description. Not stonks!\");"},{"lineNumber":80,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":81,"author":{"gitId":"yhtMinceraft1010x"},"content":"            String[] descriptionSplitArray \u003d taskDescription.split(\"/at\");"},{"lineNumber":82,"author":{"gitId":"yhtMinceraft1010x"},"content":"            try {"},{"lineNumber":83,"author":{"gitId":"yhtMinceraft1010x"},"content":"                EventTask newTask \u003d new EventTask(descriptionSplitArray[0].trim(), descriptionSplitArray[1].trim());"},{"lineNumber":84,"author":{"gitId":"yhtMinceraft1010x"},"content":"                System.out.printf(\"Meme Man is now adding event task: %s\\n\", newTask);"},{"lineNumber":85,"author":{"gitId":"yhtMinceraft1010x"},"content":"                Duke.addTask(newTask);"},{"lineNumber":86,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } catch (ArrayIndexOutOfBoundsException e) { //Happens if split does not occur"},{"lineNumber":87,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new ArrayIndexOutOfBoundsException(\"Wrong formatting. Did you forget to put \u0027/at\u0027? Not stonks!\");"},{"lineNumber":88,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":92,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static void addTask(Task task) {"},{"lineNumber":93,"author":{"gitId":"yhtMinceraft1010x"},"content":"        Duke.taskList.add(task);"},{"lineNumber":94,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.out.printf(\"Total number of tasks: %d\\n\\n\", Duke.taskList.size());"},{"lineNumber":95,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":97,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static boolean checkInvalidTaskNumber(int taskNumber) {"},{"lineNumber":98,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return ((taskNumber \u003c\u003d 0) || (taskNumber \u003e Duke.taskList.size()));"},{"lineNumber":99,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":101,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static void markAsDone(int taskNumber) {"},{"lineNumber":102,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (Duke.checkInvalidTaskNumber(taskNumber)) {"},{"lineNumber":103,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new IllegalArgumentException(\"Invalid task number. Not stonks!\");"},{"lineNumber":104,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":105,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Task doneTask \u003d Duke.taskList.get(taskNumber - 1);"},{"lineNumber":106,"author":{"gitId":"yhtMinceraft1010x"},"content":"            doneTask.markAsDone();"},{"lineNumber":107,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.println(\"Stonks! You\u0027ve done this task:\");"},{"lineNumber":108,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.println(doneTask.getDescription() + \"\\n\");"},{"lineNumber":109,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Duke.taskList.set(taskNumber - 1, doneTask);"},{"lineNumber":110,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":113,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static void markAsUndone(int taskNumber) {"},{"lineNumber":114,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (Duke.checkInvalidTaskNumber(taskNumber)) {"},{"lineNumber":115,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new IllegalArgumentException(\"Invalid task number. Not stonks!\");"},{"lineNumber":116,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":117,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Task undoneTask \u003d Duke.taskList.get(taskNumber - 1);"},{"lineNumber":118,"author":{"gitId":"yhtMinceraft1010x"},"content":"            undoneTask.markAsUndone();"},{"lineNumber":119,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.println(\"Not stonks! This task has been marked as undone:\");"},{"lineNumber":120,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.println(undoneTask.getDescription() + \"\\n\");"},{"lineNumber":121,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Duke.taskList.set(taskNumber - 1, undoneTask);"},{"lineNumber":122,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":125,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static void deleteTask(int taskNumber) {"},{"lineNumber":126,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (Duke.checkInvalidTaskNumber(taskNumber)) {"},{"lineNumber":127,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new IllegalArgumentException(\"Invalid task number. Not stonks!\");"},{"lineNumber":128,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":129,"author":{"gitId":"yhtMinceraft1010x"},"content":"            Task deletedTask \u003d Duke.taskList.remove(taskNumber - 1);"},{"lineNumber":130,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.println(\"This task has been deleted:\");"},{"lineNumber":131,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.println(deletedTask);"},{"lineNumber":132,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.printf(\"Total number of tasks: %d\\n\\n\", Duke.taskList.size());"},{"lineNumber":133,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":136,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static void printList() {"},{"lineNumber":137,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (Duke.taskList.isEmpty()) {"},{"lineNumber":138,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new NoSuchElementException(\"I have nothing to print. Not stonks!\");"},{"lineNumber":139,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":140,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.println(\"I print the tasks:\");"},{"lineNumber":141,"author":{"gitId":"yhtMinceraft1010x"},"content":"            for (int i \u003d 1; i \u003c\u003d Duke.taskList.size(); i++) {"},{"lineNumber":142,"author":{"gitId":"yhtMinceraft1010x"},"content":"                System.out.println(i + \". \" + Duke.taskList.get(i - 1));"},{"lineNumber":143,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":144,"author":{"gitId":"yhtMinceraft1010x"},"content":"            System.out.println(\"Hmmst\u0027ve... Stonks\\n\");"},{"lineNumber":145,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":148,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static void exitProgram() {"},{"lineNumber":149,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.out.println(\"You have been EJECTED!\");"},{"lineNumber":150,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":152,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static void orangEasterEgg() {"},{"lineNumber":153,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.err.println(\"Meme Man: ORANG! IT S U...\");"},{"lineNumber":154,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.err.println(\"Orang: No you can\u0027t SU\");"},{"lineNumber":155,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.err.println(\"Meme Man: ANGERY!\\n\");"},{"lineNumber":156,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":158,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static void vegetalEasterEgg() {"},{"lineNumber":159,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.err.println(\"Vegetal: Did someone said... NO VEGETALS?\");"},{"lineNumber":160,"author":{"gitId":"yhtMinceraft1010x"},"content":"        System.err.println(\"Meme Man: I taste a vegetal... ANGERY!\\n\");"},{"lineNumber":161,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":163,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private static boolean commandLogic(boolean maintainLoop, String userCommand, Scanner sc) {"},{"lineNumber":164,"author":{"gitId":"yhtMinceraft1010x"},"content":"        switch(userCommand) {"},{"lineNumber":165,"author":{"gitId":"yhtMinceraft1010x"},"content":"            case \"bye\":"},{"lineNumber":166,"author":{"gitId":"yhtMinceraft1010x"},"content":"                maintainLoop \u003d false; //Break out of infinite loop"},{"lineNumber":167,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":168,"author":{"gitId":"yhtMinceraft1010x"},"content":"            case\"list\":"},{"lineNumber":169,"author":{"gitId":"yhtMinceraft1010x"},"content":"                Duke.printList();"},{"lineNumber":170,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":171,"author":{"gitId":"yhtMinceraft1010x"},"content":"            case \"todo\":"},{"lineNumber":172,"author":{"gitId":"yhtMinceraft1010x"},"content":"                String description \u003d Duke.getInputDescription(sc);"},{"lineNumber":173,"author":{"gitId":"yhtMinceraft1010x"},"content":"                Duke.addToDo(description);"},{"lineNumber":174,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":175,"author":{"gitId":"yhtMinceraft1010x"},"content":"            case \"deadline\":"},{"lineNumber":176,"author":{"gitId":"yhtMinceraft1010x"},"content":"                description \u003d Duke.getInputDescription(sc);"},{"lineNumber":177,"author":{"gitId":"yhtMinceraft1010x"},"content":"                Duke.addDeadline(description);"},{"lineNumber":178,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":179,"author":{"gitId":"yhtMinceraft1010x"},"content":"            case \"event\":"},{"lineNumber":180,"author":{"gitId":"yhtMinceraft1010x"},"content":"                description \u003d Duke.getInputDescription(sc);"},{"lineNumber":181,"author":{"gitId":"yhtMinceraft1010x"},"content":"                Duke.addEvent(description);"},{"lineNumber":182,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":183,"author":{"gitId":"yhtMinceraft1010x"},"content":"            case \"done\":"},{"lineNumber":184,"author":{"gitId":"yhtMinceraft1010x"},"content":"                description \u003d Duke.getInputDescription(sc); //Get raw form"},{"lineNumber":185,"author":{"gitId":"yhtMinceraft1010x"},"content":"                int taskNumber \u003d Duke.getInputNumber(description); //Process to obtain int"},{"lineNumber":186,"author":{"gitId":"yhtMinceraft1010x"},"content":"                Duke.markAsDone(taskNumber);"},{"lineNumber":187,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":188,"author":{"gitId":"yhtMinceraft1010x"},"content":"            case \"undone\":"},{"lineNumber":189,"author":{"gitId":"yhtMinceraft1010x"},"content":"                description \u003d Duke.getInputDescription(sc); //Get raw form"},{"lineNumber":190,"author":{"gitId":"yhtMinceraft1010x"},"content":"                taskNumber \u003d Duke.getInputNumber(description); //Process to obtain int"},{"lineNumber":191,"author":{"gitId":"yhtMinceraft1010x"},"content":"                Duke.markAsUndone(taskNumber);"},{"lineNumber":192,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":193,"author":{"gitId":"yhtMinceraft1010x"},"content":"            case \"delete\":"},{"lineNumber":194,"author":{"gitId":"yhtMinceraft1010x"},"content":"                description \u003d Duke.getInputDescription(sc); //Get raw form"},{"lineNumber":195,"author":{"gitId":"yhtMinceraft1010x"},"content":"                taskNumber \u003d Duke.getInputNumber(description); //Process to obtain int"},{"lineNumber":196,"author":{"gitId":"yhtMinceraft1010x"},"content":"                Duke.deleteTask(taskNumber);"},{"lineNumber":197,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":198,"author":{"gitId":"yhtMinceraft1010x"},"content":"            case \"orang\":"},{"lineNumber":199,"author":{"gitId":"yhtMinceraft1010x"},"content":"                sc.nextLine(); //Clear input line"},{"lineNumber":200,"author":{"gitId":"yhtMinceraft1010x"},"content":"                Duke.orangEasterEgg();"},{"lineNumber":201,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":202,"author":{"gitId":"yhtMinceraft1010x"},"content":"            case \"vegetal\":"},{"lineNumber":203,"author":{"gitId":"yhtMinceraft1010x"},"content":"                sc.nextLine(); //Clear input line"},{"lineNumber":204,"author":{"gitId":"yhtMinceraft1010x"},"content":"                Duke.vegetalEasterEgg();"},{"lineNumber":205,"author":{"gitId":"yhtMinceraft1010x"},"content":"                break;"},{"lineNumber":206,"author":{"gitId":"yhtMinceraft1010x"},"content":"            default:"},{"lineNumber":207,"author":{"gitId":"yhtMinceraft1010x"},"content":"                sc.nextLine(); //Clear input line"},{"lineNumber":208,"author":{"gitId":"yhtMinceraft1010x"},"content":"                throw new UnsupportedOperationException(\"Command not recognised. Not stonks!\");"},{"lineNumber":209,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":210,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return maintainLoop;"},{"lineNumber":211,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":213,"author":{"gitId":"yhtMinceraft1010x"},"content":"    /**"},{"lineNumber":214,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * The driver code for Meme Man chatbot."},{"lineNumber":215,"author":{"gitId":"yhtMinceraft1010x"},"content":"     * @param args - Optional argument"},{"lineNumber":216,"author":{"gitId":"yhtMinceraft1010x"},"content":"     */"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":218,"author":{"gitId":"yhtMinceraft1010x"},"content":"        Duke.initialGreeting();"},{"lineNumber":219,"author":{"gitId":"yhtMinceraft1010x"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":220,"author":{"gitId":"yhtMinceraft1010x"},"content":"        String userCommand;"},{"lineNumber":221,"author":{"gitId":"yhtMinceraft1010x"},"content":"        boolean maintainLoop \u003d true;"},{"lineNumber":222,"author":{"gitId":"yhtMinceraft1010x"},"content":"        while (maintainLoop) {"},{"lineNumber":223,"author":{"gitId":"yhtMinceraft1010x"},"content":"            userCommand \u003d getInputCommand(sc);"},{"lineNumber":224,"author":{"gitId":"yhtMinceraft1010x"},"content":"            try {"},{"lineNumber":225,"author":{"gitId":"yhtMinceraft1010x"},"content":"                maintainLoop \u003d Duke.commandLogic(maintainLoop, userCommand, sc);"},{"lineNumber":226,"author":{"gitId":"yhtMinceraft1010x"},"content":"            } catch (Exception e) {"},{"lineNumber":227,"author":{"gitId":"yhtMinceraft1010x"},"content":"                System.err.println(e.getMessage() + \"\\n\");"},{"lineNumber":228,"author":{"gitId":"yhtMinceraft1010x"},"content":"            }"},{"lineNumber":229,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":230,"author":{"gitId":"yhtMinceraft1010x"},"content":"        sc.close();"},{"lineNumber":231,"author":{"gitId":"yhtMinceraft1010x"},"content":"        Duke.exitProgram();"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":229,"-":4}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class EventTask extends Task {"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"    private String event;"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public EventTask(String taskDescription, String event) {"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"        super(taskDescription);"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.event \u003d event;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.event);"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"//Below solution adapted from partial solution in: https://nus-cs2103-ay2021s2.github.io/website/schedule/week2/project.html"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class Task {"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected String description;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"    protected boolean isDone;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public Task(String description) {"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String getStatusIcon() {"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String getDescription() {"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return this.description;"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void markAsDone() {"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (!this.isDone) {"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.isDone \u003d true;"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new UnsupportedOperationException(\"This task is already done.\\n\" +"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"                    \"I would have wanted to say Stonks...\\n\" +"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"                    \"but your usage of an illegal operation is Not Stonks!\");"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public void markAsUndone() {"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"        if (this.isDone) {"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"            this.isDone \u003d false;"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"            throw new UnsupportedOperationException(\"This task is already not done. Not stonks anyway!\");"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":41}},{"path":"src/main/java/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"public class ToDoTask extends Task {"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public ToDoTask(String taskDescription) {"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"        super(taskDescription);"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"        return String.format(\"[T]%s\", super.toString());"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010x":10}},{"path":"text-ui-test/Test_1/input1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"todo Watch CS2103T lecture"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T lecture quiz /by this Saturday"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T ip /by next Monday"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"event Attend CS2101 class /at next Tuesday"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 2"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 1"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 2"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 2"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 3"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 4"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"bye"}],"authorContributionMap":{"yhtMinceraft1010x":18}},{"path":"text-ui-test/Test_1/runtest1.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if not exist ..\\..\\bin mkdir ..\\..\\bin"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM delete standard output from previous run"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_OK_1.TXT del ACTUAL_OK_1.TXT"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"javac  -cp ..\\..\\src\\main\\java -Xlint:none -d ..\\..\\bin ..\\..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":")"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM run the program, feed commands from input1.txt file and redirect the standard output to the ACTUAL_OK_1.TXT"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ..\\..\\bin Duke \u003c input1.txt \u003e ACTUAL_OK_1.TXT"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_OK_1.TXT EXPECTED_OK_1.TXT"}],"authorContributionMap":{"yhtMinceraft1010x":21}},{"path":"text-ui-test/Test_1/runtest1.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ ! -d \"../../bin\" ]"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"    mkdir ../../bin"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_OK_1.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_OK_1.TXT"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"if ! javac -cp ../../src/main/java -Xlint:none -d ../../bin ../../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"# run the program, feed commands from input1.txt file and redirect the standard output to the ACTUAL_OK_1.TXT"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ../../bin Duke \u003c input1.txt \u003e ACTUAL_OK_1.TXT"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_OK_1.TXT EXPECTED-UNIX_OK_1.TXT"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_OK_1.TXT EXPECTED-UNIX_OK_1.TXT"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_OK_1.TXT EXPECTED-UNIX_OK_1.TXT"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"}],"authorContributionMap":{"yhtMinceraft1010x":38}},{"path":"text-ui-test/Test_2/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"orang"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"vegetal"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"bye"}],"authorContributionMap":{"yhtMinceraft1010x":3}},{"path":"text-ui-test/Test_2/runtest2.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if not exist ..\\..\\bin mkdir ..\\..\\bin"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM delete standard and error output from previous run"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_OK_2.TXT del ACTUAL_OK_2.TXT"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_ERR_2.TXT del ACTUAL_ERR_2.TXT"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compile the code into the bin folder"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"javac  -cp ..\\..\\src\\main\\java -Xlint:none -d ..\\..\\bin ..\\..\\src\\main\\java\\*.java"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":")"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM run the program, feed commands from input2.txt file and redirect the standard output to the ACTUAL_OK_2.TXT and error output to ACTUAL_ERR_2.txt"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ..\\..\\bin Duke \u003c input2.txt \u003e ACTUAL_OK_2.TXT 2\u003e ACTUAL_ERR_2.TXT"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compare the output to the expected output"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_OK_2.TXT EXPECTED_OK_2.TXT"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_ERR_2.TXT EXPECTED_ERR_2.TXT"}],"authorContributionMap":{"yhtMinceraft1010x":23}},{"path":"text-ui-test/Test_2/runtest2.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ ! -d \"../../bin\" ]"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"    mkdir ../../bin"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_OK_2.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_OK_2.TXT"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_ERR_2.TXT\" ]"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_ERR_2.TXT"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"if ! javac -cp ../../src/main/java -Xlint:none -d ../../bin ../../src/main/java/*.java"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"# run the program, feed commands from input2.txt file and redirect the standard output to the ACTUAL_OK_2.TXT and error output to ACTUAL_ERR_2.TXT"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ../../bin Duke \u003c input2.txt \u003e ACTUAL_OK_2.TXT 2\u003eACTUAL_ERR_2.TXT"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"# convert to UNIX format"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_OK_2.TXT EXPECTED-UNIX_OK_2.TXT"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_OK_2.TXT EXPECTED-UNIX_OK_2.TXT"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_ERR_2.TXT EXPECTED-UNIX_ERR_2.TXT"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_ERR_2.TXT EXPECTED-UNIX_ERR_2.TXT"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compare the output to the expected output"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_OK_2.TXT EXPECTED-UNIX_OK_2.TXT"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_ERR_2.TXT EXPECTED-UNIX_ERR_2.TXT"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"}],"authorContributionMap":{"yhtMinceraft1010x":51}},{"path":"text-ui-test/Test_3/input3.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 2"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 1"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 2"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"bye"}],"authorContributionMap":{"yhtMinceraft1010x":6}},{"path":"text-ui-test/Test_3/runtest3.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if not exist ..\\..\\bin mkdir ..\\..\\bin"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM delete standard and error output from previous run"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_OK_3.TXT del ACTUAL_OK_3.TXT"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_ERR_3.TXT del ACTUAL_ERR_3.TXT"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compile the code into the bin folder"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"javac  -cp ..\\..\\src\\main\\java -Xlint:none -d ..\\..\\bin ..\\..\\src\\main\\java\\*.java"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":")"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM run the program, feed commands from input3.txt file and redirect the standard output to the ACTUAL_OK_3.TXT and error output to ACTUAL_ERR_3.txt"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ..\\..\\bin Duke \u003c input3.txt \u003e ACTUAL_OK_3.TXT 2\u003e ACTUAL_ERR_3.TXT"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compare the output to the expected output"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_OK_3.TXT EXPECTED_OK_3.TXT"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_ERR_3.TXT EXPECTED_ERR_3.TXT"}],"authorContributionMap":{"yhtMinceraft1010x":23}},{"path":"text-ui-test/Test_3/runtest3.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ ! -d \"../../bin\" ]"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"    mkdir ../../bin"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_OK_3.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_OK_3.TXT"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_ERR_3.TXT\" ]"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_ERR_3.TXT"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"if ! javac -cp ../../src/main/java -Xlint:none -d ../../bin ../../src/main/java/*.java"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"# run the program, feed commands from input3.txt file and redirect the standard output to the ACTUAL_OK_3.TXT and error output to ACTUAL_ERR_3.TXT"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ../../bin Duke \u003c input3.txt \u003e ACTUAL_OK_3.TXT 2\u003eACTUAL_ERR_3.TXT"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"# convert to UNIX format"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_OK_3.TXT EXPECTED-UNIX_OK_3.TXT"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_OK_3.TXT EXPECTED-UNIX_OK_3.TXT"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_ERR_2.TXT EXPECTED-UNIX_ERR_3.TXT"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_ERR_3.TXT EXPECTED-UNIX_ERR_3.TXT"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compare the output to the expected output"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_OK_3.TXT EXPECTED-UNIX_OK_3.TXT"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_ERR_3.TXT EXPECTED-UNIX_ERR_3.TXT"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"}],"authorContributionMap":{"yhtMinceraft1010x":51}},{"path":"text-ui-test/Test_4/input4.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"todo Watch CS2103T lecture"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T lecture quiz /by this Saturday"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T ip by next Monday"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T ip /by next Monday"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"event"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"event Attend CS2101 class at next Tuesday"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"event Attend CS2101 class /at next Tuesday"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 2"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 1"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 1"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 2"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 2"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 3"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 4"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"bye"}],"authorContributionMap":{"yhtMinceraft1010x":26}},{"path":"text-ui-test/Test_4/runtest4.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if not exist ..\\..\\bin mkdir ..\\..\\bin"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM delete standard and error output from previous run"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_OK_4.TXT del ACTUAL_OK_4.TXT"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_ERR_4.TXT del ACTUAL_ERR_4.TXT"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compile the code into the bin folder"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"javac  -cp ..\\..\\src\\main\\java -Xlint:none -d ..\\..\\bin ..\\..\\src\\main\\java\\*.java"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":")"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM run the program, feed commands from input4.txt file and redirect the standard output to the ACTUAL_OK_4.TXT and error output to ACTUAL_ERR_4.txt"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ..\\..\\bin Duke \u003c input4.txt \u003e ACTUAL_OK_4.TXT 2\u003e ACTUAL_ERR_4.TXT"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compare the output to the expected output"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_OK_4.TXT EXPECTED_OK_4.TXT"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_ERR_4.TXT EXPECTED_ERR_4.TXT"}],"authorContributionMap":{"yhtMinceraft1010x":23}},{"path":"text-ui-test/Test_4/runtest4.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ ! -d \"../../bin\" ]"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"    mkdir ../../bin"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_OK_4.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_OK_4.TXT"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_ERR_4.TXT\" ]"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_ERR_4.TXT"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"if ! javac -cp ../../src/main/java -Xlint:none -d ../../bin ../../src/main/java/*.java"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"# run the program, feed commands from input4.txt file and redirect the standard output to the ACTUAL_OK_4.TXT and error output to ACTUAL_ERR_4.TXT"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ../../bin Duke \u003c input4.txt \u003e ACTUAL_OK_4.TXT 2\u003eACTUAL_ERR_4.TXT"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"# convert to UNIX format"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_OK_4.TXT EXPECTED-UNIX_OK_4.TXT"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_OK_4.TXT EXPECTED-UNIX_OK_4.TXT"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_ERR_2.TXT EXPECTED-UNIX_ERR_4.TXT"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_ERR_4.TXT EXPECTED-UNIX_ERR_4.TXT"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compare the output to the expected output"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_OK_4.TXT EXPECTED-UNIX_OK_4.TXT"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_ERR_4.TXT EXPECTED-UNIX_ERR_4.TXT"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"}],"authorContributionMap":{"yhtMinceraft1010x":51}},{"path":"text-ui-test/Test_5/input5.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"orang"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"vegetal"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"todo"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"todo Watch CS2103T lecture"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T lecture quiz /by this Saturday"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T ip by next Monday"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T ip /by next Monday"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"event"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"event Attend CS2101 class at next Tuesday"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"event Attend CS2101 class /at next Tuesday"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 2"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 1"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 1"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 2"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 2"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 3"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 4"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"done notInt"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 0"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"done -1"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 5"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone notInt"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 0"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 5"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone -1"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"bye"}],"authorContributionMap":{"yhtMinceraft1010x":36}},{"path":"text-ui-test/Test_5/runtest5.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if not exist ..\\..\\bin mkdir ..\\..\\bin"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM delete standard and error output from previous run"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_OK_5.TXT del ACTUAL_OK_5.TXT"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_ERR_5.TXT del ACTUAL_ERR_5.TXT"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compile the code into the bin folder"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"javac  -cp ..\\..\\src\\main\\java -Xlint:none -d ..\\..\\bin ..\\..\\src\\main\\java\\*.java"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":")"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM run the program, feed commands from input5.txt file and redirect the standard output to the ACTUAL_OK_5.TXT and error output to ACTUAL_ERR_5.txt"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ..\\..\\bin Duke \u003c input5.txt \u003e ACTUAL_OK_5.TXT 2\u003e ACTUAL_ERR_5.TXT"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compare the output to the expected output"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_OK_5.TXT EXPECTED_OK_5.TXT"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_ERR_5.TXT EXPECTED_ERR_5.TXT"}],"authorContributionMap":{"yhtMinceraft1010x":23}},{"path":"text-ui-test/Test_5/runtest5.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ ! -d \"../../bin\" ]"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"    mkdir ../../bin"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_OK_5.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_OK_5.TXT"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_ERR_5.TXT\" ]"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_ERR_5.TXT"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"if ! javac -cp ../../src/main/java -Xlint:none -d ../../bin ../../src/main/java/*.java"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"# run the program, feed commands from input5.txt file and redirect the standard output to the ACTUAL_OK_5.TXT and error output to ACTUAL_ERR_5.TXT"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ../../bin Duke \u003c input5.txt \u003e ACTUAL_OK_5.TXT 2\u003eACTUAL_ERR_5.TXT"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"# convert to UNIX format"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_OK_5.TXT EXPECTED-UNIX_OK_5.TXT"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_OK_5.TXT EXPECTED-UNIX_OK_5.TXT"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_ERR_2.TXT EXPECTED-UNIX_ERR_5.TXT"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_ERR_5.TXT EXPECTED-UNIX_ERR_5.TXT"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compare the output to the expected output"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_OK_5.TXT EXPECTED-UNIX_OK_5.TXT"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_ERR_5.TXT EXPECTED-UNIX_ERR_5.TXT"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"}],"authorContributionMap":{"yhtMinceraft1010x":51}},{"path":"text-ui-test/Test_6/input6.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"todo Watch CS2103T lecture"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T lecture quiz /by this Saturday"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 1"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"bye"}],"authorContributionMap":{"yhtMinceraft1010x":6}},{"path":"text-ui-test/Test_6/runtest6.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if not exist ..\\..\\bin mkdir ..\\..\\bin"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM delete standard output from previous run"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_OK_6.TXT del ACTUAL_OK_6.TXT"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"javac  -cp ..\\..\\src\\main\\java -Xlint:none -d ..\\..\\bin ..\\..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":")"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM run the program, feed commands from input6.txt file and redirect the standard output to the ACTUAL_OK_6.TXT"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ..\\..\\bin Duke \u003c input6.txt \u003e ACTUAL_OK_6.TXT"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_OK_6.TXT EXPECTED_OK_6.TXT"}],"authorContributionMap":{"yhtMinceraft1010x":21}},{"path":"text-ui-test/Test_6/runtest6.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ ! -d \"../../bin\" ]"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"    mkdir ../../bin"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_OK_6.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_OK_6.TXT"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"if ! javac -cp ../../src/main/java -Xlint:none -d ../../bin ../../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"# run the program, feed commands from input6.txt file and redirect the standard output to the ACTUAL_OK_6.TXT"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ../../bin Duke \u003c input6.txt \u003e ACTUAL_OK_6.TXT"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_OK_6.TXT EXPECTED-UNIX_OK_6.TXT"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_OK_6.TXT EXPECTED-UNIX_OK_6.TXT"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_OK_6.TXT EXPECTED-UNIX_OK_6.TXT"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"}],"authorContributionMap":{"yhtMinceraft1010x":38}},{"path":"text-ui-test/Test_7/input7.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"todo Watch CS2103T lecture"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T lecture quiz /by this Saturday"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 1"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 0"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"done"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 1"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete undone"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone undone"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"done undone"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"bye"}],"authorContributionMap":{"yhtMinceraft1010x":16}},{"path":"text-ui-test/Test_7/runtest7.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if not exist ..\\..\\bin mkdir ..\\..\\bin"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM delete standard and error output from previous run"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_OK_7.TXT del ACTUAL_OK_7.TXT"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_ERR_7.TXT del ACTUAL_ERR_7.TXT"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compile the code into the bin folder"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"javac  -cp ..\\..\\src\\main\\java -Xlint:none -d ..\\..\\bin ..\\..\\src\\main\\java\\*.java"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":")"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM run the program, feed commands from input7.txt file and redirect the standard output to the ACTUAL_OK_7.TXT and error output to ACTUAL_ERR_7.txt"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ..\\..\\bin Duke \u003c input7.txt \u003e ACTUAL_OK_7.TXT 2\u003e ACTUAL_ERR_7.TXT"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compare the output to the expected output"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_OK_7.TXT EXPECTED_OK_7.TXT"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_ERR_7.TXT EXPECTED_ERR_7.TXT"}],"authorContributionMap":{"yhtMinceraft1010x":23}},{"path":"text-ui-test/Test_7/runtest7.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ ! -d \"../../bin\" ]"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"    mkdir ../../bin"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_OK_7.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_OK_7.TXT"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_ERR_7.TXT\" ]"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_ERR_7.TXT"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"if ! javac -cp ../../src/main/java -Xlint:none -d ../../bin ../../src/main/java/*.java"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"# run the program, feed commands from input7.txt file and redirect the standard output to the ACTUAL_OK_7.TXT and error output to ACTUAL_ERR_7.TXT"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ../../bin Duke \u003c input7.txt \u003e ACTUAL_OK_7.TXT 2\u003eACTUAL_ERR_7.TXT"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"# convert to UNIX format"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_OK_7.TXT EXPECTED-UNIX_OK_7.TXT"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_OK_7.TXT EXPECTED-UNIX_OK_7.TXT"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_ERR_2.TXT EXPECTED-UNIX_ERR_7.TXT"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_ERR_7.TXT EXPECTED-UNIX_ERR_7.TXT"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compare the output to the expected output"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_OK_7.TXT EXPECTED-UNIX_OK_7.TXT"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_ERR_7.TXT EXPECTED-UNIX_ERR_7.TXT"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"}],"authorContributionMap":{"yhtMinceraft1010x":51}},{"path":"text-ui-test/Test_8/input8.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"orang"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":"vegetal"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"todo"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"todo Watch CS2103T lecture"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T lecture quiz /by this Saturday"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T ip by next Monday"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"deadline Do CS2103T ip /by next Monday"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"event"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"event Attend CS2101 class at next Tuesday"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"event Attend CS2101 class /at next Tuesday"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 2"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 1"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 1"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 2"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 1"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 2"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 3"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 4"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"done notInt"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 0"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"done -1"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"done 5"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"done done"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":"done"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone notInt"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 0"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone 5"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone -1"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone undone"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"undone"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete -1"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 0"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 5"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 4"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 3"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 2"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete 1"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"list"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"delete delete"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"bye"}],"authorContributionMap":{"yhtMinceraft1010x":51}},{"path":"text-ui-test/Test_8/runtest8.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if not exist ..\\..\\bin mkdir ..\\..\\bin"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM delete standard and error output from previous run"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_OK_8.TXT del ACTUAL_OK_8.TXT"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":"if exist ACTUAL_ERR_8.TXT del ACTUAL_ERR_8.TXT"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compile the code into the bin folder"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"javac  -cp ..\\..\\src\\main\\java -Xlint:none -d ..\\..\\bin ..\\..\\src\\main\\java\\*.java"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":")"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM run the program, feed commands from input8.txt file and redirect the standard output to the ACTUAL_OK_8.TXT and error output to ACTUAL_ERR_8.txt"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ..\\..\\bin Duke \u003c input8.txt \u003e ACTUAL_OK_8.TXT 2\u003e ACTUAL_ERR_8.TXT"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"REM compare the output to the expected output"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_OK_8.TXT EXPECTED_OK_8.TXT"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"FC ACTUAL_ERR_8.TXT EXPECTED_ERR_8.TXT"}],"authorContributionMap":{"yhtMinceraft1010x":23}},{"path":"text-ui-test/Test_8/runtest8.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010x"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010x"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ ! -d \"../../bin\" ]"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010x"},"content":"    mkdir ../../bin"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010x"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_OK_8.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_OK_8.TXT"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ -e \"./ACTUAL_ERR_8.TXT\" ]"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010x"},"content":"    rm ACTUAL_ERR_8.TXT"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010x"},"content":"if ! javac -cp ../../src/main/java -Xlint:none -d ../../bin ../../src/main/java/*.java"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010x"},"content":"# run the program, feed commands from input8.txt file and redirect the standard output to the ACTUAL_OK_8.TXT and error output to ACTUAL_ERR_8.TXT"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010x"},"content":"java -classpath ../../bin Duke \u003c input8.txt \u003e ACTUAL_OK_8.TXT 2\u003eACTUAL_ERR_8.TXT"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010x"},"content":"# convert to UNIX format"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_OK_8.TXT EXPECTED-UNIX_OK_8.TXT"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_OK_8.TXT EXPECTED-UNIX_OK_8.TXT"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010x"},"content":"cp EXPECTED_ERR_2.TXT EXPECTED-UNIX_ERR_8.TXT"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010x"},"content":"dos2unix ACTUAL_ERR_8.TXT EXPECTED-UNIX_ERR_8.TXT"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010x"},"content":""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010x"},"content":"# compare the output to the expected output"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_OK_8.TXT EXPECTED-UNIX_OK_8.TXT"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010x"},"content":"diff ACTUAL_ERR_8.TXT EXPECTED-UNIX_ERR_8.TXT"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010x"},"content":"if [ $? -eq 0 ]"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010x"},"content":"then"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 0"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010x"},"content":"else"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010x"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010x"},"content":"    exit 1"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010x"},"content":"fi"}],"authorContributionMap":{"yhtMinceraft1010x":51}}]
