[{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"public enum Command {"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"    TODO,"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"    DEADLINE,"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"    EVENT,"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"    LIST,"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"    DONE,"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"    DELETE,"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    BYE"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":11}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"    protected LocalDateTime by;"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"        this.by \u003d by;"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mma\"))"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"                + \")\";"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"    private final Ui ui;"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"    private final Storage storage;"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"    private final Parser parser;"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"    private final TaskList taskList;"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    public Duke(Ui ui, Storage storage, Parser parser, TaskList taskList) {"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"        this.ui \u003d ui;"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"        this.storage \u003d storage;"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"        this.parser \u003d parser;"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"    public void run() {"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"        ui.greet();"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"        boolean byeFlag \u003d false;"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"        while (!byeFlag) {"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"            try {"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"                String input \u003d ui.readInput();"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"                Command command \u003d parser.parseCommand(input);"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"                switch (command) {"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"                case TODO:"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"                    ToDo t \u003d parser.parseToDo(input);"},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"                    taskList.addTask(t);"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"                    storage.writeToFile(taskList);"},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"                    ui.taskAddConfirmation(t, taskList);"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"                    break;"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"                case DEADLINE:"},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":"                    Deadline d \u003d parser.parseDeadline(input);"},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":"                    taskList.addTask(d);"},{"lineNumber":34,"author":{"gitId":"Jonathan-Cao"},"content":"                    storage.writeToFile(taskList);"},{"lineNumber":35,"author":{"gitId":"Jonathan-Cao"},"content":"                    ui.taskAddConfirmation(d, taskList);"},{"lineNumber":36,"author":{"gitId":"Jonathan-Cao"},"content":"                    break;"},{"lineNumber":37,"author":{"gitId":"Jonathan-Cao"},"content":"                case EVENT:"},{"lineNumber":38,"author":{"gitId":"Jonathan-Cao"},"content":"                    Event e \u003d parser.parseEvent(input);"},{"lineNumber":39,"author":{"gitId":"Jonathan-Cao"},"content":"                    taskList.addTask(e);"},{"lineNumber":40,"author":{"gitId":"Jonathan-Cao"},"content":"                    storage.writeToFile(taskList);"},{"lineNumber":41,"author":{"gitId":"Jonathan-Cao"},"content":"                    ui.taskAddConfirmation(e, taskList);"},{"lineNumber":42,"author":{"gitId":"Jonathan-Cao"},"content":"                    break;"},{"lineNumber":43,"author":{"gitId":"Jonathan-Cao"},"content":"                case LIST:"},{"lineNumber":44,"author":{"gitId":"Jonathan-Cao"},"content":"                    ui.listTasks(taskList);"},{"lineNumber":45,"author":{"gitId":"Jonathan-Cao"},"content":"                    break;"},{"lineNumber":46,"author":{"gitId":"Jonathan-Cao"},"content":"                case DONE:"},{"lineNumber":47,"author":{"gitId":"Jonathan-Cao"},"content":"                    int doneIndex \u003d parser.parseDone(input, taskList);"},{"lineNumber":48,"author":{"gitId":"Jonathan-Cao"},"content":"                    Task doneTask \u003d taskList.getTask(doneIndex);"},{"lineNumber":49,"author":{"gitId":"Jonathan-Cao"},"content":"                    taskList.markTaskAsDone(doneIndex);"},{"lineNumber":50,"author":{"gitId":"Jonathan-Cao"},"content":"                    storage.writeToFile(taskList);"},{"lineNumber":51,"author":{"gitId":"Jonathan-Cao"},"content":"                    ui.taskDoneConfirmation(doneTask);"},{"lineNumber":52,"author":{"gitId":"Jonathan-Cao"},"content":"                    break;"},{"lineNumber":53,"author":{"gitId":"Jonathan-Cao"},"content":"                case DELETE:"},{"lineNumber":54,"author":{"gitId":"Jonathan-Cao"},"content":"                    int deleteIndex \u003d parser.parseDelete(input, taskList);"},{"lineNumber":55,"author":{"gitId":"Jonathan-Cao"},"content":"                    Task deleteTask \u003d taskList.getTask(deleteIndex);"},{"lineNumber":56,"author":{"gitId":"Jonathan-Cao"},"content":"                    taskList.deleteTask(deleteIndex);"},{"lineNumber":57,"author":{"gitId":"Jonathan-Cao"},"content":"                    storage.writeToFile(taskList);"},{"lineNumber":58,"author":{"gitId":"Jonathan-Cao"},"content":"                    ui.taskDeleteConfirmation(taskList, deleteTask);"},{"lineNumber":59,"author":{"gitId":"Jonathan-Cao"},"content":"                    break;"},{"lineNumber":60,"author":{"gitId":"Jonathan-Cao"},"content":"                case BYE:"},{"lineNumber":61,"author":{"gitId":"Jonathan-Cao"},"content":"                    ui.byeMessage();"},{"lineNumber":62,"author":{"gitId":"Jonathan-Cao"},"content":"                    byeFlag \u003d true;"},{"lineNumber":63,"author":{"gitId":"Jonathan-Cao"},"content":"                    break;"},{"lineNumber":64,"author":{"gitId":"Jonathan-Cao"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"Jonathan-Cao"},"content":"            } catch (DukeException e) {"},{"lineNumber":66,"author":{"gitId":"Jonathan-Cao"},"content":"                ui.dukeExceptionMessage(e);"},{"lineNumber":67,"author":{"gitId":"Jonathan-Cao"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":71,"author":{"gitId":"Jonathan-Cao"},"content":"    public static void main(String[] args) {"},{"lineNumber":72,"author":{"gitId":"Jonathan-Cao"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":73,"author":{"gitId":"Jonathan-Cao"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":74,"author":{"gitId":"Jonathan-Cao"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":75,"author":{"gitId":"Jonathan-Cao"},"content":"        TaskList taskList \u003d storage.readFromFile();"},{"lineNumber":76,"author":{"gitId":"Jonathan-Cao"},"content":"        new Duke(ui, storage, parser, taskList).run();"},{"lineNumber":77,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":75,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"        super(errorMessage);"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":9}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"    protected LocalDateTime at;"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    public Event(String description, LocalDateTime at) {"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"        this.at \u003d at;"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"                + this.at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mma\"))"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"                + \")\";"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":21}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    public static DateTimeFormatter INPUT_DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"    public Command parseCommand(String input) throws DukeException {"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] arr \u003d input.split(\" \");"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"            return Command.valueOf(arr[0].toUpperCase());"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but that is an invalid command :-(\");"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"    public ToDo parseToDo(String input) throws DukeException {"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] arr \u003d input.split(\" \");"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"        if (arr.length \u003c 2) {"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"        return new ToDo(input.substring(5));"},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"    public Deadline parseDeadline(String input) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] arr \u003d input.split(\" \");"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] arr2 \u003d input.split(\" /by \");"},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":"        if (arr.length \u003c 2 || arr2[0].split(\" \").length \u003c 2) {"},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":34,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Jonathan-Cao"},"content":"        if (arr2.length \u003c 2) {"},{"lineNumber":36,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! You did not set a deadline using \u0027/by\u0027.\");"},{"lineNumber":37,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"Jonathan-Cao"},"content":"        LocalDateTime deadlineDate;"},{"lineNumber":39,"author":{"gitId":"Jonathan-Cao"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"Jonathan-Cao"},"content":"            deadlineDate \u003d LocalDateTime.parse(arr2[1], INPUT_DATETIME_FORMAT);"},{"lineNumber":41,"author":{"gitId":"Jonathan-Cao"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":42,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! Please input date and time in the following format: dd-MM-yyyy HHmm.\");"},{"lineNumber":43,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Jonathan-Cao"},"content":"        return new Deadline(arr2[0].substring(9), deadlineDate);"},{"lineNumber":45,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":47,"author":{"gitId":"Jonathan-Cao"},"content":"    public Event parseEvent(String input) throws DukeException {"},{"lineNumber":48,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] arr \u003d input.split(\" \");"},{"lineNumber":49,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] arr3 \u003d input.split(\" /at \");"},{"lineNumber":50,"author":{"gitId":"Jonathan-Cao"},"content":"        if (arr.length \u003c 2 || arr3[0].split(\" \").length \u003c 2) {"},{"lineNumber":51,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":52,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"Jonathan-Cao"},"content":"        if (arr3.length \u003c 2) {"},{"lineNumber":54,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! You did not set the date/time of the event using \u0027/at\u0027.\");"},{"lineNumber":55,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"Jonathan-Cao"},"content":"        LocalDateTime eventDate;"},{"lineNumber":57,"author":{"gitId":"Jonathan-Cao"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"Jonathan-Cao"},"content":"            eventDate \u003d LocalDateTime.parse(arr3[1], INPUT_DATETIME_FORMAT);"},{"lineNumber":59,"author":{"gitId":"Jonathan-Cao"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":60,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! Please input date and time in the following format: dd-MM-yyyy HHmm.\");"},{"lineNumber":61,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"Jonathan-Cao"},"content":"        return new Event(arr3[0].substring(6), eventDate);"},{"lineNumber":63,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":65,"author":{"gitId":"Jonathan-Cao"},"content":"    public int parseDone(String input, TaskList taskList) throws DukeException {"},{"lineNumber":66,"author":{"gitId":"Jonathan-Cao"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":67,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] arr \u003d input.split(\" \");"},{"lineNumber":68,"author":{"gitId":"Jonathan-Cao"},"content":"        if (arr.length \u003c 2) {"},{"lineNumber":69,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! You did not enter the number corresponding to the task.\");"},{"lineNumber":70,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"Jonathan-Cao"},"content":"        try {"},{"lineNumber":72,"author":{"gitId":"Jonathan-Cao"},"content":"            int argument \u003d Integer.parseInt(arr[1]);"},{"lineNumber":73,"author":{"gitId":"Jonathan-Cao"},"content":"            if (argument \u003c 1 || argument \u003e tasks.size()) {"},{"lineNumber":74,"author":{"gitId":"Jonathan-Cao"},"content":"                throw new DukeException(\"OOPS!!! The numbered task does not exist.\");"},{"lineNumber":75,"author":{"gitId":"Jonathan-Cao"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"Jonathan-Cao"},"content":"            return argument - 1;"},{"lineNumber":77,"author":{"gitId":"Jonathan-Cao"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":78,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! You did not enter the number corresponding to the task.\");"},{"lineNumber":79,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":82,"author":{"gitId":"Jonathan-Cao"},"content":"    public int parseDelete(String input, TaskList taskList) throws DukeException {"},{"lineNumber":83,"author":{"gitId":"Jonathan-Cao"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":84,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] arr \u003d input.split(\" \");"},{"lineNumber":85,"author":{"gitId":"Jonathan-Cao"},"content":"        if (arr.length \u003c 2) {"},{"lineNumber":86,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! You did not enter the number corresponding to the task.\");"},{"lineNumber":87,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"Jonathan-Cao"},"content":"        try {"},{"lineNumber":89,"author":{"gitId":"Jonathan-Cao"},"content":"            int argument \u003d Integer.parseInt(arr[1]);"},{"lineNumber":90,"author":{"gitId":"Jonathan-Cao"},"content":"            if (argument \u003c 1 || argument \u003e tasks.size()) {"},{"lineNumber":91,"author":{"gitId":"Jonathan-Cao"},"content":"                throw new DukeException(\"OOPS!!! The numbered task does not exist.\");"},{"lineNumber":92,"author":{"gitId":"Jonathan-Cao"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"Jonathan-Cao"},"content":"            return argument - 1;"},{"lineNumber":94,"author":{"gitId":"Jonathan-Cao"},"content":"        } catch (NumberFormatException exception) {"},{"lineNumber":95,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! You did not enter the number corresponding to the task.\");"},{"lineNumber":96,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":98}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.FileInputStream;"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.ObjectInputStream;"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.FileOutputStream;"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.ObjectOutputStream;"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"    public TaskList readFromFile() {"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"        File dir \u003d new File(\"data\");"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"        if (!dir.exists()) {"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"            dir.mkdir();"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"        File saved_tasks \u003d new File(dir, \"saved_tasks\");"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"        if (!saved_tasks.exists()) {"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"            try {"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"                saved_tasks.createNewFile();"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"                return new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"            } catch (IOException e) {"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"                e.printStackTrace();"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"                return new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"            try {"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"                FileInputStream fis \u003d new FileInputStream(saved_tasks);"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"                ObjectInputStream ois \u003d new ObjectInputStream(fis);"},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":"                TaskList result \u003d (TaskList) ois.readObject();"},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":"                ois.close();"},{"lineNumber":34,"author":{"gitId":"Jonathan-Cao"},"content":"                fis.close();"},{"lineNumber":35,"author":{"gitId":"Jonathan-Cao"},"content":"                return result;"},{"lineNumber":36,"author":{"gitId":"Jonathan-Cao"},"content":"            } catch (IOException | ClassNotFoundException e) {"},{"lineNumber":37,"author":{"gitId":"Jonathan-Cao"},"content":"                e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"Jonathan-Cao"},"content":"                return new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":39,"author":{"gitId":"Jonathan-Cao"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":43,"author":{"gitId":"Jonathan-Cao"},"content":"    public void writeToFile(TaskList tasks) {"},{"lineNumber":44,"author":{"gitId":"Jonathan-Cao"},"content":"        File dir \u003d new File(\"data\");"},{"lineNumber":45,"author":{"gitId":"Jonathan-Cao"},"content":"        File saved_tasks \u003d new File(dir, \"saved_tasks\");"},{"lineNumber":46,"author":{"gitId":"Jonathan-Cao"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"Jonathan-Cao"},"content":"            FileOutputStream fos \u003d new FileOutputStream(saved_tasks);"},{"lineNumber":48,"author":{"gitId":"Jonathan-Cao"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"},{"lineNumber":49,"author":{"gitId":"Jonathan-Cao"},"content":"            oos.writeObject(tasks);"},{"lineNumber":50,"author":{"gitId":"Jonathan-Cao"},"content":"            oos.close();"},{"lineNumber":51,"author":{"gitId":"Jonathan-Cao"},"content":"            fos.close();"},{"lineNumber":52,"author":{"gitId":"Jonathan-Cao"},"content":"        } catch (IOException ioe) {"},{"lineNumber":53,"author":{"gitId":"Jonathan-Cao"},"content":"            ioe.printStackTrace();"},{"lineNumber":54,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":56}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.Serializable;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"public class Task implements Serializable {"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"    protected boolean isDone;"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"    public Task(String description) {"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"        this.description \u003d description;"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"        this.isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"    public String getStatusIcon() {"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"        return (isDone ? \"X\" : \" \"); //return X or blank"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"    public void markAsDone() {"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":26}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.Serializable;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"public class TaskList implements Serializable  {"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"    protected ArrayList\u003cTask\u003e tasks;"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"        return this.tasks;"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"    public Task getTask(int index) {"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"        return this.tasks.get(index);"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"    public void addTask(Task task) {"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"        this.tasks.add(task);"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"    public void markTaskAsDone(int index) {"},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"        this.getTask(index).markAsDone();"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"    public void deleteTask(int index) {"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"        this.tasks.remove(index);"},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":33}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"    public ToDo(String description) {"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":13}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"    public static String lineSpacing \u003d \"____________________________________________________________\";"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    public static String taskConfirmation \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"    public void greet() {"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\" + lineSpacing);"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"    public String readInput() {"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"        return sc.nextLine();"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"    public void taskAddConfirmation(Task t, TaskList taskList) {"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"        int numTasks \u003d taskList.getTasks().size();"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"        System.out.println(taskConfirmation + t"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"\\nNow you have \" + numTasks"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"                + (numTasks \u003c 2 ? \" task \" : \" tasks \") + \"in the list.\\n\""},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"                + lineSpacing);"},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"    public void listTasks(TaskList taskList) {"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":"            System.out.println(\"There are no tasks in your list. Hooray!\\n\" + lineSpacing);"},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":"            return;"},{"lineNumber":34,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Jonathan-Cao"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":36,"author":{"gitId":"Jonathan-Cao"},"content":"        int num \u003d 1;"},{"lineNumber":37,"author":{"gitId":"Jonathan-Cao"},"content":"        for (Task task : tasks) {"},{"lineNumber":38,"author":{"gitId":"Jonathan-Cao"},"content":"            System.out.println(num + \".\" + task);"},{"lineNumber":39,"author":{"gitId":"Jonathan-Cao"},"content":"            num++;"},{"lineNumber":40,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Jonathan-Cao"},"content":"        System.out.println(lineSpacing);"},{"lineNumber":42,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":44,"author":{"gitId":"Jonathan-Cao"},"content":"    public void taskDoneConfirmation(Task task) {"},{"lineNumber":45,"author":{"gitId":"Jonathan-Cao"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task"},{"lineNumber":46,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"\\n\" + lineSpacing);"},{"lineNumber":47,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":49,"author":{"gitId":"Jonathan-Cao"},"content":"    public void taskDeleteConfirmation(TaskList taskList, Task task) {"},{"lineNumber":50,"author":{"gitId":"Jonathan-Cao"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":51,"author":{"gitId":"Jonathan-Cao"},"content":"        System.out.println(\"Noted! I\u0027ve removed this task:\\n\" + task"},{"lineNumber":52,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"\\nNow you have \" + tasks.size()"},{"lineNumber":53,"author":{"gitId":"Jonathan-Cao"},"content":"                + (tasks.size() \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\\n\""},{"lineNumber":54,"author":{"gitId":"Jonathan-Cao"},"content":"                + lineSpacing);"},{"lineNumber":55,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":57,"author":{"gitId":"Jonathan-Cao"},"content":"    public void byeMessage() {"},{"lineNumber":58,"author":{"gitId":"Jonathan-Cao"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\" + lineSpacing);"},{"lineNumber":59,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":61,"author":{"gitId":"Jonathan-Cao"},"content":"    public void dukeExceptionMessage(DukeException e) {"},{"lineNumber":62,"author":{"gitId":"Jonathan-Cao"},"content":"        System.out.println(\"Duke has encountered an error: \" + e.getMessage()"},{"lineNumber":63,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"\\n\" + lineSpacing);"},{"lineNumber":64,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":65}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"todo borrow book"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"deadline"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"deadline return book"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"deadline return book /by Sunday"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"deadline return book /by 31-01-2021 1800"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"event"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"event project meeting"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"event project meeting /at 29-01-2021 1300"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"done"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"done 1"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"done 2"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"done 3"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"done 4"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"delete"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"delete 2"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"bye"}],"authorContributionMap":{"Jonathan-Cao":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Jonathan-Cao":1,"-":20}}]
