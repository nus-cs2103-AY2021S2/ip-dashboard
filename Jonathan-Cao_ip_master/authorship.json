[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"public enum Command {"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":"    TODO,"},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"    DEADLINE,"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"    EVENT,"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"    LIST,"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"    DONE,"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"    DELETE,"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"    BYE"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":9}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"        String lineSpacing \u003d \"____________________________________________________________\";"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\" + lineSpacing);"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"        String taskConfirmation \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"        boolean byeFlag \u003d true;"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"        while (byeFlag) {"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"            try {"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"                String s \u003d sc.nextLine();"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"                String[] arr \u003d s.split(\" \");"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"                Command command;"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"                try {"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"                    command \u003d Command.valueOf(arr[0].toUpperCase());"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"                } catch (IllegalArgumentException e) {"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but that is an invalid command :-(\");"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"                }"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"                switch (command) {"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"                    case TODO:"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"                        if (arr.length \u003c 2) {"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"                            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"                        }"},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"                        ToDo t \u003d new ToDo(s.substring(5));"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"                        list.add(t);"},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"                        System.out.println(taskConfirmation + t"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"                                + \"\\nNow you have \" + list.size()"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"                                + (list.size() \u003c 2 ? \" task \" : \" tasks \") + \"in the list.\\n\""},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":"                                + lineSpacing);"},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":"                        break;"},{"lineNumber":34,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":35,"author":{"gitId":"Jonathan-Cao"},"content":"                    case DEADLINE:"},{"lineNumber":36,"author":{"gitId":"Jonathan-Cao"},"content":"                        String[] arr2 \u003d s.split(\" /by \");"},{"lineNumber":37,"author":{"gitId":"Jonathan-Cao"},"content":"                        if (arr.length \u003c 2) {"},{"lineNumber":38,"author":{"gitId":"Jonathan-Cao"},"content":"                            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":39,"author":{"gitId":"Jonathan-Cao"},"content":"                        }"},{"lineNumber":40,"author":{"gitId":"Jonathan-Cao"},"content":"                        if (arr2.length \u003c 2) {"},{"lineNumber":41,"author":{"gitId":"Jonathan-Cao"},"content":"                            throw new DukeException(\"OOPS!!! You did not set a deadline using \u0027/by\u0027.\");"},{"lineNumber":42,"author":{"gitId":"Jonathan-Cao"},"content":"                        }"},{"lineNumber":43,"author":{"gitId":"Jonathan-Cao"},"content":"                        Deadline d \u003d new Deadline(arr2[0].substring(9), arr2[1]);"},{"lineNumber":44,"author":{"gitId":"Jonathan-Cao"},"content":"                        list.add(d);"},{"lineNumber":45,"author":{"gitId":"Jonathan-Cao"},"content":"                        System.out.println(taskConfirmation + d"},{"lineNumber":46,"author":{"gitId":"Jonathan-Cao"},"content":"                                + \"\\nNow you have \" + list.size()"},{"lineNumber":47,"author":{"gitId":"Jonathan-Cao"},"content":"                                + (list.size() \u003c 2 ? \" task \" : \" tasks \") + \"in the list.\\n\""},{"lineNumber":48,"author":{"gitId":"Jonathan-Cao"},"content":"                                + lineSpacing);"},{"lineNumber":49,"author":{"gitId":"Jonathan-Cao"},"content":"                        break;"},{"lineNumber":50,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":51,"author":{"gitId":"Jonathan-Cao"},"content":"                    case EVENT:"},{"lineNumber":52,"author":{"gitId":"Jonathan-Cao"},"content":"                        String[] arr3 \u003d s.split(\" /at \");"},{"lineNumber":53,"author":{"gitId":"Jonathan-Cao"},"content":"                        if (arr.length \u003c 2) {"},{"lineNumber":54,"author":{"gitId":"Jonathan-Cao"},"content":"                            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":55,"author":{"gitId":"Jonathan-Cao"},"content":"                        }"},{"lineNumber":56,"author":{"gitId":"Jonathan-Cao"},"content":"                        if (arr3.length \u003c 2) {"},{"lineNumber":57,"author":{"gitId":"Jonathan-Cao"},"content":"                            throw new DukeException(\"OOPS!!! You did not set the date/time of the event using \u0027/at\u0027.\");"},{"lineNumber":58,"author":{"gitId":"Jonathan-Cao"},"content":"                        }"},{"lineNumber":59,"author":{"gitId":"Jonathan-Cao"},"content":"                        Event e \u003d new Event(arr3[0].substring(6), arr3[1]);"},{"lineNumber":60,"author":{"gitId":"Jonathan-Cao"},"content":"                        list.add(e);"},{"lineNumber":61,"author":{"gitId":"Jonathan-Cao"},"content":"                        System.out.println(taskConfirmation + e"},{"lineNumber":62,"author":{"gitId":"Jonathan-Cao"},"content":"                                + \"\\nNow you have \" + list.size()"},{"lineNumber":63,"author":{"gitId":"Jonathan-Cao"},"content":"                                + (list.size() \u003c 2 ? \" task \" : \" tasks \") + \"in the list.\\n\""},{"lineNumber":64,"author":{"gitId":"Jonathan-Cao"},"content":"                                + lineSpacing);"},{"lineNumber":65,"author":{"gitId":"Jonathan-Cao"},"content":"                        break;"},{"lineNumber":66,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":67,"author":{"gitId":"Jonathan-Cao"},"content":"                    case LIST:"},{"lineNumber":68,"author":{"gitId":"Jonathan-Cao"},"content":"                        if (list.isEmpty()) {"},{"lineNumber":69,"author":{"gitId":"Jonathan-Cao"},"content":"                            System.out.println(\"There are no tasks in your list. Hooray!\\n\" + lineSpacing);"},{"lineNumber":70,"author":{"gitId":"Jonathan-Cao"},"content":"                            continue;"},{"lineNumber":71,"author":{"gitId":"Jonathan-Cao"},"content":"                        }"},{"lineNumber":72,"author":{"gitId":"Jonathan-Cao"},"content":"                        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":73,"author":{"gitId":"Jonathan-Cao"},"content":"                        int num \u003d 1;"},{"lineNumber":74,"author":{"gitId":"Jonathan-Cao"},"content":"                        for (Task task : list) {"},{"lineNumber":75,"author":{"gitId":"Jonathan-Cao"},"content":"                            System.out.println(num + \".\" + task);"},{"lineNumber":76,"author":{"gitId":"Jonathan-Cao"},"content":"                            num++;"},{"lineNumber":77,"author":{"gitId":"Jonathan-Cao"},"content":"                        }"},{"lineNumber":78,"author":{"gitId":"Jonathan-Cao"},"content":"                        System.out.println(lineSpacing);"},{"lineNumber":79,"author":{"gitId":"Jonathan-Cao"},"content":"                        break;"},{"lineNumber":80,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":81,"author":{"gitId":"Jonathan-Cao"},"content":"                    case DONE:"},{"lineNumber":82,"author":{"gitId":"Jonathan-Cao"},"content":"                        if (arr.length \u003c 2) {"},{"lineNumber":83,"author":{"gitId":"Jonathan-Cao"},"content":"                            throw new DukeException(\"OOPS!!! You did not enter the number corresponding to the task.\");"},{"lineNumber":84,"author":{"gitId":"Jonathan-Cao"},"content":"                        }"},{"lineNumber":85,"author":{"gitId":"Jonathan-Cao"},"content":"                        try {"},{"lineNumber":86,"author":{"gitId":"Jonathan-Cao"},"content":"                            int index \u003d Integer.parseInt(arr[1]);"},{"lineNumber":87,"author":{"gitId":"Jonathan-Cao"},"content":"                            if (index \u003c 1 || index \u003e list.size()) {"},{"lineNumber":88,"author":{"gitId":"Jonathan-Cao"},"content":"                                throw new DukeException(\"OOPS!!! The numbered task does not exist.\");"},{"lineNumber":89,"author":{"gitId":"Jonathan-Cao"},"content":"                            }"},{"lineNumber":90,"author":{"gitId":"Jonathan-Cao"},"content":"                            list.get(index - 1).markAsDone();"},{"lineNumber":91,"author":{"gitId":"Jonathan-Cao"},"content":"                            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + list.get(index - 1)"},{"lineNumber":92,"author":{"gitId":"Jonathan-Cao"},"content":"                                                + \"\\n\" + lineSpacing);"},{"lineNumber":93,"author":{"gitId":"Jonathan-Cao"},"content":"                        } catch (NumberFormatException ex) {"},{"lineNumber":94,"author":{"gitId":"Jonathan-Cao"},"content":"                            throw new DukeException(\"OOPS!!! You did not enter the number corresponding to the task.\");"},{"lineNumber":95,"author":{"gitId":"Jonathan-Cao"},"content":"                        }"},{"lineNumber":96,"author":{"gitId":"Jonathan-Cao"},"content":"                        break;"},{"lineNumber":97,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":98,"author":{"gitId":"Jonathan-Cao"},"content":"                    case DELETE:"},{"lineNumber":99,"author":{"gitId":"Jonathan-Cao"},"content":"                        if (arr.length \u003c 2) {"},{"lineNumber":100,"author":{"gitId":"Jonathan-Cao"},"content":"                            throw new DukeException(\"OOPS!!! You did not enter the number corresponding to the task.\");"},{"lineNumber":101,"author":{"gitId":"Jonathan-Cao"},"content":"                        }"},{"lineNumber":102,"author":{"gitId":"Jonathan-Cao"},"content":"                        try {"},{"lineNumber":103,"author":{"gitId":"Jonathan-Cao"},"content":"                            int index \u003d Integer.parseInt(arr[1]);"},{"lineNumber":104,"author":{"gitId":"Jonathan-Cao"},"content":"                            if (index \u003c 1 || index \u003e list.size()) {"},{"lineNumber":105,"author":{"gitId":"Jonathan-Cao"},"content":"                                throw new DukeException(\"OOPS!!! The numbered task does not exist.\");"},{"lineNumber":106,"author":{"gitId":"Jonathan-Cao"},"content":"                            }"},{"lineNumber":107,"author":{"gitId":"Jonathan-Cao"},"content":"                            Task task \u003d list.get(index - 1);"},{"lineNumber":108,"author":{"gitId":"Jonathan-Cao"},"content":"                            list.remove(index - 1);"},{"lineNumber":109,"author":{"gitId":"Jonathan-Cao"},"content":"                            System.out.println(\"Noted! I\u0027ve removed this task:\\n\" + task"},{"lineNumber":110,"author":{"gitId":"Jonathan-Cao"},"content":"                                    + \"\\nNow you have \" + list.size()"},{"lineNumber":111,"author":{"gitId":"Jonathan-Cao"},"content":"                                    + (list.size() \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\\n\""},{"lineNumber":112,"author":{"gitId":"Jonathan-Cao"},"content":"                                    + lineSpacing);"},{"lineNumber":113,"author":{"gitId":"Jonathan-Cao"},"content":"                        } catch (NumberFormatException exception) {"},{"lineNumber":114,"author":{"gitId":"Jonathan-Cao"},"content":"                            throw new DukeException(\"OOPS!!! You did not enter the number corresponding to the task.\");"},{"lineNumber":115,"author":{"gitId":"Jonathan-Cao"},"content":"                        }"},{"lineNumber":116,"author":{"gitId":"Jonathan-Cao"},"content":"                        break;"},{"lineNumber":117,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":118,"author":{"gitId":"Jonathan-Cao"},"content":"                    case BYE:"},{"lineNumber":119,"author":{"gitId":"Jonathan-Cao"},"content":"                        System.out.println(\"Bye. Hope to see you again soon!\\n\" + lineSpacing);"},{"lineNumber":120,"author":{"gitId":"Jonathan-Cao"},"content":"                        byeFlag \u003d false;"},{"lineNumber":121,"author":{"gitId":"Jonathan-Cao"},"content":"                        break;"},{"lineNumber":122,"author":{"gitId":"Jonathan-Cao"},"content":"                }"},{"lineNumber":123,"author":{"gitId":"Jonathan-Cao"},"content":"            } catch (DukeException e) {"},{"lineNumber":124,"author":{"gitId":"Jonathan-Cao"},"content":"                System.out.println(\"Duke has encountered an error: \" + e.getMessage()"},{"lineNumber":125,"author":{"gitId":"Jonathan-Cao"},"content":"                                    + \"\\n\" + lineSpacing);"},{"lineNumber":126,"author":{"gitId":"Jonathan-Cao"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":125,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"        super(errorMessage);"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"    protected String at;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"    public Event(String description, String at) {"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"        this.at \u003d at;"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    public String getStatusIcon() {"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"        return (isDone ? \"X\" : \" \"); //return X or blank"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"    public void markAsDone() {"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"        this.isDone \u003d true;"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":22}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"    public ToDo(String description) {"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"todo borrow book"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"deadline"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"deadline return book"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"deadline return book /by Sunday"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"event"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"event project meeting"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"done"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"done 1"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"done 2"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"done 3"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"done 4"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"delete"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"delete 2"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"bye"}],"authorContributionMap":{"Jonathan-Cao":24}}]
