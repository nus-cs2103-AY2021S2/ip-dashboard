[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"Jonathan-Cao"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"Jonathan-Cao"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"Jonathan-Cao"},"content":"    enableAssertions \u003d true"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":18,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"# User Guide for The Duke Task Manager"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"### Add and view ToDos, Deadlines and Events in a single list "},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"Duke helps to keep track of these 3 types of tasks!"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"### Mark tasks as done"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"Allows you to keep track of which tasks have been attended to!"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"### Delete tasks"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"Remove tasks that are done or no longer relevant!"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"### Find tasks"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"You can search for tasks matching a particular keyword!"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"### `todo` - add a ToDo"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"Adds a ToDo and its description into the list."},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"`todo borrow book`"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"Expected outcome:"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"`Got it! I\u0027ve added this task:`\u003cbr\u003e"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"`[T][] borrow book`\u003cbr\u003e"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"`Now you have 1 task in the list.`"},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":"### `deadline` - add a Deadline"},{"lineNumber":34,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":35,"author":{"gitId":"Jonathan-Cao"},"content":"Adds a Deadline into the list."},{"lineNumber":36,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":37,"author":{"gitId":"Jonathan-Cao"},"content":"Example of usage:"},{"lineNumber":38,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":39,"author":{"gitId":"Jonathan-Cao"},"content":"`deadline return book /by 15-02-2021 1800`"},{"lineNumber":40,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":41,"author":{"gitId":"Jonathan-Cao"},"content":"Expected outcome:"},{"lineNumber":42,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":43,"author":{"gitId":"Jonathan-Cao"},"content":"`Got it! I\u0027ve added this task:`\u003cbr\u003e"},{"lineNumber":44,"author":{"gitId":"Jonathan-Cao"},"content":"`[D][] return book (by: 15 Feb 2021 06:00PM)`\u003cbr\u003e"},{"lineNumber":45,"author":{"gitId":"Jonathan-Cao"},"content":"`Now you have 2 tasks in the list.`"},{"lineNumber":46,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":47,"author":{"gitId":"Jonathan-Cao"},"content":"### `event` - add an Event"},{"lineNumber":48,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":49,"author":{"gitId":"Jonathan-Cao"},"content":"Adds an Event into the list."},{"lineNumber":50,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":51,"author":{"gitId":"Jonathan-Cao"},"content":"Example of usage:"},{"lineNumber":52,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":53,"author":{"gitId":"Jonathan-Cao"},"content":"`event team meeting /at 15-02-2021 1600`"},{"lineNumber":54,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":55,"author":{"gitId":"Jonathan-Cao"},"content":"Expected outcome:"},{"lineNumber":56,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":57,"author":{"gitId":"Jonathan-Cao"},"content":"`Got it! I\u0027ve added this task:`\u003cbr\u003e"},{"lineNumber":58,"author":{"gitId":"Jonathan-Cao"},"content":"`[E][] team meeting (at 15 Feb 2021 04:00PM)`\u003cbr\u003e"},{"lineNumber":59,"author":{"gitId":"Jonathan-Cao"},"content":"`Now you have 3 tasks in the list.`"},{"lineNumber":60,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":61,"author":{"gitId":"Jonathan-Cao"},"content":"### `list` - show all tasks"},{"lineNumber":62,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":63,"author":{"gitId":"Jonathan-Cao"},"content":"Displays every task in the list in order."},{"lineNumber":64,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":65,"author":{"gitId":"Jonathan-Cao"},"content":"Example of usage:"},{"lineNumber":66,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":67,"author":{"gitId":"Jonathan-Cao"},"content":"`list`"},{"lineNumber":68,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":69,"author":{"gitId":"Jonathan-Cao"},"content":"Expected outcome:"},{"lineNumber":70,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":71,"author":{"gitId":"Jonathan-Cao"},"content":"`Here are the tasks in your list:`\u003cbr\u003e"},{"lineNumber":72,"author":{"gitId":"Jonathan-Cao"},"content":"`1.[T][] borrow book`\u003cbr\u003e"},{"lineNumber":73,"author":{"gitId":"Jonathan-Cao"},"content":"`2.[D][] return book (by 15 Feb 2021 06:00PM)`\u003cbr\u003e"},{"lineNumber":74,"author":{"gitId":"Jonathan-Cao"},"content":"`3.[E][] team meeting (at 15 Feb 2021 04:00PM)`"},{"lineNumber":75,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":76,"author":{"gitId":"Jonathan-Cao"},"content":"### `done` - mark task as done"},{"lineNumber":77,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":78,"author":{"gitId":"Jonathan-Cao"},"content":"Marks a specific task in the list as done."},{"lineNumber":79,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":80,"author":{"gitId":"Jonathan-Cao"},"content":"Example of usage:"},{"lineNumber":81,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":82,"author":{"gitId":"Jonathan-Cao"},"content":"`done 1`"},{"lineNumber":83,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":84,"author":{"gitId":"Jonathan-Cao"},"content":"Expected outcome:"},{"lineNumber":85,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":86,"author":{"gitId":"Jonathan-Cao"},"content":"`Nice! I\u0027ve marked this task as done:`\u003cbr\u003e"},{"lineNumber":87,"author":{"gitId":"Jonathan-Cao"},"content":"`[T][X] borrow book`"},{"lineNumber":88,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":89,"author":{"gitId":"Jonathan-Cao"},"content":"### `delete` - remove task from list"},{"lineNumber":90,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":91,"author":{"gitId":"Jonathan-Cao"},"content":"Removes a specific task from the list."},{"lineNumber":92,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":93,"author":{"gitId":"Jonathan-Cao"},"content":"Example of usage:"},{"lineNumber":94,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":95,"author":{"gitId":"Jonathan-Cao"},"content":"`delete 1`"},{"lineNumber":96,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":97,"author":{"gitId":"Jonathan-Cao"},"content":"Expected outcome:"},{"lineNumber":98,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":99,"author":{"gitId":"Jonathan-Cao"},"content":"`Noted! I\u0027ve removed this task:`\u003cbr\u003e"},{"lineNumber":100,"author":{"gitId":"Jonathan-Cao"},"content":"`[T][X] borrow book`\u003cbr\u003e"},{"lineNumber":101,"author":{"gitId":"Jonathan-Cao"},"content":"`Now you have 2 tasks in the list.`"},{"lineNumber":102,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":103,"author":{"gitId":"Jonathan-Cao"},"content":"### `find` - find matching tasks"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"Jonathan-Cao"},"content":"Searches the list for tasks matching a specific keyword."},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"Jonathan-Cao"},"content":"`find team`"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"Jonathan-Cao"},"content":"`Here are the matching tasks in your list:`\u003cbr\u003e"},{"lineNumber":114,"author":{"gitId":"Jonathan-Cao"},"content":"`1.[E][] team meeting (at 15 Feb 2021 04:00PM)`"}],"authorContributionMap":{"Jonathan-Cao":97,"-":17}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":" * Represents all the valid commands that"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":" * the Duke program can recognise."},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"public enum Command {"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"    TODO,"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"    DEADLINE,"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    EVENT,"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"    LIST,"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"    FIND,"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"    DONE,"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"    DELETE,"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"    BYE,"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"    HELP"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":17}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":" * Represents a type of Task that"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":" * needs to be done by a set date and time."},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"    protected LocalDateTime by;"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"     * Class constructor."},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param description the details of the deadline."},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param by          the date and time the deadline needs to be done by."},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"        this.by \u003d by;"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a String representation of this Deadline."},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return a String representation of this Deadline."},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mma\"))"},{"lineNumber":34,"author":{"gitId":"Jonathan-Cao"},"content":"                + \")\";"},{"lineNumber":35,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":36}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.geometry.Insets;"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"public class DialogBox extends HBox {"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"    private Label dialog;"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"    private ImageView displayPicture;"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"            fxmlLoader.load();"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":34,"author":{"gitId":"Jonathan-Cao"},"content":"        dialog.setText(text);"},{"lineNumber":35,"author":{"gitId":"Jonathan-Cao"},"content":"        displayPicture.setImage(img);"},{"lineNumber":36,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":38,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Jonathan-Cao"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":40,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Jonathan-Cao"},"content":"    private void flip() {"},{"lineNumber":42,"author":{"gitId":"Jonathan-Cao"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":43,"author":{"gitId":"Jonathan-Cao"},"content":"        Collections.reverse(tmp);"},{"lineNumber":44,"author":{"gitId":"Jonathan-Cao"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":45,"author":{"gitId":"Jonathan-Cao"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":46,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":48,"author":{"gitId":"Jonathan-Cao"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":49,"author":{"gitId":"Jonathan-Cao"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":50,"author":{"gitId":"Jonathan-Cao"},"content":"        db.setPadding(new Insets(10, 10, 10, 10));"},{"lineNumber":51,"author":{"gitId":"Jonathan-Cao"},"content":"        return db;"},{"lineNumber":52,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":54,"author":{"gitId":"Jonathan-Cao"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"Jonathan-Cao"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"Jonathan-Cao"},"content":"        db.setPadding(new Insets(10, 10, 10, 10));"},{"lineNumber":57,"author":{"gitId":"Jonathan-Cao"},"content":"        db.flip();"},{"lineNumber":58,"author":{"gitId":"Jonathan-Cao"},"content":"        return db;"},{"lineNumber":59,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":60}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":" * The Duke program implements an application that"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":" * allows users to store Tasks in a list, which will"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":" * be saved in between sessions."},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    private final Ui ui;"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"    private final Storage storage;"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"    private final Parser parser;"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"    private final TaskList taskList;"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"     * Class constructor."},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"    public Duke() {"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"        this.parser \u003d new Parser();"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"        this.taskList \u003d storage.readFromFile();"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"     * This method executes the main logic of the Duke program"},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"     * and returns the message to be printed."},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param input user input."},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return message to be printed."},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":"    public String getResponse(String input) {"},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":"        String response;"},{"lineNumber":34,"author":{"gitId":"Jonathan-Cao"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"Jonathan-Cao"},"content":"            Command command \u003d parser.parseCommand(input);"},{"lineNumber":36,"author":{"gitId":"Jonathan-Cao"},"content":"            switch (command) {"},{"lineNumber":37,"author":{"gitId":"Jonathan-Cao"},"content":"            case TODO:"},{"lineNumber":38,"author":{"gitId":"Jonathan-Cao"},"content":"                ToDo toDo \u003d parser.parseToDo(input);"},{"lineNumber":39,"author":{"gitId":"Jonathan-Cao"},"content":"                taskList.addTask(toDo);"},{"lineNumber":40,"author":{"gitId":"Jonathan-Cao"},"content":"                storage.writeToFile(taskList);"},{"lineNumber":41,"author":{"gitId":"Jonathan-Cao"},"content":"                response \u003d ui.getTaskAddedConfirmation(toDo, taskList);"},{"lineNumber":42,"author":{"gitId":"Jonathan-Cao"},"content":"                break;"},{"lineNumber":43,"author":{"gitId":"Jonathan-Cao"},"content":"            case DEADLINE:"},{"lineNumber":44,"author":{"gitId":"Jonathan-Cao"},"content":"                Deadline deadline \u003d parser.parseDeadline(input);"},{"lineNumber":45,"author":{"gitId":"Jonathan-Cao"},"content":"                taskList.addTask(deadline);"},{"lineNumber":46,"author":{"gitId":"Jonathan-Cao"},"content":"                storage.writeToFile(taskList);"},{"lineNumber":47,"author":{"gitId":"Jonathan-Cao"},"content":"                response \u003d ui.getTaskAddedConfirmation(deadline, taskList);"},{"lineNumber":48,"author":{"gitId":"Jonathan-Cao"},"content":"                break;"},{"lineNumber":49,"author":{"gitId":"Jonathan-Cao"},"content":"            case EVENT:"},{"lineNumber":50,"author":{"gitId":"Jonathan-Cao"},"content":"                Event event \u003d parser.parseEvent(input);"},{"lineNumber":51,"author":{"gitId":"Jonathan-Cao"},"content":"                taskList.addTask(event);"},{"lineNumber":52,"author":{"gitId":"Jonathan-Cao"},"content":"                storage.writeToFile(taskList);"},{"lineNumber":53,"author":{"gitId":"Jonathan-Cao"},"content":"                response \u003d ui.getTaskAddedConfirmation(event, taskList);"},{"lineNumber":54,"author":{"gitId":"Jonathan-Cao"},"content":"                break;"},{"lineNumber":55,"author":{"gitId":"Jonathan-Cao"},"content":"            case LIST:"},{"lineNumber":56,"author":{"gitId":"Jonathan-Cao"},"content":"                response \u003d ui.getAllTasks(taskList);"},{"lineNumber":57,"author":{"gitId":"Jonathan-Cao"},"content":"                break;"},{"lineNumber":58,"author":{"gitId":"Jonathan-Cao"},"content":"            case FIND:"},{"lineNumber":59,"author":{"gitId":"Jonathan-Cao"},"content":"                String keyword \u003d parser.parseKeyword(input);"},{"lineNumber":60,"author":{"gitId":"Jonathan-Cao"},"content":"                TaskList matchingTasks \u003d taskList.findMatchingTasks(keyword);"},{"lineNumber":61,"author":{"gitId":"Jonathan-Cao"},"content":"                response \u003d ui.getMatchingTasks(matchingTasks);"},{"lineNumber":62,"author":{"gitId":"Jonathan-Cao"},"content":"                break;"},{"lineNumber":63,"author":{"gitId":"Jonathan-Cao"},"content":"            case DONE:"},{"lineNumber":64,"author":{"gitId":"Jonathan-Cao"},"content":"                int doneIndex \u003d parser.parseDone(input, taskList);"},{"lineNumber":65,"author":{"gitId":"Jonathan-Cao"},"content":"                Task doneTask \u003d taskList.getTask(doneIndex);"},{"lineNumber":66,"author":{"gitId":"Jonathan-Cao"},"content":"                taskList.markTaskAsDone(doneIndex);"},{"lineNumber":67,"author":{"gitId":"Jonathan-Cao"},"content":"                storage.writeToFile(taskList);"},{"lineNumber":68,"author":{"gitId":"Jonathan-Cao"},"content":"                response \u003d ui.getTaskDoneConfirmation(doneTask);"},{"lineNumber":69,"author":{"gitId":"Jonathan-Cao"},"content":"                break;"},{"lineNumber":70,"author":{"gitId":"Jonathan-Cao"},"content":"            case DELETE:"},{"lineNumber":71,"author":{"gitId":"Jonathan-Cao"},"content":"                int deleteIndex \u003d parser.parseDelete(input, taskList);"},{"lineNumber":72,"author":{"gitId":"Jonathan-Cao"},"content":"                Task deleteTask \u003d taskList.getTask(deleteIndex);"},{"lineNumber":73,"author":{"gitId":"Jonathan-Cao"},"content":"                taskList.deleteTask(deleteIndex);"},{"lineNumber":74,"author":{"gitId":"Jonathan-Cao"},"content":"                storage.writeToFile(taskList);"},{"lineNumber":75,"author":{"gitId":"Jonathan-Cao"},"content":"                response \u003d ui.getTaskDeleteConfirmation(taskList, deleteTask);"},{"lineNumber":76,"author":{"gitId":"Jonathan-Cao"},"content":"                break;"},{"lineNumber":77,"author":{"gitId":"Jonathan-Cao"},"content":"            case BYE:"},{"lineNumber":78,"author":{"gitId":"Jonathan-Cao"},"content":"                response \u003d ui.getByeMessage();"},{"lineNumber":79,"author":{"gitId":"Jonathan-Cao"},"content":"                System.exit(0);"},{"lineNumber":80,"author":{"gitId":"Jonathan-Cao"},"content":"                break;"},{"lineNumber":81,"author":{"gitId":"Jonathan-Cao"},"content":"            case HELP:"},{"lineNumber":82,"author":{"gitId":"Jonathan-Cao"},"content":"                response \u003d ui.getHelpMessage();"},{"lineNumber":83,"author":{"gitId":"Jonathan-Cao"},"content":"                break;"},{"lineNumber":84,"author":{"gitId":"Jonathan-Cao"},"content":"            default:"},{"lineNumber":85,"author":{"gitId":"Jonathan-Cao"},"content":"                throw new AssertionError(command);"},{"lineNumber":86,"author":{"gitId":"Jonathan-Cao"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"Jonathan-Cao"},"content":"        } catch (DukeException dukeException) {"},{"lineNumber":88,"author":{"gitId":"Jonathan-Cao"},"content":"            response \u003d ui.getDukeExceptionMessage(dukeException);"},{"lineNumber":89,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"Jonathan-Cao"},"content":"        assert response !\u003d null;"},{"lineNumber":91,"author":{"gitId":"Jonathan-Cao"},"content":"        return response;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":90,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":" * Represents an Exception that is thrown"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":" * when user enters invalid commands and/or"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":" * arguments."},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"public class DukeException extends Exception {"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"     * Class constructor."},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param errorMessage details of the invalid command or argument."},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"        super(errorMessage);"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":19}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":" * Represents a type of Task that has to"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":" * be attended at a certain date and time."},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"    protected LocalDateTime at;"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"     * Class constructor."},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param description the details of the event."},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param at          the date and time to attend the event."},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"    public Event(String description, LocalDateTime at) {"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"        this.at \u003d at;"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns the String representation of this Event."},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return the String representation of this Event."},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":"                + this.at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mma\"))"},{"lineNumber":34,"author":{"gitId":"Jonathan-Cao"},"content":"                + \")\";"},{"lineNumber":35,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":36}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"    public void start(Stage stage) {"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"            stage.setScene(scene);"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"            stage.setTitle(\"The Duke Task Manager\");"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"            stage.show();"},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"    private Duke duke;"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"     * Initializes Duke with a greeting message."},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"Jonathan-Cao"},"content":"    public void initialize() {"},{"lineNumber":35,"author":{"gitId":"Jonathan-Cao"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":36,"author":{"gitId":"Jonathan-Cao"},"content":"        String greeting \u003d \"Hi I\u0027m Duke!\\nWhat can I do for you?\\nEnter \u0027help\u0027 for more info!\";"},{"lineNumber":37,"author":{"gitId":"Jonathan-Cao"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(greeting, dukeImage));"},{"lineNumber":38,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":40,"author":{"gitId":"Jonathan-Cao"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":41,"author":{"gitId":"Jonathan-Cao"},"content":"        duke \u003d d;"},{"lineNumber":42,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":44,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"Jonathan-Cao"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":46,"author":{"gitId":"Jonathan-Cao"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":47,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Jonathan-Cao"},"content":"    @FXML"},{"lineNumber":49,"author":{"gitId":"Jonathan-Cao"},"content":"    private void handleUserInput() {"},{"lineNumber":50,"author":{"gitId":"Jonathan-Cao"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":51,"author":{"gitId":"Jonathan-Cao"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":52,"author":{"gitId":"Jonathan-Cao"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":53,"author":{"gitId":"Jonathan-Cao"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":54,"author":{"gitId":"Jonathan-Cao"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":55,"author":{"gitId":"Jonathan-Cao"},"content":"        );"},{"lineNumber":56,"author":{"gitId":"Jonathan-Cao"},"content":"        userInput.clear();"},{"lineNumber":57,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":58}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":" * Represents the component of the Duke program"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":" * that makes sense of user input."},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"public class Parser {"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"    protected static final DateTimeFormatter INPUT_DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a valid Duke Command after parsing user input."},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param input user input."},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return a valid Duke Command"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"     * @throws DukeException when user input"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"     *                       does not match any valid Duke Commands."},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"    public Command parseCommand(String input) throws DukeException {"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] words \u003d input.split(\" \");"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"            return Command.valueOf(words[0].toUpperCase());"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"        } catch (IllegalArgumentException illegalArgumentException) {"},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but that is an invalid command :-(\");"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a ToDo based on user input."},{"lineNumber":35,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param input user input."},{"lineNumber":37,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return a ToDo based on user input."},{"lineNumber":38,"author":{"gitId":"Jonathan-Cao"},"content":"     * @throws DukeException when user input does not contain"},{"lineNumber":39,"author":{"gitId":"Jonathan-Cao"},"content":"     *                       the description of the ToDo after the command."},{"lineNumber":40,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Jonathan-Cao"},"content":"    public ToDo parseToDo(String input) throws DukeException {"},{"lineNumber":42,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] words \u003d input.split(\" \");"},{"lineNumber":43,"author":{"gitId":"Jonathan-Cao"},"content":"        boolean containDescription \u003d words.length \u003e\u003d 2;"},{"lineNumber":44,"author":{"gitId":"Jonathan-Cao"},"content":"        if (!containDescription) {"},{"lineNumber":45,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":46,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Jonathan-Cao"},"content":"        return new ToDo(input.substring(5));"},{"lineNumber":48,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":50,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a Deadline based on user input."},{"lineNumber":52,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param input user input."},{"lineNumber":54,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return a Deadline based on user input."},{"lineNumber":55,"author":{"gitId":"Jonathan-Cao"},"content":"     * @throws DukeException when user input does not contain"},{"lineNumber":56,"author":{"gitId":"Jonathan-Cao"},"content":"     *                       the description of the Deadline after the command,"},{"lineNumber":57,"author":{"gitId":"Jonathan-Cao"},"content":"     *                       the date and time of the Deadline after \u0027/by\u0027"},{"lineNumber":58,"author":{"gitId":"Jonathan-Cao"},"content":"     *                       or when the date and time is not in the correct format."},{"lineNumber":59,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"Jonathan-Cao"},"content":"    public Deadline parseDeadline(String input) throws DukeException {"},{"lineNumber":61,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] words \u003d input.split(\" \");"},{"lineNumber":62,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] numSentenceParts \u003d input.split(\" /by \");"},{"lineNumber":63,"author":{"gitId":"Jonathan-Cao"},"content":"        boolean containOnlyCommand \u003d words.length \u003c 2;"},{"lineNumber":64,"author":{"gitId":"Jonathan-Cao"},"content":"        boolean containDescription \u003d numSentenceParts[0].split(\" \").length \u003e\u003d 2;"},{"lineNumber":65,"author":{"gitId":"Jonathan-Cao"},"content":"        if (containOnlyCommand || !containDescription) {"},{"lineNumber":66,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":67,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"Jonathan-Cao"},"content":"        if (numSentenceParts.length \u003c 2) {"},{"lineNumber":69,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! You did not set a deadline using \u0027/by\u0027.\");"},{"lineNumber":70,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"Jonathan-Cao"},"content":"        LocalDateTime deadlineDate;"},{"lineNumber":72,"author":{"gitId":"Jonathan-Cao"},"content":"        try {"},{"lineNumber":73,"author":{"gitId":"Jonathan-Cao"},"content":"            deadlineDate \u003d LocalDateTime.parse(numSentenceParts[1], INPUT_DATETIME_FORMAT);"},{"lineNumber":74,"author":{"gitId":"Jonathan-Cao"},"content":"        } catch (DateTimeParseException dateTimeParseException) {"},{"lineNumber":75,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! Please input date and time in the following format: dd-MM-yyyy HHmm.\");"},{"lineNumber":76,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"Jonathan-Cao"},"content":"        return new Deadline(numSentenceParts[0].substring(9), deadlineDate);"},{"lineNumber":78,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":80,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns an Event based on user input."},{"lineNumber":82,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param input user input."},{"lineNumber":84,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return a Event based on user input."},{"lineNumber":85,"author":{"gitId":"Jonathan-Cao"},"content":"     * @throws DukeException when user input does not contain"},{"lineNumber":86,"author":{"gitId":"Jonathan-Cao"},"content":"     *                       the description of the Event after the command,"},{"lineNumber":87,"author":{"gitId":"Jonathan-Cao"},"content":"     *                       the date and time of the Event after \u0027/at\u0027"},{"lineNumber":88,"author":{"gitId":"Jonathan-Cao"},"content":"     *                       or when the date and time is not in the correct format."},{"lineNumber":89,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"Jonathan-Cao"},"content":"    public Event parseEvent(String input) throws DukeException {"},{"lineNumber":91,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] words \u003d input.split(\" \");"},{"lineNumber":92,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] numSentenceParts \u003d input.split(\" /at \");"},{"lineNumber":93,"author":{"gitId":"Jonathan-Cao"},"content":"        boolean containOnlyCommand \u003d words.length \u003c 2;"},{"lineNumber":94,"author":{"gitId":"Jonathan-Cao"},"content":"        boolean containDescription \u003d numSentenceParts[0].split(\" \").length \u003e\u003d 2;"},{"lineNumber":95,"author":{"gitId":"Jonathan-Cao"},"content":"        if (containOnlyCommand || !containDescription) {"},{"lineNumber":96,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":97,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"Jonathan-Cao"},"content":"        if (numSentenceParts.length \u003c 2) {"},{"lineNumber":99,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! You did not set the date/time of the event using \u0027/at\u0027.\");"},{"lineNumber":100,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"Jonathan-Cao"},"content":"        LocalDateTime eventDate;"},{"lineNumber":102,"author":{"gitId":"Jonathan-Cao"},"content":"        try {"},{"lineNumber":103,"author":{"gitId":"Jonathan-Cao"},"content":"            eventDate \u003d LocalDateTime.parse(numSentenceParts[1], INPUT_DATETIME_FORMAT);"},{"lineNumber":104,"author":{"gitId":"Jonathan-Cao"},"content":"        } catch (DateTimeParseException dateTimeParseException) {"},{"lineNumber":105,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! Please input date and time in the following format: dd-MM-yyyy HHmm.\");"},{"lineNumber":106,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"Jonathan-Cao"},"content":"        return new Event(numSentenceParts[0].substring(6), eventDate);"},{"lineNumber":108,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":110,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a valid int index of the Task"},{"lineNumber":112,"author":{"gitId":"Jonathan-Cao"},"content":"     * to be marked as done in the TaskList."},{"lineNumber":113,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param input    user input."},{"lineNumber":115,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param taskList list of Tasks that contains the Task to be marked as done."},{"lineNumber":116,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return the index of the Task."},{"lineNumber":117,"author":{"gitId":"Jonathan-Cao"},"content":"     * @throws DukeException when user input does not contain an int value after the command"},{"lineNumber":118,"author":{"gitId":"Jonathan-Cao"},"content":"     *                       or when the index provided does not correspond to any Task in the TaskList."},{"lineNumber":119,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"Jonathan-Cao"},"content":"    public int parseDone(String input, TaskList taskList) throws DukeException {"},{"lineNumber":121,"author":{"gitId":"Jonathan-Cao"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":122,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] words \u003d input.split(\" \");"},{"lineNumber":123,"author":{"gitId":"Jonathan-Cao"},"content":"        if (words.length \u003c 2) {"},{"lineNumber":124,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! You did not enter the number corresponding to the task.\");"},{"lineNumber":125,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"Jonathan-Cao"},"content":"        try {"},{"lineNumber":127,"author":{"gitId":"Jonathan-Cao"},"content":"            int argument \u003d Integer.parseInt(words[1]);"},{"lineNumber":128,"author":{"gitId":"Jonathan-Cao"},"content":"            if (argument \u003c 1 || argument \u003e tasks.size()) {"},{"lineNumber":129,"author":{"gitId":"Jonathan-Cao"},"content":"                throw new DukeException(\"OOPS!!! The numbered task does not exist.\");"},{"lineNumber":130,"author":{"gitId":"Jonathan-Cao"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"Jonathan-Cao"},"content":"            return argument - 1;"},{"lineNumber":132,"author":{"gitId":"Jonathan-Cao"},"content":"        } catch (NumberFormatException numberFormatException) {"},{"lineNumber":133,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! You did not enter the number corresponding to the task.\");"},{"lineNumber":134,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":137,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a valid int index of the Task"},{"lineNumber":139,"author":{"gitId":"Jonathan-Cao"},"content":"     * to be deleted from the TaskList."},{"lineNumber":140,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":141,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param input    user input."},{"lineNumber":142,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param taskList list of Tasks that contains the Task to be deleted."},{"lineNumber":143,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return the index of the Task."},{"lineNumber":144,"author":{"gitId":"Jonathan-Cao"},"content":"     * @throws DukeException when user input does not contain an int value after the command"},{"lineNumber":145,"author":{"gitId":"Jonathan-Cao"},"content":"     *                       or when the index provided does not correspond to any Task in the TaskList."},{"lineNumber":146,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"Jonathan-Cao"},"content":"    public int parseDelete(String input, TaskList taskList) throws DukeException {"},{"lineNumber":148,"author":{"gitId":"Jonathan-Cao"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":149,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] words \u003d input.split(\" \");"},{"lineNumber":150,"author":{"gitId":"Jonathan-Cao"},"content":"        boolean containOnlyCommand \u003d words.length \u003c 2;"},{"lineNumber":151,"author":{"gitId":"Jonathan-Cao"},"content":"        if (containOnlyCommand) {"},{"lineNumber":152,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! You did not enter the number corresponding to the task.\");"},{"lineNumber":153,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"Jonathan-Cao"},"content":"        try {"},{"lineNumber":155,"author":{"gitId":"Jonathan-Cao"},"content":"            int argument \u003d Integer.parseInt(words[1]);"},{"lineNumber":156,"author":{"gitId":"Jonathan-Cao"},"content":"            if (argument \u003c 1 || argument \u003e tasks.size()) {"},{"lineNumber":157,"author":{"gitId":"Jonathan-Cao"},"content":"                throw new DukeException(\"OOPS!!! The numbered task does not exist.\");"},{"lineNumber":158,"author":{"gitId":"Jonathan-Cao"},"content":"            }"},{"lineNumber":159,"author":{"gitId":"Jonathan-Cao"},"content":"            return argument - 1;"},{"lineNumber":160,"author":{"gitId":"Jonathan-Cao"},"content":"        } catch (NumberFormatException numberFormatException) {"},{"lineNumber":161,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! You did not enter the number corresponding to the task.\");"},{"lineNumber":162,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":165,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":166,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a valid String keyword."},{"lineNumber":167,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":168,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param input user input."},{"lineNumber":169,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return a valid String keyword"},{"lineNumber":170,"author":{"gitId":"Jonathan-Cao"},"content":"     * @throws DukeException when user enters more than one keyword"},{"lineNumber":171,"author":{"gitId":"Jonathan-Cao"},"content":"     *                       or none at all."},{"lineNumber":172,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"Jonathan-Cao"},"content":"    public String parseKeyword(String input) throws DukeException {"},{"lineNumber":174,"author":{"gitId":"Jonathan-Cao"},"content":"        String[] words \u003d input.split(\" \");"},{"lineNumber":175,"author":{"gitId":"Jonathan-Cao"},"content":"        boolean containOnlyCommand \u003d words.length \u003c 2;"},{"lineNumber":176,"author":{"gitId":"Jonathan-Cao"},"content":"        boolean containTooManyKeywords \u003d words.length \u003e 2;"},{"lineNumber":177,"author":{"gitId":"Jonathan-Cao"},"content":"        if (containOnlyCommand) {"},{"lineNumber":178,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! Please enter a keyword.\");"},{"lineNumber":179,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"Jonathan-Cao"},"content":"        if (containTooManyKeywords) {"},{"lineNumber":181,"author":{"gitId":"Jonathan-Cao"},"content":"            throw new DukeException(\"OOPS!!! Please enter only one keyword.\");"},{"lineNumber":182,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"Jonathan-Cao"},"content":"        return words[1];"},{"lineNumber":184,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":185}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.FileInputStream;"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.FileOutputStream;"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.ObjectInputStream;"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.ObjectOutputStream;"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":" * Represents the component of the Duke program"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":" * that deals with loading tasks from a file"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":" * and saving tasks in a file."},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":" */"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a TaskList from a save file if it exists,"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"     * else creates a new save file and"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"     * returns an empty TaskList."},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return a TaskList from a saved file or an empty TaskList."},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"    public TaskList readFromFile() {"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"        File dir \u003d new File(\"data\");"},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"        if (!dir.exists()) {"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"            dir.mkdir();"},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"        File savedTasks \u003d new File(dir, \"saved_tasks\");"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"        if (!savedTasks.exists()) {"},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":"            try {"},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":"                savedTasks.createNewFile();"},{"lineNumber":34,"author":{"gitId":"Jonathan-Cao"},"content":"                return new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":35,"author":{"gitId":"Jonathan-Cao"},"content":"            } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"Jonathan-Cao"},"content":"                e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"Jonathan-Cao"},"content":"                return new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":38,"author":{"gitId":"Jonathan-Cao"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"Jonathan-Cao"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"Jonathan-Cao"},"content":"            try {"},{"lineNumber":41,"author":{"gitId":"Jonathan-Cao"},"content":"                FileInputStream fileInputStream \u003d new FileInputStream(savedTasks);"},{"lineNumber":42,"author":{"gitId":"Jonathan-Cao"},"content":"                ObjectInputStream objectInputStream \u003d new ObjectInputStream(fileInputStream);"},{"lineNumber":43,"author":{"gitId":"Jonathan-Cao"},"content":"                TaskList result \u003d (TaskList) objectInputStream.readObject();"},{"lineNumber":44,"author":{"gitId":"Jonathan-Cao"},"content":"                objectInputStream.close();"},{"lineNumber":45,"author":{"gitId":"Jonathan-Cao"},"content":"                fileInputStream.close();"},{"lineNumber":46,"author":{"gitId":"Jonathan-Cao"},"content":"                return result;"},{"lineNumber":47,"author":{"gitId":"Jonathan-Cao"},"content":"            } catch (IOException | ClassNotFoundException e) {"},{"lineNumber":48,"author":{"gitId":"Jonathan-Cao"},"content":"                e.printStackTrace();"},{"lineNumber":49,"author":{"gitId":"Jonathan-Cao"},"content":"                return new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":50,"author":{"gitId":"Jonathan-Cao"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":54,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"Jonathan-Cao"},"content":"     * Writes the contents of a TaskList into a save file."},{"lineNumber":56,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param tasks the TaskList to be written into the save file."},{"lineNumber":58,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"Jonathan-Cao"},"content":"    public void writeToFile(TaskList tasks) {"},{"lineNumber":60,"author":{"gitId":"Jonathan-Cao"},"content":"        File dir \u003d new File(\"data\");"},{"lineNumber":61,"author":{"gitId":"Jonathan-Cao"},"content":"        File savedTasks \u003d new File(dir, \"saved_tasks\");"},{"lineNumber":62,"author":{"gitId":"Jonathan-Cao"},"content":"        try {"},{"lineNumber":63,"author":{"gitId":"Jonathan-Cao"},"content":"            FileOutputStream fileOutputStream \u003d new FileOutputStream(savedTasks);"},{"lineNumber":64,"author":{"gitId":"Jonathan-Cao"},"content":"            ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(fileOutputStream);"},{"lineNumber":65,"author":{"gitId":"Jonathan-Cao"},"content":"            objectOutputStream.writeObject(tasks);"},{"lineNumber":66,"author":{"gitId":"Jonathan-Cao"},"content":"            objectOutputStream.close();"},{"lineNumber":67,"author":{"gitId":"Jonathan-Cao"},"content":"            fileOutputStream.close();"},{"lineNumber":68,"author":{"gitId":"Jonathan-Cao"},"content":"        } catch (IOException ioe) {"},{"lineNumber":69,"author":{"gitId":"Jonathan-Cao"},"content":"            ioe.printStackTrace();"},{"lineNumber":70,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":72}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.Serializable;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":" * Represents a reminder of a task to be done or attended to."},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":" * A Task object contains a String description and a boolean flag"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":" * to check if it has been attended to."},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"public class Task implements Serializable {"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"    protected String description;"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"    protected boolean isDone;"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"     * Class constructor."},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param description the details of the task."},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"    public Task(String description) {"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"        this.description \u003d description;"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"        this.isDone \u003d false;"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a String that represents whether this Task is done."},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return String representation of whether this Task is done."},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"    public String getStatusIcon() {"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":34,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Jonathan-Cao"},"content":"     * Marks this Task as done by changing the boolean flag to true."},{"lineNumber":36,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Jonathan-Cao"},"content":"    public void markAsDone() {"},{"lineNumber":38,"author":{"gitId":"Jonathan-Cao"},"content":"        this.isDone \u003d true;"},{"lineNumber":39,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":41,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a String representation of this Task."},{"lineNumber":43,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return a String representation of this Task."},{"lineNumber":45,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"Jonathan-Cao"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"Jonathan-Cao"},"content":"    public String toString() {"},{"lineNumber":48,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":49,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":50}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import java.io.Serializable;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":" * Represents the component of the Duke program"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":" * that contains the list of Tasks."},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"public class TaskList implements Serializable {"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"    protected ArrayList\u003cTask\u003e tasks;"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"     * Class constructor."},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param tasks the list of Tasks."},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns the list of Tasks stored in this TaskList."},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return the list of Tasks stored in this TaskList."},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"        return this.tasks;"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns the Task in the specified int index of"},{"lineNumber":34,"author":{"gitId":"Jonathan-Cao"},"content":"     * the list of Tasks contained in this TaskList."},{"lineNumber":35,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param index the int index of the Task to be returned."},{"lineNumber":37,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return the Task in the specified int index."},{"lineNumber":38,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Jonathan-Cao"},"content":"    public Task getTask(int index) {"},{"lineNumber":40,"author":{"gitId":"Jonathan-Cao"},"content":"        return this.tasks.get(index);"},{"lineNumber":41,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":43,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Jonathan-Cao"},"content":"     * Adds a Task into the list of Tasks"},{"lineNumber":45,"author":{"gitId":"Jonathan-Cao"},"content":"     * contained in this TaskList."},{"lineNumber":46,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param task the Task to be added."},{"lineNumber":48,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"Jonathan-Cao"},"content":"    public void addTask(Task task) {"},{"lineNumber":50,"author":{"gitId":"Jonathan-Cao"},"content":"        this.tasks.add(task);"},{"lineNumber":51,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":53,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Jonathan-Cao"},"content":"     * Marks a Task in the specified int index of"},{"lineNumber":55,"author":{"gitId":"Jonathan-Cao"},"content":"     * the list of Tasks contained in this TaskList"},{"lineNumber":56,"author":{"gitId":"Jonathan-Cao"},"content":"     * as done."},{"lineNumber":57,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param index the int index of the Task to be marked as done."},{"lineNumber":59,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"Jonathan-Cao"},"content":"    public void markTaskAsDone(int index) {"},{"lineNumber":61,"author":{"gitId":"Jonathan-Cao"},"content":"        this.getTask(index).markAsDone();"},{"lineNumber":62,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":64,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"Jonathan-Cao"},"content":"     * Deletes a Task in the specified int index of"},{"lineNumber":66,"author":{"gitId":"Jonathan-Cao"},"content":"     * the list of Tasks contained in this TaskList."},{"lineNumber":67,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param index the int index of the Task to be deleted."},{"lineNumber":69,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"Jonathan-Cao"},"content":"    public void deleteTask(int index) {"},{"lineNumber":71,"author":{"gitId":"Jonathan-Cao"},"content":"        this.tasks.remove(index);"},{"lineNumber":72,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":74,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a TaskList containing Tasks that"},{"lineNumber":76,"author":{"gitId":"Jonathan-Cao"},"content":"     * have descriptions matching the String keyword."},{"lineNumber":77,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param keyword the String keyword to be matched with Task descriptions."},{"lineNumber":79,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return a TaskList containing matching Tasks."},{"lineNumber":80,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"Jonathan-Cao"},"content":"    public TaskList findMatchingTasks(String keyword) {"},{"lineNumber":82,"author":{"gitId":"Jonathan-Cao"},"content":"        TaskList matchingTasks \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":83,"author":{"gitId":"Jonathan-Cao"},"content":"        for (Task task : tasks) {"},{"lineNumber":84,"author":{"gitId":"Jonathan-Cao"},"content":"            String description \u003d task.description;"},{"lineNumber":85,"author":{"gitId":"Jonathan-Cao"},"content":"            String[] words \u003d description.split(\" \");"},{"lineNumber":86,"author":{"gitId":"Jonathan-Cao"},"content":"            boolean isMatching \u003d false;"},{"lineNumber":87,"author":{"gitId":"Jonathan-Cao"},"content":"            for (String word : words) {"},{"lineNumber":88,"author":{"gitId":"Jonathan-Cao"},"content":"                if (word.equals(keyword)) {"},{"lineNumber":89,"author":{"gitId":"Jonathan-Cao"},"content":"                    isMatching \u003d true;"},{"lineNumber":90,"author":{"gitId":"Jonathan-Cao"},"content":"                    break;"},{"lineNumber":91,"author":{"gitId":"Jonathan-Cao"},"content":"                }"},{"lineNumber":92,"author":{"gitId":"Jonathan-Cao"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"Jonathan-Cao"},"content":"            if (isMatching) {"},{"lineNumber":94,"author":{"gitId":"Jonathan-Cao"},"content":"                matchingTasks.addTask(task);"},{"lineNumber":95,"author":{"gitId":"Jonathan-Cao"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"Jonathan-Cao"},"content":"        return matchingTasks;"},{"lineNumber":98,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":99}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":" * Represents the simplest type of Task that"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":" * contains only a description of the task"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":" * without date or time."},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"public class ToDo extends Task {"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"     * Class constructor."},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param description the details of the todo."},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"    public ToDo(String description) {"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a String representation of this ToDo."},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return a String representation of this ToDo."},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":28}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":" * Represents the component of the Duke program"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":" * that deals with interactions with the user."},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"public class Ui {"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"    protected static final String TASK_CONFIRMATION \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a String message informing the user"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"     * of the Task added to the TaskList"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"     * along with the total number of Tasks in the TaskList."},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param t        the Task that was added to the TaskList."},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param taskList the TaskList in which the Task was added to."},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return String message informing the user of the Task added to the TaskList."},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"    public String getTaskAddedConfirmation(Task t, TaskList taskList) {"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"        int numTasks \u003d taskList.getTasks().size();"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"        return TASK_CONFIRMATION + t"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"\\nNow you have \" + numTasks"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"                + (numTasks \u003c 2 ? \" task \" : \" tasks \") + \"in the list.\\n\";"},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a String message containing the details of"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"     * all the Tasks in the TaskList in numerical order."},{"lineNumber":32,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param taskList the TaskList containing the Tasks to be printed."},{"lineNumber":34,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return String message containing all Tasks in the TaskList."},{"lineNumber":35,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Jonathan-Cao"},"content":"    public String getAllTasks(TaskList taskList) {"},{"lineNumber":37,"author":{"gitId":"Jonathan-Cao"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":38,"author":{"gitId":"Jonathan-Cao"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":39,"author":{"gitId":"Jonathan-Cao"},"content":"            return \"There are no tasks in your list. Hooray!\\n\";"},{"lineNumber":40,"author":{"gitId":"Jonathan-Cao"},"content":"        } else {"},{"lineNumber":41,"author":{"gitId":"Jonathan-Cao"},"content":"            String message \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":42,"author":{"gitId":"Jonathan-Cao"},"content":"            int num \u003d 1;"},{"lineNumber":43,"author":{"gitId":"Jonathan-Cao"},"content":"            for (Task task : tasks) {"},{"lineNumber":44,"author":{"gitId":"Jonathan-Cao"},"content":"                message +\u003d (num + \".\" + task + \"\\n\");"},{"lineNumber":45,"author":{"gitId":"Jonathan-Cao"},"content":"                num++;"},{"lineNumber":46,"author":{"gitId":"Jonathan-Cao"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"Jonathan-Cao"},"content":"            return message;"},{"lineNumber":48,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":51,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a String message informing the user"},{"lineNumber":53,"author":{"gitId":"Jonathan-Cao"},"content":"     * of the Task that was marked as done."},{"lineNumber":54,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param task the Task that was marked as done."},{"lineNumber":56,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return String message of the Task marked as done."},{"lineNumber":57,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"Jonathan-Cao"},"content":"    public String getTaskDoneConfirmation(Task task) {"},{"lineNumber":59,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task"},{"lineNumber":60,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"\\n\";"},{"lineNumber":61,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":63,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a String message informing the user"},{"lineNumber":65,"author":{"gitId":"Jonathan-Cao"},"content":"     * of the Task that was deleted from the TaskList"},{"lineNumber":66,"author":{"gitId":"Jonathan-Cao"},"content":"     * along with the remaining number of Tasks in that TaskList."},{"lineNumber":67,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param taskList the TaskList from which the Task was deleted."},{"lineNumber":69,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param task     the Task to be deleted."},{"lineNumber":70,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return String message of deleted Task."},{"lineNumber":71,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"Jonathan-Cao"},"content":"    public String getTaskDeleteConfirmation(TaskList taskList, Task task) {"},{"lineNumber":73,"author":{"gitId":"Jonathan-Cao"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":74,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"Noted! I\u0027ve removed this task:\\n\" + task"},{"lineNumber":75,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"\\nNow you have \" + tasks.size()"},{"lineNumber":76,"author":{"gitId":"Jonathan-Cao"},"content":"                + (tasks.size() \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\\n\";"},{"lineNumber":77,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":79,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a String message containing the details"},{"lineNumber":81,"author":{"gitId":"Jonathan-Cao"},"content":"     * of all the Tasks in the TaskList,"},{"lineNumber":82,"author":{"gitId":"Jonathan-Cao"},"content":"     * that matched a keyword input by the user,"},{"lineNumber":83,"author":{"gitId":"Jonathan-Cao"},"content":"     * in numerical order."},{"lineNumber":84,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param taskList the TaskList containing the matched Tasks to be printed."},{"lineNumber":86,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return String message containing matching Tasks."},{"lineNumber":87,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"Jonathan-Cao"},"content":"    public String getMatchingTasks(TaskList taskList) {"},{"lineNumber":89,"author":{"gitId":"Jonathan-Cao"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":90,"author":{"gitId":"Jonathan-Cao"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":91,"author":{"gitId":"Jonathan-Cao"},"content":"            return \"There are no matching tasks in your list. :(\\n\";"},{"lineNumber":92,"author":{"gitId":"Jonathan-Cao"},"content":"        } else {"},{"lineNumber":93,"author":{"gitId":"Jonathan-Cao"},"content":"            String message \u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":94,"author":{"gitId":"Jonathan-Cao"},"content":"            int num \u003d 1;"},{"lineNumber":95,"author":{"gitId":"Jonathan-Cao"},"content":"            for (Task task : tasks) {"},{"lineNumber":96,"author":{"gitId":"Jonathan-Cao"},"content":"                message +\u003d (num + \".\" + task) + \"\\n\";"},{"lineNumber":97,"author":{"gitId":"Jonathan-Cao"},"content":"                num++;"},{"lineNumber":98,"author":{"gitId":"Jonathan-Cao"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"Jonathan-Cao"},"content":"            return message;"},{"lineNumber":100,"author":{"gitId":"Jonathan-Cao"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":103,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a String message that signals"},{"lineNumber":105,"author":{"gitId":"Jonathan-Cao"},"content":"     * the termination of the Duke program."},{"lineNumber":106,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return String message that signals termination."},{"lineNumber":108,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"Jonathan-Cao"},"content":"    public String getByeMessage() {"},{"lineNumber":110,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"Bye. Hope to see you again soon!\\n\";"},{"lineNumber":111,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":113,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a String message provides in-app"},{"lineNumber":115,"author":{"gitId":"Jonathan-Cao"},"content":"     * guidance to users."},{"lineNumber":116,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return String message providing in-app guidance."},{"lineNumber":118,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"Jonathan-Cao"},"content":"    public String getHelpMessage() {"},{"lineNumber":120,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"Duke is your companion for keeping track of tasks!\\n\""},{"lineNumber":121,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"It helps keep track of 3 types of tasks:\\n\""},{"lineNumber":122,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"1. ToDos (Task with no specified date/time)\\n\""},{"lineNumber":123,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"2. Deadlines (Task that needs to be done by specified date/time)\\n\""},{"lineNumber":124,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"3. Events (Task that needs to be attended to at specified date/time)\\n\\n\""},{"lineNumber":125,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"To add a ToDo, enter:\\n\""},{"lineNumber":126,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"todo \u003ctask description\u003e\\n\\n\""},{"lineNumber":127,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"To add a Deadline, enter:\\n\""},{"lineNumber":128,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"deadline \u003ctask description\u003e /by \u003cdate/time in format dd-MM-yyyy HHmm\u003e\\n\\n\""},{"lineNumber":129,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"To add an Event, enter:\\n\""},{"lineNumber":130,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"event \u003ctask description\u003e /at \u003cdate/time in format dd-MM-yyyy HHmm\u003e\\n\\n\""},{"lineNumber":131,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"To see a list of tasks you\u0027ve added, enter: list\\n\\n\""},{"lineNumber":132,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"To delete a task from the list, enter:\\n\""},{"lineNumber":133,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"delete \u003cthe number that corresponds to the task in your list of tasks\u003e\\n\\n\""},{"lineNumber":134,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"To mark a task as done, enter:\\n\""},{"lineNumber":135,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"done \u003cthe number that corresponds to the task in your list of tasks\u003e\\n\\n\""},{"lineNumber":136,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"To find a list of tasks containing a specific keyword, enter:\\n\""},{"lineNumber":137,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"find \u003ckeyword\u003e\";"},{"lineNumber":138,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":140,"author":{"gitId":"Jonathan-Cao"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"Jonathan-Cao"},"content":"     * Returns a String message informing the user that"},{"lineNumber":142,"author":{"gitId":"Jonathan-Cao"},"content":"     * user input was invalid along with the error message."},{"lineNumber":143,"author":{"gitId":"Jonathan-Cao"},"content":"     *"},{"lineNumber":144,"author":{"gitId":"Jonathan-Cao"},"content":"     * @param e the DukeException containing the details of the error."},{"lineNumber":145,"author":{"gitId":"Jonathan-Cao"},"content":"     * @return String message containing error."},{"lineNumber":146,"author":{"gitId":"Jonathan-Cao"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"Jonathan-Cao"},"content":"    public String getDukeExceptionMessage(DukeException e) {"},{"lineNumber":148,"author":{"gitId":"Jonathan-Cao"},"content":"        return \"Duke has encountered an error:\\n\" + e.getMessage()"},{"lineNumber":149,"author":{"gitId":"Jonathan-Cao"},"content":"                + \"\\n\";"},{"lineNumber":150,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":151}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"  \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"  \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"  \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"  \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Jonathan-Cao":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Enter\" /\u003e"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"      \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"      \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"  \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Jonathan-Cao":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"    public void initialisationTest() {"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"        Deadline deadline \u003d new Deadline(\"ip\","},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"                LocalDateTime.parse(\"28-01-2021 2359\", Parser.INPUT_DATETIME_FORMAT));"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"        assertEquals(\"[D][ ] ip (by: 28 Jan 2021 11:59PM)\", deadline.toString());"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"    public void markAsDoneTest() {"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"        Deadline deadline \u003d new Deadline(\"ip\","},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"                LocalDateTime.parse(\"28-01-2021 2359\", Parser.INPUT_DATETIME_FORMAT));"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"        deadline.markAsDone();"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"        assertEquals(\"[D][X] ip (by: 28 Jan 2021 11:59PM)\", deadline.toString());"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"    public void getStatusIconTest() {"},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"        Deadline deadline \u003d new Deadline(\"ip\","},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"                LocalDateTime.parse(\"28-01-2021 2359\", Parser.INPUT_DATETIME_FORMAT));"},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"        assertEquals(\" \", deadline.getStatusIcon());"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":31}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"public class EventTest {"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"    public void initialisationTest() {"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"        Event event \u003d new Event(\"CS2103T Tutorial\","},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"                LocalDateTime.parse(\"28-01-2021 1200\", Parser.INPUT_DATETIME_FORMAT));"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"        assertEquals(\"[E][ ] CS2103T Tutorial (at: 28 Jan 2021 12:00PM)\", event.toString());"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"    public void markAsDoneTest() {"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"        Event event \u003d new Event(\"CS2103T Tutorial\","},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"                LocalDateTime.parse(\"28-01-2021 1200\", Parser.INPUT_DATETIME_FORMAT));"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"        event.markAsDone();"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"        assertEquals(\"[E][X] CS2103T Tutorial (at: 28 Jan 2021 12:00PM)\", event.toString());"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"    public void getStatusIconTest() {"},{"lineNumber":27,"author":{"gitId":"Jonathan-Cao"},"content":"        Event event \u003d new Event(\"CS2103T Tutorial\","},{"lineNumber":28,"author":{"gitId":"Jonathan-Cao"},"content":"                LocalDateTime.parse(\"28-01-2021 1200\", Parser.INPUT_DATETIME_FORMAT));"},{"lineNumber":29,"author":{"gitId":"Jonathan-Cao"},"content":"        assertEquals(\" \", event.getStatusIcon());"},{"lineNumber":30,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":31}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"public class ToDoTest {"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"    public void initialisationTest() {"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"        ToDo toDo \u003d new ToDo(\"ip\");"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"        assertEquals(\"[T][ ] ip\", toDo.toString());"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"    public void markAsDoneTest() {"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"        ToDo toDo \u003d new ToDo(\"ip\");"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"        toDo.markAsDone();"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"        assertEquals(\"[T][X] ip\", toDo.toString());"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":""},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"    public void getStatusIconTest() {"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"        ToDo toDo \u003d new ToDo(\"ip\");"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"        assertEquals(\" \", toDo.getStatusIcon());"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"}"}],"authorContributionMap":{"Jonathan-Cao":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":2,"author":{"gitId":"Jonathan-Cao"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"Jonathan-Cao"},"content":"todo borrow book"},{"lineNumber":4,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":5,"author":{"gitId":"Jonathan-Cao"},"content":"deadline"},{"lineNumber":6,"author":{"gitId":"Jonathan-Cao"},"content":"deadline return book"},{"lineNumber":7,"author":{"gitId":"Jonathan-Cao"},"content":"deadline return book /by Sunday"},{"lineNumber":8,"author":{"gitId":"Jonathan-Cao"},"content":"deadline return book /by 31-01-2021 1800"},{"lineNumber":9,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"event"},{"lineNumber":11,"author":{"gitId":"Jonathan-Cao"},"content":"event project meeting"},{"lineNumber":12,"author":{"gitId":"Jonathan-Cao"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":13,"author":{"gitId":"Jonathan-Cao"},"content":"event project meeting /at 29-01-2021 1300"},{"lineNumber":14,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":15,"author":{"gitId":"Jonathan-Cao"},"content":"done"},{"lineNumber":16,"author":{"gitId":"Jonathan-Cao"},"content":"done 1"},{"lineNumber":17,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":18,"author":{"gitId":"Jonathan-Cao"},"content":"done 2"},{"lineNumber":19,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":20,"author":{"gitId":"Jonathan-Cao"},"content":"done 3"},{"lineNumber":21,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":22,"author":{"gitId":"Jonathan-Cao"},"content":"done 4"},{"lineNumber":23,"author":{"gitId":"Jonathan-Cao"},"content":"delete"},{"lineNumber":24,"author":{"gitId":"Jonathan-Cao"},"content":"delete 2"},{"lineNumber":25,"author":{"gitId":"Jonathan-Cao"},"content":"list"},{"lineNumber":26,"author":{"gitId":"Jonathan-Cao"},"content":"bye"}],"authorContributionMap":{"Jonathan-Cao":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"Jonathan-Cao"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Jonathan-Cao":1,"-":20}}]
