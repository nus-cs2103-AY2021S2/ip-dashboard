[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"# Ekud project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"1. After that, locate the `src/ekud.main/java/ekud.Ekud.java` file, right-click it, and choose `Run ekud.Ekud.ekud.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"\t____________________________________________________________"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"\t Yo! I\u0027m ekud.Ekud!"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"\t What you want?"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"\t____________________________________________________________"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"kouyk":6,"-":15}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"    mainClassName \u003d \"ekud.Main\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"    archiveBaseName.set(\"ekud\")"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"    archiveClassifier.set(\"v0.1\")"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"//run{"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"//    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"//}"}],"authorContributionMap":{"kouyk":21,"-":40}},{"path":"src/main/java/ekud/Ekud.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.command.Command;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.EkudException;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":" * The main chatbot containing all logic to process all commands sent."},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"public class Ekud {"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    private final Storage storage;"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    private TaskList tasks;"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    private boolean isOnline;"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     * Construct a new instance of the Ekud chatbot."},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"     * @param filePath Path to the saved tasks"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    public Ekud(String filePath) {"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"        isOnline \u003d true;"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        } catch (EkudException e) {"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"     * Process the given command and return a summary if any."},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"     * @param fullCommand The full command to be processed."},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"     * @return Summary of the completed transaction."},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"     * @throws EkudException If any exceptions are encountered during the execution."},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    public String getResponse(String fullCommand) throws EkudException {"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        if (c.isExit()) {"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"            isOnline \u003d false;"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"        return c.execute(tasks, storage);"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"     * Check if Ekud is still online for replies."},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"     * @return True if no bye command has been executed, false otherwise."},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"    public boolean isOnline() {"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"        return isOnline;"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kouyk":54,"-":1}},{"path":"src/main/java/ekud/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":" * The application launcher."},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"public class Main {"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    public static void main(String... args) {"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"        Application.launch(MainApp.class, args);"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":12}},{"path":"src/main/java/ekud/MainApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.ui.MainWindow;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import javafx.stage.Stage;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" * The GUI frontend of Ekud."},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"public class MainApp extends Application {"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    private final Ekud ekud \u003d new Ekud(\"data/tasks.txt\");"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"        MainWindow mainWindow \u003d new MainWindow();"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"        mainWindow.setEkud(ekud);"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"        primaryStage.setScene(new Scene(mainWindow));"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"        primaryStage.show();"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":21}},{"path":"src/main/java/ekud/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.EkudException;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":" * Abstract base class common to all task adding commands."},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"public abstract class AddCommand extends ModificationCommand {"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    protected String description;"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     * Construct a task-adding command."},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     * @param description The description of the new task to be created"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    public AddCommand(String description) {"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"     * Save all tasks to disk."},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     * @return Summary of the task added."},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     * @throws EkudException If task saving fails."},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    public String execute(TaskList tasks, Storage storage) throws EkudException {"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        return String.join(System.lineSeparator(),"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"                super.execute(tasks, storage),"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"                \"Okay I remember for you liao:\","},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"                \"  \" + tasks.last(),"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"                getTasksLeftString(tasks));"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":38}},{"path":"src/main/java/ekud/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.EkudException;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import ekud.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":" * Command that creates a deadline task."},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"public class AddDeadlineCommand extends AddTimedTaskCommand {"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * Construct a deadline-task-creating command."},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     * @param description The description of the deadline."},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     * @param dateTime    The date and time of the deadline."},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    public AddDeadlineCommand(String description, LocalDateTime dateTime) {"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"        super(description, dateTime);"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     * Execute this task by adding a deadline into the list, followed by common procedures of all add commands."},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    public String execute(TaskList tasks, Storage storage) throws EkudException {"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        tasks.add(new Deadline(description, dateTime));"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        return super.execute(tasks, storage);"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":35}},{"path":"src/main/java/ekud/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.EkudException;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import ekud.task.EventTask;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":" * Command that creates an event."},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"public class AddEventCommand extends AddTimedTaskCommand {"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * Construct a event-task-creating command."},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     * @param description The description of the event."},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     * @param dateTime    The date and time of the event."},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    public AddEventCommand(String description, LocalDateTime dateTime) {"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"        super(description, dateTime);"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     * Execute this task by adding a deadline into the list, followed by common procedures of all add commands."},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     * @return Summary of the task added."},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"     * @throws EkudException If task saving fails."},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    public String execute(TaskList tasks, Storage storage) throws EkudException {"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        tasks.add(new EventTask(description, dateTime));"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        return super.execute(tasks, storage);"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":37}},{"path":"src/main/java/ekud/command/AddTimedTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":" * Command that creates a task with date and time information."},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"public abstract class AddTimedTaskCommand extends AddCommand {"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    protected LocalDateTime dateTime;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"     * Construct a task with date and time information."},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     * @param description The description of the task with date and time."},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * @param dateTime    The date and time information of the task."},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    public AddTimedTaskCommand(String description, LocalDateTime dateTime) {"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":21}},{"path":"src/main/java/ekud/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.EkudException;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.task.ToDo;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" * Command that creates a todo task."},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"public class AddTodoCommand extends AddCommand {"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     * Construct and todo-task-creating command."},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * @param description The description of the todo."},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    public AddTodoCommand(String description) {"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"     * Execute this command by adding a todo into the list, followed by common procedures of all add commands."},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * @return Summary of the task added."},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     * @throws EkudException If task saving fails."},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    public String execute(TaskList tasks, Storage storage) throws EkudException {"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        tasks.add(new ToDo(description));"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        return super.execute(tasks, storage);"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":34}},{"path":"src/main/java/ekud/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.EkudException;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":" * Command that exits the application."},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"public class ByeCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"     * Save the current list of tasks to disk."},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    public String execute(final TaskList tasks, Storage storage) throws EkudException {"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"        storage.save(tasks); // probably can skip since tasks are written to disk on every modification"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"        return \"Bye bye. Anything call me ah!\";"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    public boolean isExit() {"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        return true;"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":27}},{"path":"src/main/java/ekud/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.EkudException;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":" * Abstract base class for all commands"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"     * Execute the command and perform the necessary manipulations."},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     * @return The result of the execution."},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     * @throws EkudException If errors are encountered during execution."},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws EkudException;"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"     * Return whether the current command is a signal to exit the application. Only the appropriate tasks should"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"     * override this method."},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     * @return True if the task triggers the application to exit, false otherwise."},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    public boolean isExit() {"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        return false;"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":30}},{"path":"src/main/java/ekud/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.EkudException;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.task.Task;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" * Command that deletes a task on the list."},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"public class DeleteCommand extends ModificationCommand {"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    protected int index;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * Construct a command that deletes a particular task base on the index."},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     * @param index The index of the task as given by the \"list\" command."},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"        this.index \u003d index;"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     * Delete a task by its index."},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     * @return Summary of the task deleted."},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     * @throws EkudException If task saving fails."},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    public String execute(TaskList tasks, Storage storage) throws EkudException {"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        Task deletedTask \u003d tasks.remove(index);"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        return String.join(System.lineSeparator(),"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"                super.execute(tasks, storage),"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"                \"Poof! This task is gone:\","},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"                \"\\t\" + deletedTask.toString(),"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"                getTasksLeftString(tasks));"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":40}},{"path":"src/main/java/ekud/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.EkudException;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.task.Task;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" * Command that marks a task as completed."},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"public class DoneCommand extends ModificationCommand {"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    protected int index;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * Construct a command that marks a task as completed."},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     * @param index The index of the task as given by the \"list\" command."},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    public DoneCommand(int index) {"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"        this.index \u003d index;"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     * Mark the task at index as done."},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     * @return Summary of the task marked done."},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     * @throws EkudException If task saving fails."},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    public String execute(TaskList tasks, Storage storage) throws EkudException {"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        Task doneTask \u003d tasks.markDone(index);"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        return String.join(System.lineSeparator(),"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"                super.execute(tasks, storage),"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"                \"Good job! The task below is marked done!\","},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"                \"  \" + doneTask.toString());"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":40}},{"path":"src/main/java/ekud/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.task.Task;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":" * Command that goes through the entire list and displays all the tasks with descriptions containing a keyword."},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"public class FindCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    private final String keyword;"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     * Construct a command that uses a keyword as filter and display the matching tasks."},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     * @param keyword The keyword to match against the descriptions."},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"     * Prints all tasks with descriptions that contain the specified keyword."},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     * @return String containing all the tasks that matches the keyword."},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    public String execute(TaskList tasks, Storage storage) {"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        TaskList toPrint \u003d new TaskList();"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        for (Task task : tasks) {"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"            if (task.getDescription().contains(keyword)) {"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"                toPrint.add(task);"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        String reply \u003d toPrint.isEmpty() ? \"Nothing found, try another keyword?\" : \"Here\u0027s what I found!\";"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        for (Task task : toPrint) {"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"            reply \u003d String.join(System.lineSeparator(), reply, \"  \" + task.toString());"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        return reply;"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":44}},{"path":"src/main/java/ekud/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.EkudException;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import ekud.task.Task;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskWithDateTime;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":" * Command that lists all tasks, optionally filter by date if given."},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"public class ListCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    private final boolean toFilter;"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    private LocalDate date;"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     * Construct a command that lists all tasks with a tagged date equal to supplied date."},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"     * @param date The date to be used as the filter"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    public ListCommand(LocalDate date) {"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"        toFilter \u003d true;"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        this.date \u003d date;"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     * Construct a command that lists all tasks."},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    public ListCommand() {"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        toFilter \u003d false;"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"     * Output all tasks if no date specified, tasks due on the day otherwise."},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"    public String execute(final TaskList tasks, Storage storage) throws EkudException {"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        // list command with no arguments"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"        if (!toFilter) {"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"            if (tasks.isEmpty()) {"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"                return \"I know nothing, feed me with something :)\";"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"            String reply \u003d \"Get working! You need finish these things:\";"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"                reply \u003d String.join(System.lineSeparator(),"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"                        reply,"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"                        String.format(\"  %d. %s\", i + 1, tasks.get(i).toString()));"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"            return reply;"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"        // list tasks due on a particular day"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        String reply \u003d \"\";"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"        for (Task task : tasks) {"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"            if (task instanceof TaskWithDateTime) {"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"                TaskWithDateTime t \u003d (TaskWithDateTime) task;"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"                if (t.getDateTime().toLocalDate().equals(date)) {"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"                    reply \u003d String.join(System.lineSeparator(),"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"                            reply,"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"                            t.toString());"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"                }"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"        if (reply.isBlank()) {"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"            return \"You\u0027re free for the day!\";"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"            return \"You have these deadlines/events:%n\" + reply;"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":76}},{"path":"src/main/java/ekud/command/ModificationCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.EkudException;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":" * Abstract base class for all tasks that causes changes to the list of tasks"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"public abstract class ModificationCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"     * Generate summary of how many tasks are left."},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     * @param tasks The list of tasks."},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * @return String containing task summary."},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    protected static String getTasksLeftString(TaskList tasks) {"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"        return String.format(\"Err you got %d task%s in total leh\", tasks.size(), tasks.size() \u003c\u003d 1 ? \"\" : \"s\");"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"     * Save all tasks to disk."},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * @return Empty string;"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    public String execute(TaskList tasks, Storage storage) throws EkudException {"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        storage.save(tasks);"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        return \"\";"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":33}},{"path":"src/main/java/ekud/common/exception/EkudException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.common.exception;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":" * Exceptions meant for Ekud."},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"public class EkudException extends Exception {"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"    protected String message;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"     * Construct an exception for Ekud."},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"     * @param message The exception message."},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    public EkudException(String message) {"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"        super(message);"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"        this.message \u003d message;"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"        return message;"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":23}},{"path":"src/main/java/ekud/common/exception/IncompleteDetailException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.common.exception;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":" * Exception to be thrown when user does not provide sufficient number of arguments."},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"public class IncompleteDetailException extends EkudException {"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"    public IncompleteDetailException(String missing) {"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"        super(missing + \" is missing\");"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":10}},{"path":"src/main/java/ekud/common/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.common.exception;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":" * Exception thrown when an invalid command is given."},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"public class InvalidCommandException extends EkudException {"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"    public InvalidCommandException() {"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"        super(\"Huh?! What talking you? I no get you...\");"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":10}},{"path":"src/main/java/ekud/common/exception/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.common.exception;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":" * Exception thrown when the given task index is out of range."},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"public class InvalidTaskIndexException extends EkudException {"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"    public InvalidTaskIndexException() {"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"        super(\"Invalid index for task selection!\");"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":10}},{"path":"src/main/java/ekud/common/exception/NoTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.common.exception;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":" * Exception to be thrown when the task description is not given."},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"public class NoTaskDescriptionException extends EkudException {"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"    public NoTaskDescriptionException() {"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"        super(\"Where your details?\");"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":10}},{"path":"src/main/java/ekud/common/exception/NoTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.common.exception;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":" * Exception to be thrown when there are no known tasks."},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"public class NoTasksException extends EkudException {"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"    public NoTasksException() {"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"        super(\"Hmm, you got nothing better to do.\");"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":10}},{"path":"src/main/java/ekud/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.parser;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.util.regex.Matcher;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.util.regex.Pattern;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import ekud.command.AddCommand;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import ekud.command.AddDeadlineCommand;"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import ekud.command.AddEventCommand;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import ekud.command.AddTodoCommand;"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import ekud.command.ByeCommand;"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import ekud.command.Command;"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import ekud.command.DeleteCommand;"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import ekud.command.DoneCommand;"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import ekud.command.FindCommand;"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import ekud.command.ListCommand;"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.EkudException;"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.IncompleteDetailException;"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.InvalidCommandException;"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.InvalidTaskIndexException;"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.NoTaskDescriptionException;"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":" * Command parser"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"public class Parser {"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"^(?\u003ccommand\u003e\\\\S+)(?:\\\\s+(?\u003carguments\u003e.*))?\");"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    private static final Pattern TIMED_TASK_ARGS \u003d Pattern.compile(\"(?\u003cdescription\u003e.*)\\\\s+\""},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"            + \"(?\u003cseparator\u003e/(?:by|at))\\\\s+\""},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"            + \"(?\u003cdatetime\u003e.*)\");"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"    private static final Pattern DATE_TIME_FORMAT \u003d Pattern.compile(\"^[0-3]?\\\\d/[0-1]?\\\\d/\\\\d{4}\\\\s+\\\\d{4}\");"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"     * Create an AddCommand from specified command type and arguments."},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"     * @param commandType The type of Task to create, namely ToDo, Deadline or Event."},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"     * @param arguments   All extra arguments necessary for the given task."},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"     * @return The AddCommand that can be used to construct the task."},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"     * @throws EkudException If the command type is invalid or any problems with arguments."},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    private static AddCommand createAddCommand(CommandType commandType, String arguments) throws EkudException {"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"            throw new NoTaskDescriptionException();"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        AddCommand command;"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        if (commandType \u003d\u003d CommandType.TODO) {"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"            command \u003d new AddTodoCommand(arguments);"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"            final Matcher matcher \u003d TIMED_TASK_ARGS.matcher(arguments);"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"            if (!matcher.matches()) {"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"                throw new EkudException(\"Invalid command format!\");"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"            String dateTimeString \u003d matcher.group(\"datetime\").trim();"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"            LocalDateTime dateTime;"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"            try {"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"                dateTime \u003d LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"                throw new EkudException(\"Invalid date and time format, use d/M/yyyy HHmm\");"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"            if (matcher.group(\"separator\").equals(\"/by\")) {"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"                command \u003d new AddDeadlineCommand(matcher.group(\"description\"), dateTime);"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"            } else {"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"                command \u003d new AddEventCommand(matcher.group(\"description\"), dateTime);"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"        return command;"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"     * Parse a given line of command into an executable Command."},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"     * @param fullCommand The String containing the entire command."},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"     * @return The Command that can be executed to satisfy the fullCommand given."},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"     * @throws EkudException If any parts of the command are invalid."},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"    public static Command parse(String fullCommand) throws EkudException {"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"        final Matcher matcher \u003d COMMAND_FORMAT.matcher(fullCommand.trim());"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"        if (!matcher.matches()) {"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"            throw new EkudException(\"Invalid command format!\");"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"        final String commandWord \u003d matcher.group(\"command\");"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"        final String arguments \u003d matcher.group(\"arguments\") \u003d\u003d null ? \"\" : matcher.group(\"arguments\").trim();"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"        CommandType func;"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"            func \u003d CommandType.valueOf(commandWord.toUpperCase());"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"            throw new InvalidCommandException();"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"        switch (func) {"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"        case LIST:"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"            if (arguments.isBlank()) {"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"                return new ListCommand();"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"            LocalDate date;"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"            try {"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":"                date \u003d LocalDate.parse(arguments, DateTimeFormatter.ofPattern(\"d/M/yyyy\"));"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":111,"author":{"gitId":"kouyk"},"content":"                throw new EkudException(\"Invalid date format, use d/M/yyyy\");"},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"            return new ListCommand(date);"},{"lineNumber":114,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"        case DONE:"},{"lineNumber":116,"author":{"gitId":"kouyk"},"content":"            try {"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"                int index \u003d Integer.parseInt(arguments) - 1;"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"                return new DoneCommand(index);"},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":120,"author":{"gitId":"kouyk"},"content":"                throw new InvalidTaskIndexException();"},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"        case DELETE:"},{"lineNumber":124,"author":{"gitId":"kouyk"},"content":"            try {"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"                int index \u003d Integer.parseInt(arguments) - 1;"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"                return new DeleteCommand(index);"},{"lineNumber":127,"author":{"gitId":"kouyk"},"content":"            } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"                throw new InvalidTaskIndexException();"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":131,"author":{"gitId":"kouyk"},"content":"        case BYE:"},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"            return new ByeCommand();"},{"lineNumber":133,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":134,"author":{"gitId":"kouyk"},"content":"        case TODO:"},{"lineNumber":135,"author":{"gitId":"kouyk"},"content":"        case DEADLINE:"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":"        case EVENT:"},{"lineNumber":137,"author":{"gitId":"kouyk"},"content":"            if (arguments.isBlank()) {"},{"lineNumber":138,"author":{"gitId":"kouyk"},"content":"                throw new NoTaskDescriptionException();"},{"lineNumber":139,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":140,"author":{"gitId":"kouyk"},"content":"            return createAddCommand(func, arguments);"},{"lineNumber":141,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":142,"author":{"gitId":"kouyk"},"content":"        case FIND:"},{"lineNumber":143,"author":{"gitId":"kouyk"},"content":"            if (arguments.isBlank()) {"},{"lineNumber":144,"author":{"gitId":"kouyk"},"content":"                throw new IncompleteDetailException(\"keyword\");"},{"lineNumber":145,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":146,"author":{"gitId":"kouyk"},"content":"            return new FindCommand(arguments);"},{"lineNumber":147,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":148,"author":{"gitId":"kouyk"},"content":"        default:"},{"lineNumber":149,"author":{"gitId":"kouyk"},"content":"            throw new InvalidCommandException();"},{"lineNumber":150,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":153,"author":{"gitId":"kouyk"},"content":"    private enum CommandType {"},{"lineNumber":154,"author":{"gitId":"kouyk"},"content":"        LIST,"},{"lineNumber":155,"author":{"gitId":"kouyk"},"content":"        DONE,"},{"lineNumber":156,"author":{"gitId":"kouyk"},"content":"        DELETE,"},{"lineNumber":157,"author":{"gitId":"kouyk"},"content":"        BYE,"},{"lineNumber":158,"author":{"gitId":"kouyk"},"content":"        TODO,"},{"lineNumber":159,"author":{"gitId":"kouyk"},"content":"        DEADLINE,"},{"lineNumber":160,"author":{"gitId":"kouyk"},"content":"        EVENT,"},{"lineNumber":161,"author":{"gitId":"kouyk"},"content":"        FIND"},{"lineNumber":162,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":163}},{"path":"src/main/java/ekud/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.storage;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import java.util.Vector;"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import java.util.regex.Matcher;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import java.util.regex.Pattern;"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.EkudException;"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import ekud.task.Deadline;"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import ekud.task.EventTask;"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import ekud.task.Task;"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import ekud.task.ToDo;"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":" * The file I/O class that handles all file operations"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"public class Storage {"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    private static final String deliminator \u003d \"\\\\|\";"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    private static final Pattern PARENT_DIRECTORY \u003d Pattern.compile(\"(?\u003cparentDirectory\u003e^.*/).*$\");"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    private final String filePath;"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    private final File file;"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    private boolean canSave;"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"     * Construct a new Storage instance that reads and writes to a given file."},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"     * @param path The path to the file."},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"    public Storage(String path) {"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        filePath \u003d path;"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        Matcher matcher \u003d PARENT_DIRECTORY.matcher(filePath);"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        if (matcher.matches()) {"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"            String parentDirectory \u003d (matcher.group(\"parentDirectory\") \u003d\u003d null"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"                    ? \"./\""},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"                    : matcher.group(\"parentDirectory\"));"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"            File folder \u003d new File(parentDirectory);"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"            if (!folder.exists()) {"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"                canSave \u003d folder.mkdirs();"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"            } else {"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"                canSave \u003d true;"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        file \u003d new File(filePath);"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"     * Read the file and reconstruct all tasks."},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"     * @return A Vector containing all reconstructed tasks."},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"     * @throws EkudException If any errors are encountered during I/O operations, or if the task is invalid."},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"    public Vector\u003cTask\u003e load() throws EkudException {"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        Vector\u003cTask\u003e ret \u003d new Vector\u003c\u003e();"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"        Scanner s;"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"            s \u003d new Scanner(file);"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"            return ret;"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"        while (s.hasNextLine()) {"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"            String line \u003d s.nextLine();"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"            String[] data;"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"            data \u003d line.split(deliminator, 0);"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"            switch (data[0]) {"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"            case \"T\":"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"                ret.add(new ToDo(data[2]));"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"                break;"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"            case \"D\":"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"                ret.add(new Deadline(data[2], LocalDateTime.parse(data[3])));"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"                break;"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"            case \"E\":"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"                ret.add(new EventTask(data[2], LocalDateTime.parse(data[3])));"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"                break;"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"            default:"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"                throw new EkudException(\"Unknown task type\");"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"            // mark as read accordingly"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"            if (Boolean.parseBoolean(data[1])) {"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"                ret.lastElement().markAsDone();"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"        return ret;"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"     * Save the given tasks to the file using specified FileWriter."},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"     * @param fw    The FileWriter to write to."},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"     * @param tasks The list of tasks to save."},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"     * @throws IOException If an I/O error occurs."},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"    private void writeToFile(FileWriter fw, List\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"        for (Task task : tasks) {"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"            LinkedList\u003cString\u003e list \u003d task.export();"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":"            fw.write(String.join(\"|\", list) + System.lineSeparator());"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"kouyk"},"content":"     * Save tasks to disk."},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"     * @param tasks The list of tasks."},{"lineNumber":114,"author":{"gitId":"kouyk"},"content":"     * @throws EkudException If an I/O error occurs."},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"kouyk"},"content":"    public void save(final TaskList tasks) throws EkudException {"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"        if (!canSave) {"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"            return;"},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"        List\u003cTask\u003e list \u003d tasks.export();"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath, false)) {"},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"            writeToFile(fw, list);"},{"lineNumber":124,"author":{"gitId":"kouyk"},"content":"        } catch (IOException e) {"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"            throw new EkudException(\"Storage: IOException encountered\");"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":128}},{"path":"src/main/java/ekud/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":" * A deadline task that requires a specified date and time set as its deadline"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"public class Deadline extends TaskWithDateTime {"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"     * Construct a Deadline task."},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     * @param description The description of the Deadline."},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     * @param by          The completion date and time information."},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"        super(description, by);"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateTime.format(DATE_TIME_FORMAT) + \")\";"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * @return String LinkedList containing {\"D\", isDone, description, dateTime}."},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    public LinkedList\u003cString\u003e export() {"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        LinkedList\u003cString\u003e list \u003d super.export();"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        list.addFirst(\"D\");"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        return list;"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":34}},{"path":"src/main/java/ekud/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":" * Event task that occurs at a specified date and time"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"public class EventTask extends TaskWithDateTime {"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"     * Construct an Event task."},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     * @param description The description of the Event."},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     * @param at          The date and time that the Event occurs."},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    public EventTask(String description, LocalDateTime at) {"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"        super(description, at);"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + dateTime.format(DATE_TIME_FORMAT) + \")\";"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * @return String LinkedList containing {\"E\", isDone, description, dateTime}"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    public LinkedList\u003cString\u003e export() {"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        LinkedList\u003cString\u003e list \u003d super.export();"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        list.addFirst(\"E\");"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        return list;"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":34}},{"path":"src/main/java/ekud/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":" * The abstract base class for all kinds of tasks"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"public abstract class Task {"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"    protected boolean isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     * Construct a new Task."},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * @param description The task description"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    public Task(String description) {"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"     * Check if the Task is marked as completed."},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     * @return true if markAsDone() has been invoked previously, false otherwise."},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    public boolean isDone() {"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        return isDone;"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"     * Mark the Task as completed."},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    public void markAsDone() {"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        isDone \u003d true;"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     * Retrieve the appropriate status icon based on the done status of the Task."},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"     * @return A tick symbol if Task is done, a cross symbol otherwise."},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"    public String getStatusIcon() {"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or cross symbols"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"    public String getDescription() {"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        return description;"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"     * Consolidate all information necessary to reconstruct the exact same Task."},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"     * @return String LinkedList containing {isDone, description}."},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"    public LinkedList\u003cString\u003e export() {"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"        LinkedList\u003cString\u003e list \u003d new LinkedList\u003c\u003e();"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        list.add(String.valueOf(isDone));"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"        list.add(description);"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"        return list;"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":66}},{"path":"src/main/java/ekud/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.util.Collection;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.util.Iterator;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.util.Vector;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.InvalidTaskIndexException;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":" * Iterable for containing any task type"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"public class TaskList implements Iterable\u003cTask\u003e {"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    private final Vector\u003cTask\u003e taskArray;"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    private int doneCount;"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     * Construct a new TaskList from existing tasks."},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"     * @param taskArray The array containing existing tasks."},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    public TaskList(Collection\u003cTask\u003e taskArray) {"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"        this.taskArray \u003d new Vector\u003c\u003e(taskArray);"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        for (Task task : taskArray) {"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"            if (task.isDone) {"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"                ++doneCount;"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"     * Construct a new TaskList with no existing tasks."},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"    public TaskList() {"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        taskArray \u003d new Vector\u003c\u003e();"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        doneCount \u003d 0;"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"     * Add a new task to the end of the existing list."},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"     * @param newTask The task to be added."},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    public void add(Task newTask) {"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        taskArray.add(newTask);"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"     * Remove a task by index."},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"     * @param index The index of the task to be removed."},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"     * @return Task removed from list."},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"     * @throws InvalidTaskIndexException If the index is out of range (index \u003c 0 || index \u003e\u003d size())."},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"    public Task remove(int index) throws InvalidTaskIndexException {"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"            Task deletedTask \u003d taskArray.remove(index);"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"            if (deletedTask.isDone) {"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"                --doneCount;"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"            return deletedTask;"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"            throw new InvalidTaskIndexException();"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"     * Return the number of stored tasks."},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"     * @return The number of stored tasks."},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"    public int size() {"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"        return taskArray.size();"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"     * Returns the task at the specified position in this TaskList."},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"     * @param index Index of the element to return."},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"     * @return Task at the specified index."},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"     * @throws InvalidTaskIndexException if the index is out of range (index \u003c 0 || index \u003e\u003d size())."},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"    public Task get(int index) throws InvalidTaskIndexException {"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"        try {"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"            return taskArray.get(index);"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"            throw new InvalidTaskIndexException();"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"     * Mark the task at index as done."},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"     * @param index Index of the task to be marked as done."},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"     * @return The task marked as done."},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"     * @throws InvalidTaskIndexException if the index is out of range (index \u003c 0 || index \u003e\u003d size())."},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"    public Task markDone(int index) throws InvalidTaskIndexException {"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"            Task doneTask \u003d taskArray.get(index);"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"            doneTask.markAsDone();"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"            ++doneCount;"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"            return doneTask;"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":"            throw new InvalidTaskIndexException();"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"kouyk"},"content":"     * Get the number of incomplete tasks."},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"     * @return Number of incomplete tasks."},{"lineNumber":114,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"    public int getIncompleteRemaining() {"},{"lineNumber":116,"author":{"gitId":"kouyk"},"content":"        return taskArray.size() - doneCount;"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"kouyk"},"content":"     * Returns the last task of the TaskList."},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":"     * @return The last task of the TaskList, i.e., the component at index size() - 1."},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"kouyk"},"content":"    public Task last() {"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"        return taskArray.lastElement();"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"     * Tests if this TaskList has no tasks."},{"lineNumber":130,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":131,"author":{"gitId":"kouyk"},"content":"     * @return True if and only if this TaskList has no tasks, that is, its size is zero; false otherwise."},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"kouyk"},"content":"    public boolean isEmpty() {"},{"lineNumber":134,"author":{"gitId":"kouyk"},"content":"        return taskArray.isEmpty();"},{"lineNumber":135,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":137,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"kouyk"},"content":"     * Returns an iterator over the tasks in this list in proper sequence. The returned iterator is fail-fast."},{"lineNumber":139,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":140,"author":{"gitId":"kouyk"},"content":"     * @return An iterator over the elements in this list in proper sequence."},{"lineNumber":141,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"kouyk"},"content":"    public Iterator\u003cTask\u003e iterator() {"},{"lineNumber":143,"author":{"gitId":"kouyk"},"content":"        return taskArray.iterator();"},{"lineNumber":144,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":146,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"kouyk"},"content":"     * Export the internal list of tasks as an unmodifiable list."},{"lineNumber":148,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":149,"author":{"gitId":"kouyk"},"content":"     * @return An unmodifiable view of the task list."},{"lineNumber":150,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"kouyk"},"content":"    public List\u003cTask\u003e export() {"},{"lineNumber":152,"author":{"gitId":"kouyk"},"content":"        return Collections.unmodifiableList(taskArray);"},{"lineNumber":153,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":154}},{"path":"src/main/java/ekud/task/TaskWithDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":" * Base class for any tasks that has relevant date and time information attached"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"public abstract class TaskWithDateTime extends Task {"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    protected static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h.mma\");"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    protected LocalDateTime dateTime;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * Construct a new Task that has date and time information attached."},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     * @param description The TaskWithDateTime description."},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     * @param dateTime    The datetime information."},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    public TaskWithDateTime(String description, LocalDateTime dateTime) {"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * Get the datetime information for the Task."},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     * @return The stored datetime."},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    public LocalDateTime getDateTime() {"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        return dateTime;"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"     * @return String LinkedList containing {isDone, description, dateTime}"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"    public LinkedList\u003cString\u003e export() {"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        LinkedList\u003cString\u003e list \u003d super.export();"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        list.addLast(dateTime.toString());"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        return list;"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":43}},{"path":"src/main/java/ekud/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":" * A simple ToDo task with no added features"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"public class ToDo extends Task {"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"     * Construct a new ToDo Task with a given description."},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"     * @param description The description of the new ToDo."},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    public ToDo(String description) {"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     * @return String LinkedList containing {\"T\", isDone, description}."},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    public LinkedList\u003cString\u003e export() {"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        LinkedList\u003cString\u003e list \u003d super.export();"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        list.addFirst(\"T\");"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        return list;"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":32}},{"path":"src/main/java/ekud/ui/DialogueBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.ui;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":" * A DialogueBox is a single row on the GUI containing the avatar and message."},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"public class DialogueBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    private Label messageBubble;"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    private ImageView profilePicture;"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     * @param message The message of the text."},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     * @param image   The profile image of the sender."},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    public DialogueBox(String message, Image image) {"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/views/DialogueBubble.fxml\"));"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"            fxmlLoader.load();"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        messageBubble.setText(message);"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        profilePicture.setImage(image);"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"     * Generate a DialogueBox for messages sent by the user."},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"     * @param message   The message sent by the user."},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"     * @param userImage The profile image of the user."},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"     * @return The generated DialogueBox."},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"    public static DialogueBox genUserDialogue(String message, Image userImage) {"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        return new DialogueBox(message, userImage);"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"     * Generate a DialogueBox for replies by Ekud, has opposite alignment."},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"     * @param message   The reply from Ekud."},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"     * @param userImage The profile image of Ekud."},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"     * @return The generated DialogueBox."},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"    public static DialogueBox genEkudDialogue(String message, Image userImage) {"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"        return new DialogueBox(message, userImage).flip();"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"     * Flip the content of the DialogueBox to become left-to-right."},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"     * @return The current DialogueBox."},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"    private DialogueBox flip() {"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        ObservableList\u003cNode\u003e list \u003d FXCollections.observableArrayList(getChildren());"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"        Collections.reverse(list);"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"        getChildren().setAll(list);"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"        return this;"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":78}},{"path":"src/main/java/ekud/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.ui;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.concurrent.TimeUnit;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.Ekud;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.EkudException;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import javafx.application.Platform;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import javafx.fxml.FXML;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import javafx.scene.control.Button;"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":" * The main content of the GUI."},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    private final Image userImage \u003d new Image(getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    private final Image dukeImage \u003d new Image(getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    private VBox dialogueContainer;"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    private TextField userInput;"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    private Button sendButton;"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"    private Ekud ekud;"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"     * Construct the main chat window."},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    public MainWindow() {"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/views/MainWindow.fxml\"));"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"            fxmlLoader.setControllerFactory(param -\u003e this);"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"            fxmlLoader.load();"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        } catch (IOException e) {"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"            e.printStackTrace();"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"    @FXML"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"    public void initialize() {"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"        scrollPane.vvalueProperty().bind(dialogueContainer.heightProperty());"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"     * Set the instance of Ekud that is used."},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"     * @param e The Ekud instance."},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"    public void setEkud(Ekud e) {"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        ekud \u003d e;"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"    @FXML"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"    private void handleUserInput() {"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"        String fullCommand \u003d userInput.getText().trim();"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"        userInput.clear();"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"        /* ignore any blank input */"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"        if (fullCommand.isEmpty()) {"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"            return;"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"        dialogueContainer.getChildren().add(DialogueBox.genUserDialogue(fullCommand, userImage));"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"        try {"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"            String reply \u003d ekud.getResponse(fullCommand).trim();"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"            dialogueContainer.getChildren().add(DialogueBox.genEkudDialogue(reply, dukeImage));"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"        } catch (EkudException e) {"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"            dialogueContainer.getChildren().add(DialogueBox.genEkudDialogue(e.toString(), dukeImage));"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"        if (!ekud.isOnline()) {"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"            // block input"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"            userInput.setDisable(true);"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"            sendButton.setDisable(true);"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"            // quit the application"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"            Thread exitThread \u003d new Thread(this::countDownAndQuit);"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"            exitThread.start();"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"    private void countDownAndQuit() {"},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"        try {"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"            TimeUnit.SECONDS.sleep(3);"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"        } catch (InterruptedException e) {"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"            e.printStackTrace();"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"        Platform.exit();"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":103}},{"path":"src/main/resources/views/DialogueBubble.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" prefWidth\u003d\"400.0\" spacing\u003d\"5.0\" type\u003d\"HBox\""},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"         xmlns\u003d\"http://javafx.com/javafx/15.0.1\"\u003e"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"    \u003cpadding\u003e"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\"/\u003e"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    \u003c/padding\u003e"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    \u003cLabel fx:id\u003d\"messageBubble\" maxWidth\u003d\"270.0\" style\u003d\"-fx-background-color: #656565; -fx-background-radius: 9;\""},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"           text\u003d\"message body\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"        \u003cHBox.margin\u003e"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"            \u003cInsets/\u003e"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"        \u003c/HBox.margin\u003e"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"        \u003cpadding\u003e"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"            \u003cInsets bottom\u003d\"3.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"3.0\"/\u003e"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"        \u003c/padding\u003e"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    \u003c/Label\u003e"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    \u003cImageView fx:id\u003d\"profilePicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"kouyk":23}},{"path":"src/main/resources/views/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #232323;\""},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"         type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\"\u003e"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"550.0\" prefWidth\u003d\"400.0\""},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"                style\u003d\"-fx-border-width: 0; -fx-background-color: transparent;\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"        \u003cVBox fx:id\u003d\"dialogueContainer\" prefHeight\u003d\"548.0\" prefWidth\u003d\"382.0\""},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"              style\u003d\"-fx-border-width: 0; -fx-background-color: #232323;\"/\u003e"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"573.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\""},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"               prefWidth\u003d\"324.0\" promptText\u003d\"Type a message\""},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"               style\u003d\"-fx-background-color: #555555; -fx-background-radius: 20; -fx-border-color: #afafaf; -fx-border-width: 2; -fx-border-radius: 20; -fx-text-inner-color: white;\""},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"               AnchorPane.bottomAnchor\u003d\"5.0\" AnchorPane.leftAnchor\u003d\"5.0\"\u003e"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"        \u003cfont\u003e"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"            \u003cFont size\u003d\"14.0\"/\u003e"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        \u003c/font\u003e"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    \u003c/TextField\u003e"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" layoutX\u003d\"324.0\" layoutY\u003d\"553.0\" mnemonicParsing\u003d\"false\""},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"            onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"62.0\""},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"            style\u003d\"-fx-background-color: #555555; -fx-background-radius: 20; -fx-text-fill: #ffffff; -fx-border-radius: 5;\""},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"            text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"5.0\" AnchorPane.rightAnchor\u003d\"5.0\"\u003e"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        \u003cfont\u003e"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"            \u003cFont size\u003d\"14.0\"/\u003e"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        \u003c/font\u003e"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    \u003c/Button\u003e"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"kouyk":32}},{"path":"src/test/java/ekud/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"public class DeadlineTest {"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    public static final String DEADLINE_DESCRIPTION \u003d \"deadline description\";"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h.mma\");"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    static final LocalDateTime DATE_TIME \u003d LocalDateTime.of(2020, 2, 2, 2, 2);"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    @Nested"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    @DisplayName(\"freshly created\")"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    class FreshTask {"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        private Deadline deadline;"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"        @BeforeEach"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        void createNewTask() {"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"            deadline \u003d new Deadline(DEADLINE_DESCRIPTION, DATE_TIME);"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"convert to string\")"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        void toStringTest() {"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"            assertEquals("},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"                    \"[D][ ] \" + DEADLINE_DESCRIPTION + \" (by: \" + DATE_TIME.format(FORMATTER) + \")\","},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"                    deadline.toString());"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"export\")"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        void exportTest() {"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"            LinkedList\u003cString\u003e list \u003d deadline.export();"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"            assertEquals(\"D\", list.get(0));"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"        @Nested"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"after marking as done\")"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        class AfterMarkDone {"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"            @BeforeEach"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"            void markDone() {"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"                deadline.markAsDone();"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"convert to string\")"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"            void toStringTest() {"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"                assertEquals("},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"                        \"[D][X] \" + DEADLINE_DESCRIPTION + \" (by: \" + DATE_TIME.format(FORMATTER) + \")\","},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"                        deadline.toString());"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"export\")"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"            void exportTest() {"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"                LinkedList\u003cString\u003e list \u003d deadline.export();"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"                assertEquals(\"D\", list.getFirst());"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":68}},{"path":"src/test/java/ekud/task/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"public class EventTaskTest {"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    public static final String EVENT_DESCRIPTION \u003d \"event description\";"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h.mma\");"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    static final LocalDateTime DATE_TIME \u003d LocalDateTime.of(2020, 2, 2, 2, 2);"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    @Nested"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    @DisplayName(\"freshly created\")"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    class FreshTask {"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        private EventTask eventTask;"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"        @BeforeEach"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        void createNewTask() {"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"            eventTask \u003d new EventTask(EVENT_DESCRIPTION, DATE_TIME);"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"convert to string\")"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        void toStringTest() {"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"            assertEquals("},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"                    \"[E][ ] \" + EVENT_DESCRIPTION + \" (at: \" + DATE_TIME.format(FORMATTER) + \")\","},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"                    eventTask.toString());"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"export\")"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        void exportTest() {"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"            LinkedList\u003cString\u003e list \u003d eventTask.export();"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"            assertEquals(\"E\", list.get(0));"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"        @Nested"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"after marking as done\")"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        class AfterMarkDone {"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"            @BeforeEach"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"            void markDone() {"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"                eventTask.markAsDone();"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"convert to string\")"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"            void toStringTest() {"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"                assertEquals("},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"                        \"[E][X] \" + EVENT_DESCRIPTION + \" (at: \" + DATE_TIME.format(FORMATTER) + \")\","},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"                        eventTask.toString());"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"export\")"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"            void exportTest() {"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"                LinkedList\u003cString\u003e list \u003d eventTask.export();"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"                assertEquals(\"E\", list.getFirst());"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":68}},{"path":"src/test/java/ekud/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"@DisplayName(\"Abstract base class for all tasks\")"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"public class TaskTest {"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    private static final String TASK_DESCRIPTION \u003d \"task description\";"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    private static class TaskImpl extends Task {"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"        public TaskImpl(String description) {"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"            super(description);"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    @Nested"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    @DisplayName(\"freshly created\")"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    class FreshTask {"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        private Task task;"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        @BeforeEach"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        void createNewTask() {"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"            task \u003d new TaskImpl(TASK_DESCRIPTION);"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"convert to string\")"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        void toStringTest() {"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"            assertEquals(\"[ ] \" + TASK_DESCRIPTION, task.toString());"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"check if not done\")"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        void checkIfDone() {"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"            assertFalse(task.isDone());"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"export\")"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        void exportTest() {"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"            LinkedList\u003cString\u003e list \u003d task.export();"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"            assertEquals(\"false\", list.get(0));"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"            assertEquals(TASK_DESCRIPTION, list.get(1));"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"        @Nested"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"after marking as done\")"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"        class AfterMarkDone {"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"            @BeforeEach"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"            void markDone() {"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"                task.markAsDone();"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"convert to string\")"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"            void toStringTest() {"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"                assertEquals(\"[X] \" + TASK_DESCRIPTION, task.toString());"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"check if not done\")"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"            void checkIfDone() {"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"                assertTrue(task.isDone());"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"export\")"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"            void exportTest() {"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"                LinkedList\u003cString\u003e list \u003d task.export();"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"                assertEquals(\"true\", list.get(0));"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"                assertEquals(TASK_DESCRIPTION, list.get(1));"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":84}},{"path":"src/test/java/ekud/task/TaskWithDateTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"public class TaskWithDateTimeTest {"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    static final String DATE_TIME_TASK_DESCRIPTION \u003d \"task with datetime description\";"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    static final LocalDateTime DATE_TIME \u003d LocalDateTime.of(2020, 2, 2, 2, 2);"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    private static class TaskWithDateTimeImpl extends TaskWithDateTime {"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"        public TaskWithDateTimeImpl(String description, LocalDateTime dateTime) {"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"            super(description, dateTime);"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    @Nested"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    @DisplayName(\"freshly created\")"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    class FreshTask {"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"        private TaskWithDateTime taskWithDateTime;"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        @BeforeEach"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        void createNewTask() {"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"            taskWithDateTime \u003d new TaskWithDateTimeImpl(DATE_TIME_TASK_DESCRIPTION, DATE_TIME);"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"return correct datetime\")"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        void checkIfDone() {"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"            assertEquals(DATE_TIME, taskWithDateTime.getDateTime());"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"export\")"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        void exportTest() {"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"            LinkedList\u003cString\u003e list \u003d taskWithDateTime.export();"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"            assertEquals(DATE_TIME.toString(), list.getLast());"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":46}},{"path":"src/test/java/ekud/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"public class ToDoTest {"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    public static final String TODO_DESCRIPTION \u003d \"todo description\";"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    @Nested"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    @DisplayName(\"freshly created\")"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    class FreshTask {"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"        private ToDo toDo;"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"        @BeforeEach"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        void createNewTask() {"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"            toDo \u003d new ToDo(TODO_DESCRIPTION);"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"convert to string\")"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        void toStringTest() {"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"            assertEquals(\"[T][ ] \" + TODO_DESCRIPTION, toDo.toString());"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"export\")"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        void exportTest() {"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"            LinkedList\u003cString\u003e list \u003d toDo.export();"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"            assertEquals(\"T\", list.get(0));"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        @Nested"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"after marking as done\")"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        class AfterMarkDone {"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"            @BeforeEach"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"            void markDone() {"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"                toDo.markAsDone();"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"convert to string\")"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"            void toStringTest() {"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"                assertEquals(\"[T][X] \" + TODO_DESCRIPTION, toDo.toString());"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"export\")"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"            void exportTest() {"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"                LinkedList\u003cString\u003e list \u003d toDo.export();"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"                assertEquals(\"T\", list.get(0));"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":61}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"list"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"deadline finish week 2 project /by Saturday"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"list"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"list"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"done 1"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"list done 4"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"event random event /at some time in the future"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"todo blah"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"list"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"random"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"delete 3"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"done 1"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"list"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"bye"}],"authorContributionMap":{"kouyk":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"javac  -cp ..\\src\\ekud.main\\java -Xlint:none -d ..\\bin ..\\src\\ekud.main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"java -classpath ..\\bin ekud.Ekud \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"kouyk":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"#dos2unix EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"kouyk":1,"-":37}}]
