[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"# ekud.Ekud project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"1. After that, locate the `src/ekud.main/java/ekud.Ekud.java` file, right-click it, and choose `Run ekud.Ekud.ekud.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"kouyk":2,"-":21}},{"path":"src/ekud/Ekud.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.command.Command;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import ekud.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"public class Ekud {"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    private final Storage storage;"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    private final Ui ui;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    private TaskList tasks;"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     * Construct a new instance of the Ekud chatbot."},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     * @param filePath Path to the saved tasks"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    public Ekud(String filePath) {"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"        ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        } catch (DukeException e) {"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"            ui.showLoadingError();"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    public static void main(String[] args) {"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        new Ekud(\"data/tasks.txt\").run();"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"     * Main execution loop."},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    public void run() {"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        ui.showWelcome();"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        boolean isExit \u003d false;"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        while (!isExit) {"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"            try {"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"                ui.showLine();"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"                c.execute(tasks, ui, storage);"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"            } catch (DukeException e) {"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"                ui.showError(e.toString());"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"            } finally {"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"                ui.showLine();"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kouyk":56,"-":1}},{"path":"src/ekud/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" * Abstract base class common to all task adding commands."},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"public abstract class AddCommand extends ModificationCommand {"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    protected String description;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * Construct a task-adding command."},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     * @param description The description of the new task to be created"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    public AddCommand(String description) {"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     * Save all tasks to disk."},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     * @param ui      The user interface."},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        super.execute(tasks, ui, storage);"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        ui.printLines(\"Okay I remember for you liao:\","},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"                \"\\t\" + tasks.last(),"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"                getTasksLeftString(tasks));"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":37}},{"path":"src/ekud/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import ekud.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import ekud.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":" * Command that creates a deadline task."},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"public class AddDeadlineCommand extends AddTimedTaskCommand {"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     * Construct a deadline-task-creating command."},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     * @param description The description of the deadline."},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     * @param dateTime    The date and time of the deadline."},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    public AddDeadlineCommand(String description, LocalDateTime dateTime) {"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        super(description, dateTime);"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * Execute this task by adding a deadline into the list, followed by common procedures of all add commands."},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     * @param ui      The user interface."},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        tasks.add(new Deadline(description, dateTime));"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        super.execute(tasks, ui, storage);"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":37}},{"path":"src/ekud/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import ekud.task.EventTask;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import ekud.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":" * Command that creates an event."},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"public class AddEventCommand extends AddTimedTaskCommand {"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     * Construct a event-task-creating command."},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     * @param description The description of the event."},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     * @param dateTime    The date and time of the event."},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    public AddEventCommand(String description, LocalDateTime dateTime) {"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        super(description, dateTime);"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * Execute this task by adding a deadline into the list, followed by common procedures of all add commands."},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     * @param ui      The user interface."},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        tasks.add(new EventTask(description, dateTime));"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        super.execute(tasks, ui, storage);"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":37}},{"path":"src/ekud/command/AddTimedTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":" * Command that creates a task with date and time information."},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"public abstract class AddTimedTaskCommand extends AddCommand {"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    LocalDateTime dateTime;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"     * Construct a task with date and time information."},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     * @param description The description of the task with date and time."},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * @param dateTime    The date and time information of the task."},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    public AddTimedTaskCommand(String description, LocalDateTime dateTime) {"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":21}},{"path":"src/ekud/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.task.ToDo;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import ekud.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":" * Command that creates a todo task."},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"public class AddTodoCommand extends AddCommand {"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     * Construct and todo-task-creating command."},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     * @param description The description of the todo."},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    public AddTodoCommand(String description) {"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"     * Execute this command by adding a todo into the list, followed by common procedures of all add commands."},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * @param ui      The user interface."},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        tasks.add(new ToDo(description));"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        super.execute(tasks, ui, storage);"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":34}},{"path":"src/ekud/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" * Command that exits the application."},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"public class ByeCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     * Save the current list of tasks to disk."},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     * @param ui      The user interface."},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    public void execute(final TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"        storage.save(tasks);  // probably can skip since tasks are written to disk on every modification"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        ui.printLines(\"Bye bye. Anything call me ah!\");"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    public boolean isExit() {"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        return true;"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":29}},{"path":"src/ekud/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" * Abstract base class for all commands"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     * Execute the command and perform the necessary manipulations."},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     * @param ui      The user interface."},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"     * Return whether the current command is a signal to exit the application. Only the appropriate tasks should"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"     * override this method."},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     * @return True if the task triggers the application to exit, false otherwise."},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    public boolean isExit() {"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        return false;"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":30}},{"path":"src/ekud/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.task.Task;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import ekud.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":" * Command that deletes a task on the list."},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"public class DeleteCommand extends ModificationCommand {"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    protected int index;"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     * Construct a command that deletes a particular task base on the index."},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     * @param index The index of the task as given by the \"list\" command."},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"        this.index \u003d index;"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     * Delete a task by its index."},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     * @param ui      The user interface."},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        Task deletedTask \u003d tasks.remove(index);"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        super.execute(tasks, ui, storage);"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        ui.printLines("},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"                \"Poof! This task is gone:\","},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"                \"\\t\" + deletedTask.toString(),"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"                getTasksLeftString(tasks));"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":41}},{"path":"src/ekud/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.task.Task;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import ekud.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":" * Command that marks a task as completed."},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"public class DoneCommand extends ModificationCommand {"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    protected int index;"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     * Construct a command that marks a task as completed."},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     * @param index The index of the task as given by the \"list\" command."},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    public DoneCommand(int index) {"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"        this.index \u003d index;"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     * Mark the task at index as done."},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     * @param ui      The user interface."},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        Task doneTask \u003d tasks.markDone(index);"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        super.execute(tasks, ui, storage);"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        ui.printLines("},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"                \"Good job! The task below is marked done!\","},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"                \"\\t\" + doneTask.toString());"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":40}},{"path":"src/ekud/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.util.Vector;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import ekud.task.Task;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import ekud.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":" * Command that goes through the entire list and displays all the tasks with descriptions containing a keyword."},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"public class FindCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    private final String keyword;"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     * Construct a command that uses a keyword as filter and display the matching tasks."},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"     * @param keyword The keyword to match against the descriptions."},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     * Prints all tasks with descriptions that contain the specified keyword."},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     * @param tasks the list of tasks."},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"     * @param ui the user interface."},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"     * @param storage the file writer."},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        TaskList toPrint \u003d new TaskList();"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        for (Task task : tasks) {"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"            if (task.getDescription().contains(keyword)) {"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"                toPrint.add(task);"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        ui.printLines(toPrint.isEmpty() ? \"Nothing found, try another keyword?\" : \"Here\u0027s what I found!\");"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        for (Task task : toPrint) {"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"            ui.printLines(\"\\t \" + task.toString());"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":47}},{"path":"src/ekud/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.Vector;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import ekud.task.Task;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskWithDateTime;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import ekud.ui.Ui;"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":" * Command that lists all tasks, optionally filter by date if given."},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"public class ListCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    private final boolean filter;"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    private LocalDate date;"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"     * Construct a command that lists all tasks with a tagged date equal to supplied date."},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"     * @param date The date to be used as the filter"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    public ListCommand(LocalDate date) {"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"        filter \u003d true;"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        this.date \u003d date;"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"     * Construct a command that lists all tasks."},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    public ListCommand() {"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        filter \u003d false;"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     * Output all tasks if no date specified, tasks due on the day otherwise."},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"     * @param ui      The user interface."},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    public void execute(final TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        // list command with no arguments"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        if (!filter) {"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"            if (tasks.isEmpty()) {"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"                ui.printLines(\"I know nothing, feed me with something :)\");"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"                return;"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"            ui.printLines(\"Get working! You need finish these things:\");"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"                ui.printLines(String.format(\"\\t %d. %s\", i + 1, tasks.get(i).toString()));"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"            return;"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"        // list tasks due on a particular day"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"        Vector\u003cTaskWithDateTime\u003e toPrint \u003d new Vector\u003c\u003e();"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        for (Task task : tasks) {"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"            if (task instanceof TaskWithDateTime) {"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"                TaskWithDateTime t \u003d (TaskWithDateTime) task;"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"                if (t.getDateTime().toLocalDate().equals(date)) {"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"                    toPrint.add(t);"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"                }"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"        if (toPrint.isEmpty()) {"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"            ui.printLines((\"You\u0027re free for the day!\"));"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"            ui.printLines(\"You have these deadlines/events:\");"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"            for (int i \u003d 0; i \u003c toPrint.size(); i++) {"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"                ui.printLines(String.format(\"\\t %d. %s\", i + 1, toPrint.get(i).toString()));"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":79}},{"path":"src/ekud/command/ModificationCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.command;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import ekud.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import ekud.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" * Abstract base class for all tasks that causes changes to the list of tasks"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"public abstract class ModificationCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     * Generate summary of how many tasks are left."},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * @param tasks The list of tasks."},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     * @return String containing task summary."},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    protected static String getTasksLeftString(TaskList tasks) {"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"        return String.format(\"Err you got %d task%s in total leh\", tasks.size(), tasks.size() \u003c\u003d 1 ? \"\" : \"s\");"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"     * Save all tasks to disk."},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     * @param tasks   The list of tasks."},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * @param ui      The user interface."},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     * @param storage The file writer."},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        storage.save(tasks);"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":33}},{"path":"src/ekud/common/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.common.exception;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"    protected String message;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"    public DukeException(String message) {"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"        super(message);"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"        this.message \u003d message;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"        return message;"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":15}},{"path":"src/ekud/common/exception/IncompleteDetailException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.common.exception;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"public class IncompleteDetailException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"    public IncompleteDetailException(String missing) {"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"        super(missing + \" is missing\");"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":7}},{"path":"src/ekud/common/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.common.exception;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"public class InvalidCommandException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"    public InvalidCommandException() {"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"        super(\"Huh?! What talking you? I no get you...\");"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":7}},{"path":"src/ekud/common/exception/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.common.exception;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"public class InvalidTaskIndexException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"    public InvalidTaskIndexException() {"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"        super(\"Invalid index for task selection!\");"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":7}},{"path":"src/ekud/common/exception/NoTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.common.exception;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"public class NoTaskDescriptionException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"    public NoTaskDescriptionException() {"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"        super(\"Where your details?\");"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":7}},{"path":"src/ekud/common/exception/NoTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.common.exception;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"public class NoTasksException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"    public NoTasksException() {"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"        super(\"Hmm, you got nothing better to do.\");"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":7}},{"path":"src/ekud/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.parser;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.util.regex.Matcher;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.util.regex.Pattern;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import ekud.command.AddCommand;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import ekud.command.AddDeadlineCommand;"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import ekud.command.AddEventCommand;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import ekud.command.AddTodoCommand;"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"import ekud.command.ByeCommand;"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import ekud.command.Command;"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import ekud.command.DeleteCommand;"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import ekud.command.DoneCommand;"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import ekud.command.FindCommand;"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import ekud.command.ListCommand;"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.DukeException;"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.IncompleteDetailException;"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.InvalidCommandException;"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.InvalidTaskIndexException;"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.NoTaskDescriptionException;"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":" * Command parser"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"public class Parser {"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"^(?\u003ccommand\u003e\\\\S+)(?:\\\\s+(?\u003carguments\u003e.*))?\");"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    private static final Pattern TIMED_TASK_ARGS \u003d Pattern.compile(\"(?\u003cdescription\u003e.*)\\\\s+\""},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"            + \"(?\u003cseparator\u003e/(?:by|at))\\\\s+\""},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"            + \"(?\u003cdatetime\u003e.*)\");"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"    private static final Pattern DATE_TIME_FORMAT \u003d Pattern.compile(\"^[0-3]?\\\\d/[0-1]?\\\\d/\\\\d{4}\\\\s+\\\\d{4}\");"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"     * Create an AddCommand from specified command type and arguments."},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"     * @param commandType The type of Task to create, namely ToDo, Deadline or Event."},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"     * @param arguments   All extra arguments necessary for the given task."},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"     * @return The AddCommand that can be used to construct the task."},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"     * @throws DukeException If the command type is invalid or any problems with arguments."},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    private static AddCommand createAddCommand(CommandType commandType, String arguments) throws DukeException {"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"            throw new NoTaskDescriptionException();"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        AddCommand command;"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        if (commandType \u003d\u003d CommandType.TODO) {"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"            command \u003d new AddTodoCommand(arguments);"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"            final Matcher matcher \u003d TIMED_TASK_ARGS.matcher(arguments);"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"            if (!matcher.matches()) {"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"                throw new DukeException(\"Invalid command format!\");"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"            String dateTimeString \u003d matcher.group(\"datetime\").trim();"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"            LocalDateTime dateTime;"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"            try {"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"                dateTime \u003d LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"                throw new DukeException(\"Invalid date and time format, use d/M/yyyy HHmm\");"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"            if (matcher.group(\"separator\").equals(\"/by\")) {"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"                command \u003d new AddDeadlineCommand(matcher.group(\"description\"), dateTime);"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"            } else {"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"                command \u003d new AddEventCommand(matcher.group(\"description\"), dateTime);"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"        return command;"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"     * Parse a given line of command into an executable Command."},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"     * @param fullCommand The String containing the entire command."},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"     * @return The Command that can be executed to satisfy the fullCommand given."},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"     * @throws DukeException If any parts of the command are invalid."},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"    public static Command parse(String fullCommand) throws DukeException {"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"        final Matcher matcher \u003d COMMAND_FORMAT.matcher(fullCommand.trim());"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"        if (!matcher.matches()) {"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"            throw new DukeException(\"Invalid command format!\");"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"        final String commandWord \u003d matcher.group(\"command\");"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"        final String arguments \u003d matcher.group(\"arguments\") \u003d\u003d null ? \"\" : matcher.group(\"arguments\").trim();"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"        CommandType func;"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"            func \u003d CommandType.valueOf(commandWord.toUpperCase());"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"            throw new InvalidCommandException();"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"        switch (func) {"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"        case LIST:"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"            if (arguments.isBlank()) {"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"                return new ListCommand();"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"            LocalDate date;"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"            try {"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":"                date \u003d LocalDate.parse(arguments, DateTimeFormatter.ofPattern(\"d/M/yyyy\"));"},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":111,"author":{"gitId":"kouyk"},"content":"                throw new DukeException(\"Invalid date format, use d/M/yyyy\");"},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"            return new ListCommand(date);"},{"lineNumber":114,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"        case DONE:"},{"lineNumber":116,"author":{"gitId":"kouyk"},"content":"            try {"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"                int index \u003d Integer.parseInt(arguments) - 1;"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"                return new DoneCommand(index);"},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":120,"author":{"gitId":"kouyk"},"content":"                throw new InvalidTaskIndexException();"},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"        case DELETE:"},{"lineNumber":124,"author":{"gitId":"kouyk"},"content":"            try {"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"                int index \u003d Integer.parseInt(arguments) - 1;"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"                return new DeleteCommand(index);"},{"lineNumber":127,"author":{"gitId":"kouyk"},"content":"            } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"                throw new InvalidTaskIndexException();"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":131,"author":{"gitId":"kouyk"},"content":"        case BYE:"},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"            return new ByeCommand();"},{"lineNumber":133,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":134,"author":{"gitId":"kouyk"},"content":"        case TODO:"},{"lineNumber":135,"author":{"gitId":"kouyk"},"content":"        case DEADLINE:"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":"        case EVENT:"},{"lineNumber":137,"author":{"gitId":"kouyk"},"content":"            if (arguments.isBlank()) {"},{"lineNumber":138,"author":{"gitId":"kouyk"},"content":"                throw new NoTaskDescriptionException();"},{"lineNumber":139,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":140,"author":{"gitId":"kouyk"},"content":"            return createAddCommand(func, arguments);"},{"lineNumber":141,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":142,"author":{"gitId":"kouyk"},"content":"        case FIND:"},{"lineNumber":143,"author":{"gitId":"kouyk"},"content":"            if (arguments.isBlank()) {"},{"lineNumber":144,"author":{"gitId":"kouyk"},"content":"                throw new IncompleteDetailException(\"keyword\");"},{"lineNumber":145,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":146,"author":{"gitId":"kouyk"},"content":"            return new FindCommand(arguments);"},{"lineNumber":147,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":148,"author":{"gitId":"kouyk"},"content":"        default:"},{"lineNumber":149,"author":{"gitId":"kouyk"},"content":"            throw new InvalidCommandException();"},{"lineNumber":150,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":153,"author":{"gitId":"kouyk"},"content":"    private enum CommandType {"},{"lineNumber":154,"author":{"gitId":"kouyk"},"content":"        LIST,"},{"lineNumber":155,"author":{"gitId":"kouyk"},"content":"        DONE,"},{"lineNumber":156,"author":{"gitId":"kouyk"},"content":"        DELETE,"},{"lineNumber":157,"author":{"gitId":"kouyk"},"content":"        BYE,"},{"lineNumber":158,"author":{"gitId":"kouyk"},"content":"        TODO,"},{"lineNumber":159,"author":{"gitId":"kouyk"},"content":"        DEADLINE,"},{"lineNumber":160,"author":{"gitId":"kouyk"},"content":"        EVENT,"},{"lineNumber":161,"author":{"gitId":"kouyk"},"content":"        FIND"},{"lineNumber":162,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":163}},{"path":"src/ekud/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.storage;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import java.util.Vector;"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import java.util.regex.Matcher;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"import java.util.regex.Pattern;"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.DukeException;"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"import ekud.task.Deadline;"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"import ekud.task.EventTask;"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"import ekud.task.Task;"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"import ekud.task.TaskList;"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"import ekud.task.ToDo;"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":" * The file I/O class that handles all file operations"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"public class Storage {"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    private static final String deliminator \u003d \"\\\\|\";"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    private static final Pattern PARENT_DIRECTORY \u003d Pattern.compile(\"(?\u003cparentDirectory\u003e^.*/).*$\");"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    private final String filePath;"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    private final File file;"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    private boolean canSave;"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"     * Construct a new Storage instance that reads and writes to a given file."},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"     * @param path The path to the file."},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"    public Storage(String path) {"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        filePath \u003d path;"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        Matcher matcher \u003d PARENT_DIRECTORY.matcher(filePath);"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        if (matcher.matches()) {"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"            String parentDirectory \u003d (matcher.group(\"parentDirectory\") \u003d\u003d null"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"                    ? \"./\""},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"                    : matcher.group(\"parentDirectory\"));"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"            File folder \u003d new File(parentDirectory);"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"            if (!folder.exists()) {"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"                canSave \u003d folder.mkdirs();"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"            } else {"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"                canSave \u003d true;"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        file \u003d new File(filePath);"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"     * Read the file and reconstruct all tasks."},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"     * @return A Vector containing all reconstructed tasks."},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"     * @throws DukeException If any errors are encountered during I/O operations, or if the task is invalid."},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"    public Vector\u003cTask\u003e load() throws DukeException {"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        Vector\u003cTask\u003e ret \u003d new Vector\u003c\u003e();"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"        Scanner s;"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"            s \u003d new Scanner(file);"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"            return ret;"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"        while (s.hasNextLine()) {"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"            String line \u003d s.nextLine();"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"            String[] data;"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"            data \u003d line.split(deliminator, 0);"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"            switch (data[0]) {"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"            case \"T\":"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"                ret.add(new ToDo(data[2]));"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"                break;"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"            case \"D\":"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"                ret.add(new Deadline(data[2], LocalDateTime.parse(data[3])));"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"                break;"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"            case \"E\":"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"                ret.add(new EventTask(data[2], LocalDateTime.parse(data[3])));"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"                break;"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"            default:"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"                throw new DukeException(\"Unknown task type\");"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"            // mark as read accordingly"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"            if (Boolean.parseBoolean(data[1])) {"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"                ret.lastElement().markAsDone();"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"        return ret;"},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"     * Save the given tasks to the file using specified FileWriter."},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"     * @param fw    The FileWriter to write to."},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"     * @param tasks The list of tasks to save."},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"     * @throws IOException If an I/O error occurs."},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"    private void writeToFile(FileWriter fw, List\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"        for (Task task : tasks) {"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"            LinkedList\u003cString\u003e list \u003d task.export();"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":"            fw.write(String.join(\"|\", list) + System.lineSeparator());"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"kouyk"},"content":"     * Save tasks to disk."},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"     * @param tasks The list of tasks."},{"lineNumber":114,"author":{"gitId":"kouyk"},"content":"     * @throws DukeException If an I/O error occurs."},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"kouyk"},"content":"    public void save(final TaskList tasks) throws DukeException {"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"        if (!canSave) {"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":"            return;"},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"        List\u003cTask\u003e list \u003d tasks.export();"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath, false)) {"},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"            writeToFile(fw, list);"},{"lineNumber":124,"author":{"gitId":"kouyk"},"content":"        } catch (IOException e) {"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"            throw new DukeException(\"Storage: IOException encountered\");"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":128}},{"path":"src/ekud/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":" * A deadline task that requires a specified date and time set as its deadline"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"public class Deadline extends TaskWithDateTime {"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"     * Construct a Deadline task."},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     * @param description The description of the Deadline."},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     * @param by          The completion date and time information."},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"        super(description, by);"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateTime.format(DATE_TIME_FORMAT) + \")\";"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * @return String LinkedList containing {\"D\", isDone, description, dateTime}."},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    public LinkedList\u003cString\u003e export() {"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        LinkedList\u003cString\u003e list \u003d super.export();"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        list.addFirst(\"D\");"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        return list;"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":34}},{"path":"src/ekud/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":" * Event task that occurs at a specified date and time"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"public class EventTask extends TaskWithDateTime {"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"     * Construct an Event task."},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     * @param description The description of the Event."},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     * @param at          The date and time that the Event occurs."},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    public EventTask(String description, LocalDateTime at) {"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"        super(description, at);"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + dateTime.format(DATE_TIME_FORMAT) + \")\";"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * @return String LinkedList containing {\"E\", isDone, description, dateTime}"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    public LinkedList\u003cString\u003e export() {"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        LinkedList\u003cString\u003e list \u003d super.export();"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        list.addFirst(\"E\");"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        return list;"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":34}},{"path":"src/ekud/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":" * The abstract base class for all kinds of tasks"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"public abstract class Task {"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"    protected boolean isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     * Construct a new Task."},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * @param description The task description"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    public Task(String description) {"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"     * Check if the Task is marked as completed."},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     * @return true if markAsDone() has been invoked previously, false otherwise."},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    public boolean isDone() {"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        return isDone;"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"     * Mark the Task as completed."},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"    public void markAsDone() {"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        isDone \u003d true;"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     * Retrieve the appropriate status icon based on the done status of the Task."},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"     * @return A tick symbol if Task is done, a cross symbol otherwise."},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"    public String getStatusIcon() {"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or cross symbols"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"    public String getDescription() {"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"        return description;"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        return String.format(\"[%c] %s\", isDone ? \u0027X\u0027 : \u0027 \u0027, description);"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"     * Consolidate all information necessary to reconstruct the exact same Task."},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"     * @return String LinkedList containing {isDone, description}."},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"    public LinkedList\u003cString\u003e export() {"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"        LinkedList\u003cString\u003e list \u003d new LinkedList\u003c\u003e();"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"        list.add(String.valueOf(isDone));"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"        list.add(description);"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"        return list;"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":66}},{"path":"src/ekud/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.util.Collection;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.util.Iterator;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"import java.util.Vector;"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import ekud.common.exception.InvalidTaskIndexException;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":" * Iterable for containing any task type"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"public class TaskList implements Iterable\u003cTask\u003e {"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    private final Vector\u003cTask\u003e taskArray;"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    private int doneCount;"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     * Construct a new TaskList from existing tasks."},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"     * @param taskArray The array containing existing tasks."},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    public TaskList(Collection\u003cTask\u003e taskArray) {"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"        this.taskArray \u003d new Vector\u003c\u003e(taskArray);"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        for (Task task : taskArray) {"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"            if (task.isDone) {"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"                ++doneCount;"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"     * Construct a new TaskList with no existing tasks."},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"    public TaskList() {"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        taskArray \u003d new Vector\u003c\u003e();"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        doneCount \u003d 0;"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"     * Add a new task to the end of the existing list."},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"     * @param newTask The task to be added."},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    public void add(Task newTask) {"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        taskArray.add(newTask);"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"     * Remove a task by index."},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"     * @param index The index of the task to be removed."},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"     * @return Task removed from list."},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"     * @throws InvalidTaskIndexException If the index is out of range (index \u003c 0 || index \u003e\u003d size())."},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"    public Task remove(int index) throws InvalidTaskIndexException {"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"            Task deletedTask \u003d taskArray.remove(index);"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"            if (deletedTask.isDone) {"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"                --doneCount;"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"            return deletedTask;"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"            throw new InvalidTaskIndexException();"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"     * Return the number of stored tasks."},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"     * @return The number of stored tasks."},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"    public int size() {"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"        return taskArray.size();"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"     * Returns the task at the specified position in this TaskList."},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"     * @param index Index of the element to return."},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"     * @return Task at the specified index."},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"     * @throws InvalidTaskIndexException if the index is out of range (index \u003c 0 || index \u003e\u003d size())."},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":"    public Task get(int index) throws InvalidTaskIndexException {"},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"        try {"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"            return taskArray.get(index);"},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"            throw new InvalidTaskIndexException();"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"kouyk"},"content":"     * Mark the task at index as done."},{"lineNumber":94,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"kouyk"},"content":"     * @param index Index of the task to be marked as done."},{"lineNumber":96,"author":{"gitId":"kouyk"},"content":"     * @return The task marked as done."},{"lineNumber":97,"author":{"gitId":"kouyk"},"content":"     * @throws InvalidTaskIndexException if the index is out of range (index \u003c 0 || index \u003e\u003d size())."},{"lineNumber":98,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"kouyk"},"content":"    public Task markDone(int index) throws InvalidTaskIndexException {"},{"lineNumber":100,"author":{"gitId":"kouyk"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"kouyk"},"content":"            Task doneTask \u003d taskArray.get(index);"},{"lineNumber":102,"author":{"gitId":"kouyk"},"content":"            doneTask.markAsDone();"},{"lineNumber":103,"author":{"gitId":"kouyk"},"content":"            ++doneCount;"},{"lineNumber":104,"author":{"gitId":"kouyk"},"content":"            return doneTask;"},{"lineNumber":105,"author":{"gitId":"kouyk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":106,"author":{"gitId":"kouyk"},"content":"            throw new InvalidTaskIndexException();"},{"lineNumber":107,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":110,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"kouyk"},"content":"     * Get the number of incomplete tasks."},{"lineNumber":112,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"kouyk"},"content":"     * @return Number of incomplete tasks."},{"lineNumber":114,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"kouyk"},"content":"    public int getIncompleteRemaining() {"},{"lineNumber":116,"author":{"gitId":"kouyk"},"content":"        return taskArray.size() - doneCount;"},{"lineNumber":117,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":119,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"kouyk"},"content":"     * Returns the last task of the TaskList."},{"lineNumber":121,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":122,"author":{"gitId":"kouyk"},"content":"     * @return The last task of the TaskList, i.e., the component at index size() - 1."},{"lineNumber":123,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"kouyk"},"content":"    public Task last() {"},{"lineNumber":125,"author":{"gitId":"kouyk"},"content":"        return taskArray.lastElement();"},{"lineNumber":126,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":128,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"kouyk"},"content":"     * Tests if this TaskList has no tasks."},{"lineNumber":130,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":131,"author":{"gitId":"kouyk"},"content":"     * @return True if and only if this TaskList has no tasks, that is, its size is zero; false otherwise."},{"lineNumber":132,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"kouyk"},"content":"    public boolean isEmpty() {"},{"lineNumber":134,"author":{"gitId":"kouyk"},"content":"        return taskArray.isEmpty();"},{"lineNumber":135,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":137,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"kouyk"},"content":"     * Returns an iterator over the tasks in this list in proper sequence. The returned iterator is fail-fast."},{"lineNumber":139,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":140,"author":{"gitId":"kouyk"},"content":"     * @return An iterator over the elements in this list in proper sequence."},{"lineNumber":141,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"kouyk"},"content":"    public Iterator\u003cTask\u003e iterator() {"},{"lineNumber":143,"author":{"gitId":"kouyk"},"content":"        return taskArray.iterator();"},{"lineNumber":144,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":146,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"kouyk"},"content":"     * Export the internal list of tasks as an unmodifiable list."},{"lineNumber":148,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":149,"author":{"gitId":"kouyk"},"content":"     * @return An unmodifiable view of the task list."},{"lineNumber":150,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"kouyk"},"content":"    public List\u003cTask\u003e export() {"},{"lineNumber":152,"author":{"gitId":"kouyk"},"content":"        return Collections.unmodifiableList(taskArray);"},{"lineNumber":153,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":154}},{"path":"src/ekud/task/TaskWithDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":" * Base class for any tasks that has relevant date and time information attached"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"public abstract class TaskWithDateTime extends Task {"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"    protected static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h.mma\");"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    protected LocalDateTime dateTime;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"     * Construct a new Task that has date and time information attached."},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"     * @param description The TaskWithDateTime description."},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"     * @param dateTime    The datetime information."},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    public TaskWithDateTime(String description, LocalDateTime dateTime) {"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"     * Get the datetime information for the Task."},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"     * @return The stored datetime."},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"    public LocalDateTime getDateTime() {"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        return dateTime;"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"     * @return String LinkedList containing {isDone, description, dateTime}"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"    public LinkedList\u003cString\u003e export() {"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        LinkedList\u003cString\u003e list \u003d super.export();"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        list.addLast(dateTime.toString());"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        return list;"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":43}},{"path":"src/ekud/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":" * A simple ToDo task with no added features"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"public class ToDo extends Task {"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"     * Construct a new ToDo Task with a given description."},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"     * @param description The description of the new ToDo."},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    public ToDo(String description) {"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"     * @return String LinkedList containing {\"T\", isDone, description}."},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    public LinkedList\u003cString\u003e export() {"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        LinkedList\u003cString\u003e list \u003d super.export();"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        list.addFirst(\"T\");"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        return list;"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":32}},{"path":"src/ekud/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.ui;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import java.io.InputStream;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import java.io.PrintStream;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":" * The user interface class that handles all the interactions with the user"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":" * All input and output from the user will go through this class for better abstraction"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":" */"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"public class Ui {"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"    private static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"    private static final String PADDING \u003d \"\\t\";"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Yo! I\u0027m ekud.Ekud!\\nWhat you want?\";"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    private final Scanner input;"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    private final PrintStream output;"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"     * Construct a new Ui that will use the given InputStream and PrintStream as the input and output."},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"     * @param input  The input stream."},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"     * @param output The output stream."},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    public Ui(InputStream input, PrintStream output) {"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        this.input \u003d new Scanner(input);"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"        this.output \u003d output;"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"     * Construct a new Ui using the system\u0027s default input and output."},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"    public Ui() {"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        this(System.in, System.out);"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"     * Show a horizontal line used as a separator."},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"    public void showLine() {"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        output.println(PADDING + HORIZONTAL_LINE);"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"     * Display any number of lines to the user."},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"     * @param lines Any String iterable that will all be displayed, each separated by line breaks."},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"    public void printLines(String... lines) {"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"        for (String line : lines) {"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"            output.println(PADDING + \" \" + line);"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"     * Display the welcome message of Ekud."},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"    public void showWelcome() {"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"        showLine();"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        printLines(WELCOME_MESSAGE.split(\"\\n\"));"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"        showLine();"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"     * Read a single line of input from user."},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"     * @return The line of input entered by user."},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"    public String readCommand() {"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"        String fullCommand \u003d input.nextLine();"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"        while (fullCommand.isBlank()) {"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":"            fullCommand \u003d input.next();"},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"        return fullCommand;"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"     * Display any error message from exception."},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"     * @param errorMessage The String of the error message."},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"    public void showError(String errorMessage) {"},{"lineNumber":82,"author":{"gitId":"kouyk"},"content":"        printLines(errorMessage);"},{"lineNumber":83,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":85,"author":{"gitId":"kouyk"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"kouyk"},"content":"     * Display the loading error caused by errors encountered while loading save file."},{"lineNumber":87,"author":{"gitId":"kouyk"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"kouyk"},"content":"    public void showLoadingError() {"},{"lineNumber":89,"author":{"gitId":"kouyk"},"content":"        printLines(\"Error while loading saved tasks\","},{"lineNumber":90,"author":{"gitId":"kouyk"},"content":"                \"Starting from scratch instead...\");"},{"lineNumber":91,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":92}},{"path":"src/test/java/ekud/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"public class DeadlineTest {"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    public static final String DEADLINE_DESCRIPTION \u003d \"deadline description\";"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    static final LocalDateTime DATE_TIME \u003d LocalDateTime.of(2020, 2, 2, 2, 2);"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h.mma\");"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    @Nested"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    @DisplayName(\"freshly created\")"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    class FreshTask {"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        private Deadline deadline;"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"        @BeforeEach"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        void createNewTask() {"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"            deadline \u003d new Deadline(DEADLINE_DESCRIPTION, DATE_TIME);"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"convert to string\")"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        void toStringTest() {"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"            assertEquals("},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"                    \"[D][ ] \" + DEADLINE_DESCRIPTION + \" (by: \" + DATE_TIME.format(FORMATTER) + \")\","},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"                    deadline.toString());"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"export\")"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        void exportTest() {"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"            LinkedList\u003cString\u003e list \u003d deadline.export();"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"            assertEquals(\"D\", list.get(0));"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"        @Nested"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"after marking as done\")"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        class AfterMarkDone {"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"            @BeforeEach"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"            void markDone() {"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"                deadline.markAsDone();"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"convert to string\")"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"            void toStringTest() {"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"                assertEquals("},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"                        \"[D][X] \" + DEADLINE_DESCRIPTION + \" (by: \" + DATE_TIME.format(FORMATTER) + \")\","},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"                        deadline.toString());"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"export\")"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"            void exportTest() {"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"                LinkedList\u003cString\u003e list \u003d deadline.export();"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"                assertEquals(\"D\", list.getFirst());"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":68}},{"path":"src/test/java/ekud/task/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"public class EventTaskTest {"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    public static final String EVENT_DESCRIPTION \u003d \"event description\";"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    static final LocalDateTime DATE_TIME \u003d LocalDateTime.of(2020, 2, 2, 2, 2);"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h.mma\");"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"    @Nested"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    @DisplayName(\"freshly created\")"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    class FreshTask {"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        private EventTask eventTask;"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"        @BeforeEach"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        void createNewTask() {"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"            eventTask \u003d new EventTask(EVENT_DESCRIPTION, DATE_TIME);"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"convert to string\")"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        void toStringTest() {"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"            assertEquals("},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"                    \"[E][ ] \" + EVENT_DESCRIPTION + \" (at: \" + DATE_TIME.format(FORMATTER) + \")\","},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"                    eventTask.toString());"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"export\")"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        void exportTest() {"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"            LinkedList\u003cString\u003e list \u003d eventTask.export();"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"            assertEquals(\"E\", list.get(0));"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"        @Nested"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"after marking as done\")"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        class AfterMarkDone {"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"            @BeforeEach"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"            void markDone() {"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"                eventTask.markAsDone();"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"convert to string\")"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"            void toStringTest() {"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"                assertEquals("},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"                        \"[E][X] \" + EVENT_DESCRIPTION + \" (at: \" + DATE_TIME.format(FORMATTER) + \")\","},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"                        eventTask.toString());"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"export\")"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"            void exportTest() {"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"                LinkedList\u003cString\u003e list \u003d eventTask.export();"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"                assertEquals(\"E\", list.getFirst());"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":68}},{"path":"src/test/java/ekud/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"@DisplayName(\"Abstract base class for all tasks\")"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"public class TaskTest {"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    public final String TASK_DESCRIPTION \u003d \"task description\";"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    private static class TaskImpl extends Task {"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"        public TaskImpl(String description) {"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"            super(description);"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"    @Nested"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    @DisplayName(\"freshly created\")"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    class FreshTask {"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"        private Task task;"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        @BeforeEach"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        void createNewTask() {"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"            task \u003d new TaskImpl(TASK_DESCRIPTION);"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"convert to string\")"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        void toStringTest() {"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"            assertEquals(\"[ ] \" + TASK_DESCRIPTION, task.toString());"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"check if not done\")"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        void checkIfDone() {"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"            assertFalse(task.isDone());"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"export\")"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"        void exportTest() {"},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"            LinkedList\u003cString\u003e list \u003d task.export();"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"            assertEquals(\"false\", list.get(0));"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"            assertEquals(TASK_DESCRIPTION, list.get(1));"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":"        @Nested"},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"after marking as done\")"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"        class AfterMarkDone {"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"            @BeforeEach"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"            void markDone() {"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"                task.markAsDone();"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"convert to string\")"},{"lineNumber":62,"author":{"gitId":"kouyk"},"content":"            void toStringTest() {"},{"lineNumber":63,"author":{"gitId":"kouyk"},"content":"                assertEquals(\"[X] \" + TASK_DESCRIPTION, task.toString());"},{"lineNumber":64,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":66,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":67,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"check if not done\")"},{"lineNumber":68,"author":{"gitId":"kouyk"},"content":"            void checkIfDone() {"},{"lineNumber":69,"author":{"gitId":"kouyk"},"content":"                assertTrue(task.isDone());"},{"lineNumber":70,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":72,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":73,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"export\")"},{"lineNumber":74,"author":{"gitId":"kouyk"},"content":"            void exportTest() {"},{"lineNumber":75,"author":{"gitId":"kouyk"},"content":"                LinkedList\u003cString\u003e list \u003d task.export();"},{"lineNumber":76,"author":{"gitId":"kouyk"},"content":"                assertEquals(\"true\", list.get(0));"},{"lineNumber":77,"author":{"gitId":"kouyk"},"content":"                assertEquals(TASK_DESCRIPTION, list.get(1));"},{"lineNumber":78,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":81}},{"path":"src/test/java/ekud/task/TaskWithDateTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.time.LocalDateTime;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"public class TaskWithDateTimeTest {"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    static final String DATE_TIME_TASK_DESCRIPTION \u003d \"task with datetime description\";"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"    static final LocalDateTime DATE_TIME \u003d LocalDateTime.of(2020, 2, 2, 2, 2);"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    private static class TaskWithDateTimeImpl extends TaskWithDateTime{"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"        public TaskWithDateTimeImpl(String description, LocalDateTime dateTime) {"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"            super(description, dateTime);"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"    @Nested"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"    @DisplayName(\"freshly created\")"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":"    class FreshTask {"},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"        private TaskWithDateTime taskWithDateTime;"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        @BeforeEach"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"        void createNewTask() {"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"            taskWithDateTime \u003d new TaskWithDateTimeImpl(DATE_TIME_TASK_DESCRIPTION, DATE_TIME);"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"return correct datetime\")"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"        void checkIfDone() {"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"            assertEquals(DATE_TIME, taskWithDateTime.getDateTime());"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"export\")"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        void exportTest() {"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"            LinkedList\u003cString\u003e list \u003d taskWithDateTime.export();"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"            assertEquals(DATE_TIME.toString(), list.getLast());"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":46}},{"path":"src/test/java/ekud/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"package ekud.task;"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.DisplayName;"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Nested;"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"import java.util.LinkedList;"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"public class ToDoTest {"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"    public static final String TODO_DESCRIPTION \u003d \"todo description\";"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"    @Nested"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"    @DisplayName(\"freshly created\")"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"    class FreshTask {"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"        private ToDo toDo;"},{"lineNumber":20,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":21,"author":{"gitId":"kouyk"},"content":"        @BeforeEach"},{"lineNumber":22,"author":{"gitId":"kouyk"},"content":"        void createNewTask() {"},{"lineNumber":23,"author":{"gitId":"kouyk"},"content":"            toDo \u003d new ToDo(TODO_DESCRIPTION);"},{"lineNumber":24,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":26,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"convert to string\")"},{"lineNumber":28,"author":{"gitId":"kouyk"},"content":"        void toStringTest() {"},{"lineNumber":29,"author":{"gitId":"kouyk"},"content":"            assertEquals(\"[T][ ] \" + TODO_DESCRIPTION, toDo.toString());"},{"lineNumber":30,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":32,"author":{"gitId":"kouyk"},"content":"        @Test"},{"lineNumber":33,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"export\")"},{"lineNumber":34,"author":{"gitId":"kouyk"},"content":"        void exportTest() {"},{"lineNumber":35,"author":{"gitId":"kouyk"},"content":"            LinkedList\u003cString\u003e list \u003d toDo.export();"},{"lineNumber":36,"author":{"gitId":"kouyk"},"content":"            assertEquals(\"T\", list.get(0));"},{"lineNumber":37,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":39,"author":{"gitId":"kouyk"},"content":"        @Nested"},{"lineNumber":40,"author":{"gitId":"kouyk"},"content":"        @DisplayName(\"after marking as done\")"},{"lineNumber":41,"author":{"gitId":"kouyk"},"content":"        class AfterMarkDone {"},{"lineNumber":42,"author":{"gitId":"kouyk"},"content":"            @BeforeEach"},{"lineNumber":43,"author":{"gitId":"kouyk"},"content":"            void markDone() {"},{"lineNumber":44,"author":{"gitId":"kouyk"},"content":"                toDo.markAsDone();"},{"lineNumber":45,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":47,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":48,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"convert to string\")"},{"lineNumber":49,"author":{"gitId":"kouyk"},"content":"            void toStringTest() {"},{"lineNumber":50,"author":{"gitId":"kouyk"},"content":"                assertEquals(\"[T][X] \" + TODO_DESCRIPTION, toDo.toString());"},{"lineNumber":51,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"kouyk"},"content":""},{"lineNumber":53,"author":{"gitId":"kouyk"},"content":"            @Test"},{"lineNumber":54,"author":{"gitId":"kouyk"},"content":"            @DisplayName(\"export\")"},{"lineNumber":55,"author":{"gitId":"kouyk"},"content":"            void exportTest() {"},{"lineNumber":56,"author":{"gitId":"kouyk"},"content":"                LinkedList\u003cString\u003e list \u003d toDo.export();"},{"lineNumber":57,"author":{"gitId":"kouyk"},"content":"                assertEquals(\"T\", list.get(0));"},{"lineNumber":58,"author":{"gitId":"kouyk"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"kouyk"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"kouyk"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"kouyk"},"content":"}"}],"authorContributionMap":{"kouyk":61}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kouyk"},"content":"list"},{"lineNumber":2,"author":{"gitId":"kouyk"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"kouyk"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"kouyk"},"content":"deadline finish week 2 project /by Saturday"},{"lineNumber":5,"author":{"gitId":"kouyk"},"content":"list"},{"lineNumber":6,"author":{"gitId":"kouyk"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"kouyk"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"kouyk"},"content":"list"},{"lineNumber":9,"author":{"gitId":"kouyk"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"done 1"},{"lineNumber":11,"author":{"gitId":"kouyk"},"content":"list done 4"},{"lineNumber":12,"author":{"gitId":"kouyk"},"content":"event random event /at some time in the future"},{"lineNumber":13,"author":{"gitId":"kouyk"},"content":"todo blah"},{"lineNumber":14,"author":{"gitId":"kouyk"},"content":"list"},{"lineNumber":15,"author":{"gitId":"kouyk"},"content":"random"},{"lineNumber":16,"author":{"gitId":"kouyk"},"content":"delete 3"},{"lineNumber":17,"author":{"gitId":"kouyk"},"content":"done 1"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"list"},{"lineNumber":19,"author":{"gitId":"kouyk"},"content":"bye"}],"authorContributionMap":{"kouyk":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"kouyk"},"content":"javac  -cp ..\\src\\ekud.main\\java -Xlint:none -d ..\\bin ..\\src\\ekud.main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"kouyk"},"content":"java -classpath ..\\bin ekud.Ekud \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"kouyk":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"kouyk"},"content":"#dos2unix EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"kouyk":1,"-":37}}]
