[{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":" * sub-class of Task to represents a task with deadline."},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"public class Deadlines extends Task{"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"    private String comments;"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"     * create a deadline task object with given task name and given dates/comments."},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"     * @param taskName String representation of the name of the task."},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"     * @param comments String representation of the comments/dates."},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"    public Deadlines(String taskName, String comments) {"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"        super(taskName);"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"        this.comments \u003d comments;"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"        return String.format(\"[D][%s] %d. %s ( %s )\", super.isDone(), super.getIndex(),"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"                super.getTaskName(), this.comments);"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"import java.util.Arrays;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":" * Encapsulates the main class of the Object."},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"     * Executes the programs."},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"     * @param args command line arguments key in by user."},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"        System.out.println(Format.LOGO);"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"        System.out.println(Format.greeting);"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"        while(sc.hasNext()) {"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"            String message \u003d sc.nextLine();"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"            boolean bye \u003d inputHandler(message);"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"            if (bye) {"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"                break;"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"        System.out.println(Format.farewell);"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"     * handle done command key in by user."},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"     * @param line String array of the full line key in by user."},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    public static void handleDone(String[] line) {"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"        if (line.length \u003d\u003d 2) {"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"            String arg \u003d line[1].replaceAll(\"[^0-9]\", \"\");"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"            try {"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"                int num \u003d Integer.parseInt(arg);"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"                Task.done(num);"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"                System.out.println(\"Please lah, key in number\");"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        } else {"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"            DukeException.argumentErrorException();"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"     * handle todo command key in by user"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"     * @param line String array of the full line key in by user."},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"     * @param message the name of the task to be set."},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"    public static void handleToDo(String[] line, String message) {"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"        if (line.length \u003e 1) {"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"            String msg \u003d message.replaceAll(line[0], \"\")"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"                    .trim();"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"            Todo todo \u003d new Todo(msg);"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"            System.out.println(Format.biggerBox(todo));"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"        } else {"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"            DukeException.argumentErrorException();"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"     * handle deadline command user key in."},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"     * @param line String array of the full line that user key in."},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"     * @param message String representation of the name of the task key in."},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"    public static void handleDeadline(String[] line, String message) {"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"        if (line.length \u003e 2) {"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"            String[] comments \u003d message.trim().toLowerCase().split(\"/\");"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"            String msg \u003d comments[0].replaceAll(line[0], \"\").trim();"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"            if (comments.length \u003d\u003d 2) {"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"                if (msg.equals(\"\")) {"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"                    DukeException.emptyBodyException();"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"                } else {"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"                    Deadlines deadline \u003d new Deadlines(msg, comments[1]);"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"                    System.out.println(Format.biggerBox(deadline));"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"            } else {"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"                DukeException.slashErrorException();"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"        } else {"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":"            DukeException.missingArgumentErrorException();"},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":"     * handle event command key in by user."},{"lineNumber":95,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"Hzxin"},"content":"     * @param line String array of the full line key in by user."},{"lineNumber":97,"author":{"gitId":"Hzxin"},"content":"     * @param message String representation of the name of the task key in by user."},{"lineNumber":98,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"Hzxin"},"content":"    public static void handleEvent(String[] line, String message) {"},{"lineNumber":100,"author":{"gitId":"Hzxin"},"content":"        if (line.length \u003e 2) {"},{"lineNumber":101,"author":{"gitId":"Hzxin"},"content":"            String[] comments \u003d message.trim().toLowerCase().split(\"/\");"},{"lineNumber":102,"author":{"gitId":"Hzxin"},"content":"            String msg \u003d comments[0].replaceAll(line[0], \"\").trim();"},{"lineNumber":103,"author":{"gitId":"Hzxin"},"content":"            if (comments.length \u003d\u003d 2) {"},{"lineNumber":104,"author":{"gitId":"Hzxin"},"content":"                if (msg.equals(\"\")) {"},{"lineNumber":105,"author":{"gitId":"Hzxin"},"content":"                    DukeException.emptyBodyException();"},{"lineNumber":106,"author":{"gitId":"Hzxin"},"content":"                } else {"},{"lineNumber":107,"author":{"gitId":"Hzxin"},"content":"                    Event event \u003d new Event(msg, comments[1]);"},{"lineNumber":108,"author":{"gitId":"Hzxin"},"content":"                    System.out.println(Format.biggerBox(event));"},{"lineNumber":109,"author":{"gitId":"Hzxin"},"content":"                }"},{"lineNumber":110,"author":{"gitId":"Hzxin"},"content":"            } else {"},{"lineNumber":111,"author":{"gitId":"Hzxin"},"content":"                DukeException.slashErrorException();"},{"lineNumber":112,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"Hzxin"},"content":"        } else {"},{"lineNumber":114,"author":{"gitId":"Hzxin"},"content":"            DukeException.missingArgumentErrorException();"},{"lineNumber":115,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":118,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":119,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"Hzxin"},"content":"     * The main handler of all the command."},{"lineNumber":121,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":122,"author":{"gitId":"Hzxin"},"content":"     * @param message String representation of the message key in by user."},{"lineNumber":123,"author":{"gitId":"Hzxin"},"content":"     * @return a boolean to whether to exit the program."},{"lineNumber":124,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"Hzxin"},"content":"    public static boolean inputHandler(String message) {"},{"lineNumber":126,"author":{"gitId":"Hzxin"},"content":"        String[] line \u003d message.trim().toLowerCase().split(\" \");"},{"lineNumber":127,"author":{"gitId":"Hzxin"},"content":"        String command \u003d line[0];"},{"lineNumber":128,"author":{"gitId":"Hzxin"},"content":"        if (command.equals(\"bye\")) {"},{"lineNumber":129,"author":{"gitId":"Hzxin"},"content":"            return true;"},{"lineNumber":130,"author":{"gitId":"Hzxin"},"content":"        } else {"},{"lineNumber":131,"author":{"gitId":"Hzxin"},"content":"            if (command.equals(\"list\")) {"},{"lineNumber":132,"author":{"gitId":"Hzxin"},"content":"                Format.LISTING();"},{"lineNumber":133,"author":{"gitId":"Hzxin"},"content":"            } else if (command.equals(\"done\")) {"},{"lineNumber":134,"author":{"gitId":"Hzxin"},"content":"                handleDone(line);"},{"lineNumber":135,"author":{"gitId":"Hzxin"},"content":"            } else if (command.equals(\"todo\")) {"},{"lineNumber":136,"author":{"gitId":"Hzxin"},"content":"                handleToDo(line, message);"},{"lineNumber":137,"author":{"gitId":"Hzxin"},"content":"            } else if (command.equals(\"deadline\")) {"},{"lineNumber":138,"author":{"gitId":"Hzxin"},"content":"                handleDeadline(line, message);"},{"lineNumber":139,"author":{"gitId":"Hzxin"},"content":"            } else if (command.equals(\"event\")){"},{"lineNumber":140,"author":{"gitId":"Hzxin"},"content":"                handleEvent(line, message);"},{"lineNumber":141,"author":{"gitId":"Hzxin"},"content":"            } else {"},{"lineNumber":142,"author":{"gitId":"Hzxin"},"content":"                DukeException.commandErrorException();"},{"lineNumber":143,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":144,"author":{"gitId":"Hzxin"},"content":"            return false;"},{"lineNumber":145,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Hzxin":143,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":" * A class that store all the possible display of errorsException in Duke."},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"public class DukeException{"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"     * display the error message for empty body error."},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    public static final void emptyBodyException() {"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"        System.out.println(\"Walao!Description empty!\");"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"     * display the error message for slash error."},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    public static final void slashErrorException() {"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"        System.out.println(\"??? Too many / or no /, only 1 / allow for dates and time\");"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"     * display the error message for too many argument error."},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    public static final void argumentErrorException() {"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"        System.out.println(\"You put so many/few ARGUMENTS for what\");"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"     * display the error message for missing argument error."},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    public static final void missingArgumentErrorException() {"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"        System.out.println(\"Fill ur description or date lah\");"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"     * display the error message for command error."},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    public static final void commandErrorException() {"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"        System.out.println(\"I DON\u0027T KNOW WHAT U SAYING BRO\");"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"     * display the error message for missing task error."},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"    public static final void taskErrorException() {"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"        System.out.println(\"Walao, no such task\");"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":53}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":" * A subclass of Task that represent an event key in by user."},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"public class Event extends Task{"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"    private String comments;"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"     * Create a event Task with given task name and given comments/dates."},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"     * @param taskName name of the task."},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"     * @param comments dates or comments of the user regarding the task."},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"    public Event(String taskName, String comments) {"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"        super(taskName);"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"        this.comments \u003d comments;"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"        return String.format(\"[E][%s] %d. %s ( %s )\", super.isDone(), super.getIndex(),"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"                super.getTaskName(), this.comments);"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":23}},{"path":"src/main/java/Format.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":" * A class that store all the possible String format for Duke for code simplicity."},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"public class Format {"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"    public static final String LINEBREAK \u003d \"\\n\";"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"    public static final String UPPER \u003d LINEBREAK + \"^\".repeat(90) + LINEBREAK.repeat(2);"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"    public static final String LOWER \u003d LINEBREAK.repeat(1) + \"_\".repeat(90) + LINEBREAK;"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    public static final String LOGO \u003d \" ____        _        \\n\""},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    public static final String farewell \u003d UPPER"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"            + \"I zao liao, don\u0027t miss me.\""},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"            + LOWER;"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    public static final String greeting \u003d UPPER"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"            + \"Awww, need help ah?\""},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"            + LOWER;"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"     * make a chatBox that wrap a given String."},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"     * @param s the String to be wrapped."},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"     * @return a String with a chatBox wrapped."},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    public static final String chatBox(String s) {"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"        if (s.length() \u003e 50) {"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"            return \"Walao! Your command too long lah!\";"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"            return UPPER + \" \".repeat(36 - s.length() / 2) + s + LOWER;"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"     * make a Bigger ChatBox that wrap the name of a given Task."},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"     * @param t task to be wrapped."},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"     * @return the String representation of the task name wrapped in a chatBox."},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    public static final String biggerBox(Task t) {"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"        return Format.UPPER + \"Added liao: \""},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"                + t.toString() + Format.LINEBREAK"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"                + \"You have \" + Task.getCapacity() + \" tasks in the list!\""},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"                + Format.LOWER;"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"     * Display all the current task and status store in the tasklist."},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"    public static final void LISTING() {"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"        System.out.println(UPPER);"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"        for (Task task : Task.getTaskList()) {"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"            if (task \u003d\u003d null) break;"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"            System.out.println(task);"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"        System.out.println(LOWER);"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":64}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":" * A class that store the task that user key in."},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"    private static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    private String taskName;"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    private static int capacity \u003d 0;"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"    private int index;"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"    private String done;"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"     * Construct a task object with taskname attached and its index label in the taskList."},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"     * @param taskName name of the task."},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    Task(String taskName) {"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"        this.index \u003d capacity + 1;"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"        this.done \u003d \" \";"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"        capacity++;"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"        add(this);"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"     * Store the task key in by user in the taskList."},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"     * @param t Task key in by user."},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    private static void add(Task t) {"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        taskList.add(t);"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"     * Mark a given task as done."},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"     * @param i the index label of the Task."},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"    public static final void done(int i) {"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"            Task t \u003d taskList.get(i - 1);"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"            taskList.get(i - 1).done \u003d \"X\";"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"            System.out.println(Format.UPPER + \"Wah~ You done the task: \""},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"                    + \" \" + t.toString() + Format.LOWER);"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"            DukeException.taskErrorException();"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"     * Get the name of the task."},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"     * @return a String representation of the task name."},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"    public String getTaskName() {"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"        return taskName;"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"     * Get the taskList."},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"     * @return the List of all tasks stored."},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"    public static final List\u003cTask\u003e getTaskList() {"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"        return Task.taskList;"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"     * get the isDone status of the task."},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"     * @return a String representation of the isDone status (X for done)."},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"    public String isDone() {"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"        return done;"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"     * get the index label of the task."},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"     * @return the int representation of the index label."},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"    public int getIndex() {"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"        return index;"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"     * get the current capacity of the taskList."},{"lineNumber":92,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"     * @return the int representation of the capacity of the taskList."},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"Hzxin"},"content":"    public static final int getCapacity() {"},{"lineNumber":96,"author":{"gitId":"Hzxin"},"content":"        return Task.capacity;"},{"lineNumber":97,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":99,"author":{"gitId":"Hzxin"},"content":"    @Override"},{"lineNumber":100,"author":{"gitId":"Hzxin"},"content":"    public String toString() {"},{"lineNumber":101,"author":{"gitId":"Hzxin"},"content":"        return String.format(\"[%s] %d. %s\", done, index, taskName);"},{"lineNumber":102,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":103}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":" * A sub-class of Task to represents a toDo task key in by user."},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"public class Todo extends Task{"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"     * Create a toDo task with given taskName attached."},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"     * @param taskName name of the task in String."},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    public Todo(String taskName) {"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"        super(taskName);"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"        return String.format(\"[T][%s] %d. %s\", super.isDone(), super.getIndex(), super.getTaskName());"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"deadline study"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"deadline"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"deadline study /SundayAfternoon 3-4 pm"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"deadline /SundayAfternoon 3-4 pm"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"done 10"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"list"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"event team project"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"event"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"list"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"event team project /Friday 3-4 pm .."},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"done 3"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"list"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"bye"}],"authorContributionMap":{"Hzxin":16}}]
