[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"# duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"1. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"Hzxin":2,"-":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"    id \u0027application\u0027"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"}"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"group \u0027org.example\u0027"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"version \u0027\u0027"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"repositories {"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"    mavenCentral()"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"}"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"dependencies {"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    testCompile group: \u0027junit\u0027, name: \u0027junit\u0027, version: \u00274.12\u0027"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    //JavaFx"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"}"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"test {"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"    useJUnitPlatform()"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"}"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"application {"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"}"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"shadowJar {"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"    archiveBaseName \u003d \"Duke\""},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"    archiveClassifier \u003d null"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"}"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"checkstyle {"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":53}},{"path":"data/Statistics.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"Task history: "},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"1"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"[T][ ] project"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"2"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"[T][ ] project"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"1"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"[T][ ] project"}],"authorContributionMap":{"Hzxin":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"# Duke User Guide "},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"    \u003cimg src\u003d\"./Ui.png\" width\u003d\"400\" heigh \u003d \"600\"\u003e"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"\u003c/p\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"Duke is a task tracking applications that helps you to keep track of task/events with or without deadline."},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"### Build and Run"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"To use Duke, you have to compile and run Duke.java at `src/main/java/duke`."},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"An alternatives will be using gradle to build and run the application."},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"A packaged jar file has been attached in the latest release. Feel free to download it."},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"To run the jar file, simply type in the command `java -jar Duke.jar` "},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"### 1. `todo` - Add a todo task"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"Add a todo task with your given task content to Duke."},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"Format: `todo CONTENT`"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"Example:"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"todo a 2103 individual project"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"Expected Outcome:"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"Added liao: [T][ ] 1. a 2103 individual project"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"You have 1 task in the list!"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"### 2. `deadline` - Add a deadline task"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"Add a deadline task with your given task content and deadline(YYYY-MM-DD) to Duke."},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"Format: `deadline CONTENT/DEADLINE`"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"Example:"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"deadline team meeting/2021-01-22"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"Expected Outcome:"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"Added liao: [D][ ] 2. team meeting (Jan 22 2021)"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"You have 2 tasks in the list!"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"### 3. `event` - Add an event"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"Add an event with the event content and deadline(YYYY-MM-DD) to Duke."},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"Format: `event CONTENT/DEADLINE`"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"Example:"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"event Chinese New Year/2021-02-11"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"Expected Outcome:"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"Added liao: [E][ ] 3. Chinese New Year (Feb 11 2021)"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"You have 3 tasks in the list!"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"### 4. `list` - List all the current tasks"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"List all the tasks that you have added to Duke."},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"Format: `list`"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"Example:"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"list"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"Expected Outcome:"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"[T][ ] 1. a 2103 individual project"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"[D][ ] 2. team meeting (Jan 22 2021)"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"[E][ ] 3. Chinese New Year (Feb 11 2021)"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"### 5. `done` - Mark a current task as done."},{"lineNumber":92,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"Mark a current task with the given index as done in Duke."},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":95,"author":{"gitId":"Hzxin"},"content":"Format: `done INDEX`"},{"lineNumber":96,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":97,"author":{"gitId":"Hzxin"},"content":"Example:"},{"lineNumber":98,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":99,"author":{"gitId":"Hzxin"},"content":"done 1"},{"lineNumber":100,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":101,"author":{"gitId":"Hzxin"},"content":"list"},{"lineNumber":102,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":103,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":104,"author":{"gitId":"Hzxin"},"content":"Expected Outcome:"},{"lineNumber":105,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":106,"author":{"gitId":"Hzxin"},"content":"Wah~ You done the task: [T][X] 1. a 2103 indivual project"},{"lineNumber":107,"author":{"gitId":"Hzxin"},"content":"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"},{"lineNumber":108,"author":{"gitId":"Hzxin"},"content":"[T][X] 1. a 2103 individual project"},{"lineNumber":109,"author":{"gitId":"Hzxin"},"content":"[D][ ] 2. team meeting (Jan 22 2021)"},{"lineNumber":110,"author":{"gitId":"Hzxin"},"content":"[E][ ] 3. Chinese New Year (Feb 11 2021)"},{"lineNumber":111,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":112,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":113,"author":{"gitId":"Hzxin"},"content":"### 6. `delete` - Delete a current task from Duke."},{"lineNumber":114,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":115,"author":{"gitId":"Hzxin"},"content":"Delete a task with the given index in Duke."},{"lineNumber":116,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":117,"author":{"gitId":"Hzxin"},"content":"Format: `delete INDEX`"},{"lineNumber":118,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":119,"author":{"gitId":"Hzxin"},"content":"Example:"},{"lineNumber":120,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":121,"author":{"gitId":"Hzxin"},"content":"delete 1"},{"lineNumber":122,"author":{"gitId":"Hzxin"},"content":"kust"},{"lineNumber":123,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":124,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":125,"author":{"gitId":"Hzxin"},"content":"Expected Outcome:"},{"lineNumber":126,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":127,"author":{"gitId":"Hzxin"},"content":"Awww~ You\u0027ve deleted the task: [T][X] 1. a 2103 indiviual project"},{"lineNumber":128,"author":{"gitId":"Hzxin"},"content":"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"},{"lineNumber":129,"author":{"gitId":"Hzxin"},"content":"[D][ ] 1. team meeting (Jan 22 2021)"},{"lineNumber":130,"author":{"gitId":"Hzxin"},"content":"[E][ ] 2. Chinese New Year (Feb 11 2021)"},{"lineNumber":131,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":132,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":133,"author":{"gitId":"Hzxin"},"content":"### 7. `find` - Find all relevant tasks."},{"lineNumber":134,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":135,"author":{"gitId":"Hzxin"},"content":"Find all relevent tasks with your given keyword in Duke."},{"lineNumber":136,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":137,"author":{"gitId":"Hzxin"},"content":"Format: `find KEYWORD`"},{"lineNumber":138,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":139,"author":{"gitId":"Hzxin"},"content":"Example:"},{"lineNumber":140,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":141,"author":{"gitId":"Hzxin"},"content":"find meeting"},{"lineNumber":142,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":143,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":144,"author":{"gitId":"Hzxin"},"content":"Expected Outcome:"},{"lineNumber":145,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":146,"author":{"gitId":"Hzxin"},"content":"Here are the matches for your search:"},{"lineNumber":147,"author":{"gitId":"Hzxin"},"content":"[D][ ] 1. team meeting (Jan 22 2021)"},{"lineNumber":148,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":149,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":150,"author":{"gitId":"Hzxin"},"content":"### 8. `clear` - Clear statistics and history."},{"lineNumber":151,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":152,"author":{"gitId":"Hzxin"},"content":"Delete user history file."},{"lineNumber":153,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":154,"author":{"gitId":"Hzxin"},"content":"Format: `clear`"},{"lineNumber":155,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":156,"author":{"gitId":"Hzxin"},"content":"Example:"},{"lineNumber":157,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":158,"author":{"gitId":"Hzxin"},"content":"clear"},{"lineNumber":159,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":160,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":161,"author":{"gitId":"Hzxin"},"content":"Expected Outcome:"},{"lineNumber":162,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":163,"author":{"gitId":"Hzxin"},"content":"Successfully clear statistics"},{"lineNumber":164,"author":{"gitId":"Hzxin"},"content":"(Statistics.txt removed)"},{"lineNumber":165,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":166,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":167,"author":{"gitId":"Hzxin"},"content":"### 9. `bye` - exit Duke"},{"lineNumber":168,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":169,"author":{"gitId":"Hzxin"},"content":"Exit Duke and save your task history."},{"lineNumber":170,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":171,"author":{"gitId":"Hzxin"},"content":"Format: `bye`"},{"lineNumber":172,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":173,"author":{"gitId":"Hzxin"},"content":"Example:"},{"lineNumber":174,"author":{"gitId":"Hzxin"},"content":"```$xslt"},{"lineNumber":175,"author":{"gitId":"Hzxin"},"content":"bye"},{"lineNumber":176,"author":{"gitId":"Hzxin"},"content":"```"},{"lineNumber":177,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":178,"author":{"gitId":"Hzxin"},"content":"Expected Outcome: Application Exits"},{"lineNumber":179,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":180,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":181,"author":{"gitId":"Hzxin"},"content":"## Author"},{"lineNumber":182,"author":{"gitId":"Hzxin"},"content":"Huang Zhenxin"},{"lineNumber":183,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":184,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"Hzxin":178,"-":11}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":":init"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":":win9xME_args"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"@rem Slurp the command line arguments."},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"set _SKIP\u003d2"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":":win9xME_args_slurp"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":":execute"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"@rem Setup the command line"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"@rem Execute Gradle"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":":end"},{"lineNumber":92,"author":{"gitId":"Hzxin"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":95,"author":{"gitId":"Hzxin"},"content":":fail"},{"lineNumber":96,"author":{"gitId":"Hzxin"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":97,"author":{"gitId":"Hzxin"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":98,"author":{"gitId":"Hzxin"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":99,"author":{"gitId":"Hzxin"},"content":"exit /b 1"},{"lineNumber":100,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":101,"author":{"gitId":"Hzxin"},"content":":mainEnd"},{"lineNumber":102,"author":{"gitId":"Hzxin"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":103,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":104,"author":{"gitId":"Hzxin"},"content":":omega"}],"authorContributionMap":{"Hzxin":104}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"rootProject.name \u003d \u0027ip\u0027"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""}],"authorContributionMap":{"Hzxin":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import duke.utils.Statistics;"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":" * Encapsulates the main class of the Object."},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"     * Executes the programs."},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"     * @param args command line arguments key in by user."},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    public static void main(String[] args) {"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"        Statistics.initialize();"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Hzxin":20,"-":1}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainMenu.fxml\"));"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":30}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import duke.utils.Statistics;"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":" * Sub-class of Command that represents and execute the todo, deadline and event instructions of user."},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"public class AddCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"     * Creates a AddCommand object for execution."},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"     * @param instruction user instruction."},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"     * @param task content of the user task."},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"     * @param date date of the user task to be done."},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    public AddCommand(String instruction, String task, String date) {"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"        super(instruction, task, date, false, command -\u003e {"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"            if (instruction.equals(\"todo\")) {"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"                return handleToDo(task);"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"            } else if (instruction.equals(\"deadline\")) {"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"                return handleDeadline(task, date);"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"            } else {"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"                return handleEvent(task, date);"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"        });"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"     * This method handles todo instruction and creates a Todo task."},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"     * @param task content of the user task."},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"    private static String handleToDo(String task) {"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        Todo todo \u003d new Todo(task);"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"        // Update the task list and statistics with the new task."},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        TaskList.addTask(todo);"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"        Statistics.updateStatistics(todo);"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"        return Ui.createAddResponse(todo);"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"     * This method handles deadline instruction and creates a Deadline task."},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"     * @param task content of the user task."},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"    private static String handleDeadline(String task, String date) {"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"        Deadline deadlines \u003d new Deadline(task, date);"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"        // Update the task list and statistics with the new task."},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"        TaskList.addTask(deadlines);"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"        Statistics.updateStatistics(deadlines);"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"        return Ui.createAddResponse(deadlines);"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"     * This method handles event instruction and creates a Event task."},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"     * @param task content of the user task."},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"    private static String handleEvent(String task, String date) {"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"        Event event \u003d new Event(task, date);"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"        // Update the task list and statistics with the new task."},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"        TaskList.addTask(event);"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"        Statistics.updateStatistics(event);"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"        return Ui.createAddResponse(event);"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":76}},{"path":"src/main/java/duke/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import duke.utils.Statistics;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":" * ClearCommand that when executes clear the Past history of tasks."},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"public class ClearCommand extends Command{"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    private static final String NO_TASK \u003d \"\";"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    private static final String NO_DATE \u003d \"\";"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"     * Creates a ClearCommand object that return a response when executed."},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    public ClearCommand() {"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"        super(\"clear\", NO_TASK, NO_DATE, false, command -\u003e handleClearCommand());"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    private static String handleClearCommand() {"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"        Statistics.clear();"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"        return \"Successfully Clear Statistics\";"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":23}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import java.util.function.Function;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":" * This class encapsulates the user instruction,task and date and execute the instruction."},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    private final String instruction;"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    private final String task;"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"    private final String date;"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"    private boolean isExit;"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    private final Function\u003cCommand, String\u003e func;"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"     * Creates a command with user instruction, task, date and a function to execute the instruction."},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"     * @param instruction user instruction."},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"     * @param task content of user task."},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"     * @param date date of the task."},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"     * @param func the function takes a command to execute and returns a response String."},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    public Command(String instruction, String task, String date, boolean isExit, Function\u003cCommand, String\u003e func) {"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"        this.instruction \u003d instruction;"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"        this.task \u003d task;"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"        this.date \u003d date;"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"        this.func \u003d func;"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"     * Executes a command and returns response String."},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"     * @return a response String."},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    public String execute() {"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"        return func.apply(this);"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"    public boolean getIsExitStatus() {"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        return isExit;"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"    public String getTask() {"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        return task;"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"    public String getDate() {"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"        return date;"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":49}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import duke.ui.ErrorBox;"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":" * Sub-class of command that only represents and executes a delete instruction of a user."},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"    private static final String NO_DATE \u003d \"\";"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"     * Creates a DeleteCommand object with given task and date."},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"     * @param task index of the task to be deleted."},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    public DeleteCommand(String task) {"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"        super(\"delete\", task, NO_DATE, false,"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"            command -\u003e handleDelete(task));"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"     * This method handles delete instruction."},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"     * @param task user task in String."},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    private static String handleDelete(String task) {"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"        String response \u003d \"\";"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"            int num \u003d Integer.parseInt(task);"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"            response \u003d TaskList.deleteTask(num);"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"            ErrorBox.display(Ui.KEY_IN_NUMBER);"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"        return response;"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":37}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import duke.ui.ErrorBox;"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":" * Sub-class of Command that represents and executes the done instruction of user."},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"public class DoneCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"    private static final String NO_DATE \u003d \"\";"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"     * Creates a DoneCommand object with the given task."},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"     * @param task content of user task."},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    public DoneCommand(String task) {"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"        super(\"done\", task, NO_DATE, false, command -\u003e handleDone(task));"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"     * This method handles done instruction by marking the task as done."},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"     * @param task name of the user task."},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    private static String handleDone(String task) {"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"        String response \u003d \"\";"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"            int num \u003d Integer.parseInt(task);"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"            response \u003d TaskList.markDone(num);"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"            ErrorBox.display(Ui.KEY_IN_NUMBER);"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"        return response;"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":39}},{"path":"src/main/java/duke/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":" * Sub-class of Command to represents any error in the instruction of user."},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"public class ErrorCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"     * Creates an ErrorCommand object that return error message when executed."},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    public ErrorCommand() {"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"        super(\"\", \"\", \"\", false, command -\u003e Ui.COMMAND_ERROR);"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":16}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":" * Sub-class of command that represents and executes the \"bye\" instruction of user."},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"public class ExitCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    private static final String NO_TASK \u003d \"\";"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    private static final String NO_DATE \u003d \"\";"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"     * Creates an ExitCommand object that exits the program when executed."},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"    public ExitCommand() {"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"        super(\"bye\", NO_TASK, NO_DATE, true, command -\u003e handleBye());"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    private static String handleBye() {"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"        return Ui.FAREWELL;"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":23}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":" * Sub-class of Command to represents and executes the find instruction."},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"public class FindCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    private static final String NO_DATE \u003d \"\";"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"     * Constructs a find command object that finds all relevant tasks with the given task."},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"     * @param task task user want to search for."},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    public FindCommand(String task) {"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"        super(\"find\", task, NO_DATE, false, command -\u003e {"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"            String searchResult \u003d TaskList.findTasks(task);"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"            System.out.println(searchResult);"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"            return searchResult;"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"        });"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":24}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":" * Sub-class of Command that represents and executes the \"list\" instruction of user."},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"public class ListCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"     * Creates a ListCommand object that lists tasks upon execution."},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    public ListCommand() {"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"        super(\"\", \"\", \"\", false, command -\u003e TaskList.listTasks());"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":16}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":" * A class that stores all the possible display of errorsException in Duke."},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":11}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":" * sub-class of Task to represents a task with deadline."},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"     * creates a deadline task object with given task name and given dates/comments."},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"     * @param taskContent String representation of the content of the task."},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"     * @param date     String representation of the comments/dates."},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    public Deadline(String taskContent, String date) {"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"        super(taskContent, date);"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    public Deadline(String taskContent, String date, String done) {"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"        super(taskContent, date, done);"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    public int getType() {"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"        return 2;"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"        return String.format(\"[D][%s] %d. %s ( %s )\", super.getDoneStatus(), super.getIndex(),"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"            super.getTaskName(), super.getDate());"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":33}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":" * A subclass of Task that represent an event key in by user."},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"     * Creates a event Task with given task name and given comments/dates."},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"     * @param taskContent content of the user task in String."},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"     * @param date dates or comments of the user regarding the task."},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    public Event(String taskContent, String date) {"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"        super(taskContent, date);"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    public Event(String taskContent, String date, String done) {"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"        super(taskContent, date, done);"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    public int getType() {"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"        return 3;"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"        return String.format(\"[E][%s] %d. %s ( %s )\", super.getDoneStatus(), super.getIndex(),"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"            super.getTaskName(), super.getDate());"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":33}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":" * A class that stores the task that user key in."},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"    private final String taskName;"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    private int index;"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    private String isDone;"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"    private final String date;"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"     * Constructs a task object with taskName attached and its index label in the taskList."},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"     * @param taskName name of the task."},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    Task(String taskName) {"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"        this.index \u003d TaskList.getTasksSize() + 1;"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"        this.isDone \u003d \" \";"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"        this.date \u003d \"\";"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    Task(String taskName, String isDone, boolean check) {"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"        this.index \u003d TaskList.getTasksSize() + 1;"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"        this.date \u003d \"\";"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    Task(String taskName, String date) {"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"        this.index \u003d TaskList.getTasksSize() + 1;"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"        this.isDone \u003d \" \";"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"        this.date \u003d date;"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"    Task(String taskName, String date, String done) {"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        this.index \u003d TaskList.getTasksSize() + 1;"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"        this.isDone \u003d done;"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"        this.date \u003d date;"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"    public void changeIndex(int i) {"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"        this.index \u003d i;"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"     * Marks the task status as done with the notation X."},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"    public void markDone() {"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"        this.isDone \u003d \"X\";"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"     * Gets the name of the task."},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"     * @return a String representation of the task name."},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"    public String getTaskName() {"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"        return taskName;"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"     * Gets the isDone status of the task."},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"     * @return a String representation of the isDone status (X for done)."},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"    public String getDoneStatus() {"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"        return isDone;"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"     * Gets the index label of the task."},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"     * @return the int representation of the index label."},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"    public int getIndex() {"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"        return index;"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"    public int getType() {"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"        return 0;"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"    public String getDate() {"},{"lineNumber":92,"author":{"gitId":"Hzxin"},"content":"        return date;"},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":95,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":96,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":97,"author":{"gitId":"Hzxin"},"content":"    @Override"},{"lineNumber":98,"author":{"gitId":"Hzxin"},"content":"    public String toString() {"},{"lineNumber":99,"author":{"gitId":"Hzxin"},"content":"        return String.format(\"[%s] %d. %s\", isDone, index, taskName);"},{"lineNumber":100,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":101}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import duke.ui.ErrorBox;"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":" * This class encapsulate a list of Task."},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"     * Add a user task to the list."},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"     * @param task user task keyed in."},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    public static void addTask(Task task) {"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"        tasks.add(task);"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"        assert tasks.size() \u003e\u003d 1 : \"Task is not added successfully\";"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"     * This method marks a task in the list as done."},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"     * @param i index labelling of the task in list."},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    public static String markDone(int i) {"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"        String response \u003d \"\";"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"            response \u003d (Ui.EMPTY_LIST);"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"            Task t \u003d tasks.get(i - 1);"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"            tasks.get(i - 1).markDone();"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"            assert t.getDoneStatus().equals(\"X\") : \"Task is not marked as done successfully\";"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"            response \u003d Ui.doneTask(t);"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"            ErrorBox.display(Ui.TASK_ERROR);"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"        return response;"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"     * This method finds all relevant tasks according to the keyword."},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"     * @param keyword keyword that the user want to search."},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"     * @return the matched tasks according to the keyword in String."},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"    public static String findTasks(String keyword) {"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"        int index \u003d 1;"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"        StringBuilder response \u003d new StringBuilder();"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"        //Finds matching tasks in task list and appends to the response."},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"        for (Task task : tasks) {"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"            String taskName \u003d task.getTaskName();"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"            if (taskName.contains(keyword)) {"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"                String prefix \u003d task.toString().substring(0, 6);"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"                response.append(prefix + \" \" + index + \". \" + task.getTaskName() + task.getDate() + \"\\n\");"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"                index++;"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"        boolean hasMatchTask \u003d response.capacity() \u003e 0;"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"        if (!hasMatchTask) {"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"            response.append(\"~~~~~Sorry ah, no match.~~~~~\");"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"        } else {"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"            response.insert(0, \"Here are the matches for your search: \\n\");"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"        return response.toString();"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"     * This method displays all the tasks in the list."},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"    public static String listTasks() {"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"        StringBuilder response \u003d new StringBuilder();"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"            response.append(Ui.EMPTY_LIST);"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"        //Lists all tasks in the task list and appends them to the response."},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":"        for (Task task : tasks) {"},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":"            if (task \u003d\u003d null) {"},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"                break;"},{"lineNumber":92,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"            System.out.println(task);"},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":"            response.append(task.toString() + \"\\n\");"},{"lineNumber":95,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":97,"author":{"gitId":"Hzxin"},"content":"        return response.toString();"},{"lineNumber":98,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":100,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"Hzxin"},"content":"     * This method delete a task in the task list with the given index."},{"lineNumber":102,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"Hzxin"},"content":"     * @param i the index labelling of the task."},{"lineNumber":104,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"Hzxin"},"content":"    public static String deleteTask(int i) {"},{"lineNumber":106,"author":{"gitId":"Hzxin"},"content":"        String response \u003d \"\";"},{"lineNumber":107,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":108,"author":{"gitId":"Hzxin"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":109,"author":{"gitId":"Hzxin"},"content":"            response \u003d (Ui.EMPTY_LIST);"},{"lineNumber":110,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":112,"author":{"gitId":"Hzxin"},"content":"            Task t \u003d tasks.get(i - 1);"},{"lineNumber":113,"author":{"gitId":"Hzxin"},"content":"            tasks.remove(i - 1);"},{"lineNumber":114,"author":{"gitId":"Hzxin"},"content":"            response \u003d Ui.deleteTask(t);"},{"lineNumber":115,"author":{"gitId":"Hzxin"},"content":"            for (Task task : tasks) {"},{"lineNumber":116,"author":{"gitId":"Hzxin"},"content":"                if (task.getIndex() \u003e i) {"},{"lineNumber":117,"author":{"gitId":"Hzxin"},"content":"                    task.changeIndex(task.getIndex() - 1);"},{"lineNumber":118,"author":{"gitId":"Hzxin"},"content":"                }"},{"lineNumber":119,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"Hzxin"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":121,"author":{"gitId":"Hzxin"},"content":"            ErrorBox.display(Ui.TASK_ERROR);"},{"lineNumber":122,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"Hzxin"},"content":"        return response;"},{"lineNumber":124,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":126,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":127,"author":{"gitId":"Hzxin"},"content":"    public static void clearAllTasks() {"},{"lineNumber":128,"author":{"gitId":"Hzxin"},"content":"        tasks.clear();"},{"lineNumber":129,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":131,"author":{"gitId":"Hzxin"},"content":"    public static List\u003cTask\u003e getTaskList() {"},{"lineNumber":132,"author":{"gitId":"Hzxin"},"content":"        return tasks;"},{"lineNumber":133,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":135,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":136,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"Hzxin"},"content":"     * Obtain the total number of tasks in the list."},{"lineNumber":138,"author":{"gitId":"Hzxin"},"content":"     * @return the number of tasks in the list."},{"lineNumber":139,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"Hzxin"},"content":"    public static int getTasksSize() {"},{"lineNumber":141,"author":{"gitId":"Hzxin"},"content":"        return tasks.size();"},{"lineNumber":142,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":144,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":144}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":" * A sub-class of Task to represents a toDo task key in by user."},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"public class Todo extends Task {"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"     * Creates a Todo object with given taskName."},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"     * @param taskName name of the task in String."},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"    public Todo(String taskName) {"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"        super(taskName);"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"     * Creates a Todo object with given taskName and isDone status."},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"     * @param taskName name of the task."},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"     * @param done String representation of the done status."},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    public Todo(String taskName, String done) {"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"        super(taskName, done, true);"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    public int getType() {"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"        return 1;"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    public String toString() {"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"        return String.format(\"[T][%s] %d. %s\", super.getDoneStatus(), super.getIndex(), super.getTaskName());"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":39}},{"path":"src/main/java/duke/type/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.type;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":" * Encapsulates a CommandType enum class that represents the type of command."},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":" * The class includes seven types: todo, clear, deadline, event, bye, list, delete, done and find."},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"public enum CommandType {"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"    BYE(\"bye\"),"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    CLEAR(\"clear\"),"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    DEADLINE(\"deadline\"),"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"    DELETE(\"delete\"),"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"    DONE(\"done\"),"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    EVENT(\"event\"),"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"    FIND(\"find\"),"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    LIST(\"list\"),"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    TODO(\"todo\");"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    private final String type;"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"     * Constructs a CommandType object with a String representation of the type."},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"     * @param type String representation of the type."},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    CommandType(String type) {"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"        this.type \u003d type;"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"     * Gets the CommandType object from a string representation of the type."},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"     * Returns null if no such object exists."},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"     * @param type a string representing the type."},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"     * @return an CommandType object of the specified type and null if no such object exists."},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    public static CommandType valueOfType(String type) {"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"        for (CommandType t : values()) {"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"            if (t.type.equals(type)) {"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"                return t;"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"        return null;"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":45}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    private HBox hbox;"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    private HBox dialogContainer;"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    private Label dialog;"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    private ImageView displayPicture;"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"            fxmlLoader.load();"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"            e.printStackTrace();"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"        dialog.setText(text);"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"        displayPicture.setImage(img);"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"    private void flip() {"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"        Collections.reverse(tmp);"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"     * Sets the alignment of the Dialog container."},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"     * @param isUser a boolean representing if the dialog box if of the user."},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"    private void setDialogContainerDirection(boolean isUser) {"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"        if (isUser) {"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"            dialogContainer.setAlignment(Pos.CENTER_RIGHT);"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"        } else {"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"            dialogContainer.setAlignment(Pos.CENTER_LEFT);"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"        DialogBox userBox \u003d new DialogBox(text, img);"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"        userBox.setDialogContainerDirection(true);"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"        return userBox;"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"        DialogBox dukeBox \u003d new DialogBox(text, img);"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"        dukeBox.flip();"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"        dukeBox.setDialogContainerDirection(false);"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"        return dukeBox;"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":81}},{"path":"src/main/java/duke/ui/ErrorBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import javafx.geometry.Pos;"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import javafx.stage.Modality;"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":" * Encapsulates an ErrorBox class that deals with and displays exceptions."},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"public class ErrorBox {"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"     * Displays an Error box with the given title and the alert message."},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"     * @param message the main message of the Error."},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    public static void display(String message) {"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"        Stage window \u003d new Stage();"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"        // disable actions in other windows"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"        window.initModality(Modality.APPLICATION_MODAL);"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"        window.setTitle(\"\");"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"        window.setMinWidth(250);"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"        Label errorContent \u003d new Label();"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"        errorContent.setText(message);"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"        errorContent.setWrapText(true);"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"        Button closeButton \u003d new Button(\"Close\");"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        closeButton.setOnAction(e -\u003e window.close());"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"        closeButton.setDefaultButton(true);"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"        VBox layout \u003d new VBox(20);"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"        layout.getChildren().addAll(errorContent, closeButton);"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"        layout.setAlignment(Pos.CENTER);"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"        Scene scene \u003d new Scene(layout, 300, 300);"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        window.setScene(scene);"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"        window.showAndWait();"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":44}},{"path":"src/main/java/duke/ui/MainMenu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.Parent;"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.Button;"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import javafx.stage.Stage;"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":" * Encapsulates an MainMenu class that deals with displaying an alert UI."},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"public class MainMenu {"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    private VBox logoBox;"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    private Label dukeLogo;"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    private Button startButton;"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    private void initialize() {"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        dukeLogo.setText(Ui.LOGO);"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"     * This method transits from current window to the MainWindow."},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"    private void switchWindow() {"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"            Stage stage \u003d (Stage) startButton.getScene().getWindow();"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"            Parent root \u003d FXMLLoader.load(duke.Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"            Scene scene \u003d new Scene(root);"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"            stage.setScene(scene);"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"            stage.show();"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"        } catch (IOException e) {"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"            e.printStackTrace();"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":52}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import duke.utils.Parser;"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import duke.utils.Statistics;"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import duke.utils.TaskStorage;"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import javafx.application.Platform;"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import javafx.fxml.FXML;"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.Button;"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.Label;"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    private HBox TitleBox;"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    private Label AppName;"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    private VBox dialogContainer;"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"    private TextField userInput;"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"    private Button sendButton;"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    private String response;"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cat1.jpg\"));"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cat2.jpg\"));"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    private void initialize() {"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"                DialogBox.getDukeDialog(Ui.GREETING, dukeImage),"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"                DialogBox.getDukeDialog(TaskStorage.loadFiles(), dukeImage),"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"                DialogBox.getDukeDialog(Statistics.getStatistics().toString(), dukeImage)"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"        );"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"    @FXML"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"    private void handleUserInput() {"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"        String userText \u003d userInput.getText();"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"        Parser parser \u003d new Parser(userText);"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"        Command command \u003d parser.parse();"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"        boolean isExit \u003d command.getIsExitStatus();"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"        response \u003d command.execute();"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"        if (isExit) {"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"            );"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"            Platform.exit();"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"        if (!response.equals(\"\")) {"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"                DialogBox.getUserDialog(userText, userImage),"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"            );"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"        } else {"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"                    DialogBox.getDukeDialog(Ui.COMMAND_ERROR, dukeImage)"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"            );"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"        userInput.clear();"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":91}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":" * A class that store all the possible String format for Duke for code simplicity."},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"public class Ui {"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"    public static final String LINEBREAK \u003d \"\\n\";"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"    public static final String LOGO \u003d \"D U K E\";"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    public static final String WRONG_DATE_FORMAT \u003d \"!!!Err, wrong date format.. (yyyy-mm-dd)!!!\";"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"    public static final String KEY_IN_NUMBER \u003d \"!!!!!PLease Lah! Key in number!!!!!!\";"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    public static final String EMPTY_TASK \u003d \"!!!Walao!NO TASK!!!\";"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    public static final String MISSING_DATE \u003d \"Fill ur date lah (add date with / in yyyy-mm-dd format)!\";"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    public static final String COMMAND_ERROR \u003d \"!!I DON\u0027T KNOW WHAT U SAYING BRO!!\";"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    public static final String TASK_ERROR \u003d \"!!!!!!!!!!Walao, no such task!!!!!!!!!\";"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    public static final String SAVE_TO_FILE_ERROR \u003d \"Huh? Where your file?\";"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    public static final String EMPTY_COMMAND \u003d \"!!!Walao, command cannot be empty!!!\";"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    public static final String SUCCESSFUL_SAVE \u003d \"~File Saved Successfully!~\";"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    public static final String FAREWELL \u003d \" I Zao Liao. Don\u0027t Miss Meeeeeee.\";"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    public static final String GREETING \u003d \"** Awww, need help ah? **\";"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    public static final String EMPTY_FILE \u003d \"*Awwww~ You don\u0027t have any history of tasks *\";"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    public static final String SUCESSFUL_LOAD \u003d \"*Sir, here is your past history: *\\n\";"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    public static final String EMPTY_LIST \u003d \"Awwww, there is nothing in the list yet\";"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"     * Display a message to indicate the given task as done."},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"     * @param t the task to be displayed as done."},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    public static String doneTask(Task t) {"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"        return \"Wah~ You done the task: \""},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"                + \" \" + t.toString();"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"     * Display a message to indicate the given task as deleted."},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"     * @param t the task to be displayed as deleted."},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    public static String deleteTask(Task t) {"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        return \"Awww~ You\u0027ve deleted the task: \""},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"                + \" \" + t.toString();"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"     * make a Bigger ChatBox that wrap the name of a given Task."},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"     * @param t task to be wrapped."},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"     * @return the String representation of the task name wrapped in a chatBox."},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"    public static String createAddResponse(Task t) {"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"        return \"Added liao: \""},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"            + t.toString() + Ui.LINEBREAK"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"            + \"You have \" + TaskList.getTasksSize() + \" tasks in the list!\";"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"}"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":""}],"authorContributionMap":{"Hzxin":61}},{"path":"src/main/java/duke/utils/DateAndTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":" * This class processes the date key in by user and converts it to the right format."},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"public class DateAndTime {"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"     * This method converts a yyyy-mm-dd format of date to MMM d yyyy format."},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"     * @param date the String representation of date."},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"     * @return MMM d yyyy format of date and return error message if the given date is in wrong format."},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    public static String convertDateFormat(String date) {"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"        if (isDashFormat(date)) {"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"            try {"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"                LocalDate d1 \u003d LocalDate.parse(date.trim());"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"                return d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"                return Ui.WRONG_DATE_FORMAT;"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"            return Ui.WRONG_DATE_FORMAT;"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    private static boolean isDashFormat(String date) {"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"        String[] dashFormat \u003d date.toLowerCase().split(\"-\", 3);"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"        for (String s : dashFormat) {"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"            if (!isNumeric(s.trim())) {"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"                return false;"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        return true;"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"    private static boolean isNumeric(String strNum) {"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"            Double.parseDouble(strNum);"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"        } catch (NumberFormatException nfe) {"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"            return false;"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"        return true;"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":53}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import duke.command.AddCommand;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import duke.command.DoneCommand;"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import duke.command.ErrorCommand;"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import duke.command.ExitCommand;"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import duke.command.FindCommand;"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import duke.command.ListCommand;"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import duke.command.ClearCommand;"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"import duke.type.CommandType;"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"import duke.ui.ErrorBox;"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"import duke.ui.Ui;"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":" * This class extracts and processes the user input and produce command to be executed after parsing."},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"public class Parser {"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    private final String input;"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    public Parser(String input) {"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"        this.input \u003d input;"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"     * This method processes all the user input and create respective command to be executed."},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"     * @return the respective command to be executed."},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"    public final Command parse() {"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"        String[] validInputs \u003d extractValidInput();"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"        if (validInputs[0] \u003d\u003d null) {"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"            return new ErrorCommand();"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"        String instruction \u003d validInputs[0];"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"        String taskName \u003d validInputs[1];"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        String date \u003d validInputs[2];"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"        Command command;"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"        switch (instruction) {"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        case \"bye\":"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"            command \u003d new ExitCommand();"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"            TaskStorage.writeToFiles();"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"        case \"list\":"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"            command \u003d new ListCommand();"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"            break;"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"        case \"done\":"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"            command \u003d new DoneCommand(taskName);"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"        case \"todo\": case \"deadline\": case \"event\":"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"            command \u003d new AddCommand(instruction, taskName, date);"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"            break;"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"        case \"delete\":"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"            command \u003d new DeleteCommand(taskName);"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"            break;"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"        case \"find\":"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"            command \u003d new FindCommand(taskName);"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"            break;"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"        case \"clear\":"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"            command \u003d new ClearCommand();"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"            break;"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"        default:"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"            command \u003d new ErrorCommand();"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"            break;"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"        return command;"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"     * extracts the command key in by user."},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"     * @param input the input key in by user."},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"     * @return String representation of the command word of the user input."},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"    static String extractInstruction(String input) throws DukeException {"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"        // Split by the first space encountered."},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"        String[] splits \u003d input.trim().toLowerCase().split(\" \", 2);"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"        assert splits.length \u003e\u003d 1 : \"Command cannot be empty!\";"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"        String instruction \u003d splits[0];"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"        //If the instruction is empty then throw exception."},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"        if (input.replaceAll(\" \", \"\").equals(\"\")) {"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"            throw new DukeException(Ui.EMPTY_COMMAND);"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":"        // If the instruction is not any of the known instructions then throw exception."},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"        if (CommandType.valueOfType(instruction) \u003d\u003d null) {"},{"lineNumber":92,"author":{"gitId":"Hzxin"},"content":"            throw new DukeException(Ui.COMMAND_ERROR);"},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":95,"author":{"gitId":"Hzxin"},"content":"        return instruction;"},{"lineNumber":96,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":97,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":99,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"Hzxin"},"content":"     * extracts task name from user input."},{"lineNumber":101,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"Hzxin"},"content":"     * @param input   user input."},{"lineNumber":103,"author":{"gitId":"Hzxin"},"content":"     * @param command user command."},{"lineNumber":104,"author":{"gitId":"Hzxin"},"content":"     * @return the task name if there is one and return empty string if task name empty."},{"lineNumber":105,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"Hzxin"},"content":"    static String extractTask(String input, String command) throws DukeException {"},{"lineNumber":107,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":108,"author":{"gitId":"Hzxin"},"content":"        // Remove instruction from the user Input."},{"lineNumber":109,"author":{"gitId":"Hzxin"},"content":"        String taskInput \u003d input.replaceAll(command, \"\").trim();"},{"lineNumber":110,"author":{"gitId":"Hzxin"},"content":"        String noTask \u003d \"\";"},{"lineNumber":111,"author":{"gitId":"Hzxin"},"content":"        boolean isEmptyTask \u003d taskInput.equals(noTask);"},{"lineNumber":112,"author":{"gitId":"Hzxin"},"content":"        switch (command) {"},{"lineNumber":113,"author":{"gitId":"Hzxin"},"content":"        case \"todo\": case \"find\": case \"done\": case \"delete\":"},{"lineNumber":114,"author":{"gitId":"Hzxin"},"content":"            if (isEmptyTask) {"},{"lineNumber":115,"author":{"gitId":"Hzxin"},"content":"                throw new DukeException(Ui.EMPTY_TASK);"},{"lineNumber":116,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"Hzxin"},"content":"            return taskInput;"},{"lineNumber":118,"author":{"gitId":"Hzxin"},"content":"        case \"deadline\": case \"event\":"},{"lineNumber":119,"author":{"gitId":"Hzxin"},"content":"            if (isEmptyTask) {"},{"lineNumber":120,"author":{"gitId":"Hzxin"},"content":"                throw new DukeException(Ui.EMPTY_TASK);"},{"lineNumber":121,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"Hzxin"},"content":"            return taskInput.split(\"/\")[0];"},{"lineNumber":123,"author":{"gitId":"Hzxin"},"content":"        case \"bye\": case \"list\": case \"clear\":"},{"lineNumber":124,"author":{"gitId":"Hzxin"},"content":"            if (taskInput.length() \u003e 0) {"},{"lineNumber":125,"author":{"gitId":"Hzxin"},"content":"                throw new DukeException(Ui.COMMAND_ERROR);"},{"lineNumber":126,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"Hzxin"},"content":"            return noTask;"},{"lineNumber":128,"author":{"gitId":"Hzxin"},"content":"        default:"},{"lineNumber":129,"author":{"gitId":"Hzxin"},"content":"            return noTask;"},{"lineNumber":130,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":133,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":134,"author":{"gitId":"Hzxin"},"content":"     * This method extracts the date of the task to be done."},{"lineNumber":135,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":136,"author":{"gitId":"Hzxin"},"content":"     * @param input user input."},{"lineNumber":137,"author":{"gitId":"Hzxin"},"content":"     * @param instruction user instruction."},{"lineNumber":138,"author":{"gitId":"Hzxin"},"content":"     * @return the task date in String and return empty if there is no date."},{"lineNumber":139,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"Hzxin"},"content":"    static String extractDate(String input, String instruction) throws DukeException {"},{"lineNumber":141,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":142,"author":{"gitId":"Hzxin"},"content":"        // Remove instruction from the user input to get taskInput."},{"lineNumber":143,"author":{"gitId":"Hzxin"},"content":"        String taskInput \u003d input.replaceAll(instruction, \"\").trim();"},{"lineNumber":144,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":145,"author":{"gitId":"Hzxin"},"content":"        // Split task input by the first / encountered."},{"lineNumber":146,"author":{"gitId":"Hzxin"},"content":"        String[] splitParts \u003d taskInput.split(\"/\", 2);"},{"lineNumber":147,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":148,"author":{"gitId":"Hzxin"},"content":"        boolean hasDate \u003d splitParts.length \u003d\u003d 2;"},{"lineNumber":149,"author":{"gitId":"Hzxin"},"content":"        String noDate \u003d \"\";"},{"lineNumber":150,"author":{"gitId":"Hzxin"},"content":"        if (!hasDate) {"},{"lineNumber":151,"author":{"gitId":"Hzxin"},"content":"            if (instruction.equals(\"deadline\")"},{"lineNumber":152,"author":{"gitId":"Hzxin"},"content":"                    || instruction.equals(\"event\")) {"},{"lineNumber":153,"author":{"gitId":"Hzxin"},"content":"                throw new DukeException(Ui.MISSING_DATE);"},{"lineNumber":154,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"Hzxin"},"content":"            // if the instruction does not require date return no date."},{"lineNumber":156,"author":{"gitId":"Hzxin"},"content":"            return noDate;"},{"lineNumber":157,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":159,"author":{"gitId":"Hzxin"},"content":"        // Convert the date format."},{"lineNumber":160,"author":{"gitId":"Hzxin"},"content":"        String date \u003d DateAndTime.convertDateFormat(splitParts[1]);"},{"lineNumber":161,"author":{"gitId":"Hzxin"},"content":"        if (date.equals(Ui.WRONG_DATE_FORMAT)) {"},{"lineNumber":162,"author":{"gitId":"Hzxin"},"content":"            throw new DukeException(Ui.WRONG_DATE_FORMAT);"},{"lineNumber":163,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"Hzxin"},"content":"        return date;"},{"lineNumber":165,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":167,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":168,"author":{"gitId":"Hzxin"},"content":"     * This method extracts valid input from the user input."},{"lineNumber":169,"author":{"gitId":"Hzxin"},"content":"     * @return a String array that store instruction, taskName and date."},{"lineNumber":170,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"Hzxin"},"content":"    private String[] extractValidInput() {"},{"lineNumber":172,"author":{"gitId":"Hzxin"},"content":"        String instruction;"},{"lineNumber":173,"author":{"gitId":"Hzxin"},"content":"        String taskName;"},{"lineNumber":174,"author":{"gitId":"Hzxin"},"content":"        String date;"},{"lineNumber":175,"author":{"gitId":"Hzxin"},"content":"        String[] validInputs \u003d new String[3];"},{"lineNumber":176,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":177,"author":{"gitId":"Hzxin"},"content":"            instruction \u003d extractInstruction(input);"},{"lineNumber":178,"author":{"gitId":"Hzxin"},"content":"            taskName \u003d extractTask(input, instruction);"},{"lineNumber":179,"author":{"gitId":"Hzxin"},"content":"            date \u003d extractDate(input, instruction);"},{"lineNumber":180,"author":{"gitId":"Hzxin"},"content":"            validInputs[0] \u003d instruction;"},{"lineNumber":181,"author":{"gitId":"Hzxin"},"content":"            validInputs[1] \u003d taskName;"},{"lineNumber":182,"author":{"gitId":"Hzxin"},"content":"            validInputs[2] \u003d date;"},{"lineNumber":183,"author":{"gitId":"Hzxin"},"content":"        } catch (DukeException e) {"},{"lineNumber":184,"author":{"gitId":"Hzxin"},"content":"            ErrorBox.display(e.getMessage());"},{"lineNumber":185,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":187,"author":{"gitId":"Hzxin"},"content":"        return validInputs;"},{"lineNumber":188,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":190,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":190}},{"path":"src/main/java/duke/utils/Statistics.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import duke.ui.ErrorBox;"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import java.io.File;"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import java.io.FileWriter;"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":" * Statistics class that keep track of the number of done tasks;"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"public class Statistics {"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    private static final String DIRECTORY \u003d \"data\";"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    private static final String FILEPATH \u003d \"data/Statistics.txt\";"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    private static int totalTaskHistory \u003d 0;"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    private int numberOfDoneTasks;"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    private int numberOfIncompleteTask;"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    public Statistics (int numberOfDoneTasks, int numberOfIncompleteTask) {"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"        this.numberOfDoneTasks \u003d numberOfDoneTasks;"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"        this.numberOfIncompleteTask \u003d numberOfIncompleteTask;"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"     * Generate the statistics of the current taskList."},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"     * @return the current statistics of the current taskList."},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"    public static Statistics getStatistics() {"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"        int numberOfDoneTasks \u003d 0;"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"        int numberOfIncompleteTasks \u003d 0;"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"        List\u003cTask\u003e tasks \u003d TaskList.getTaskList();"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"        for (Task task : tasks) {"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"            if (task.getDoneStatus().equals(\"X\")) {"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"                numberOfDoneTasks++;"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"            } else {"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"                numberOfIncompleteTasks++;"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"        return new Statistics(numberOfDoneTasks, numberOfIncompleteTasks);"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"     * This method write the Statistics of Duke in Statistics.txt."},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"    public static void updateStatistics(Task task) {"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"        File statsFile \u003d new File(FILEPATH);"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"        if (!statsFile.exists()) {"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"            initialize();"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"        totalTaskHistory++;"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"            FileWriter fw \u003d new FileWriter(FILEPATH, true);"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"            fw.write(reformatTask(task));"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"            fw.close();"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"        } catch (IOException err) {"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"            ErrorBox.display(err.getMessage());"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"     * Reformats the task to be written in file."},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"     * @param task user task."},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"     * @return a different string format of the task."},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"    private static String reformatTask(Task task) {"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"        String taskDisplay \u003d task.toString();"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"        String taskType \u003d taskDisplay.substring(0, 3);"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"        String taskStatus \u003d taskDisplay.substring(3, 6);"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"        String taskContent \u003d taskDisplay.substring(9);"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"        return totalTaskHistory + \"\\n\" + taskType + taskStatus + taskContent + \"\\n\";"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"     * Initializes the statistic file."},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"    public static void initialize() {"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"        File directory \u003d new File(DIRECTORY);"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":"        if (!directory.exists()) {"},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":"            directory.mkdir();"},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"Hzxin"},"content":"        File statisticsFile \u003d new File(FILEPATH);"},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"        if (!statisticsFile.exists()) {"},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":"            try {"},{"lineNumber":95,"author":{"gitId":"Hzxin"},"content":"                File pastRecord \u003d new File(\"data/Duke.txt\");"},{"lineNumber":96,"author":{"gitId":"Hzxin"},"content":"                pastRecord.delete();"},{"lineNumber":97,"author":{"gitId":"Hzxin"},"content":"                pastRecord.createNewFile();"},{"lineNumber":98,"author":{"gitId":"Hzxin"},"content":"                statisticsFile.createNewFile();"},{"lineNumber":99,"author":{"gitId":"Hzxin"},"content":"                FileWriter fw \u003d new FileWriter(FILEPATH);"},{"lineNumber":100,"author":{"gitId":"Hzxin"},"content":"                fw.write(\"Task history: \\n\");"},{"lineNumber":101,"author":{"gitId":"Hzxin"},"content":"                fw.close();"},{"lineNumber":102,"author":{"gitId":"Hzxin"},"content":"            } catch (IOException err) {"},{"lineNumber":103,"author":{"gitId":"Hzxin"},"content":"                err.printStackTrace();"},{"lineNumber":104,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":108,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"Hzxin"},"content":"     * Clear all history in the statistics file."},{"lineNumber":110,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"Hzxin"},"content":"    public static void clear() {"},{"lineNumber":112,"author":{"gitId":"Hzxin"},"content":"        totalTaskHistory \u003d 0;"},{"lineNumber":113,"author":{"gitId":"Hzxin"},"content":"        File file \u003d new File(FILEPATH);"},{"lineNumber":114,"author":{"gitId":"Hzxin"},"content":"        file.delete();"},{"lineNumber":115,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":117,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":118,"author":{"gitId":"Hzxin"},"content":"    @Override"},{"lineNumber":119,"author":{"gitId":"Hzxin"},"content":"    public String toString() {"},{"lineNumber":120,"author":{"gitId":"Hzxin"},"content":"        return String.format(\"You have %d doneTasks and %d incomplete tasks\\n\","},{"lineNumber":121,"author":{"gitId":"Hzxin"},"content":"                numberOfDoneTasks, numberOfIncompleteTask);"},{"lineNumber":122,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":123}},{"path":"src/main/java/duke/utils/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import duke.task.Deadline;"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import duke.task.Event;"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import duke.task.Task;"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import duke.task.TaskList;"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"import duke.task.Todo;"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"import duke.ui.ErrorBox;"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"import duke.ui.Ui;"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":" * This class handles the saving and loading of the taskList to/from a specific FilePath."},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":" */"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"public class TaskStorage {"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    private static final String FILEPATH \u003d \"data/Duke.txt\";"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    private static final String DIRECTORY \u003d \"data\";"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"     * This method writes the content of a taskList to data/Duke.txt."},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"     * @return A string display of a successful save."},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    public static String writeToFiles() {"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"        List\u003cTask\u003e taskList \u003d TaskList.getTaskList();"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"            FileWriter fw \u003d new FileWriter(FILEPATH);"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"            for (Task t : taskList) {"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"                String temp \u003d t.getType() + \"@@\" + t.getDoneStatus()"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"                    + \"@@\" + t.getTaskName() + (t.getDate().equals(\"\")"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"                    ? \"\" : (\"@@\" + t.getDate())) + System.lineSeparator();"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"                fw.write(temp);"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"            fw.close();"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"            taskList.clear();"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"            assert taskList.size() \u003d\u003d 0 : \"TaskList not clear\";"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"        } catch (IOException err) {"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"            ErrorBox.display(err.getMessage());"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"        return Ui.SUCCESSFUL_SAVE;"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"     * This method loads the file from data/Duke.txt and display in a list format when the program starts."},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"     * @return the String display of a successful load."},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"    public static String loadFiles() {"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"        StringBuilder loadContent \u003d new StringBuilder();"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"            File directory \u003d new File(DIRECTORY);"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"            File file \u003d new File(FILEPATH);"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"            if (!directory.exists()) {"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"                directory.mkdir();"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"            assert directory.exists() : \"Directory does not exist\";"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"            if (!file.exists()) {"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"                file.createNewFile();"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"            assert file.exists() : \"File does not exist\";"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"            if (file.length() \u003d\u003d 0) {"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"                return Ui.EMPTY_FILE;"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"            loadContent.append(restoreTask(file));"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"        } catch (IOException e) {"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"            ErrorBox.display(\"IO error!: \" + e.getMessage());"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"        if (loadContent.length() \u003d\u003d 0) {"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"            loadContent.append(Ui.EMPTY_FILE);"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"        } else {"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"            loadContent.insert(0, Ui.SUCESSFUL_LOAD);"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"        return loadContent.toString();"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"Hzxin"},"content":"     * This method restore the task List from Duke.txt."},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"     * @param file Duke.txt that store the user past history of task list."},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":"     * @return the file content in String."},{"lineNumber":95,"author":{"gitId":"Hzxin"},"content":"     * @throws IOException thrown when file is not found."},{"lineNumber":96,"author":{"gitId":"Hzxin"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"Hzxin"},"content":"    private static String restoreTask(File file) throws IOException {"},{"lineNumber":98,"author":{"gitId":"Hzxin"},"content":"        Scanner sc \u003d new Scanner(file);"},{"lineNumber":99,"author":{"gitId":"Hzxin"},"content":"        StringBuilder fileContent \u003d new StringBuilder(\"\");"},{"lineNumber":100,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":101,"author":{"gitId":"Hzxin"},"content":"        //Interpret the file content and add tasks to task list."},{"lineNumber":102,"author":{"gitId":"Hzxin"},"content":"        while (sc.hasNext()) {"},{"lineNumber":103,"author":{"gitId":"Hzxin"},"content":"            String[] line \u003d sc.nextLine().split(\"@@\");"},{"lineNumber":104,"author":{"gitId":"Hzxin"},"content":"            if (line.length \u003d\u003d 3) {"},{"lineNumber":105,"author":{"gitId":"Hzxin"},"content":"                Todo t \u003d new Todo(line[2], line[1]);"},{"lineNumber":106,"author":{"gitId":"Hzxin"},"content":"                TaskList.addTask(t);"},{"lineNumber":107,"author":{"gitId":"Hzxin"},"content":"                fileContent.append(t.toString() + \"\\n\");"},{"lineNumber":108,"author":{"gitId":"Hzxin"},"content":"            } else {"},{"lineNumber":109,"author":{"gitId":"Hzxin"},"content":"                int type \u003d Integer.parseInt(line[0]);"},{"lineNumber":110,"author":{"gitId":"Hzxin"},"content":"                String done \u003d line[1];"},{"lineNumber":111,"author":{"gitId":"Hzxin"},"content":"                String taskName \u003d line[2];"},{"lineNumber":112,"author":{"gitId":"Hzxin"},"content":"                String date \u003d line[3];"},{"lineNumber":113,"author":{"gitId":"Hzxin"},"content":"                Task t \u003d type \u003d\u003d 2 ? new Deadline(taskName, date, done) : new Event(taskName, date, done);"},{"lineNumber":114,"author":{"gitId":"Hzxin"},"content":"                TaskList.addTask(t);"},{"lineNumber":115,"author":{"gitId":"Hzxin"},"content":"                fileContent.append(t.toString() + \"\\n\");"},{"lineNumber":116,"author":{"gitId":"Hzxin"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"Hzxin"},"content":"        sc.close();"},{"lineNumber":119,"author":{"gitId":"Hzxin"},"content":"        return fileContent.toString();"},{"lineNumber":120,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":121}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.effect.ColorAdjust?\u003e"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"\u003cfx:root fx:id\u003d\"hbox\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"380.0\" opacity\u003d\"0.95\" prefWidth\u003d\"400.0\" type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"   \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"      \u003cjavafx.scene.layout.HBox fx:id\u003d\"dialogContainer\" alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"95.0\" prefWidth\u003d\"373.0\"\u003e"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"        \u003cchildren\u003e"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"          \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"1.0\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-border-color: #7bc6cc; -fx-border-width: 2; -fx-border-radius: 10 10 10 10; -fx-background-radius: 10 10 10 10;\" text\u003d\"Label\" textFill\u003d\"#eeeeee\" wrapText\u003d\"true\"\u003e"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"               \u003cfont\u003e"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"                  \u003cFont size\u003d\"14.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"               \u003c/font\u003e"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"               \u003ceffect\u003e"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"                  \u003cColorAdjust brightness\u003d\"-0.02\" /\u003e"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"               \u003c/effect\u003e"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"               \u003cpadding\u003e"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"               \u003c/padding\u003e"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"            \u003c/Label\u003e"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"        \u003c/children\u003e"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"      \u003c/javafx.scene.layout.HBox\u003e"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"102.0\" fitWidth\u003d\"103.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"   \u003c/children\u003e"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"   \u003cpadding\u003e"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"   \u003c/padding\u003e"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Hzxin":32}},{"path":"src/main/resources/view/MainMenu.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"\u003cAnchorPane xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" fx:controller\u003d\"duke.ui.MainMenu\"\u003e"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"   \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"      \u003cVBox fx:id\u003d\"logoBox\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" style\u003d\"-fx-background-color: grey; -fx-border-color: white; -fx-border-width: 6;\"\u003e"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"         \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"            \u003cLabel fx:id\u003d\"dukeLogo\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"360.0\" prefWidth\u003d\"600.0\" style\u003d\"-fx-background-color: grey; -fx-border-color: white;\" text\u003d\"Label\" textFill\u003d\"WHITE\"\u003e"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"               \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"                  \u003cFont size\u003d\"94.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"               \u003c/font\u003e"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"            \u003c/Label\u003e"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"            \u003cButton fx:id\u003d\"startButton\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" mnemonicParsing\u003d\"false\" onAction\u003d\"#switchWindow\" prefHeight\u003d\"39.0\" prefWidth\u003d\"110.0\" style\u003d\"-fx-border-color: grey;\" text\u003d\"Start\" textAlignment\u003d\"CENTER\" textFill\u003d\"#4261bc\" translateX\u003d\"240.0\" underline\u003d\"true\"\u003e"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"               \u003cfont\u003e"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"                  \u003cFont size\u003d\"20.0\" /\u003e"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"               \u003c/font\u003e"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"            \u003c/Button\u003e"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"         \u003c/children\u003e"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"      \u003c/VBox\u003e"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"   \u003c/children\u003e"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Hzxin":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"  \u003cchildren\u003e"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"609.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"32.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"0.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"570.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"29.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" translateY\u003d\"100.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"38.0\" prefHeight\u003d\"631.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-image: url(\u0027images/background.jpg\u0027)url(\u0027images/background.jpg\u0027) url(\u0027images/background.jpg\u0027)url(\u0027images/background.jpg\u0027);\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"      \u003ccontent\u003e"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"630.0\" prefWidth\u003d\"375.0\" style\u003d\"-fx-background-image: url(\u0027images/background.jpg\u0027)url(\u0027images/background.jpg\u0027) url(\u0027images/background.jpg\u0027)url(\u0027images/background.jpg\u0027);\" /\u003e"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"      \u003c/content\u003e"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"      \u003cHBox fx:id\u003d\"TitleBox\" prefHeight\u003d\"700.0\" prefWidth\u003d\"400.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"         \u003cchildren\u003e"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"            \u003cLabel fx:id\u003d\"AppName\" alignment\u003d\"CENTER\" prefHeight\u003d\"25.0\" prefWidth\u003d\"60.0\" style\u003d\"-fx-font-family: Serif;\" text\u003d\"DUKE\" textFill\u003d\"#070707\" translateX\u003d\"175.0\" translateY\u003d\"8.0\"\u003e"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"               \u003cfont\u003e"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"                  \u003cFont size\u003d\"14.0\" /\u003e"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"               \u003c/font\u003e"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"            \u003c/Label\u003e"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"         \u003c/children\u003e"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"      \u003c/HBox\u003e"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"  \u003c/children\u003e"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Hzxin":31}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"class TaskListTest {"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"    void doneTask() {"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"        TaskList.clearAllTasks();"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"        Todo task \u003d new Todo(\"Scratch back\", \" \");"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"        TaskList.addTask(task);"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"        TaskList.markDone(1);"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"        assertEquals(\"X\", task.getDoneStatus());"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    void deleteTask() {"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"        TaskList.clearAllTasks();"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"        Todo task \u003d new Todo(\"Scratch back\", \" \");"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"        TaskList.addTask(task);"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"        TaskList.deleteTask(1);"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"        assertEquals(0, TaskList.getTaskList().size());"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    void listTasks() {"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"        TaskList.clearAllTasks();"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"        Todo todo \u003d new Todo(\"nothing\", \" \");"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"        Deadline deadline \u003d new Deadline(\"Swimming\", \"2019-10-22\", \" \");"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        TaskList.addTask(todo);"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"        TaskList.addTask(deadline);"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"        assertEquals(\"[T][ ] 1. nothing\\n\" +"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"                \"[D][ ] 1. Swimming ( 2019-10-22 )\\n\", TaskList.listTasks());"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":39}},{"path":"src/test/java/duke/utils/DateAndTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"public class DateAndTimeTest {"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"    void converterTest() {"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"        String date \u003d \"2019-10-22\";"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"        String actualOutput \u003d DateAndTime.convertDateFormat(date);"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"        String expectedOutput \u003d \"Oct 22 2019\";"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"        assertEquals(expectedOutput, actualOutput);"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    void converterTest_wrongDateFormat() {"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"        String date \u003d \"2019\";"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"        String actualOutput \u003d DateAndTime.convertDateFormat(date);"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"        String expectedOutput \u003d \"!!!Err, wrong date format.. (yyyy-mm-dd)!!!\";"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"        assertEquals(expectedOutput, actualOutput);"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":26}},{"path":"src/test/java/duke/utils/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"public class ParserTest {"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    void extractInstructionTest() throws DukeException {"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"        String testInput \u003d \"todo swimming\";"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"        String actualInstruction \u003d Parser.extractInstruction(testInput);"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"        assertEquals(\"todo\", actualInstruction);"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    void extractInstruction_emptyInstruction_exception() {"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"            String testInput \u003d \"\";"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"            Parser.extractInstruction(testInput);"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"            fail();"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"        } catch (DukeException e) {"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"            assertEquals(\"!!!Walao, command cannot be empty!!!\", e.getMessage());"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"    void extractInstruction_wrongInstruction_exception() {"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"            String testInput \u003d \"ANYHOW\";"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"            Parser.extractInstruction(testInput);"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"            fail();"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"        } catch (DukeException e) {"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"            assertEquals(\"!!!!!!!I DON\u0027T KNOW WHAT U SAYING BRO!!!!!!!\", e.getMessage());"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"    void extractTaskTest() throws DukeException {"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"        String testInput \u003d \"deadline project/2019-10-22\";"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"        String actualTask \u003d Parser.extractTask(testInput, \"deadline\");"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"        assertEquals(\"project\", actualTask);"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"    void extractTask_emptyTask_exception() {"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"            String testInput \u003d \"deadline \";"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"            Parser.extractTask(testInput, \"deadline\");"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"            fail();"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"        } catch (DukeException e) {"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"            assertEquals(\"!!!!!!!!!Walao!NO TASK!!!!!!!!!!\", e.getMessage());"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"    @Test"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"    void extractDateTest() throws DukeException {"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"        String testInput \u003d \"deadline project /2019-10-22\";"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"        String actualDate \u003d Parser.extractDate(testInput, \"deadline\");"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"        assertEquals(\"Oct 22 2019\", actualDate);"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"    @Test"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"    void extractDate_withoutSlash_exception() {"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"            String testInput \u003d \"deadline project\";"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"            Parser.extractDate(testInput, \"deadline\");"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"            fail();"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"        } catch (DukeException e) {"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"            assertEquals(\"!!!Fill ur date lah (add date with / in yyyy-mm-dd format)!!!\", e.getMessage());"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"    @Test"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"    void extractDate_wrongDateFormat_exception() {"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"        try {"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"            String testInput \u003d \"event project/2019\";"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"            Parser.extractDate(testInput, \"event\");"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"            fail();"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"        } catch (DukeException e) {"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"            assertEquals(\"!!!Err, wrong date format.. (yyyy-mm-dd)!!!\", e.getMessage());"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":90}},{"path":"src/test/java/duke/utils/TaskStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"public class TaskStorageTest {"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"    void writeToFilesTest() {"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"        String actualOutput \u003d TaskStorage.writeToFiles();"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"        String expectedOutput \u003d \"~~~~~~~~~~~File Saved Successfully!~~~~~~~~~~~~\";"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"        assertEquals(actualOutput, expectedOutput);"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    void loadFilesTest() {"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"        String actualOutput \u003d TaskStorage.loadFiles();"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"        String expectedOutput \u003d \"********** Awwww~ You don\u0027t have any history of tasks **********\\n\";"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"        assertEquals(actualOutput, expectedOutput);"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":""},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"}"}],"authorContributionMap":{"Hzxin":24}},{"path":"text-ui-test/data/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"1@@X@@read book"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"1@@ @@swimming"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"2@@X@@project @@Oct 22 2020"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"2@@ @@meeting @@2021-1-2"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"3@@X@@project2 @@2021-1-2"}],"authorContributionMap":{"Hzxin":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"done 1"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"todo swimming"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"deadline project /2020-10-22"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"deadline meeting /2021-1-2"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"done 3"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"list"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"event project /2020-10-22"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"event project2 /2021-1-2"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"done 6"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"list"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"done 10"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"delete 5"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"delete 9"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"bye"}],"authorContributionMap":{"Hzxin":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Hzxin":1,"-":20}}]
