[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"        startChatBot();"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"    * This method initiates the chatbot of the Duke program. It call upon various "},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":"    * classes responsibile for different functionalities of Duke."},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"    public static void startChatBot(){"},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"        ui.greeting();"},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":"        Storage st \u003d new Storage(\"tasklist\");"},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"        TaskList tl \u003d st.loadTaskList();"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"        ui.getInput(tl);"},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"        st.saveTaskList(tl);"},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":33,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":34}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.lang.Exception;"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"public class DukeException extends Exception {"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":"\t"},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"\tpublic DukeException(String message) {"},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":"\t\tsuper(message);"},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"\t}"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":10}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":"    private boolean end;"},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Constructor for the Parser class"},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"    public Parser() {"},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"        end \u003d false;"},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Returns the End object which indicates whether the chatbot has been terminated by the user."},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return boolean object. True - chatbot ended, False - chatbot still running"},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"    public boolean checkEnd() {"},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"        return end;"},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Returns a String object which contains the output from processing user\u0027s input. This method will process"},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"    * the user\u0027s input and perform functions accordingly to the TaskList object supplied in the argument \u003cp\u003e"},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":"    * The in String argument should be a valid command. The following are commands acceptable by the process function:\u003cbr/\u003e"},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cul\u003e"},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cli\u003elist - Displays current list items\u003c/li\u003e"},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cli\u003ebye - Exits Duke program\u003c/li\u003e"},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cli\u003edone \u003cint:number\u003e - Marks item number specified (1-based) as done\u003c/li\u003e"},{"lineNumber":33,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cli\u003etodo \u003cString:name\u003e - Creates an item type of \"todo\" inside TaskList\u003c/li\u003e"},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cli\u003edeadline \u003cString:name\u003e /by \u003cString:date\u003e - Creates an item type of \"deadline\" inside TaskList. The date should be specified in an YYYY-MM-DD format\u003c/li\u003e"},{"lineNumber":35,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cli\u003eevent \u003cString:name\u003e /at \u003cString:date\u003e - Creates an item type of \"event\" inside TaskList. The date should be specified in an YYYY-MM-DD format\u003c/li\u003e"},{"lineNumber":36,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cli\u003edelete \u003cint:number\u003e - Deletes item number specified (1-based)\u003c/li\u003e"},{"lineNumber":37,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003c/ul\u003e"},{"lineNumber":38,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param in the input command entered by user"},{"lineNumber":39,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param TaskList the TaskList object the commands will be processed on"},{"lineNumber":40,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return String object containing results of processing "},{"lineNumber":41,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":42,"author":{"gitId":"sjq-sohjunqi"},"content":"    public String process(String in, TaskList tl){"},{"lineNumber":43,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":44,"author":{"gitId":"sjq-sohjunqi"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"sjq-sohjunqi"},"content":"            "},{"lineNumber":46,"author":{"gitId":"sjq-sohjunqi"},"content":"            String res \u003d \"\";"},{"lineNumber":47,"author":{"gitId":"sjq-sohjunqi"},"content":"            "},{"lineNumber":48,"author":{"gitId":"sjq-sohjunqi"},"content":"            String[] split \u003d in.split(\"\\\\s\");"},{"lineNumber":49,"author":{"gitId":"sjq-sohjunqi"},"content":"            "},{"lineNumber":50,"author":{"gitId":"sjq-sohjunqi"},"content":"            String cmd \u003d split[0];"},{"lineNumber":51,"author":{"gitId":"sjq-sohjunqi"},"content":"            "},{"lineNumber":52,"author":{"gitId":"sjq-sohjunqi"},"content":"            switch(cmd) {"},{"lineNumber":53,"author":{"gitId":"sjq-sohjunqi"},"content":"            case \"bye\":"},{"lineNumber":54,"author":{"gitId":"sjq-sohjunqi"},"content":"                end \u003d true;"},{"lineNumber":55,"author":{"gitId":"sjq-sohjunqi"},"content":"                res \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":56,"author":{"gitId":"sjq-sohjunqi"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"sjq-sohjunqi"},"content":"            case \"list\":"},{"lineNumber":58,"author":{"gitId":"sjq-sohjunqi"},"content":"                res \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":59,"author":{"gitId":"sjq-sohjunqi"},"content":"                res +\u003d tl.printList();"},{"lineNumber":60,"author":{"gitId":"sjq-sohjunqi"},"content":"                break;"},{"lineNumber":61,"author":{"gitId":"sjq-sohjunqi"},"content":"            case \"done\":"},{"lineNumber":62,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (split.length \u003c\u003d 1) {"},{"lineNumber":63,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! A number needs to be specified.\");"},{"lineNumber":64,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":66,"author":{"gitId":"sjq-sohjunqi"},"content":"                try {"},{"lineNumber":67,"author":{"gitId":"sjq-sohjunqi"},"content":"                    Task t \u003d tl.markDone(Integer.parseInt(split[1]));"},{"lineNumber":68,"author":{"gitId":"sjq-sohjunqi"},"content":"                    "},{"lineNumber":69,"author":{"gitId":"sjq-sohjunqi"},"content":"                    res \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"},{"lineNumber":70,"author":{"gitId":"sjq-sohjunqi"},"content":"                    res +\u003d t;"},{"lineNumber":71,"author":{"gitId":"sjq-sohjunqi"},"content":"                } catch(NumberFormatException ne) {"},{"lineNumber":72,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! A number needs to be specified.\");"},{"lineNumber":73,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":75,"author":{"gitId":"sjq-sohjunqi"},"content":"                break;"},{"lineNumber":76,"author":{"gitId":"sjq-sohjunqi"},"content":"            case \"todo\":"},{"lineNumber":77,"author":{"gitId":"sjq-sohjunqi"},"content":"                split \u003d in.split(\"todo\\\\s\");"},{"lineNumber":78,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":79,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (split.length \u003c\u003d 1) {"},{"lineNumber":80,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":81,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":83,"author":{"gitId":"sjq-sohjunqi"},"content":"                Task td \u003d new Task(split[1]);"},{"lineNumber":84,"author":{"gitId":"sjq-sohjunqi"},"content":"                tl.add(td);"},{"lineNumber":85,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":86,"author":{"gitId":"sjq-sohjunqi"},"content":"                res \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":87,"author":{"gitId":"sjq-sohjunqi"},"content":"                res +\u003d td + \"\\n\";"},{"lineNumber":88,"author":{"gitId":"sjq-sohjunqi"},"content":"                res +\u003d \"Now you have \"+tl.count()+\" tasks in the list.\";"},{"lineNumber":89,"author":{"gitId":"sjq-sohjunqi"},"content":"                break;"},{"lineNumber":90,"author":{"gitId":"sjq-sohjunqi"},"content":"            case \"deadline\":"},{"lineNumber":91,"author":{"gitId":"sjq-sohjunqi"},"content":"                split \u003d in.split(\"deadline\\\\s\");"},{"lineNumber":92,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":93,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (split.length \u003c\u003d 1) {"},{"lineNumber":94,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":95,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":96,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":97,"author":{"gitId":"sjq-sohjunqi"},"content":"                split \u003d split[1].split(\"\\\\s/by\\\\s\");"},{"lineNumber":98,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":99,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (split.length \u003c\u003d 1) {"},{"lineNumber":100,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! A date and time is needed.\");"},{"lineNumber":101,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":103,"author":{"gitId":"sjq-sohjunqi"},"content":"                LocalDate dt \u003d LocalDate.now();"},{"lineNumber":104,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":105,"author":{"gitId":"sjq-sohjunqi"},"content":"                try {"},{"lineNumber":106,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":107,"author":{"gitId":"sjq-sohjunqi"},"content":"                    dt \u003d LocalDate.parse(split[1]);"},{"lineNumber":108,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":109,"author":{"gitId":"sjq-sohjunqi"},"content":"                } catch(DateTimeParseException dte) {"},{"lineNumber":110,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! The date format should be in YYYY-MM-DD\");"},{"lineNumber":111,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":112,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":113,"author":{"gitId":"sjq-sohjunqi"},"content":"                Task dl \u003d new Task(split[0], \u0027D\u0027, dt);"},{"lineNumber":114,"author":{"gitId":"sjq-sohjunqi"},"content":"                tl.add(dl);"},{"lineNumber":115,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":116,"author":{"gitId":"sjq-sohjunqi"},"content":"                res \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":117,"author":{"gitId":"sjq-sohjunqi"},"content":"                res +\u003d dl + \"\\n\";"},{"lineNumber":118,"author":{"gitId":"sjq-sohjunqi"},"content":"                res +\u003d \"Now you have \"+tl.count()+\" tasks in the list.\\n\";"},{"lineNumber":119,"author":{"gitId":"sjq-sohjunqi"},"content":"                break;"},{"lineNumber":120,"author":{"gitId":"sjq-sohjunqi"},"content":"            case \"event\":"},{"lineNumber":121,"author":{"gitId":"sjq-sohjunqi"},"content":"                split \u003d in.split(\"event\\\\s\");"},{"lineNumber":122,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":123,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (split.length \u003c\u003d 1) {"},{"lineNumber":124,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"},{"lineNumber":125,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":126,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":127,"author":{"gitId":"sjq-sohjunqi"},"content":"                split \u003d split[1].split(\"\\\\s/at\\\\s\");"},{"lineNumber":128,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":129,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (split.length \u003c\u003d 1) {"},{"lineNumber":130,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! A date and time is needed.\");"},{"lineNumber":131,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":132,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":133,"author":{"gitId":"sjq-sohjunqi"},"content":"                LocalDate dtt \u003d LocalDate.now();"},{"lineNumber":134,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":135,"author":{"gitId":"sjq-sohjunqi"},"content":"                try {"},{"lineNumber":136,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":137,"author":{"gitId":"sjq-sohjunqi"},"content":"                    dtt \u003d LocalDate.parse(split[1]);"},{"lineNumber":138,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":139,"author":{"gitId":"sjq-sohjunqi"},"content":"                } catch(DateTimeParseException e) {"},{"lineNumber":140,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! The date format should be in YYYY-MM-DD\");"},{"lineNumber":141,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":142,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":143,"author":{"gitId":"sjq-sohjunqi"},"content":"                Task ev \u003d new Task(split[0], \u0027E\u0027, dtt);"},{"lineNumber":144,"author":{"gitId":"sjq-sohjunqi"},"content":"                tl.add(ev);"},{"lineNumber":145,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":146,"author":{"gitId":"sjq-sohjunqi"},"content":"                res \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":147,"author":{"gitId":"sjq-sohjunqi"},"content":"                res +\u003d ev + \"\\n\";"},{"lineNumber":148,"author":{"gitId":"sjq-sohjunqi"},"content":"                res +\u003d \"Now you have \"+tl.count()+\" tasks in the list.\\n\";"},{"lineNumber":149,"author":{"gitId":"sjq-sohjunqi"},"content":"                break;"},{"lineNumber":150,"author":{"gitId":"sjq-sohjunqi"},"content":"            case \"delete\":"},{"lineNumber":151,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (split.length \u003c\u003d 1) {"},{"lineNumber":152,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! A number needs to be specified.\");"},{"lineNumber":153,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":154,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":155,"author":{"gitId":"sjq-sohjunqi"},"content":"                try {"},{"lineNumber":156,"author":{"gitId":"sjq-sohjunqi"},"content":"                    Task t \u003d tl.remove(Integer.parseInt(split[1]));"},{"lineNumber":157,"author":{"gitId":"sjq-sohjunqi"},"content":"                    "},{"lineNumber":158,"author":{"gitId":"sjq-sohjunqi"},"content":"                    res \u003d \"Noted. I\u0027ve removed this task\\n\";"},{"lineNumber":159,"author":{"gitId":"sjq-sohjunqi"},"content":"                    res +\u003d t + \"\\n\";"},{"lineNumber":160,"author":{"gitId":"sjq-sohjunqi"},"content":"                    res +\u003d \"Now you have \"+tl.count()+\" tasks in the list.\\n\";"},{"lineNumber":161,"author":{"gitId":"sjq-sohjunqi"},"content":"                } catch(NumberFormatException ne) {"},{"lineNumber":162,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! A number needs to be specified.\");"},{"lineNumber":163,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":164,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":165,"author":{"gitId":"sjq-sohjunqi"},"content":"                break;"},{"lineNumber":166,"author":{"gitId":"sjq-sohjunqi"},"content":"            case \"find\":"},{"lineNumber":167,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (split.length \u003c\u003d 1) {"},{"lineNumber":168,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! A search term needs to be specified.\");"},{"lineNumber":169,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":170,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":171,"author":{"gitId":"sjq-sohjunqi"},"content":"                String searchTerm \u003d split[1];"},{"lineNumber":172,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":173,"author":{"gitId":"sjq-sohjunqi"},"content":"                TaskList searchList \u003d new TaskList();"},{"lineNumber":174,"author":{"gitId":"sjq-sohjunqi"},"content":"                for (int i \u003d 0; i \u003c tl.count(); i++) {"},{"lineNumber":175,"author":{"gitId":"sjq-sohjunqi"},"content":"                    Task t \u003d tl.getTask(i);"},{"lineNumber":176,"author":{"gitId":"sjq-sohjunqi"},"content":"                    "},{"lineNumber":177,"author":{"gitId":"sjq-sohjunqi"},"content":"                    if (t.getName().contains(searchTerm)) {"},{"lineNumber":178,"author":{"gitId":"sjq-sohjunqi"},"content":"                        searchList.add(t);"},{"lineNumber":179,"author":{"gitId":"sjq-sohjunqi"},"content":"                        continue;"},{"lineNumber":180,"author":{"gitId":"sjq-sohjunqi"},"content":"                    }"},{"lineNumber":181,"author":{"gitId":"sjq-sohjunqi"},"content":"                    "},{"lineNumber":182,"author":{"gitId":"sjq-sohjunqi"},"content":"                    if (t.getType() \u003d\u003d \u0027D\u0027 || t.getType() \u003d\u003d \u0027E\u0027) {"},{"lineNumber":183,"author":{"gitId":"sjq-sohjunqi"},"content":"                        if (t.getDate().contains(searchTerm)) {"},{"lineNumber":184,"author":{"gitId":"sjq-sohjunqi"},"content":"                            searchList.add(t);"},{"lineNumber":185,"author":{"gitId":"sjq-sohjunqi"},"content":"                            continue;"},{"lineNumber":186,"author":{"gitId":"sjq-sohjunqi"},"content":"                        }"},{"lineNumber":187,"author":{"gitId":"sjq-sohjunqi"},"content":"                    }"},{"lineNumber":188,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":189,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":190,"author":{"gitId":"sjq-sohjunqi"},"content":"                res \u003d \"Here are the matching task in your list:\\n\";"},{"lineNumber":191,"author":{"gitId":"sjq-sohjunqi"},"content":"                res +\u003d searchList.printList();"},{"lineNumber":192,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":193,"author":{"gitId":"sjq-sohjunqi"},"content":"                break;"},{"lineNumber":194,"author":{"gitId":"sjq-sohjunqi"},"content":"            default:"},{"lineNumber":195,"author":{"gitId":"sjq-sohjunqi"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":196,"author":{"gitId":"sjq-sohjunqi"},"content":"                    "},{"lineNumber":197,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":198,"author":{"gitId":"sjq-sohjunqi"},"content":"            "},{"lineNumber":199,"author":{"gitId":"sjq-sohjunqi"},"content":"            return res;"},{"lineNumber":200,"author":{"gitId":"sjq-sohjunqi"},"content":"            "},{"lineNumber":201,"author":{"gitId":"sjq-sohjunqi"},"content":"        } catch(DukeException de) {"},{"lineNumber":202,"author":{"gitId":"sjq-sohjunqi"},"content":"            return de.getMessage();"},{"lineNumber":203,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":205,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":206,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":208,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":208}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.io.BufferedReader;"},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"    private File file;"},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Constructor for the Storage class. The filename argument will be used to create file for storing "},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":"    * and retrieving the user\u0027s TaskList."},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param filename the name of the file to save TaskList information"},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"    public Storage(String filename) {"},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"        file \u003d new File(filename);"},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Returns the TaskList object previously saved by the chatbot when the user terminates the program."},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return TaskList object"},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"    public TaskList loadTaskList() {"},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (file.createNewFile()) {"},{"lineNumber":33,"author":{"gitId":"sjq-sohjunqi"},"content":"                return new TaskList();"},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":"            } else {"},{"lineNumber":35,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":36,"author":{"gitId":"sjq-sohjunqi"},"content":"                BufferedReader br \u003d new BufferedReader(new FileReader(file));"},{"lineNumber":37,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":38,"author":{"gitId":"sjq-sohjunqi"},"content":"                TaskList tl \u003d new TaskList();"},{"lineNumber":39,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":40,"author":{"gitId":"sjq-sohjunqi"},"content":"                String line;"},{"lineNumber":41,"author":{"gitId":"sjq-sohjunqi"},"content":"                while((line \u003d br.readLine()) !\u003d null) {"},{"lineNumber":42,"author":{"gitId":"sjq-sohjunqi"},"content":"                    String[] split \u003d line.split(\"\\\\|\");"},{"lineNumber":43,"author":{"gitId":"sjq-sohjunqi"},"content":"                    "},{"lineNumber":44,"author":{"gitId":"sjq-sohjunqi"},"content":"                    // Create new task for each line"},{"lineNumber":45,"author":{"gitId":"sjq-sohjunqi"},"content":"                    char type \u003d split[0].charAt(0);"},{"lineNumber":46,"author":{"gitId":"sjq-sohjunqi"},"content":"                    "},{"lineNumber":47,"author":{"gitId":"sjq-sohjunqi"},"content":"                    boolean done \u003d false;"},{"lineNumber":48,"author":{"gitId":"sjq-sohjunqi"},"content":"                    if (split[1].equals(\"D\")) {"},{"lineNumber":49,"author":{"gitId":"sjq-sohjunqi"},"content":"                        done \u003d true;"},{"lineNumber":50,"author":{"gitId":"sjq-sohjunqi"},"content":"                    }"},{"lineNumber":51,"author":{"gitId":"sjq-sohjunqi"},"content":"                    "},{"lineNumber":52,"author":{"gitId":"sjq-sohjunqi"},"content":"                    String name \u003d split[2];"},{"lineNumber":53,"author":{"gitId":"sjq-sohjunqi"},"content":"                    "},{"lineNumber":54,"author":{"gitId":"sjq-sohjunqi"},"content":"                    if (type \u003d\u003d \u0027D\u0027 || type \u003d\u003d \u0027E\u0027) {"},{"lineNumber":55,"author":{"gitId":"sjq-sohjunqi"},"content":"                        LocalDate dateTime \u003d LocalDate.parse(split[3]);"},{"lineNumber":56,"author":{"gitId":"sjq-sohjunqi"},"content":"                        "},{"lineNumber":57,"author":{"gitId":"sjq-sohjunqi"},"content":"                        Task t \u003d new Task(name, type, dateTime);"},{"lineNumber":58,"author":{"gitId":"sjq-sohjunqi"},"content":"                        if (done)"},{"lineNumber":59,"author":{"gitId":"sjq-sohjunqi"},"content":"                            t.mark();"},{"lineNumber":60,"author":{"gitId":"sjq-sohjunqi"},"content":"                        "},{"lineNumber":61,"author":{"gitId":"sjq-sohjunqi"},"content":"                        tl.add(t);"},{"lineNumber":62,"author":{"gitId":"sjq-sohjunqi"},"content":"                        "},{"lineNumber":63,"author":{"gitId":"sjq-sohjunqi"},"content":"                    } else {"},{"lineNumber":64,"author":{"gitId":"sjq-sohjunqi"},"content":"                        Task t \u003d new Task(name);"},{"lineNumber":65,"author":{"gitId":"sjq-sohjunqi"},"content":"                        if (done)"},{"lineNumber":66,"author":{"gitId":"sjq-sohjunqi"},"content":"                            t.mark();"},{"lineNumber":67,"author":{"gitId":"sjq-sohjunqi"},"content":"                        "},{"lineNumber":68,"author":{"gitId":"sjq-sohjunqi"},"content":"                        tl.add(t);"},{"lineNumber":69,"author":{"gitId":"sjq-sohjunqi"},"content":"                    }"},{"lineNumber":70,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":72,"author":{"gitId":"sjq-sohjunqi"},"content":"                return tl;"},{"lineNumber":73,"author":{"gitId":"sjq-sohjunqi"},"content":"                    "},{"lineNumber":74,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":75,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"sjq-sohjunqi"},"content":"            "},{"lineNumber":77,"author":{"gitId":"sjq-sohjunqi"},"content":"        } catch(IOException e) {"},{"lineNumber":78,"author":{"gitId":"sjq-sohjunqi"},"content":"            System.out.println(e.toString());"},{"lineNumber":79,"author":{"gitId":"sjq-sohjunqi"},"content":"            return new TaskList();"},{"lineNumber":80,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":82,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":84,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Saves the TaskList object provided in the argument into the file created by the constructor of this class."},{"lineNumber":86,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param TaskList object to be saved"},{"lineNumber":87,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":88,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void saveTaskList(TaskList tl){"},{"lineNumber":89,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":90,"author":{"gitId":"sjq-sohjunqi"},"content":"        try {"},{"lineNumber":91,"author":{"gitId":"sjq-sohjunqi"},"content":"            FileWriter fw \u003d new FileWriter(file, false);"},{"lineNumber":92,"author":{"gitId":"sjq-sohjunqi"},"content":"            "},{"lineNumber":93,"author":{"gitId":"sjq-sohjunqi"},"content":"            for (int i \u003d 0; i \u003c tl.count(); i++) {"},{"lineNumber":94,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":95,"author":{"gitId":"sjq-sohjunqi"},"content":"                Task t \u003d tl.getTask(i);"},{"lineNumber":96,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":97,"author":{"gitId":"sjq-sohjunqi"},"content":"                String line \u003d \"\" + t.getType() + \"|\";"},{"lineNumber":98,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (t.getDone()) {"},{"lineNumber":99,"author":{"gitId":"sjq-sohjunqi"},"content":"                    line +\u003d \"D|\";"},{"lineNumber":100,"author":{"gitId":"sjq-sohjunqi"},"content":"                } else {"},{"lineNumber":101,"author":{"gitId":"sjq-sohjunqi"},"content":"                    line +\u003d \"ND|\";"},{"lineNumber":102,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":103,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":104,"author":{"gitId":"sjq-sohjunqi"},"content":"                line +\u003d t.getName();"},{"lineNumber":105,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":106,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (t.getType() \u003d\u003d \u0027D\u0027 | t.getType() \u003d\u003d \u0027E\u0027) {"},{"lineNumber":107,"author":{"gitId":"sjq-sohjunqi"},"content":"                    line +\u003d \"|\" + t.getDate();"},{"lineNumber":108,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":109,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":110,"author":{"gitId":"sjq-sohjunqi"},"content":"                line +\u003d \"\\n\";"},{"lineNumber":111,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":112,"author":{"gitId":"sjq-sohjunqi"},"content":"                fw.write(line);"},{"lineNumber":113,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":114,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"sjq-sohjunqi"},"content":"            "},{"lineNumber":116,"author":{"gitId":"sjq-sohjunqi"},"content":"            fw.flush();"},{"lineNumber":117,"author":{"gitId":"sjq-sohjunqi"},"content":"            fw.close();"},{"lineNumber":118,"author":{"gitId":"sjq-sohjunqi"},"content":"            "},{"lineNumber":119,"author":{"gitId":"sjq-sohjunqi"},"content":"        } catch (IOException e) {"},{"lineNumber":120,"author":{"gitId":"sjq-sohjunqi"},"content":"            System.out.println(\"Error writing to file!\");"},{"lineNumber":121,"author":{"gitId":"sjq-sohjunqi"},"content":"            "},{"lineNumber":122,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":124,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":126,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":126}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"    private String name;"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"    private char type;"},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":"    private LocalDate dateTime;"},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"    private boolean done;"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Constructor for the Task class. This constructor is used to create Tasks of types Event and Deadline."},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cp\u003eAll tasks created are not done initially."},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param n the name of the task"},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param t the type of the task (\u0027D\u0027 for deadline and \u0027E\u0027 for event)"},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param dt the date of the deadline or event"},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"    public Task(String n, char t, LocalDate dt) {"},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"        name \u003d n;"},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":"        type \u003d t;"},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":"        dateTime \u003d dt;"},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"        done \u003d false;"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Constructor for the Task class. This constructor is used to create Tasks of type Todo."},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cp\u003eAll tasks created are not done initially."},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param n the name of the Todo task"},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":33,"author":{"gitId":"sjq-sohjunqi"},"content":"    public Task(String n) {"},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":"        name \u003d n;"},{"lineNumber":35,"author":{"gitId":"sjq-sohjunqi"},"content":"        type \u003d \u0027T\u0027;"},{"lineNumber":36,"author":{"gitId":"sjq-sohjunqi"},"content":"        done \u003d false;"},{"lineNumber":37,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":39,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Getter for the type of the Task object"},{"lineNumber":41,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Type of Task. \u0027T\u0027 - Todo, \u0027E\u0027 - Event, \u0027D\u0027 - Deadline."},{"lineNumber":42,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":43,"author":{"gitId":"sjq-sohjunqi"},"content":"    public char getType() {"},{"lineNumber":44,"author":{"gitId":"sjq-sohjunqi"},"content":"        return type;"},{"lineNumber":45,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":47,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Getter for the name of the Task object"},{"lineNumber":49,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Name of task."},{"lineNumber":50,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":51,"author":{"gitId":"sjq-sohjunqi"},"content":"    public String getName() {"},{"lineNumber":52,"author":{"gitId":"sjq-sohjunqi"},"content":"        return name;"},{"lineNumber":53,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":55,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Getter for the Date of the Task object. Returns null when object is of todo type."},{"lineNumber":57,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Date of task."},{"lineNumber":58,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":59,"author":{"gitId":"sjq-sohjunqi"},"content":"    public String getDate() {"},{"lineNumber":60,"author":{"gitId":"sjq-sohjunqi"},"content":"        return dateTime.toString();"},{"lineNumber":61,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":63,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Indicates whether Task object has been marked as done."},{"lineNumber":65,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Whether Task is marked done."},{"lineNumber":66,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":67,"author":{"gitId":"sjq-sohjunqi"},"content":"    public boolean getDone() {"},{"lineNumber":68,"author":{"gitId":"sjq-sohjunqi"},"content":"        return done;"},{"lineNumber":69,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":71,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Sets the Task as done"},{"lineNumber":73,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":74,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void mark() {"},{"lineNumber":75,"author":{"gitId":"sjq-sohjunqi"},"content":"        done \u003d true;"},{"lineNumber":76,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":78,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"sjq-sohjunqi"},"content":"    * This method checks whether the two Task objects are the same."},{"lineNumber":80,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param t Task object to be compared"},{"lineNumber":81,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Whether the Task object is same"},{"lineNumber":82,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":83,"author":{"gitId":"sjq-sohjunqi"},"content":"    public boolean equals(Task t) {"},{"lineNumber":84,"author":{"gitId":"sjq-sohjunqi"},"content":"        if (this.type \u003d\u003d t.type) {"},{"lineNumber":85,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (!this.name.equals(t.name))"},{"lineNumber":86,"author":{"gitId":"sjq-sohjunqi"},"content":"                return false;"},{"lineNumber":87,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":88,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (this.type \u003d\u003d \u0027D\u0027 || this.type \u003d\u003d \u0027E\u0027) {"},{"lineNumber":89,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (this.dateTime.compareTo(t.dateTime) !\u003d 0)"},{"lineNumber":90,"author":{"gitId":"sjq-sohjunqi"},"content":"                    return false;"},{"lineNumber":91,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":93,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (this.done !\u003d t.done)"},{"lineNumber":94,"author":{"gitId":"sjq-sohjunqi"},"content":"                return false;"},{"lineNumber":95,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":96,"author":{"gitId":"sjq-sohjunqi"},"content":"            return true;"},{"lineNumber":97,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":98,"author":{"gitId":"sjq-sohjunqi"},"content":"        } else {"},{"lineNumber":99,"author":{"gitId":"sjq-sohjunqi"},"content":"            return false;"},{"lineNumber":100,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":103,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"sjq-sohjunqi"},"content":"    * This method returns a String object listing the properties of the Task."},{"lineNumber":105,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Properties of the Task"},{"lineNumber":106,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":107,"author":{"gitId":"sjq-sohjunqi"},"content":"    public String toString() {"},{"lineNumber":108,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":109,"author":{"gitId":"sjq-sohjunqi"},"content":"        String str \u003d \"[\"+type+\"]\";"},{"lineNumber":110,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":111,"author":{"gitId":"sjq-sohjunqi"},"content":"        if (done)"},{"lineNumber":112,"author":{"gitId":"sjq-sohjunqi"},"content":"            str +\u003d \"[X] \"+name;"},{"lineNumber":113,"author":{"gitId":"sjq-sohjunqi"},"content":"        else"},{"lineNumber":114,"author":{"gitId":"sjq-sohjunqi"},"content":"            str +\u003d \"[ ] \"+name;"},{"lineNumber":115,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":116,"author":{"gitId":"sjq-sohjunqi"},"content":"        switch (type) {"},{"lineNumber":117,"author":{"gitId":"sjq-sohjunqi"},"content":"        case \u0027D\u0027:"},{"lineNumber":118,"author":{"gitId":"sjq-sohjunqi"},"content":"            str +\u003d \" (by: \"+dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))+\")\";"},{"lineNumber":119,"author":{"gitId":"sjq-sohjunqi"},"content":"            break;"},{"lineNumber":120,"author":{"gitId":"sjq-sohjunqi"},"content":"        case \u0027E\u0027:"},{"lineNumber":121,"author":{"gitId":"sjq-sohjunqi"},"content":"            str +\u003d \" (at: \"+dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))+\")\";"},{"lineNumber":122,"author":{"gitId":"sjq-sohjunqi"},"content":"            break;"},{"lineNumber":123,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":125,"author":{"gitId":"sjq-sohjunqi"},"content":"        return str;"},{"lineNumber":126,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":127,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":128}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"    private List\u003cTask\u003e taskList;"},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Constructor for the TaskList class."},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"    public TaskList(){"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"        taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":"    * This method returns a String containing the items inside the TaskList."},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return List of items in list"},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"    public String printList() {"},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"        String res \u003d \"\";"},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":"            res +\u003d (i+1)+\". \"+taskList.get(i)+\"\\n\";"},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"        return res;"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"    * This method adds a Task object into the TaskList."},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param t Task to be added into TaskList"},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void add(Task t) {"},{"lineNumber":33,"author":{"gitId":"sjq-sohjunqi"},"content":"        taskList.add(t);"},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":36,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"sjq-sohjunqi"},"content":"    * This method removes a Task object from the TaskList based on the item number and returns it."},{"lineNumber":38,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param i Index of task to be removed"},{"lineNumber":39,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Task object removed from the list"},{"lineNumber":40,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":41,"author":{"gitId":"sjq-sohjunqi"},"content":"    public Task remove(int i) throws DukeException{"},{"lineNumber":42,"author":{"gitId":"sjq-sohjunqi"},"content":"        if (i \u003c\u003d 0 || i \u003e taskList.size()) {"},{"lineNumber":43,"author":{"gitId":"sjq-sohjunqi"},"content":"            throw new DukeException(\"OOPS!!! There is no item at that position.\");"},{"lineNumber":44,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":46,"author":{"gitId":"sjq-sohjunqi"},"content":"        Task t \u003d taskList.remove(i-1);"},{"lineNumber":47,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":48,"author":{"gitId":"sjq-sohjunqi"},"content":"        return t;"},{"lineNumber":49,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":51,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"sjq-sohjunqi"},"content":"    * This method marks a Task object from the TaskList, based on the item number, as done and returns it."},{"lineNumber":53,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param i Index of task to be marked done"},{"lineNumber":54,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Task object marked done"},{"lineNumber":55,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":56,"author":{"gitId":"sjq-sohjunqi"},"content":"    public Task markDone(int i) throws DukeException{"},{"lineNumber":57,"author":{"gitId":"sjq-sohjunqi"},"content":"        if (i \u003c\u003d 0 || i \u003e taskList.size()) {"},{"lineNumber":58,"author":{"gitId":"sjq-sohjunqi"},"content":"            throw new DukeException(\"OOPS!!! There is no item at that position.\");"},{"lineNumber":59,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":61,"author":{"gitId":"sjq-sohjunqi"},"content":"        Task t \u003d taskList.get(i-1);"},{"lineNumber":62,"author":{"gitId":"sjq-sohjunqi"},"content":"        t.mark();"},{"lineNumber":63,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":64,"author":{"gitId":"sjq-sohjunqi"},"content":"        return t;"},{"lineNumber":65,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":67,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Returns the size of the TaskList."},{"lineNumber":69,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Size of TaskList"},{"lineNumber":70,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":71,"author":{"gitId":"sjq-sohjunqi"},"content":"    public int count() {"},{"lineNumber":72,"author":{"gitId":"sjq-sohjunqi"},"content":"        return taskList.size();"},{"lineNumber":73,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":75,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Returns the Task at the item number."},{"lineNumber":77,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param i Item number of the Task"},{"lineNumber":78,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Task object"},{"lineNumber":79,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":80,"author":{"gitId":"sjq-sohjunqi"},"content":"    public Task getTask(int i) {"},{"lineNumber":81,"author":{"gitId":"sjq-sohjunqi"},"content":"        return taskList.get(i);"},{"lineNumber":82,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":84,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"sjq-sohjunqi"},"content":"    * This method checks whether the two TaskList objects are the same."},{"lineNumber":86,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param tl TaskList object to be compared"},{"lineNumber":87,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Whether the TaskList object is same"},{"lineNumber":88,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":89,"author":{"gitId":"sjq-sohjunqi"},"content":"    public boolean equals(TaskList tl) {"},{"lineNumber":90,"author":{"gitId":"sjq-sohjunqi"},"content":"        if (this.count() \u003d\u003d tl.count()) {"},{"lineNumber":91,"author":{"gitId":"sjq-sohjunqi"},"content":"            for (int i \u003d 0; i \u003c this.count(); i++) {"},{"lineNumber":92,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (!this.taskList.get(i).equals(tl.getTask(i)))"},{"lineNumber":93,"author":{"gitId":"sjq-sohjunqi"},"content":"                    return false;"},{"lineNumber":94,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"sjq-sohjunqi"},"content":"            return true;"},{"lineNumber":96,"author":{"gitId":"sjq-sohjunqi"},"content":"        } else {"},{"lineNumber":97,"author":{"gitId":"sjq-sohjunqi"},"content":"            return false;"},{"lineNumber":98,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":101,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":101}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":"    private Parser p;"},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Constructor for the Ui class."},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":"    public Ui() {"},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"        p \u003d new Parser();"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Prints the greeting for the chatbot."},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void greeting() {"},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Gets the input of the user and passes it to the Parser for processing"},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param tl TaskList to be perform the commands on"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void getInput(TaskList tl) {"},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":"        String in \u003d sc.nextLine();"},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":"        String out \u003d p.process(in, tl);"},{"lineNumber":33,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":"        while (!p.checkEnd()) {"},{"lineNumber":35,"author":{"gitId":"sjq-sohjunqi"},"content":"            System.out.println(out);"},{"lineNumber":36,"author":{"gitId":"sjq-sohjunqi"},"content":"            "},{"lineNumber":37,"author":{"gitId":"sjq-sohjunqi"},"content":"            in \u003d sc.nextLine();"},{"lineNumber":38,"author":{"gitId":"sjq-sohjunqi"},"content":"            out \u003d p.process(in, tl);"},{"lineNumber":39,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":41,"author":{"gitId":"sjq-sohjunqi"},"content":"        System.out.println(out);"},{"lineNumber":42,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":43,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"sjq-sohjunqi"},"content":"   "},{"lineNumber":45,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":45}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"import duke.*;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"public class DukeTest {"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void testSave() {"},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"        TaskList tl \u003d new TaskList();"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 1\"));"},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 2\", \u0027D\u0027, LocalDate.now()));"},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 3\", \u0027E\u0027, LocalDate.now()));"},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":"        Storage st \u003d new Storage(\"tasklist2\");"},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":"        st.saveTaskList(tl);"},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"        TaskList newTl \u003d st.loadTaskList();"},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"        assertEquals(true, tl.equals(newTl));"},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void testDelete() {"},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"       TaskList tl \u003d new TaskList();"},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 1\"));"},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 2\", \u0027D\u0027, LocalDate.now()));"},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 3\", \u0027E\u0027, LocalDate.now()));"},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":"        TaskList newTl \u003d new TaskList();"},{"lineNumber":33,"author":{"gitId":"sjq-sohjunqi"},"content":"        newTl.add(new Task(\"list 1\"));"},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":"        newTl.add(new Task(\"list 3\", \u0027E\u0027, LocalDate.now()));"},{"lineNumber":35,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":36,"author":{"gitId":"sjq-sohjunqi"},"content":"        Parser p \u003d new Parser();"},{"lineNumber":37,"author":{"gitId":"sjq-sohjunqi"},"content":"        p.process(\"delete 2\", tl);"},{"lineNumber":38,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":39,"author":{"gitId":"sjq-sohjunqi"},"content":"        assertEquals(true, tl.equals(newTl));"},{"lineNumber":40,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":41,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":43,"author":{"gitId":"sjq-sohjunqi"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void testAdd() {"},{"lineNumber":45,"author":{"gitId":"sjq-sohjunqi"},"content":"        LocalDate ld \u003d LocalDate.parse(\"2020-01-05\");"},{"lineNumber":46,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":47,"author":{"gitId":"sjq-sohjunqi"},"content":"        TaskList tl \u003d new TaskList();"},{"lineNumber":48,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 1\"));"},{"lineNumber":49,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 2\", \u0027D\u0027, ld));"},{"lineNumber":50,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 3\", \u0027E\u0027, ld));"},{"lineNumber":51,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":52,"author":{"gitId":"sjq-sohjunqi"},"content":"        TaskList newTl \u003d new TaskList();"},{"lineNumber":53,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":54,"author":{"gitId":"sjq-sohjunqi"},"content":"        Parser p \u003d new Parser();"},{"lineNumber":55,"author":{"gitId":"sjq-sohjunqi"},"content":"        p.process(\"todo list 1\", newTl);"},{"lineNumber":56,"author":{"gitId":"sjq-sohjunqi"},"content":"        p.process(\"deadline list 2 /by 2020-01-05\", newTl);"},{"lineNumber":57,"author":{"gitId":"sjq-sohjunqi"},"content":"        p.process(\"event list 3 /at 2020-01-05\", newTl);"},{"lineNumber":58,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":59,"author":{"gitId":"sjq-sohjunqi"},"content":"        assertEquals(true, tl.equals(newTl));"},{"lineNumber":60,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":61,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":63,"author":{"gitId":"sjq-sohjunqi"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void testDone() {"},{"lineNumber":65,"author":{"gitId":"sjq-sohjunqi"},"content":"        LocalDate ld \u003d LocalDate.parse(\"2020-01-05\");"},{"lineNumber":66,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":67,"author":{"gitId":"sjq-sohjunqi"},"content":"        TaskList tl \u003d new TaskList();"},{"lineNumber":68,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 1\"));"},{"lineNumber":69,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 2\", \u0027D\u0027, ld));"},{"lineNumber":70,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 3\", \u0027E\u0027, ld));"},{"lineNumber":71,"author":{"gitId":"sjq-sohjunqi"},"content":"        try {"},{"lineNumber":72,"author":{"gitId":"sjq-sohjunqi"},"content":"            tl.markDone(2);"},{"lineNumber":73,"author":{"gitId":"sjq-sohjunqi"},"content":"        } catch (DukeException de) {"},{"lineNumber":74,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":75,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":77,"author":{"gitId":"sjq-sohjunqi"},"content":"        assertEquals(true, tl.getTask(1).getDone());"},{"lineNumber":78,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":79,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":80}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":"done 3"},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"bye"}],"authorContributionMap":{"sjq-sohjunqi":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"javac  -cp C:\\Github\\ip\\src\\main\\java -Xlint:none -d C:\\Github\\ip\\src\\main\\java\u003e*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"sjq-sohjunqi":1,"-":20}}]
