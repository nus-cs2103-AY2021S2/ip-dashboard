[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":"  id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.1.0\u0027"},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"  id \u0027java\u0027"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":"}"},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":"repositories {"},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"    mavenCentral()"},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":"}"},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"dependencies {"},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"}"},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"jar {"},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":"  manifest {"},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":"    attributes("},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":"      \u0027Class-Path\u0027: configurations.compile.collect { it.getName() }.join(\u0027 \u0027),"},{"lineNumber":33,"author":{"gitId":"sjq-sohjunqi"},"content":"      \u0027Main-Class\u0027: \u0027duke.Launcher\u0027"},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":"    )"},{"lineNumber":35,"author":{"gitId":"sjq-sohjunqi"},"content":"  }"},{"lineNumber":36,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":36}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature 1 "},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":"Add a To-do Task"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"### `todo TASK_NAME` - Add to-do task"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"Adds a to-do task into the task list. Task will be saved upon exit of program."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"`todo Homework`"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"`Got it! I\u0027ve added this task`\u003cbr/\u003e"},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"`[T][] Homework`\u003cbr/\u003e"},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"`Now you have 1 tasks in the list`"},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":"### Feature 2"},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"Add an Event"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"## Usage"},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"### `event EVENT_NAME /at DATE` - Add an Event"},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":"Adds an event task into the task list. Specify the date in `YYYY-MM-DD` format. Task will be saved upon exit of program."},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":33,"author":{"gitId":"sjq-sohjunqi"},"content":"Example of usage: "},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":35,"author":{"gitId":"sjq-sohjunqi"},"content":"`event My Birthday /at 2020-11-26`"},{"lineNumber":36,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":37,"author":{"gitId":"sjq-sohjunqi"},"content":"Expected outcome:"},{"lineNumber":38,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":39,"author":{"gitId":"sjq-sohjunqi"},"content":"`Got it! I\u0027ve added this task`\u003cbr/\u003e"},{"lineNumber":40,"author":{"gitId":"sjq-sohjunqi"},"content":"`[E][] My Birthday (at: Nov 26 2020)`\u003cbr/\u003e"},{"lineNumber":41,"author":{"gitId":"sjq-sohjunqi"},"content":"`Now you have 1 tasks in the list`"},{"lineNumber":42,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":43,"author":{"gitId":"sjq-sohjunqi"},"content":"### Feature 3"},{"lineNumber":44,"author":{"gitId":"sjq-sohjunqi"},"content":"Add a deadline"},{"lineNumber":45,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":46,"author":{"gitId":"sjq-sohjunqi"},"content":"## Usage"},{"lineNumber":47,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":48,"author":{"gitId":"sjq-sohjunqi"},"content":"### `deadline DEADLINE_NAME /by DATE` - Add a deadline"},{"lineNumber":49,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":50,"author":{"gitId":"sjq-sohjunqi"},"content":"Adds an deadline task into the task list. Specify the date in `YYYY-MM-DD` format. Task will be saved upon exit of program."},{"lineNumber":51,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":52,"author":{"gitId":"sjq-sohjunqi"},"content":"Example of usage: "},{"lineNumber":53,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":54,"author":{"gitId":"sjq-sohjunqi"},"content":"`deadline Project /by 2020-02-19`"},{"lineNumber":55,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":56,"author":{"gitId":"sjq-sohjunqi"},"content":"Expected outcome:"},{"lineNumber":57,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":58,"author":{"gitId":"sjq-sohjunqi"},"content":"`Got it! I\u0027ve added this task`\u003cbr/\u003e"},{"lineNumber":59,"author":{"gitId":"sjq-sohjunqi"},"content":"`[D][] Project (at: Feb 19 2020)`\u003cbr/\u003e"},{"lineNumber":60,"author":{"gitId":"sjq-sohjunqi"},"content":"`Now you have 1 tasks in the list`"},{"lineNumber":61,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":62,"author":{"gitId":"sjq-sohjunqi"},"content":"### Feature 3"},{"lineNumber":63,"author":{"gitId":"sjq-sohjunqi"},"content":"Task removal"},{"lineNumber":64,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":65,"author":{"gitId":"sjq-sohjunqi"},"content":"## Usage"},{"lineNumber":66,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":67,"author":{"gitId":"sjq-sohjunqi"},"content":"### `delete TASK_NUMBER` - Removes task from task list"},{"lineNumber":68,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":69,"author":{"gitId":"sjq-sohjunqi"},"content":"Deletes a task from the task list. The task is specified by the task number."},{"lineNumber":70,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":71,"author":{"gitId":"sjq-sohjunqi"},"content":"Example of usage: "},{"lineNumber":72,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":73,"author":{"gitId":"sjq-sohjunqi"},"content":"`delete 1`"},{"lineNumber":74,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":75,"author":{"gitId":"sjq-sohjunqi"},"content":"Expected outcome:"},{"lineNumber":76,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":77,"author":{"gitId":"sjq-sohjunqi"},"content":"`Noted. I\u0027ve removed this task`\u003cbr/\u003e"},{"lineNumber":78,"author":{"gitId":"sjq-sohjunqi"},"content":"`[T][] Homework`\u003cbr/\u003e"},{"lineNumber":79,"author":{"gitId":"sjq-sohjunqi"},"content":"`Now you have 0 tasks in the list`"},{"lineNumber":80,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":81,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":82,"author":{"gitId":"sjq-sohjunqi"},"content":"### Feature 3"},{"lineNumber":83,"author":{"gitId":"sjq-sohjunqi"},"content":"View task list"},{"lineNumber":84,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":85,"author":{"gitId":"sjq-sohjunqi"},"content":"## Usage"},{"lineNumber":86,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":87,"author":{"gitId":"sjq-sohjunqi"},"content":"### `list` - Shows task list items"},{"lineNumber":88,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":89,"author":{"gitId":"sjq-sohjunqi"},"content":"Displays the current items in the task list."},{"lineNumber":90,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":91,"author":{"gitId":"sjq-sohjunqi"},"content":"Example of usage: "},{"lineNumber":92,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":93,"author":{"gitId":"sjq-sohjunqi"},"content":"`list`"},{"lineNumber":94,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":95,"author":{"gitId":"sjq-sohjunqi"},"content":"Expected outcome:"},{"lineNumber":96,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":97,"author":{"gitId":"sjq-sohjunqi"},"content":"`Here are the tasks in your list:`\u003cbr/\u003e"},{"lineNumber":98,"author":{"gitId":"sjq-sohjunqi"},"content":"`1. [T][] Homework`\u003cbr/\u003e"},{"lineNumber":99,"author":{"gitId":"sjq-sohjunqi"},"content":"`2. [E][] My Birthday (at: Nov 26 2020)`\u003cbr/\u003e"},{"lineNumber":100,"author":{"gitId":"sjq-sohjunqi"},"content":"`3. [D][] Project (at: Feb 19 2020)`"},{"lineNumber":101,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":102,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":103,"author":{"gitId":"sjq-sohjunqi"},"content":"### Feature 4"},{"lineNumber":104,"author":{"gitId":"sjq-sohjunqi"},"content":"Find task"},{"lineNumber":105,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":106,"author":{"gitId":"sjq-sohjunqi"},"content":"## Usage"},{"lineNumber":107,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":108,"author":{"gitId":"sjq-sohjunqi"},"content":"### `find SEARCH_TERM` - Search for task"},{"lineNumber":109,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":110,"author":{"gitId":"sjq-sohjunqi"},"content":"Searches for tasks with the search term in their contents and displays that tasks\u0027 information."},{"lineNumber":111,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":112,"author":{"gitId":"sjq-sohjunqi"},"content":"Example of usage: "},{"lineNumber":113,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":114,"author":{"gitId":"sjq-sohjunqi"},"content":"`find home`"},{"lineNumber":115,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":116,"author":{"gitId":"sjq-sohjunqi"},"content":"Expected outcome:"},{"lineNumber":117,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":118,"author":{"gitId":"sjq-sohjunqi"},"content":"`Here are the matching tasks in your list:`\u003cbr/\u003e"},{"lineNumber":119,"author":{"gitId":"sjq-sohjunqi"},"content":"`1. [T][] Homework`"},{"lineNumber":120,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":121,"author":{"gitId":"sjq-sohjunqi"},"content":"### Feature 4"},{"lineNumber":122,"author":{"gitId":"sjq-sohjunqi"},"content":"Close application"},{"lineNumber":123,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":124,"author":{"gitId":"sjq-sohjunqi"},"content":"## Usage"},{"lineNumber":125,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":126,"author":{"gitId":"sjq-sohjunqi"},"content":"### `bye` - Close application"},{"lineNumber":127,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":128,"author":{"gitId":"sjq-sohjunqi"},"content":"Application will save the task list for the next time it is booted up and will terminate the program."},{"lineNumber":129,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":130,"author":{"gitId":"sjq-sohjunqi"},"content":"Example of usage: "},{"lineNumber":131,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":132,"author":{"gitId":"sjq-sohjunqi"},"content":"`bye`"},{"lineNumber":133,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":134,"author":{"gitId":"sjq-sohjunqi"},"content":"Expected outcome:"},{"lineNumber":135,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":136,"author":{"gitId":"sjq-sohjunqi"},"content":"`Bye. Hope to see you again!`\u003cbr/\u003e"},{"lineNumber":137,"author":{"gitId":"sjq-sohjunqi"},"content":"`Application exiting in 3`\u003cbr/\u003e"},{"lineNumber":138,"author":{"gitId":"sjq-sohjunqi"},"content":"`Application exiting in 2`\u003cbr/\u003e"},{"lineNumber":139,"author":{"gitId":"sjq-sohjunqi"},"content":"`Application exiting in 1`"},{"lineNumber":140,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":141,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":142,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":143,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":144,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":145,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":146,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":147,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":148,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":149,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":150,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":151,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":152,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":153,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":154,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":155,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":156,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":157,"author":{"gitId":"sjq-sohjunqi"},"content":""}],"authorContributionMap":{"sjq-sohjunqi":142,"-":15}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"sjq-sohjunqi"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":35,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"sjq-sohjunqi"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":38,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"sjq-sohjunqi"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":41,"author":{"gitId":"sjq-sohjunqi"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"sjq-sohjunqi"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"sjq-sohjunqi"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":45,"author":{"gitId":"sjq-sohjunqi"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"sjq-sohjunqi"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"sjq-sohjunqi"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"sjq-sohjunqi"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"sjq-sohjunqi"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":51,"author":{"gitId":"sjq-sohjunqi"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":53,"author":{"gitId":"sjq-sohjunqi"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"sjq-sohjunqi"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"sjq-sohjunqi"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":57,"author":{"gitId":"sjq-sohjunqi"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":59,"author":{"gitId":"sjq-sohjunqi"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"sjq-sohjunqi"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"sjq-sohjunqi"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"sjq-sohjunqi"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"sjq-sohjunqi"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":65,"author":{"gitId":"sjq-sohjunqi"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":67,"author":{"gitId":"sjq-sohjunqi"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":70,"author":{"gitId":"sjq-sohjunqi"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":72,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":73,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"sjq-sohjunqi"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":76,"author":{"gitId":"sjq-sohjunqi"},"content":":end"},{"lineNumber":77,"author":{"gitId":"sjq-sohjunqi"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"sjq-sohjunqi"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":80,"author":{"gitId":"sjq-sohjunqi"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"sjq-sohjunqi"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"sjq-sohjunqi"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"sjq-sohjunqi"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"sjq-sohjunqi"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":86,"author":{"gitId":"sjq-sohjunqi"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"sjq-sohjunqi"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":89,"author":{"gitId":"sjq-sohjunqi"},"content":":omega"}],"authorContributionMap":{"sjq-sohjunqi":89}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"import javafx.geometry.Pos;"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":"public class DialogBox extends HBox {"},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"    private Label text;"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"    private ImageView displayPicture;"},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"        text \u003d l;"},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"        displayPicture \u003d iv;"},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"        text.setWrapText(true);"},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":20}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"// JavaFX Imports"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"import javafx.application.Platform;"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":"import javafx.scene.control.Label;"},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"import javafx.stage.Stage;"},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.util.HashMap;"},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":"public class Duke extends Application{"},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":"    private Scene scene;"},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":"     * Prints the greeting for the chatbot."},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void greet() {"},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":33,"author":{"gitId":"sjq-sohjunqi"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":35,"author":{"gitId":"sjq-sohjunqi"},"content":"        dialogContainer.getChildren().add(getDialogLabel(\"Hello from\\n\" + logo));"},{"lineNumber":36,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":38,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"sjq-sohjunqi"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"sjq-sohjunqi"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void remind(TaskList taskList){"},{"lineNumber":42,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":43,"author":{"gitId":"sjq-sohjunqi"},"content":"        HashMap\u003cTask, Integer\u003e taskMap \u003d taskList.getDueTasks();"},{"lineNumber":44,"author":{"gitId":"sjq-sohjunqi"},"content":"        int upcoming \u003d 0;"},{"lineNumber":45,"author":{"gitId":"sjq-sohjunqi"},"content":"        int overdue \u003d 0;"},{"lineNumber":46,"author":{"gitId":"sjq-sohjunqi"},"content":"        int today \u003d 0;"},{"lineNumber":47,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":48,"author":{"gitId":"sjq-sohjunqi"},"content":"        for (Task task : taskMap.keySet()) {"},{"lineNumber":49,"author":{"gitId":"sjq-sohjunqi"},"content":"            int due \u003d taskMap.get(task);"},{"lineNumber":50,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":51,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (due \u003e 0) {"},{"lineNumber":52,"author":{"gitId":"sjq-sohjunqi"},"content":"                upcoming +\u003d 1;"},{"lineNumber":53,"author":{"gitId":"sjq-sohjunqi"},"content":"            } else if (due \u003c 0) {"},{"lineNumber":54,"author":{"gitId":"sjq-sohjunqi"},"content":"                overdue +\u003d 1;"},{"lineNumber":55,"author":{"gitId":"sjq-sohjunqi"},"content":"            } else {"},{"lineNumber":56,"author":{"gitId":"sjq-sohjunqi"},"content":"                today +\u003d 1;"},{"lineNumber":57,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":60,"author":{"gitId":"sjq-sohjunqi"},"content":"        String updateString \u003d \"\";"},{"lineNumber":61,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":62,"author":{"gitId":"sjq-sohjunqi"},"content":"        if (today !\u003d 0) {"},{"lineNumber":63,"author":{"gitId":"sjq-sohjunqi"},"content":"            String reminder \u003d \"You have \" + today + \" task(s) today:\\n\";"},{"lineNumber":64,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":65,"author":{"gitId":"sjq-sohjunqi"},"content":"            for (Task task : taskMap.keySet()) {"},{"lineNumber":66,"author":{"gitId":"sjq-sohjunqi"},"content":"                int due \u003d taskMap.get(task);"},{"lineNumber":67,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":68,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (due \u003d\u003d 0) {"},{"lineNumber":69,"author":{"gitId":"sjq-sohjunqi"},"content":"                    reminder +\u003d task.toString() + \"\\n\";"},{"lineNumber":70,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":73,"author":{"gitId":"sjq-sohjunqi"},"content":"            updateString +\u003d reminder + \"\\n\";"},{"lineNumber":74,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":76,"author":{"gitId":"sjq-sohjunqi"},"content":"        if (upcoming !\u003d 0) {"},{"lineNumber":77,"author":{"gitId":"sjq-sohjunqi"},"content":"            String reminder \u003d \"You have \" + upcoming + \" upcoming task(s):\\n\";"},{"lineNumber":78,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":79,"author":{"gitId":"sjq-sohjunqi"},"content":"            for (Task task : taskMap.keySet()) {"},{"lineNumber":80,"author":{"gitId":"sjq-sohjunqi"},"content":"                int due \u003d taskMap.get(task);"},{"lineNumber":81,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":82,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (due \u003e 0) {"},{"lineNumber":83,"author":{"gitId":"sjq-sohjunqi"},"content":"                    reminder +\u003d task.toString() + \"\\n\";"},{"lineNumber":84,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":87,"author":{"gitId":"sjq-sohjunqi"},"content":"            updateString +\u003d reminder + \"\\n\";"},{"lineNumber":88,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":90,"author":{"gitId":"sjq-sohjunqi"},"content":"        if (upcoming !\u003d 0) {"},{"lineNumber":91,"author":{"gitId":"sjq-sohjunqi"},"content":"            String reminder \u003d \"You have \" + overdue + \" overdue task(s):\\nConsider removing these tasks\\n\";"},{"lineNumber":92,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":93,"author":{"gitId":"sjq-sohjunqi"},"content":"            for (Task task : taskMap.keySet()) {"},{"lineNumber":94,"author":{"gitId":"sjq-sohjunqi"},"content":"                int due \u003d taskMap.get(task);"},{"lineNumber":95,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":96,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (due \u003c 0) {"},{"lineNumber":97,"author":{"gitId":"sjq-sohjunqi"},"content":"                    reminder +\u003d task.toString() + \"\\n\";"},{"lineNumber":98,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":99,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":101,"author":{"gitId":"sjq-sohjunqi"},"content":"            updateString +\u003d reminder + \"\\n\";"},{"lineNumber":102,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":104,"author":{"gitId":"sjq-sohjunqi"},"content":"        dialogContainer.getChildren().add(getDialogLabel(updateString));"},{"lineNumber":105,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":106,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":108,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"sjq-sohjunqi"},"content":"     * This method is used to start the Duke user interface"},{"lineNumber":110,"author":{"gitId":"sjq-sohjunqi"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"sjq-sohjunqi"},"content":"    @Override"},{"lineNumber":112,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void start(Stage stage) {"},{"lineNumber":113,"author":{"gitId":"sjq-sohjunqi"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":114,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":115,"author":{"gitId":"sjq-sohjunqi"},"content":"        Storage storage \u003d new Storage(\"tasklist\");"},{"lineNumber":116,"author":{"gitId":"sjq-sohjunqi"},"content":"        TaskList taskList \u003d storage.loadTaskList();"},{"lineNumber":117,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":118,"author":{"gitId":"sjq-sohjunqi"},"content":"        // Initialization"},{"lineNumber":119,"author":{"gitId":"sjq-sohjunqi"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":120,"author":{"gitId":"sjq-sohjunqi"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":121,"author":{"gitId":"sjq-sohjunqi"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":122,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":123,"author":{"gitId":"sjq-sohjunqi"},"content":"        userInput \u003d new TextField();"},{"lineNumber":124,"author":{"gitId":"sjq-sohjunqi"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":125,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":126,"author":{"gitId":"sjq-sohjunqi"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":127,"author":{"gitId":"sjq-sohjunqi"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":128,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":129,"author":{"gitId":"sjq-sohjunqi"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":130,"author":{"gitId":"sjq-sohjunqi"},"content":"        stage.setScene(scene);"},{"lineNumber":131,"author":{"gitId":"sjq-sohjunqi"},"content":"        stage.show();"},{"lineNumber":132,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":133,"author":{"gitId":"sjq-sohjunqi"},"content":"        // Formatting"},{"lineNumber":134,"author":{"gitId":"sjq-sohjunqi"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":135,"author":{"gitId":"sjq-sohjunqi"},"content":"        stage.setResizable(false);"},{"lineNumber":136,"author":{"gitId":"sjq-sohjunqi"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":137,"author":{"gitId":"sjq-sohjunqi"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":138,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":139,"author":{"gitId":"sjq-sohjunqi"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":140,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":141,"author":{"gitId":"sjq-sohjunqi"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":142,"author":{"gitId":"sjq-sohjunqi"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":143,"author":{"gitId":"sjq-sohjunqi"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":144,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":145,"author":{"gitId":"sjq-sohjunqi"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":146,"author":{"gitId":"sjq-sohjunqi"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":147,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":148,"author":{"gitId":"sjq-sohjunqi"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":149,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":150,"author":{"gitId":"sjq-sohjunqi"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":151,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":152,"author":{"gitId":"sjq-sohjunqi"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":153,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":154,"author":{"gitId":"sjq-sohjunqi"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":155,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":156,"author":{"gitId":"sjq-sohjunqi"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":157,"author":{"gitId":"sjq-sohjunqi"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":158,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":159,"author":{"gitId":"sjq-sohjunqi"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":160,"author":{"gitId":"sjq-sohjunqi"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":161,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":162,"author":{"gitId":"sjq-sohjunqi"},"content":"        greet();"},{"lineNumber":163,"author":{"gitId":"sjq-sohjunqi"},"content":"        remind(taskList);"},{"lineNumber":164,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":165,"author":{"gitId":"sjq-sohjunqi"},"content":"        // Functionality"},{"lineNumber":166,"author":{"gitId":"sjq-sohjunqi"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":167,"author":{"gitId":"sjq-sohjunqi"},"content":"            String input \u003d userInput.getText();"},{"lineNumber":168,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":169,"author":{"gitId":"sjq-sohjunqi"},"content":"            dialogContainer.getChildren().add(getDialogLabel(\"\u003e\u003e \" + input));"},{"lineNumber":170,"author":{"gitId":"sjq-sohjunqi"},"content":"            userInput.clear();"},{"lineNumber":171,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":172,"author":{"gitId":"sjq-sohjunqi"},"content":"            // Call Parser"},{"lineNumber":173,"author":{"gitId":"sjq-sohjunqi"},"content":"            String out \u003d parser.process(input, taskList);"},{"lineNumber":174,"author":{"gitId":"sjq-sohjunqi"},"content":"            dialogContainer.getChildren().add(getDialogLabel(out));"},{"lineNumber":175,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":176,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (parser.checkEnd()) {"},{"lineNumber":177,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":178,"author":{"gitId":"sjq-sohjunqi"},"content":"                exitProcedure(dialogContainer, taskList, storage);"},{"lineNumber":179,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":180,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":181,"author":{"gitId":"sjq-sohjunqi"},"content":"        });"},{"lineNumber":182,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":183,"author":{"gitId":"sjq-sohjunqi"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":184,"author":{"gitId":"sjq-sohjunqi"},"content":"            String input \u003d userInput.getText();"},{"lineNumber":185,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":186,"author":{"gitId":"sjq-sohjunqi"},"content":"            dialogContainer.getChildren().add(getDialogLabel(\"\u003e\u003e \" + input));"},{"lineNumber":187,"author":{"gitId":"sjq-sohjunqi"},"content":"            userInput.clear();"},{"lineNumber":188,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":189,"author":{"gitId":"sjq-sohjunqi"},"content":"            // Call Parser"},{"lineNumber":190,"author":{"gitId":"sjq-sohjunqi"},"content":"            String out \u003d parser.process(input, taskList);"},{"lineNumber":191,"author":{"gitId":"sjq-sohjunqi"},"content":"            dialogContainer.getChildren().add(getDialogLabel(out));"},{"lineNumber":192,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":193,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (parser.checkEnd()) {"},{"lineNumber":194,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":195,"author":{"gitId":"sjq-sohjunqi"},"content":"                exitProcedure(dialogContainer, taskList, storage);"},{"lineNumber":196,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":197,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":198,"author":{"gitId":"sjq-sohjunqi"},"content":"        });"},{"lineNumber":199,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":200,"author":{"gitId":"sjq-sohjunqi"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":201,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":202,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":204,"author":{"gitId":"sjq-sohjunqi"},"content":"    private void exitProcedure(VBox dialogContainer, TaskList taskList, Storage storage) {"},{"lineNumber":205,"author":{"gitId":"sjq-sohjunqi"},"content":"        try {"},{"lineNumber":206,"author":{"gitId":"sjq-sohjunqi"},"content":"            storage.saveTaskList(taskList);"},{"lineNumber":207,"author":{"gitId":"sjq-sohjunqi"},"content":"        } catch(DukeException e) {"},{"lineNumber":208,"author":{"gitId":"sjq-sohjunqi"},"content":"            dialogContainer.getChildren().add(getDialogLabel(e.toString()));"},{"lineNumber":209,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":210,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":211,"author":{"gitId":"sjq-sohjunqi"},"content":"        new Thread(() -\u003e {"},{"lineNumber":212,"author":{"gitId":"sjq-sohjunqi"},"content":"            try {"},{"lineNumber":213,"author":{"gitId":"sjq-sohjunqi"},"content":"                Thread.sleep(1000);"},{"lineNumber":214,"author":{"gitId":"sjq-sohjunqi"},"content":"                Platform.runLater(() -\u003e dialogContainer.getChildren().add(getDialogLabel(\"Application exiting in 3 \")));"},{"lineNumber":215,"author":{"gitId":"sjq-sohjunqi"},"content":"                Thread.sleep(1000);"},{"lineNumber":216,"author":{"gitId":"sjq-sohjunqi"},"content":"                Platform.runLater(() -\u003e dialogContainer.getChildren().add(getDialogLabel(\"Application exiting in 2 \")));"},{"lineNumber":217,"author":{"gitId":"sjq-sohjunqi"},"content":"                Thread.sleep(1000);"},{"lineNumber":218,"author":{"gitId":"sjq-sohjunqi"},"content":"                Platform.runLater(() -\u003e dialogContainer.getChildren().add(getDialogLabel(\"Application exiting in 1 \")));"},{"lineNumber":219,"author":{"gitId":"sjq-sohjunqi"},"content":"                Thread.sleep(1000);"},{"lineNumber":220,"author":{"gitId":"sjq-sohjunqi"},"content":"            } catch (InterruptedException e) {"},{"lineNumber":221,"author":{"gitId":"sjq-sohjunqi"},"content":"                dialogContainer.getChildren().add(getDialogLabel(e.toString()));"},{"lineNumber":222,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":223,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":224,"author":{"gitId":"sjq-sohjunqi"},"content":"            System.exit(0);"},{"lineNumber":225,"author":{"gitId":"sjq-sohjunqi"},"content":"        }).start();"},{"lineNumber":226,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":228,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":229,"author":{"gitId":"sjq-sohjunqi"},"content":"     * Creates a label with the specified text and adds it to the dialog container."},{"lineNumber":230,"author":{"gitId":"sjq-sohjunqi"},"content":"     * @param text String containing text to add"},{"lineNumber":231,"author":{"gitId":"sjq-sohjunqi"},"content":"     * @return a label with the specified text that has word wrap enabled."},{"lineNumber":232,"author":{"gitId":"sjq-sohjunqi"},"content":"     */"},{"lineNumber":233,"author":{"gitId":"sjq-sohjunqi"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":234,"author":{"gitId":"sjq-sohjunqi"},"content":"        // You will need to import `javafx.scene.control.Label`."},{"lineNumber":235,"author":{"gitId":"sjq-sohjunqi"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":236,"author":{"gitId":"sjq-sohjunqi"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":237,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":238,"author":{"gitId":"sjq-sohjunqi"},"content":"        return textToAdd;"},{"lineNumber":239,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":240}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.lang.Exception;"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"public class DukeException extends Exception {"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"    * This is the constructor for Duke\u0027s custom exceptions"},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param message the error message to be displayed"},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"    public DukeException(String message) {"},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":"\t\tsuper(message);"},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"\t}"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":13}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":" */"},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"        Application.launch(Duke.class, args);"},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":"    private boolean isEnd;"},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Constructor for the Parser class"},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"    public Parser() {"},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"        isEnd \u003d false;"},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Returns the End object which indicates whether the chatbot has been terminated by the user."},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return boolean object. True - chatbot ended, False - chatbot still running"},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"    public boolean checkEnd() {"},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"        return isEnd;"},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Returns a String object which contains the output from processing user\u0027s input. This method will process"},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"    * the user\u0027s input and perform functions accordingly to the TaskList object supplied in the argument \u003cp\u003e"},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":"    * The in String argument should be a valid command. The following are commands acceptable by the process function:\u003cbr/\u003e"},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cul\u003e"},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cli\u003elist - Displays current list items\u003c/li\u003e"},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cli\u003ebye - Exits Duke program\u003c/li\u003e"},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cli\u003edone \u003cint:number\u003e - Marks item number specified (1-based) as done\u003c/li\u003e"},{"lineNumber":33,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cli\u003etodo \u003cString:name\u003e - Creates an item type of \"todo\" inside TaskList\u003c/li\u003e"},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cli\u003edeadline \u003cString:name\u003e /by \u003cString:date\u003e - Creates an item type of \"deadline\" inside TaskList. The date should be specified in an YYYY-MM-DD format\u003c/li\u003e"},{"lineNumber":35,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cli\u003eevent \u003cString:name\u003e /at \u003cString:date\u003e - Creates an item type of \"event\" inside TaskList. The date should be specified in an YYYY-MM-DD format\u003c/li\u003e"},{"lineNumber":36,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cli\u003edelete \u003cint:number\u003e - Deletes item number specified (1-based)\u003c/li\u003e"},{"lineNumber":37,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003c/ul\u003e"},{"lineNumber":38,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param in the input command entered by user"},{"lineNumber":39,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @TaskList the TaskList object the commands will be processed on"},{"lineNumber":40,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return String object containing results of processing "},{"lineNumber":41,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":42,"author":{"gitId":"sjq-sohjunqi"},"content":"    public String process(String in, TaskList taskList) {"},{"lineNumber":43,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":44,"author":{"gitId":"sjq-sohjunqi"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":46,"author":{"gitId":"sjq-sohjunqi"},"content":"            String result \u003d \"\";"},{"lineNumber":47,"author":{"gitId":"sjq-sohjunqi"},"content":"            String[] split \u003d in.split(\"\\\\s\");"},{"lineNumber":48,"author":{"gitId":"sjq-sohjunqi"},"content":"            String command \u003d split[0];"},{"lineNumber":49,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":50,"author":{"gitId":"sjq-sohjunqi"},"content":"            switch(command) {"},{"lineNumber":51,"author":{"gitId":"sjq-sohjunqi"},"content":"            case \"bye\": {"},{"lineNumber":52,"author":{"gitId":"sjq-sohjunqi"},"content":"                isEnd \u003d true;"},{"lineNumber":53,"author":{"gitId":"sjq-sohjunqi"},"content":"                result \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":54,"author":{"gitId":"sjq-sohjunqi"},"content":"                break;"},{"lineNumber":55,"author":{"gitId":"sjq-sohjunqi"},"content":"            } case \"list\": {"},{"lineNumber":56,"author":{"gitId":"sjq-sohjunqi"},"content":"                result \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":57,"author":{"gitId":"sjq-sohjunqi"},"content":"                result +\u003d taskList.printList();"},{"lineNumber":58,"author":{"gitId":"sjq-sohjunqi"},"content":"                break;"},{"lineNumber":59,"author":{"gitId":"sjq-sohjunqi"},"content":"            } case \"done\": {"},{"lineNumber":60,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (split.length \u003c\u003d 1) {"},{"lineNumber":61,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! A number needs to be specified.\");"},{"lineNumber":62,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":63,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":64,"author":{"gitId":"sjq-sohjunqi"},"content":"                try {"},{"lineNumber":65,"author":{"gitId":"sjq-sohjunqi"},"content":"                    Task task \u003d taskList.markDone(Integer.parseInt(split[1]));"},{"lineNumber":66,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":67,"author":{"gitId":"sjq-sohjunqi"},"content":"                    result \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"},{"lineNumber":68,"author":{"gitId":"sjq-sohjunqi"},"content":"                    result +\u003d task;"},{"lineNumber":69,"author":{"gitId":"sjq-sohjunqi"},"content":"                } catch (NumberFormatException ne) {"},{"lineNumber":70,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! A number needs to be specified.\");"},{"lineNumber":71,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":73,"author":{"gitId":"sjq-sohjunqi"},"content":"                break;"},{"lineNumber":74,"author":{"gitId":"sjq-sohjunqi"},"content":"            } case \"todo\": {"},{"lineNumber":75,"author":{"gitId":"sjq-sohjunqi"},"content":"                split \u003d in.split(\"todo\\\\s\");"},{"lineNumber":76,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":77,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (split.length \u003c\u003d 1) {"},{"lineNumber":78,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":79,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":80,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":81,"author":{"gitId":"sjq-sohjunqi"},"content":"                int taskListCount \u003d taskList.count();"},{"lineNumber":82,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":83,"author":{"gitId":"sjq-sohjunqi"},"content":"                Task task \u003d new Task(split[1]);"},{"lineNumber":84,"author":{"gitId":"sjq-sohjunqi"},"content":"                taskList.add(task);"},{"lineNumber":85,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":86,"author":{"gitId":"sjq-sohjunqi"},"content":"                assert taskList.count() \u003d\u003d taskListCount + 1 : \"Unable to add task!\";"},{"lineNumber":87,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":88,"author":{"gitId":"sjq-sohjunqi"},"content":"                result \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":89,"author":{"gitId":"sjq-sohjunqi"},"content":"                result +\u003d task + \"\\n\";"},{"lineNumber":90,"author":{"gitId":"sjq-sohjunqi"},"content":"                result +\u003d \"Now you have \" + taskList.count() + \" tasks in the list.\";"},{"lineNumber":91,"author":{"gitId":"sjq-sohjunqi"},"content":"                break;"},{"lineNumber":92,"author":{"gitId":"sjq-sohjunqi"},"content":"            } case \"deadline\": {"},{"lineNumber":93,"author":{"gitId":"sjq-sohjunqi"},"content":"                split \u003d in.split(\"deadline\\\\s\");"},{"lineNumber":94,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":95,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (split.length \u003c\u003d 1) {"},{"lineNumber":96,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":97,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":98,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":99,"author":{"gitId":"sjq-sohjunqi"},"content":"                split \u003d split[1].split(\"\\\\s/by\\\\s\");"},{"lineNumber":100,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":101,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (split.length \u003c\u003d 1) {"},{"lineNumber":102,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! A date and time is needed.\");"},{"lineNumber":103,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":104,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":105,"author":{"gitId":"sjq-sohjunqi"},"content":"                LocalDate dt \u003d LocalDate.now();"},{"lineNumber":106,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":107,"author":{"gitId":"sjq-sohjunqi"},"content":"                try {"},{"lineNumber":108,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":109,"author":{"gitId":"sjq-sohjunqi"},"content":"                    dt \u003d LocalDate.parse(split[1]);"},{"lineNumber":110,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":111,"author":{"gitId":"sjq-sohjunqi"},"content":"                } catch (DateTimeParseException dte) {"},{"lineNumber":112,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! The date format should be in YYYY-MM-DD\");"},{"lineNumber":113,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":114,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":115,"author":{"gitId":"sjq-sohjunqi"},"content":"                int taskListCount \u003d taskList.count();"},{"lineNumber":116,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":117,"author":{"gitId":"sjq-sohjunqi"},"content":"                Task task \u003d new Task(split[0], \u0027D\u0027, dt);"},{"lineNumber":118,"author":{"gitId":"sjq-sohjunqi"},"content":"                taskList.add(task);"},{"lineNumber":119,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":120,"author":{"gitId":"sjq-sohjunqi"},"content":"                assert taskList.count() \u003d\u003d taskListCount + 1 : \"Unable to add task!\";"},{"lineNumber":121,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":122,"author":{"gitId":"sjq-sohjunqi"},"content":"                result \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":123,"author":{"gitId":"sjq-sohjunqi"},"content":"                result +\u003d task + \"\\n\";"},{"lineNumber":124,"author":{"gitId":"sjq-sohjunqi"},"content":"                result +\u003d \"Now you have \" + taskList.count() + \" tasks in the list.\\n\";"},{"lineNumber":125,"author":{"gitId":"sjq-sohjunqi"},"content":"                break;"},{"lineNumber":126,"author":{"gitId":"sjq-sohjunqi"},"content":"            } case \"event\": {"},{"lineNumber":127,"author":{"gitId":"sjq-sohjunqi"},"content":"                split \u003d in.split(\"event\\\\s\");"},{"lineNumber":128,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":129,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (split.length \u003c\u003d 1) {"},{"lineNumber":130,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"},{"lineNumber":131,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":132,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":133,"author":{"gitId":"sjq-sohjunqi"},"content":"                split \u003d split[1].split(\"\\\\s/at\\\\s\");"},{"lineNumber":134,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":135,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (split.length \u003c\u003d 1) {"},{"lineNumber":136,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! A date and time is needed.\");"},{"lineNumber":137,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":138,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":139,"author":{"gitId":"sjq-sohjunqi"},"content":"                LocalDate dtt \u003d LocalDate.now();"},{"lineNumber":140,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":141,"author":{"gitId":"sjq-sohjunqi"},"content":"                try {"},{"lineNumber":142,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":143,"author":{"gitId":"sjq-sohjunqi"},"content":"                    dtt \u003d LocalDate.parse(split[1]);"},{"lineNumber":144,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":145,"author":{"gitId":"sjq-sohjunqi"},"content":"                } catch (DateTimeParseException e) {"},{"lineNumber":146,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! The date format should be in YYYY-MM-DD\");"},{"lineNumber":147,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":148,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":149,"author":{"gitId":"sjq-sohjunqi"},"content":"                int taskListCount \u003d taskList.count();"},{"lineNumber":150,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":151,"author":{"gitId":"sjq-sohjunqi"},"content":"                Task task \u003d new Task(split[0], \u0027E\u0027, dtt);"},{"lineNumber":152,"author":{"gitId":"sjq-sohjunqi"},"content":"                taskList.add(task);"},{"lineNumber":153,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":154,"author":{"gitId":"sjq-sohjunqi"},"content":"                assert taskList.count() \u003d\u003d taskListCount + 1 : \"Unable to add task!\";"},{"lineNumber":155,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":156,"author":{"gitId":"sjq-sohjunqi"},"content":"                result \u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":157,"author":{"gitId":"sjq-sohjunqi"},"content":"                result +\u003d task + \"\\n\";"},{"lineNumber":158,"author":{"gitId":"sjq-sohjunqi"},"content":"                result +\u003d \"Now you have \" + taskList.count() + \" tasks in the list.\\n\";"},{"lineNumber":159,"author":{"gitId":"sjq-sohjunqi"},"content":"                break;"},{"lineNumber":160,"author":{"gitId":"sjq-sohjunqi"},"content":"            } case \"delete\": {"},{"lineNumber":161,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (split.length \u003c\u003d 1) {"},{"lineNumber":162,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! A number needs to be specified.\");"},{"lineNumber":163,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":164,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":165,"author":{"gitId":"sjq-sohjunqi"},"content":"                try {"},{"lineNumber":166,"author":{"gitId":"sjq-sohjunqi"},"content":"                    int taskListCount \u003d taskList.count();"},{"lineNumber":167,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":168,"author":{"gitId":"sjq-sohjunqi"},"content":"                    Task task \u003d taskList.remove(Integer.parseInt(split[1]));"},{"lineNumber":169,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":170,"author":{"gitId":"sjq-sohjunqi"},"content":"                    assert taskList.count() \u003d\u003d taskListCount - 1 : \"Unable to remove task!\";"},{"lineNumber":171,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":172,"author":{"gitId":"sjq-sohjunqi"},"content":"                    result \u003d \"Noted. I\u0027ve removed this task\\n\";"},{"lineNumber":173,"author":{"gitId":"sjq-sohjunqi"},"content":"                    result +\u003d task + \"\\n\";"},{"lineNumber":174,"author":{"gitId":"sjq-sohjunqi"},"content":"                    result +\u003d \"Now you have \" + taskList.count() + \" tasks in the list.\\n\";"},{"lineNumber":175,"author":{"gitId":"sjq-sohjunqi"},"content":"                } catch (NumberFormatException ne) {"},{"lineNumber":176,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! A number needs to be specified.\");"},{"lineNumber":177,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":178,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":179,"author":{"gitId":"sjq-sohjunqi"},"content":"                break;"},{"lineNumber":180,"author":{"gitId":"sjq-sohjunqi"},"content":"            } case \"find\": {"},{"lineNumber":181,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (split.length \u003c\u003d 1) {"},{"lineNumber":182,"author":{"gitId":"sjq-sohjunqi"},"content":"                    throw new DukeException(\"OOPS!!! A search term needs to be specified.\");"},{"lineNumber":183,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":184,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":185,"author":{"gitId":"sjq-sohjunqi"},"content":"                String searchTerm \u003d split[1];"},{"lineNumber":186,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":187,"author":{"gitId":"sjq-sohjunqi"},"content":"                TaskList searchList \u003d new TaskList();"},{"lineNumber":188,"author":{"gitId":"sjq-sohjunqi"},"content":"                for (int i \u003d 0; i \u003c taskList.count(); i++) {"},{"lineNumber":189,"author":{"gitId":"sjq-sohjunqi"},"content":"                    Task task \u003d taskList.getTask(i);"},{"lineNumber":190,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":191,"author":{"gitId":"sjq-sohjunqi"},"content":"                    if (task.getName().contains(searchTerm)) {"},{"lineNumber":192,"author":{"gitId":"sjq-sohjunqi"},"content":"                        searchList.add(task);"},{"lineNumber":193,"author":{"gitId":"sjq-sohjunqi"},"content":"                        continue;"},{"lineNumber":194,"author":{"gitId":"sjq-sohjunqi"},"content":"                    }"},{"lineNumber":195,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":196,"author":{"gitId":"sjq-sohjunqi"},"content":"                    if (task.getType() \u003d\u003d \u0027D\u0027 || task.getType() \u003d\u003d \u0027E\u0027) {"},{"lineNumber":197,"author":{"gitId":"sjq-sohjunqi"},"content":"                        if (task.getDateString().contains(searchTerm)) {"},{"lineNumber":198,"author":{"gitId":"sjq-sohjunqi"},"content":"                            searchList.add(task);"},{"lineNumber":199,"author":{"gitId":"sjq-sohjunqi"},"content":"                            continue;"},{"lineNumber":200,"author":{"gitId":"sjq-sohjunqi"},"content":"                        }"},{"lineNumber":201,"author":{"gitId":"sjq-sohjunqi"},"content":"                    }"},{"lineNumber":202,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":203,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":204,"author":{"gitId":"sjq-sohjunqi"},"content":"                result \u003d \"Here are the matching task in your list:\\n\";"},{"lineNumber":205,"author":{"gitId":"sjq-sohjunqi"},"content":"                result +\u003d searchList.printList();"},{"lineNumber":206,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":207,"author":{"gitId":"sjq-sohjunqi"},"content":"                break;"},{"lineNumber":208,"author":{"gitId":"sjq-sohjunqi"},"content":"            } default:"},{"lineNumber":209,"author":{"gitId":"sjq-sohjunqi"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":210,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":211,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":212,"author":{"gitId":"sjq-sohjunqi"},"content":"            "},{"lineNumber":213,"author":{"gitId":"sjq-sohjunqi"},"content":"            return result;"},{"lineNumber":214,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":215,"author":{"gitId":"sjq-sohjunqi"},"content":"        } catch(DukeException de) {"},{"lineNumber":216,"author":{"gitId":"sjq-sohjunqi"},"content":"            return de.getMessage();"},{"lineNumber":217,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":219,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":220,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":222,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":222}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.io.BufferedReader;"},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"    private File file;"},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Constructor for the Storage class. The filename argument will be used to create file for storing "},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":"    * and retrieving the user\u0027s TaskList."},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param filename the name of the file to save TaskList information"},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"    public Storage(String filename) {"},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"        file \u003d new File(filename);"},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Returns the TaskList object previously saved by the chatbot when the user terminates the program."},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return TaskList object"},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"    public TaskList loadTaskList() {"},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (file.createNewFile()) {"},{"lineNumber":33,"author":{"gitId":"sjq-sohjunqi"},"content":"                return new TaskList();"},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":"            } else {"},{"lineNumber":35,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":36,"author":{"gitId":"sjq-sohjunqi"},"content":"                BufferedReader br \u003d new BufferedReader(new FileReader(file));"},{"lineNumber":37,"author":{"gitId":"sjq-sohjunqi"},"content":"                TaskList taskList \u003d new TaskList();"},{"lineNumber":38,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":39,"author":{"gitId":"sjq-sohjunqi"},"content":"                String line;"},{"lineNumber":40,"author":{"gitId":"sjq-sohjunqi"},"content":"                while((line \u003d br.readLine()) !\u003d null) {"},{"lineNumber":41,"author":{"gitId":"sjq-sohjunqi"},"content":"                    String[] split \u003d line.split(\"\\\\|\");"},{"lineNumber":42,"author":{"gitId":"sjq-sohjunqi"},"content":"                    "},{"lineNumber":43,"author":{"gitId":"sjq-sohjunqi"},"content":"                    // Create new task for each line"},{"lineNumber":44,"author":{"gitId":"sjq-sohjunqi"},"content":"                    char type \u003d split[0].charAt(0);"},{"lineNumber":45,"author":{"gitId":"sjq-sohjunqi"},"content":"                    "},{"lineNumber":46,"author":{"gitId":"sjq-sohjunqi"},"content":"                    boolean isDone \u003d false;"},{"lineNumber":47,"author":{"gitId":"sjq-sohjunqi"},"content":"                    if (split[1].equals(\"D\")) {"},{"lineNumber":48,"author":{"gitId":"sjq-sohjunqi"},"content":"                        isDone \u003d true;"},{"lineNumber":49,"author":{"gitId":"sjq-sohjunqi"},"content":"                    }"},{"lineNumber":50,"author":{"gitId":"sjq-sohjunqi"},"content":"                    "},{"lineNumber":51,"author":{"gitId":"sjq-sohjunqi"},"content":"                    String name \u003d split[2];"},{"lineNumber":52,"author":{"gitId":"sjq-sohjunqi"},"content":"                    "},{"lineNumber":53,"author":{"gitId":"sjq-sohjunqi"},"content":"                    if (type \u003d\u003d \u0027D\u0027 || type \u003d\u003d \u0027E\u0027) {"},{"lineNumber":54,"author":{"gitId":"sjq-sohjunqi"},"content":"                        LocalDate dateTime \u003d LocalDate.parse(split[3]);"},{"lineNumber":55,"author":{"gitId":"sjq-sohjunqi"},"content":"                        "},{"lineNumber":56,"author":{"gitId":"sjq-sohjunqi"},"content":"                        Task task \u003d new Task(name, type, dateTime);"},{"lineNumber":57,"author":{"gitId":"sjq-sohjunqi"},"content":"                        if (isDone)"},{"lineNumber":58,"author":{"gitId":"sjq-sohjunqi"},"content":"                            task.mark();"},{"lineNumber":59,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":60,"author":{"gitId":"sjq-sohjunqi"},"content":"                        taskList.add(task);"},{"lineNumber":61,"author":{"gitId":"sjq-sohjunqi"},"content":"                        "},{"lineNumber":62,"author":{"gitId":"sjq-sohjunqi"},"content":"                    } else {"},{"lineNumber":63,"author":{"gitId":"sjq-sohjunqi"},"content":"                        Task task \u003d new Task(name);"},{"lineNumber":64,"author":{"gitId":"sjq-sohjunqi"},"content":"                        if (isDone)"},{"lineNumber":65,"author":{"gitId":"sjq-sohjunqi"},"content":"                            task.mark();"},{"lineNumber":66,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":67,"author":{"gitId":"sjq-sohjunqi"},"content":"                        taskList.add(task);"},{"lineNumber":68,"author":{"gitId":"sjq-sohjunqi"},"content":"                    }"},{"lineNumber":69,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":71,"author":{"gitId":"sjq-sohjunqi"},"content":"                return taskList;"},{"lineNumber":72,"author":{"gitId":"sjq-sohjunqi"},"content":"                    "},{"lineNumber":73,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":74,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"sjq-sohjunqi"},"content":"            "},{"lineNumber":76,"author":{"gitId":"sjq-sohjunqi"},"content":"        } catch(IOException e) {"},{"lineNumber":77,"author":{"gitId":"sjq-sohjunqi"},"content":"            return new TaskList();"},{"lineNumber":78,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":80,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":82,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Saves the TaskList object provided in the argument into the file created by the constructor of this class."},{"lineNumber":84,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param TaskList object to be saved"},{"lineNumber":85,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":86,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void saveTaskList(TaskList taskList) throws DukeException {"},{"lineNumber":87,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":88,"author":{"gitId":"sjq-sohjunqi"},"content":"        try {"},{"lineNumber":89,"author":{"gitId":"sjq-sohjunqi"},"content":"            FileWriter fileWriter \u003d new FileWriter(file, false);"},{"lineNumber":90,"author":{"gitId":"sjq-sohjunqi"},"content":"            "},{"lineNumber":91,"author":{"gitId":"sjq-sohjunqi"},"content":"            for (int i \u003d 0; i \u003c taskList.count(); i++) {"},{"lineNumber":92,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":93,"author":{"gitId":"sjq-sohjunqi"},"content":"                Task t \u003d taskList.getTask(i);"},{"lineNumber":94,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":95,"author":{"gitId":"sjq-sohjunqi"},"content":"                String line \u003d \"\" + t.getType() + \"|\";"},{"lineNumber":96,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (t.getDone()) {"},{"lineNumber":97,"author":{"gitId":"sjq-sohjunqi"},"content":"                    line +\u003d \"D|\";"},{"lineNumber":98,"author":{"gitId":"sjq-sohjunqi"},"content":"                } else {"},{"lineNumber":99,"author":{"gitId":"sjq-sohjunqi"},"content":"                    line +\u003d \"ND|\";"},{"lineNumber":100,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":101,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":102,"author":{"gitId":"sjq-sohjunqi"},"content":"                line +\u003d t.getName();"},{"lineNumber":103,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":104,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (t.getType() \u003d\u003d \u0027D\u0027 | t.getType() \u003d\u003d \u0027E\u0027) {"},{"lineNumber":105,"author":{"gitId":"sjq-sohjunqi"},"content":"                    line +\u003d \"|\" + t.getDateString();"},{"lineNumber":106,"author":{"gitId":"sjq-sohjunqi"},"content":"                }"},{"lineNumber":107,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":108,"author":{"gitId":"sjq-sohjunqi"},"content":"                line +\u003d \"\\n\";"},{"lineNumber":109,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":110,"author":{"gitId":"sjq-sohjunqi"},"content":"                fileWriter.write(line);"},{"lineNumber":111,"author":{"gitId":"sjq-sohjunqi"},"content":"                "},{"lineNumber":112,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":114,"author":{"gitId":"sjq-sohjunqi"},"content":"            fileWriter.flush();"},{"lineNumber":115,"author":{"gitId":"sjq-sohjunqi"},"content":"            fileWriter.close();"},{"lineNumber":116,"author":{"gitId":"sjq-sohjunqi"},"content":"            "},{"lineNumber":117,"author":{"gitId":"sjq-sohjunqi"},"content":"        } catch (IOException e) {"},{"lineNumber":118,"author":{"gitId":"sjq-sohjunqi"},"content":"            throw new DukeException(\"An error occured while saving the task list!\");"},{"lineNumber":119,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":121,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":123,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":123}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"    private String name;"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"    private char type;"},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":"    private LocalDate dateTime;"},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"    private boolean isDone;"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Constructor for the Task class. This constructor is used to create Tasks of types Event and Deadline."},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cp\u003eAll tasks created are not done initially."},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param name the name of the task"},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param task the type of the task (\u0027D\u0027 for deadline and \u0027E\u0027 for event)"},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param dateTime the date of the deadline or event"},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"    public Task(String name, char task, LocalDate dateTime) {"},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"        this.name \u003d name;"},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":"        this.type \u003d task;"},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"        isDone \u003d false;"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Constructor for the Task class. This constructor is used to create Tasks of type Todo."},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":"    * \u003cp\u003eAll tasks created are not done initially."},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param name the name of the Todo task"},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":33,"author":{"gitId":"sjq-sohjunqi"},"content":"    public Task(String name) {"},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":"        this.name \u003d name;"},{"lineNumber":35,"author":{"gitId":"sjq-sohjunqi"},"content":"        this.type \u003d \u0027T\u0027;"},{"lineNumber":36,"author":{"gitId":"sjq-sohjunqi"},"content":"        isDone \u003d false;"},{"lineNumber":37,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":39,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Getter for the type of the Task object"},{"lineNumber":41,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Type of Task. \u0027T\u0027 - Todo, \u0027E\u0027 - Event, \u0027D\u0027 - Deadline."},{"lineNumber":42,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":43,"author":{"gitId":"sjq-sohjunqi"},"content":"    public char getType() {"},{"lineNumber":44,"author":{"gitId":"sjq-sohjunqi"},"content":"        return type;"},{"lineNumber":45,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":47,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Getter for the name of the Task object"},{"lineNumber":49,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Name of task."},{"lineNumber":50,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":51,"author":{"gitId":"sjq-sohjunqi"},"content":"    public String getName() {"},{"lineNumber":52,"author":{"gitId":"sjq-sohjunqi"},"content":"        return name;"},{"lineNumber":53,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":55,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Getter for the Date of the Task object, as a String. Returns null when object is of todo type."},{"lineNumber":57,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Date of task."},{"lineNumber":58,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":59,"author":{"gitId":"sjq-sohjunqi"},"content":"    public String getDateString() {"},{"lineNumber":60,"author":{"gitId":"sjq-sohjunqi"},"content":"        return dateTime.toString();"},{"lineNumber":61,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":63,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"sjq-sohjunqi"},"content":"     * Getter for the Date of the Task object. Returns null when object is of todo type."},{"lineNumber":65,"author":{"gitId":"sjq-sohjunqi"},"content":"     * @return Date of task."},{"lineNumber":66,"author":{"gitId":"sjq-sohjunqi"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"sjq-sohjunqi"},"content":"    public LocalDate getDate() {"},{"lineNumber":68,"author":{"gitId":"sjq-sohjunqi"},"content":"        return dateTime;"},{"lineNumber":69,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":71,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Indicates whether Task object has been marked as done."},{"lineNumber":73,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Whether Task is marked done."},{"lineNumber":74,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":75,"author":{"gitId":"sjq-sohjunqi"},"content":"    public boolean getDone() {"},{"lineNumber":76,"author":{"gitId":"sjq-sohjunqi"},"content":"        return isDone;"},{"lineNumber":77,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":79,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Sets the Task as done"},{"lineNumber":81,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":82,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void mark() {"},{"lineNumber":83,"author":{"gitId":"sjq-sohjunqi"},"content":"        isDone \u003d true;"},{"lineNumber":84,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":86,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"sjq-sohjunqi"},"content":"    * This method checks whether the two Task objects are the same."},{"lineNumber":88,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param task Task object to be compared"},{"lineNumber":89,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Whether the Task object is same"},{"lineNumber":90,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":91,"author":{"gitId":"sjq-sohjunqi"},"content":"    public boolean equals(Task task) {"},{"lineNumber":92,"author":{"gitId":"sjq-sohjunqi"},"content":"        if (type \u003d\u003d task.type) {"},{"lineNumber":93,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (!name.equals(task.name))"},{"lineNumber":94,"author":{"gitId":"sjq-sohjunqi"},"content":"                return false;"},{"lineNumber":95,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":96,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (type \u003d\u003d \u0027D\u0027 || type \u003d\u003d \u0027E\u0027) {"},{"lineNumber":97,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (this.dateTime.compareTo(task.dateTime) !\u003d 0)"},{"lineNumber":98,"author":{"gitId":"sjq-sohjunqi"},"content":"                    return false;"},{"lineNumber":99,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":101,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (isDone !\u003d task.isDone)"},{"lineNumber":102,"author":{"gitId":"sjq-sohjunqi"},"content":"                return false;"},{"lineNumber":103,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":104,"author":{"gitId":"sjq-sohjunqi"},"content":"            return true;"},{"lineNumber":105,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":106,"author":{"gitId":"sjq-sohjunqi"},"content":"        } else {"},{"lineNumber":107,"author":{"gitId":"sjq-sohjunqi"},"content":"            return false;"},{"lineNumber":108,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":111,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"sjq-sohjunqi"},"content":"    * This method returns a String object listing the properties of the Task."},{"lineNumber":113,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Properties of the Task"},{"lineNumber":114,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":115,"author":{"gitId":"sjq-sohjunqi"},"content":"    public String toString() {"},{"lineNumber":116,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":117,"author":{"gitId":"sjq-sohjunqi"},"content":"        String returnStr \u003d \"[\" + type + \"]\";"},{"lineNumber":118,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":119,"author":{"gitId":"sjq-sohjunqi"},"content":"        if (isDone)"},{"lineNumber":120,"author":{"gitId":"sjq-sohjunqi"},"content":"            returnStr +\u003d \"[X] \" + name;"},{"lineNumber":121,"author":{"gitId":"sjq-sohjunqi"},"content":"        else"},{"lineNumber":122,"author":{"gitId":"sjq-sohjunqi"},"content":"            returnStr +\u003d \"[ ] \" + name;"},{"lineNumber":123,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":124,"author":{"gitId":"sjq-sohjunqi"},"content":"        switch (type) {"},{"lineNumber":125,"author":{"gitId":"sjq-sohjunqi"},"content":"        case \u0027D\u0027:"},{"lineNumber":126,"author":{"gitId":"sjq-sohjunqi"},"content":"            returnStr +\u003d \" (by: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"},{"lineNumber":127,"author":{"gitId":"sjq-sohjunqi"},"content":"            break;"},{"lineNumber":128,"author":{"gitId":"sjq-sohjunqi"},"content":"        case \u0027E\u0027:"},{"lineNumber":129,"author":{"gitId":"sjq-sohjunqi"},"content":"            returnStr +\u003d \" (at: \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"},{"lineNumber":130,"author":{"gitId":"sjq-sohjunqi"},"content":"            break;"},{"lineNumber":131,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":133,"author":{"gitId":"sjq-sohjunqi"},"content":"        return returnStr;"},{"lineNumber":134,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":135,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":136}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.util.HashMap;"},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"    private List\u003cTask\u003e taskList;"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Constructor for the TaskList class."},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"    public TaskList(){"},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":"        taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"    * This method returns a String containing the items inside the TaskList."},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return List of items in list"},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"    public String printList() {"},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":"        String res \u003d \"\";"},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"            res +\u003d (i+1)+\". \"+taskList.get(i)+\"\\n\";"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"        return res;"},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":"    * This method adds a Task object into the TaskList."},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param t Task to be added into TaskList"},{"lineNumber":33,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void add(Task t) {"},{"lineNumber":35,"author":{"gitId":"sjq-sohjunqi"},"content":"        taskList.add(t);"},{"lineNumber":36,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":38,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"sjq-sohjunqi"},"content":"    * This method removes a Task object from the TaskList based on the item number and returns it."},{"lineNumber":40,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param i Index of task to be removed"},{"lineNumber":41,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Task object removed from the list"},{"lineNumber":42,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":43,"author":{"gitId":"sjq-sohjunqi"},"content":"    public Task remove(int i) throws DukeException{"},{"lineNumber":44,"author":{"gitId":"sjq-sohjunqi"},"content":"        if (i \u003c\u003d 0 || i \u003e taskList.size()) {"},{"lineNumber":45,"author":{"gitId":"sjq-sohjunqi"},"content":"            throw new DukeException(\"OOPS!!! There is no item at that position.\");"},{"lineNumber":46,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":48,"author":{"gitId":"sjq-sohjunqi"},"content":"        Task task \u003d taskList.remove(i-1);"},{"lineNumber":49,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":50,"author":{"gitId":"sjq-sohjunqi"},"content":"        return task;"},{"lineNumber":51,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":53,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"sjq-sohjunqi"},"content":"    * This method marks a Task object from the TaskList, based on the item number, as done and returns it."},{"lineNumber":55,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param i Index of task to be marked done"},{"lineNumber":56,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Task object marked done"},{"lineNumber":57,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":58,"author":{"gitId":"sjq-sohjunqi"},"content":"    public Task markDone(int i) throws DukeException{"},{"lineNumber":59,"author":{"gitId":"sjq-sohjunqi"},"content":"        if (i \u003c\u003d 0 || i \u003e taskList.size()) {"},{"lineNumber":60,"author":{"gitId":"sjq-sohjunqi"},"content":"            throw new DukeException(\"OOPS!!! There is no item at that position.\");"},{"lineNumber":61,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":63,"author":{"gitId":"sjq-sohjunqi"},"content":"        Task task \u003d taskList.get(i-1);"},{"lineNumber":64,"author":{"gitId":"sjq-sohjunqi"},"content":"        task.mark();"},{"lineNumber":65,"author":{"gitId":"sjq-sohjunqi"},"content":"        "},{"lineNumber":66,"author":{"gitId":"sjq-sohjunqi"},"content":"        return task;"},{"lineNumber":67,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":69,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Returns the size of the TaskList."},{"lineNumber":71,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Size of TaskList"},{"lineNumber":72,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":73,"author":{"gitId":"sjq-sohjunqi"},"content":"    public int count() {"},{"lineNumber":74,"author":{"gitId":"sjq-sohjunqi"},"content":"        return taskList.size();"},{"lineNumber":75,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"sjq-sohjunqi"},"content":"    "},{"lineNumber":77,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"sjq-sohjunqi"},"content":"    * Returns the Task at the item number."},{"lineNumber":79,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param i Item number of the Task"},{"lineNumber":80,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Task object"},{"lineNumber":81,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":82,"author":{"gitId":"sjq-sohjunqi"},"content":"    public Task getTask(int i) {"},{"lineNumber":83,"author":{"gitId":"sjq-sohjunqi"},"content":"        return taskList.get(i);"},{"lineNumber":84,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":86,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"sjq-sohjunqi"},"content":"     * Returns a HashMap containing the task and how close today is to the due date"},{"lineNumber":88,"author":{"gitId":"sjq-sohjunqi"},"content":"     * @return HashMap object with Task and the number of days"},{"lineNumber":89,"author":{"gitId":"sjq-sohjunqi"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"sjq-sohjunqi"},"content":"    public HashMap\u003cTask, Integer\u003e getDueTasks() {"},{"lineNumber":91,"author":{"gitId":"sjq-sohjunqi"},"content":"        HashMap\u003cTask, Integer\u003e taskMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":92,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":93,"author":{"gitId":"sjq-sohjunqi"},"content":"        LocalDate today \u003d LocalDate.now();"},{"lineNumber":94,"author":{"gitId":"sjq-sohjunqi"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":95,"author":{"gitId":"sjq-sohjunqi"},"content":"            Task task \u003d taskList.get(i);"},{"lineNumber":96,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":97,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (task.getType() !\u003d \u0027E\u0027 \u0026\u0026 task.getType() !\u003d \u0027D\u0027) {"},{"lineNumber":98,"author":{"gitId":"sjq-sohjunqi"},"content":"                continue;"},{"lineNumber":99,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":101,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (today.compareTo(task.getDate()) \u003d\u003d 0) {"},{"lineNumber":102,"author":{"gitId":"sjq-sohjunqi"},"content":"                taskMap.put(task, new Integer(0));"},{"lineNumber":103,"author":{"gitId":"sjq-sohjunqi"},"content":"                continue;"},{"lineNumber":104,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":106,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (today.plusDays(1).compareTo(task.getDate()) \u003d\u003d 0) {"},{"lineNumber":107,"author":{"gitId":"sjq-sohjunqi"},"content":"                taskMap.put(task, new Integer(1));"},{"lineNumber":108,"author":{"gitId":"sjq-sohjunqi"},"content":"                continue;"},{"lineNumber":109,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":111,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (today.plusDays(2).compareTo(task.getDate()) \u003d\u003d 0) {"},{"lineNumber":112,"author":{"gitId":"sjq-sohjunqi"},"content":"                taskMap.put(task, new Integer(2));"},{"lineNumber":113,"author":{"gitId":"sjq-sohjunqi"},"content":"                continue;"},{"lineNumber":114,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":116,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (today.plusDays(3).compareTo(task.getDate()) \u003d\u003d 0) {"},{"lineNumber":117,"author":{"gitId":"sjq-sohjunqi"},"content":"                taskMap.put(task, new Integer(3));"},{"lineNumber":118,"author":{"gitId":"sjq-sohjunqi"},"content":"                continue;"},{"lineNumber":119,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":121,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (today.minusDays(1).compareTo(task.getDate()) \u003d\u003d 0) {"},{"lineNumber":122,"author":{"gitId":"sjq-sohjunqi"},"content":"                taskMap.put(task, new Integer(-1));"},{"lineNumber":123,"author":{"gitId":"sjq-sohjunqi"},"content":"                continue;"},{"lineNumber":124,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":126,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (today.minusDays(2).compareTo(task.getDate()) \u003d\u003d 0) {"},{"lineNumber":127,"author":{"gitId":"sjq-sohjunqi"},"content":"                taskMap.put(task, new Integer(-1));"},{"lineNumber":128,"author":{"gitId":"sjq-sohjunqi"},"content":"                continue;"},{"lineNumber":129,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":131,"author":{"gitId":"sjq-sohjunqi"},"content":"            if (today.minusDays(3).compareTo(task.getDate()) \u003d\u003d 0) {"},{"lineNumber":132,"author":{"gitId":"sjq-sohjunqi"},"content":"                taskMap.put(task, new Integer(-1));"},{"lineNumber":133,"author":{"gitId":"sjq-sohjunqi"},"content":"                continue;"},{"lineNumber":134,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":136,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":138,"author":{"gitId":"sjq-sohjunqi"},"content":"        return taskMap;"},{"lineNumber":139,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":141,"author":{"gitId":"sjq-sohjunqi"},"content":"    /**"},{"lineNumber":142,"author":{"gitId":"sjq-sohjunqi"},"content":"    * This method checks whether the two TaskList objects are the same."},{"lineNumber":143,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @param tl TaskList object to be compared"},{"lineNumber":144,"author":{"gitId":"sjq-sohjunqi"},"content":"    * @return Whether the TaskList object is same"},{"lineNumber":145,"author":{"gitId":"sjq-sohjunqi"},"content":"    */"},{"lineNumber":146,"author":{"gitId":"sjq-sohjunqi"},"content":"    public boolean equals(TaskList tl) {"},{"lineNumber":147,"author":{"gitId":"sjq-sohjunqi"},"content":"        if (this.count() \u003d\u003d tl.count()) {"},{"lineNumber":148,"author":{"gitId":"sjq-sohjunqi"},"content":"            for (int i \u003d 0; i \u003c this.count(); i++) {"},{"lineNumber":149,"author":{"gitId":"sjq-sohjunqi"},"content":"                if (!this.taskList.get(i).equals(tl.getTask(i)))"},{"lineNumber":150,"author":{"gitId":"sjq-sohjunqi"},"content":"                    return false;"},{"lineNumber":151,"author":{"gitId":"sjq-sohjunqi"},"content":"            }"},{"lineNumber":152,"author":{"gitId":"sjq-sohjunqi"},"content":"            return true;"},{"lineNumber":153,"author":{"gitId":"sjq-sohjunqi"},"content":"        } else {"},{"lineNumber":154,"author":{"gitId":"sjq-sohjunqi"},"content":"            return false;"},{"lineNumber":155,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":158,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":158}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"import duke.*;"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":9,"author":{"gitId":"sjq-sohjunqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":"public class DukeTest {"},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void testSave() {"},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"        TaskList tl \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 1\"));"},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 2\", \u0027D\u0027, LocalDate.now()));"},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 3\", \u0027E\u0027, LocalDate.now()));"},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"        Storage st \u003d new Storage(\"tasklist2\");"},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"            st.saveTaskList(tl);"},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":"        } catch (DukeException e) {"},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"        TaskList newTl \u003d st.loadTaskList();"},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"        assertEquals(true, tl.equals(newTl));"},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void testDelete() {"},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":"       TaskList tl \u003d new TaskList();"},{"lineNumber":35,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 1\"));"},{"lineNumber":36,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 2\", \u0027D\u0027, LocalDate.now()));"},{"lineNumber":37,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 3\", \u0027E\u0027, LocalDate.now()));"},{"lineNumber":38,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":39,"author":{"gitId":"sjq-sohjunqi"},"content":"        TaskList newTl \u003d new TaskList();"},{"lineNumber":40,"author":{"gitId":"sjq-sohjunqi"},"content":"        newTl.add(new Task(\"list 1\"));"},{"lineNumber":41,"author":{"gitId":"sjq-sohjunqi"},"content":"        newTl.add(new Task(\"list 3\", \u0027E\u0027, LocalDate.now()));"},{"lineNumber":42,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":43,"author":{"gitId":"sjq-sohjunqi"},"content":"        Parser p \u003d new Parser();"},{"lineNumber":44,"author":{"gitId":"sjq-sohjunqi"},"content":"        p.process(\"delete 2\", tl);"},{"lineNumber":45,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":46,"author":{"gitId":"sjq-sohjunqi"},"content":"        assertEquals(true, tl.equals(newTl));"},{"lineNumber":47,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":48,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":50,"author":{"gitId":"sjq-sohjunqi"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void testAdd() {"},{"lineNumber":52,"author":{"gitId":"sjq-sohjunqi"},"content":"        LocalDate ld \u003d LocalDate.parse(\"2020-01-05\");"},{"lineNumber":53,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":54,"author":{"gitId":"sjq-sohjunqi"},"content":"        TaskList tl \u003d new TaskList();"},{"lineNumber":55,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 1\"));"},{"lineNumber":56,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 2\", \u0027D\u0027, ld));"},{"lineNumber":57,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 3\", \u0027E\u0027, ld));"},{"lineNumber":58,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":59,"author":{"gitId":"sjq-sohjunqi"},"content":"        TaskList newTl \u003d new TaskList();"},{"lineNumber":60,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":61,"author":{"gitId":"sjq-sohjunqi"},"content":"        Parser p \u003d new Parser();"},{"lineNumber":62,"author":{"gitId":"sjq-sohjunqi"},"content":"        p.process(\"todo list 1\", newTl);"},{"lineNumber":63,"author":{"gitId":"sjq-sohjunqi"},"content":"        p.process(\"deadline list 2 /by 2020-01-05\", newTl);"},{"lineNumber":64,"author":{"gitId":"sjq-sohjunqi"},"content":"        p.process(\"event list 3 /at 2020-01-05\", newTl);"},{"lineNumber":65,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":66,"author":{"gitId":"sjq-sohjunqi"},"content":"        assertEquals(true, tl.equals(newTl));"},{"lineNumber":67,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":68,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":70,"author":{"gitId":"sjq-sohjunqi"},"content":"    @Test"},{"lineNumber":71,"author":{"gitId":"sjq-sohjunqi"},"content":"    public void testDone() {"},{"lineNumber":72,"author":{"gitId":"sjq-sohjunqi"},"content":"        LocalDate ld \u003d LocalDate.parse(\"2020-01-05\");"},{"lineNumber":73,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":74,"author":{"gitId":"sjq-sohjunqi"},"content":"        TaskList tl \u003d new TaskList();"},{"lineNumber":75,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 1\"));"},{"lineNumber":76,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 2\", \u0027D\u0027, ld));"},{"lineNumber":77,"author":{"gitId":"sjq-sohjunqi"},"content":"        tl.add(new Task(\"list 3\", \u0027E\u0027, ld));"},{"lineNumber":78,"author":{"gitId":"sjq-sohjunqi"},"content":"        try {"},{"lineNumber":79,"author":{"gitId":"sjq-sohjunqi"},"content":"            tl.markDone(2);"},{"lineNumber":80,"author":{"gitId":"sjq-sohjunqi"},"content":"        } catch (DukeException de) {"},{"lineNumber":81,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":82,"author":{"gitId":"sjq-sohjunqi"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":84,"author":{"gitId":"sjq-sohjunqi"},"content":"        assertEquals(true, tl.getTask(1).getDone());"},{"lineNumber":85,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":86,"author":{"gitId":"sjq-sohjunqi"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"sjq-sohjunqi"},"content":"}"}],"authorContributionMap":{"sjq-sohjunqi":87}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sjq-sohjunqi"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"sjq-sohjunqi"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"sjq-sohjunqi"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"sjq-sohjunqi"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"sjq-sohjunqi"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":"done 3"},{"lineNumber":7,"author":{"gitId":"sjq-sohjunqi"},"content":"bye"}],"authorContributionMap":{"sjq-sohjunqi":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"javac  -cp C:\\Github\\ip\\src\\main\\java -Xlint:none -d C:\\Github\\ip\\src\\main\\java\u003e*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"sjq-sohjunqi":1,"-":20}}]
