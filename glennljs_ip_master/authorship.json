[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"}"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"}"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"}"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":"}"},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"    mainClassName \u003d \"checklst.main.Loader\""},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"}"},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":"    archiveBaseName \u003d \"checklst\""},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":"}"},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":"}"},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":59,"author":{"gitId":"glennljs"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"glennljs"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":61}},{"path":"data/checklst.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"todo hello"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":"event hello /at 2020-08-15"},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"deadline bye /by 2019-04-16"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"list"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"done 3"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"list"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"save"}],"authorContributionMap":{"glennljs":8}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":59,"author":{"gitId":"glennljs"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"glennljs"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"glennljs"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"glennljs"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"glennljs"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":65,"author":{"gitId":"glennljs"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":67,"author":{"gitId":"glennljs"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"glennljs"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":70,"author":{"gitId":"glennljs"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":72,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":73,"author":{"gitId":"glennljs"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"glennljs"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":76,"author":{"gitId":"glennljs"},"content":":end"},{"lineNumber":77,"author":{"gitId":"glennljs"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"glennljs"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":80,"author":{"gitId":"glennljs"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"glennljs"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"glennljs"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"glennljs"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"glennljs"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":86,"author":{"gitId":"glennljs"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"glennljs"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":89,"author":{"gitId":"glennljs"},"content":":omega"}],"authorContributionMap":{"glennljs":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":" * This file was generated by the Gradle \u0027init\u0027 task."},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":" *"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":" * The settings file is used to specify which projects to include in your build."},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":" *"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":" * in the user manual at https://docs.gradle.org/6.8.1/userguide/multi_project_builds.html"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"rootProject.name \u003d \u0027ip\u0027"}],"authorContributionMap":{"glennljs":10}},{"path":"src/main/java/checklst/exception/ChecklstException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.exception;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":" * Custom exception to represent Exceptions in the Checklst program."},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"public class ChecklstException extends Exception {"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"    private static final long serialVersionUID \u003d 4447981462872622989L;"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"     * Creates instance for Checklst Exceptions."},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"     * @param errMessage Error message to be displayed."},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"    public ChecklstException(String errMessage) {"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"        super(errMessage);"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":21}},{"path":"src/main/java/checklst/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.gui;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import javafx.geometry.Pos;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"import javafx.scene.text.Font;"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"public class DialogBox extends HBox {"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"    private Label text;"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"    private ImageView displayPicture;"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"        db.flip();"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"        return db;"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"    private DialogBox(Label l, ImageView iv) {"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"        text \u003d l;"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"        text.setFont(new Font(\"Arial\", 14));"},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"        displayPicture \u003d iv;"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"        text.setWrapText(true);"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":50}},{"path":"src/main/java/checklst/main/Checklst.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.main;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import java.nio.file.InvalidPathException;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"import checklst.gui.DialogBox;"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"import checklst.parser.Parser;"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"import checklst.storage.Storage;"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"import checklst.task.TaskList;"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"import checklst.ui.Ui;"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"import javafx.application.Application;"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"import javafx.scene.Scene;"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"import javafx.scene.control.Button;"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"import javafx.scene.control.Label;"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"import javafx.scene.image.Image;"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"import javafx.scene.text.Font;"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"import javafx.stage.Stage;"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":" * The Checklst Class represents the entry point of the Checklst Program."},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"public class Checklst extends Application {"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"    private static final Font STANDARD_FONT \u003d new Font(\"Arial\", 14);"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"    private final Ui ui \u003d new Ui();"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"    private final Parser parser \u003d new Parser();"},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"    private final Storage storage \u003d new Storage();"},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"    private final TaskList taskList \u003d new TaskList();"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"    private VBox dialogContainer;"},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"    private TextField userInput;"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"    private Button sendButton;"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"    private Scene scene;"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"     * The main function of the Checklst Program."},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":"     * Creates and initializes an instance of Checklst and runs it."},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":"     * @param args CLI Arguments."},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":"    public static void main(String[] args) {"},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":"        Checklst checklst \u003d new Checklst();"},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":"        checklst.run();"},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":"    public void start(Stage stage) {"},{"lineNumber":59,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":60,"author":{"gitId":"glennljs"},"content":"        //Step 1. Formatting the window to look as expected."},{"lineNumber":61,"author":{"gitId":"glennljs"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":62,"author":{"gitId":"glennljs"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":63,"author":{"gitId":"glennljs"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":64,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":65,"author":{"gitId":"glennljs"},"content":"        userInput \u003d new TextField();"},{"lineNumber":66,"author":{"gitId":"glennljs"},"content":"        userInput.setFont(STANDARD_FONT);"},{"lineNumber":67,"author":{"gitId":"glennljs"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":68,"author":{"gitId":"glennljs"},"content":"        sendButton.setFont(STANDARD_FONT);"},{"lineNumber":69,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":70,"author":{"gitId":"glennljs"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":71,"author":{"gitId":"glennljs"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":72,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":73,"author":{"gitId":"glennljs"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":74,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":75,"author":{"gitId":"glennljs"},"content":"        stage.setScene(scene);"},{"lineNumber":76,"author":{"gitId":"glennljs"},"content":"        stage.show();"},{"lineNumber":77,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":78,"author":{"gitId":"glennljs"},"content":"        //Step 2. Formatting the window to look as expected"},{"lineNumber":79,"author":{"gitId":"glennljs"},"content":"        stage.setTitle(\"Checklst\");"},{"lineNumber":80,"author":{"gitId":"glennljs"},"content":"        stage.setResizable(false);"},{"lineNumber":81,"author":{"gitId":"glennljs"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":82,"author":{"gitId":"glennljs"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":83,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":84,"author":{"gitId":"glennljs"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":85,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":86,"author":{"gitId":"glennljs"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":87,"author":{"gitId":"glennljs"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":88,"author":{"gitId":"glennljs"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":89,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":90,"author":{"gitId":"glennljs"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":91,"author":{"gitId":"glennljs"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":92,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":93,"author":{"gitId":"glennljs"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":94,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":95,"author":{"gitId":"glennljs"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":96,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":97,"author":{"gitId":"glennljs"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":98,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":99,"author":{"gitId":"glennljs"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":100,"author":{"gitId":"glennljs"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":101,"author":{"gitId":"glennljs"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":102,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":103,"author":{"gitId":"glennljs"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":104,"author":{"gitId":"glennljs"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":105,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":106,"author":{"gitId":"glennljs"},"content":"        // Step 3. Add functionality to handle user input."},{"lineNumber":107,"author":{"gitId":"glennljs"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":108,"author":{"gitId":"glennljs"},"content":"            handleUserInput();"},{"lineNumber":109,"author":{"gitId":"glennljs"},"content":"        });"},{"lineNumber":110,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":111,"author":{"gitId":"glennljs"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":112,"author":{"gitId":"glennljs"},"content":"            handleUserInput();"},{"lineNumber":113,"author":{"gitId":"glennljs"},"content":"        });"},{"lineNumber":114,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":115,"author":{"gitId":"glennljs"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes."},{"lineNumber":116,"author":{"gitId":"glennljs"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":117,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":118,"author":{"gitId":"glennljs"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(new Label(ui.sendWelcome()), new ImageView(duke)));"},{"lineNumber":119,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":120,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":122,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"glennljs"},"content":"     * Iteration 2:"},{"lineNumber":124,"author":{"gitId":"glennljs"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":125,"author":{"gitId":"glennljs"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":126,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"glennljs"},"content":"    private void handleUserInput() {"},{"lineNumber":128,"author":{"gitId":"glennljs"},"content":"        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":129,"author":{"gitId":"glennljs"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));"},{"lineNumber":130,"author":{"gitId":"glennljs"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":131,"author":{"gitId":"glennljs"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":132,"author":{"gitId":"glennljs"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"},{"lineNumber":133,"author":{"gitId":"glennljs"},"content":"        );"},{"lineNumber":134,"author":{"gitId":"glennljs"},"content":"        userInput.clear();"},{"lineNumber":135,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":137,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"glennljs"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":139,"author":{"gitId":"glennljs"},"content":"     * Replace this stub with your completed method."},{"lineNumber":140,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"glennljs"},"content":"    private String getResponse(String input) {"},{"lineNumber":142,"author":{"gitId":"glennljs"},"content":"        return parser.parse(input.split(\" \", 2), this.ui, this.taskList, this.storage);"},{"lineNumber":143,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":145,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"glennljs"},"content":"     * Main function to run the Checklst Program."},{"lineNumber":147,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":148,"author":{"gitId":"glennljs"},"content":"    public void run() {"},{"lineNumber":149,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":150,"author":{"gitId":"glennljs"},"content":"        String[] input;"},{"lineNumber":151,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":152,"author":{"gitId":"glennljs"},"content":"        try {"},{"lineNumber":153,"author":{"gitId":"glennljs"},"content":"            String[] pastCommandHistory \u003d Files.readString(Paths.get(\"./data/checklst.txt\")).split(\"\\n\");"},{"lineNumber":154,"author":{"gitId":"glennljs"},"content":"            for (String command: pastCommandHistory) {"},{"lineNumber":155,"author":{"gitId":"glennljs"},"content":"                if (command.equals(\"\")) {"},{"lineNumber":156,"author":{"gitId":"glennljs"},"content":"                    continue;"},{"lineNumber":157,"author":{"gitId":"glennljs"},"content":"                }"},{"lineNumber":158,"author":{"gitId":"glennljs"},"content":"                input \u003d command.split(\" \", 2);"},{"lineNumber":159,"author":{"gitId":"glennljs"},"content":"                this.parser.parseHistoryCommand(input, this.taskList);"},{"lineNumber":160,"author":{"gitId":"glennljs"},"content":"            }"},{"lineNumber":161,"author":{"gitId":"glennljs"},"content":"            this.ui.sendOutput(\"History successfully restored!\");"},{"lineNumber":162,"author":{"gitId":"glennljs"},"content":"        } catch (InvalidPathException | IOException e) {"},{"lineNumber":163,"author":{"gitId":"glennljs"},"content":"            this.ui.sendOutput(\"No history found... Initializing from blank state!\");"},{"lineNumber":164,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":166,"author":{"gitId":"glennljs"},"content":"        this.ui.sendWelcome();"},{"lineNumber":167,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":168,"author":{"gitId":"glennljs"},"content":"        input \u003d ui.readCommand();"},{"lineNumber":169,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":170,"author":{"gitId":"glennljs"},"content":"        while (!input[0].equals(\"bye\")) {"},{"lineNumber":171,"author":{"gitId":"glennljs"},"content":"            this.parser.parse(input, ui, this.taskList, storage);"},{"lineNumber":172,"author":{"gitId":"glennljs"},"content":"            input \u003d ui.readCommand();"},{"lineNumber":173,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":175,"author":{"gitId":"glennljs"},"content":"        this.ui.sendOutput(\"Bye! Hope to see you again!\");"},{"lineNumber":176,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":177,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":179,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":179}},{"path":"src/main/java/checklst/main/Loader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.main;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"public class Loader {"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"    public static void main(String[] args) {"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"        Application.launch(Checklst.class, args);"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":14}},{"path":"src/main/java/checklst/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.parser;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import checklst.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import checklst.task.Deadline;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"import checklst.task.Event;"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import checklst.task.Task;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"import checklst.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"import checklst.task.Todo;"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"import checklst.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":" * The Parser class makes sense of inputs and runs the respective follow up methods."},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"public class Parser {"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"     * Processes input commands and calls the respective command methods."},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"     * @param input Input string."},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"     * @param ui Ui instance for output."},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"     * @param taskList TaskList instance for manipulating tasks."},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"     * @param storage Storage instance for saving of commands."},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"     * @return Response String. "},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"    public String parse(String[] input, Ui ui, TaskList taskList, Storage storage) {"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"        storage.addCommand(input);"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"        String output \u003d \"\";"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"            switch (input[0]) {"},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"            case \"list\":"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"                output \u003d ui.sendOutput(taskList.toString());"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"                break;"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"            case \"done\":"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"                int doneIndex \u003d Integer.parseInt(input[1]);"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"                output \u003d ui.sendOutput(\"Nice! I\u0027ve marked this task as done!\\n\\t\" + taskList.completeTask(doneIndex));"},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"                break;"},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"            case \"delete\":"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"                int deleteIndex \u003d Integer.parseInt(input[1]);"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"                output \u003d ui.sendOutput(\"Alright! I\u0027ve deleted this task!\\n\\t\" + taskList.deleteTask(deleteIndex));"},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"                break;"},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"            case \"todo\":"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"                Task newTodo \u003d Todo.makeTodo(input[1]);"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"                output \u003d ui.sendOutput(taskList.add(newTodo));"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":"                break;"},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"            case \"event\":"},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":"                Task newEvent \u003d Event.makeEvent(input[1]);"},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"                output \u003d ui.sendOutput(taskList.add(newEvent));"},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"                break;"},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":"            case \"deadline\":"},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":"                Task newDeadline \u003d Deadline.makeDeadline(input[1]);"},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":"                output \u003d ui.sendOutput(taskList.add(newDeadline));"},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":"                break;"},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":"            case \"save\":"},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":"                storage.saveToFile();"},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":"                output \u003d ui.sendOutput(\"History sucessfully saved!\");"},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":"            case \"find\":"},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":"                output \u003d ui.sendOutput(\"Here are the matching tasks in your list!\\n\\t\" + taskList.findTask(input[1]));"},{"lineNumber":59,"author":{"gitId":"glennljs"},"content":"                break;"},{"lineNumber":60,"author":{"gitId":"glennljs"},"content":"            default:"},{"lineNumber":61,"author":{"gitId":"glennljs"},"content":"                throw new ChecklstException(\"Sorry I didn\u0027t understand that command!!\");"},{"lineNumber":62,"author":{"gitId":"glennljs"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"glennljs"},"content":"        } catch (ChecklstException e) {"},{"lineNumber":64,"author":{"gitId":"glennljs"},"content":"            storage.removeLastCommand(); // Remove invalid commands"},{"lineNumber":65,"author":{"gitId":"glennljs"},"content":"            output \u003d ui.sendOutput(e.getMessage());"},{"lineNumber":66,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"glennljs"},"content":"        return output;"},{"lineNumber":68,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":70,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"glennljs"},"content":"     * Processes input commands from the saved history and calls the respective command methods"},{"lineNumber":72,"author":{"gitId":"glennljs"},"content":"     * but without ui output or storage."},{"lineNumber":73,"author":{"gitId":"glennljs"},"content":"     * @param input Input string."},{"lineNumber":74,"author":{"gitId":"glennljs"},"content":"     * @param taskList TaskList instance for manipulating tasks."},{"lineNumber":75,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"glennljs"},"content":"    public void parseHistoryCommand(String[] input, TaskList taskList) {"},{"lineNumber":77,"author":{"gitId":"glennljs"},"content":"        try {"},{"lineNumber":78,"author":{"gitId":"glennljs"},"content":"            switch (input[0]) {"},{"lineNumber":79,"author":{"gitId":"glennljs"},"content":"            case \"done\":"},{"lineNumber":80,"author":{"gitId":"glennljs"},"content":"                int doneIndex \u003d Integer.parseInt(input[1]);"},{"lineNumber":81,"author":{"gitId":"glennljs"},"content":"                taskList.completeTask(doneIndex);"},{"lineNumber":82,"author":{"gitId":"glennljs"},"content":"                break;"},{"lineNumber":83,"author":{"gitId":"glennljs"},"content":"            case \"delete\":"},{"lineNumber":84,"author":{"gitId":"glennljs"},"content":"                int deleteIndex \u003d Integer.parseInt(input[1]);"},{"lineNumber":85,"author":{"gitId":"glennljs"},"content":"                taskList.deleteTask(deleteIndex);"},{"lineNumber":86,"author":{"gitId":"glennljs"},"content":"                break;"},{"lineNumber":87,"author":{"gitId":"glennljs"},"content":"            case \"todo\":"},{"lineNumber":88,"author":{"gitId":"glennljs"},"content":"                Task newTodo \u003d Todo.makeTodo(input[1]);"},{"lineNumber":89,"author":{"gitId":"glennljs"},"content":"                taskList.add(newTodo);"},{"lineNumber":90,"author":{"gitId":"glennljs"},"content":"                break;"},{"lineNumber":91,"author":{"gitId":"glennljs"},"content":"            case \"event\":"},{"lineNumber":92,"author":{"gitId":"glennljs"},"content":"                Task newEvent \u003d Event.makeEvent(input[1]);"},{"lineNumber":93,"author":{"gitId":"glennljs"},"content":"                taskList.add(newEvent);"},{"lineNumber":94,"author":{"gitId":"glennljs"},"content":"                break;"},{"lineNumber":95,"author":{"gitId":"glennljs"},"content":"            case \"deadline\":"},{"lineNumber":96,"author":{"gitId":"glennljs"},"content":"                Task newDeadline \u003d Deadline.makeDeadline(input[1]);"},{"lineNumber":97,"author":{"gitId":"glennljs"},"content":"                taskList.add(newDeadline);"},{"lineNumber":98,"author":{"gitId":"glennljs"},"content":"                break;"},{"lineNumber":99,"author":{"gitId":"glennljs"},"content":"            default:"},{"lineNumber":100,"author":{"gitId":"glennljs"},"content":"                break;"},{"lineNumber":101,"author":{"gitId":"glennljs"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"glennljs"},"content":"        } catch (ChecklstException e) {"},{"lineNumber":103,"author":{"gitId":"glennljs"},"content":"            // Nothing because all exceptions should be handled on initial run."},{"lineNumber":104,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":106,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":108,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":108}},{"path":"src/main/java/checklst/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.storage;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import java.io.FileOutputStream;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import java.io.PrintStream;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":" * The Storage class stores and processes the saved commands."},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"    private final ArrayList\u003cString\u003e commandHistory \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"     * Adds the given command to the history list."},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"     * @param command Command to be saved."},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"    public void addCommand(String[] command) {"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"        this.commandHistory.add(String.join(\" \", command));"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"     * Removes the latest command from the history list. Used when there is an"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"     * errorneous command detected."},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"    public void removeLastCommand() {"},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"        this.commandHistory.remove(this.commandHistory.size() - 1);"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"     * Saves the command history to the save file."},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"     * @throws ChecklstException Exception when the file is not found, prompts user to create it."},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"    public void saveToFile() throws ChecklstException {"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"        try (PrintStream out \u003d new PrintStream(new FileOutputStream(\"./data/checklst.txt\"))) {"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"            out.print(this.commandHistory.toString().replace(\"[\", \"\").replace(\"]\", \"\").replace(\", \", \"\\n\"));"},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"File not found! Please create a file at path ./data/checklst.txt\");"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"    protected ArrayList\u003cString\u003e getCommandHistory() {"},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":"        return this.commandHistory;"},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":49}},{"path":"src/main/java/checklst/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":" * The Deadline class represents a Task with a specific Deadline."},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"public class Deadline extends Task {"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"    protected final LocalDate dueDate;"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"    protected Deadline(String name, LocalDate dueDate) {"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"        super(name);"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"        this.dueDate \u003d dueDate;"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"    protected Deadline(String name, boolean completed, LocalDate dueDate) {"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"        super(name, completed);"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"        this.dueDate \u003d dueDate;"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"     * Creates a new Deadline object."},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"     * @param input Input for the Deadline in the form \"{ name } /by { date }\"."},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"     * @return New Deadline object."},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"    public static Deadline makeDeadline(String input) throws ChecklstException {"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"        String[] splitInput \u003d input.split(\" /by \");"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"        if (splitInput.length \u003d\u003d 1) {"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"Inproper Deadline format used! Please use { name } /by { deadline }\");"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"        LocalDate dueDate;"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"            dueDate \u003d LocalDate.parse(splitInput[1]);"},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"Incorrect DateTime format! Please use YYYY-MM-DD\");"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":"        return new Deadline(splitInput[0], dueDate);"},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"    public Task complete() {"},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":"        return new Deadline(this.name, true, this.dueDate);"},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":"    public String toString() {"},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":"            + this.dueDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":58}},{"path":"src/main/java/checklst/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":" * The Event class represents a Task which has a specific DateTime."},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"public class Event extends Task {"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"    protected final LocalDate eventDate;"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"    protected Event(String name, LocalDate eventDate) {"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"        super(name);"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"        this.eventDate \u003d eventDate;"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"    protected Event(String name, boolean completed, LocalDate eventDate) {"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"        super(name, completed);"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"        this.eventDate \u003d eventDate;"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"     * Creates a new Event object."},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"     * @param input Input for the Event in the form \"{ name } /at { date }\"."},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"     * @return New Event object."},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"    public static Event makeEvent(String input) throws ChecklstException {"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"        String[] splitInput \u003d input.split(\" /at \");"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"        if (splitInput.length \u003d\u003d 1) {"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"Inproper Event format used! Please use { name } /at { event }\");"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"        LocalDate eventDate;"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"            eventDate \u003d LocalDate.parse(splitInput[1]);"},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"Incorrect Event Date format! Please use YYYY-MM-DD\");"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":"        return new Event(splitInput[0], eventDate);"},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"    public Task complete() {"},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":"        return new Event(this.name, true, this.eventDate);"},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":"    public String toString() {"},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":"            + this.eventDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":58}},{"path":"src/main/java/checklst/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":" * The Task class is an abstract skeleton that all Tasks (Todo, Event, Deadline) inherit from."},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"    protected final String name;"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"    protected final boolean isCompleted;"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"    protected Task(String name) {"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"        this.name \u003d name;"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"        this.isCompleted \u003d false;"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"    protected Task(String name, boolean isCompleted) {"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"        this.name \u003d name;"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"        this.isCompleted \u003d isCompleted;"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"     * Returns a new Task object which has been completed."},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"     * @return New completed Task."},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"    public abstract Task complete();"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"        String isCompleted \u003d this.isCompleted ? \"[X]\" : \"[]\";"},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"        return isCompleted + \" \" + this.name;"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":33}},{"path":"src/main/java/checklst/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import java.util.stream.Collectors;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":" * The TaskList class wraps a list of Tasks and has various methods to process them."},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"    private final List\u003cTask\u003e taskList;"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"     * Creates a new TaskList object."},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    public TaskList() {"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"    private TaskList(List\u003cTask\u003e taskList) {"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"     * Adds a Task to the TaskList."},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"     * @param task The Task to be added."},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"     * @return A String indicating the number of items in the TaskList."},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"    public String add(Task task) {"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"        this.taskList.add(task);"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"        return String.format(\"Added: %s\\n\\tYou now have %d task(s) in the list!\", task, this.taskList.size());"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"     * Completes a Task in the TaskList."},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"     * @param index The index (1-based) of the Task to be completed."},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"     * @return The completed Task."},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"     * @throws ChecklstException Exception thrown if index is out of bounds."},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"    public Task completeTask(int index) throws ChecklstException {"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":"        index--;"},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":"        if (index \u003c 0 || index \u003e\u003d this.taskList.size()) {"},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"The task index you have indicated does not exist!\");"},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":"        Task newTask \u003d taskList.get(index).complete();"},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":"        this.taskList.set(index, newTask);"},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":"        return newTask;"},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":"     * Deletes a Task from the TaskList based on index."},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":"     * @param index The index (1-based) of the Task to be deleted."},{"lineNumber":59,"author":{"gitId":"glennljs"},"content":"     * @return The deleted Task."},{"lineNumber":60,"author":{"gitId":"glennljs"},"content":"     * @throws ChecklstException Exception thrown if index is out of bounds."},{"lineNumber":61,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"glennljs"},"content":"    public Task deleteTask(int index) throws ChecklstException {"},{"lineNumber":63,"author":{"gitId":"glennljs"},"content":"        index--;"},{"lineNumber":64,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":65,"author":{"gitId":"glennljs"},"content":"        if (index \u003c 0 || index \u003e\u003d this.taskList.size()) {"},{"lineNumber":66,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"The task index you have indicated does not exist!\");"},{"lineNumber":67,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":69,"author":{"gitId":"glennljs"},"content":"        Task newTask \u003d taskList.get(index);"},{"lineNumber":70,"author":{"gitId":"glennljs"},"content":"        this.taskList.remove(index);"},{"lineNumber":71,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":72,"author":{"gitId":"glennljs"},"content":"        return newTask;"},{"lineNumber":73,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":75,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"glennljs"},"content":"     * Returns a TaskList with the filtered tasks."},{"lineNumber":77,"author":{"gitId":"glennljs"},"content":"     * @param input String to filter by."},{"lineNumber":78,"author":{"gitId":"glennljs"},"content":"     * @return Filtered TaskList"},{"lineNumber":79,"author":{"gitId":"glennljs"},"content":"     * @throws ChecklstException Exception when no items are found."},{"lineNumber":80,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"glennljs"},"content":"    public TaskList findTask(String input) throws ChecklstException {"},{"lineNumber":82,"author":{"gitId":"glennljs"},"content":"        List\u003cTask\u003e filteredList \u003d this.taskList.stream()"},{"lineNumber":83,"author":{"gitId":"glennljs"},"content":"            .filter(x -\u003e x.name.contains(input))"},{"lineNumber":84,"author":{"gitId":"glennljs"},"content":"            .collect(Collectors.toList());"},{"lineNumber":85,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":86,"author":{"gitId":"glennljs"},"content":"        if (filteredList.size() \u003d\u003d 0) {"},{"lineNumber":87,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"No results found!!\");"},{"lineNumber":88,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":90,"author":{"gitId":"glennljs"},"content":"        return new TaskList(filteredList);"},{"lineNumber":91,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":93,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":94,"author":{"gitId":"glennljs"},"content":"    public String toString() {"},{"lineNumber":95,"author":{"gitId":"glennljs"},"content":"        if (taskList.size() \u003d\u003d 0) {"},{"lineNumber":96,"author":{"gitId":"glennljs"},"content":"            return \"Task list is currently empty!\";"},{"lineNumber":97,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":99,"author":{"gitId":"glennljs"},"content":"        String taskListOutput \u003d \"1. \" + taskList.get(0);"},{"lineNumber":100,"author":{"gitId":"glennljs"},"content":"        for (int i \u003d 1; i \u003c taskList.size(); i++) {"},{"lineNumber":101,"author":{"gitId":"glennljs"},"content":"            taskListOutput +\u003d \"\\n\\t\" + String.valueOf(i + 1) + \". \" + taskList.get(i);"},{"lineNumber":102,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"glennljs"},"content":"        return taskListOutput;"},{"lineNumber":104,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":106,"author":{"gitId":"glennljs"},"content":"    protected List\u003cTask\u003e getTaskList() {"},{"lineNumber":107,"author":{"gitId":"glennljs"},"content":"        return this.taskList;"},{"lineNumber":108,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":110,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":110}},{"path":"src/main/java/checklst/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":" * The Deadline class represents a basic Task."},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"public class Todo extends Task {"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"    protected Todo(String name) {"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"        super(name);"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"    protected Todo(String name, boolean completed) {"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"        super(name, completed);"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"     * Creates a Todo Object."},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"     * @param name - Name of Todo."},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"     * @return - Todo Object."},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"    public static Todo makeTodo(String name) throws ChecklstException {"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"        if (name.equals(\"\")) {"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"Todo needs a name!\");"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"        return new Todo(name);"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"    public Task complete() {"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"        return new Todo(this.name, true);"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"    public String toString() {"},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":40}},{"path":"src/main/java/checklst/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.ui;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":" * The Ui class handles direct I/O from the user."},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello I\u0027m Checklst! What can I do for you?\";"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"     * Prints output in a standard format."},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"     * @param output String to be sent."},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"     * @return Formatted String."},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    public String sendOutput(String output) {"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"        String line \u003d \"\\t----------------------------------------\";"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"        return line + \"\\n\\t\" + output + \"\\n\\t\" + line;"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"     * Prints Welcome output."},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"     * @return Welcome output."},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"    public String sendWelcome() {"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"        return sendOutput(WELCOME_MESSAGE);"},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"     * Takes in next command and splits it by first whitespace."},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"     * @return String array of size 2 split by first whitespace."},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"    public String[] readCommand() {"},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"        return scanner.nextLine().split(\" \", 2);"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":40}},{"path":"src/test/java/checklst/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.storage;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"public class StorageTest {"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"    private final Storage storage \u003d new Storage();"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"    public void addCommandTest() {"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"        String testString \u003d \"Hello World\";"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"        String[] testInput \u003d testString.split(\" \");"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"        this.storage.addCommand(testInput);"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"        assertEquals(testString, this.storage.getCommandHistory().get(0));"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"    public void removeLastCommandTest() {"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"        String testString \u003d \"Hello World\";"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"        String[] testInput \u003d testString.split(\" \");"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"        this.storage.addCommand(testInput);"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"        this.storage.removeLastCommand();"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"        assertTrue(this.storage.getCommandHistory().size() \u003d\u003d 0);"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":29}},{"path":"src/test/java/checklst/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"    public void createDeadlineTest() {"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Deadline.makeDeadline(\"\"));"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Deadline.makeDeadline(\"test \"));"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Deadline.makeDeadline(\"test /by\"));"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Deadline.makeDeadline(\"test /by \"));"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Deadline.makeDeadline(\"test  /by 23rd Feb\"));"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Deadline.makeDeadline(\"test/by2020-11-20\"));"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":21}},{"path":"src/test/java/checklst/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"public class EventTest {"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"    public void createEventTest() {"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Event.makeEvent(\"\"));"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Event.makeEvent(\"test\"));"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Event.makeEvent(\"test /at\"));"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Event.makeEvent(\"test /at \"));"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Event.makeEvent(\"test /at 23rd Feb\"));"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Event.makeEvent(\"test/at2020-11-20\"));"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":21}},{"path":"src/test/java/checklst/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"public class TaskListTest {"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"    private final TaskList taskList \u003d new TaskList();"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"    public void addTaskTest() throws ChecklstException {"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"        Task task \u003d new Todo(\"Hello\");"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"        this.taskList.add(task);"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"        assertEquals(task, this.taskList.getTaskList().get(0));"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"    public void completeTaskTest() throws ChecklstException {"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e this.taskList.completeTask(-1));"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e this.taskList.completeTask(0));"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e this.taskList.completeTask(1));"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"    public void deleteTaskTest() throws ChecklstException {"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e this.taskList.deleteTask(-1));"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e this.taskList.deleteTask(0));"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e this.taskList.deleteTask(1));"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"    public void findTaskTest() throws ChecklstException {"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"        Task task \u003d new Todo(\"hello\");"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"        this.taskList.add(task);"},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"        assertTrue(this.taskList.findTask(\"hello\").getTaskList().size() \u003e 0);"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e this.taskList.findTask(\"abc\"));"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":45}},{"path":"src/test/java/checklst/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"public class TodoTest {"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"    public void createTodoTest() {"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Todo.makeTodo(\"\"));"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"todo Todo1"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":"event Event1 /at 2020-05-12"},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"deadline Deadline1 /by 2020-07-24"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"todo Todo2"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"list"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"delete 2"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"done 3"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"list"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"event ErrorEvent"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"deadline ErrorDeadline"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"gibberish"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"bye"}],"authorContributionMap":{"glennljs":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"java -classpath ../bin Checklst \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"glennljs":1,"-":37}}]
