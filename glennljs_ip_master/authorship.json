[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"    id \u0027java-library\u0027"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"}"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"repositories {"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"    mavenCentral()"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"}"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"dependencies {"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"}"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"}"},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"    mainClassName \u003d \"checklst.main.Loader\""},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":"}"},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":"    archiveBaseName \u003d \"checklst\""},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":"}"},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":"}"},{"lineNumber":59,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":60,"author":{"gitId":"glennljs"},"content":"run {"},{"lineNumber":61,"author":{"gitId":"glennljs"},"content":"    enableAssertions \u003d true"},{"lineNumber":62,"author":{"gitId":"glennljs"},"content":"    standardInput \u003d System.in"},{"lineNumber":63,"author":{"gitId":"glennljs"},"content":"}"},{"lineNumber":64,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":65,"author":{"gitId":"glennljs"},"content":"java {"},{"lineNumber":66,"author":{"gitId":"glennljs"},"content":"    toolchain {"},{"lineNumber":67,"author":{"gitId":"glennljs"},"content":"        languageVersion \u003d JavaLanguageVersion.of(11)"},{"lineNumber":68,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"glennljs"},"content":"}"},{"lineNumber":70,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":71,"author":{"gitId":"glennljs"},"content":"version \u003d \u00271.2.1\u0027"}],"authorContributionMap":{"glennljs":71}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"# Checklst"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"Checklst is a basic Todo app, allowing users to store and track events, deadlines and todos. Checklst has gradually evolved from a basic CLI application to a fully ready GUI."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"![](main_ui.png)"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"# Command Syntax"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"| Command | Description | Example |"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"|--|--|--|"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"| `list` | Lists all Tasks | `list` |"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"| `todo NAME` | Creates a Todo | `todo  Read Books` |"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"| `event NAME /at EVENT_DATE` | Creates an Event with a specific occurrence date| `event Concert /at 2020-12-04` |"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"| `deadline NAME /by DUE_DATE` | Creates a Deadline with a specific due date | `deadline Assignment /by 2020-12-03` |"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"| `done INDEX` | Completes the Task | `done 1` | "},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"| `delete INDEX` | Deletes the Task | `delete 1` | "},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"| `find KEYWORD` | Finds all Tasks whose name contains the Keyword | `find CS2103` |"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"| `sort` | Sorts all Tasks by Complete/Incomplete and then Task Type | `sort` |"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"| `help` | Shows all Commands | `help` |"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"| `bye` | Exits Checklst | `bye` |"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"# Features"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"## Creating a Task"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"Tasks can be one of 3 types - Todo, Event and Deadline. Todos are basic named Tasks while Events and Deadlines both contain a date which corresponds to their event date and due date respectively."},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"Tasks can be made using commands `todo`, `event`, `deadline` to create each type of task respectively. Tasks will be labelled according to their task type in the Checklst application as follows:"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"| Task Command | Task Representation"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"|--|--|"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"| `todo Read Books` | [T][ ] Read Books |"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"| `event Concert /at 2020-12-04` | [E][ ] Concert (at: Dec 4 2020) |"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"| `deadline Assignment /by 2020-12-03` | [D][ ] Assignment (by: Dec 3 2020) |"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"## Listing Tasks and Completing a Task"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"Tasks can be listed using the `list` command. "},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"Once a Task is made, it will be by default labelled as incomplete. A task can then be completed using the `done` command to mark it as completed. The index value of the task starts from index 1 and can be referenced from the `list` command."},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"| Task Command | Expected Output"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"|--|--|"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":"| `list` | These are your current tasks: \u003cbr\u003e 1. [T][ ] Read Books |"},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"| `done 1` | [T][X] Read Books |"},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":"| `list` | These are your current tasks: \u003cbr\u003e 1. [T][X] Read Books |"},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"## Deleting a Task"},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":"Tasks can be removed from Checklst by using the `delete` command. Similarly, the index value starts from index 1."},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":"| Task Command | Expected Output"},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":"|--|--|"},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":"| `list` | These are your current tasks: \u003cbr\u003e 1. [T][X] Read Books |"},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":"| `delete 1` | [T][X] Read Books |"},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":"| `list` | Task list is currently empty! |"},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":"## Finding Tasks"},{"lineNumber":59,"author":{"gitId":"glennljs"},"content":"To easily retrieve tasks when the Task List gets convoluted, the `find` command may be used with a keyword that will be matched to tasks. As long as some part of a Task\u0027s name contains the keyword, it will be returned."},{"lineNumber":60,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":61,"author":{"gitId":"glennljs"},"content":"| Task Command | Expected Output"},{"lineNumber":62,"author":{"gitId":"glennljs"},"content":"|--|--|"},{"lineNumber":63,"author":{"gitId":"glennljs"},"content":"| `list` | These are your current tasks: \u003cbr\u003e 1. [T][ ] Read Books \u003cbr\u003e 2. [T][ ] Return Books \u003cbr\u003e 3. [T][ ] Eat Lunch|"},{"lineNumber":64,"author":{"gitId":"glennljs"},"content":"| `find books` | Here are the matching tasks in your list! \u003cbr\u003e 1. [T][ ] Read Books \u003cbr\u003e 2. [T][ ] Return Books |"},{"lineNumber":65,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":66,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":67,"author":{"gitId":"glennljs"},"content":"## Sorting Tasks"},{"lineNumber":68,"author":{"gitId":"glennljs"},"content":"Tasks are added to the bottom of the Task List via a Chronological input order. However, the tasks may be deliberately sorted on will via the `sort` command. "},{"lineNumber":69,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":70,"author":{"gitId":"glennljs"},"content":"The sorting will be done via 2 conditions. Firstly, the tasks will be split into complete and incomplete. Secondly, the tasks will be sorted by Task type."},{"lineNumber":71,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":72,"author":{"gitId":"glennljs"},"content":"| Task Command | Expected Output"},{"lineNumber":73,"author":{"gitId":"glennljs"},"content":"|--|--|"},{"lineNumber":74,"author":{"gitId":"glennljs"},"content":"| `list` | These are your current tasks: \u003cbr\u003e 1. [T][ ] Read Books \u003cbr\u003e 2. [E][ ] Movie (at: Apr 24 2020) \u003cbr\u003e 3. [T][X] Return Books \u003cbr\u003e 4. [E][ ] Concert (at: Feb 13 2020)  |"},{"lineNumber":75,"author":{"gitId":"glennljs"},"content":"| `sort` | These are your current tasks: \u003cbr\u003e 1. [T][ ] Read Books \u003cbr\u003e 2. [E][ ] Movie (at: Apr 24 2020) \u003cbr\u003e 3. [E][ ] Concert (at: Feb 13 2020) \u003cbr\u003e 4. [T][X] Return Books |"},{"lineNumber":76,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":77,"author":{"gitId":"glennljs"},"content":"## Errors"},{"lineNumber":78,"author":{"gitId":"glennljs"},"content":"Checklst is is capable of handling errors in command or keyword inputs. Whenever an error is encounted, Checklst will return the error message with a clear red indicator."},{"lineNumber":79,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":80,"author":{"gitId":"glennljs"},"content":"![](Ui.png)"},{"lineNumber":81,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":82,"author":{"gitId":"glennljs"},"content":"## Credits"},{"lineNumber":83,"author":{"gitId":"glennljs"},"content":"Icons in Checklst are made by and used with courtesy from Flat Icons. "},{"lineNumber":84,"author":{"gitId":"glennljs"},"content":"\u003cbr\u003e \"https://www.flaticon.com/\""}],"authorContributionMap":{"glennljs":75,"-":9}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":59,"author":{"gitId":"glennljs"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"glennljs"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"glennljs"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"glennljs"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"glennljs"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":65,"author":{"gitId":"glennljs"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":67,"author":{"gitId":"glennljs"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"glennljs"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":70,"author":{"gitId":"glennljs"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":72,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":73,"author":{"gitId":"glennljs"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"glennljs"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":76,"author":{"gitId":"glennljs"},"content":":end"},{"lineNumber":77,"author":{"gitId":"glennljs"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"glennljs"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":80,"author":{"gitId":"glennljs"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"glennljs"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"glennljs"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"glennljs"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"glennljs"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":86,"author":{"gitId":"glennljs"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"glennljs"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":89,"author":{"gitId":"glennljs"},"content":":omega"}],"authorContributionMap":{"glennljs":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":" * This file was generated by the Gradle \u0027init\u0027 task."},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":" *"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":" * The settings file is used to specify which projects to include in your build."},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":" *"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":" * in the user manual at https://docs.gradle.org/6.8.1/userguide/multi_project_builds.html"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"rootProject.name \u003d \u0027ip\u0027"}],"authorContributionMap":{"glennljs":10}},{"path":"src/main/java/checklst/exception/ChecklstException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.exception;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":" * Custom exception to represent Exceptions in the Checklst program."},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"public class ChecklstException extends Exception {"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"    private static final long serialVersionUID \u003d 4447981462872622989L;"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"     * Creates instance for Checklst Exceptions."},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"     * @param errMessage Error message to be displayed."},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"    public ChecklstException(String errMessage) {"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"        super(errMessage);"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":21}},{"path":"src/main/java/checklst/gui/ChecklstDialog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.gui;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import javafx.geometry.Insets;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"public class ChecklstDialog extends DialogBox {"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"    private static final String NAME \u003d \"Checklst\";"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"     * Creates a message dialog from the Checklst bot."},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"     * @param l Message to be shown."},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"     * @param iv Image of Checklst."},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"    public ChecklstDialog(Label l, ImageView iv) {"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"        super(NAME, l, iv);"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"        Color dialogColor \u003d new Color(0, 0.7, 1, 1);"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"        this.text.setBackground("},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"            new Background(new BackgroundFill(dialogColor, new CornerRadii(7.0), Insets.EMPTY)));"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"        this.flip();"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":30}},{"path":"src/main/java/checklst/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.gui;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import javafx.geometry.Insets;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"import javafx.geometry.Pos;"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import javafx.scene.Node;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"import javafx.scene.control.Label;"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"import javafx.scene.text.Font;"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"import javafx.scene.text.FontWeight;"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"public class DialogBox extends HBox {"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"    protected Label name;"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"    protected Label text;"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    protected ImageView displayPicture;"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"    protected DialogBox(String name, Label l, ImageView iv) {"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"        this.text \u003d l;"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"        this.text.setFont(new Font(\"Arial\", 14));"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"        this.displayPicture \u003d iv;"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"        this.name \u003d new Label(name);"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"        this.text.setWrapText(true);"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"        this.text.setPadding(new Insets(10));"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"        this.displayPicture.setFitWidth(50.0);"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"        this.displayPicture.setFitHeight(50.0);"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"        DialogBox.setMargin(this.displayPicture, new Insets(21, 5, 3, 5));"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"        this.name.setFont(Font.font(\"Arial\", FontWeight.BOLD, 14));"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"        this.name.setPadding(new Insets(2));"},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"        VBox output \u003d new VBox(this.name, this.text);"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"        this.setPadding(new Insets(5));"},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"        this.getChildren().addAll(output, displayPicture);"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"    protected void flip() {"},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":55}},{"path":"src/main/java/checklst/gui/ErrorDialog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.gui;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import javafx.geometry.Insets;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"public class ErrorDialog extends DialogBox {"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"    private static final String NAME \u003d \"Checklst - Error\";"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"     * Creates an error dialog from the Checklst bot."},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"     * @param l Error to be shown."},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"     * @param iv Image of Checklst."},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"    public ErrorDialog(Label l, ImageView iv) {"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"        super(NAME, l, iv);"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"        Color dialogColor \u003d new Color(1, 0, 0, 1);"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"        this.text.setBackground("},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"            new Background(new BackgroundFill(dialogColor, new CornerRadii(7.0), Insets.EMPTY)));"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"        this.flip();"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":30}},{"path":"src/main/java/checklst/gui/UserDialog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.gui;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import javafx.geometry.Insets;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"public class UserDialog extends DialogBox {"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"    private static final String NAME \u003d \"You\";"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"     * Creates a message dialog from the user."},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"     * @param l Message to be shown."},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"     * @param iv Image of User."},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"    public UserDialog(Label l, ImageView iv) {"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"        super(NAME, l, iv);"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"        Color dialogColor \u003d new Color(1, 0.7, 0, 1);"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"        this.text.setBackground("},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"            new Background(new BackgroundFill(dialogColor, new CornerRadii(7.0), Insets.EMPTY)));"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":28}},{"path":"src/main/java/checklst/main/Checklst.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.main;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import checklst.gui.ChecklstDialog;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import checklst.gui.DialogBox;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"import checklst.gui.ErrorDialog;"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import checklst.gui.UserDialog;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"import checklst.parser.Parser;"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"import checklst.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"import checklst.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"import checklst.ui.Ui;"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"import javafx.application.Application;"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"import javafx.application.Platform;"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"import javafx.geometry.Insets;"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"import javafx.scene.Scene;"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"import javafx.scene.control.Button;"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"import javafx.scene.control.Label;"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"import javafx.scene.image.Image;"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"import javafx.scene.text.Font;"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"import javafx.stage.Stage;"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":" * The Checklst Class represents the entry point of the Checklst Program."},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"public class Checklst extends Application {"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"    private static final Font STANDARD_FONT \u003d new Font(\"Arial\", 14);"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"    private final Ui ui \u003d new Ui();"},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"    private final TaskList taskList \u003d new TaskList();"},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"    private final Parser parser \u003d new Parser(this.taskList);"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"    private final Storage storage \u003d new Storage();"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"    private VBox dialogContainer;"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"    private TextField userInput;"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"    private Button sendButton;"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":"    private Scene scene;"},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"    private Image userIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserIcon.png\"));"},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":"    private Image checklstIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/ChecklstIcon.png\"));"},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":"    public void start(Stage stage) {"},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":"        //Step 1. Formatting the window to look as expected."},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":"        this.userInput \u003d new TextField();"},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":"        this.userInput.setFont(STANDARD_FONT);"},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":"        this.sendButton \u003d new Button(\"Send\");"},{"lineNumber":59,"author":{"gitId":"glennljs"},"content":"        this.sendButton.setFont(STANDARD_FONT);"},{"lineNumber":60,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":61,"author":{"gitId":"glennljs"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":62,"author":{"gitId":"glennljs"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":63,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":64,"author":{"gitId":"glennljs"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":65,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":66,"author":{"gitId":"glennljs"},"content":"        stage.setScene(scene);"},{"lineNumber":67,"author":{"gitId":"glennljs"},"content":"        stage.show();"},{"lineNumber":68,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":69,"author":{"gitId":"glennljs"},"content":"        //Step 2. Formatting the window to look as expected"},{"lineNumber":70,"author":{"gitId":"glennljs"},"content":"        stage.setTitle(\"Checklst\");"},{"lineNumber":71,"author":{"gitId":"glennljs"},"content":"        stage.setResizable(false);"},{"lineNumber":72,"author":{"gitId":"glennljs"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":73,"author":{"gitId":"glennljs"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":74,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":75,"author":{"gitId":"glennljs"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":76,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":77,"author":{"gitId":"glennljs"},"content":"        this.scrollPane.setPrefSize(385, 535);"},{"lineNumber":78,"author":{"gitId":"glennljs"},"content":"        this.scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":79,"author":{"gitId":"glennljs"},"content":"        this.scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":80,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":81,"author":{"gitId":"glennljs"},"content":"        this.scrollPane.setVvalue(1.0);"},{"lineNumber":82,"author":{"gitId":"glennljs"},"content":"        this.scrollPane.setFitToWidth(true);"},{"lineNumber":83,"author":{"gitId":"glennljs"},"content":"        this.scrollPane.setStyle(\"-fx-background-color: transparent; -fx-background: rgb(207, 232, 243);\");"},{"lineNumber":84,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":85,"author":{"gitId":"glennljs"},"content":"        this.dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":86,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":87,"author":{"gitId":"glennljs"},"content":"        this.userInput.setPrefWidth(325.0);"},{"lineNumber":88,"author":{"gitId":"glennljs"},"content":"        this.userInput.setPrefHeight(32.0);"},{"lineNumber":89,"author":{"gitId":"glennljs"},"content":"        this.sendButton.setPrefWidth(70.0);"},{"lineNumber":90,"author":{"gitId":"glennljs"},"content":"        this.sendButton.setPrefHeight(32.0);"},{"lineNumber":91,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":92,"author":{"gitId":"glennljs"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":93,"author":{"gitId":"glennljs"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":94,"author":{"gitId":"glennljs"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":95,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":96,"author":{"gitId":"glennljs"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":97,"author":{"gitId":"glennljs"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":98,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":99,"author":{"gitId":"glennljs"},"content":"        // Step 3. Add functionality to handle user input."},{"lineNumber":100,"author":{"gitId":"glennljs"},"content":"        this.sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":101,"author":{"gitId":"glennljs"},"content":"            this.handleUserInput();"},{"lineNumber":102,"author":{"gitId":"glennljs"},"content":"        });"},{"lineNumber":103,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":104,"author":{"gitId":"glennljs"},"content":"        this.userInput.setOnAction((event) -\u003e {"},{"lineNumber":105,"author":{"gitId":"glennljs"},"content":"            this.handleUserInput();"},{"lineNumber":106,"author":{"gitId":"glennljs"},"content":"        });"},{"lineNumber":107,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":108,"author":{"gitId":"glennljs"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes."},{"lineNumber":109,"author":{"gitId":"glennljs"},"content":"        this.dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":110,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":111,"author":{"gitId":"glennljs"},"content":"        // Get History"},{"lineNumber":112,"author":{"gitId":"glennljs"},"content":"        try {"},{"lineNumber":113,"author":{"gitId":"glennljs"},"content":"            this.storage.parseHistory(this.taskList);"},{"lineNumber":114,"author":{"gitId":"glennljs"},"content":"            this.addChecklstMessage(\"History successfully parsed!\");"},{"lineNumber":115,"author":{"gitId":"glennljs"},"content":"        } catch (ChecklstException e) {"},{"lineNumber":116,"author":{"gitId":"glennljs"},"content":"            this.addErrorMessage(e.getMessage());"},{"lineNumber":117,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":119,"author":{"gitId":"glennljs"},"content":"        this.addChecklstMessage(this.ui.sendWelcome());"},{"lineNumber":120,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":121,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":123,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"glennljs"},"content":"     * Iteration 2:"},{"lineNumber":125,"author":{"gitId":"glennljs"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":126,"author":{"gitId":"glennljs"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":127,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"glennljs"},"content":"    private void handleUserInput() {"},{"lineNumber":129,"author":{"gitId":"glennljs"},"content":"        if (userInput.getText().equals(\"bye\")) {"},{"lineNumber":130,"author":{"gitId":"glennljs"},"content":"            try {"},{"lineNumber":131,"author":{"gitId":"glennljs"},"content":"                Platform.exit();"},{"lineNumber":132,"author":{"gitId":"glennljs"},"content":"            } catch (Exception e) {"},{"lineNumber":133,"author":{"gitId":"glennljs"},"content":"                // Do nothing"},{"lineNumber":134,"author":{"gitId":"glennljs"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":137,"author":{"gitId":"glennljs"},"content":"        this.addUserMessage(userInput.getText());"},{"lineNumber":138,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":139,"author":{"gitId":"glennljs"},"content":"        String response \u003d \"\";"},{"lineNumber":140,"author":{"gitId":"glennljs"},"content":"        try {"},{"lineNumber":141,"author":{"gitId":"glennljs"},"content":"            response \u003d this.parser.parse(userInput.getText().split(\" \", 2));"},{"lineNumber":142,"author":{"gitId":"glennljs"},"content":"            this.addChecklstMessage(response);"},{"lineNumber":143,"author":{"gitId":"glennljs"},"content":"        } catch (ChecklstException e) {"},{"lineNumber":144,"author":{"gitId":"glennljs"},"content":"            this.addErrorMessage(e.getMessage());"},{"lineNumber":145,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":147,"author":{"gitId":"glennljs"},"content":"        userInput.clear();"},{"lineNumber":148,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":150,"author":{"gitId":"glennljs"},"content":"    private void addChecklstMessage(String input) {"},{"lineNumber":151,"author":{"gitId":"glennljs"},"content":"        DialogBox newDialogBox \u003d new ChecklstDialog(new Label(input), new ImageView(checklstIcon));"},{"lineNumber":152,"author":{"gitId":"glennljs"},"content":"        this.dialogContainer.getChildren().add(newDialogBox);"},{"lineNumber":153,"author":{"gitId":"glennljs"},"content":"        VBox.setMargin(newDialogBox, new Insets(3));"},{"lineNumber":154,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":156,"author":{"gitId":"glennljs"},"content":"    private void addUserMessage(String input) {"},{"lineNumber":157,"author":{"gitId":"glennljs"},"content":"        DialogBox newDialogBox \u003d new UserDialog(new Label(input), new ImageView(userIcon));"},{"lineNumber":158,"author":{"gitId":"glennljs"},"content":"        this.dialogContainer.getChildren().add(newDialogBox);"},{"lineNumber":159,"author":{"gitId":"glennljs"},"content":"        VBox.setMargin(newDialogBox, new Insets(3));"},{"lineNumber":160,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":162,"author":{"gitId":"glennljs"},"content":"    private void addErrorMessage(String input) {"},{"lineNumber":163,"author":{"gitId":"glennljs"},"content":"        DialogBox newDialogBox \u003d new ErrorDialog(new Label(input), new ImageView(checklstIcon));"},{"lineNumber":164,"author":{"gitId":"glennljs"},"content":"        this.dialogContainer.getChildren().add(newDialogBox);"},{"lineNumber":165,"author":{"gitId":"glennljs"},"content":"        VBox.setMargin(newDialogBox, new Insets(3));"},{"lineNumber":166,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":168,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":169,"author":{"gitId":"glennljs"},"content":"    public void stop() throws Exception {"},{"lineNumber":170,"author":{"gitId":"glennljs"},"content":"        this.storage.saveToFile(this.taskList);"},{"lineNumber":171,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":173,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":173}},{"path":"src/main/java/checklst/main/Loader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.main;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"public class Loader {"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"    public static void main(String[] args) {"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"        Application.launch(Checklst.class, args);"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":14}},{"path":"src/main/java/checklst/parser/CheckedFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.parser;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"@FunctionalInterface"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"public interface CheckedFunction\u003cT, R\u003e {"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"    R apply(T t) throws ChecklstException;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":8}},{"path":"src/main/java/checklst/parser/MethodPair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.parser;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"public class MethodPair {"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"    private final String description;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"    private final CheckedFunction\u003cString[], String\u003e method;"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"     * Creates a new Method Pair of Description and Function to be run."},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"     * @param description Description of method."},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"     * @param method Functional Interface method to be run on call."},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"    public MethodPair(String description, CheckedFunction\u003cString[], String\u003e method) {"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"        this.method \u003d method;"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"    public String getDescription() {"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"        return this.description;"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"    public CheckedFunction\u003cString[], String\u003e getMethod() {"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"        return this.method;"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":26}},{"path":"src/main/java/checklst/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.parser;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import java.util.Map;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import java.util.stream.Collectors;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import checklst.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"import checklst.task.Event;"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"import checklst.task.Task;"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"import checklst.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"import checklst.task.Todo;"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":" * The Parser class makes sense of inputs and runs the respective follow up methods."},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"public class Parser {"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"    private final TaskList taskList;"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    private final Map\u003cString, MethodPair\u003e methodMap \u003d Map.of("},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"        \"list\", new MethodPair(\"Lists all Tasks\", x -\u003e list(x)),"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"        \"todo\", new MethodPair(\"Creates a Todo\", x -\u003e todo(x)),"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"        \"event\", new MethodPair(\"Creates an Event\", x -\u003e event(x)),"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"        \"deadline\", new MethodPair(\"Creates a Deadline\", x -\u003e deadline(x)),"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"        \"done\", new MethodPair(\"Completes a Task\", x -\u003e done(x)),"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"        \"delete\", new MethodPair(\"Deletes a Task\", x -\u003e delete(x)),"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"        \"find\", new MethodPair(\"Finds a Task\", x -\u003e find(x)),"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"        \"sort\", new MethodPair(\"Sorts Taks\", x -\u003e sort(x)),"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"        \"help\", new MethodPair(\"Get all Commands\", x -\u003e help(x)),"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"        \"bye\", new MethodPair(\"Exits Checklst\", x -\u003e null)"},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"    );"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"    public Parser(TaskList taskList) {"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"     * Parses the input string and returns the corresponding command."},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"     * @param input Input string to be parsed."},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"     * @return String representing the output."},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"     * @throws ChecklstException Exception when command is invalid."},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"    public String parse(String[] input) throws ChecklstException {"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"        MethodPair method \u003d methodMap.get(input[0]);"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"        if (method \u003d\u003d null) {"},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"Sorry I didn\u0027t understand that command!\");"},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":"        return method.getMethod().apply(input);"},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":"    private String list(String[] input) {"},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":"        return this.taskList.toString();"},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":"    private String todo(String[] input) throws ChecklstException {"},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":"        assert input.length \u003e\u003d 1 : \"No Todo Input\";"},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":"        Task newTodo \u003d Todo.makeTodo(input[1]);"},{"lineNumber":59,"author":{"gitId":"glennljs"},"content":"        return this.taskList.add(newTodo);"},{"lineNumber":60,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":62,"author":{"gitId":"glennljs"},"content":"    private String event(String[] input) throws ChecklstException {"},{"lineNumber":63,"author":{"gitId":"glennljs"},"content":"        assert input.length \u003e\u003d 1 : \"No Event Input\";"},{"lineNumber":64,"author":{"gitId":"glennljs"},"content":"        Task newEvent \u003d Event.makeEvent(input[1]);"},{"lineNumber":65,"author":{"gitId":"glennljs"},"content":"        return this.taskList.add(newEvent);"},{"lineNumber":66,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":68,"author":{"gitId":"glennljs"},"content":"    private String deadline(String[] input) throws ChecklstException {"},{"lineNumber":69,"author":{"gitId":"glennljs"},"content":"        assert input.length \u003e\u003d 1 : \"No Deadline Input\";"},{"lineNumber":70,"author":{"gitId":"glennljs"},"content":"        Task newDeadline \u003d Deadline.makeDeadline(input[1]);"},{"lineNumber":71,"author":{"gitId":"glennljs"},"content":"        return this.taskList.add(newDeadline);"},{"lineNumber":72,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":74,"author":{"gitId":"glennljs"},"content":"    private String done(String[] input) throws ChecklstException {"},{"lineNumber":75,"author":{"gitId":"glennljs"},"content":"        assert input.length \u003e\u003d 1 : \"No Done Input\";"},{"lineNumber":76,"author":{"gitId":"glennljs"},"content":"        int doneIndex \u003d Integer.parseInt(input[1]);"},{"lineNumber":77,"author":{"gitId":"glennljs"},"content":"        return \"Nice! I\u0027ve marked this task as done!\\n\" + this.taskList.completeTask(doneIndex);"},{"lineNumber":78,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":80,"author":{"gitId":"glennljs"},"content":"    private String delete(String[] input) throws ChecklstException {"},{"lineNumber":81,"author":{"gitId":"glennljs"},"content":"        assert input.length \u003e\u003d 1 : \"No Delete Input\";"},{"lineNumber":82,"author":{"gitId":"glennljs"},"content":"        int deleteIndex \u003d Integer.parseInt(input[1]);"},{"lineNumber":83,"author":{"gitId":"glennljs"},"content":"        return \"Alright! I\u0027ve deleted this task!\\n\" + this.taskList.deleteTask(deleteIndex);"},{"lineNumber":84,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":86,"author":{"gitId":"glennljs"},"content":"    private String find(String[] input) throws ChecklstException {"},{"lineNumber":87,"author":{"gitId":"glennljs"},"content":"        assert input.length \u003e\u003d 1 : \"No Find Input\";"},{"lineNumber":88,"author":{"gitId":"glennljs"},"content":"        return \"Here are the matching tasks in your list!\\n\" + this.taskList.findTask(input[1]);"},{"lineNumber":89,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":91,"author":{"gitId":"glennljs"},"content":"    private String sort(String[] input) {"},{"lineNumber":92,"author":{"gitId":"glennljs"},"content":"        return this.taskList.sort();"},{"lineNumber":93,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":95,"author":{"gitId":"glennljs"},"content":"    private String help(String[] input) {"},{"lineNumber":96,"author":{"gitId":"glennljs"},"content":"        return \"These are the Commands Available:\\n\""},{"lineNumber":97,"author":{"gitId":"glennljs"},"content":"            + this.methodMap.entrySet().stream()"},{"lineNumber":98,"author":{"gitId":"glennljs"},"content":"                .map(x -\u003e x.getKey() + \": \" + x.getValue().getDescription())"},{"lineNumber":99,"author":{"gitId":"glennljs"},"content":"                .collect(Collectors.toList())"},{"lineNumber":100,"author":{"gitId":"glennljs"},"content":"                .toString()"},{"lineNumber":101,"author":{"gitId":"glennljs"},"content":"                .replace(\"[\", \"\")"},{"lineNumber":102,"author":{"gitId":"glennljs"},"content":"                .replace(\"]\", \"\")"},{"lineNumber":103,"author":{"gitId":"glennljs"},"content":"                .replace(\", \", \"\\n\");"},{"lineNumber":104,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":106,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":106}},{"path":"src/main/java/checklst/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.storage;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import java.io.FileOutputStream;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import java.io.PrintStream;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"import java.nio.file.InvalidPathException;"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"import java.nio.file.Paths;"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"import java.util.stream.Collectors;"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"import checklst.task.Deadline;"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"import checklst.task.Event;"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"import checklst.task.TaskList;"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"import checklst.task.Todo;"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":" * The Storage class stores and processes the saved commands."},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"public class Storage {"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"    private List\u003cString\u003e exportList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"     * Saves the command history to the save file."},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"     * @throws ChecklstException Exception when unable to save or write to file."},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"    public void saveToFile(TaskList taskList) throws ChecklstException {"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"        File history \u003d new File(\"./data/checklst.txt\");"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"        history.getParentFile().mkdirs();"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"        assert history.canWrite() : \"Can\u0027t Write to file!\";"},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"            history.createNewFile();"},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"        } catch (IOException | SecurityException e) {"},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"Unable to make file!\");"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":"        try (PrintStream out \u003d new PrintStream(new FileOutputStream(\"./data/checklst.txt\"))) {"},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"            exportList \u003d taskList.getTaskList().stream().map(x -\u003e x.export()).collect(Collectors.toList());"},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":"            out.print(this.exportList.toString().replace(\"[\", \"\").replace(\"]\", \"\").replace(\", \", \"\\n\"));"},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"File not found! Please create a file at path ./data/checklst.txt\");"},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":"     * Processes history commands and run the relevant Task parser."},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":"     * @param taskList TaskList to add Tasks to."},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":"     * @throws ChecklstException Exception if strings are corrupted."},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":"    public void parseHistory(TaskList taskList) throws ChecklstException {"},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"glennljs"},"content":"            String[] history \u003d Files.readString(Paths.get(\"./data/checklst.txt\")).split(\"\\n\");"},{"lineNumber":60,"author":{"gitId":"glennljs"},"content":"            for (String task: history) {"},{"lineNumber":61,"author":{"gitId":"glennljs"},"content":"                if (task.isBlank()) {"},{"lineNumber":62,"author":{"gitId":"glennljs"},"content":"                    continue;"},{"lineNumber":63,"author":{"gitId":"glennljs"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":65,"author":{"gitId":"glennljs"},"content":"                if (task.charAt(0) \u003d\u003d \u0027T\u0027) {"},{"lineNumber":66,"author":{"gitId":"glennljs"},"content":"                    taskList.add(Todo.parseTodo(task));"},{"lineNumber":67,"author":{"gitId":"glennljs"},"content":"                } else if (task.charAt(0) \u003d\u003d \u0027D\u0027) {"},{"lineNumber":68,"author":{"gitId":"glennljs"},"content":"                    taskList.add(Deadline.parseDeadline(task));"},{"lineNumber":69,"author":{"gitId":"glennljs"},"content":"                } else if (task.charAt(0) \u003d\u003d \u0027E\u0027) {"},{"lineNumber":70,"author":{"gitId":"glennljs"},"content":"                    taskList.add(Event.parseEvent(task));"},{"lineNumber":71,"author":{"gitId":"glennljs"},"content":"                } else {"},{"lineNumber":72,"author":{"gitId":"glennljs"},"content":"                    throw new ChecklstException(\"History corrupted!\");"},{"lineNumber":73,"author":{"gitId":"glennljs"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"glennljs"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"glennljs"},"content":"        } catch (InvalidPathException | IOException e) {"},{"lineNumber":76,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"No history found... Initializing from blank state!\");"},{"lineNumber":77,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":79,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":81,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":81}},{"path":"src/main/java/checklst/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":" * The Deadline class represents a Task with a specific Deadline."},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"public class Deadline extends Task {"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"    protected final LocalDate dueDate;"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"    protected Deadline(String name, LocalDate dueDate) {"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"        super(name);"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"        this.dueDate \u003d dueDate;"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"    protected Deadline(String name, boolean completed, LocalDate dueDate) {"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"        super(name, completed);"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"        this.dueDate \u003d dueDate;"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"     * Creates a new Deadline object."},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"     * @param input Input for the Deadline in the form \"{ name } /by { date }\"."},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"     * @return New Deadline object."},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"    public static Deadline makeDeadline(String input) throws ChecklstException {"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"        String[] splitInput \u003d input.split(\" /by \");"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"        if (splitInput.length \u003d\u003d 1) {"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"Inproper Deadline format used! Please use { name } /by { deadline }\");"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"        LocalDate dueDate;"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"            dueDate \u003d LocalDate.parse(splitInput[1]);"},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"Incorrect DateTime format! Please use YYYY-MM-DD\");"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":"        return new Deadline(splitInput[0], dueDate);"},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"     * Parses a saved Deadline string."},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":"     * @param input Deadline string."},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":"     * @return Deadline object."},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":"    public static Deadline parseDeadline(String input) {"},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":"        String[] splitInput \u003d input.split(\" ; \");"},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":"        String name \u003d splitInput[2];"},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":"        boolean completed \u003d splitInput[1].equals(\"X\") ? true : false;"},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":"        LocalDate dueDate \u003d LocalDate.parse(splitInput[3]);"},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":"        return new Deadline(name, completed, dueDate);"},{"lineNumber":59,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":61,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"glennljs"},"content":"    public String export() {"},{"lineNumber":63,"author":{"gitId":"glennljs"},"content":"        String output \u003d \"D ; \";"},{"lineNumber":64,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":65,"author":{"gitId":"glennljs"},"content":"        if (this.isCompleted) {"},{"lineNumber":66,"author":{"gitId":"glennljs"},"content":"            output +\u003d \"X ; \";"},{"lineNumber":67,"author":{"gitId":"glennljs"},"content":"        } else {"},{"lineNumber":68,"author":{"gitId":"glennljs"},"content":"            output +\u003d \"O ; \";"},{"lineNumber":69,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":71,"author":{"gitId":"glennljs"},"content":"        output +\u003d this.name + \" ; \" + this.dueDate.toString();"},{"lineNumber":72,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":73,"author":{"gitId":"glennljs"},"content":"        return output;"},{"lineNumber":74,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":76,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":77,"author":{"gitId":"glennljs"},"content":"    public Task complete() {"},{"lineNumber":78,"author":{"gitId":"glennljs"},"content":"        return new Deadline(this.name, true, this.dueDate);"},{"lineNumber":79,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":81,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":82,"author":{"gitId":"glennljs"},"content":"    public String toString() {"},{"lineNumber":83,"author":{"gitId":"glennljs"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":84,"author":{"gitId":"glennljs"},"content":"            + this.dueDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"},{"lineNumber":85,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":87,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":87}},{"path":"src/main/java/checklst/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":" * The Event class represents a Task which has a specific DateTime."},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"public class Event extends Task {"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"    protected final LocalDate eventDate;"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"    protected Event(String name, LocalDate eventDate) {"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"        super(name);"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"        this.eventDate \u003d eventDate;"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"    protected Event(String name, boolean completed, LocalDate eventDate) {"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"        super(name, completed);"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"        this.eventDate \u003d eventDate;"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"     * Creates a new Event object."},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"     * @param input Input for the Event in the form \"{ name } /at { date }\"."},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"     * @return New Event object."},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"    public static Event makeEvent(String input) throws ChecklstException {"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"        String[] splitInput \u003d input.split(\" /at \");"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"        if (splitInput.length \u003d\u003d 1) {"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"Inproper Event format used! Please use { name } /at { event }\");"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"        LocalDate eventDate;"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"            eventDate \u003d LocalDate.parse(splitInput[1]);"},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"Incorrect Event Date format! Please use YYYY-MM-DD\");"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":"        return new Event(splitInput[0], eventDate);"},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"     * Parses a saved Event string."},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":"     * @param input Event string."},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":"     * @return Event object."},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":"    public static Event parseEvent(String input) {"},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":"        String[] splitInput \u003d input.split(\" ; \");"},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":"        String name \u003d splitInput[2];"},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":"        boolean completed \u003d splitInput[1].equals(\"X\") ? true : false;"},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":"        LocalDate dateTime \u003d LocalDate.parse(splitInput[3]);"},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":"        return new Event(name, completed, dateTime);"},{"lineNumber":59,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":61,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"glennljs"},"content":"    public String export() {"},{"lineNumber":63,"author":{"gitId":"glennljs"},"content":"        String output \u003d \"E ; \";"},{"lineNumber":64,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":65,"author":{"gitId":"glennljs"},"content":"        if (this.isCompleted) {"},{"lineNumber":66,"author":{"gitId":"glennljs"},"content":"            output +\u003d \"X ; \";"},{"lineNumber":67,"author":{"gitId":"glennljs"},"content":"        } else {"},{"lineNumber":68,"author":{"gitId":"glennljs"},"content":"            output +\u003d \"O ; \";"},{"lineNumber":69,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":71,"author":{"gitId":"glennljs"},"content":"        output +\u003d this.name + \" ; \" + this.eventDate.toString();"},{"lineNumber":72,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":73,"author":{"gitId":"glennljs"},"content":"        return output;"},{"lineNumber":74,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":76,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":77,"author":{"gitId":"glennljs"},"content":"    public Task complete() {"},{"lineNumber":78,"author":{"gitId":"glennljs"},"content":"        return new Event(this.name, true, this.eventDate);"},{"lineNumber":79,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":81,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":82,"author":{"gitId":"glennljs"},"content":"    public String toString() {"},{"lineNumber":83,"author":{"gitId":"glennljs"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":84,"author":{"gitId":"glennljs"},"content":"            + this.eventDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"},{"lineNumber":85,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":87,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":87}},{"path":"src/main/java/checklst/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":" * The Task class is an abstract skeleton that all Tasks (Todo, Event, Deadline) inherit from."},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"    protected final String name;"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"    protected final boolean isCompleted;"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"    protected Task(String name) {"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"        this.name \u003d name;"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"        this.isCompleted \u003d false;"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"    protected Task(String name, boolean isCompleted) {"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"        this.name \u003d name;"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"        this.isCompleted \u003d isCompleted;"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"     * Returns a String representation of the Task for exporting."},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"     * Format: \"Type | Completed | Name | Optional: Date\""},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"     * @return String representation of Task."},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"    public abstract String export();"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"     * Returns a new Task object which has been completed."},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"     * @return New completed Task."},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"    public abstract Task complete();"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"        String isCompleted \u003d this.isCompleted ? \"[X]\" : \"[ ]\";"},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"        return isCompleted + \" \" + this.name;"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":40}},{"path":"src/main/java/checklst/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import java.util.Map;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"import java.util.stream.Collectors;"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":" * The TaskList class wraps a list of Tasks and has various methods to process them."},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"public class TaskList {"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"    private final List\u003cTask\u003e taskList;"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"     * Creates a new TaskList object."},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"    public TaskList() {"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"    private TaskList(List\u003cTask\u003e taskList) {"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"     * Adds a Task to the TaskList."},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"     * @param task The Task to be added."},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"     * @return A String indicating the number of items in the TaskList."},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"     * @throws CheckLstException Exception when duplicate unfinished Task."},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"    public String add(Task task) throws ChecklstException {"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"        List\u003cString\u003e listNames \u003d this.taskList.stream()"},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"            .filter(x -\u003e !x.isCompleted)"},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"            .filter(x -\u003e x.getClass().equals(task.getClass()))"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"            .map(x -\u003e x.name)"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"            .collect(Collectors.toList());"},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"        if (listNames.contains(task.name)) {"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"You have an uncompleted Task of a similar name and type already!\");"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"        this.taskList.add(task);"},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"        return String.format(\"Added: %s\\nYou now have %d task(s) in the list!\", task, this.taskList.size());"},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":"     * Completes a Task in the TaskList."},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":"     * @param index The index (1-based) of the Task to be completed."},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":"     * @return The completed Task."},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":"     * @throws ChecklstException Exception thrown if index is out of bounds."},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":"    public Task completeTask(int index) throws ChecklstException {"},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":"        index--;"},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":59,"author":{"gitId":"glennljs"},"content":"        if (index \u003c 0 || index \u003e\u003d this.taskList.size()) {"},{"lineNumber":60,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"The task index you have indicated does not exist!\");"},{"lineNumber":61,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":63,"author":{"gitId":"glennljs"},"content":"        Task newTask \u003d taskList.get(index).complete();"},{"lineNumber":64,"author":{"gitId":"glennljs"},"content":"        this.taskList.set(index, newTask);"},{"lineNumber":65,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":66,"author":{"gitId":"glennljs"},"content":"        return newTask;"},{"lineNumber":67,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":69,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"glennljs"},"content":"     * Deletes a Task from the TaskList based on index."},{"lineNumber":71,"author":{"gitId":"glennljs"},"content":"     * @param index The index (1-based) of the Task to be deleted."},{"lineNumber":72,"author":{"gitId":"glennljs"},"content":"     * @return The deleted Task."},{"lineNumber":73,"author":{"gitId":"glennljs"},"content":"     * @throws ChecklstException Exception thrown if index is out of bounds."},{"lineNumber":74,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"glennljs"},"content":"    public Task deleteTask(int index) throws ChecklstException {"},{"lineNumber":76,"author":{"gitId":"glennljs"},"content":"        index--;"},{"lineNumber":77,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":78,"author":{"gitId":"glennljs"},"content":"        if (index \u003c 0 || index \u003e\u003d this.taskList.size()) {"},{"lineNumber":79,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"The task index you have indicated does not exist!\");"},{"lineNumber":80,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":82,"author":{"gitId":"glennljs"},"content":"        Task newTask \u003d taskList.get(index);"},{"lineNumber":83,"author":{"gitId":"glennljs"},"content":"        this.taskList.remove(index);"},{"lineNumber":84,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":85,"author":{"gitId":"glennljs"},"content":"        return newTask;"},{"lineNumber":86,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":88,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"glennljs"},"content":"     * Returns a TaskList with the filtered tasks."},{"lineNumber":90,"author":{"gitId":"glennljs"},"content":"     * @param input String to filter by."},{"lineNumber":91,"author":{"gitId":"glennljs"},"content":"     * @return Filtered TaskList"},{"lineNumber":92,"author":{"gitId":"glennljs"},"content":"     * @throws ChecklstException Exception when no items are found."},{"lineNumber":93,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"glennljs"},"content":"    public TaskList findTask(String input) throws ChecklstException {"},{"lineNumber":95,"author":{"gitId":"glennljs"},"content":"        List\u003cTask\u003e filteredList \u003d this.taskList.stream()"},{"lineNumber":96,"author":{"gitId":"glennljs"},"content":"            .filter(x -\u003e x.name.contains(input))"},{"lineNumber":97,"author":{"gitId":"glennljs"},"content":"            .collect(Collectors.toList());"},{"lineNumber":98,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":99,"author":{"gitId":"glennljs"},"content":"        if (filteredList.size() \u003d\u003d 0) {"},{"lineNumber":100,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"No results found!!\");"},{"lineNumber":101,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":103,"author":{"gitId":"glennljs"},"content":"        return new TaskList(filteredList);"},{"lineNumber":104,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":106,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"glennljs"},"content":"     * Sorts the TaskList by completed and Task Type"},{"lineNumber":108,"author":{"gitId":"glennljs"},"content":"     * @return String of new Sorted List"},{"lineNumber":109,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"glennljs"},"content":"    public String sort() {"},{"lineNumber":111,"author":{"gitId":"glennljs"},"content":"        Map\u003cClass\u003c? extends Task\u003e, Integer\u003e sortMap \u003d"},{"lineNumber":112,"author":{"gitId":"glennljs"},"content":"            Map.of(Todo.class, 0, Deadline.class, 1, Event.class, 2);"},{"lineNumber":113,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":114,"author":{"gitId":"glennljs"},"content":"        this.taskList.sort((x, y) -\u003e {"},{"lineNumber":115,"author":{"gitId":"glennljs"},"content":"            if (x.isCompleted \u0026\u0026 y.isCompleted) {"},{"lineNumber":116,"author":{"gitId":"glennljs"},"content":"                return sortMap.get(x.getClass()).compareTo(sortMap.get(y.getClass()));"},{"lineNumber":117,"author":{"gitId":"glennljs"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":119,"author":{"gitId":"glennljs"},"content":"            return x.isCompleted ? 1 : -1;"},{"lineNumber":120,"author":{"gitId":"glennljs"},"content":"        });"},{"lineNumber":121,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":122,"author":{"gitId":"glennljs"},"content":"        return \"Your list is now sorted!\\nYour new list is:\\n\" + this;"},{"lineNumber":123,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":125,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":126,"author":{"gitId":"glennljs"},"content":"    public String toString() {"},{"lineNumber":127,"author":{"gitId":"glennljs"},"content":"        if (this.taskList.size() \u003d\u003d 0) {"},{"lineNumber":128,"author":{"gitId":"glennljs"},"content":"            return \"Task list is currently empty!\";"},{"lineNumber":129,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":131,"author":{"gitId":"glennljs"},"content":"        String taskListOutput \u003d \"These are your current task\";"},{"lineNumber":132,"author":{"gitId":"glennljs"},"content":"        taskListOutput +\u003d this.taskList.size() \u003d\u003d 1 ? \":\" : \"s:\";"},{"lineNumber":133,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":134,"author":{"gitId":"glennljs"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"},{"lineNumber":135,"author":{"gitId":"glennljs"},"content":"            taskListOutput +\u003d \"\\n\" + String.valueOf(i + 1) + \". \" + this.taskList.get(i);"},{"lineNumber":136,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"glennljs"},"content":"        return taskListOutput;"},{"lineNumber":138,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":140,"author":{"gitId":"glennljs"},"content":"    public List\u003cTask\u003e getTaskList() {"},{"lineNumber":141,"author":{"gitId":"glennljs"},"content":"        return this.taskList;"},{"lineNumber":142,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":144,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":144}},{"path":"src/main/java/checklst/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":" * The Deadline class represents a basic Task."},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"public class Todo extends Task {"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"    protected Todo(String name) {"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"        super(name);"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"    protected Todo(String name, boolean completed) {"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"        super(name, completed);"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"     * Creates a Todo Object."},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"     * @param name - Name of Todo."},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"     * @return - Todo Object."},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"    public static Todo makeTodo(String name) throws ChecklstException {"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"        if (name.equals(\"\")) {"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"            throw new ChecklstException(\"Todo needs a name!\");"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"        return new Todo(name);"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"     * Parses a saved Todo String."},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"     * @param input Todo String."},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"     * @return Todo Object."},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":"    public static Todo parseTodo(String input) {"},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"        String[] splitInput \u003d input.split(\" ; \");"},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"        String name \u003d splitInput[2];"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"        boolean completed \u003d splitInput[1].equals(\"X\") ? true : false;"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":"        return new Todo(name, completed);"},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":"    public String export() {"},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"        String output \u003d \"T ; \";"},{"lineNumber":46,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":47,"author":{"gitId":"glennljs"},"content":"        if (this.isCompleted) {"},{"lineNumber":48,"author":{"gitId":"glennljs"},"content":"            output +\u003d \"X ; \";"},{"lineNumber":49,"author":{"gitId":"glennljs"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"glennljs"},"content":"            output +\u003d \"O ; \";"},{"lineNumber":51,"author":{"gitId":"glennljs"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":53,"author":{"gitId":"glennljs"},"content":"        output +\u003d this.name;"},{"lineNumber":54,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":55,"author":{"gitId":"glennljs"},"content":"        return output;"},{"lineNumber":56,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":58,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"glennljs"},"content":"    public Task complete() {"},{"lineNumber":60,"author":{"gitId":"glennljs"},"content":"        return new Todo(this.name, true);"},{"lineNumber":61,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":63,"author":{"gitId":"glennljs"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"glennljs"},"content":"    public String toString() {"},{"lineNumber":65,"author":{"gitId":"glennljs"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":66,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":68,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":68}},{"path":"src/main/java/checklst/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.ui;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":" * The Ui class handles direct I/O from the user."},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":" */"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello I\u0027m Checklst! What can I do for you?\";"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"     * Prints Welcome output."},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"     * @return Welcome output."},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"    public String sendWelcome() {"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"        return WELCOME_MESSAGE;"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":19}},{"path":"src/test/java/checklst/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"    public void createDeadlineTest() {"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Deadline.makeDeadline(\"\"));"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Deadline.makeDeadline(\"test \"));"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Deadline.makeDeadline(\"test /by\"));"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Deadline.makeDeadline(\"test /by \"));"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Deadline.makeDeadline(\"test  /by 23rd Feb\"));"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Deadline.makeDeadline(\"test/by2020-11-20\"));"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":21}},{"path":"src/test/java/checklst/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"public class EventTest {"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"    public void createEventTest() {"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Event.makeEvent(\"\"));"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Event.makeEvent(\"test\"));"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Event.makeEvent(\"test /at\"));"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Event.makeEvent(\"test /at \"));"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Event.makeEvent(\"test /at 23rd Feb\"));"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Event.makeEvent(\"test/at2020-11-20\"));"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":21}},{"path":"src/test/java/checklst/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"public class TaskListTest {"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"    private final TaskList taskList \u003d new TaskList();"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"    public void addTaskTest() throws ChecklstException {"},{"lineNumber":17,"author":{"gitId":"glennljs"},"content":"        Task task \u003d new Todo(\"Hello\");"},{"lineNumber":18,"author":{"gitId":"glennljs"},"content":"        this.taskList.add(task);"},{"lineNumber":19,"author":{"gitId":"glennljs"},"content":"        assertEquals(task, this.taskList.getTaskList().get(0));"},{"lineNumber":20,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":22,"author":{"gitId":"glennljs"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"    public void completeTaskTest() throws ChecklstException {"},{"lineNumber":24,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e this.taskList.completeTask(-1));"},{"lineNumber":25,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e this.taskList.completeTask(0));"},{"lineNumber":26,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e this.taskList.completeTask(1));"},{"lineNumber":27,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":29,"author":{"gitId":"glennljs"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"glennljs"},"content":"    public void deleteTaskTest() throws ChecklstException {"},{"lineNumber":31,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e this.taskList.deleteTask(-1));"},{"lineNumber":32,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e this.taskList.deleteTask(0));"},{"lineNumber":33,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e this.taskList.deleteTask(1));"},{"lineNumber":34,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":36,"author":{"gitId":"glennljs"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"glennljs"},"content":"    public void findTaskTest() throws ChecklstException {"},{"lineNumber":38,"author":{"gitId":"glennljs"},"content":"        Task task \u003d new Todo(\"hello\");"},{"lineNumber":39,"author":{"gitId":"glennljs"},"content":"        this.taskList.add(task);"},{"lineNumber":40,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":41,"author":{"gitId":"glennljs"},"content":"        assertTrue(this.taskList.findTask(\"hello\").getTaskList().size() \u003e 0);"},{"lineNumber":42,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e this.taskList.findTask(\"abc\"));"},{"lineNumber":43,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":45,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":45}},{"path":"src/test/java/checklst/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"package checklst.task;"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"import checklst.exception.ChecklstException;"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"public class TodoTest {"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"    public void createTodoTest() {"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"        assertThrows(ChecklstException.class, () -\u003e Todo.makeTodo(\"\"));"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"glennljs"},"content":""},{"lineNumber":16,"author":{"gitId":"glennljs"},"content":"}"}],"authorContributionMap":{"glennljs":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"glennljs"},"content":"todo Todo1"},{"lineNumber":2,"author":{"gitId":"glennljs"},"content":"event Event1 /at 2020-05-12"},{"lineNumber":3,"author":{"gitId":"glennljs"},"content":"deadline Deadline1 /by 2020-07-24"},{"lineNumber":4,"author":{"gitId":"glennljs"},"content":"todo Todo2"},{"lineNumber":5,"author":{"gitId":"glennljs"},"content":"list"},{"lineNumber":6,"author":{"gitId":"glennljs"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"glennljs"},"content":"delete 2"},{"lineNumber":8,"author":{"gitId":"glennljs"},"content":"done 3"},{"lineNumber":9,"author":{"gitId":"glennljs"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"glennljs"},"content":"list"},{"lineNumber":11,"author":{"gitId":"glennljs"},"content":"event ErrorEvent"},{"lineNumber":12,"author":{"gitId":"glennljs"},"content":"deadline ErrorDeadline"},{"lineNumber":13,"author":{"gitId":"glennljs"},"content":"gibberish"},{"lineNumber":14,"author":{"gitId":"glennljs"},"content":"bye"}],"authorContributionMap":{"glennljs":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"glennljs"},"content":"java -classpath ../bin Checklst \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"glennljs":1,"-":37}}]
