[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"}"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"}"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"    String javaFxVersion \u003d \u002711\u0027;"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"}"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"        showExceptions true"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"        exceptionFormat \"full\""},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"        showCauses true"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"        showStackTraces true"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"        showStandardStreams \u003d false"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"}"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"application {"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"}"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"shadowJar {"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"    archiveClassifier \u003d null"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"}"},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"checkstyle {"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"}"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"run{"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"    enableAssertions \u003d true"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"}"}],"authorContributionMap":{"markmcwong":60}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"T|false|1"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"D|false|return book|y Sunday"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"D|false|return book|y Sunday"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"D|false|return book|y Sunday"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"D|false|return book|y Sunday"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"D|false|return book|y Sunday"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"D|false|return book|y Sunday"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"D|false|return book|y 2/12/2019 1800"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"D|false|return book |y 2/12/2019 1800"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"D|false|return book| 2/12/2019 1800"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"D|false|return book|2/12/2019 1800"}],"authorContributionMap":{"markmcwong":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"Duke is a chat bot app that helps you to organise your tasks in a CLI manner with graphical feedback."},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"- [Adding a todo task - `todo`](#todo)"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"- [Adding an event task - `event`](#event)"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"- [Adding a deadline task - `deadline`](#deadline)"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"- [Listing all tasks - `list`](#list)"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"- [Tagging a task - `tag`](#tag)"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"- [Finding a task - `find`](#find)"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"- [Deleting a task - `delete`](#delete)"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"- [Marking a task as done - `done`](#done)"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"- [Exiting the program - `bye`](#bye) "},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"## Quickstart"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"1. Ensure you have Java 11 or above installed in your Computer."},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"1. Download the latest dukechatbot.jar from [here](https://github.com/markmcwong/ip/releases/tag/v0.3-Finalized)."},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"1. Copy the file to the folder you want to use as the home folder for your Duke chatbot."},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds."},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"   ![img.png](img.png)"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"1. Type the command into the textbox to interact with the chat bot"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"**Notes about the command format:**"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"Commands are presented in the format: `command ARGS`"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"- `command` cases do not matter (both lowercases and uppercases works fine)"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"- Words in `[brackets]` are optional and may not be required"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"- Words with a `bar|seperating` indicate one of the option should be used and only one is needed"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"- Words in `UPPERCASE` are arguments to be supplied by the user"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"- For tasks recorded with Duke:"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"    - *todo* is represented as `[T][ ]`"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"    - *deadline* is represented as `[D][ ]`"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"    - *event* is represented as `[E][ ]`"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"    - where the `[ ] ` square bracket indicates the finished status of the particular task."},{"lineNumber":42,"author":{"gitId":"-"},"content":"    "},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"### \u003ca name\u003d\"todo\"\u003e`todo` - Adding a todo task\u003c/a\u003e"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"Adds a todo task with no due date included"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"Format: `todo TASK_NAME`"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"```"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"todo submit ip jar "},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"[T][ ] submit ip jar "},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"Now you have 1 task in the list"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"```"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"###  \u003ca name\u003d\"deadline\"\u003e`deadline` - Adding a deadline task\u003c/a\u003e"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"Adds a deadline task that needs to be done before the due date."},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"Format: `deadline TASK_NAME /by DATE`"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"```"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"deadline submit ip jar /by 19-2-2021"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"[D][ ] submit ip jar (by: 19-2-2021)"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"Now you have 1 task in the list"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"```"},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":71,"author":{"gitId":"markmcwong"},"content":"###  \u003ca name\u003d\"event\"\u003e`event` - Adding an event task\u003c/a\u003e"},{"lineNumber":72,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":73,"author":{"gitId":"markmcwong"},"content":"Adds an event task that occurs at a specific time."},{"lineNumber":74,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":75,"author":{"gitId":"markmcwong"},"content":"Format: `event TASK_NAME /at DATE`"},{"lineNumber":76,"author":{"gitId":"markmcwong"},"content":"```"},{"lineNumber":77,"author":{"gitId":"markmcwong"},"content":"event team meeting /at 2:00pm"},{"lineNumber":78,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":79,"author":{"gitId":"markmcwong"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":80,"author":{"gitId":"markmcwong"},"content":"[E][ ] team meeting (at: 2:00pm)"},{"lineNumber":81,"author":{"gitId":"markmcwong"},"content":"Now you have 1 task in the list"},{"lineNumber":82,"author":{"gitId":"markmcwong"},"content":"```"},{"lineNumber":83,"author":{"gitId":"markmcwong"},"content":"### \u003ca name\u003d\"list\"\u003e`list` - Listing all the tasks\u003c/a\u003e"},{"lineNumber":84,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":85,"author":{"gitId":"markmcwong"},"content":"Shows a list of tasks recorded with Duke"},{"lineNumber":86,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":87,"author":{"gitId":"markmcwong"},"content":"- todo is represented as `[T][ ]`"},{"lineNumber":88,"author":{"gitId":"markmcwong"},"content":"- deadline is represented as `[D][ ]`"},{"lineNumber":89,"author":{"gitId":"markmcwong"},"content":"- event is represented as `[E][ ]`"},{"lineNumber":90,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":91,"author":{"gitId":"markmcwong"},"content":"where the `[ ] ` square bracket indicates the finished status of the particular task."},{"lineNumber":92,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":93,"author":{"gitId":"markmcwong"},"content":"Format: `list`"},{"lineNumber":94,"author":{"gitId":"markmcwong"},"content":"```"},{"lineNumber":95,"author":{"gitId":"markmcwong"},"content":"list"},{"lineNumber":96,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":97,"author":{"gitId":"markmcwong"},"content":"Here are the tasks in your list:"},{"lineNumber":98,"author":{"gitId":"markmcwong"},"content":"1. [T][ ] submit ip jar"},{"lineNumber":99,"author":{"gitId":"markmcwong"},"content":"2. [D][ ] submit ip jar (by: 19-2-2021)"},{"lineNumber":100,"author":{"gitId":"markmcwong"},"content":"3. [E][ ] team meeting (at: 2:00pm)"},{"lineNumber":101,"author":{"gitId":"markmcwong"},"content":"```"},{"lineNumber":102,"author":{"gitId":"markmcwong"},"content":"### \u003ca name\u003d\"done\"\u003e`done` - Marking a task as done\u003c/a\u003e"},{"lineNumber":103,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":104,"author":{"gitId":"markmcwong"},"content":"Marks a specific task as done using the index of the task."},{"lineNumber":105,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":106,"author":{"gitId":"markmcwong"},"content":"Format: `done INDEX`"},{"lineNumber":107,"author":{"gitId":"markmcwong"},"content":"```"},{"lineNumber":108,"author":{"gitId":"markmcwong"},"content":"done 1"},{"lineNumber":109,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":110,"author":{"gitId":"markmcwong"},"content":"Nice! I\u0027ve marked this task as done: "},{"lineNumber":111,"author":{"gitId":"markmcwong"},"content":"[T][X] submit ip jar"},{"lineNumber":112,"author":{"gitId":"markmcwong"},"content":"```"},{"lineNumber":113,"author":{"gitId":"markmcwong"},"content":"### \u003ca name\u003d\"tag\"\u003e`tag` - Tagging a task\u003c/a\u003e"},{"lineNumber":114,"author":{"gitId":"markmcwong"},"content":"Creates a tag and associate the tag with the task"},{"lineNumber":115,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":116,"author":{"gitId":"markmcwong"},"content":"Format: `tag INDEX TAG`"},{"lineNumber":117,"author":{"gitId":"markmcwong"},"content":"```"},{"lineNumber":118,"author":{"gitId":"markmcwong"},"content":"tag 1 java"},{"lineNumber":119,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":120,"author":{"gitId":"markmcwong"},"content":"Nice! I\u0027ve marked task 1 with the tag: #java"},{"lineNumber":121,"author":{"gitId":"markmcwong"},"content":"```"},{"lineNumber":122,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":123,"author":{"gitId":"markmcwong"},"content":"### \u003ca name\u003d\"find\"\u003e`find` - Finding a task by name or tag\u003c/a\u003e"},{"lineNumber":124,"author":{"gitId":"markmcwong"},"content":"Finds a task which contains the given word in the name or associate with the tag"},{"lineNumber":125,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":126,"author":{"gitId":"markmcwong"},"content":"Format: `find KEYWORD|#TAG`"},{"lineNumber":127,"author":{"gitId":"markmcwong"},"content":"```"},{"lineNumber":128,"author":{"gitId":"markmcwong"},"content":"find #java"},{"lineNumber":129,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":130,"author":{"gitId":"markmcwong"},"content":"Here are the tasks in your list that fulfils your requirement:"},{"lineNumber":131,"author":{"gitId":"markmcwong"},"content":"1. [T][ ] submit ip jar"},{"lineNumber":132,"author":{"gitId":"markmcwong"},"content":"```"},{"lineNumber":133,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":134,"author":{"gitId":"markmcwong"},"content":"### \u003ca name\u003d\"delete\"\u003e`delete` - Tagging a task\u003c/a\u003e"},{"lineNumber":135,"author":{"gitId":"markmcwong"},"content":"Deletes the specific task using its index"},{"lineNumber":136,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":137,"author":{"gitId":"markmcwong"},"content":"Format: `delete INDEX`"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"markmcwong"},"content":"```"},{"lineNumber":140,"author":{"gitId":"markmcwong"},"content":"delete 1"},{"lineNumber":141,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":142,"author":{"gitId":"markmcwong"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":143,"author":{"gitId":"markmcwong"},"content":"[T][ ] submit ip jar"},{"lineNumber":144,"author":{"gitId":"markmcwong"},"content":"Now you have 2 tasks in your list"},{"lineNumber":145,"author":{"gitId":"markmcwong"},"content":"```"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"markmcwong"},"content":"### \u003ca name\u003d\"bye\"\u003e`bye` - Exiting the program \u003c/a\u003e"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"markmcwong"},"content":"Exiting the program"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"markmcwong"},"content":"Format: `bye`"}],"authorContributionMap":{"markmcwong":142,"-":9}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import duke.system.Parser;"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import duke.system.view.Gui;"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"    private TaskList tasks;"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"    private Parser in;"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"     * Initiate Duke with default Parser and TaskList for it to function"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"    public Duke() {"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"        in \u003d new Parser();"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"     * Get response for the user input"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"     * @return the string to be displayed on the GUI"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"    public String getResponse(String input, TaskList tasks) {"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"        in \u003d new Parser(input);"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"        return in.print(tasks);"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"     * Initiate the GUI interface"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"    public static void main(String[] args) {"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"        Application.launch(Gui.class, args);"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"markmcwong":34,"-":2}},{"path":"src/main/java/duke/Helper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":" * a class that provides helper function for others"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":" */"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"public class Helper {"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"     * Quick method to check whether the string passed is an integer or not"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"     * @return a boolean"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"    public static boolean isInteger(String str) {"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"            Integer.parseInt(str);"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"            return true;"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"            return false;"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"}"}],"authorContributionMap":{"markmcwong":20}},{"path":"src/main/java/duke/system/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package duke.system;"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import duke.Helper;"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import duke.system.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import duke.task.Deadline;"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import duke.task.Event;"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import duke.task.ListItem;"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import duke.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import duke.task.Todo;"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":" * Represents a parser that takes in the entered \u003ccode\u003ecommand\u003c/code\u003e by the user and filtered by the enum,"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":" * then return the parsed \u003ccode\u003ecommand\u003c/code\u003e, \u003ccode\u003eargument\u003c/code\u003e and \u003ccode\u003edate\u003c/code\u003e"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":" * \u003ccode\u003eprint\u003c/code\u003e the output and add the parsed item to the list if needed"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":" *"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":" * \u003ccode\u003ecommand\u003c/code\u003e stores the command that extracts from the string passing into the constructor"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":" * \u003ccode\u003eargument\u003c/code\u003e stores the first argument for the command e.g. index number for DONE"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":" * \u003ccode\u003eoptionalArgument\u003c/code\u003e stores the optional argument for the command such as the dates for DEADLINE and EVENT"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":" */"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"public class Parser {"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"    private final String command;"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"    private final String argument;"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"    private final String optionalArgument;"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"    enum PredefinedCommand {"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"        LIST,"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"        BYE,"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"        DONE,"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"        TODO,"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"        DEADLINE,"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"        EVENT,"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"        ERROR,"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"        DELETE,"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"        FIND,"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"        TAG"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"     * Constructor method that initiates with empty/ null values"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"    public Parser() {"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"        this.command \u003d \"\";"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"        this.optionalArgument \u003d null;"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"        this.argument \u003d \"\";"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"     * @param in - a string that will be parsed and stored as"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"     *           \u003ccode\u003ecommand\u003c/code\u003e, \u003ccode\u003eargument\u003c/code\u003e and \u003ccode\u003eoptionalArgument\u003c/code\u003e accordingly"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"     * @throws DukeException.UnknownCommandException if unknown command entered"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"     * @throws DukeException.NoDescriptionException  if required no. of arg is not met"},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"    public Parser(String in) {"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"        String tempDate \u003d null;"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"        String tempCommand \u003d \"\";"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"        String[] result \u003d in.split(\"\\\\s\");"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"        String tempArg \u003d \"\";"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"        // has temporary variables tempArg, tempDate, tempCommand as they are \"final\""},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"        try {"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"            // check the first part of the input string and decide what to do next using switch case"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"            switch (result[0].toLowerCase()) {"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"            case \"find\":"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"            case \"todo\": // both only need a name in a form of string therefore grouped"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"                tempCommand \u003d result[0];"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"                if (result.length \u003c\u003d 1) {"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"                    throw new DukeException.NoDescriptionException(result[0]);"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"                } else {"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"                    tempArg \u003d result[1];"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":"                break;"},{"lineNumber":71,"author":{"gitId":"markmcwong"},"content":"            case \"done\":"},{"lineNumber":72,"author":{"gitId":"markmcwong"},"content":"            case \"delete\": // both requires an index of the item"},{"lineNumber":73,"author":{"gitId":"markmcwong"},"content":"                String indexOfItemAsString \u003d in.substring(in.indexOf(\" \") + 1);"},{"lineNumber":74,"author":{"gitId":"markmcwong"},"content":"                tempArg \u003d indexOfItemAsString;"},{"lineNumber":75,"author":{"gitId":"markmcwong"},"content":"                if (!Helper.isInteger(indexOfItemAsString)) {"},{"lineNumber":76,"author":{"gitId":"markmcwong"},"content":"                    throw new DukeException.NoDescriptionException(result[0]);"},{"lineNumber":77,"author":{"gitId":"markmcwong"},"content":"                } else {"},{"lineNumber":78,"author":{"gitId":"markmcwong"},"content":"                    tempCommand \u003d result[0];"},{"lineNumber":79,"author":{"gitId":"markmcwong"},"content":"                }"},{"lineNumber":80,"author":{"gitId":"markmcwong"},"content":"                break;"},{"lineNumber":81,"author":{"gitId":"markmcwong"},"content":"            case \"deadline\":"},{"lineNumber":82,"author":{"gitId":"markmcwong"},"content":"            case \"event\": // both requires an extra string (date)"},{"lineNumber":83,"author":{"gitId":"markmcwong"},"content":"                String firstParam \u003d in.substring(in.indexOf(\"/\") + 1);"},{"lineNumber":84,"author":{"gitId":"markmcwong"},"content":"                if (firstParam.equals(\"deadline\") || firstParam.equals(\"event\")) {"},{"lineNumber":85,"author":{"gitId":"markmcwong"},"content":"                    throw new DukeException.NoDescriptionException(result[0]);"},{"lineNumber":86,"author":{"gitId":"markmcwong"},"content":"                } else {"},{"lineNumber":87,"author":{"gitId":"markmcwong"},"content":"                    // check if the date starts by \"by\" or \"at\" to classify them"},{"lineNumber":88,"author":{"gitId":"markmcwong"},"content":"                    int dateIndex \u003d Math.max(firstParam.indexOf(\"by \"), firstParam.indexOf(\"at \"));"},{"lineNumber":89,"author":{"gitId":"markmcwong"},"content":"                    if (dateIndex \u003d\u003d -1) {"},{"lineNumber":90,"author":{"gitId":"markmcwong"},"content":"                        throw new DukeException.NoDescriptionException(result[0]);"},{"lineNumber":91,"author":{"gitId":"markmcwong"},"content":"                    } else {"},{"lineNumber":92,"author":{"gitId":"markmcwong"},"content":"                        tempCommand \u003d result[0];"},{"lineNumber":93,"author":{"gitId":"markmcwong"},"content":"                        tempDate \u003d firstParam.substring(dateIndex + 3);"},{"lineNumber":94,"author":{"gitId":"markmcwong"},"content":"                        firstParam \u003d in.substring(in.indexOf(\" \") + 1);"},{"lineNumber":95,"author":{"gitId":"markmcwong"},"content":"                        tempArg \u003d firstParam.substring(0, firstParam.indexOf(\"/\") - 1);"},{"lineNumber":96,"author":{"gitId":"markmcwong"},"content":"                    }"},{"lineNumber":97,"author":{"gitId":"markmcwong"},"content":"                }"},{"lineNumber":98,"author":{"gitId":"markmcwong"},"content":"                break;"},{"lineNumber":99,"author":{"gitId":"markmcwong"},"content":"            case \"tag\":"},{"lineNumber":100,"author":{"gitId":"markmcwong"},"content":"                tempCommand \u003d result[0];"},{"lineNumber":101,"author":{"gitId":"markmcwong"},"content":"                tempArg \u003d result[1];"},{"lineNumber":102,"author":{"gitId":"markmcwong"},"content":"                tempDate \u003d result[2];"},{"lineNumber":103,"author":{"gitId":"markmcwong"},"content":"                break;"},{"lineNumber":104,"author":{"gitId":"markmcwong"},"content":"            default:"},{"lineNumber":105,"author":{"gitId":"markmcwong"},"content":"                // try parsing the command first by finding the equivalent in Enum PredefinedCommand,"},{"lineNumber":106,"author":{"gitId":"markmcwong"},"content":"                // else throw exception"},{"lineNumber":107,"author":{"gitId":"markmcwong"},"content":"                try {"},{"lineNumber":108,"author":{"gitId":"markmcwong"},"content":"                    tempCommand \u003d String.valueOf(PredefinedCommand.valueOf(result[0].toUpperCase())).toLowerCase();"},{"lineNumber":109,"author":{"gitId":"markmcwong"},"content":"                } catch (IllegalArgumentException ex) {"},{"lineNumber":110,"author":{"gitId":"markmcwong"},"content":"                    throw new DukeException.UnknownCommandException();"},{"lineNumber":111,"author":{"gitId":"markmcwong"},"content":"                }"},{"lineNumber":112,"author":{"gitId":"markmcwong"},"content":"                break;"},{"lineNumber":113,"author":{"gitId":"markmcwong"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"markmcwong"},"content":"        } catch (DukeException ex) {"},{"lineNumber":115,"author":{"gitId":"markmcwong"},"content":"            tempCommand \u003d \"error\";"},{"lineNumber":116,"author":{"gitId":"markmcwong"},"content":"            tempArg \u003d ex.getMessage();"},{"lineNumber":117,"author":{"gitId":"markmcwong"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"markmcwong"},"content":"        this.command \u003d tempCommand;"},{"lineNumber":119,"author":{"gitId":"markmcwong"},"content":"        this.argument \u003d tempArg;"},{"lineNumber":120,"author":{"gitId":"markmcwong"},"content":"        this.optionalArgument \u003d tempDate;"},{"lineNumber":121,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":123,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"markmcwong"},"content":"     * Getter method"},{"lineNumber":125,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":126,"author":{"gitId":"markmcwong"},"content":"     * @return the private variable command"},{"lineNumber":127,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"markmcwong"},"content":"    public String getCommand() {"},{"lineNumber":129,"author":{"gitId":"markmcwong"},"content":"        return this.command;"},{"lineNumber":130,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":132,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"markmcwong"},"content":"     * Getter method"},{"lineNumber":134,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"markmcwong"},"content":"     * @return the private variable argument"},{"lineNumber":136,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"markmcwong"},"content":"    public String getDate() {"},{"lineNumber":138,"author":{"gitId":"markmcwong"},"content":"        return this.argument;"},{"lineNumber":139,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":141,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":142,"author":{"gitId":"markmcwong"},"content":"     * @param inputList - take in the list and do corresponding action according to the command"},{"lineNumber":143,"author":{"gitId":"markmcwong"},"content":"     * @return a string to be printed to the console by UI"},{"lineNumber":144,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"markmcwong"},"content":"    public String print(TaskList inputList) {"},{"lineNumber":146,"author":{"gitId":"markmcwong"},"content":"        PredefinedCommand switchVal \u003d PredefinedCommand.valueOf(this.command.toUpperCase());"},{"lineNumber":147,"author":{"gitId":"markmcwong"},"content":"        switch (switchVal) {"},{"lineNumber":148,"author":{"gitId":"markmcwong"},"content":"        case BYE:"},{"lineNumber":149,"author":{"gitId":"markmcwong"},"content":"            return \"Bye. Hope to see you again soon!\";"},{"lineNumber":150,"author":{"gitId":"markmcwong"},"content":"        case LIST:"},{"lineNumber":151,"author":{"gitId":"markmcwong"},"content":"            String initStr \u003d \"Here are the tasks in your list:\";"},{"lineNumber":152,"author":{"gitId":"markmcwong"},"content":"            for (int i \u003d 0; i \u003c inputList.getListItems().size(); i++) {"},{"lineNumber":153,"author":{"gitId":"markmcwong"},"content":"                initStr +\u003d \"\\n\" + ((i + 1) + \".\" + inputList.getListItems().get(i));"},{"lineNumber":154,"author":{"gitId":"markmcwong"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"markmcwong"},"content":"            return initStr;"},{"lineNumber":156,"author":{"gitId":"markmcwong"},"content":"        case DONE:"},{"lineNumber":157,"author":{"gitId":"markmcwong"},"content":"            inputList.markItemAsDone(Integer.parseInt(this.argument));"},{"lineNumber":158,"author":{"gitId":"markmcwong"},"content":"            return \"Nice! I\u0027ve marked this task as done: \\n\""},{"lineNumber":159,"author":{"gitId":"markmcwong"},"content":"                    + inputList.getListItems().get(Integer.parseInt(this.argument) - 1);"},{"lineNumber":160,"author":{"gitId":"markmcwong"},"content":"        case EVENT:"},{"lineNumber":161,"author":{"gitId":"markmcwong"},"content":"            Event newEvent \u003d new Event(this.argument, this.optionalArgument);"},{"lineNumber":162,"author":{"gitId":"markmcwong"},"content":"            inputList.addCommandMutable(newEvent);"},{"lineNumber":163,"author":{"gitId":"markmcwong"},"content":"            return printPredefinedMessage(newEvent.toString(), inputList);"},{"lineNumber":164,"author":{"gitId":"markmcwong"},"content":"        case DEADLINE:"},{"lineNumber":165,"author":{"gitId":"markmcwong"},"content":"            Deadline newDeadline \u003d new Deadline(this.argument, this.optionalArgument);"},{"lineNumber":166,"author":{"gitId":"markmcwong"},"content":"            inputList.addCommandMutable(newDeadline);"},{"lineNumber":167,"author":{"gitId":"markmcwong"},"content":"            return printPredefinedMessage(newDeadline.toString(), inputList);"},{"lineNumber":168,"author":{"gitId":"markmcwong"},"content":"        case TODO:"},{"lineNumber":169,"author":{"gitId":"markmcwong"},"content":"            Todo newTodo \u003d new Todo(this.argument);"},{"lineNumber":170,"author":{"gitId":"markmcwong"},"content":"            inputList.addCommandMutable(newTodo);"},{"lineNumber":171,"author":{"gitId":"markmcwong"},"content":"            return printPredefinedMessage(newTodo.toString(), inputList);"},{"lineNumber":172,"author":{"gitId":"markmcwong"},"content":"        case ERROR:"},{"lineNumber":173,"author":{"gitId":"markmcwong"},"content":"            return this.argument;"},{"lineNumber":174,"author":{"gitId":"markmcwong"},"content":"        case DELETE:"},{"lineNumber":175,"author":{"gitId":"markmcwong"},"content":"            int index \u003d Integer.parseInt(this.argument);"},{"lineNumber":176,"author":{"gitId":"markmcwong"},"content":"            ListItem tempItem \u003d inputList.getListItems().get(index - 1);"},{"lineNumber":177,"author":{"gitId":"markmcwong"},"content":"            inputList.deleteCommandMutable(index);"},{"lineNumber":178,"author":{"gitId":"markmcwong"},"content":"            return \"Noted. I\u0027ve removed this task: \" + tempItem"},{"lineNumber":179,"author":{"gitId":"markmcwong"},"content":"                    + \"\\nNow you have \" + inputList.getListItems().size() + \" tasks in the list\";"},{"lineNumber":180,"author":{"gitId":"markmcwong"},"content":"        case FIND:"},{"lineNumber":181,"author":{"gitId":"markmcwong"},"content":"            String matchedStr \u003d \"Here are the tasks in your list that fulfills your requirement:\";"},{"lineNumber":182,"author":{"gitId":"markmcwong"},"content":"            TaskList tempList \u003d inputList.findMatchingItems(this.argument);"},{"lineNumber":183,"author":{"gitId":"markmcwong"},"content":"            for (int i \u003d 0; i \u003c tempList.getListItems().size(); i++) {"},{"lineNumber":184,"author":{"gitId":"markmcwong"},"content":"                matchedStr +\u003d \"\\n\" + ((i + 1) + \".\" + tempList.getListItems().get(i));"},{"lineNumber":185,"author":{"gitId":"markmcwong"},"content":"            }"},{"lineNumber":186,"author":{"gitId":"markmcwong"},"content":"            return matchedStr;"},{"lineNumber":187,"author":{"gitId":"markmcwong"},"content":"        case TAG:"},{"lineNumber":188,"author":{"gitId":"markmcwong"},"content":"            inputList.updateItemTag(Integer.parseInt(this.argument), this.optionalArgument);"},{"lineNumber":189,"author":{"gitId":"markmcwong"},"content":"            return \"Nice! I\u0027ve marked task \" + this.argument + \" with the tag: \\n#\""},{"lineNumber":190,"author":{"gitId":"markmcwong"},"content":"                    + this.optionalArgument;"},{"lineNumber":191,"author":{"gitId":"markmcwong"},"content":"        default:"},{"lineNumber":192,"author":{"gitId":"markmcwong"},"content":"            return \"\";"},{"lineNumber":193,"author":{"gitId":"markmcwong"},"content":"        //every case must return some form of string, therefore break is not required"},{"lineNumber":194,"author":{"gitId":"markmcwong"},"content":"        }"},{"lineNumber":195,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":197,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":198,"author":{"gitId":"markmcwong"},"content":"     * creates a standardised string that is common for all the tasks type to be printed"},{"lineNumber":199,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":200,"author":{"gitId":"markmcwong"},"content":"     * @param typeOfTask"},{"lineNumber":201,"author":{"gitId":"markmcwong"},"content":"     * @param inputList  - to get the size of the list"},{"lineNumber":202,"author":{"gitId":"markmcwong"},"content":"     * @return a string to be printed by UI"},{"lineNumber":203,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":204,"author":{"gitId":"markmcwong"},"content":"    public String printPredefinedMessage(String typeOfTask, TaskList inputList) {"},{"lineNumber":205,"author":{"gitId":"markmcwong"},"content":"        return \"Got it. I\u0027ve added this task: \\n\" + typeOfTask + \"\\nNow you have \""},{"lineNumber":206,"author":{"gitId":"markmcwong"},"content":"                + inputList.getListItems().size() + \" tasks in the list\";"},{"lineNumber":207,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"markmcwong"},"content":"}"}],"authorContributionMap":{"markmcwong":208}},{"path":"src/main/java/duke/system/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package duke.system.exception;"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"public abstract class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"        super(errorMessage);"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"    public static class NoDescriptionException extends DukeException {"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"        public NoDescriptionException(String itemClass) {"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"            super(\"OOPS!!! The argument of the command \" + itemClass + \" cannot be empty or is in wrong format.\");"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"    public static class UnknownCommandException extends DukeException {"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"        public UnknownCommandException() {"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"            super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"    public static class InputOutputErrorException extends DukeException {"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"        public InputOutputErrorException() {"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"            super(\"IO Error!\");"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"}"}],"authorContributionMap":{"markmcwong":26}},{"path":"src/main/java/duke/system/view/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package duke.system.view;"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":" * An example of a custom control using FXML."},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":" * containing text from the speaker."},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":" */"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"public class DialogBox extends HBox {"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"    private Label dialog;"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"    private ImageView displayPicture;"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Window.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"            fxmlLoader.load();"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"            e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"        if (text.contains(\"OOPS\")) {"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"            dialog.setStyle(\"-fx-background-color: rgba(238,113,135,1);\");"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"        displayPicture.setImage(img);"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"    private void flip() {"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"        Collections.reverse(tmp);"},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"     * @param text"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"     * @param img"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"     * @return"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"        return new DialogBox(text, img);"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"        db.flip();"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"        return db;"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":"}"}],"authorContributionMap":{"markmcwong":70}},{"path":"src/main/java/duke/system/view/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package duke.system.view;"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":" */"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"public class Gui extends Application {"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"     * Initiate the scene and GUI for Duke"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"     * @param stage"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"    public void start(Stage stage) {"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Gui.class.getResource(\"/view/Window.fxml\"));"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"            stage.setScene(scene);"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"            fxmlLoader.\u003cWindow\u003egetController().setDuke(duke);"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"            stage.show();"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"}"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":""}],"authorContributionMap":{"markmcwong":38}},{"path":"src/main/java/duke/system/view/Window.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package duke.system.view;"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":" */"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"public class Window extends AnchorPane {"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"    private Duke duke;"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"    private Image buttonImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/button.png\"));"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"    private ImageView imageView \u003d new ImageView(buttonImage);"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/robot.png\"));"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"    private Button sendButton \u003d new Button(\"Send\", imageView);"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"    private TaskList tasks;"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"    private boolean isFinished;"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"     * initialise new \u003ccode\u003etasklist\u003c/code\u003e and set the \u003ccode\u003escrollPane\u003c/code\u003e property to work properly for GUI"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"    @FXML"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"    public void initialize() {"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"                DialogBox.getDukeDialog(\"Greetings, how may I help you?\", dukeImage)"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"        );"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"        duke \u003d d;"},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"    @FXML"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"    private void handleUserInput() {"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"        String response \u003d duke.getResponse(input, tasks);"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"        );"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"        userInput.clear();"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"        if (response \u003d\u003d \"Bye. Hope to see you again soon!\") {"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"            this.userInput.setVisible(false);"},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":"            this.sendButton.setVisible(false);"},{"lineNumber":71,"author":{"gitId":"markmcwong"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"markmcwong"},"content":"}"}],"authorContributionMap":{"markmcwong":73}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":" * Represents the deadline type task that has a deadline date and an optional parsedDate"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":" * if provided date string is parsable"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":" */"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"public class Deadline extends ListItem {"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"    private final String date;"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"    private LocalDate parsedDate;"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"    private boolean isDateParsable;"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"     * Constructor for Deadline that was not provided the task done status"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"     * @param task      takes in a string and pass to parent\u0027s constructor as task name"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"     * @param inputDate the deadline input by user"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"    public Deadline(String task, String inputDate) {"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"        super(task);"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"        this.date \u003d inputDate;"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"        this.parsedDate \u003d parseDate(inputDate);"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"        if (this.parsedDate \u003d\u003d null) {"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"            this.isDateParsable \u003d false;"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"            this.isDateParsable \u003d true;"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"     * the overloaded constructor that allows taking the status of the task"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"     * @param task      takes in string and pass to parent\u0027s constructor as the task name"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"     * @param inputDate date entered as the deadline"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"     * @param isDone    the status of the task"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"    public Deadline(String task, String inputDate, boolean isDone) {"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"        super(task, isDone);"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"        this.date \u003d inputDate;"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"        this.parsedDate \u003d parseDate(inputDate);"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"        if (this.parsedDate \u003d\u003d null) {"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"            this.isDateParsable \u003d false;"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"        } else {"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"            this.isDateParsable \u003d true;"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":"     * Changes the task\u0027s status to be done"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"     * @return the task to replace the old one in the list or to be used later"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"    public ListItem markAsDone() {"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"        return new Deadline(super.getTask(), (parsedDate \u003d\u003d null"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"                ? this.date : parsedDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))), true);"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"    public String toString() {"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"        return \"[D]\" + (super.isDone() \u003d\u003d true ? \"[X] \" : \"[ ] \") + super.getTask()"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"                + \" (by: \""},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"                + (parsedDate \u003d\u003d null"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"                ? this.date : parsedDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))) + \")\""},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"                + super.printTags();"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":71,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"markmcwong"},"content":"     * @return either the provided date or a parsed date to be printed"},{"lineNumber":73,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"markmcwong"},"content":"    public String getDate() {"},{"lineNumber":75,"author":{"gitId":"markmcwong"},"content":"        return \"|\" + (parsedDate \u003d\u003d null ? this.date : parsedDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"},{"lineNumber":76,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":78,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"markmcwong"},"content":"     * Check whether the date provide by the user is parsable and store it accordingly"},{"lineNumber":80,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"markmcwong"},"content":"     * @param input the date given by the user"},{"lineNumber":82,"author":{"gitId":"markmcwong"},"content":"     * @return either a null or LocalDate that has a parsed date"},{"lineNumber":83,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"markmcwong"},"content":"    public LocalDate parseDate(String input) {"},{"lineNumber":85,"author":{"gitId":"markmcwong"},"content":"        try {"},{"lineNumber":86,"author":{"gitId":"markmcwong"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(input);"},{"lineNumber":87,"author":{"gitId":"markmcwong"},"content":"            // check the deadline is not before the moment this is created"},{"lineNumber":88,"author":{"gitId":"markmcwong"},"content":"            assert parsedDate.isAfter(LocalDate.now());"},{"lineNumber":89,"author":{"gitId":"markmcwong"},"content":"            return LocalDate.parse(input);"},{"lineNumber":90,"author":{"gitId":"markmcwong"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":91,"author":{"gitId":"markmcwong"},"content":"            return null;"},{"lineNumber":92,"author":{"gitId":"markmcwong"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"markmcwong"},"content":"}"}],"authorContributionMap":{"markmcwong":94}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"public class Event extends ListItem {"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"    private final String date;"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"     * Constructor for Event without task done status"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"     * @param task takes in string and pass to parent\u0027s constructor"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"     * @param inputDate takes in user\u0027s input date"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"    public Event(String task, String inputDate) {"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"        super(task);"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"        this.date \u003d inputDate;"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"     * the overloaded constructor for Event"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"     * @param task takes in string and pass to parent\u0027s constructor"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"     * @param inputDate takes in user\u0027s input date"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"     * @param isDone the status of the task"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"    public Event(String task, String inputDate, boolean isDone) {"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"        super(task, isDone);"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"        this.date \u003d inputDate;"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"     * creates a new Event item with a done status in immutable way"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"     * @return a ListItem with a runtime type Event"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"    public ListItem markAsDone() {"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"        return new Event(super.getTask(), this.date, true);"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"        return \"[E]\" + (super.isDone() \u003d\u003d true ? \"[X] \" : \"[ ] \")"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"                + super.getTask() + \" (at: \" + date + \")\" + super.printTags();"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"    public String getDate() {"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"        return \"|\" + date;"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"}"}],"authorContributionMap":{"markmcwong":45}},{"path":"src/main/java/duke/task/ListItem.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import java.util.stream.Collectors;"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":" * the abstract task class as a base for the tasks \"deadline\", \"event\" annd \"todo\""},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":" * that requires the subclass to define \u003ccode\u003emarkAsDone()\u003c/code\u003e and \u003ccode\u003egetDate()\u003c/code\u003e"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":" */"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"public abstract class ListItem {"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"    private final boolean isDone;"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"    private final String task;"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"    private List\u003cString\u003e tagList;"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"     * Constructor for ListItem"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"     * @param task takes in string and pass to parent\u0027s constructor as the task name"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"    public ListItem(String task) {"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"        // check if the task name is empty or not"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"        assert !task.isEmpty();"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"        this.task \u003d task;"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"        this.isDone \u003d false;"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"        this.tagList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"     * Overloaded version of Constructor for ListItem"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"     * @param task   takes in string and pass to parent\u0027s constructor as the task name"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"     * @param isDone takes in the task\u0027s status"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"    public ListItem(String task, boolean isDone) {"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"        // check if the task name is empty or not"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"        assert !task.isEmpty();"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"        this.task \u003d task;"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"        this.tagList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"     * Overloaded version of Constructor for ListItem with tag list provided"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"    public ListItem(String task, boolean isDone, List\u003cString\u003e inputTagList) {"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"        this.task \u003d task;"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"        this.tagList \u003d inputTagList;"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"     * @return a boolean of the task\u0027s status,"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"     * useful for subclasses that passed the status to parent (this class)"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"    public boolean isDone() {"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"        return this.isDone;"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"    public String getTask() {"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"        return this.task;"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"    public abstract ListItem markAsDone();"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"    public void addNewTagMutable(String tagName) {"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"        tagList.add(tagName);"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"markmcwong"},"content":"     * Check if any tasks in the list is associate with the tag that the user provided"},{"lineNumber":72,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"markmcwong"},"content":"     * @param inputTag the tag name that user wants to find"},{"lineNumber":74,"author":{"gitId":"markmcwong"},"content":"     * @return"},{"lineNumber":75,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"markmcwong"},"content":"    public boolean containTag(String inputTag) {"},{"lineNumber":77,"author":{"gitId":"markmcwong"},"content":"        return tagList.contains(inputTag);"},{"lineNumber":78,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":80,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"markmcwong"},"content":"     * Print all the tags associated using stream"},{"lineNumber":82,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"markmcwong"},"content":"     * @return the string concatenated all the tags"},{"lineNumber":84,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"markmcwong"},"content":"    public String printTags() {"},{"lineNumber":86,"author":{"gitId":"markmcwong"},"content":"        return tagList.stream().map((x) -\u003e \" #\" + x).collect(Collectors.joining());"},{"lineNumber":87,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":89,"author":{"gitId":"markmcwong"},"content":"    public abstract String getDate();"},{"lineNumber":90,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":91,"author":{"gitId":"markmcwong"},"content":"    @Override"},{"lineNumber":92,"author":{"gitId":"markmcwong"},"content":"    public String toString() {"},{"lineNumber":93,"author":{"gitId":"markmcwong"},"content":"        return (isDone \u003d\u003d true ? \"[X] \" : \"[ ] \") + this.task;"},{"lineNumber":94,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"markmcwong"},"content":"}"}],"authorContributionMap":{"markmcwong":95}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import java.util.stream.Collectors;"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":" * The list that contains and holds all the tasks imported/added by the user"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":" * handles operation to the list including add, update and delete"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":" */"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"    private List\u003cListItem\u003e listItems;"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"    public TaskList() {"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"        this.listItems \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"    public TaskList(List\u003cListItem\u003e inputList) {"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"        this.listItems \u003d new ArrayList\u003cListItem\u003e(inputList);"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"     * Immutable way to add the new task by returning a new list"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"     * @param task the task to be added to the list"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"    public TaskList addCommand(ListItem task) {"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"        List\u003cListItem\u003e tempList \u003d new ArrayList\u003c\u003e(this.listItems);"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"        tempList.add(task);"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"        return new TaskList(tempList);"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"     * Mutable way to add the new task by modifying the list"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"     * @param task the task to be added to the list"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"    public void addCommandMutable(ListItem task) {"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"        this.listItems.add(task);"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"    public List\u003cListItem\u003e getListItems() {"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"        return this.listItems;"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"     * Mutable way to mark the task as done by directly changing item in the list"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"     * @param index the index of the item to be changed"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"    public void markItemAsDone(int index) {"},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":"        int correctIndex \u003d index - 1;"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"        assertIndexInRange(correctIndex);"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"        ListItem tempItem \u003d this.listItems.get(correctIndex).markAsDone();"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"        assert tempItem.isDone(); // check the updated item\u0027s done status is true"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"        this.listItems.set(correctIndex, tempItem);"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"     * Update the task with a new tag by add the string tag to the listItem\u0027s tagList"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"     * @param index the index of the task the user wish to update"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"     * @param tag the tag name that the user wish to assign the task to"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"    public void updateItemTag(int index, String tag) {"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"        int correctIndex \u003d index - 1;"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"        this.listItems.get(correctIndex).addNewTagMutable(tag);"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":"     * Mutable way to delete the task by directly removing item in the list"},{"lineNumber":71,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"markmcwong"},"content":"     * @param index the index of the item to be changed"},{"lineNumber":73,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"markmcwong"},"content":"    public void deleteCommandMutable(int index) {"},{"lineNumber":75,"author":{"gitId":"markmcwong"},"content":"        int correctIndex \u003d index - 1;"},{"lineNumber":76,"author":{"gitId":"markmcwong"},"content":"        assertIndexInRange(correctIndex);"},{"lineNumber":77,"author":{"gitId":"markmcwong"},"content":"        this.listItems.remove(correctIndex);"},{"lineNumber":78,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":80,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"markmcwong"},"content":"     * Look for all items that contains the \u003ccode\u003ekeyword\u003c/code\u003e and return the list"},{"lineNumber":82,"author":{"gitId":"markmcwong"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"markmcwong"},"content":"     * @param keyword the keyword to be searched through the TaskList, in SQL LIKE syntax"},{"lineNumber":84,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"markmcwong"},"content":"    public TaskList findMatchingItems(String keyword) {"},{"lineNumber":86,"author":{"gitId":"markmcwong"},"content":"        if (keyword.contains(\"#\")) {"},{"lineNumber":87,"author":{"gitId":"markmcwong"},"content":"            System.out.println(\"#\");"},{"lineNumber":88,"author":{"gitId":"markmcwong"},"content":"            return new TaskList(listItems.stream().filter("},{"lineNumber":89,"author":{"gitId":"markmcwong"},"content":"                x -\u003e x.containTag(keyword.replace(\"#\", \"\"))).collect(Collectors.toList()));"},{"lineNumber":90,"author":{"gitId":"markmcwong"},"content":"        } else {"},{"lineNumber":91,"author":{"gitId":"markmcwong"},"content":"            return new TaskList(listItems.stream().filter("},{"lineNumber":92,"author":{"gitId":"markmcwong"},"content":"                x -\u003e x.getTask().contains(keyword)).collect(Collectors.toList()));"},{"lineNumber":93,"author":{"gitId":"markmcwong"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":96,"author":{"gitId":"markmcwong"},"content":"    @Override"},{"lineNumber":97,"author":{"gitId":"markmcwong"},"content":"    public String toString() {"},{"lineNumber":98,"author":{"gitId":"markmcwong"},"content":"        String initStr \u003d \"\";"},{"lineNumber":99,"author":{"gitId":"markmcwong"},"content":"        for (int i \u003d 0; i \u003c this.listItems.size(); i++) {"},{"lineNumber":100,"author":{"gitId":"markmcwong"},"content":"            ListItem tempItem \u003d this.listItems.get(i);"},{"lineNumber":101,"author":{"gitId":"markmcwong"},"content":"            initStr \u003d initStr + (tempItem.getClass().getName().charAt(0)"},{"lineNumber":102,"author":{"gitId":"markmcwong"},"content":"                    + \"|\" + tempItem.isDone() + \"|\" + tempItem.getTask() + tempItem.getDate() + \"\\n\");"},{"lineNumber":103,"author":{"gitId":"markmcwong"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"markmcwong"},"content":"        return initStr;"},{"lineNumber":105,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":107,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"markmcwong"},"content":"     * a method with an assertion that checks the index is \u003e\u003d 0 so it can be used for indexing with the List"},{"lineNumber":109,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"markmcwong"},"content":"    public void assertIndexInRange(int index) {"},{"lineNumber":111,"author":{"gitId":"markmcwong"},"content":"        assert index \u003e\u003d 0;"},{"lineNumber":112,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"markmcwong"},"content":"}"}],"authorContributionMap":{"markmcwong":113}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":" * Represents the Todo type task that does not have a due date"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":" */"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"public class Todo extends ListItem {"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"     * Constructor for Todo that was not provided the task done status"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"     * @param task takes in a string and pass to parent\u0027s constructor as task name"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"    public Todo(String task) {"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"        super(task);"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"     * the overloaded constructor that allows taking the status of the task"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"    public Todo(String task, boolean isDone) {"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"        super(task, isDone);"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"    public ListItem markAsDone() {"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"        return new Todo(super.getTask(), true);"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"        return \"[T]\" + (super.isDone() \u003d\u003d true ? \"[X] \" : \"[ ] \") + super.getTask() + super.printTags();"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"     * @return empty string since Todo does not has a due date"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"    public String getDate() {"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"        return \"\";"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"}"}],"authorContributionMap":{"markmcwong":38}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"markmcwong":16}},{"path":"src/main/resources/view/Window.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.image.Image?\u003e"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"\u003c?import java.net.URL?\u003e"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"620.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.system.view.Window\"\u003e"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"    \u003cchildren\u003e"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"60.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"\"\u003e"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"            \u003cgraphic\u003e"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"                \u003cImageView fitHeight\u003d\"25.0\" fitWidth\u003d\"25.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"                    \u003cimage\u003e"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"                        \u003cImage url\u003d\"/images/button.png\" /\u003e"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"                    \u003c/image\u003e"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"                \u003c/ImageView\u003e"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"            \u003c/graphic\u003e"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"        \u003c/Button\u003e"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"            \u003ccontent\u003e"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"            \u003c/content\u003e"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"    \u003c/children\u003e"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"    \u003cstylesheets\u003e"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"        \u003cURL value\u003d\"@demo.css\" /\u003e"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"    \u003c/stylesheets\u003e"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"markmcwong":33}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import duke.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"    public void getDate_checkDateFormat() {"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"        assertEquals(\"|Sunday\", new Deadline(\"return book\", \"Sunday\").getDate());"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"    public void parseDate_unparsableDate_nullReturned() {"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"        assertEquals(null, new Deadline(\"return book\", \"Sunday\").parseDate(\"Sunday\"));"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"    public void markAsDone_checkDoneStatus() {"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"        assertEquals(true, new Deadline(\"return book\", \"Sunday\").markAsDone().isDone());"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"}"}],"authorContributionMap":{"markmcwong":24}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import duke.task.Event;"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"public class EventTest {"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"    public void getDate_checkDateFormat() {"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"        assertEquals(\"|Sunday\", new Event(\"return book\", \"Sunday\").getDate());"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"    public void markAsDone_checkDoneStatus() {"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"        assertEquals(true, new Event(\"return book\", \"Sunday\").markAsDone().isDone());"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"}"}],"authorContributionMap":{"markmcwong":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import duke.system.Parser;"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import duke.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"public class ParserTest {"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"    public void commandExtractionTest() {"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"        assertEquals(\"deadline\", new Parser(\"deadline return book /by Sunday\").getCommand());"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"        assertEquals(\"event\", new Parser(\"event team meeting /at 2:00pm\").getCommand());"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"        assertEquals(\"todo\", new Parser(\"todo submit ip jar\").getCommand());"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"        assertEquals(\"list\", new Parser(\"list\").getCommand());"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"        assertEquals(\"error\", new Parser(\"unknown\").getCommand());"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"    public void checkPrintStringReturns() {"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"        Parser temp \u003d new Parser(\"bye\");"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"        assertEquals(\"Bye. Hope to see you again soon!\", temp.print(new TaskList()));"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"}"}],"authorContributionMap":{"markmcwong":25}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import duke.task.Todo;"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"public class TodoTest {"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"    public void getDate_checkDateFormat() {"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"        assertEquals(\"\", new Todo(\"return book\").getDate());"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":""},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"    public void markAsDone_checkDoneStatus() {"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"        assertEquals(true, new Todo(\"return book\").markAsDone().isDone());"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"}"}],"authorContributionMap":{"markmcwong":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"Todo borrow book"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"list"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"list"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"list"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"Blah"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"bye"}],"authorContributionMap":{"markmcwong":10}}]
