[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"enhao25":14,"-":46}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"[T][X] borrow book"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":"[T][ ] test"},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"[E][ ] project meeting  (at: 28 Jan 2020 - 0800)"}],"authorContributionMap":{"enhao25":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import dukeproject.Duke;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"import dukeproject.DukeException;"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"            Duke duke \u003d new Duke(\"data/duke.txt\");"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"            stage.setScene(scene);"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"        } catch (IOException | DukeException e) {"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"import dukeproject.Duke;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import javafx.scene.control.TextArea;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":" * Controller for duke project.ui.MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"    private TextArea textOutput;"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"    private Duke duke;"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"        duke \u003d d;"},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"        duke.setUi(textOutput);"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"    @FXML"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"    private void handleUserInput() {"},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":"        // Get user inputs and run the user input command"},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"        boolean canContinue \u003d duke.runUserInput(input);"},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"        userInput.clear();"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"        // Close the program if the user enters bye"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"        if (!canContinue) {"},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":"            Stage stage \u003d (Stage) sendButton.getScene().getWindow();"},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"            stage.close();"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":52}},{"path":"src/main/java/dukeproject/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":" * Represents a deadline task where we can specific a task to be completed by a certain date time."},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":" * A deadline object corresponds to a task with a description and"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":" * a datetime for the task to be completed."},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":" *"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":" * X means that the task has been completed."},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"public class Deadline extends Task {"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"    private final LocalDateTime by;"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"     * Constructor for the Deadline task, specifying the description of the task and"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"     * the date time to be completed by."},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"     * @param description Description of the deadline task."},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"     * @param by Deadline in terms of date time."},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"        super(description);"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"        this.by \u003d by;"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"     * Constructor for the Deadline task, specifying the description of the task,"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"     * the date time to be completed by and whether the task has been completed."},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"     * @param description Description of the deadline task."},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"     * @param by Deadline in terms of date time."},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"     * @param isDone Determine whether the task is done or not."},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone) {"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"        super(description, isDone);"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"        this.by \u003d by;"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"     * Returns a readable description of the task."},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"     * E.g. [D][X] Borrow Book (by: 27 Oct 2021 - 1800)"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"    public String toString() {"},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":"        return String.format(\"[D][%s] %s (by: %s)\","},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"            super.getStatusIcon(),"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"            super.toString(),"},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"            by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy - HHmm\")));"},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":52}},{"path":"src/main/java/dukeproject/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import javafx.scene.control.TextArea;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"* The Duke application is a to do list application where users are able to"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"* create, remove and see their to do list."},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"*"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"* @author  Low En Hao"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"* @version 0.1"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"* @since   2021-01-26"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"*/"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"public class Duke {"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    private final Storage storage;"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    private TaskList taskList;"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    private Ui ui \u003d null;"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"     * Returns the duke object with access to the data in the file path."},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"     * If the data is not empty, load the file content into the task list."},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"     * Else, load an empty task list where the user can start using the application."},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"     * @param filePath File path in the hard disk to store the current task list."},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"     * @throws DukeException for any error."},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"    public Duke(String filePath) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"            taskList \u003d new TaskList(storage.loadFileContent());"},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"        } catch (FileNotFoundException | DukeException ex) {"},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"        } catch (Exception ex) {"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"            throw new DukeException();"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"    public void setUi(TextArea textOutput) {"},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"        ui \u003d new Ui(textOutput);"},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"     * Runs and understand the user input."},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"     * @param userInput User input from the GUI\u0027s text box."},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"    public boolean runUserInput(String userInput) {"},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":"        return new Parser().parseUserInput(userInput, ui, storage, taskList);"},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":53}},{"path":"src/main/java/dukeproject/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"     * Use as exception for duke."},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"    private static final long serialVersionUID \u003d -2154386125699489110L;"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"    public DukeException(String message) {"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"    public DukeException() {"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":17}},{"path":"src/main/java/dukeproject/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":" * Represents a event task where we can specific a task to be completed at a certain date time."},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":" * An event object corresponds to a task with a description and"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":" * a datetime for the event to be completed."},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":" *"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":" * X means that the event has been completed."},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"public class Event extends Task {"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"    private final LocalDateTime at;"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"     * Constructor for the Event task, specifying the description of the task and"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"     * the date time to be completed at."},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"     * @param description Description of the event task."},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"     * @param at Date time for the event to be completed at."},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"    public Event(String description, LocalDateTime at) {"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"        super(description);"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"        this.at \u003d at;"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"     * Constructor for the Event task, specifying the description of the task,"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"     * the date time to be completed at and whether the task has been completed."},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"     * @param description Description of the event task."},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"     * @param at Date time for the event to be completed at."},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"     * @param isDone Determine whether the task is done or not."},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"    public Event(String description, LocalDateTime at, boolean isDone) {"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"        super(description, isDone);"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"        this.at \u003d at;"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"     * Returns a readable description of the task."},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"     * E.g. [E][ ] Tutorial Class (at: 10 Feb 2021 - 1200)"},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"        return String.format(\"[E][%s] %s (at: %s)\","},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":"            super.getStatusIcon(), super.toString(),"},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"            at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy - HHmm\")));"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":50}},{"path":"src/main/java/dukeproject/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":" * Represents a parser to make sense of string inputs."},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"    public enum CommandType {"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"        INPUT_DEADLINE,"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"        INPUT_EVENT,"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"        FILE_DEADLINE,"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"        FILE_EVENT"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"     * Reads and understand the user inputs."},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"     * @param userInput User input from the GUI."},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"     * @param ui Represents the UI object."},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"     * @param storage Represents the storage object."},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"     * @param taskList Represents the list of task."},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"     * @return A boolean on whether the application should continue running."},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"    public boolean parseUserInput(String userInput, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"        if (userInput.equals(\"bye\")) {"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"            // Exit when the user inputs \"bye\""},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"            ui.goodByeMessage();"},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"            return false;"},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"        } else if (userInput.equals(\"list\")) {"},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"            ui.printTaskList(taskList);"},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"        } else if (userInput.startsWith(\"todo\")) {"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"            // Create a new to do task base on command information"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"            parseToDoCommand(userInput, ui, storage, taskList);"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"        } else if (userInput.startsWith(\"deadline\")) {"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"            // Create a new deadline task base on command information"},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":"            parseDeadlineCommand(userInput, ui, storage, taskList);"},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"        } else if (userInput.startsWith(\"event\")) {"},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"            // Create a new event task base on command information"},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"            parseEventCommand(userInput, ui, storage, taskList);"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":"        } else if (userInput.startsWith(\"done\")) {"},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"            // Mark the event as done"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"            parseDoneCommand(userInput, ui, storage, taskList);"},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":"        } else if (userInput.startsWith(\"delete\")) {"},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"            // Delete the associated event"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"            parseDeleteCommand(userInput, ui, storage, taskList);"},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"        } else if (userInput.startsWith(\"find\")) {"},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":"            // Find a return a list of task that is related to the keyword"},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":"            parseForFind(userInput, ui, taskList);"},{"lineNumber":53,"author":{"gitId":"enhao25"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"enhao25"},"content":"            // Unable to detect the user\u0027s input"},{"lineNumber":55,"author":{"gitId":"enhao25"},"content":"            ui.printUnreadableError();"},{"lineNumber":56,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"enhao25"},"content":"        return true;"},{"lineNumber":58,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":60,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"enhao25"},"content":"     * Understands the to do command by the user."},{"lineNumber":62,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"enhao25"},"content":"     * @param command Represents the command that the user has given."},{"lineNumber":64,"author":{"gitId":"enhao25"},"content":"     * @param ui Represents the UI object."},{"lineNumber":65,"author":{"gitId":"enhao25"},"content":"     * @param storage Represents the storage object."},{"lineNumber":66,"author":{"gitId":"enhao25"},"content":"     * @param taskList Represents the list of task."},{"lineNumber":67,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"enhao25"},"content":"    public void parseToDoCommand(String command, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":69,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":70,"author":{"gitId":"enhao25"},"content":"            // Catch error where the user put empty spaces as description"},{"lineNumber":71,"author":{"gitId":"enhao25"},"content":"            if (command.substring(5).isBlank()) {"},{"lineNumber":72,"author":{"gitId":"enhao25"},"content":"                throw new StringIndexOutOfBoundsException();"},{"lineNumber":73,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":75,"author":{"gitId":"enhao25"},"content":"            ToDo newToDoTask \u003d new ToDo(command.substring(5));"},{"lineNumber":76,"author":{"gitId":"enhao25"},"content":"            taskList.add(newToDoTask);"},{"lineNumber":77,"author":{"gitId":"enhao25"},"content":"            storage.writeToFile(taskList);"},{"lineNumber":78,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":79,"author":{"gitId":"enhao25"},"content":"            // Print a success message"},{"lineNumber":80,"author":{"gitId":"enhao25"},"content":"            ui.printWithSpace(newToDoTask.successMessage(taskList.size()));"},{"lineNumber":81,"author":{"gitId":"enhao25"},"content":"        } catch (StringIndexOutOfBoundsException ex) {"},{"lineNumber":82,"author":{"gitId":"enhao25"},"content":"            // Description is empty"},{"lineNumber":83,"author":{"gitId":"enhao25"},"content":"            ui.printDescriptionError();"},{"lineNumber":84,"author":{"gitId":"enhao25"},"content":"        } catch (FileNotFoundException ex) {"},{"lineNumber":85,"author":{"gitId":"enhao25"},"content":"            // File is empty"},{"lineNumber":86,"author":{"gitId":"enhao25"},"content":"            ui.printFileError();"},{"lineNumber":87,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":90,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"enhao25"},"content":"     * Understands the deadline command by the user."},{"lineNumber":92,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"enhao25"},"content":"     * @param command Represents the command that the user has given."},{"lineNumber":94,"author":{"gitId":"enhao25"},"content":"     * @param ui Represents the UI object."},{"lineNumber":95,"author":{"gitId":"enhao25"},"content":"     * @param storage Represents the storage object."},{"lineNumber":96,"author":{"gitId":"enhao25"},"content":"     * @param taskList Represents the list of task."},{"lineNumber":97,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"enhao25"},"content":"    public void parseDeadlineCommand(String command, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":99,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":100,"author":{"gitId":"enhao25"},"content":"            // Catch error where the user put empty spaces as description"},{"lineNumber":101,"author":{"gitId":"enhao25"},"content":"            if (command.substring(9).isBlank()) {"},{"lineNumber":102,"author":{"gitId":"enhao25"},"content":"                throw new StringIndexOutOfBoundsException();"},{"lineNumber":103,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":105,"author":{"gitId":"enhao25"},"content":"            // Get the description and date from the user\u0027s input"},{"lineNumber":106,"author":{"gitId":"enhao25"},"content":"            StringDatePair output \u003d new Parser().parse(command, Parser.CommandType.INPUT_DEADLINE);"},{"lineNumber":107,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":108,"author":{"gitId":"enhao25"},"content":"            // Add a deadline task"},{"lineNumber":109,"author":{"gitId":"enhao25"},"content":"            Deadline newDeadlineTask \u003d new Deadline(output.getString(), output.getDate());"},{"lineNumber":110,"author":{"gitId":"enhao25"},"content":"            taskList.add(newDeadlineTask);"},{"lineNumber":111,"author":{"gitId":"enhao25"},"content":"            storage.writeToFile(taskList);"},{"lineNumber":112,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":113,"author":{"gitId":"enhao25"},"content":"            // Print a success message"},{"lineNumber":114,"author":{"gitId":"enhao25"},"content":"            ui.printWithSpace(newDeadlineTask.successMessage(taskList.size()));"},{"lineNumber":115,"author":{"gitId":"enhao25"},"content":"        } catch (StringIndexOutOfBoundsException ex) {"},{"lineNumber":116,"author":{"gitId":"enhao25"},"content":"            // Description is empty"},{"lineNumber":117,"author":{"gitId":"enhao25"},"content":"            ui.printDescriptionError();"},{"lineNumber":118,"author":{"gitId":"enhao25"},"content":"        } catch (FileNotFoundException ex) {"},{"lineNumber":119,"author":{"gitId":"enhao25"},"content":"            // File is empty"},{"lineNumber":120,"author":{"gitId":"enhao25"},"content":"            ui.printFileError();"},{"lineNumber":121,"author":{"gitId":"enhao25"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":122,"author":{"gitId":"enhao25"},"content":"            // Datetime value parsed is not of format \"yyyy-MM-dd HHmm\""},{"lineNumber":123,"author":{"gitId":"enhao25"},"content":"            ui.printDateFormatError();"},{"lineNumber":124,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":127,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"enhao25"},"content":"     * Understands the event command by the user."},{"lineNumber":129,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"enhao25"},"content":"     * @param command Represents the command that the user has given."},{"lineNumber":131,"author":{"gitId":"enhao25"},"content":"     * @param ui Represents the UI object."},{"lineNumber":132,"author":{"gitId":"enhao25"},"content":"     * @param storage Represents the storage object."},{"lineNumber":133,"author":{"gitId":"enhao25"},"content":"     * @param taskList Represents the list of task."},{"lineNumber":134,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"enhao25"},"content":"    public void parseEventCommand(String command, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":136,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":137,"author":{"gitId":"enhao25"},"content":"            // Catch error where the user put empty spaces as description"},{"lineNumber":138,"author":{"gitId":"enhao25"},"content":"            if (command.substring(5).isBlank()) {"},{"lineNumber":139,"author":{"gitId":"enhao25"},"content":"                throw new StringIndexOutOfBoundsException();"},{"lineNumber":140,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":142,"author":{"gitId":"enhao25"},"content":"            // Get the description and date from the user\u0027s input"},{"lineNumber":143,"author":{"gitId":"enhao25"},"content":"            StringDatePair output \u003d new Parser().parse(command, Parser.CommandType.INPUT_EVENT);"},{"lineNumber":144,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":145,"author":{"gitId":"enhao25"},"content":"            // Add a deadline task"},{"lineNumber":146,"author":{"gitId":"enhao25"},"content":"            Event newEventTask \u003d new Event(output.getString(), output.getDate());"},{"lineNumber":147,"author":{"gitId":"enhao25"},"content":"            taskList.add(newEventTask);"},{"lineNumber":148,"author":{"gitId":"enhao25"},"content":"            storage.writeToFile(taskList);"},{"lineNumber":149,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":150,"author":{"gitId":"enhao25"},"content":"            // Print a success message"},{"lineNumber":151,"author":{"gitId":"enhao25"},"content":"            ui.printWithSpace(newEventTask.successMessage(taskList.size()));"},{"lineNumber":152,"author":{"gitId":"enhao25"},"content":"        } catch (StringIndexOutOfBoundsException ex) {"},{"lineNumber":153,"author":{"gitId":"enhao25"},"content":"            // Description is empty"},{"lineNumber":154,"author":{"gitId":"enhao25"},"content":"            ui.printDescriptionError();"},{"lineNumber":155,"author":{"gitId":"enhao25"},"content":"        } catch (FileNotFoundException ex) {"},{"lineNumber":156,"author":{"gitId":"enhao25"},"content":"            // File is empty"},{"lineNumber":157,"author":{"gitId":"enhao25"},"content":"            ui.printFileError();"},{"lineNumber":158,"author":{"gitId":"enhao25"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":159,"author":{"gitId":"enhao25"},"content":"            // Datetime value parsed is not of format \"yyyy-MM-dd HHmm\""},{"lineNumber":160,"author":{"gitId":"enhao25"},"content":"            ui.printDateFormatError();"},{"lineNumber":161,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":164,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"enhao25"},"content":"     * Understands the done command by the user."},{"lineNumber":166,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":167,"author":{"gitId":"enhao25"},"content":"     * @param command Represents the command that the user has given."},{"lineNumber":168,"author":{"gitId":"enhao25"},"content":"     * @param ui Represents the UI object."},{"lineNumber":169,"author":{"gitId":"enhao25"},"content":"     * @param storage Represents the storage object."},{"lineNumber":170,"author":{"gitId":"enhao25"},"content":"     * @param taskList Represents the list of task."},{"lineNumber":171,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":172,"author":{"gitId":"enhao25"},"content":"    public void parseDoneCommand(String command, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":173,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":174,"author":{"gitId":"enhao25"},"content":"            // Mark the task as done based on the number given after the \"done\" input"},{"lineNumber":175,"author":{"gitId":"enhao25"},"content":"            int taskIndex \u003d Integer.parseInt(command.substring(5));"},{"lineNumber":176,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":177,"author":{"gitId":"enhao25"},"content":"            // Mark the task as done"},{"lineNumber":178,"author":{"gitId":"enhao25"},"content":"            taskList.get(taskIndex - 1).markAsDone();"},{"lineNumber":179,"author":{"gitId":"enhao25"},"content":"            storage.writeToFile(taskList);"},{"lineNumber":180,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":181,"author":{"gitId":"enhao25"},"content":"            // Print success message that the task was marked as done"},{"lineNumber":182,"author":{"gitId":"enhao25"},"content":"            ui.printTaskSuccess(taskList, taskIndex);"},{"lineNumber":183,"author":{"gitId":"enhao25"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException ex) {"},{"lineNumber":184,"author":{"gitId":"enhao25"},"content":"            // Task number is empty"},{"lineNumber":185,"author":{"gitId":"enhao25"},"content":"            ui.printTaskNumError();"},{"lineNumber":186,"author":{"gitId":"enhao25"},"content":"        } catch (FileNotFoundException ex) {"},{"lineNumber":187,"author":{"gitId":"enhao25"},"content":"            // File is empty"},{"lineNumber":188,"author":{"gitId":"enhao25"},"content":"            ui.printFileError();"},{"lineNumber":189,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":192,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":193,"author":{"gitId":"enhao25"},"content":"     * Understands the delete command by the user."},{"lineNumber":194,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":195,"author":{"gitId":"enhao25"},"content":"     * @param command Represents the command that the user has given."},{"lineNumber":196,"author":{"gitId":"enhao25"},"content":"     * @param ui Represents the UI object."},{"lineNumber":197,"author":{"gitId":"enhao25"},"content":"     * @param storage Represents the storage object."},{"lineNumber":198,"author":{"gitId":"enhao25"},"content":"     * @param taskList Represents the list of task."},{"lineNumber":199,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":200,"author":{"gitId":"enhao25"},"content":"    public void parseDeleteCommand(String command, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":201,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":202,"author":{"gitId":"enhao25"},"content":"            // Delete task"},{"lineNumber":203,"author":{"gitId":"enhao25"},"content":"            int taskIndex \u003d Integer.parseInt(command.substring(7)) - 1;"},{"lineNumber":204,"author":{"gitId":"enhao25"},"content":"            Task taskToBeRemoved \u003d taskList.get(taskIndex);"},{"lineNumber":205,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":206,"author":{"gitId":"enhao25"},"content":"            // Remove the appropriate task away from the list of task"},{"lineNumber":207,"author":{"gitId":"enhao25"},"content":"            taskList.remove(taskIndex);"},{"lineNumber":208,"author":{"gitId":"enhao25"},"content":"            storage.writeToFile(taskList);"},{"lineNumber":209,"author":{"gitId":"enhao25"},"content":"            ui.printWithSpace(taskToBeRemoved.deleteMessage(taskList.size()));"},{"lineNumber":210,"author":{"gitId":"enhao25"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException ex) {"},{"lineNumber":211,"author":{"gitId":"enhao25"},"content":"            // Task number is empty"},{"lineNumber":212,"author":{"gitId":"enhao25"},"content":"            ui.printTaskNumError();"},{"lineNumber":213,"author":{"gitId":"enhao25"},"content":"        } catch (FileNotFoundException ex) {"},{"lineNumber":214,"author":{"gitId":"enhao25"},"content":"            // File is empty"},{"lineNumber":215,"author":{"gitId":"enhao25"},"content":"            ui.printFileError();"},{"lineNumber":216,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":219,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":220,"author":{"gitId":"enhao25"},"content":"     * Parse a find command."},{"lineNumber":221,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":222,"author":{"gitId":"enhao25"},"content":"     * @param command Command / input to find."},{"lineNumber":223,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":224,"author":{"gitId":"enhao25"},"content":"    public void parseForFind(String command, Ui ui, TaskList taskList) {"},{"lineNumber":225,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":226,"author":{"gitId":"enhao25"},"content":"            String keyword \u003d command.substring(5);"},{"lineNumber":227,"author":{"gitId":"enhao25"},"content":"            ui.printKeywordTaskList(taskList, keyword);"},{"lineNumber":228,"author":{"gitId":"enhao25"},"content":"        } catch (Exception ex) {"},{"lineNumber":229,"author":{"gitId":"enhao25"},"content":"            ui.printFindError();"},{"lineNumber":230,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":231,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":233,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":234,"author":{"gitId":"enhao25"},"content":"     * Returns an object which contains the description and date of a task."},{"lineNumber":235,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":236,"author":{"gitId":"enhao25"},"content":"     * @param fullCommand The input that the parser will try to make sense of."},{"lineNumber":237,"author":{"gitId":"enhao25"},"content":"     * @param cmdType The command type which determines how we try to interpret the data."},{"lineNumber":238,"author":{"gitId":"enhao25"},"content":"     * @return An object which contains the description and date of a task."},{"lineNumber":239,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":240,"author":{"gitId":"enhao25"},"content":"    public StringDatePair parse(String fullCommand, CommandType cmdType) {"},{"lineNumber":241,"author":{"gitId":"enhao25"},"content":"        if (cmdType \u003d\u003d CommandType.INPUT_DEADLINE) {"},{"lineNumber":242,"author":{"gitId":"enhao25"},"content":"            // Split up the string into the description and date accordingly"},{"lineNumber":243,"author":{"gitId":"enhao25"},"content":"            String[] userInputValues \u003d fullCommand.substring(9).split(\"/by \");"},{"lineNumber":244,"author":{"gitId":"enhao25"},"content":"            String description \u003d userInputValues[0];"},{"lineNumber":245,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":246,"author":{"gitId":"enhao25"},"content":"            // Specific the date format that our system will accept and save it in the by variable"},{"lineNumber":247,"author":{"gitId":"enhao25"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":248,"author":{"gitId":"enhao25"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(userInputValues[1], dateFormatter);"},{"lineNumber":249,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":250,"author":{"gitId":"enhao25"},"content":"            // Return the description and date pair"},{"lineNumber":251,"author":{"gitId":"enhao25"},"content":"            return new StringDatePair(description, by);"},{"lineNumber":252,"author":{"gitId":"enhao25"},"content":"        } else if (cmdType \u003d\u003d CommandType.INPUT_EVENT) {"},{"lineNumber":253,"author":{"gitId":"enhao25"},"content":"            // Split up the string into the description and date accordingly"},{"lineNumber":254,"author":{"gitId":"enhao25"},"content":"            String[] userInputValues \u003d fullCommand.substring(6).split(\"/at \");"},{"lineNumber":255,"author":{"gitId":"enhao25"},"content":"            String description \u003d userInputValues[0];"},{"lineNumber":256,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":257,"author":{"gitId":"enhao25"},"content":"            // Specific the date format that our system will accept and save it in the by variable"},{"lineNumber":258,"author":{"gitId":"enhao25"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":259,"author":{"gitId":"enhao25"},"content":"            LocalDateTime at \u003d LocalDateTime.parse(userInputValues[1], dateFormatter);"},{"lineNumber":260,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":261,"author":{"gitId":"enhao25"},"content":"            // Return the description and date pair"},{"lineNumber":262,"author":{"gitId":"enhao25"},"content":"            return new StringDatePair(description, at);"},{"lineNumber":263,"author":{"gitId":"enhao25"},"content":"        } else if (cmdType \u003d\u003d CommandType.FILE_DEADLINE) {"},{"lineNumber":264,"author":{"gitId":"enhao25"},"content":"            // Split up the string into the description and date accordingly"},{"lineNumber":265,"author":{"gitId":"enhao25"},"content":"            String[] taskInputValues \u003d fullCommand.substring(7).split(\" \\\\(by: \");"},{"lineNumber":266,"author":{"gitId":"enhao25"},"content":"            String description \u003d taskInputValues[0];"},{"lineNumber":267,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":268,"author":{"gitId":"enhao25"},"content":"            // Specific the date format that our system will accept and save it in the by variable"},{"lineNumber":269,"author":{"gitId":"enhao25"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy - HHmm\");"},{"lineNumber":270,"author":{"gitId":"enhao25"},"content":"            LocalDateTime by \u003d LocalDateTime.parse("},{"lineNumber":271,"author":{"gitId":"enhao25"},"content":"                taskInputValues[1].substring(0, taskInputValues[1].length() - 1),"},{"lineNumber":272,"author":{"gitId":"enhao25"},"content":"                dateFormatter);"},{"lineNumber":273,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":274,"author":{"gitId":"enhao25"},"content":"            // Return the description and date pair"},{"lineNumber":275,"author":{"gitId":"enhao25"},"content":"            return new StringDatePair(description, by);"},{"lineNumber":276,"author":{"gitId":"enhao25"},"content":"        } else if (cmdType \u003d\u003d CommandType.FILE_EVENT) {"},{"lineNumber":277,"author":{"gitId":"enhao25"},"content":"            // Split up the string into the description and date accordingly"},{"lineNumber":278,"author":{"gitId":"enhao25"},"content":"            String[] taskInputValues \u003d fullCommand.substring(7).split(\" \\\\(at: \");"},{"lineNumber":279,"author":{"gitId":"enhao25"},"content":"            String description \u003d taskInputValues[0];"},{"lineNumber":280,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":281,"author":{"gitId":"enhao25"},"content":"            // Specific the date format that our system will accept and save it in the by variable"},{"lineNumber":282,"author":{"gitId":"enhao25"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy - HHmm\");"},{"lineNumber":283,"author":{"gitId":"enhao25"},"content":"            LocalDateTime at \u003d LocalDateTime.parse("},{"lineNumber":284,"author":{"gitId":"enhao25"},"content":"                taskInputValues[1].substring(0, taskInputValues[1].length() - 1),"},{"lineNumber":285,"author":{"gitId":"enhao25"},"content":"                dateFormatter);"},{"lineNumber":286,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":287,"author":{"gitId":"enhao25"},"content":"            // Return the description and date pair"},{"lineNumber":288,"author":{"gitId":"enhao25"},"content":"            return new StringDatePair(description, at);"},{"lineNumber":289,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":290,"author":{"gitId":"enhao25"},"content":"        return null;"},{"lineNumber":291,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":292,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":292}},{"path":"src/main/java/dukeproject/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":" * Represents the storage where the program stores the list of tasks on."},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"    private final String filePath;"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    Storage(String filePath) throws DukeException {"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"        if (!createFolder() || !createFile(filePath)) {"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"            throw new DukeException(\"Error during file creation\");"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"    // Create the folder if it has not been created before"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"    private boolean createFolder() {"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"        File folder \u003d new File(\"data\");"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"        // Ensures that the data folder exists, if not create the folder"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"        if (!folder.exists()) {"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"            return folder.mkdirs();"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"        return true;"},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"    // Create the file if it has not been created before"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"    private boolean createFile(String filePath) {"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"        File file \u003d new File(filePath); // create a File for the given file path"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"        // Ensures that the file is created, if not create the file"},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":"        if (!file.exists() \u0026\u0026 !file.isFile()) {"},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"            // Create a new file"},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"            try {"},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"                if (!file.createNewFile()) {"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":"                    return false;"},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"            } catch (IOException ex) {"},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":"                return false;"},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"        return true;"},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":53,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"enhao25"},"content":"     * Rewrite the entire file from the file path based on the task list given."},{"lineNumber":55,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"enhao25"},"content":"     * @param taskList A list of task."},{"lineNumber":57,"author":{"gitId":"enhao25"},"content":"     * @throws FileNotFoundException If the file cannot be found."},{"lineNumber":58,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"enhao25"},"content":"    public void writeToFile(TaskList taskList) throws FileNotFoundException {"},{"lineNumber":60,"author":{"gitId":"enhao25"},"content":"        // Push the file content to the page"},{"lineNumber":61,"author":{"gitId":"enhao25"},"content":"        FileWriter fileWriter;"},{"lineNumber":62,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":63,"author":{"gitId":"enhao25"},"content":"            fileWriter \u003d new FileWriter(filePath);"},{"lineNumber":64,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":65,"author":{"gitId":"enhao25"},"content":"            // Rewrite the file with the entire list of text"},{"lineNumber":66,"author":{"gitId":"enhao25"},"content":"            for (int index \u003d 0; index \u003c taskList.size(); index++) {"},{"lineNumber":67,"author":{"gitId":"enhao25"},"content":"                fileWriter.write(taskList.get(index).toString() + \"\\n\");"},{"lineNumber":68,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":70,"author":{"gitId":"enhao25"},"content":"            fileWriter.close();"},{"lineNumber":71,"author":{"gitId":"enhao25"},"content":"        } catch (Exception ex) {"},{"lineNumber":72,"author":{"gitId":"enhao25"},"content":"            throw new FileNotFoundException();"},{"lineNumber":73,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":76,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"enhao25"},"content":"     * Load and return the file content from the task file."},{"lineNumber":78,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"enhao25"},"content":"     * @return An array list representing the file contents."},{"lineNumber":80,"author":{"gitId":"enhao25"},"content":"     * @throws FileNotFoundException If the file cannot be found."},{"lineNumber":81,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"enhao25"},"content":"    public ArrayList\u003cString\u003e loadFileContent() throws FileNotFoundException {"},{"lineNumber":83,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":84,"author":{"gitId":"enhao25"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":85,"author":{"gitId":"enhao25"},"content":"        Scanner sc \u003d new Scanner(file);"},{"lineNumber":86,"author":{"gitId":"enhao25"},"content":"        ArrayList\u003cString\u003e contents \u003d new ArrayList\u003c\u003e();"},{"lineNumber":87,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":88,"author":{"gitId":"enhao25"},"content":"        // Store each line as a separate value in the array"},{"lineNumber":89,"author":{"gitId":"enhao25"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":90,"author":{"gitId":"enhao25"},"content":"            contents.add(sc.nextLine());"},{"lineNumber":91,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":93,"author":{"gitId":"enhao25"},"content":"        sc.close();"},{"lineNumber":94,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":95,"author":{"gitId":"enhao25"},"content":"        return contents;"},{"lineNumber":96,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":97}},{"path":"src/main/java/dukeproject/StringDatePair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"public class StringDatePair {"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"    private final String stringVal;"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"    private final LocalDateTime dateTimeVal;"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"    StringDatePair(String stringVal, LocalDateTime dateTimeVal) {"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"        this.stringVal \u003d stringVal;"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"        this.dateTimeVal \u003d dateTimeVal;"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"    // Returns the string value"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"    public String getString() {"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"        return stringVal;"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    // Return the date value"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"    public LocalDateTime getDate() {"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"        return dateTimeVal;"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":23}},{"path":"src/main/java/dukeproject/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":" * Represents a task with a description and whether the task has been done."},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":" *"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":" * X for the isDone parameter means that the event has been completed."},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"    protected boolean isDone;"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"     * Constructor for the task, specifying the description."},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"     * By default, the task is not done yet."},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"     * @param description Description of the task."},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    public Task(String description) {"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"        this.isDone \u003d false;"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"     * Constructor for the task, specifying the description and whether the task is done."},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"     * @param description Description of the task."},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"        this.description \u003d description;"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"     * Mark the task as done and return a success message from getTask()."},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"    public void markAsDone() {"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"        this.isDone \u003d true;"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":"     * Get the status icon depending on whether the task is done or not."},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"     * @return Symbol \"X\" if it is done, else returns an empty string \" \"."},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":"    public String getStatusIcon() {"},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"        return (isDone ? \"X\" : \" \"); //return X symbols if done, else return blank space"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"     * Returns a message that a task has been successfully added."},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":"     * @param taskListSize Size / Length of the task list."},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":"     * @return A message to describe that the task has been successfully added."},{"lineNumber":53,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"enhao25"},"content":"    public String successMessage(int taskListSize) {"},{"lineNumber":55,"author":{"gitId":"enhao25"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":56,"author":{"gitId":"enhao25"},"content":"                + \"  %s\\n\" + \"Now you have %d tasks in the list.\\n\","},{"lineNumber":57,"author":{"gitId":"enhao25"},"content":"                this.toString(), taskListSize);"},{"lineNumber":58,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":60,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"enhao25"},"content":"     * Returns a message that a task has been successfully deleted."},{"lineNumber":62,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"enhao25"},"content":"     * @param taskListSize Size / Length of the task list."},{"lineNumber":64,"author":{"gitId":"enhao25"},"content":"     * @return A message to describe that the task has been successfully deleted."},{"lineNumber":65,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"enhao25"},"content":"    public String deleteMessage(int taskListSize) {"},{"lineNumber":67,"author":{"gitId":"enhao25"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":68,"author":{"gitId":"enhao25"},"content":"                + \"  %s\\n\" + \"Now you have %d tasks in the list.\\n\","},{"lineNumber":69,"author":{"gitId":"enhao25"},"content":"                this.toString(), taskListSize);"},{"lineNumber":70,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":72,"author":{"gitId":"enhao25"},"content":"    /**Returns a readable description of the task. */"},{"lineNumber":73,"author":{"gitId":"enhao25"},"content":"    @Override"},{"lineNumber":74,"author":{"gitId":"enhao25"},"content":"    public String toString() {"},{"lineNumber":75,"author":{"gitId":"enhao25"},"content":"        return description;"},{"lineNumber":76,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":77}},{"path":"src/main/java/dukeproject/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":" * Represents a list of task."},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":" * A Task List object contains a list of task object which supports methods for"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":" * adding, removing and getting the task and size of the task list."},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"    /** Constructor to create an empty task list. */"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"     * Constructor to create a pre-filled task list."},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"     * @param contents List of task represented as a string."},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"     * @throws DukeException If unable to determine the task type."},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"    TaskList(ArrayList\u003cString\u003e contents) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"        for (String task: contents) {"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"            // End when there is no task to work with"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"            if (task.isEmpty()) {"},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"                break;"},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"            char taskType \u003d task.charAt(1);"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"            char isDone \u003d task.charAt(4);"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"            String description;"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"            // Create task based on event type"},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":"            if (taskType \u003d\u003d \u0027T\u0027) {"},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"                // ToDo Task"},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"                description \u003d task.substring(7);"},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"                taskList.add(new ToDo(description, isDone \u003d\u003d \u0027X\u0027));"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":"            } else if (taskType \u003d\u003d \u0027D\u0027) {"},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"                // Get the description and date from the user\u0027s input (Deadline Task)"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"                StringDatePair output \u003d new Parser().parse(task, Parser.CommandType.FILE_DEADLINE);"},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"                // Add the task to the task list"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"                taskList.add(new Deadline(output.getString(), output.getDate(), isDone \u003d\u003d \u0027X\u0027));"},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"            } else if (taskType \u003d\u003d \u0027E\u0027) {"},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":"                // Get the description and date from the user\u0027s input (Event Task)"},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":"                StringDatePair output \u003d new Parser().parse(task, Parser.CommandType.FILE_EVENT);"},{"lineNumber":53,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":54,"author":{"gitId":"enhao25"},"content":"                // Add the task to the task list"},{"lineNumber":55,"author":{"gitId":"enhao25"},"content":"                taskList.add(new Event(output.getString(), output.getDate(), isDone \u003d\u003d \u0027X\u0027));"},{"lineNumber":56,"author":{"gitId":"enhao25"},"content":"            } else {"},{"lineNumber":57,"author":{"gitId":"enhao25"},"content":"                throw new DukeException();"},{"lineNumber":58,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":62,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"enhao25"},"content":"     * Add task to the task list."},{"lineNumber":64,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"enhao25"},"content":"     * @param newTask New task to be added to the task list."},{"lineNumber":66,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"enhao25"},"content":"    public void add(Task newTask) {"},{"lineNumber":68,"author":{"gitId":"enhao25"},"content":"        taskList.add(newTask);"},{"lineNumber":69,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":71,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"enhao25"},"content":"     * Remove task from the task list based on the index."},{"lineNumber":73,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"enhao25"},"content":"     * @param index The index of the item to be removed."},{"lineNumber":75,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"enhao25"},"content":"    public void remove(int index) {"},{"lineNumber":77,"author":{"gitId":"enhao25"},"content":"        taskList.remove(index);"},{"lineNumber":78,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":80,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"enhao25"},"content":"     * Returns the Task based on the index given."},{"lineNumber":82,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"enhao25"},"content":"     * @param index The index of the item to be retrieve."},{"lineNumber":84,"author":{"gitId":"enhao25"},"content":"     * @return The task based on the index given."},{"lineNumber":85,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"enhao25"},"content":"    public Task get(int index) {"},{"lineNumber":87,"author":{"gitId":"enhao25"},"content":"        return taskList.get(index);"},{"lineNumber":88,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":90,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"enhao25"},"content":"     * Returns the size of the task list."},{"lineNumber":92,"author":{"gitId":"enhao25"},"content":"     * @return Size of the task list."},{"lineNumber":93,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"enhao25"},"content":"    public int size() {"},{"lineNumber":95,"author":{"gitId":"enhao25"},"content":"        return taskList.size();"},{"lineNumber":96,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":97}},{"path":"src/main/java/dukeproject/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":" * Represents a todo task where we can specific a task with description."},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":" * A todo object corresponds to a task with a description."},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":" *"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":" * X means that the task has been completed."},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"public class ToDo extends Task {"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"     * Constructor for the Deadline task, specifying the description of the task."},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"     * @param description Description of the to do task."},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"    public ToDo(String description) {"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"     * Constructor for the Deadline task, specifying the description of the task and"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"     * whether the task has been completed."},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"     * @param description Description of the to do task."},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"     * @param isDone Determine whether the task is done or not."},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"    public ToDo(String description, boolean isDone) {"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"        super(description, isDone);"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"     * Returns a readable description of the task."},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"     * E.g. [T][X] Buy Lunch"},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"    public String toString() {"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"        return String.format(\"[T][%s] %s\", super.getStatusIcon(), super.toString());"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":39}},{"path":"src/main/java/dukeproject/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"import javafx.scene.control.TextArea;"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"    @FXML"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"    private final TextArea textOutput;"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"    Ui(TextArea textOutput) {"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"        this.textOutput \u003d textOutput;"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"        this.printInitialGreeting();"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"     * Prints an initial greeting when the user first open the application."},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    public void printInitialGreeting() {"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"        String initialGreeting \u003d \"Hello I\u0027m Duke \\n\""},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"                + \"What can I do for you?\";"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(initialGreeting);"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"    // Good bye message before duke terminates"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"    public void goodByeMessage() {"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"Bye. Hope to see you again soon!\");"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"    // General error message for the user"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"    public void printUnreadableError() {"},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"    // Error message when description is empty"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"    public void printDescriptionError() {"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"OOPS!!! The description cannot be empty\");"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":"    // Error message when file could not be found"},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"    public void printFileError() {"},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"OOPS!!! The file could not be found\");"},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"    // Error message when date format is wrong"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"    public void printDateFormatError() {"},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"OOPS!! Please input a value date time format of yyyy-MM-dd HHmm\");"},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"    // Error message when task number is invalid"},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":"    public void printTaskNumError() {"},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"Please enter a valid task number\");"},{"lineNumber":53,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":55,"author":{"gitId":"enhao25"},"content":"    // Error message when the find command is invalid"},{"lineNumber":56,"author":{"gitId":"enhao25"},"content":"    public void printFindError() {"},{"lineNumber":57,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"Please enter a valid find command\");"},{"lineNumber":58,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":60,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"enhao25"},"content":"     * Prints a success message after marking a task as done."},{"lineNumber":62,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"enhao25"},"content":"     * @param taskList List of all the task."},{"lineNumber":64,"author":{"gitId":"enhao25"},"content":"     * @param taskIndex Index of the task this message is for."},{"lineNumber":65,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"enhao25"},"content":"    public void printTaskSuccess(TaskList taskList, int taskIndex) {"},{"lineNumber":67,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"\\\"Nice! I\u0027ve marked this task as done:\\\\n \""},{"lineNumber":68,"author":{"gitId":"enhao25"},"content":"            + \"   \" + taskList.get(taskIndex - 1).toString());"},{"lineNumber":69,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":71,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"enhao25"},"content":"     * Prints the list of task for the user."},{"lineNumber":73,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"enhao25"},"content":"     * @param taskList List of all the task."},{"lineNumber":75,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"enhao25"},"content":"    public void printTaskList(TaskList taskList) {"},{"lineNumber":77,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"Here are the tasks in your list:\");"},{"lineNumber":78,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":79,"author":{"gitId":"enhao25"},"content":"        // Shows the list of user inputs with its numbering starting from 1"},{"lineNumber":80,"author":{"gitId":"enhao25"},"content":"        for (int index \u003d 0; index \u003c taskList.size(); index++) {"},{"lineNumber":81,"author":{"gitId":"enhao25"},"content":"            this.printWithSpace(index + 1 + \". \" + taskList.get(index).toString());"},{"lineNumber":82,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"\");"},{"lineNumber":84,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":86,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"enhao25"},"content":"     * Prints the list of tasks that matches the keyword."},{"lineNumber":88,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"enhao25"},"content":"     * @param taskList List of task."},{"lineNumber":90,"author":{"gitId":"enhao25"},"content":"     * @param keyword Keyword to search for."},{"lineNumber":91,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"enhao25"},"content":"    public void printKeywordTaskList(TaskList taskList, String keyword) {"},{"lineNumber":93,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"Here are the matching tasks in your list:\");"},{"lineNumber":94,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":95,"author":{"gitId":"enhao25"},"content":"        int counter \u003d 1;"},{"lineNumber":96,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":97,"author":{"gitId":"enhao25"},"content":"        // Shows the list of user inputs with its numbering starting from 1"},{"lineNumber":98,"author":{"gitId":"enhao25"},"content":"        for (int index \u003d 0; index \u003c taskList.size(); index++) {"},{"lineNumber":99,"author":{"gitId":"enhao25"},"content":"            /* Only print the listing and increment the counter if the task descriptions"},{"lineNumber":100,"author":{"gitId":"enhao25"},"content":"            contains the keyword */"},{"lineNumber":101,"author":{"gitId":"enhao25"},"content":"            if (taskList.get(index).description.contains(keyword)) {"},{"lineNumber":102,"author":{"gitId":"enhao25"},"content":"                this.printWithSpace(counter + \". \" + taskList.get(index).toString());"},{"lineNumber":103,"author":{"gitId":"enhao25"},"content":"                counter++;"},{"lineNumber":104,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":107,"author":{"gitId":"enhao25"},"content":"        // Print \"None\" if there is no task that match the keyword"},{"lineNumber":108,"author":{"gitId":"enhao25"},"content":"        if (counter \u003d\u003d 1) {"},{"lineNumber":109,"author":{"gitId":"enhao25"},"content":"            this.printWithSpace(\"None\");"},{"lineNumber":110,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"\"); // Blank line"},{"lineNumber":112,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":114,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"enhao25"},"content":"     * Prints a string on the UI based on the given string to be printed."},{"lineNumber":116,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"enhao25"},"content":"     * @param stringToPrint String to be printed."},{"lineNumber":118,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"enhao25"},"content":"    public void printWithSpace(String stringToPrint) {"},{"lineNumber":120,"author":{"gitId":"enhao25"},"content":"        textOutput.appendText(stringToPrint + \"\\n\");"},{"lineNumber":121,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":122}},{"path":"src/main/resources/View/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Insert your commands here\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"        \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"        \u003c/font\u003e"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    \u003c/Button\u003e"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"\u003e"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"            \u003cTextArea fx:id\u003d\"textOutput\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"        \u003c/VBox\u003e"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"enhao25":23}},{"path":"src/main/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"import Duke.Parser;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":"import Duke.StringDatePair;"},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"public class ParserTest {"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"    public void inputEventTest(){"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"        StringDatePair output \u003d new Parser().parse("},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"            \"event Test Event /at 2020-10-28 1000\","},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"            Parser.commandType.INPUT_EVENT"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"        );"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"        assertEquals(\"Test Event \", output.getString());"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"        assertEquals(LocalDateTime.of(2020, 10, 28, 10, 0)"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"            , output.getDate());"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"    public void inputDeadlineTest(){"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"        StringDatePair output \u003d new Parser().parse("},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"            \"deadline return book /by 2020-03-10 1800\","},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"            Parser.commandType.INPUT_DEADLINE"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"        );"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"        assertEquals(\"return book \", output.getString());"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"        assertEquals(LocalDateTime.of(2020, 3, 10, 18, 0)"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"            , output.getDate());"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":31}},{"path":"src/main/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"import Duke.Task;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":"import Duke.TaskList;"},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"public class TaskListTest {"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"    public void addItemTest(){"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"        // Adding"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"        tasks.add(new Task(\"Sample task 1\"));"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"        tasks.add(new Task(\"Sample task 2\"));"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"        // Testing"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"        assertEquals(\"Sample task 1\", tasks.get(0).toString());"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"        assertEquals(\"Sample task 2\", tasks.get(1).toString());"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"        assertEquals(2, tasks.size());"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":"deadline return book /by 2020-03-10 1800"},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"event project meeting /at 2020-01-28 0800"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"event project meeting /at wrongdate"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"todo buy item"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"list"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"done 3"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"list"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"todo"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"blah"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"list"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"delete 1"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"list"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"delete 3"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"list"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"todo buy book"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"list"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"find book"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"find test"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"bye"}],"authorContributionMap":{"enhao25":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"javac  -cp ..\\src\\main\\java\\Duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"java -classpath ..\\bin Duke/Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"enhao25":2,"-":19}}]
