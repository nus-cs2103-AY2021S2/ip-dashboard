[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"    mainClassName\u003d\"gui.Launcher\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"enhao25":15,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"[D][X] return book  (by: 10 Mar 2020 - 1800)"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":"[E][ ] project meeting  (at: 28 Jan 2020 - 0800)"}],"authorContributionMap":{"enhao25":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":""},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":"Duke Project User Guide"},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"---  "},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"Duke Project is an **to do list application** made for busy people to keep track of their importance task to be done. It allows user to manage their contracts as well. This allows for a fast and efficient way for you to manage both your task and contacts at the same time."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"## Quick start"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"1. Ensure you have Java `11`  or above installed in your Computer."},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"1. Download the latest `duke.jar`."},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"1. Double-click the file to start the app."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"1. Type the command in the command box and press Enter to execute it. \u003cbr\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"1. Refer to the [Features](#features) below for details of each command."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"### Adding a todo task: `todo`"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"Adds a to do task to the application."},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"Format: `todo [TASK NAME]`"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"Examples:"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"* `todo borrow book`"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"Expected Outcome:  "},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"`Got it. I\u0027ve added this task:`  "},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"`[T][ ] borrow book`  "},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"`Now you have 1 tasks in the list.`"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"  "},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"---"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"### Adding a task with deadline: `deadline`"},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"Adds a task with deadline to the application."},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"Format: `deadline [TASK NAME] [/by DATE]`"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":"* **DATE** must be in the `YYYY-MM-DD HHMM`  format."},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"Examples:"},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":"* `deadline return book /by 2020-03-10 1800`"},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"Expected Outcome:  "},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"`Got it. I\u0027ve added this task:`  "},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":"`[D][ ] return book  (by: 10 Mar 2020 - 1800)`  "},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":"`Now you have 2 tasks in the list.`"},{"lineNumber":53,"author":{"gitId":"enhao25"},"content":"  "},{"lineNumber":54,"author":{"gitId":"enhao25"},"content":"---"},{"lineNumber":55,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":56,"author":{"gitId":"enhao25"},"content":"### Adding an event task: `event`"},{"lineNumber":57,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":58,"author":{"gitId":"enhao25"},"content":"Adds an event task with a specific datetime to the application."},{"lineNumber":59,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":60,"author":{"gitId":"enhao25"},"content":"Format: `event [TASK NAME] [/at DATE]`"},{"lineNumber":61,"author":{"gitId":"enhao25"},"content":"* **DATE** must be in the `YYYY-MM-DD HHMM`  format."},{"lineNumber":62,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":63,"author":{"gitId":"enhao25"},"content":"Examples:"},{"lineNumber":64,"author":{"gitId":"enhao25"},"content":"* `event project meeting /at 2020-01-28 0800`"},{"lineNumber":65,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":66,"author":{"gitId":"enhao25"},"content":"Expected Outcome:  "},{"lineNumber":67,"author":{"gitId":"enhao25"},"content":"`Got it. I\u0027ve added this task:`  "},{"lineNumber":68,"author":{"gitId":"enhao25"},"content":"`[E][ ] project meeting  (at: 28 Jan 2020 - 0800)`  "},{"lineNumber":69,"author":{"gitId":"enhao25"},"content":"`Now you have 3 tasks in the list.`"},{"lineNumber":70,"author":{"gitId":"enhao25"},"content":"  "},{"lineNumber":71,"author":{"gitId":"enhao25"},"content":"---"},{"lineNumber":72,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":73,"author":{"gitId":"enhao25"},"content":"### Listing all task: `list`"},{"lineNumber":74,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":75,"author":{"gitId":"enhao25"},"content":"Shows a list of all the task in the application."},{"lineNumber":76,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":77,"author":{"gitId":"enhao25"},"content":"Format: `list`"},{"lineNumber":78,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":79,"author":{"gitId":"enhao25"},"content":"Expected Outcome:  "},{"lineNumber":80,"author":{"gitId":"enhao25"},"content":"`1. [T][ ] borrow book`  "},{"lineNumber":81,"author":{"gitId":"enhao25"},"content":"`2. [D][ ] return book  (by: 10 Mar 2020 - 1800)`  "},{"lineNumber":82,"author":{"gitId":"enhao25"},"content":"`3. [E][ ] project meeting  (at: 28 Jan 2020 - 0800)`"},{"lineNumber":83,"author":{"gitId":"enhao25"},"content":"  "},{"lineNumber":84,"author":{"gitId":"enhao25"},"content":"---"},{"lineNumber":85,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":86,"author":{"gitId":"enhao25"},"content":"### Finding task using keywords: `find`"},{"lineNumber":87,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":88,"author":{"gitId":"enhao25"},"content":"Finds a task that matches the given keywords."},{"lineNumber":89,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":90,"author":{"gitId":"enhao25"},"content":"Format: `find KEYWORD`"},{"lineNumber":91,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":92,"author":{"gitId":"enhao25"},"content":"Examples:"},{"lineNumber":93,"author":{"gitId":"enhao25"},"content":"* `find book`  returns `borrow books`  task."},{"lineNumber":94,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":95,"author":{"gitId":"enhao25"},"content":"Expected Outcome:  "},{"lineNumber":96,"author":{"gitId":"enhao25"},"content":"`Here are the matching tasks in your list:`  "},{"lineNumber":97,"author":{"gitId":"enhao25"},"content":"`1. [T][ ] borrow book`  "},{"lineNumber":98,"author":{"gitId":"enhao25"},"content":"`2. [D][ ] return book  (by: 10 Mar 2020 - 1800)`"},{"lineNumber":99,"author":{"gitId":"enhao25"},"content":"  "},{"lineNumber":100,"author":{"gitId":"enhao25"},"content":"---"},{"lineNumber":101,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":102,"author":{"gitId":"enhao25"},"content":"### Completing an event: `done`"},{"lineNumber":103,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":104,"author":{"gitId":"enhao25"},"content":"Marks a task in the application as completed."},{"lineNumber":105,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":106,"author":{"gitId":"enhao25"},"content":"Format: `done INDEX`"},{"lineNumber":107,"author":{"gitId":"enhao25"},"content":"* The task at the specified `INDEX`  is completed."},{"lineNumber":108,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":109,"author":{"gitId":"enhao25"},"content":"Examples:"},{"lineNumber":110,"author":{"gitId":"enhao25"},"content":"* `done 2`  Marks the 2nd task in the task list as completed."},{"lineNumber":111,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":112,"author":{"gitId":"enhao25"},"content":"Expected Outcome:  "},{"lineNumber":113,"author":{"gitId":"enhao25"},"content":"`Nice! I\u0027ve marked this task as done:`  "},{"lineNumber":114,"author":{"gitId":"enhao25"},"content":"`[D][X] return book  (by: 10 Mar 2020 - 1800)`"},{"lineNumber":115,"author":{"gitId":"enhao25"},"content":"  "},{"lineNumber":116,"author":{"gitId":"enhao25"},"content":"---"},{"lineNumber":117,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":118,"author":{"gitId":"enhao25"},"content":"### Deleting a task: `delete`"},{"lineNumber":119,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":120,"author":{"gitId":"enhao25"},"content":"Deletes a task from the task list."},{"lineNumber":121,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":122,"author":{"gitId":"enhao25"},"content":"Format: `delete INDEX`"},{"lineNumber":123,"author":{"gitId":"enhao25"},"content":"* The task at the specified `INDEX`  is deleted."},{"lineNumber":124,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":125,"author":{"gitId":"enhao25"},"content":"Examples:"},{"lineNumber":126,"author":{"gitId":"enhao25"},"content":"* `delete 1`  Deletes the 1st task in the task list."},{"lineNumber":127,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":128,"author":{"gitId":"enhao25"},"content":"Expected Outcome:  "},{"lineNumber":129,"author":{"gitId":"enhao25"},"content":"`Noted. I\u0027ve removed this task:`  "},{"lineNumber":130,"author":{"gitId":"enhao25"},"content":"`[T][ ] borrow book`  "},{"lineNumber":131,"author":{"gitId":"enhao25"},"content":"`Now you have 2 tasks in the list.`"},{"lineNumber":132,"author":{"gitId":"enhao25"},"content":"  "},{"lineNumber":133,"author":{"gitId":"enhao25"},"content":"---"},{"lineNumber":134,"author":{"gitId":"enhao25"},"content":"### Adding a contact : `contact add`"},{"lineNumber":135,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":136,"author":{"gitId":"enhao25"},"content":"Adds a contact person to the contact list."},{"lineNumber":137,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":138,"author":{"gitId":"enhao25"},"content":"Format: `contact add [NAME] [EMAIL] [CONTACT NUMBER]`"},{"lineNumber":139,"author":{"gitId":"enhao25"},"content":"* All the [] fields cannot have space in between."},{"lineNumber":140,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":141,"author":{"gitId":"enhao25"},"content":"Examples:"},{"lineNumber":142,"author":{"gitId":"enhao25"},"content":"* `contact add Enhao enhao96@gmail.com 81234567`"},{"lineNumber":143,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":144,"author":{"gitId":"enhao25"},"content":"Expected Outcome:  "},{"lineNumber":145,"author":{"gitId":"enhao25"},"content":"`The contact has been successfully added.`"},{"lineNumber":146,"author":{"gitId":"enhao25"},"content":"  "},{"lineNumber":147,"author":{"gitId":"enhao25"},"content":"---"},{"lineNumber":148,"author":{"gitId":"enhao25"},"content":"### Listing all contacts: `contact list`"},{"lineNumber":149,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":150,"author":{"gitId":"enhao25"},"content":"Adds a to do task to the application."},{"lineNumber":151,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":152,"author":{"gitId":"enhao25"},"content":"Format: `contact list`"},{"lineNumber":153,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":154,"author":{"gitId":"enhao25"},"content":"Expected Outcome:  "},{"lineNumber":155,"author":{"gitId":"enhao25"},"content":"`Here are the contacts in your list:`  "},{"lineNumber":156,"author":{"gitId":"enhao25"},"content":"`1. fullName\u003dEnhao, emailAddress\u003denhao96@gmail.com, contactNumber\u003d81234567`"},{"lineNumber":157,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":158,"author":{"gitId":"enhao25"},"content":"---"},{"lineNumber":159,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":160,"author":{"gitId":"enhao25"},"content":"### Deleting a contact: `contact delete`"},{"lineNumber":161,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":162,"author":{"gitId":"enhao25"},"content":"Deletes a contact from the contact list."},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"enhao25"},"content":"Format: `contact delete INDEX`"},{"lineNumber":165,"author":{"gitId":"enhao25"},"content":"* The task at the specified `INDEX`  is deleted."},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"enhao25"},"content":"Examples:"},{"lineNumber":168,"author":{"gitId":"enhao25"},"content":"* `contact delete 1`  Deletes the 1st contact in the contact list."},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"enhao25"},"content":"Expected Outcome:  "},{"lineNumber":171,"author":{"gitId":"enhao25"},"content":"`The contact has been successfully deleted.`"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  "},{"lineNumber":173,"author":{"gitId":"enhao25"},"content":"---"},{"lineNumber":174,"author":{"gitId":"enhao25"},"content":"### Exiting the program : `bye`"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"enhao25"},"content":"Exits the program."},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"enhao25"},"content":"Format: `bye`"}],"authorContributionMap":{"enhao25":159,"-":19}},{"path":"src/main/java/dukeproject/Contact.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"public class Contact {"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"    private String fullName;"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"    private String emailAddress;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"    private int contactNumber;"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"    Contact(String fullName, String emailAddress, int contactNumber) {"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"        this.fullName \u003d fullName;"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"        this.emailAddress \u003d emailAddress;"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"        this.contactNumber \u003d contactNumber;"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"    public String getFullName() {"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"        return fullName;"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    public String getEmailAddress() {"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"        return emailAddress;"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"    public int getContactNumber() {"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"        return contactNumber;"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"        return \"fullName\u003d\" + fullName"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"            + \", emailAddress\u003d\" + emailAddress"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"            + \", contactNumber\u003d\" + contactNumber;"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":32}},{"path":"src/main/java/dukeproject/ContactList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":" * Represents a list of contacts for the user."},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":" * A contact list object contains a list of contact object which supports methods for"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":" * adding, removing and getting the contact information."},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"public class ContactList {"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"    private final ArrayList\u003cContact\u003e contacts;"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"    public ContactList() {"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"        this.contacts \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"     * Constructor to create an initial list of contacts based on the contents given."},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"     * @param contents Represent contents of the contact list to be added."},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"     * @throws DukeException If any error occurs."},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"    public ContactList(ArrayList\u003cString\u003e contents) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"        this.contacts \u003d new ArrayList\u003c\u003e();"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"            for (String contact: contents) {"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"                String[] keyValuePairs \u003d contact.split(\",\");"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"                String fullName \u003d keyValuePairs[0].split(\"\u003d\")[1];"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"                String emailAddress \u003d keyValuePairs[1].split(\"\u003d\")[1];"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"                int contactNumber \u003d Integer.parseInt(keyValuePairs[2].split(\"\u003d\")[1]);"},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"                addContact(fullName, emailAddress, contactNumber);"},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"        } catch (Exception ex) {"},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"            throw new DukeException();"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":"    public void addContact(String fullName, String emailAddress, int contactNumber) {"},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"        contacts.add(new Contact(fullName, emailAddress, contactNumber));"},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":"    public void removeContact(int index) {"},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"        contacts.remove(index);"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"    public Contact getContact(int index) {"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"        return contacts.get(index);"},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":"    public int getContactsSize() {"},{"lineNumber":53,"author":{"gitId":"enhao25"},"content":"        return contacts.size();"},{"lineNumber":54,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":55}},{"path":"src/main/java/dukeproject/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":" * Represents a deadline task where we can specific a task to be completed by a certain date time."},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":" * A deadline object corresponds to a task with a description and"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":" * a datetime for the task to be completed."},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":" *"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":" * X means that the task has been completed."},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"public class Deadline extends Task {"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"    private final LocalDateTime deadlineDate;"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"     * Constructor for the Deadline task, specifying the description of the task and"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"     * the date time to be completed by."},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"     * @param description Description of the deadline task."},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"     * @param deadlineDate Deadline in terms of date time."},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"    public Deadline(String description, LocalDateTime deadlineDate) {"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"        super(description);"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"     * Constructor for the Deadline task, specifying the description of the task,"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"     * the date time to be completed by and whether the task has been completed."},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"     * @param description Description of the deadline task."},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"     * @param deadlineDate Deadline in terms of date time."},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"     * @param isDone Determine whether the task is done or not."},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"    public Deadline(String description, LocalDateTime deadlineDate, boolean isDone) {"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"        super(description, isDone);"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"     * Returns a readable description of the task."},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"     * E.g. [D][X] Borrow Book (by: 27 Oct 2021 - 1800)"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"    public String toString() {"},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":"        return String.format(\"[D][%s] %s (by: %s)\","},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"            super.getStatusIcon(),"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"            super.toString(),"},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"            deadlineDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy - HHmm\")));"},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":52}},{"path":"src/main/java/dukeproject/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import gui.Ui;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"import javafx.scene.control.TextArea;"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"* The Duke application is a to do list application where users are able to"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"* create, remove and see their to do list."},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"*"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"* @author  Low En Hao"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"* @version 0.1"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"* @since   2021-01-26"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"*/"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"public class Duke {"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    private final Storage storage;"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    private TaskList taskList;"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"    private ContactList contacts;"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"    private Ui ui \u003d null;"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"     * Returns the duke object with access to the data in the file path."},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"     * If the data is not empty, load the file content into the task list."},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"     * Else, load an empty task list where the user can start using the application."},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"     * @param filePath File path in the hard disk to store the current task list."},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"     * @throws DukeException for any error."},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"    public Duke(String filePath) throws DukeException {"},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"            taskList \u003d new TaskList(storage.loadDataFileContent());"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"            contacts \u003d new ContactList(storage.loadContactFileContent());"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"        } catch (FileNotFoundException | DukeException ex) {"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"            contacts \u003d new ContactList();"},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":"        } catch (Exception ex) {"},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"            throw new DukeException();"},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"    public void setUi(TextArea textOutput) {"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"        ui \u003d new Ui(textOutput);"},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"     * Runs and understand the user input."},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":"     * @param userInput User input from the GUI\u0027s text box."},{"lineNumber":53,"author":{"gitId":"enhao25"},"content":"     * @return Whether we should continue running the application"},{"lineNumber":54,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"enhao25"},"content":"    public boolean runUserInput(String userInput) {"},{"lineNumber":56,"author":{"gitId":"enhao25"},"content":"        return new Parser().parseUserInput(userInput, ui, storage, taskList, contacts);"},{"lineNumber":57,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":58}},{"path":"src/main/java/dukeproject/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"     * Use as exception for duke."},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"    private static final long serialVersionUID \u003d -2154386125699489110L;"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"    public DukeException(String message) {"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"    public DukeException() {"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":17}},{"path":"src/main/java/dukeproject/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":" * Represents a event task where we can specific a task to be completed at a certain date time."},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":" * An event object corresponds to a task with a description and"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":" * a datetime for the event to be completed."},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":" *"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":" * X means that the event has been completed."},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"public class Event extends Task {"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"    private final LocalDateTime eventDate;"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"     * Constructor for the Event task, specifying the description of the task and"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"     * the date time to be completed at."},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"     * @param description Description of the event task."},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"     * @param eventDate Date time for the event to be completed at."},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"    public Event(String description, LocalDateTime eventDate) {"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"        super(description);"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"        this.eventDate \u003d eventDate;"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"     * Constructor for the Event task, specifying the description of the task,"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"     * the date time to be completed at and whether the task has been completed."},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"     * @param description Description of the event task."},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"     * @param eventDate Date time for the event to be completed at."},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"     * @param isDone Determine whether the task is done or not."},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"    public Event(String description, LocalDateTime eventDate, boolean isDone) {"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"        super(description, isDone);"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"        this.eventDate \u003d eventDate;"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"     * Returns a readable description of the task."},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"     * E.g. [E][ ] Tutorial Class (at: 10 Feb 2021 - 1200)"},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"        return String.format(\"[E][%s] %s (at: %s)\","},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":"            super.getStatusIcon(), super.toString(),"},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"            eventDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy - HHmm\")));"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":50}},{"path":"src/main/java/dukeproject/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"import gui.Ui;"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":" * Represents a parser to make sense of string inputs."},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"public class Parser {"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"    public enum CommandType {"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"        INPUT_DEADLINE,"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"        INPUT_EVENT,"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"        FILE_DEADLINE,"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"        FILE_EVENT"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"    private final int OFFSET_AFTER_CONTACTS_CMD \u003d 8;"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"     * Reads and understand the user inputs."},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"     * @param userInput User input from the GUI."},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"     * @param ui Represents the UI object."},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"     * @param storage Represents the storage object."},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"     * @param taskList Represents the list of task."},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"     * @return A boolean on whether the application should continue running."},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"    public boolean parseUserInput(String userInput, Ui ui, Storage storage, TaskList taskList, ContactList contacts) {"},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"        if (userInput.equals(\"bye\")) {"},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"            // Exit when the user inputs \"bye\""},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"            return false;"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"        } else if (userInput.equals(\"list\")) {"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"            ui.printTaskList(taskList);"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"        } else if (userInput.startsWith(\"todo\")) {"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"            // Create a new to do task base on command information"},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":"            parseToDoCommand(userInput, ui, storage, taskList);"},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"        } else if (userInput.startsWith(\"deadline\")) {"},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"            // Create a new deadline task base on command information"},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"            parseDeadlineCommand(userInput, ui, storage, taskList);"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":"        } else if (userInput.startsWith(\"event\")) {"},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"            // Create a new event task base on command information"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"            parseEventCommand(userInput, ui, storage, taskList);"},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":"        } else if (userInput.startsWith(\"done\")) {"},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"            // Mark the event as done"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"            parseDoneCommand(userInput, ui, storage, taskList);"},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"        } else if (userInput.startsWith(\"delete\")) {"},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":"            // Delete the associated event"},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":"            parseDeleteCommand(userInput, ui, storage, taskList);"},{"lineNumber":53,"author":{"gitId":"enhao25"},"content":"        } else if (userInput.startsWith(\"find\")) {"},{"lineNumber":54,"author":{"gitId":"enhao25"},"content":"            // Find a return a list of task that is related to the keyword"},{"lineNumber":55,"author":{"gitId":"enhao25"},"content":"            parseForFind(userInput, ui, taskList);"},{"lineNumber":56,"author":{"gitId":"enhao25"},"content":"        } else if (userInput.startsWith(\"contact\")) {"},{"lineNumber":57,"author":{"gitId":"enhao25"},"content":"            // Only takes the string value after contact"},{"lineNumber":58,"author":{"gitId":"enhao25"},"content":"            parseContactCommand(userInput, ui, storage, contacts);"},{"lineNumber":59,"author":{"gitId":"enhao25"},"content":"        } else {"},{"lineNumber":60,"author":{"gitId":"enhao25"},"content":"            // Unable to detect the user\u0027s input"},{"lineNumber":61,"author":{"gitId":"enhao25"},"content":"            ui.printUnreadableError();"},{"lineNumber":62,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"enhao25"},"content":"        return true;"},{"lineNumber":64,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":66,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"enhao25"},"content":"     * Understands the to do command by the user."},{"lineNumber":68,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"enhao25"},"content":"     * @param command Represents the command that the user has given."},{"lineNumber":70,"author":{"gitId":"enhao25"},"content":"     * @param ui Represents the UI object."},{"lineNumber":71,"author":{"gitId":"enhao25"},"content":"     * @param storage Represents the storage object."},{"lineNumber":72,"author":{"gitId":"enhao25"},"content":"     * @param taskList Represents the list of task."},{"lineNumber":73,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"enhao25"},"content":"    public void parseToDoCommand(String command, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":75,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":76,"author":{"gitId":"enhao25"},"content":"            // Catch error where the user put empty spaces as description"},{"lineNumber":77,"author":{"gitId":"enhao25"},"content":"            if (command.substring(5).isBlank()) {"},{"lineNumber":78,"author":{"gitId":"enhao25"},"content":"                throw new StringIndexOutOfBoundsException();"},{"lineNumber":79,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":81,"author":{"gitId":"enhao25"},"content":"            ToDo newToDoTask \u003d new ToDo(command.substring(5));"},{"lineNumber":82,"author":{"gitId":"enhao25"},"content":"            taskList.addTask(newToDoTask);"},{"lineNumber":83,"author":{"gitId":"enhao25"},"content":"            storage.writeTasksToFile(taskList);"},{"lineNumber":84,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":85,"author":{"gitId":"enhao25"},"content":"            // Print a success message"},{"lineNumber":86,"author":{"gitId":"enhao25"},"content":"            ui.printWithSpace(newToDoTask.successMessage(taskList.size()));"},{"lineNumber":87,"author":{"gitId":"enhao25"},"content":"        } catch (StringIndexOutOfBoundsException ex) {"},{"lineNumber":88,"author":{"gitId":"enhao25"},"content":"            // Description is empty"},{"lineNumber":89,"author":{"gitId":"enhao25"},"content":"            ui.printDescriptionError();"},{"lineNumber":90,"author":{"gitId":"enhao25"},"content":"        } catch (FileNotFoundException ex) {"},{"lineNumber":91,"author":{"gitId":"enhao25"},"content":"            // File is empty"},{"lineNumber":92,"author":{"gitId":"enhao25"},"content":"            ui.printFileError();"},{"lineNumber":93,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":96,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"enhao25"},"content":"     * Understands the deadline command by the user."},{"lineNumber":98,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"enhao25"},"content":"     * @param command Represents the command that the user has given."},{"lineNumber":100,"author":{"gitId":"enhao25"},"content":"     * @param ui Represents the UI object."},{"lineNumber":101,"author":{"gitId":"enhao25"},"content":"     * @param storage Represents the storage object."},{"lineNumber":102,"author":{"gitId":"enhao25"},"content":"     * @param taskList Represents the list of task."},{"lineNumber":103,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"enhao25"},"content":"    public void parseDeadlineCommand(String command, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":105,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":106,"author":{"gitId":"enhao25"},"content":"            // Catch error where the user put empty spaces as description"},{"lineNumber":107,"author":{"gitId":"enhao25"},"content":"            if (command.substring(9).isBlank()) {"},{"lineNumber":108,"author":{"gitId":"enhao25"},"content":"                throw new StringIndexOutOfBoundsException();"},{"lineNumber":109,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":111,"author":{"gitId":"enhao25"},"content":"            // Get the description and date from the user\u0027s input"},{"lineNumber":112,"author":{"gitId":"enhao25"},"content":"            StringDatePair output \u003d new Parser().parseInputAndFileEvents(command, Parser.CommandType.INPUT_DEADLINE);"},{"lineNumber":113,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":114,"author":{"gitId":"enhao25"},"content":"            // Add a deadline task"},{"lineNumber":115,"author":{"gitId":"enhao25"},"content":"            Deadline newDeadlineTask \u003d new Deadline(output.getString(), output.getDate());"},{"lineNumber":116,"author":{"gitId":"enhao25"},"content":"            taskList.addTask(newDeadlineTask);"},{"lineNumber":117,"author":{"gitId":"enhao25"},"content":"            storage.writeTasksToFile(taskList);"},{"lineNumber":118,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":119,"author":{"gitId":"enhao25"},"content":"            // Print a success message"},{"lineNumber":120,"author":{"gitId":"enhao25"},"content":"            ui.printWithSpace(newDeadlineTask.successMessage(taskList.size()));"},{"lineNumber":121,"author":{"gitId":"enhao25"},"content":"        } catch (StringIndexOutOfBoundsException ex) {"},{"lineNumber":122,"author":{"gitId":"enhao25"},"content":"            // Description is empty"},{"lineNumber":123,"author":{"gitId":"enhao25"},"content":"            ui.printDescriptionError();"},{"lineNumber":124,"author":{"gitId":"enhao25"},"content":"        } catch (FileNotFoundException ex) {"},{"lineNumber":125,"author":{"gitId":"enhao25"},"content":"            // File is empty"},{"lineNumber":126,"author":{"gitId":"enhao25"},"content":"            ui.printFileError();"},{"lineNumber":127,"author":{"gitId":"enhao25"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":128,"author":{"gitId":"enhao25"},"content":"            // Datetime value parsed is not of format \"yyyy-MM-dd HHmm\""},{"lineNumber":129,"author":{"gitId":"enhao25"},"content":"            ui.printDateFormatError();"},{"lineNumber":130,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":133,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":134,"author":{"gitId":"enhao25"},"content":"     * Understands the event command by the user."},{"lineNumber":135,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":136,"author":{"gitId":"enhao25"},"content":"     * @param command Represents the command that the user has given."},{"lineNumber":137,"author":{"gitId":"enhao25"},"content":"     * @param ui Represents the UI object."},{"lineNumber":138,"author":{"gitId":"enhao25"},"content":"     * @param storage Represents the storage object."},{"lineNumber":139,"author":{"gitId":"enhao25"},"content":"     * @param taskList Represents the list of task."},{"lineNumber":140,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"enhao25"},"content":"    public void parseEventCommand(String command, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":142,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":143,"author":{"gitId":"enhao25"},"content":"            // Catch error where the user put empty spaces as description"},{"lineNumber":144,"author":{"gitId":"enhao25"},"content":"            if (command.substring(5).isBlank()) {"},{"lineNumber":145,"author":{"gitId":"enhao25"},"content":"                throw new StringIndexOutOfBoundsException();"},{"lineNumber":146,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":148,"author":{"gitId":"enhao25"},"content":"            // Get the description and date from the user\u0027s input"},{"lineNumber":149,"author":{"gitId":"enhao25"},"content":"            StringDatePair output \u003d new Parser().parseInputAndFileEvents(command, Parser.CommandType.INPUT_EVENT);"},{"lineNumber":150,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":151,"author":{"gitId":"enhao25"},"content":"            // Add a deadline task"},{"lineNumber":152,"author":{"gitId":"enhao25"},"content":"            Event newEventTask \u003d new Event(output.getString(), output.getDate());"},{"lineNumber":153,"author":{"gitId":"enhao25"},"content":"            taskList.addTask(newEventTask);"},{"lineNumber":154,"author":{"gitId":"enhao25"},"content":"            storage.writeTasksToFile(taskList);"},{"lineNumber":155,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":156,"author":{"gitId":"enhao25"},"content":"            // Print a success message"},{"lineNumber":157,"author":{"gitId":"enhao25"},"content":"            ui.printWithSpace(newEventTask.successMessage(taskList.size()));"},{"lineNumber":158,"author":{"gitId":"enhao25"},"content":"        } catch (StringIndexOutOfBoundsException ex) {"},{"lineNumber":159,"author":{"gitId":"enhao25"},"content":"            // Description is empty"},{"lineNumber":160,"author":{"gitId":"enhao25"},"content":"            ui.printDescriptionError();"},{"lineNumber":161,"author":{"gitId":"enhao25"},"content":"        } catch (FileNotFoundException ex) {"},{"lineNumber":162,"author":{"gitId":"enhao25"},"content":"            // File is empty"},{"lineNumber":163,"author":{"gitId":"enhao25"},"content":"            ui.printFileError();"},{"lineNumber":164,"author":{"gitId":"enhao25"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":165,"author":{"gitId":"enhao25"},"content":"            // Datetime value parsed is not of format \"yyyy-MM-dd HHmm\""},{"lineNumber":166,"author":{"gitId":"enhao25"},"content":"            ui.printDateFormatError();"},{"lineNumber":167,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":170,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"enhao25"},"content":"     * Understands the done command by the user."},{"lineNumber":172,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":173,"author":{"gitId":"enhao25"},"content":"     * @param command Represents the command that the user has given."},{"lineNumber":174,"author":{"gitId":"enhao25"},"content":"     * @param ui Represents the UI object."},{"lineNumber":175,"author":{"gitId":"enhao25"},"content":"     * @param storage Represents the storage object."},{"lineNumber":176,"author":{"gitId":"enhao25"},"content":"     * @param taskList Represents the list of task."},{"lineNumber":177,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":178,"author":{"gitId":"enhao25"},"content":"    public void parseDoneCommand(String command, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":179,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":180,"author":{"gitId":"enhao25"},"content":"            // Mark the task as done based on the number given after the \"done\" input"},{"lineNumber":181,"author":{"gitId":"enhao25"},"content":"            int taskIndex \u003d Integer.parseInt(command.substring(5));"},{"lineNumber":182,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":183,"author":{"gitId":"enhao25"},"content":"            // Mark the task as done"},{"lineNumber":184,"author":{"gitId":"enhao25"},"content":"            taskList.getTask(taskIndex - 1).markAsDone();"},{"lineNumber":185,"author":{"gitId":"enhao25"},"content":"            storage.writeTasksToFile(taskList);"},{"lineNumber":186,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":187,"author":{"gitId":"enhao25"},"content":"            // Print success message that the task was marked as done"},{"lineNumber":188,"author":{"gitId":"enhao25"},"content":"            ui.printTaskSuccess(taskList, taskIndex);"},{"lineNumber":189,"author":{"gitId":"enhao25"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException ex) {"},{"lineNumber":190,"author":{"gitId":"enhao25"},"content":"            // Task number is empty"},{"lineNumber":191,"author":{"gitId":"enhao25"},"content":"            ui.printTaskNumError();"},{"lineNumber":192,"author":{"gitId":"enhao25"},"content":"        } catch (FileNotFoundException ex) {"},{"lineNumber":193,"author":{"gitId":"enhao25"},"content":"            // File is empty"},{"lineNumber":194,"author":{"gitId":"enhao25"},"content":"            ui.printFileError();"},{"lineNumber":195,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":198,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":199,"author":{"gitId":"enhao25"},"content":"     * Understands the delete command by the user."},{"lineNumber":200,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":201,"author":{"gitId":"enhao25"},"content":"     * @param command Represents the command that the user has given."},{"lineNumber":202,"author":{"gitId":"enhao25"},"content":"     * @param ui Represents the UI object."},{"lineNumber":203,"author":{"gitId":"enhao25"},"content":"     * @param storage Represents the storage object."},{"lineNumber":204,"author":{"gitId":"enhao25"},"content":"     * @param taskList Represents the list of task."},{"lineNumber":205,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":206,"author":{"gitId":"enhao25"},"content":"    public void parseDeleteCommand(String command, Ui ui, Storage storage, TaskList taskList) {"},{"lineNumber":207,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":208,"author":{"gitId":"enhao25"},"content":"            // Delete task"},{"lineNumber":209,"author":{"gitId":"enhao25"},"content":"            int taskIndex \u003d Integer.parseInt(command.substring(7)) - 1;"},{"lineNumber":210,"author":{"gitId":"enhao25"},"content":"            Task taskToBeRemoved \u003d taskList.getTask(taskIndex);"},{"lineNumber":211,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":212,"author":{"gitId":"enhao25"},"content":"            // Remove the appropriate task away from the list of task"},{"lineNumber":213,"author":{"gitId":"enhao25"},"content":"            taskList.removeTask(taskIndex);"},{"lineNumber":214,"author":{"gitId":"enhao25"},"content":"            storage.writeTasksToFile(taskList);"},{"lineNumber":215,"author":{"gitId":"enhao25"},"content":"            ui.printWithSpace(taskToBeRemoved.deleteMessage(taskList.size()));"},{"lineNumber":216,"author":{"gitId":"enhao25"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException ex) {"},{"lineNumber":217,"author":{"gitId":"enhao25"},"content":"            // Task number is empty"},{"lineNumber":218,"author":{"gitId":"enhao25"},"content":"            ui.printTaskNumError();"},{"lineNumber":219,"author":{"gitId":"enhao25"},"content":"        } catch (FileNotFoundException ex) {"},{"lineNumber":220,"author":{"gitId":"enhao25"},"content":"            // File is empty"},{"lineNumber":221,"author":{"gitId":"enhao25"},"content":"            ui.printFileError();"},{"lineNumber":222,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":223,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":225,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":226,"author":{"gitId":"enhao25"},"content":"     * Parse a find command."},{"lineNumber":227,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":228,"author":{"gitId":"enhao25"},"content":"     * @param command Command / input to find."},{"lineNumber":229,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":230,"author":{"gitId":"enhao25"},"content":"    public void parseForFind(String command, Ui ui, TaskList taskList) {"},{"lineNumber":231,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":232,"author":{"gitId":"enhao25"},"content":"            String keyword \u003d command.substring(5);"},{"lineNumber":233,"author":{"gitId":"enhao25"},"content":"            ui.printKeywordTaskList(taskList, keyword);"},{"lineNumber":234,"author":{"gitId":"enhao25"},"content":"        } catch (Exception ex) {"},{"lineNumber":235,"author":{"gitId":"enhao25"},"content":"            ui.printFindError();"},{"lineNumber":236,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":237,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":239,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":240,"author":{"gitId":"enhao25"},"content":"     * Parse a contact command."},{"lineNumber":241,"author":{"gitId":"enhao25"},"content":"     * @param command Represents the command that the user has given."},{"lineNumber":242,"author":{"gitId":"enhao25"},"content":"     * @param ui Represents the UI object."},{"lineNumber":243,"author":{"gitId":"enhao25"},"content":"     * @param storage Represents the storage object."},{"lineNumber":244,"author":{"gitId":"enhao25"},"content":"     * @param contacts Represents the list of contacts."},{"lineNumber":245,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":246,"author":{"gitId":"enhao25"},"content":"    public void parseContactCommand(String command, Ui ui, Storage storage, ContactList contacts) {"},{"lineNumber":247,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":248,"author":{"gitId":"enhao25"},"content":"            if (command.startsWith(\"list\", OFFSET_AFTER_CONTACTS_CMD)) {"},{"lineNumber":249,"author":{"gitId":"enhao25"},"content":"                ui.printContactList(contacts);"},{"lineNumber":250,"author":{"gitId":"enhao25"},"content":"            } else if (command.startsWith(\"add\", OFFSET_AFTER_CONTACTS_CMD)) {"},{"lineNumber":251,"author":{"gitId":"enhao25"},"content":"                parseContactAddCommand(command, ui, storage, contacts);"},{"lineNumber":252,"author":{"gitId":"enhao25"},"content":"            } else if (command.startsWith(\"delete\", OFFSET_AFTER_CONTACTS_CMD)) {"},{"lineNumber":253,"author":{"gitId":"enhao25"},"content":"                parseContactDeleteCommand(command, ui, storage, contacts);"},{"lineNumber":254,"author":{"gitId":"enhao25"},"content":"            } else {"},{"lineNumber":255,"author":{"gitId":"enhao25"},"content":"                ui.printUnreadableError();"},{"lineNumber":256,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":257,"author":{"gitId":"enhao25"},"content":"        } catch (Exception ex) {"},{"lineNumber":258,"author":{"gitId":"enhao25"},"content":"            ui.printGeneralParseError();"},{"lineNumber":259,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":260,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":262,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":263,"author":{"gitId":"enhao25"},"content":"     * Parse an add contact command."},{"lineNumber":264,"author":{"gitId":"enhao25"},"content":"     * @param command Represents the command that the user has given."},{"lineNumber":265,"author":{"gitId":"enhao25"},"content":"     * @param ui Represents the UI object."},{"lineNumber":266,"author":{"gitId":"enhao25"},"content":"     * @param storage Represents the storage object."},{"lineNumber":267,"author":{"gitId":"enhao25"},"content":"     * @param contacts Represents the list of contacts."},{"lineNumber":268,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":269,"author":{"gitId":"enhao25"},"content":"    public void parseContactAddCommand(String command, Ui ui, Storage storage, ContactList contacts) {"},{"lineNumber":270,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":271,"author":{"gitId":"enhao25"},"content":"            String[] inputs \u003d command.substring(OFFSET_AFTER_CONTACTS_CMD + 4).split(\" \");"},{"lineNumber":272,"author":{"gitId":"enhao25"},"content":"            String fullName \u003d inputs[0];"},{"lineNumber":273,"author":{"gitId":"enhao25"},"content":"            String emailAddress \u003d inputs[1];"},{"lineNumber":274,"author":{"gitId":"enhao25"},"content":"            int contactNumber \u003d Integer.parseInt(inputs[2]);"},{"lineNumber":275,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":276,"author":{"gitId":"enhao25"},"content":"            contacts.addContact(fullName, emailAddress, contactNumber);"},{"lineNumber":277,"author":{"gitId":"enhao25"},"content":"            ui.printContactAdded();"},{"lineNumber":278,"author":{"gitId":"enhao25"},"content":"            storage.writeContactsToFile(contacts);"},{"lineNumber":279,"author":{"gitId":"enhao25"},"content":"        } catch (Exception ex) {"},{"lineNumber":280,"author":{"gitId":"enhao25"},"content":"            ui.printGeneralParseError();"},{"lineNumber":281,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":282,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":283,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":284,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":285,"author":{"gitId":"enhao25"},"content":"     * Parse a delete contact command."},{"lineNumber":286,"author":{"gitId":"enhao25"},"content":"     * @param command Represents the command that the user has given."},{"lineNumber":287,"author":{"gitId":"enhao25"},"content":"     * @param ui Represents the UI object."},{"lineNumber":288,"author":{"gitId":"enhao25"},"content":"     * @param storage Represents the storage object."},{"lineNumber":289,"author":{"gitId":"enhao25"},"content":"     * @param contacts Represents the list of contacts."},{"lineNumber":290,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":291,"author":{"gitId":"enhao25"},"content":"    public void parseContactDeleteCommand(String command, Ui ui, Storage storage, ContactList contacts) {"},{"lineNumber":292,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":293,"author":{"gitId":"enhao25"},"content":"            int contactIndex \u003d Integer.parseInt(command.substring(OFFSET_AFTER_CONTACTS_CMD + 7)) - 1;"},{"lineNumber":294,"author":{"gitId":"enhao25"},"content":"            contacts.removeContact(contactIndex);"},{"lineNumber":295,"author":{"gitId":"enhao25"},"content":"            ui.printContactDeleted();"},{"lineNumber":296,"author":{"gitId":"enhao25"},"content":"            storage.writeContactsToFile(contacts);"},{"lineNumber":297,"author":{"gitId":"enhao25"},"content":"        } catch (Exception ex) {"},{"lineNumber":298,"author":{"gitId":"enhao25"},"content":"            ui.printTaskNumError();"},{"lineNumber":299,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":300,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":302,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":303,"author":{"gitId":"enhao25"},"content":"     * Returns an object which contains the description and date of a task."},{"lineNumber":304,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":305,"author":{"gitId":"enhao25"},"content":"     * @param fullCommand The input that the parser will try to make sense of."},{"lineNumber":306,"author":{"gitId":"enhao25"},"content":"     * @param cmdType The command type which determines how we try to interpret the data."},{"lineNumber":307,"author":{"gitId":"enhao25"},"content":"     * @return An object which contains the description and date of a task."},{"lineNumber":308,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":309,"author":{"gitId":"enhao25"},"content":"    public StringDatePair parseInputAndFileEvents(String fullCommand, CommandType cmdType) {"},{"lineNumber":310,"author":{"gitId":"enhao25"},"content":"        if (cmdType \u003d\u003d CommandType.INPUT_DEADLINE) {"},{"lineNumber":311,"author":{"gitId":"enhao25"},"content":"            return handleInputDeadlineCmd(fullCommand);"},{"lineNumber":312,"author":{"gitId":"enhao25"},"content":"        } else if (cmdType \u003d\u003d CommandType.INPUT_EVENT) {"},{"lineNumber":313,"author":{"gitId":"enhao25"},"content":"            return handleInputEventCmd(fullCommand);"},{"lineNumber":314,"author":{"gitId":"enhao25"},"content":"        } else if (cmdType \u003d\u003d CommandType.FILE_DEADLINE) {"},{"lineNumber":315,"author":{"gitId":"enhao25"},"content":"            return handleFileDeadlineCmd(fullCommand);"},{"lineNumber":316,"author":{"gitId":"enhao25"},"content":"        } else if (cmdType \u003d\u003d CommandType.FILE_EVENT) {"},{"lineNumber":317,"author":{"gitId":"enhao25"},"content":"            return handleFileEventCmd(fullCommand);"},{"lineNumber":318,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":319,"author":{"gitId":"enhao25"},"content":"        return null;"},{"lineNumber":320,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":321,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":322,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":323,"author":{"gitId":"enhao25"},"content":"     * Handles and understand the input event command given by the user."},{"lineNumber":324,"author":{"gitId":"enhao25"},"content":"     * @param fullCommand Command given by the user."},{"lineNumber":325,"author":{"gitId":"enhao25"},"content":"     * @return An object which contains the description and date of a task."},{"lineNumber":326,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":327,"author":{"gitId":"enhao25"},"content":"    public StringDatePair handleInputDeadlineCmd(String fullCommand) {"},{"lineNumber":328,"author":{"gitId":"enhao25"},"content":"        String[] userInputValues \u003d fullCommand.substring(9).split(\"/by \");"},{"lineNumber":329,"author":{"gitId":"enhao25"},"content":"        String description \u003d userInputValues[0];"},{"lineNumber":330,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":331,"author":{"gitId":"enhao25"},"content":"        // Specific the date format that our system will accept and save it in the by variable"},{"lineNumber":332,"author":{"gitId":"enhao25"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":333,"author":{"gitId":"enhao25"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(userInputValues[1], dateFormatter);"},{"lineNumber":334,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":335,"author":{"gitId":"enhao25"},"content":"        return new StringDatePair(description, by);"},{"lineNumber":336,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":337,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":338,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":339,"author":{"gitId":"enhao25"},"content":"     * Handles and understand the input event command given by the user."},{"lineNumber":340,"author":{"gitId":"enhao25"},"content":"     * @param fullCommand Command given by the user."},{"lineNumber":341,"author":{"gitId":"enhao25"},"content":"     * @return An object which contains the description and date of a task."},{"lineNumber":342,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":343,"author":{"gitId":"enhao25"},"content":"    public StringDatePair handleInputEventCmd(String fullCommand) {"},{"lineNumber":344,"author":{"gitId":"enhao25"},"content":"        String[] userInputValues \u003d fullCommand.substring(6).split(\"/at \");"},{"lineNumber":345,"author":{"gitId":"enhao25"},"content":"        String description \u003d userInputValues[0];"},{"lineNumber":346,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":347,"author":{"gitId":"enhao25"},"content":"        // Specific the date format that our system will accept and save it in the by variable"},{"lineNumber":348,"author":{"gitId":"enhao25"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":349,"author":{"gitId":"enhao25"},"content":"        LocalDateTime at \u003d LocalDateTime.parse(userInputValues[1], dateFormatter);"},{"lineNumber":350,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":351,"author":{"gitId":"enhao25"},"content":"        return new StringDatePair(description, at);"},{"lineNumber":352,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":353,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":354,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":355,"author":{"gitId":"enhao25"},"content":"     * Handles and understand the file deadline command taken from the file."},{"lineNumber":356,"author":{"gitId":"enhao25"},"content":"     * @param fullCommand Command given by the user."},{"lineNumber":357,"author":{"gitId":"enhao25"},"content":"     * @return An object which contains the description and date of a task."},{"lineNumber":358,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":359,"author":{"gitId":"enhao25"},"content":"    public StringDatePair handleFileDeadlineCmd(String fullCommand) {"},{"lineNumber":360,"author":{"gitId":"enhao25"},"content":"        String[] taskInputValues \u003d fullCommand.substring(7).split(\" \\\\(by: \");"},{"lineNumber":361,"author":{"gitId":"enhao25"},"content":"        String description \u003d taskInputValues[0];"},{"lineNumber":362,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":363,"author":{"gitId":"enhao25"},"content":"        // Specific the date format that our system will accept and save it in the by variable"},{"lineNumber":364,"author":{"gitId":"enhao25"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy - HHmm\");"},{"lineNumber":365,"author":{"gitId":"enhao25"},"content":"        LocalDateTime by \u003d LocalDateTime.parse("},{"lineNumber":366,"author":{"gitId":"enhao25"},"content":"            taskInputValues[1].substring(0, taskInputValues[1].length() - 1),"},{"lineNumber":367,"author":{"gitId":"enhao25"},"content":"            dateFormatter);"},{"lineNumber":368,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":369,"author":{"gitId":"enhao25"},"content":"        return new StringDatePair(description, by);"},{"lineNumber":370,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":371,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":372,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":373,"author":{"gitId":"enhao25"},"content":"     * Handles and understand the file event command taken from the file."},{"lineNumber":374,"author":{"gitId":"enhao25"},"content":"     * @param fullCommand Command given by the user."},{"lineNumber":375,"author":{"gitId":"enhao25"},"content":"     * @return An object which contains the description and date of a task."},{"lineNumber":376,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":377,"author":{"gitId":"enhao25"},"content":"    public StringDatePair handleFileEventCmd(String fullCommand) {"},{"lineNumber":378,"author":{"gitId":"enhao25"},"content":"        String[] taskInputValues \u003d fullCommand.substring(7).split(\" \\\\(at: \");"},{"lineNumber":379,"author":{"gitId":"enhao25"},"content":"        String description \u003d taskInputValues[0];"},{"lineNumber":380,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":381,"author":{"gitId":"enhao25"},"content":"        // Specific the date format that our system will accept and save it in the by variable"},{"lineNumber":382,"author":{"gitId":"enhao25"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy - HHmm\");"},{"lineNumber":383,"author":{"gitId":"enhao25"},"content":"        LocalDateTime at \u003d LocalDateTime.parse("},{"lineNumber":384,"author":{"gitId":"enhao25"},"content":"            taskInputValues[1].substring(0, taskInputValues[1].length() - 1),"},{"lineNumber":385,"author":{"gitId":"enhao25"},"content":"            dateFormatter);"},{"lineNumber":386,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":387,"author":{"gitId":"enhao25"},"content":"        return new StringDatePair(description, at);"},{"lineNumber":388,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":389,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":389}},{"path":"src/main/java/dukeproject/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":" * Represents the storage where the program stores the list of tasks on."},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"    private final String filePath;"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"    private final String CONTACT_FILE_PATH \u003d \"data/contact.txt\";"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    Storage(String filePath) throws DukeException {"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"        if (!createFolder() || !createFile(filePath) || !createFile(CONTACT_FILE_PATH)) {"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"            throw new DukeException(\"Error during file creation\");"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"    // Create the folder if it has not been created before"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"    private boolean createFolder() {"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"        File folder \u003d new File(\"data\");"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"        // Ensures that the data folder exists, if not create the folder"},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"        if (!folder.exists()) {"},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"            return folder.mkdirs();"},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"        return true;"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"    // Create the file if it has not been created before"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"    private boolean createFile(String filePath) {"},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":"        File file \u003d new File(filePath); // create a File for the given file path"},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"        // Ensures that the file is created, if not create the file"},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"        if (!file.exists() \u0026\u0026 !file.isFile()) {"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":"            // Create a new file"},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"            try {"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"                if (!file.createNewFile()) {"},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":"                    return false;"},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"            } catch (IOException ex) {"},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"                return false;"},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"enhao25"},"content":"        return true;"},{"lineNumber":54,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":56,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"enhao25"},"content":"     * Rewrite the entire file from the file path based on the task list given."},{"lineNumber":58,"author":{"gitId":"enhao25"},"content":"     * @param taskList A list of task."},{"lineNumber":59,"author":{"gitId":"enhao25"},"content":"     * @throws FileNotFoundException If the file cannot be found."},{"lineNumber":60,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"enhao25"},"content":"    public void writeTasksToFile(TaskList taskList) throws FileNotFoundException {"},{"lineNumber":62,"author":{"gitId":"enhao25"},"content":"        assertFolderCreated();"},{"lineNumber":63,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":64,"author":{"gitId":"enhao25"},"content":"        FileWriter fileWriter;"},{"lineNumber":65,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":66,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"enhao25"},"content":"            fileWriter \u003d new FileWriter(filePath);"},{"lineNumber":68,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":69,"author":{"gitId":"enhao25"},"content":"            // Rewrite the file with the entire list of text"},{"lineNumber":70,"author":{"gitId":"enhao25"},"content":"            for (int index \u003d 0; index \u003c taskList.size(); index++) {"},{"lineNumber":71,"author":{"gitId":"enhao25"},"content":"                fileWriter.write(taskList.getTask(index).toString() + \"\\n\");"},{"lineNumber":72,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":74,"author":{"gitId":"enhao25"},"content":"            fileWriter.close();"},{"lineNumber":75,"author":{"gitId":"enhao25"},"content":"        } catch (Exception ex) {"},{"lineNumber":76,"author":{"gitId":"enhao25"},"content":"            throw new FileNotFoundException();"},{"lineNumber":77,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":80,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"enhao25"},"content":"     * Rewrite the entire file from the file path based on the contact list given."},{"lineNumber":82,"author":{"gitId":"enhao25"},"content":"     * @param contacts Represents a list of contacts."},{"lineNumber":83,"author":{"gitId":"enhao25"},"content":"     * @throws FileNotFoundException If the file cannot be found."},{"lineNumber":84,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"enhao25"},"content":"    public void writeContactsToFile(ContactList contacts) throws FileNotFoundException {"},{"lineNumber":86,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":87,"author":{"gitId":"enhao25"},"content":"        FileWriter fileWriter;"},{"lineNumber":88,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":89,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":90,"author":{"gitId":"enhao25"},"content":"            fileWriter \u003d new FileWriter(CONTACT_FILE_PATH);"},{"lineNumber":91,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":92,"author":{"gitId":"enhao25"},"content":"            // Rewrite the file with the entire list of contacts"},{"lineNumber":93,"author":{"gitId":"enhao25"},"content":"            for (int index \u003d 0; index \u003c contacts.getContactsSize(); index++) {"},{"lineNumber":94,"author":{"gitId":"enhao25"},"content":"                fileWriter.write(contacts.getContact(index).toString() + \"\\n\");"},{"lineNumber":95,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":97,"author":{"gitId":"enhao25"},"content":"            fileWriter.close();"},{"lineNumber":98,"author":{"gitId":"enhao25"},"content":"        } catch (Exception ex) {"},{"lineNumber":99,"author":{"gitId":"enhao25"},"content":"            throw new FileNotFoundException();"},{"lineNumber":100,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":103,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"enhao25"},"content":"     * Load and return the file content from the task file."},{"lineNumber":105,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"enhao25"},"content":"     * @return An array list representing the file contents."},{"lineNumber":107,"author":{"gitId":"enhao25"},"content":"     * @throws FileNotFoundException If the file cannot be found."},{"lineNumber":108,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"enhao25"},"content":"    public ArrayList\u003cString\u003e loadDataFileContent() throws FileNotFoundException {"},{"lineNumber":110,"author":{"gitId":"enhao25"},"content":"        return loadFileContent(filePath);"},{"lineNumber":111,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":113,"author":{"gitId":"enhao25"},"content":"    public ArrayList\u003cString\u003e loadContactFileContent() throws FileNotFoundException {"},{"lineNumber":114,"author":{"gitId":"enhao25"},"content":"        return loadFileContent(CONTACT_FILE_PATH);"},{"lineNumber":115,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":117,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"enhao25"},"content":"     * Create an arraylist of the file contents to be loaded."},{"lineNumber":119,"author":{"gitId":"enhao25"},"content":"     * @param filePath Represents the path of the file to load the content from."},{"lineNumber":120,"author":{"gitId":"enhao25"},"content":"     * @return An arraylist of the contents from the file where each index represents a line."},{"lineNumber":121,"author":{"gitId":"enhao25"},"content":"     * @throws FileNotFoundException If the file could not be found."},{"lineNumber":122,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"enhao25"},"content":"    public ArrayList\u003cString\u003e loadFileContent(String filePath) throws FileNotFoundException {"},{"lineNumber":124,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":125,"author":{"gitId":"enhao25"},"content":"        assertFolderCreated();"},{"lineNumber":126,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":127,"author":{"gitId":"enhao25"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":128,"author":{"gitId":"enhao25"},"content":"        Scanner sc \u003d new Scanner(file);"},{"lineNumber":129,"author":{"gitId":"enhao25"},"content":"        ArrayList\u003cString\u003e contents \u003d new ArrayList\u003c\u003e();"},{"lineNumber":130,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":131,"author":{"gitId":"enhao25"},"content":"        // Store each line as a separate value in the array"},{"lineNumber":132,"author":{"gitId":"enhao25"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":133,"author":{"gitId":"enhao25"},"content":"            contents.add(sc.nextLine());"},{"lineNumber":134,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":136,"author":{"gitId":"enhao25"},"content":"        sc.close();"},{"lineNumber":137,"author":{"gitId":"enhao25"},"content":"        return contents;"},{"lineNumber":138,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":140,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"enhao25"},"content":"     * Assertions that the folder exist."},{"lineNumber":142,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"enhao25"},"content":"    public void assertFolderCreated() {"},{"lineNumber":144,"author":{"gitId":"enhao25"},"content":"        File folder \u003d new File(\"data\");"},{"lineNumber":145,"author":{"gitId":"enhao25"},"content":"        assert folder.exists() : \"The folder should exist for us to write something.\";"},{"lineNumber":146,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":147}},{"path":"src/main/java/dukeproject/StringDatePair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"public class StringDatePair {"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"    private final String stringVal;"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"    private final LocalDateTime dateTimeVal;"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"    StringDatePair(String stringVal, LocalDateTime dateTimeVal) {"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"        this.stringVal \u003d stringVal;"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"        this.dateTimeVal \u003d dateTimeVal;"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"    // Returns the string value"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"    public String getString() {"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"        return stringVal;"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    // Return the date value"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"    public LocalDateTime getDate() {"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"        return dateTimeVal;"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":23}},{"path":"src/main/java/dukeproject/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":" * Represents a task with a description and whether the task has been done."},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":" *"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":" * X for the isDone parameter means that the event has been completed."},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"    private final String description;"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"    private boolean isDone;"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"     * Constructor for the task, specifying the description."},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"     * By default, the task is not done yet."},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"     * @param description Description of the task."},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    public Task(String description) {"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"        this.isDone \u003d false;"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"     * Constructor for the task, specifying the description and whether the task is done."},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"     * @param description Description of the task."},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"        this.description \u003d description;"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"    public String getDescription() {"},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"        return description;"},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"     * Mark the task as done and return a success message from getTask()."},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"    public void markAsDone() {"},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":"        this.isDone \u003d true;"},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":"     * Get the status icon depending on whether the task is done or not."},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"     * @return Symbol \"X\" if it is done, else returns an empty string \" \"."},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"    public String getStatusIcon() {"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"        return (isDone ? \"X\" : \" \"); //return X symbols if done, else return blank space"},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"enhao25"},"content":"     * Returns a message that a task has been successfully added."},{"lineNumber":54,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"enhao25"},"content":"     * @param taskListSize Size / Length of the task list."},{"lineNumber":56,"author":{"gitId":"enhao25"},"content":"     * @return A message to describe that the task has been successfully added."},{"lineNumber":57,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"enhao25"},"content":"    public String successMessage(int taskListSize) {"},{"lineNumber":59,"author":{"gitId":"enhao25"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":60,"author":{"gitId":"enhao25"},"content":"                + \"  %s\\n\" + \"Now you have %d tasks in the list.\\n\","},{"lineNumber":61,"author":{"gitId":"enhao25"},"content":"                this.toString(), taskListSize);"},{"lineNumber":62,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":64,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"enhao25"},"content":"     * Returns a message that a task has been successfully deleted."},{"lineNumber":66,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"enhao25"},"content":"     * @param taskListSize Size / Length of the task list."},{"lineNumber":68,"author":{"gitId":"enhao25"},"content":"     * @return A message to describe that the task has been successfully deleted."},{"lineNumber":69,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"enhao25"},"content":"    public String deleteMessage(int taskListSize) {"},{"lineNumber":71,"author":{"gitId":"enhao25"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":72,"author":{"gitId":"enhao25"},"content":"                + \"  %s\\n\" + \"Now you have %d tasks in the list.\\n\","},{"lineNumber":73,"author":{"gitId":"enhao25"},"content":"                this.toString(), taskListSize);"},{"lineNumber":74,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":76,"author":{"gitId":"enhao25"},"content":"    /**Returns a readable description of the task. */"},{"lineNumber":77,"author":{"gitId":"enhao25"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"enhao25"},"content":"    public String toString() {"},{"lineNumber":79,"author":{"gitId":"enhao25"},"content":"        return description;"},{"lineNumber":80,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":81}},{"path":"src/main/java/dukeproject/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":" * Represents a list of task."},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":" * A Task List object contains a list of task object which supports methods for"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":" * adding, removing and getting the task and size of the task list."},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"    private final ArrayList\u003cTask\u003e taskList;"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"    /** Constructor to create an empty task list. */"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"     * Constructor to create a pre-filled task list."},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"     * @param contents List of task represented as a string."},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"     * @throws DukeException If unable to determine the task type."},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"    TaskList(ArrayList\u003cString\u003e contents) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"        for (String task: contents) {"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"            char taskType \u003d task.charAt(1);"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"            char isDone \u003d task.charAt(4);"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"            String description;"},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"            // Create task based on event type"},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"            if (taskType \u003d\u003d \u0027T\u0027) {"},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"                // ToDo Task"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"                description \u003d task.substring(7);"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"                taskList.add(new ToDo(description, isDone \u003d\u003d \u0027X\u0027));"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"            } else if (taskType \u003d\u003d \u0027D\u0027) {"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"                // Get the description and date from the user\u0027s input (Deadline Task)"},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":"                StringDatePair output \u003d new Parser().parseInputAndFileEvents(task, Parser.CommandType.FILE_DEADLINE);"},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"                // Add the task to the task list"},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"                taskList.add(new Deadline(output.getString(), output.getDate(), isDone \u003d\u003d \u0027X\u0027));"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":"            } else if (taskType \u003d\u003d \u0027E\u0027) {"},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"                // Get the description and date from the user\u0027s input (Event Task)"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"                StringDatePair output \u003d new Parser().parseInputAndFileEvents(task, Parser.CommandType.FILE_EVENT);"},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"                // Add the task to the task list"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"                taskList.add(new Event(output.getString(), output.getDate(), isDone \u003d\u003d \u0027X\u0027));"},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"            } else {"},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":"                throw new DukeException();"},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":55,"author":{"gitId":"enhao25"},"content":"        assert contents.size() \u003d\u003d taskList.size()"},{"lineNumber":56,"author":{"gitId":"enhao25"},"content":"            : \"The created task list should have the same size as the contents\";"},{"lineNumber":57,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":59,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"enhao25"},"content":"     * Add task to the task list."},{"lineNumber":61,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"enhao25"},"content":"     * @param newTask New task to be added to the task list."},{"lineNumber":63,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"enhao25"},"content":"    public void addTask(Task newTask) {"},{"lineNumber":65,"author":{"gitId":"enhao25"},"content":"        taskList.add(newTask);"},{"lineNumber":66,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":68,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"enhao25"},"content":"     * Remove task from the task list based on the index."},{"lineNumber":70,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"enhao25"},"content":"     * @param index The index of the item to be removed."},{"lineNumber":72,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"enhao25"},"content":"    public void removeTask(int index) {"},{"lineNumber":74,"author":{"gitId":"enhao25"},"content":"        taskList.remove(index);"},{"lineNumber":75,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":77,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"enhao25"},"content":"     * Returns the Task based on the index given."},{"lineNumber":79,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"enhao25"},"content":"     * @param index The index of the item to be retrieve."},{"lineNumber":81,"author":{"gitId":"enhao25"},"content":"     * @return The task based on the index given."},{"lineNumber":82,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"enhao25"},"content":"    public Task getTask(int index) {"},{"lineNumber":84,"author":{"gitId":"enhao25"},"content":"        return taskList.get(index);"},{"lineNumber":85,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":87,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"enhao25"},"content":"     * Returns the size of the task list."},{"lineNumber":89,"author":{"gitId":"enhao25"},"content":"     * @return Size of the task list."},{"lineNumber":90,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"enhao25"},"content":"    public int size() {"},{"lineNumber":92,"author":{"gitId":"enhao25"},"content":"        return taskList.size();"},{"lineNumber":93,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":94}},{"path":"src/main/java/dukeproject/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package dukeproject;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":" * Represents a todo task where we can specific a task with description."},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":" * A todo object corresponds to a task with a description."},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":" *"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":" * X means that the task has been completed."},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"public class ToDo extends Task {"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"     * Constructor for the Deadline task, specifying the description of the task."},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"     * @param description Description of the to do task."},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"    public ToDo(String description) {"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"     * Constructor for the Deadline task, specifying the description of the task and"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"     * whether the task has been completed."},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"     * @param description Description of the to do task."},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"     * @param isDone Determine whether the task is done or not."},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"    public ToDo(String description, boolean isDone) {"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"        super(description, isDone);"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"     * Returns a readable description of the task."},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"     * E.g. [T][X] Buy Lunch"},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"    public String toString() {"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"        return String.format(\"[T][%s] %s\", super.getStatusIcon(), super.toString());"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":39}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import dukeproject.Duke;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"import dukeproject.DukeException;"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"import javafx.application.Application;"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":" * A GUI for Duke using FXML."},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"public class Main extends Application {"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"            Duke duke \u003d new Duke(\"data/duke.txt\");"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"            scene.getStylesheets().addAll(this.getClass().getResource(\"/stylesheet/Styles.css\").toExternalForm());"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"            stage.setTitle(\"Duke Project\");"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"            stage.show();"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"        } catch (IOException | DukeException e) {"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":34}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import dukeproject.Duke;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"import javafx.scene.control.TextArea;"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":" * Controller for duke project.ui.gui.MainWindow. Provides the layout for the other controls."},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":" */"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"    private TextArea textOutput;"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"    private Duke duke;"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"    public void initialize() {"},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"        duke \u003d d;"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":"        duke.setUi(textOutput);"},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"    private void handleUserInput() {"},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":"        // Get user inputs and run the user input command"},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":"        boolean canContinue \u003d duke.runUserInput(input);"},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"        userInput.clear();"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":"        // Close the program if the user enters bye"},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"        if (!canContinue) {"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"            Stage stage \u003d (Stage) sendButton.getScene().getWindow();"},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"            stage.close();"},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":54,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":54}},{"path":"src/main/java/gui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import dukeproject.ContactList;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"import dukeproject.TaskList;"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"import javafx.scene.control.TextArea;"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"    @FXML"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"    private final TextArea textOutput;"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"     * Constructor to create the text output and print initial greetings to the user."},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"     * @param textOutput UI to output the text to the user."},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    public Ui(TextArea textOutput) {"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"        this.textOutput \u003d textOutput;"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"        this.printInitialGreeting();"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"     * Prints an initial greeting when the user first open the application."},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"    public void printInitialGreeting() {"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"        String initialGreeting \u003d \"Hello I\u0027m Duke \\n\""},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"                + \"What can I do for you?\";"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(initialGreeting);"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"\"); //blank space"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":33,"author":{"gitId":"enhao25"},"content":"    // General error message for the user"},{"lineNumber":34,"author":{"gitId":"enhao25"},"content":"    public void printUnreadableError() {"},{"lineNumber":35,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":36,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":38,"author":{"gitId":"enhao25"},"content":"    // Error message when description is empty"},{"lineNumber":39,"author":{"gitId":"enhao25"},"content":"    public void printDescriptionError() {"},{"lineNumber":40,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"OOPS!!! The description cannot be empty\");"},{"lineNumber":41,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":43,"author":{"gitId":"enhao25"},"content":"    //"},{"lineNumber":44,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":45,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"enhao25"},"content":"     * Prints error message when file could not be found."},{"lineNumber":47,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"enhao25"},"content":"    public void printFileError() {"},{"lineNumber":49,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"OOPS!!! The file could not be found! \""},{"lineNumber":50,"author":{"gitId":"enhao25"},"content":"            + \"Please restart the application again.\");"},{"lineNumber":51,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":53,"author":{"gitId":"enhao25"},"content":"    // Error message when date format is wrong"},{"lineNumber":54,"author":{"gitId":"enhao25"},"content":"    public void printDateFormatError() {"},{"lineNumber":55,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"OOPS!! Please input a value date time format of yyyy-MM-dd HHmm\");"},{"lineNumber":56,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":58,"author":{"gitId":"enhao25"},"content":"    public void printTaskNumError() {"},{"lineNumber":59,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"Please enter a valid task number\");"},{"lineNumber":60,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":62,"author":{"gitId":"enhao25"},"content":"    public void printFindError() {"},{"lineNumber":63,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"Please enter a valid find command\");"},{"lineNumber":64,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":66,"author":{"gitId":"enhao25"},"content":"    public void printGeneralParseError() {"},{"lineNumber":67,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"Please enter a valid command.\");"},{"lineNumber":68,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"enhao25"},"content":"     * Prints a success message after marking a task as done."},{"lineNumber":71,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"enhao25"},"content":"     * @param taskList List of all the task."},{"lineNumber":73,"author":{"gitId":"enhao25"},"content":"     * @param taskIndex Index of the task this message is for."},{"lineNumber":74,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"enhao25"},"content":"    public void printTaskSuccess(TaskList taskList, int taskIndex) {"},{"lineNumber":76,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"Nice! I\u0027ve marked this task as done: \""},{"lineNumber":77,"author":{"gitId":"enhao25"},"content":"            + \"  \\n \" + taskList.getTask(taskIndex - 1).toString());"},{"lineNumber":78,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":80,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"enhao25"},"content":"     * Prints the list of task for the user."},{"lineNumber":82,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"enhao25"},"content":"     * @param taskList List of all the task."},{"lineNumber":84,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"enhao25"},"content":"    public void printTaskList(TaskList taskList) {"},{"lineNumber":86,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"Here are the tasks in your list:\");"},{"lineNumber":87,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":88,"author":{"gitId":"enhao25"},"content":"        // Shows the list of user inputs with its numbering starting from 1"},{"lineNumber":89,"author":{"gitId":"enhao25"},"content":"        for (int index \u003d 0; index \u003c taskList.size(); index++) {"},{"lineNumber":90,"author":{"gitId":"enhao25"},"content":"            this.printWithSpace(index + 1 + \". \" + taskList.getTask(index).toString());"},{"lineNumber":91,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"\");"},{"lineNumber":93,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":95,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"enhao25"},"content":"     * Prints the list of contacts for the user."},{"lineNumber":97,"author":{"gitId":"enhao25"},"content":"     * @param contacts Represents the list of all the contacts."},{"lineNumber":98,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"enhao25"},"content":"    public void printContactList(ContactList contacts) {"},{"lineNumber":100,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"Here are the contacts in your list:\");"},{"lineNumber":101,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":102,"author":{"gitId":"enhao25"},"content":"        // Shows the list of user inputs with its numbering starting from 1"},{"lineNumber":103,"author":{"gitId":"enhao25"},"content":"        for (int index \u003d 0; index \u003c contacts.getContactsSize(); index++) {"},{"lineNumber":104,"author":{"gitId":"enhao25"},"content":"            this.printWithSpace(index + 1 + \". \" + contacts.getContact(index).toString());"},{"lineNumber":105,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"\");"},{"lineNumber":107,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":109,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"enhao25"},"content":"     * Prints the list of tasks that matches the keyword."},{"lineNumber":111,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"enhao25"},"content":"     * @param taskList List of task."},{"lineNumber":113,"author":{"gitId":"enhao25"},"content":"     * @param keyword Keyword to search for."},{"lineNumber":114,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"enhao25"},"content":"    public void printKeywordTaskList(TaskList taskList, String keyword) {"},{"lineNumber":116,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"Here are the matching tasks in your list:\");"},{"lineNumber":117,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":118,"author":{"gitId":"enhao25"},"content":"        int counter \u003d 1;"},{"lineNumber":119,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":120,"author":{"gitId":"enhao25"},"content":"        // Shows the list of user inputs with its numbering starting from 1"},{"lineNumber":121,"author":{"gitId":"enhao25"},"content":"        for (int index \u003d 0; index \u003c taskList.size(); index++) {"},{"lineNumber":122,"author":{"gitId":"enhao25"},"content":"            /* Only print the listing and increment the counter if the task descriptions"},{"lineNumber":123,"author":{"gitId":"enhao25"},"content":"            contains the keyword */"},{"lineNumber":124,"author":{"gitId":"enhao25"},"content":"            if (taskList.getTask(index).getDescription().contains(keyword)) {"},{"lineNumber":125,"author":{"gitId":"enhao25"},"content":"                this.printWithSpace(counter + \". \" + taskList.getTask(index).toString());"},{"lineNumber":126,"author":{"gitId":"enhao25"},"content":"                counter++;"},{"lineNumber":127,"author":{"gitId":"enhao25"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":130,"author":{"gitId":"enhao25"},"content":"        // Print \"None\" if there is no task that match the keyword"},{"lineNumber":131,"author":{"gitId":"enhao25"},"content":"        if (counter \u003d\u003d 1) {"},{"lineNumber":132,"author":{"gitId":"enhao25"},"content":"            this.printWithSpace(\"None\");"},{"lineNumber":133,"author":{"gitId":"enhao25"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"\"); // Blank line"},{"lineNumber":135,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":137,"author":{"gitId":"enhao25"},"content":"    public void printContactAdded() {"},{"lineNumber":138,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"The contact has been successfully added.\");"},{"lineNumber":139,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":141,"author":{"gitId":"enhao25"},"content":"    public void printContactDeleted() {"},{"lineNumber":142,"author":{"gitId":"enhao25"},"content":"        this.printWithSpace(\"The contact has been successfully deleted.\");"},{"lineNumber":143,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":145,"author":{"gitId":"enhao25"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"enhao25"},"content":"     * Prints a string on the UI based on the given string to be printed."},{"lineNumber":147,"author":{"gitId":"enhao25"},"content":"     *"},{"lineNumber":148,"author":{"gitId":"enhao25"},"content":"     * @param stringToPrint String to be printed."},{"lineNumber":149,"author":{"gitId":"enhao25"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"enhao25"},"content":"    public void printWithSpace(String stringToPrint) {"},{"lineNumber":151,"author":{"gitId":"enhao25"},"content":"        assert textOutput !\u003d null : \"The UI does not have a valid place to output its text.\";"},{"lineNumber":152,"author":{"gitId":"enhao25"},"content":"        textOutput.appendText(stringToPrint + \"\\n\");"},{"lineNumber":153,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":154}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Insert your commands here\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"        \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"        \u003c/font\u003e"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"    \u003c/Button\u003e"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"\u003e"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"            \u003cTextArea fx:id\u003d\"textOutput\" editable\u003d\"false\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"        \u003c/VBox\u003e"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"enhao25":23}},{"path":"src/main/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"import Duke.Parser;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":"import Duke.StringDatePair;"},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"public class ParserTest {"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"    public void inputEventTest(){"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"        StringDatePair output \u003d new Parser().parse("},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"            \"event Test Event /at 2020-10-28 1000\","},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"            Parser.commandType.INPUT_EVENT"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"        );"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"        assertEquals(\"Test Event \", output.getString());"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"        assertEquals(LocalDateTime.of(2020, 10, 28, 10, 0)"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"            , output.getDate());"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"enhao25"},"content":"    public void inputDeadlineTest(){"},{"lineNumber":23,"author":{"gitId":"enhao25"},"content":"        StringDatePair output \u003d new Parser().parse("},{"lineNumber":24,"author":{"gitId":"enhao25"},"content":"            \"deadline return book /by 2020-03-10 1800\","},{"lineNumber":25,"author":{"gitId":"enhao25"},"content":"            Parser.commandType.INPUT_DEADLINE"},{"lineNumber":26,"author":{"gitId":"enhao25"},"content":"        );"},{"lineNumber":27,"author":{"gitId":"enhao25"},"content":"        assertEquals(\"return book \", output.getString());"},{"lineNumber":28,"author":{"gitId":"enhao25"},"content":"        assertEquals(LocalDateTime.of(2020, 3, 10, 18, 0)"},{"lineNumber":29,"author":{"gitId":"enhao25"},"content":"            , output.getDate());"},{"lineNumber":30,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":31}},{"path":"src/main/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"import Duke.Task;"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":"import Duke.TaskList;"},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"public class TaskListTest {"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"    public void addItemTest(){"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"        // Adding"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"        tasks.add(new Task(\"Sample task 1\"));"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"        tasks.add(new Task(\"Sample task 2\"));"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"        // Testing"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"        assertEquals(\"Sample task 1\", tasks.get(0).toString());"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"        assertEquals(\"Sample task 2\", tasks.get(1).toString());"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"        assertEquals(2, tasks.size());"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"}"}],"authorContributionMap":{"enhao25":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":"deadline return book /by 2020-03-10 1800"},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"event project meeting /at 2020-01-28 0800"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"event project meeting /at wrongdate"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":"todo buy item"},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"list"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"done 3"},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":"list"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"todo"},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":"blah"},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"list"},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":"delete 1"},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"list"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":"delete 3"},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"list"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"todo buy book"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"list"},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"find book"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"find test"},{"lineNumber":21,"author":{"gitId":"enhao25"},"content":"bye"}],"authorContributionMap":{"enhao25":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"javac  -cp ..\\src\\main\\java\\Duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"enhao25"},"content":"java -classpath ..\\bin Duke/Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"enhao25":2,"-":19}}]
