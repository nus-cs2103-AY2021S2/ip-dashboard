[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"# Oracle project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"1. After that, locate the `src/main/java/Oracle.java` file, right-click it, and choose `Run Oracle.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"nicholasnge":2,"-":21}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"public class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"    public Deadline(String description, String deadline) {"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":""},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"        String type \u003d \"[D]\";"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"        String doneStatus \u003d \"[\" + getStatusIcon() + \"]\";"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"        return type + doneStatus + \" \" + this.description + \"(\" + this.deadline + \")\";"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":""},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"    String deadline;"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"}"}],"authorContributionMap":{"nicholasnge":15}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"    public Event(String description, String time) {"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"        this.time \u003d time;"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":""},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"    public String getType(){"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"        return \"E\";"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":""},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"        String type \u003d \"[E]\";"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"        String doneStatus \u003d \"[\" + getStatusIcon() + \"]\";"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"        return type + doneStatus + \" \" + this.description + \"(\" + this.time + \")\";"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":""},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"    String time;"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"}"}],"authorContributionMap":{"nicholasnge":19}},{"path":"src/main/java/Oracle.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":""},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"public class Oracle {"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"    private static ArrayList\u003cTask\u003e db \u003d new ArrayList\u003c\u003e();"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"        String logo \u003d"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"                \"              $$$@@@@@@@\\n\""},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"                + \"         ##########$$$$$$@@$\\n\""},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"                + \"       #**!!!!!!!!**####$$$$$$#\\n\""},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"                + \"     **!!\u003d\u003d!\u003d;;\u003d;;!!!**###$$$$$$#\\n\""},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"                + \"    **!!\u003d\u003d;::~~::;;;;\u003d!!*####$$$$##\\n\""},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"                + \"   !!!!\u003d;::~-,,,,--:;;\u003d!!**########*\\n\""},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"                + \"  !!!!\u003d;:~,........-~:\u003d\u003d!!**#######**\\n\""},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"                + \" \u003d!*!!\u003d;:~,.........-:;\u003d!!***######**\\n\""},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":"                + \" !***!!\u003d:~,...     .-:;\u003d!!****####***\u003d\\n\""},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"                + \" !*###**\u003d;\u003d..       -:;\u003d!!**********!\u003d\\n\""},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"                + \":!*###$##*\u003d:       -:;\u003d!!!********!!!\u003d\\n\""},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":"                + \":!##$$$$$$#*~     :;\u003d\u003d\u003d!!*********!!\u003d;\\n\""},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"                + \"~\u003d*#$$@@@@$$#*! \u003d\u003d\u003d\u003d!!!!!*****!!*!!\u003d\u003d\\n\""},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"                + \" ;!*#$$@@@$$##**!!!!!!!!!!*!*!!!!!\u003d\u003d:\\n\""},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"                + \" :;!*#$$$$$$###******!!!!!!!!!!!\u003d\u003d;:\\n\""},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"                + \"  ;!\u003d!*#######******!!!!!!!!!\u003d\u003d\u003d;;:,\\n\""},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"                + \"   :;\u003d\u003d!!********!!!!!!!!\u003d\u003d\u003d\u003d;;;:~\\n\""},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"                + \"    -:;!\u003d\u003d\u003d\u003d!\u003d!!!!!!!\u003d\u003d\u003d\u003d\u003d\u003d;;::~,\\n\""},{"lineNumber":26,"author":{"gitId":"nicholasnge"},"content":"                + \"      -~:;\u003d\u003d\u003d;\u003d\u003d\u003d\u003d\u003d\u003d;\u003d;;;:::~-,\\n\""},{"lineNumber":27,"author":{"gitId":"nicholasnge"},"content":"                + \"        .-~~::::;:::::~:~--.\\n\";"},{"lineNumber":28,"author":{"gitId":"nicholasnge"},"content":"        System.out.println(logo + \"\\nGreetings Neo, what can the Oracle do for you?\");"},{"lineNumber":29,"author":{"gitId":"nicholasnge"},"content":""},{"lineNumber":30,"author":{"gitId":"nicholasnge"},"content":"        Scanner S \u003d new Scanner(System.in);"},{"lineNumber":31,"author":{"gitId":"nicholasnge"},"content":"        while(true) {"},{"lineNumber":32,"author":{"gitId":"nicholasnge"},"content":"            String input \u003d S.nextLine();  // Read user input"},{"lineNumber":33,"author":{"gitId":"nicholasnge"},"content":"            String[] split \u003d input.split(\" \", 2); // Split user input"},{"lineNumber":34,"author":{"gitId":"nicholasnge"},"content":"            if (input.equals(\"bye\")){"},{"lineNumber":35,"author":{"gitId":"nicholasnge"},"content":"                System.out.println(\"Very well, we shall meet again\");"},{"lineNumber":36,"author":{"gitId":"nicholasnge"},"content":"                break;"},{"lineNumber":37,"author":{"gitId":"nicholasnge"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"nicholasnge"},"content":"            else if (input.equals(\"list\")){"},{"lineNumber":39,"author":{"gitId":"nicholasnge"},"content":"                System.out.println(\"You have forgotten quickly, but the Oracle Remembers\");"},{"lineNumber":40,"author":{"gitId":"nicholasnge"},"content":"                for (int i \u003d 0; i\u003c db.size(); i++){"},{"lineNumber":41,"author":{"gitId":"nicholasnge"},"content":"                    System.out.println((i+1) + \". \" + db.get(i));"},{"lineNumber":42,"author":{"gitId":"nicholasnge"},"content":"                }"},{"lineNumber":43,"author":{"gitId":"nicholasnge"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"nicholasnge"},"content":"            else if (split[0].equals(\"done\") \u0026\u0026 split.length \u003e 1){"},{"lineNumber":45,"author":{"gitId":"nicholasnge"},"content":"                int i \u003d Integer.parseInt(split[1]) - 1;"},{"lineNumber":46,"author":{"gitId":"nicholasnge"},"content":"                try {"},{"lineNumber":47,"author":{"gitId":"nicholasnge"},"content":"                    db.get(i).markDone();"},{"lineNumber":48,"author":{"gitId":"nicholasnge"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":49,"author":{"gitId":"nicholasnge"},"content":"                    System.out.println(\"The Oracle cannot work with an invalid index\");"},{"lineNumber":50,"author":{"gitId":"nicholasnge"},"content":"                    continue;"},{"lineNumber":51,"author":{"gitId":"nicholasnge"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"nicholasnge"},"content":"                System.out.println((i+1) + \". \" + db.get(i));"},{"lineNumber":53,"author":{"gitId":"nicholasnge"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"nicholasnge"},"content":"            else if (split[0].equals(\"todo\") \u0026\u0026 split.length \u003e 1){"},{"lineNumber":55,"author":{"gitId":"nicholasnge"},"content":"                db.add(new Todo(split[1]));"},{"lineNumber":56,"author":{"gitId":"nicholasnge"},"content":"                System.out.println(db.size() + \". \" + db.get(db.size()-1));"},{"lineNumber":57,"author":{"gitId":"nicholasnge"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"nicholasnge"},"content":"            else if (split[0].equals(\"event\") \u0026\u0026 split.length \u003e 1){"},{"lineNumber":59,"author":{"gitId":"nicholasnge"},"content":"                String[] params \u003d split[1].split(\"/\", 2);"},{"lineNumber":60,"author":{"gitId":"nicholasnge"},"content":"                db.add(new Event(params[0], params[1]));"},{"lineNumber":61,"author":{"gitId":"nicholasnge"},"content":"                System.out.println(db.size() + \". \" + db.get(db.size()-1));"},{"lineNumber":62,"author":{"gitId":"nicholasnge"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"nicholasnge"},"content":"            else if (split[0].equals(\"deadline\") \u0026\u0026 split.length \u003e 1){"},{"lineNumber":64,"author":{"gitId":"nicholasnge"},"content":"                String[] params \u003d split[1].split(\"/\", 2);"},{"lineNumber":65,"author":{"gitId":"nicholasnge"},"content":"                db.add(new Deadline(params[0], params[1]));"},{"lineNumber":66,"author":{"gitId":"nicholasnge"},"content":"                System.out.println(db.size() + \". \" + db.get(db.size()-1));"},{"lineNumber":67,"author":{"gitId":"nicholasnge"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"nicholasnge"},"content":"            else {"},{"lineNumber":69,"author":{"gitId":"nicholasnge"},"content":"                System.out.println(\"Your words are unclear, Neo\");"},{"lineNumber":70,"author":{"gitId":"nicholasnge"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"nicholasnge"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"nicholasnge"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"nicholasnge"},"content":"}"}],"authorContributionMap":{"nicholasnge":73}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":""},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":""},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"    public Task(String description) {"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":"        this.description \u003d description;"},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"        this.isDone \u003d false;"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":""},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"    protected String getStatusIcon() {"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"        return (isDone ? \"\\u2718\" : \" \"); //return tick or X symbols"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":""},{"lineNumber":13,"author":{"gitId":"nicholasnge"},"content":"    public void markDone() {"},{"lineNumber":14,"author":{"gitId":"nicholasnge"},"content":"        this.isDone \u003d !this.isDone;"},{"lineNumber":15,"author":{"gitId":"nicholasnge"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"nicholasnge"},"content":""},{"lineNumber":17,"author":{"gitId":"nicholasnge"},"content":"    String description;"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"    boolean isDone;"},{"lineNumber":19,"author":{"gitId":"nicholasnge"},"content":""},{"lineNumber":20,"author":{"gitId":"nicholasnge"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"nicholasnge"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"nicholasnge"},"content":"        String doneStatus \u003d \"[\" + getStatusIcon() + \"]\";"},{"lineNumber":23,"author":{"gitId":"nicholasnge"},"content":"        return doneStatus + \" \" + this.description;"},{"lineNumber":24,"author":{"gitId":"nicholasnge"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"nicholasnge"},"content":"}"}],"authorContributionMap":{"nicholasnge":25}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasnge"},"content":"public class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"nicholasnge"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"nicholasnge"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"nicholasnge"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"nicholasnge"},"content":""},{"lineNumber":6,"author":{"gitId":"nicholasnge"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"nicholasnge"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"nicholasnge"},"content":"        String type \u003d \"[T]\";"},{"lineNumber":9,"author":{"gitId":"nicholasnge"},"content":"        String doneStatus \u003d \"[\" + getStatusIcon() + \"]\";"},{"lineNumber":10,"author":{"gitId":"nicholasnge"},"content":"        return type + doneStatus + \" \" + this.description;"},{"lineNumber":11,"author":{"gitId":"nicholasnge"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nicholasnge"},"content":"}"}],"authorContributionMap":{"nicholasnge":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"nicholasnge"},"content":"java -classpath ..\\bin Oracle \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"nicholasnge":1,"-":20}}]
