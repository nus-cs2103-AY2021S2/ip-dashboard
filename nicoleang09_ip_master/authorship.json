[{"path":"DukeList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"[T][ ] read book"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"[D][X] return book (by: 2021-06-06)"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"[T][X] join sports club"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"[D][ ] return book (by: 2021-12-31)"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"[E][ ] project meeting (on: 2021-08-12, 14:00 - 16:00)"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"[E][ ] project meeting (on: 2021-08-08, 19:00 - 21:00)"}],"authorContributionMap":{"nicoleang09":6}},{"path":"runtest2.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"javac -d bin src\\main\\java\\*.java"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"if exist text-ui-test\\ACTUAL.txt del text-ui-test\\ACTUAL.txt"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"java -classpath bin Duke \u003c text-ui-test\\input.txt \u003e text-ui-test\\ACTUAL.txt"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"FC text-ui-test\\ACTUAL.TXT text-ui-test\\EXPECTED.TXT"}],"authorContributionMap":{"nicoleang09":7}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import duke.task.TaskManager;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"    protected static ArrayList\u003cTask\u003e tasks;"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"    public static final String LINE \u003d (char) 9 + \"--------------------------------------------------------------------\";"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"     * Takes user inputted tasks and passes them to the TaskManager."},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"     * @param args  Java command line inputs."},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"        System.out.println(\"Hello! How can I help you?\");"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"        tasks  \u003d new ArrayList\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"        while (scanner.hasNext()) {"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"            String input \u003d scanner.nextLine();"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"            TaskManager taskManager \u003d new TaskManager();"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"            if (input.equals(\"bye\")) {"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"                System.out.println(LINE + \"\\n\" + (char) 9 + (char) 9 + \"Bye! See you soon :)\\n\" + LINE);"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"                scanner.close();"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"                break;"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"            } else {"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"                taskManager.takeEvent(input, tasks);"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nicoleang09":35,"-":10}},{"path":"src/main/java/duke/datetime/DateTimeConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.datetime;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"public class DateTimeConverter {"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"    protected String[] inputSplit;"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new DateTimeConverter object to convert date and time Strings to LocalDate and LocalTime."},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"     * @param inputSplit  String input that has been split into description, date, from time and to time."},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    public DateTimeConverter(String[] inputSplit) {"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"        this.inputSplit \u003d inputSplit;"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"     * Returns LocalDate object converted from user inputted date String of format dd-MM-yyyy."},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"     * @return LocalDate created from inputted date."},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    public LocalDate convertDate() {"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"        String date \u003d inputSplit[1].substring(3);"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"        if (date.length() \u003e 10) {"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"            date \u003d date.substring(0, date.length() - 1);"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"        LocalDate formattedDate \u003d LocalDate.parse(date, formatter);"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"        return formattedDate;"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"     * Returns LocalTime object converted from user inputted time of format h AM/PM."},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"     * @param s  Type of time, start (indicated by \"from\") or end (indicated by \"to\") time."},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"     * @return LocalTime created from input time."},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"    public LocalTime convertTime(String s) {"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h a\");"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"        if (s.equals(\"from\")) {"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"            String from \u003d inputSplit[2].substring(5, inputSplit[2].length() - 1).toUpperCase();"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"            LocalTime formattedFrom \u003d LocalTime.parse(from, timeFormatter);"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"            return formattedFrom;"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"            String to \u003d inputSplit[3].substring(3).toUpperCase();"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"            LocalTime formattedTo \u003d LocalTime.parse(to, timeFormatter);"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"            return formattedTo;"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":56}},{"path":"src/main/java/duke/error/ErrorChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import duke.datetime.DateTimeConverter;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"public class ErrorChecker {"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"    protected String input;"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"    protected ArrayList\u003cTask\u003e tasks;"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new ErrorChecker object used for checking errors in user input."},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"     * @param input  User input."},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"     * @param tasks Task list."},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"    public ErrorChecker(String input, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"        this.input \u003d input;"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"     * Checks whether the input is valid and formatted correctly."},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"     * If input is invalid, user will be prompted to re-enter valid input in correct format."},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"     * @return True is input is valid and formatted correctly, and false otherwise."},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    public boolean isValid() {"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"        String taskType \u003d \"\";"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"        if (!input.startsWith(\"done\") \u0026\u0026 !input.startsWith(\"delete\") \u0026\u0026 !input.startsWith(\"find\")"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"                \u0026\u0026 !input.startsWith(\"todo\") \u0026\u0026 !input.startsWith(\"deadline\") \u0026\u0026 !input.startsWith(\"event\")) {"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"            System.out.println(Duke.LINE + \"\\n\" + (char) 9 + (char) 9 + new IllegalInputException(\"\").toString()"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"                    + \"\\n\" + Duke.LINE);"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"            return false;"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"            if (input.startsWith(\"done\")) {"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"                taskType \u003d \"done\";"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"                input.substring(6);"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"                String taskToMark \u003d input.substring(5);"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"                int taskToMarkInt \u003d Integer.parseInt(taskToMark);"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"                tasks.get(taskToMarkInt - 1);"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"            } else if (input.startsWith(\"delete\")) {"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"                taskType \u003d \"delete\";"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"                input.substring(8);"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"                String taskToDelete \u003d input.substring(7);"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"                int taskToDeleteInt \u003d Integer.parseInt(taskToDelete);"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"                tasks.get(taskToDeleteInt - 1);"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"            } else if (input.startsWith(\"find\")) {"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"                input.substring(6);"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"            } else if (input.startsWith(\"todo\")) {"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"                taskType \u003d \"todo\";"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"                input.substring(6);"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"            } else if (input.startsWith(\"deadline\")) {"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"                taskType \u003d \"deadline\";"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"                input.substring(10);"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"                String[] inputSplit \u003d input.split(\"/\");"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"                DateTimeConverter dateTimeConverter \u003d new DateTimeConverter(inputSplit);"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"                dateTimeConverter.convertDate();"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"            } else if (input.startsWith(\"event\")) {"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"                taskType \u003d \"event\";"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"                input.substring(7);"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"                String[] inputSplit \u003d input.split(\"/\");"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"                DateTimeConverter dateTimeConverter \u003d new DateTimeConverter(inputSplit);"},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"                dateTimeConverter.convertDate();"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"                dateTimeConverter.convertTime(\"from\");"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":"                dateTimeConverter.convertTime(\"to\");"},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"        } catch (StringIndexOutOfBoundsException ex) {"},{"lineNumber":77,"author":{"gitId":"nicoleang09"},"content":"            if (input.startsWith(\"done\") || input.startsWith(\"delete\")) {"},{"lineNumber":78,"author":{"gitId":"nicoleang09"},"content":"                System.out.println(Duke.LINE + \"\\n\" + (char) 9 + (char) 9"},{"lineNumber":79,"author":{"gitId":"nicoleang09"},"content":"                        + new IllegalDoneDeleteException(ex.getMessage(), taskType).toString() + \"\\n\" + Duke.LINE);"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"                return false;"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"            } else if (input.startsWith(\"from\")) {"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"                System.out.println(Duke.LINE + \"\\n\" + (char) 9 + (char) 9"},{"lineNumber":83,"author":{"gitId":"nicoleang09"},"content":"                        + new IllegalFindException(ex.getMessage()).toString() + \"\\n\" + Duke.LINE);"},{"lineNumber":84,"author":{"gitId":"nicoleang09"},"content":"            } else {"},{"lineNumber":85,"author":{"gitId":"nicoleang09"},"content":"                System.out.println(Duke.LINE + \"\\n\" + (char) 9 + (char) 9"},{"lineNumber":86,"author":{"gitId":"nicoleang09"},"content":"                        + new IllegalTaskException(ex.getMessage(), taskType).toString() + \"\\n\" +  Duke.LINE);"},{"lineNumber":87,"author":{"gitId":"nicoleang09"},"content":"                return false;"},{"lineNumber":88,"author":{"gitId":"nicoleang09"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"nicoleang09"},"content":"        } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":90,"author":{"gitId":"nicoleang09"},"content":"            System.out.println(Duke.LINE + \"\\n\" + (char) 9 + (char) 9"},{"lineNumber":91,"author":{"gitId":"nicoleang09"},"content":"                    + new OutOfBoundsDoneDeleteException(ex.getMessage()).toString() + \"\\n\" +  Duke.LINE);"},{"lineNumber":92,"author":{"gitId":"nicoleang09"},"content":"            return false;"},{"lineNumber":93,"author":{"gitId":"nicoleang09"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":94,"author":{"gitId":"nicoleang09"},"content":"            if (input.startsWith(\"deadline\")) {"},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"                System.out.println(Duke.LINE + \"\\n\" + (char) 9 + (char) 9"},{"lineNumber":96,"author":{"gitId":"nicoleang09"},"content":"                        + \"Oops, I don\u0027t understand that date format!\\n\" + (char) 9 + (char) 9"},{"lineNumber":97,"author":{"gitId":"nicoleang09"},"content":"                        + \"Please re-enter with the format DD-MM-YYYY!\\n\" + Duke.LINE);"},{"lineNumber":98,"author":{"gitId":"nicoleang09"},"content":"            } else {"},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":"                System.out.println(Duke.LINE + \"\\n\" + (char) 9 + (char) 9"},{"lineNumber":100,"author":{"gitId":"nicoleang09"},"content":"                        + \"Oops, I don\u0027t understand that date format!\\n\"  + (char) 9 + (char) 9"},{"lineNumber":101,"author":{"gitId":"nicoleang09"},"content":"                        + \"Please re-enter with the format DD-MM-YYYY /from H AM/PM /to H AM/PM!\\n\" + Duke.LINE);"},{"lineNumber":102,"author":{"gitId":"nicoleang09"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"nicoleang09"},"content":"            return false;"},{"lineNumber":104,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":106,"author":{"gitId":"nicoleang09"},"content":"        return true;"},{"lineNumber":107,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":108}},{"path":"src/main/java/duke/error/IllegalDoneDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"public class IllegalDoneDeleteException extends StringIndexOutOfBoundsException {"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"    protected String taskType;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new IllegalDoneDeleteException."},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"     * @param message  Exception message."},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"     * @param taskType Type of the task, either \"done\" or \"delete\"."},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"    IllegalDoneDeleteException(String message, String taskType) {"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"        super(message);"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"     * Returns error message telling user that they did not enter the task number and to re-enter the input."},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"     * @return Error message."},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"        if (taskType.equals(\"done\")) {"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"            return \"You forgot to enter the task to mark as done!\\n\" + (char) 9 + (char) 9 + \"Please re-enter!\";"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"        } else {"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"            return \"You forgot to enter the task to delete!\\n\" + (char) 9 + (char) 9 + \"Please re-enter!\";"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":30}},{"path":"src/main/java/duke/error/IllegalFindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"public class IllegalFindException extends StringIndexOutOfBoundsException {"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new IllegalFindException."},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"     * @param message  Exception message."},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    public IllegalFindException(String message) {"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"        super(message);"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"     * Returns error message telling user that they did not enter the search keyword and to re-enter the input."},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"     * @return Error message."},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"        return \"You forgot to enter the keyword to search for!\\n\""},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"                + (char) 9 + (char) 9 + \"Please re-enter!\";"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":23}},{"path":"src/main/java/duke/error/IllegalInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"public class IllegalInputException extends IllegalArgumentException {"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new IllegalInputException."},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"     * @param message  Exception message."},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    IllegalInputException(String message) {"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"        super(message);"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"     * Returns error message telling user that they entered an invalid input and to re-enter the input."},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"     * @return Error message."},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"        return \"I don\u0027t understand what you just entered \u003e.\u003c\\n\" + (char) 9 + (char) 9 + \"Please re-enter!\";"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":22}},{"path":"src/main/java/duke/error/IllegalTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"public class IllegalTaskException extends StringIndexOutOfBoundsException {"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"    protected String taskType;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new IllegalTaskException."},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"     * @param message  Exception message."},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"     * @param taskType Type of the task, either \"todo\", \"deadline\" or \"event\"."},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"    public IllegalTaskException(String message, String taskType) {"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"        super(message);"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"     * Returns error message telling user that they did not enter the task description and to re-enter the input."},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"     * @return Error message."},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"        return \"You forgot to enter the description of the \" + taskType + \"!\\n\""},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"                + (char) 9 + (char) 9 + \"Please re-enter!\";"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":27}},{"path":"src/main/java/duke/error/OutOfBoundsDoneDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"public class OutOfBoundsDoneDeleteException extends IndexOutOfBoundsException {"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new OutOfBoundsDoneDeleteException."},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"     * @param message  Exception message."},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    OutOfBoundsDoneDeleteException(String message) {"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"        super(message);"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"     * Returns error message telling user that the task they entered is not on the list and to re-enter the input."},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"     * @return Error message."},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"        return \"The task you entered does not exist!\\n\" + (char) 9 + (char) 9 + \"Please re-enter!\";"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":22}},{"path":"src/main/java/duke/file/FileSaver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.file;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"public class FileSaver {"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"    FileWriter fw;"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"    public FileSaver() {"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    public void saveToFile(String filePath, ArrayList\u003cTask\u003e list) throws IOException {"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"        File fileCreator \u003d new File(filePath);"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"//        System.out.println(fileCreator.getAbsolutePath());"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"        if (!fileCreator.createNewFile()) {"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"            fileCreator.delete();"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"            fileCreator.createNewFile();"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"            fw \u003d new FileWriter(filePath);"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"            for (Task t : list) {"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"                fw.write(t.toString() + \"\\n\");"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"            fw.close();"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":33}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"//    protected String by;"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"    protected LocalDate by;"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"//    public DeadlineTask(String description, String by) {"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"//        super(description);"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"//        this.by \u003d by;"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"//    }"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"    public DeadlineTask(String description, LocalDate by) {"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"        this.by \u003d by;"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":23}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"public class EventTask extends Task {"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"//    protected String at;"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"    protected LocalDate on;"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    protected LocalTime from;"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"    protected LocalTime to;"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"//    public EventTask(String description, String at) {"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"//        super(description);"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"//        this.at \u003d at;"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"//    }"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    public EventTask(String description, LocalDate on, LocalTime from, LocalTime to) {"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"        this.on \u003d on;"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"        this.from \u003d from;"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"        this.to \u003d to;"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"        return \"[E]\" + super.toString() + \" (on: \" + on + \", \" + from + \" - \" + to + \")\";"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":28}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"//            return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"        return (isDone ? \"X\" : \" \"); //return tick or X symbols"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    public void markAsDone() {"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"        isDone \u003d true;"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":25}},{"path":"src/main/java/duke/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import duke.datetime.DateTimeConverter;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import duke.error.ErrorChecker;"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import duke.file.FileSaver;"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"public class TaskManager {"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"    protected ArrayList\u003cTask\u003e tasks;"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"    protected FileSaver fileSaver;"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    public TaskManager() {"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"        fileSaver \u003d new FileSaver();"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"    public void takeEvent(String input, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"        ErrorChecker e \u003d new ErrorChecker(input, tasks);"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"        if (input.equals(\"list\")) {"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"            listEvents();"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"            return;"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"        } else if (e.isValid()) {"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"            if (input.startsWith(\"done\")) {"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"                markDone(input);"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"            } else if (input.startsWith(\"delete\")) {"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"                deleteTask(input);"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"            } else if (input.startsWith(\"find\")) {"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"                findTasks(input);"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"            } else {"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"                addNewTask(input);"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"    public void markDone(String input) {"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"        Task task \u003d tasks.get(Integer.parseInt(input.substring(5)) - 1);"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"        task.markAsDone();"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"        System.out.println(Duke.LINE + \"\\n\" + (char) 9 + (char) 9 + \"Good job! You got \" + task.description"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"                + \" done!\\n\" + Duke.LINE);"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"    public void addNewTask(String input) {"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"        Task newTask;"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"        if (input.startsWith(\"todo\")) {"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"            newTask \u003d new TodoTask(input.substring(5));"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"        } else if (input.startsWith(\"deadline\")) {"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"            String[] inputSplit \u003d input.split(\"/\");"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"            DateTimeConverter dateTimeConverter \u003d new DateTimeConverter(inputSplit);"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"            newTask \u003d new DeadlineTask(inputSplit[0].substring(9, inputSplit[0].length() - 1),"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"                    dateTimeConverter.convertDate());"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"        } else {"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"            String[] inputSplit \u003d input.split(\"/\");"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"            DateTimeConverter dateTimeConverter \u003d new DateTimeConverter(inputSplit);"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"            newTask \u003d new EventTask(inputSplit[0].substring(6, inputSplit[0].length() - 1),"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"                    dateTimeConverter.convertDate(), dateTimeConverter.convertTime(\"from\"),"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"                    dateTimeConverter.convertTime(\"to\"));"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"        tasks.add(newTask);"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"            fileSaver.saveToFile(\"DukeList.txt\", tasks);"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"        } catch (IOException ex) {"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"            System.out.println(\"File path not found: \" + ex.getMessage());"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"        System.out.println(Duke.LINE + \"\\n\" + (char) 9 + (char) 9 + \"Added: \" + newTask.toString() + \"\\n\" + Duke.LINE);"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"    public void deleteTask(String input) {"},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"        Task task \u003d tasks.get(Integer.parseInt(input.substring(7)) - 1);"},{"lineNumber":77,"author":{"gitId":"nicoleang09"},"content":"        tasks.remove(Integer.parseInt(input.substring(7)) - 1);"},{"lineNumber":78,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":79,"author":{"gitId":"nicoleang09"},"content":"        try {"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"            fileSaver.saveToFile(\"DukeList.txt\", tasks);"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"        } catch (IOException ex) {"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"            System.out.println(\"File path not found: \" + ex.getMessage());"},{"lineNumber":83,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":85,"author":{"gitId":"nicoleang09"},"content":"        System.out.println(Duke.LINE + \"\\n\" + (char) 9 + (char) 9 + \"Deleted: \" + task.toString() + \"\\n\" + Duke.LINE);"},{"lineNumber":86,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":88,"author":{"gitId":"nicoleang09"},"content":"    public void findTasks(String input) {"},{"lineNumber":89,"author":{"gitId":"nicoleang09"},"content":"        String description \u003d input.substring(5);"},{"lineNumber":90,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":91,"author":{"gitId":"nicoleang09"},"content":"        System.out.println(Duke.LINE + \"\\n\" + (char) 9 + (char) 9 + \"Here is a list of your tasks:\");"},{"lineNumber":92,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":93,"author":{"gitId":"nicoleang09"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":94,"author":{"gitId":"nicoleang09"},"content":"            if (tasks.get(i).description.contains(description)) {"},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"                System.out.println(\"\" + (char) 9 + (char) 9 + (char) 9 + (i + 1) + \". \" + tasks.get(i).toString());"},{"lineNumber":96,"author":{"gitId":"nicoleang09"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":"        System.out.println(Duke.LINE);"},{"lineNumber":100,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":102,"author":{"gitId":"nicoleang09"},"content":"    public void listEvents() {"},{"lineNumber":103,"author":{"gitId":"nicoleang09"},"content":"        System.out.println(Duke.LINE + \"\\n\" + (char) 9 + (char) 9 + \"Here is a list of your tasks:\");"},{"lineNumber":104,"author":{"gitId":"nicoleang09"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":105,"author":{"gitId":"nicoleang09"},"content":"            System.out.println(\"\" + (char) 9 + (char) 9 + (char) 9 + (i + 1) + \". \" + tasks.get(i).toString());"},{"lineNumber":106,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"nicoleang09"},"content":"        System.out.println(Duke.LINE);"},{"lineNumber":108,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":109}},{"path":"src/main/java/duke/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"public class TodoTask extends Task {"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"    public TodoTask(String description) {"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":12}},{"path":"tests/DateTimeConverterTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"import duke.datetime.DateTimeConverter;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"import org.junit.Assert;"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"public class DateTimeConverterTest {"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"    void testDateConversion() {"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"        String input \u003d \"deadline return book /by 06-06-2021\";"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"        String[] inputSplit \u003d input.split(\"/\");"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"        DateTimeConverter dTC \u003d new DateTimeConverter(inputSplit);"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"        Assert.assertEquals(\"2021-06-06\", dTC.convertDate().toString());"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    void testTimeConversion() {"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"        String input \u003d \"deadline cs2103t lecture /on 29-01-2021 /from 2 pm /to 4 Pm\";"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"        String[] inputSplit \u003d input.split(\"/\");"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"        DateTimeConverter dTC \u003d new DateTimeConverter(inputSplit);"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"        Assert.assertEquals(\"14:00\", dTC.convertTime(\"from\").toString());"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"        Assert.assertEquals(\"16:00\", dTC.convertTime(\"to\").toString());"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":24}},{"path":"tests/ErrorCheckerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"import duke.error.ErrorChecker;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import org.junit.Assert;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"public class ErrorCheckerTest {"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"    void testToDo_missingTodoTask_exceptionThrown() {"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"        ErrorChecker errorChecker \u003d new ErrorChecker(\"todo \", new ArrayList\u003c\u003e());"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"        boolean hasNoError \u003d errorChecker.isValid();"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"        Assert.assertEquals(false, hasNoError);"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    void testDeadline_missingDeadlineTask_exceptionThrown() {"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"        ErrorChecker errorChecker \u003d new ErrorChecker(\"deadline \", new ArrayList\u003c\u003e());"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"        boolean hasNoError \u003d errorChecker.isValid();"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"        Assert.assertEquals(false, hasNoError);"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"    void testDeadline_missingEventTask_exceptionThrown() {"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"        ErrorChecker errorChecker \u003d new ErrorChecker(\"event \", new ArrayList\u003c\u003e());"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"        boolean hasNoError \u003d errorChecker.isValid();"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"        Assert.assertEquals(false, hasNoError);"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":32}},{"path":"text-ui-test/DukeList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"[T][ ] read book"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"[D][X] return book (by: June 6th)"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"[T][X] join sports club"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"[D][ ] return book (by: Sunday)"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"[E][ ] project meeting (at: Mon 2-4pm)"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"[E][ ] project meeting (at: Aug 8th 7-9pm)"}],"authorContributionMap":{"nicoleang09":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"deadline return book /by 06-06-2021"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"event project meeting /on Aug 6th 2-4pm"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"event project meeting /on 06-08-2021 /from 2 pm /to 4 pm"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"todo join sports club"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"todo borrow book"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"deadline return book /by Sunday"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"deadline return book /by 31-12-2021"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"event project meeting /on 12-08-2021 /from 2 PM /to 4 PM"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"list"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"delete 3"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"event project meeting /on 08-08-2021 /from 7 pM /to 9 Pm"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"delete 4"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"list"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"todo"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"todo "},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"deadline"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"deadline "},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"event"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"event "},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"done"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"done "},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"done 8"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"delete"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"delete "},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"delete 7"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"random"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"non a valid action"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"bye"}],"authorContributionMap":{"nicoleang09":32}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":3,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":4,"author":{"gitId":"-"},"content":"then"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":6,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":9,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":10,"author":{"gitId":"-"},"content":"then"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":12,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":15,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":16,"author":{"gitId":"-"},"content":"then"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":19,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":22,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":25,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":26,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":29,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":30,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":31,"author":{"gitId":"-"},"content":"then"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":34,"author":{"gitId":"-"},"content":"else"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"then"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"nicoleang09":1,"-":37}}]
