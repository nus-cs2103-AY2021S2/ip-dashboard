[{"path":"DukeList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"[E][ ] project meeting (on: 2021-08-12, 14:00 - 16:00)"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"[T][ ] read book"}],"authorContributionMap":{"nicoleang09":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"    implementation \u0027junit:junit:4.13\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nicoleang09":16,"-":46}},{"path":"runtest2.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"javac -d bin src\\main\\java\\*.java"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"if exist text-ui-test\\ACTUAL.txt del text-ui-test\\ACTUAL.txt"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"java -classpath bin Duke \u003c text-ui-test\\input.txt \u003e text-ui-test\\ACTUAL.txt"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"FC text-ui-test\\ACTUAL.TXT text-ui-test\\EXPECTED.TXT"}],"authorContributionMap":{"nicoleang09":7}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"//import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import duke.task.TaskManager;"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import javafx.application.Application;"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":" * Duke takes and handles inputs from the user."},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":" *"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":" * @author  Nicole Ang"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"public class Duke extends Application {"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    // public static final String LINE \u003d (char) 9"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    //        + \"--------------------------------------------------------------------\";"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"    protected static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    public void start(Stage stage) {"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"        // Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"        // Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"        // stage.setScene(scene); // Setting the stage to show our screen"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"        // stage.show(); // Render the stage."},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"     * Takes user inputted tasks and passes them to the TaskManager."},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"     * @param input Input taken in through GUI."},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"    public String getResponse(String input) {"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"        TaskManager taskManager \u003d new TaskManager();"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"        return taskManager.takeEvent(input, tasks);"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"     * Takes user inputted tasks and passes them to the TaskManager."},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"     * @param args  Java command line inputs."},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"        // String logo \u003d \" ____        _        \\n\""},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"        //        + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"        //        + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"        //        + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"        //        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"        // System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"        // System.out.println(\"Hello! How can I help you?\");"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"        // Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"        // tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"        // while (scanner.hasNext()) {"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"        //    String input \u003d scanner.nextLine();"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"        //    TaskManager taskManager \u003d new TaskManager();"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"        //    if (input.equals(\"bye\")) {"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"        //        System.out.println(LINE + \"\\n\" + (char) 9 + (char) 9 + \"Bye! See you soon :)\\n\" + LINE);"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"        //        scanner.close();"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"        //        break;"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"        //    } else {"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"        //        taskManager.takeEvent(input, tasks);"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"        //    }"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"        // }"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"        // return;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nicoleang09":70,"-":3}},{"path":"src/main/java/duke/datetime/DateTimeConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.datetime;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":" * Converter to convert date and time string inputs into LocalDateTime objects."},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":" *"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":" * @author  Nicole Ang"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"public class DateTimeConverter {"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"    protected String[] inputSplit;"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new DateTimeConverter object to convert date and time Strings to LocalDate and LocalTime."},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"     * @param inputSplit    String input that has been split into description, date, from time and to time."},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"    public DateTimeConverter(String[] inputSplit) {"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"        this.inputSplit \u003d inputSplit;"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"     * Returns LocalDate object converted from user inputted date String of format dd-MM-yyyy."},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"     * @return LocalDate created from inputted date."},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    public LocalDate convertDate() {"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"        String date \u003d inputSplit[1].substring(3);"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"        if (date.length() \u003e 10) {"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"            date \u003d date.substring(0, date.length() - 1);"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"        LocalDate formattedDate \u003d LocalDate.parse(date, formatter);"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"        return formattedDate;"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"     * Returns LocalTime object converted from user inputted time of format h AM/PM."},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"     * @param s Type of time, start (indicated by \"from\") or end (indicated by \"to\") time."},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"     * @return LocalTime created from input time."},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"    public LocalTime convertTime(String s) {"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h a\");"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"        if (s.equals(\"from\")) {"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"            String from \u003d inputSplit[2].substring(5, inputSplit[2].length() - 1).toUpperCase();"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"            LocalTime formattedFrom \u003d LocalTime.parse(from, timeFormatter);"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"            return formattedFrom;"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"            String to \u003d inputSplit[3].substring(3).toUpperCase();"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"            LocalTime formattedTo \u003d LocalTime.parse(to, timeFormatter);"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"            return formattedTo;"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":61}},{"path":"src/main/java/duke/error/ErrorChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import duke.datetime.DateTimeConverter;"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":" * Error checker to check for errors in user input."},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":" *"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":" * @author  Nicole Ang"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"public class ErrorChecker {"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    protected String input;"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    protected ArrayList\u003cTask\u003e tasks;"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    protected String errorMessage;"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"    private boolean isDone;"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"    private boolean isDelete;"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    private boolean isFind;"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    private boolean isTodo;"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    private boolean isDeadline;"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    private boolean isEvent;"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    private boolean isValidType;"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new ErrorChecker object used for checking errors in user input."},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"     * @param input User input."},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"     * @param tasks Task list."},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"    public ErrorChecker(String input, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"        this.input \u003d input;"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"        isDone \u003d input.startsWith(\"done\");"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"        isDelete \u003d input.startsWith(\"delete\");"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"        isFind \u003d input.startsWith(\"find\");"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"        isTodo \u003d input.startsWith(\"todo\");"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"        isDeadline \u003d input.startsWith(\"deadline\");"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"        isEvent \u003d input.startsWith(\"event\");"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"        isValidType \u003d isDone || isDelete || isFind || isTodo || isDeadline || isEvent;"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"     * Returns error message."},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"     * @return Error message string."},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"    public String getMessage() {"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"        return errorMessage;"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"     * Checks whether the input is valid and formatted correctly."},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"     * If input is invalid, user will be prompted to re-enter valid input in correct format."},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"     * @return True if input is valid and formatted correctly, and false otherwise."},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"    public boolean isValid() {"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"        String taskType \u003d \"\";"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"        // if (!input.equals(\"help\") \u0026\u0026 !input.startsWith(\"done\") \u0026\u0026 !input.startsWith(\"delete\")"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"        //        \u0026\u0026 !input.startsWith(\"find\") \u0026\u0026 !input.startsWith(\"todo\") \u0026\u0026 !input.startsWith(\"deadline\")"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"        //        \u0026\u0026 !input.startsWith(\"event\")) {"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"        //    errorMessage \u003d new IllegalInputException(\"\").toString();"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"        //    return false;"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"        // }"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"        if (!isValidType) {"},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"            errorMessage \u003d new IllegalInputException(\"\").toString();"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"            return false;"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"nicoleang09"},"content":"            if (isDone) {"},{"lineNumber":78,"author":{"gitId":"nicoleang09"},"content":"                taskType \u003d \"done\";"},{"lineNumber":79,"author":{"gitId":"nicoleang09"},"content":"                input.substring(6);"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"                String taskToMark \u003d input.substring(5);"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"                int taskToMarkInt \u003d Integer.parseInt(taskToMark);"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"                tasks.get(taskToMarkInt - 1);"},{"lineNumber":83,"author":{"gitId":"nicoleang09"},"content":"            } else if (isDelete) {"},{"lineNumber":84,"author":{"gitId":"nicoleang09"},"content":"                taskType \u003d \"delete\";"},{"lineNumber":85,"author":{"gitId":"nicoleang09"},"content":"                input.substring(8);"},{"lineNumber":86,"author":{"gitId":"nicoleang09"},"content":"                String taskToDelete \u003d input.substring(7);"},{"lineNumber":87,"author":{"gitId":"nicoleang09"},"content":"                int taskToDeleteInt \u003d Integer.parseInt(taskToDelete);"},{"lineNumber":88,"author":{"gitId":"nicoleang09"},"content":"                tasks.get(taskToDeleteInt - 1);"},{"lineNumber":89,"author":{"gitId":"nicoleang09"},"content":"            } else if (isFind) {"},{"lineNumber":90,"author":{"gitId":"nicoleang09"},"content":"                input.substring(6);"},{"lineNumber":91,"author":{"gitId":"nicoleang09"},"content":"            } else if (isTodo) {"},{"lineNumber":92,"author":{"gitId":"nicoleang09"},"content":"                taskType \u003d \"todo\";"},{"lineNumber":93,"author":{"gitId":"nicoleang09"},"content":"                input.substring(6);"},{"lineNumber":94,"author":{"gitId":"nicoleang09"},"content":"            } else if (isDeadline) {"},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"                taskType \u003d \"deadline\";"},{"lineNumber":96,"author":{"gitId":"nicoleang09"},"content":"                input.substring(10);"},{"lineNumber":97,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":98,"author":{"gitId":"nicoleang09"},"content":"                String[] inputSplit \u003d input.split(\"/\");"},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":100,"author":{"gitId":"nicoleang09"},"content":"                if (!inputSplit[1].startsWith(\"by\")) {"},{"lineNumber":101,"author":{"gitId":"nicoleang09"},"content":"                    throw new IllegalTaskException(\"\", \"deadline\");"},{"lineNumber":102,"author":{"gitId":"nicoleang09"},"content":"                }"},{"lineNumber":103,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":104,"author":{"gitId":"nicoleang09"},"content":"                DateTimeConverter dateTimeConverter \u003d new DateTimeConverter(inputSplit);"},{"lineNumber":105,"author":{"gitId":"nicoleang09"},"content":"                dateTimeConverter.convertDate();"},{"lineNumber":106,"author":{"gitId":"nicoleang09"},"content":"            } else if (isEvent) {"},{"lineNumber":107,"author":{"gitId":"nicoleang09"},"content":"                taskType \u003d \"event\";"},{"lineNumber":108,"author":{"gitId":"nicoleang09"},"content":"                input.substring(7);"},{"lineNumber":109,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":110,"author":{"gitId":"nicoleang09"},"content":"                String[] inputSplit \u003d input.split(\"/\");"},{"lineNumber":111,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":112,"author":{"gitId":"nicoleang09"},"content":"                if (!inputSplit[1].startsWith(\"on\")) {"},{"lineNumber":113,"author":{"gitId":"nicoleang09"},"content":"                    throw new IllegalTaskException(\"\", \"event\");"},{"lineNumber":114,"author":{"gitId":"nicoleang09"},"content":"                }"},{"lineNumber":115,"author":{"gitId":"nicoleang09"},"content":"                if (!inputSplit[2].startsWith(\"from\") || !inputSplit[3].startsWith(\"to\")) {"},{"lineNumber":116,"author":{"gitId":"nicoleang09"},"content":"                    throw new IllegalTaskException(\"\", \"event\");"},{"lineNumber":117,"author":{"gitId":"nicoleang09"},"content":"                }"},{"lineNumber":118,"author":{"gitId":"nicoleang09"},"content":"                DateTimeConverter dateTimeConverter \u003d new DateTimeConverter(inputSplit);"},{"lineNumber":119,"author":{"gitId":"nicoleang09"},"content":"                dateTimeConverter.convertDate();"},{"lineNumber":120,"author":{"gitId":"nicoleang09"},"content":"                dateTimeConverter.convertTime(\"from\");"},{"lineNumber":121,"author":{"gitId":"nicoleang09"},"content":"                dateTimeConverter.convertTime(\"to\");"},{"lineNumber":122,"author":{"gitId":"nicoleang09"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"nicoleang09"},"content":"        } catch (StringIndexOutOfBoundsException ex) {"},{"lineNumber":124,"author":{"gitId":"nicoleang09"},"content":"            if (isDone || isDelete) {"},{"lineNumber":125,"author":{"gitId":"nicoleang09"},"content":"                errorMessage \u003d new IllegalDoneDeleteException(ex.getMessage(), taskType).toString();"},{"lineNumber":126,"author":{"gitId":"nicoleang09"},"content":"                return false;"},{"lineNumber":127,"author":{"gitId":"nicoleang09"},"content":"            } else if (isFind) {"},{"lineNumber":128,"author":{"gitId":"nicoleang09"},"content":"                errorMessage \u003d new IllegalFindException(ex.getMessage()).toString();"},{"lineNumber":129,"author":{"gitId":"nicoleang09"},"content":"            } else {"},{"lineNumber":130,"author":{"gitId":"nicoleang09"},"content":"                errorMessage \u003d new IllegalTaskException(ex.getMessage(), taskType).toString();"},{"lineNumber":131,"author":{"gitId":"nicoleang09"},"content":"                return false;"},{"lineNumber":132,"author":{"gitId":"nicoleang09"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"nicoleang09"},"content":"        } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":134,"author":{"gitId":"nicoleang09"},"content":"            errorMessage \u003d new OutOfBoundsDoneDeleteException(ex.getMessage()).toString();"},{"lineNumber":135,"author":{"gitId":"nicoleang09"},"content":"            return false;"},{"lineNumber":136,"author":{"gitId":"nicoleang09"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":137,"author":{"gitId":"nicoleang09"},"content":"            if (isDeadline) {"},{"lineNumber":138,"author":{"gitId":"nicoleang09"},"content":"                errorMessage \u003d \"Oops, I don\u0027t understand that date format!\\n\""},{"lineNumber":139,"author":{"gitId":"nicoleang09"},"content":"                        + \"Please re-enter with the format DD-MM-YYYY!\";"},{"lineNumber":140,"author":{"gitId":"nicoleang09"},"content":"            } else {"},{"lineNumber":141,"author":{"gitId":"nicoleang09"},"content":"                errorMessage \u003d \"Oops, I don\u0027t understand that date format!\\n\""},{"lineNumber":142,"author":{"gitId":"nicoleang09"},"content":"                        + \"Please re-enter with the format DD-MM-YYYY /from H AM/PM /to H AM/PM!\";"},{"lineNumber":143,"author":{"gitId":"nicoleang09"},"content":"            }"},{"lineNumber":144,"author":{"gitId":"nicoleang09"},"content":"            return false;"},{"lineNumber":145,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":147,"author":{"gitId":"nicoleang09"},"content":"        return true;"},{"lineNumber":148,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":149}},{"path":"src/main/java/duke/error/IllegalDoneDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":" * Exception thrown when task to delete or mark as done is not specified."},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":" *"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":" * @author  Nicole Ang"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"public class IllegalDoneDeleteException extends StringIndexOutOfBoundsException {"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    protected String taskType;"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new IllegalDoneDeleteException."},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"     * @param message  Exception message."},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"     * @param taskType Type of the task, either \"done\" or \"delete\"."},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    IllegalDoneDeleteException(String message, String taskType) {"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"        super(message);"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"     * Returns error message telling user that they did not enter the task number and to re-enter the input."},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"     * @return Error message."},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"        if (taskType.equals(\"done\")) {"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"            return \"You forgot to enter the task to mark as done!\\n\" + \"Please re-enter!\";"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"            return \"You forgot to enter the task to delete!\\n\" + \"Please re-enter!\";"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":35}},{"path":"src/main/java/duke/error/IllegalFindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":" * Exception thrown when \u0027find\u0027 input is incorrectly formatted."},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":" *"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":" * @author  Nicole Ang"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"public class IllegalFindException extends StringIndexOutOfBoundsException {"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new IllegalFindException."},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"     * @param message  Exception message."},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"    public IllegalFindException(String message) {"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"        super(message);"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"     * Returns error message telling user that they did not enter the search keyword and to re-enter the input."},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"     * @return Error message."},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"        return \"You forgot to enter the keyword to search for!\\n\" + \"Please re-enter!\";"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":27}},{"path":"src/main/java/duke/error/IllegalInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":" * Exception thrown when input is not of the valid types."},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":" *"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":" * @author  Nicole Ang"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"public class IllegalInputException extends IllegalArgumentException {"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new IllegalInputException."},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"     * @param message  Exception message."},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"    IllegalInputException(String message) {"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"        super(message);"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"     * Returns error message telling user that they entered an invalid input and to re-enter the input."},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"     * @return Error message."},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"        return \"I don\u0027t understand what you just entered \u003e.\u003c\\n\" + \"Please re-enter!\";"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":27}},{"path":"src/main/java/duke/error/IllegalTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":" * Exception thrown when \u0027todo\u0027, \u0027deadline\u0027 or \u0027event\u0027 input is incorrectly formatted."},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":" *"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":" * @author  Nicole Ang"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"public class IllegalTaskException extends StringIndexOutOfBoundsException {"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    protected String taskType;"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new IllegalTaskException."},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"     * @param message  Exception message."},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"     * @param taskType Type of the task, either \"todo\", \"deadline\" or \"event\"."},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    public IllegalTaskException(String message, String taskType) {"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"        super(message);"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"     * Returns error message telling user that they did not enter the task description and to re-enter the input."},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"     * @return Error message."},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"        return \"Your input for the \" + taskType + \" task is not formatted correctly!\\n\" + \"Please re-enter!\";"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":31}},{"path":"src/main/java/duke/error/OutOfBoundsDoneDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":" * Exception thrown when task to delete or mark as done does not exist."},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":" *"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":" * @author  Nicole Ang"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"public class OutOfBoundsDoneDeleteException extends IndexOutOfBoundsException {"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new OutOfBoundsDoneDeleteException."},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"     * @param message  Exception message."},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"    OutOfBoundsDoneDeleteException(String message) {"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"        super(message);"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"     * Returns error message telling user that the task they entered is not on the list and to re-enter the input."},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"     * @return Error message."},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"        return \"The task you entered does not exist!\\n\" + \"Please re-enter!\";"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":27}},{"path":"src/main/java/duke/file/FileSaver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.file;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":" * File saver to save task list to a local file."},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":" *"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":" * @author  Nicole Ang"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"public class FileSaver {"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    private FileWriter fw;"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new FileSaver object to save task list to a local file."},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    public FileSaver() {"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"     * Saves task list to file path specified."},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"     * If file specified is not found, a new file is created at that location."},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"     * @param filePath  Local path to store task list to."},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"     * @param list  Task list."},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"     * @throws IOException  If file specified is not found."},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"    public void saveToFile(String filePath, ArrayList\u003cTask\u003e list) throws IOException {"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"        File fileCreator \u003d new File(filePath);"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"        if (!fileCreator.createNewFile()) {"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"            fileCreator.delete();"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"            fileCreator.createNewFile();"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"            fw \u003d new FileWriter(filePath);"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"            for (Task t : list) {"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"                fw.write(t.toString() + \"\\n\");"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"            fw.close();"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":48}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":" * Deadline tasks are tasks that have to be completed by a specified date."},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":" *"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":" * @author  Nicole Ang"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"    protected LocalDate by;"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new DeadlineTask object given a description and a deadline."},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"     * @param description   Task description."},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"     * @param by    Date task needs to be completed by."},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"    public DeadlineTask(String description, LocalDate by) {"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"        super(description);"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"        this.by \u003d by;"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"     * Returns a string representation of the deadline task specifying its description and completion date."},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"     * @return String representation of task."},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":33}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":" * Event tasks are tasks that occur during a specified period of time."},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":" *"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":" * @author  Nicole Ang"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"public class EventTask extends Task {"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"    protected LocalDate on;"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"    protected LocalTime from;"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"    protected LocalTime to;"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new EventTask object given a description and a time period."},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"     * @param description   Task description."},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"     * @param on    Date event is occurring on."},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"     * @param from  Start time of event."},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"     * @param to    End time of event."},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    public EventTask(String description, LocalDate on, LocalTime from, LocalTime to) {"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"        super(description);"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"        this.on \u003d on;"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"        this.from \u003d from;"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"        this.to \u003d to;"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"     * Returns a string representation of the event task specifying its description and when it occurs."},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"     * @return String representation of task."},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"        return \"[E]\" + super.toString() + \" (on: \" + on + \", \" + from + \" - \" + to + \")\";"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":" * Tasks can be added to the task list that the bot manages."},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":" *"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":" * @author  Nicole Ang"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"    protected boolean isDone;"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new Task object given a description."},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"     * @param description   Task description."},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    public Task(String description) {"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"        this.isDone \u003d false;"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"     * Returns a \u0027X\u0027 if the task is marked as done and no symbol otherwise."},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"     * @return Status icon of task to indicate whether it is done."},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    public String getStatusIcon() {"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"        return (isDone ? \"X\" : \" \"); //return tick or X symbols"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"     * Marks task as done."},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"    public void markAsDone() {"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"        isDone \u003d true;"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"     * Returns a string representation of the task specifying its description."},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"     * @return String representation of task."},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":47}},{"path":"src/main/java/duke/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"//import java.lang.reflect.InvocationTargetException;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import duke.datetime.DateTimeConverter;"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import duke.error.ErrorChecker;"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import duke.file.FileSaver;"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":" * Task manager decides what type of action to take based on the user input."},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":" *"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":" * @author  Nicole Ang"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"public class TaskManager {"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    protected ArrayList\u003cTask\u003e tasks;"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    protected FileSaver fileSaver;"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"    private boolean isBye;"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    private boolean isHelp;"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    private boolean isList;"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    private boolean isDone;"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    private boolean isDelete;"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    private boolean isFind;"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"    private boolean isTodo;"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    private boolean isDeadline;"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"    private boolean isEvent;"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"    private final String BYE_RESPONSE \u003d \"Bye! See you soon :)\";"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    private final String HELP_RESPONSE \u003d \"list: list all tasks\\ndone {i}: mark task at position {i} as done\\n\""},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"            + \"delete {i}: delete task at position {i}\\nfind {keyword}: find and list all tasks containing {keyword}\\n\""},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"            + \"todo {description}: creates a new todo\\ndeadline {description} /by {date}: creates a new deadline\\n\""},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"            + \"event {description} /on {date} /from {time} /to {time}: creates a new event\";"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"     * Constructs a new TaskManager object to process tasks."},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"    public TaskManager() {"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"        fileSaver \u003d new FileSaver();"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"     * Takes the user input and decides how to handle it."},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"     * Returns a feedback message to let user know if action has been taken successfully or not."},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"     * @param input User input."},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"     * @param tasks Current task list."},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"     * @return Feedback message."},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"    public String takeEvent(String input, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"        ErrorChecker e \u003d new ErrorChecker(input, tasks);"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"        categoriseTask(input);"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"        // if (input.equals(\"help\")) {"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"        //    return HELP_RESPONSE;"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"        // } else if (input.equals(\"list\")) {"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"        //    return listEvents();"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"        // } else if (e.isValid()) {"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"        //    if (input.startsWith(\"done\")) {"},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"        //        return markDone(input);"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"        //    } else if (input.startsWith(\"delete\")) {"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"        //        return deleteTask(input);"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"        //    } else if (input.startsWith(\"find\")) {"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"        //        return findTasks(input);"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"        //    } else {"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"        //        return addNewTask(input);"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"        //    }"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"        // } else {"},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"        //    return e.getMessage();"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"        // }"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"        if (isBye) {"},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"            return BYE_RESPONSE;"},{"lineNumber":77,"author":{"gitId":"nicoleang09"},"content":"        } else if (isHelp) {"},{"lineNumber":78,"author":{"gitId":"nicoleang09"},"content":"            return HELP_RESPONSE;"},{"lineNumber":79,"author":{"gitId":"nicoleang09"},"content":"        } else if (isList) {"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"            return listEvents();"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"        } else if (e.isValid()) {"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"            if (isDone) {"},{"lineNumber":83,"author":{"gitId":"nicoleang09"},"content":"                return markDone(input);"},{"lineNumber":84,"author":{"gitId":"nicoleang09"},"content":"            } else if (isDelete) {"},{"lineNumber":85,"author":{"gitId":"nicoleang09"},"content":"                return deleteTask(input);"},{"lineNumber":86,"author":{"gitId":"nicoleang09"},"content":"            } else if (isFind) {"},{"lineNumber":87,"author":{"gitId":"nicoleang09"},"content":"                return findTasks(input);"},{"lineNumber":88,"author":{"gitId":"nicoleang09"},"content":"            } else {"},{"lineNumber":89,"author":{"gitId":"nicoleang09"},"content":"                return addNewTask(input);"},{"lineNumber":90,"author":{"gitId":"nicoleang09"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"nicoleang09"},"content":"        } else {"},{"lineNumber":92,"author":{"gitId":"nicoleang09"},"content":"            return e.getMessage();"},{"lineNumber":93,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":95,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":97,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"nicoleang09"},"content":"     * Categorises input into \u0027help\u0027, \u0027done\u0027, \u0027delete\u0027, \u0027find\u0027, \u0027todo\u0027, \u0027deadline\u0027 or \u0027event\u0027."},{"lineNumber":99,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"nicoleang09"},"content":"     * @param input User input."},{"lineNumber":101,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"nicoleang09"},"content":"    public void categoriseTask(String input) {"},{"lineNumber":103,"author":{"gitId":"nicoleang09"},"content":"        isBye \u003d input.equals(\"bye\");"},{"lineNumber":104,"author":{"gitId":"nicoleang09"},"content":"        isHelp \u003d input.equals(\"help\");"},{"lineNumber":105,"author":{"gitId":"nicoleang09"},"content":"        isList \u003d input.equals(\"list\");"},{"lineNumber":106,"author":{"gitId":"nicoleang09"},"content":"        isDone \u003d input.startsWith(\"done\");"},{"lineNumber":107,"author":{"gitId":"nicoleang09"},"content":"        isDelete \u003d input.startsWith(\"delete\");"},{"lineNumber":108,"author":{"gitId":"nicoleang09"},"content":"        isFind \u003d input.startsWith(\"find\");"},{"lineNumber":109,"author":{"gitId":"nicoleang09"},"content":"        isTodo \u003d input.startsWith(\"todo\");"},{"lineNumber":110,"author":{"gitId":"nicoleang09"},"content":"        isDeadline \u003d input.startsWith(\"deadline\");"},{"lineNumber":111,"author":{"gitId":"nicoleang09"},"content":"        isEvent \u003d input.startsWith(\"event\");"},{"lineNumber":112,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":114,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"nicoleang09"},"content":"     * Marks task as done."},{"lineNumber":116,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"nicoleang09"},"content":"     * @param input User input."},{"lineNumber":118,"author":{"gitId":"nicoleang09"},"content":"     * @return Feedback message letting user know task was successfully marked as done."},{"lineNumber":119,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"nicoleang09"},"content":"    public String markDone(String input) {"},{"lineNumber":121,"author":{"gitId":"nicoleang09"},"content":"        Task task \u003d tasks.get(Integer.parseInt(input.substring(5)) - 1);"},{"lineNumber":122,"author":{"gitId":"nicoleang09"},"content":"        task.markAsDone();"},{"lineNumber":123,"author":{"gitId":"nicoleang09"},"content":"        return \"Good job! You got \" + task.description + \" done!\";"},{"lineNumber":124,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":126,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"nicoleang09"},"content":"     * Adds new task to the task list."},{"lineNumber":128,"author":{"gitId":"nicoleang09"},"content":"     * Saves an updated copy of current task list to local file."},{"lineNumber":129,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"nicoleang09"},"content":"     * @param input User input."},{"lineNumber":131,"author":{"gitId":"nicoleang09"},"content":"     * @return Feedback message letting user know task was successfully added to task list."},{"lineNumber":132,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"nicoleang09"},"content":"    public String addNewTask(String input) {"},{"lineNumber":134,"author":{"gitId":"nicoleang09"},"content":"        Task newTask;"},{"lineNumber":135,"author":{"gitId":"nicoleang09"},"content":"        if (isTodo) {"},{"lineNumber":136,"author":{"gitId":"nicoleang09"},"content":"            newTask \u003d new TodoTask(input.substring(5));"},{"lineNumber":137,"author":{"gitId":"nicoleang09"},"content":"        } else if (isDeadline) {"},{"lineNumber":138,"author":{"gitId":"nicoleang09"},"content":"            String[] inputSplit \u003d input.split(\"/\");"},{"lineNumber":139,"author":{"gitId":"nicoleang09"},"content":"            DateTimeConverter dateTimeConverter \u003d new DateTimeConverter(inputSplit);"},{"lineNumber":140,"author":{"gitId":"nicoleang09"},"content":"            newTask \u003d new DeadlineTask(inputSplit[0].substring(9, inputSplit[0].length() - 1),"},{"lineNumber":141,"author":{"gitId":"nicoleang09"},"content":"                    dateTimeConverter.convertDate());"},{"lineNumber":142,"author":{"gitId":"nicoleang09"},"content":"        } else {"},{"lineNumber":143,"author":{"gitId":"nicoleang09"},"content":"            String[] inputSplit \u003d input.split(\"/\");"},{"lineNumber":144,"author":{"gitId":"nicoleang09"},"content":"            DateTimeConverter dateTimeConverter \u003d new DateTimeConverter(inputSplit);"},{"lineNumber":145,"author":{"gitId":"nicoleang09"},"content":"            newTask \u003d new EventTask(inputSplit[0].substring(6, inputSplit[0].length() - 1),"},{"lineNumber":146,"author":{"gitId":"nicoleang09"},"content":"                    dateTimeConverter.convertDate(), dateTimeConverter.convertTime(\"from\"),"},{"lineNumber":147,"author":{"gitId":"nicoleang09"},"content":"                    dateTimeConverter.convertTime(\"to\"));"},{"lineNumber":148,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"nicoleang09"},"content":"        tasks.add(newTask);"},{"lineNumber":150,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":151,"author":{"gitId":"nicoleang09"},"content":"        try {"},{"lineNumber":152,"author":{"gitId":"nicoleang09"},"content":"            fileSaver.saveToFile(\"DukeList.txt\", tasks);"},{"lineNumber":153,"author":{"gitId":"nicoleang09"},"content":"        } catch (IOException ex) {"},{"lineNumber":154,"author":{"gitId":"nicoleang09"},"content":"            return \"File path not found: \" + ex.getMessage();"},{"lineNumber":155,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":157,"author":{"gitId":"nicoleang09"},"content":"        return \"Added: \" + newTask.toString();"},{"lineNumber":158,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":160,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":161,"author":{"gitId":"nicoleang09"},"content":"     * Deletes task from the task list."},{"lineNumber":162,"author":{"gitId":"nicoleang09"},"content":"     * Saves an updated copy of current task list to local file."},{"lineNumber":163,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":164,"author":{"gitId":"nicoleang09"},"content":"     * @param input User input."},{"lineNumber":165,"author":{"gitId":"nicoleang09"},"content":"     * @return Feedback message letting user know task was successfully deleted from task list."},{"lineNumber":166,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"nicoleang09"},"content":"    public String deleteTask(String input) {"},{"lineNumber":168,"author":{"gitId":"nicoleang09"},"content":"        Task task \u003d tasks.get(Integer.parseInt(input.substring(7)) - 1);"},{"lineNumber":169,"author":{"gitId":"nicoleang09"},"content":"        tasks.remove(Integer.parseInt(input.substring(7)) - 1);"},{"lineNumber":170,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":171,"author":{"gitId":"nicoleang09"},"content":"        try {"},{"lineNumber":172,"author":{"gitId":"nicoleang09"},"content":"            fileSaver.saveToFile(\"DukeList.txt\", tasks);"},{"lineNumber":173,"author":{"gitId":"nicoleang09"},"content":"        } catch (IOException ex) {"},{"lineNumber":174,"author":{"gitId":"nicoleang09"},"content":"            return \"File path not found: \" + ex.getMessage();"},{"lineNumber":175,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":177,"author":{"gitId":"nicoleang09"},"content":"        return \"Deleted: \" + task.toString();"},{"lineNumber":178,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":180,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":181,"author":{"gitId":"nicoleang09"},"content":"     * Finds tasks containing a specified keyword in their description."},{"lineNumber":182,"author":{"gitId":"nicoleang09"},"content":"     * Tasks are listed with their position in the task list displayed."},{"lineNumber":183,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":184,"author":{"gitId":"nicoleang09"},"content":"     * @param input User input."},{"lineNumber":185,"author":{"gitId":"nicoleang09"},"content":"     * @return List of tasks containing the keyword in their description."},{"lineNumber":186,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":187,"author":{"gitId":"nicoleang09"},"content":"    public String findTasks(String input) {"},{"lineNumber":188,"author":{"gitId":"nicoleang09"},"content":"        String description \u003d input.substring(5);"},{"lineNumber":189,"author":{"gitId":"nicoleang09"},"content":"        String output \u003d \"Here is a list of your tasks that contain \" + description + \":\";"},{"lineNumber":190,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":191,"author":{"gitId":"nicoleang09"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":192,"author":{"gitId":"nicoleang09"},"content":"            if (tasks.get(i).description.contains(description)) {"},{"lineNumber":193,"author":{"gitId":"nicoleang09"},"content":"                output \u003d output + \"\\n\" + (i + 1) + \". \" + tasks.get(i).toString();"},{"lineNumber":194,"author":{"gitId":"nicoleang09"},"content":"            }"},{"lineNumber":195,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":197,"author":{"gitId":"nicoleang09"},"content":"        return output;"},{"lineNumber":198,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":200,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":201,"author":{"gitId":"nicoleang09"},"content":"     * Lists all tasks in the task list in the order they were added."},{"lineNumber":202,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":203,"author":{"gitId":"nicoleang09"},"content":"     * @return Task list."},{"lineNumber":204,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":205,"author":{"gitId":"nicoleang09"},"content":"    public String listEvents() {"},{"lineNumber":206,"author":{"gitId":"nicoleang09"},"content":"        String output \u003d \"Here is a list of your tasks:\";"},{"lineNumber":207,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":208,"author":{"gitId":"nicoleang09"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":209,"author":{"gitId":"nicoleang09"},"content":"            output \u003d output + \"\\n\" + (i + 1) + \". \" + tasks.get(i).toString();"},{"lineNumber":210,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":212,"author":{"gitId":"nicoleang09"},"content":"        return output;"},{"lineNumber":213,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":214}},{"path":"src/main/java/duke/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":" * Todo tasks are tasks that do not have to be completed by a specified date or during a specified time period."},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":" *"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":" * @author  Nicole Ang"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"public class TodoTask extends Task {"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    public TodoTask(String description) {"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"     * Returns a string representation of the todo task specifying its description."},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"     * @return String representation of task."},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":22}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"/**This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face, a label"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":" * containing the speaker\u0027s name and a label containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    private VBox vbox;"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    private Label messageContent;"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    private Label senderName;"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    private ImageView displayPicture;"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    private DialogBox(String name, String text, Image img) {"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"            fxmlLoader.load();"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"        } catch (IOException e) {"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":"            e.printStackTrace();"},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"        senderName.setText(name);"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"        messageContent.setText(text);"},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"        displayPicture.setImage(img);"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"    private void flip() {"},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"        Collections.reverse(tmp);"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"        vbox.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"     * Returns dialogue box containing user\u0027s dialogue."},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"     * @param text  Dialogue text."},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"     * @param img   Image representing user."},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":"     * @return Dialogue box containing user\u0027s dialogue."},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"        var db \u003d new DialogBox(\"user\", text, img);"},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"        db.flip();"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"        db.senderName.setId(\"userName\");"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"        return db;"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"     * Returns dialogue box containing bot\u0027s dialogue."},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":"     * @param text  Dialogue text."},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"     * @param img   Image representing bot."},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"     * @return Dialogue box containing bot\u0027s dialogue."},{"lineNumber":77,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"nicoleang09"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":79,"author":{"gitId":"nicoleang09"},"content":"        var db \u003d new DialogBox(\"tabby\", text, img);"},{"lineNumber":80,"author":{"gitId":"nicoleang09"},"content":"        db.senderName.setId(\"tabbyName\");"},{"lineNumber":81,"author":{"gitId":"nicoleang09"},"content":"        return db;"},{"lineNumber":82,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":83}},{"path":"src/main/java/duke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"     * Launches task bot application."},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"     * @param args  Java command line inputs."},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"    public static void main(String[] args) {"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":17}},{"path":"src/main/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"     * Sets up the GUI."},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"     * @param stage JavaFX stage for the task bot application."},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    public void start(Stage stage) {"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"            stage.setScene(scene);"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"            stage.show();"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":37}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":" */"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user icon.png\"));"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tabby icon.png\"));"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"     * Invokes display of welcome message."},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"    public void initialize() {"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":35,"author":{"gitId":"nicoleang09"},"content":"        scrollPane.getStylesheets().add(getClass().getResource(\"/view/ui.css\").toExternalForm());"},{"lineNumber":36,"author":{"gitId":"nicoleang09"},"content":"        welcomeUser();"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":39,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"nicoleang09"},"content":"     * Sets controller for application."},{"lineNumber":41,"author":{"gitId":"nicoleang09"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"nicoleang09"},"content":"     * @param d Controller."},{"lineNumber":43,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"nicoleang09"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":45,"author":{"gitId":"nicoleang09"},"content":"        duke \u003d d;"},{"lineNumber":46,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":48,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"nicoleang09"},"content":"     * Displays welcome message."},{"lineNumber":50,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"nicoleang09"},"content":"    private void welcomeUser() {"},{"lineNumber":52,"author":{"gitId":"nicoleang09"},"content":"        String welcomeMessage \u003d \"Hi, I\u0027m Tabby the task bot!\\n\""},{"lineNumber":53,"author":{"gitId":"nicoleang09"},"content":"                + \"I\u0027ll help you keep tabs on your to-dos, deadlines and events!\\n\""},{"lineNumber":54,"author":{"gitId":"nicoleang09"},"content":"                + \"Enter help for a summary of commands.\";"},{"lineNumber":55,"author":{"gitId":"nicoleang09"},"content":"        // String input \u003d userInput.getText();"},{"lineNumber":56,"author":{"gitId":"nicoleang09"},"content":"        // String response \u003d duke.getResponse(input);"},{"lineNumber":57,"author":{"gitId":"nicoleang09"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":58,"author":{"gitId":"nicoleang09"},"content":"                // DialogBox.getUserDialog(input, userImage),"},{"lineNumber":59,"author":{"gitId":"nicoleang09"},"content":"                DialogBox.getDukeDialog(welcomeMessage, dukeImage)"},{"lineNumber":60,"author":{"gitId":"nicoleang09"},"content":"        );"},{"lineNumber":61,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":63,"author":{"gitId":"nicoleang09"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"nicoleang09"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends"},{"lineNumber":65,"author":{"gitId":"nicoleang09"},"content":"     * them to the dialog container. Clears the user input after processing."},{"lineNumber":66,"author":{"gitId":"nicoleang09"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"nicoleang09"},"content":"    @FXML"},{"lineNumber":68,"author":{"gitId":"nicoleang09"},"content":"    private void handleUserInput() {"},{"lineNumber":69,"author":{"gitId":"nicoleang09"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":70,"author":{"gitId":"nicoleang09"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":71,"author":{"gitId":"nicoleang09"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":72,"author":{"gitId":"nicoleang09"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":73,"author":{"gitId":"nicoleang09"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":74,"author":{"gitId":"nicoleang09"},"content":"        );"},{"lineNumber":75,"author":{"gitId":"nicoleang09"},"content":"        userInput.clear();"},{"lineNumber":76,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":77}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"600.0\" maxHeight\u003d\"Infinity\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"        \u003cVBox fx:id\u003d\"vbox\" alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" maxHeight\u003d\"Infinity\"\u003e"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"           \u003cchildren\u003e"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"                \u003cLabel fx:id\u003d\"senderName\" alignment\u003d\"TOP_RIGHT\" contentDisplay\u003d\"CENTER\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"                 \u003cfont\u003e"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"                    \u003cFont name\u003d\"System Bold\" size\u003d\"12.104348182678223\" /\u003e"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"                 \u003c/font\u003e"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"              \u003c/Label\u003e"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"                \u003cLabel fx:id\u003d\"messageContent\" alignment\u003d\"TOP_RIGHT\" contentDisplay\u003d\"CENTER\" text\u003d\"Label\" textAlignment\u003d\"RIGHT\" wrapText\u003d\"true\" maxHeight\u003d\"Infinity\"/\u003e"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"           \u003c/children\u003e"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"         \u003cpadding\u003e"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"            \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"         \u003c/padding\u003e"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"        \u003c/VBox\u003e"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"          \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"           \u003cHBox.margin\u003e"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"              \u003cInsets left\u003d\"20.0\" right\u003d\"10.0\" /\u003e"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"           \u003c/HBox.margin\u003e"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"        \u003c/ImageView\u003e"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"     \u003c/children\u003e"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    \u003cpadding\u003e"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"        \u003cInsets bottom\u003d\"20.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":33,"author":{"gitId":"nicoleang09"},"content":"    \u003c/padding\u003e"},{"lineNumber":34,"author":{"gitId":"nicoleang09"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"nicoleang09":34}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"\u003c?import java.lang.String?\u003e"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" style\u003d\"-fx-background-color: #e38e3f;\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"    \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" maxWidth\u003d\"1.7976931348623157E308\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"512.0\" style\u003d\"-fx-background-radius: 50px; -fx-background-color: #fff;\" translateX\u003d\"5.0\" translateY\u003d\"-5.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"         \u003cpadding\u003e"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"            \u003cInsets left\u003d\"20.0\" right\u003d\"20.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"         \u003c/padding\u003e\u003c/TextField\u003e"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"546.0\" prefWidth\u003d\"600.0\" style\u003d\"-fx-background-color: #fff;\" styleClass\u003d\"scrollPane\" stylesheets\u003d\"@ui.css\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"            \u003ccontent\u003e"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"588.0\" style\u003d\"-fx-background-color: #fff;\"\u003e"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"               \u003cpadding\u003e"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"               \u003c/padding\u003e\u003c/VBox\u003e"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"            \u003c/content\u003e"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"         \u003cstyleClass\u003e"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"            \u003cString fx:value\u003d\"scroll-pane\" /\u003e"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"         \u003c/styleClass\u003e"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"        \u003cButton id\u003d\"sendButton\" fx:id\u003d\"sendButton\" layoutX\u003d\"523.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"73.0\" style\u003d\"-fx-background-color: ffe27a; -fx-background-radius: 50px;\" styleClass\u003d\"sendButton\" stylesheets\u003d\"@ui.css\" text\u003d\"Send\" textFill\u003d\"#727272\" translateX\u003d\"-1.0\" translateY\u003d\"-5.0\" /\u003e"},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"    \u003c/children\u003e"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"nicoleang09":30}},{"path":"src/test/java/DateTimeConverterTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"import org.junit.Assert;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import duke.datetime.DateTimeConverter;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"public class DateTimeConverterTest {"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"    void testDateConversion() {"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"        String input \u003d \"deadline return book /by 06-06-2021\";"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"        String[] inputSplit \u003d input.split(\"/\");"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"        DateTimeConverter dTC \u003d new DateTimeConverter(inputSplit);"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"        Assert.assertEquals(\"2021-06-06\", dTC.convertDate().toString());"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    void testTimeConversion() {"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"        String input \u003d \"deadline cs2103t lecture /on 29-01-2021 /from 2 pm /to 4 Pm\";"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"        String[] inputSplit \u003d input.split(\"/\");"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"        DateTimeConverter dTC \u003d new DateTimeConverter(inputSplit);"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"        Assert.assertEquals(\"14:00\", dTC.convertTime(\"from\").toString());"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"        Assert.assertEquals(\"16:00\", dTC.convertTime(\"to\").toString());"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":25}},{"path":"src/test/java/ErrorCheckerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"import org.junit.Assert;"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"import duke.error.ErrorChecker;"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"public class ErrorCheckerTest {"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"    void testToDo_missingTodoTask_exceptionThrown() {"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"        ErrorChecker errorChecker \u003d new ErrorChecker(\"todo \", new ArrayList\u003c\u003e());"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"        boolean hasNoError \u003d errorChecker.isValid();"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"        Assert.assertEquals(false, hasNoError);"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"    void testDeadline_missingDeadlineTask_exceptionThrown() {"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"        ErrorChecker errorChecker \u003d new ErrorChecker(\"deadline \", new ArrayList\u003c\u003e());"},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"        boolean hasNoError \u003d errorChecker.isValid();"},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"        Assert.assertEquals(false, hasNoError);"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"    void testDeadline_missingEventTask_exceptionThrown() {"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"        ErrorChecker errorChecker \u003d new ErrorChecker(\"event \", new ArrayList\u003c\u003e());"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":""},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"        boolean hasNoError \u003d errorChecker.isValid();"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"        Assert.assertEquals(false, hasNoError);"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"}"}],"authorContributionMap":{"nicoleang09":32}},{"path":"text-ui-test/DukeList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"[T][ ] read book"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"[D][X] return book (by: June 6th)"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"[T][X] join sports club"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"[D][ ] return book (by: Sunday)"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"[E][ ] project meeting (at: Mon 2-4pm)"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"[E][ ] project meeting (at: Aug 8th 7-9pm)"}],"authorContributionMap":{"nicoleang09":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicoleang09"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"nicoleang09"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"nicoleang09"},"content":"deadline return book /by 06-06-2021"},{"lineNumber":4,"author":{"gitId":"nicoleang09"},"content":"event project meeting /on Aug 6th 2-4pm"},{"lineNumber":5,"author":{"gitId":"nicoleang09"},"content":"event project meeting /on 06-08-2021 /from 2 pm /to 4 pm"},{"lineNumber":6,"author":{"gitId":"nicoleang09"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"nicoleang09"},"content":"todo join sports club"},{"lineNumber":8,"author":{"gitId":"nicoleang09"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"nicoleang09"},"content":"todo borrow book"},{"lineNumber":10,"author":{"gitId":"nicoleang09"},"content":"deadline return book /by Sunday"},{"lineNumber":11,"author":{"gitId":"nicoleang09"},"content":"deadline return book /by 31-12-2021"},{"lineNumber":12,"author":{"gitId":"nicoleang09"},"content":"event project meeting /on 12-08-2021 /from 2 PM /to 4 PM"},{"lineNumber":13,"author":{"gitId":"nicoleang09"},"content":"list"},{"lineNumber":14,"author":{"gitId":"nicoleang09"},"content":"delete 3"},{"lineNumber":15,"author":{"gitId":"nicoleang09"},"content":"event project meeting /on 08-08-2021 /from 7 pM /to 9 Pm"},{"lineNumber":16,"author":{"gitId":"nicoleang09"},"content":"delete 4"},{"lineNumber":17,"author":{"gitId":"nicoleang09"},"content":"list"},{"lineNumber":18,"author":{"gitId":"nicoleang09"},"content":"todo"},{"lineNumber":19,"author":{"gitId":"nicoleang09"},"content":"todo "},{"lineNumber":20,"author":{"gitId":"nicoleang09"},"content":"deadline"},{"lineNumber":21,"author":{"gitId":"nicoleang09"},"content":"deadline "},{"lineNumber":22,"author":{"gitId":"nicoleang09"},"content":"event"},{"lineNumber":23,"author":{"gitId":"nicoleang09"},"content":"event "},{"lineNumber":24,"author":{"gitId":"nicoleang09"},"content":"done"},{"lineNumber":25,"author":{"gitId":"nicoleang09"},"content":"done "},{"lineNumber":26,"author":{"gitId":"nicoleang09"},"content":"done 8"},{"lineNumber":27,"author":{"gitId":"nicoleang09"},"content":"delete"},{"lineNumber":28,"author":{"gitId":"nicoleang09"},"content":"delete "},{"lineNumber":29,"author":{"gitId":"nicoleang09"},"content":"delete 7"},{"lineNumber":30,"author":{"gitId":"nicoleang09"},"content":"random"},{"lineNumber":31,"author":{"gitId":"nicoleang09"},"content":"non a valid action"},{"lineNumber":32,"author":{"gitId":"nicoleang09"},"content":"bye"}],"authorContributionMap":{"nicoleang09":32}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":3,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":4,"author":{"gitId":"-"},"content":"then"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":6,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":9,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":10,"author":{"gitId":"-"},"content":"then"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":12,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":15,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":16,"author":{"gitId":"-"},"content":"then"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":19,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":22,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":25,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":26,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":29,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":30,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":31,"author":{"gitId":"-"},"content":"then"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":34,"author":{"gitId":"-"},"content":"else"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":37,"author":{"gitId":"nicoleang09"},"content":"then"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"nicoleang09":1,"-":37}}]
