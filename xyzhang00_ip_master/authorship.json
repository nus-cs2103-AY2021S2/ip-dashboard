[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"xyzhang00":15,"-":46}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"T || 0 || sleep"}],"authorContributionMap":{"xyzhang00":1}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"xyzhang00"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"xyzhang00"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"xyzhang00"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"xyzhang00"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":52,"author":{"gitId":"xyzhang00"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"xyzhang00"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":56,"author":{"gitId":"xyzhang00"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"xyzhang00"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"xyzhang00"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import duke.commands.ByeCommand;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import duke.commands.Command;"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":" * Duke main class"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"    private TaskList taskList;"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"    private Ui ui;"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"     * Creates a Duke object and retrieves stored takes from disk if present"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"    public Duke() {"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"        ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"        storage \u003d new Storage(\"data.txt\");"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"        taskList \u003d new TaskList(storage.getTasks());"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"    private void run() {"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"        ui.printWelcomeText();"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"        boolean isBye \u003d false;"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"        if (ui.hasNextCommand()) {"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"            while (!isBye) {"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"                String command \u003d ui.getNextCommand();"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"                Parser parser \u003d new Parser();"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"                Command c \u003d parser.parse(command);"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"                c.execute(taskList);"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"                storage.writeFile(taskList);"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"                if (c instanceof ByeCommand) {"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"                    isBye \u003d true;"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"                }"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"    public String getResponse(String input) {"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":44,"author":{"gitId":"xyzhang00"},"content":"        Command command \u003d parser.parse(input);"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"        String response \u003d command.execute(taskList);"},{"lineNumber":46,"author":{"gitId":"xyzhang00"},"content":"        return response;"},{"lineNumber":47,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":49,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":49}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"            stage.show();"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"        duke \u003d d;"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":"    @FXML"},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"    private void handleUserInput() {"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":44,"author":{"gitId":"xyzhang00"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":46,"author":{"gitId":"xyzhang00"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":47,"author":{"gitId":"xyzhang00"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":48,"author":{"gitId":"xyzhang00"},"content":"        );"},{"lineNumber":49,"author":{"gitId":"xyzhang00"},"content":"        userInput.clear();"},{"lineNumber":50,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":51}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import duke.commands.*;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.Deadline;"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.Event;"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.Todo;"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":" * Parser class to parse user input"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"     * Parses user input and returns the corresponding command"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"     * @param str User input"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"     * @return Corresponding command for Duke to execute"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"    public Command parse(String str) {"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"        if (str.startsWith(\"bye\")) {"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"            return new ByeCommand();"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"        } else if (str.startsWith(\"list\")) {"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"            return new ListCommand();"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"        } else if (str.startsWith(\"delete\")) {"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"            int taskNum \u003d Integer.parseInt(str.substring(7));"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"            return new DeleteCommand(taskNum);"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"        } else if (str.startsWith(\"done\")) {"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"            int taskNum \u003d Integer.parseInt(str.substring(5));"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"            return new DoneCommand(taskNum);"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"        } else if (str.startsWith(\"find\")) {"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"            String text \u003d str.substring(5);"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"            return new FindCommand(text);"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"            return addTasks(str);"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"     * Parses user input for adding tasks and returns the corresponding command"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":"     * @param str User input"},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"     * @return Corresponding command for Duke to execute"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"xyzhang00"},"content":"    public Command addTasks(String str) {"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"        if (str.startsWith(\"todo \")) {"},{"lineNumber":46,"author":{"gitId":"xyzhang00"},"content":"            Todo curr \u003d new Todo(str.substring(5), false);"},{"lineNumber":47,"author":{"gitId":"xyzhang00"},"content":"            return new AddCommand(curr);"},{"lineNumber":48,"author":{"gitId":"xyzhang00"},"content":"        } else if (str.startsWith(\"deadline \")) {"},{"lineNumber":49,"author":{"gitId":"xyzhang00"},"content":"            int cut \u003d str.indexOf(\"/by\");"},{"lineNumber":50,"author":{"gitId":"xyzhang00"},"content":"            Deadline curr \u003d new Deadline(str.substring(9, cut - 1), false, str.substring(cut + 4));"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"            return new AddCommand(curr);"},{"lineNumber":52,"author":{"gitId":"xyzhang00"},"content":"        } else if (str.startsWith(\"event \")) {"},{"lineNumber":53,"author":{"gitId":"xyzhang00"},"content":"            int cut \u003d str.indexOf(\"/at\");"},{"lineNumber":54,"author":{"gitId":"xyzhang00"},"content":"            Event curr \u003d new Event(str.substring(6, cut - 1), false, str.substring(cut + 4));"},{"lineNumber":55,"author":{"gitId":"xyzhang00"},"content":"            return new AddCommand(curr);"},{"lineNumber":56,"author":{"gitId":"xyzhang00"},"content":"        } else {"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"            return new ErrorCommand();"},{"lineNumber":58,"author":{"gitId":"xyzhang00"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":61,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":61}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"import duke.exceptions.FileIoException;"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.Deadline;"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.Event;"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.Task;"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.TaskList;"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.Todo;"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":" * Storage class to load and save list of tasks into a text file"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"public class Storage {"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"    private static DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"    private String path;"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"    private File file;"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"     * Storage constructor"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"     * @param path Filepath of .txt file to save tasks in"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"     * @throws FileIoException If Duke is unable to read the file"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"    public Storage(String path) {"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"        this.path \u003d path;"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"            file \u003d new File(path);"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"            file.createNewFile();"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":44,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"     * Loads saved tasks"},{"lineNumber":46,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"xyzhang00"},"content":"     * @return ArrayList of saved tasks"},{"lineNumber":48,"author":{"gitId":"xyzhang00"},"content":"     * @throws FileIoException If Duke is unable to read the file"},{"lineNumber":49,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"xyzhang00"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":52,"author":{"gitId":"xyzhang00"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"xyzhang00"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":54,"author":{"gitId":"xyzhang00"},"content":"            while (sc.hasNext()) {"},{"lineNumber":55,"author":{"gitId":"xyzhang00"},"content":"                String nextLine \u003d sc.nextLine();"},{"lineNumber":56,"author":{"gitId":"xyzhang00"},"content":"                String[] spiltString \u003d nextLine.split(\" \\\\|\\\\| \");"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"                String taskType \u003d spiltString[0];"},{"lineNumber":58,"author":{"gitId":"xyzhang00"},"content":"                boolean isCompleted \u003d spiltString[1].equals(\"1\");"},{"lineNumber":59,"author":{"gitId":"xyzhang00"},"content":"                String taskName \u003d spiltString[2];"},{"lineNumber":60,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":61,"author":{"gitId":"xyzhang00"},"content":"                if (spiltString.length \u003d\u003d 4) {"},{"lineNumber":62,"author":{"gitId":"xyzhang00"},"content":"                    LocalDate time \u003d LocalDate.parse(spiltString[3], OUTPUT_FORMATTER);"},{"lineNumber":63,"author":{"gitId":"xyzhang00"},"content":"                    if (taskType.equals(\"D\")) {"},{"lineNumber":64,"author":{"gitId":"xyzhang00"},"content":"                        list.add(new Deadline(taskName, isCompleted, time.toString()));"},{"lineNumber":65,"author":{"gitId":"xyzhang00"},"content":"                    } else if (taskType.equals(\"E\")) {"},{"lineNumber":66,"author":{"gitId":"xyzhang00"},"content":"                        list.add(new Event(taskName, isCompleted, time.toString()));"},{"lineNumber":67,"author":{"gitId":"xyzhang00"},"content":"                    } else {"},{"lineNumber":68,"author":{"gitId":"xyzhang00"},"content":"                        System.out.println(\"Error\");"},{"lineNumber":69,"author":{"gitId":"xyzhang00"},"content":"                    }"},{"lineNumber":70,"author":{"gitId":"xyzhang00"},"content":"                } else {"},{"lineNumber":71,"author":{"gitId":"xyzhang00"},"content":"                    if (taskType.equals(\"T\")) {"},{"lineNumber":72,"author":{"gitId":"xyzhang00"},"content":"                        list.add(new Todo(taskName, isCompleted));"},{"lineNumber":73,"author":{"gitId":"xyzhang00"},"content":"                    } else {"},{"lineNumber":74,"author":{"gitId":"xyzhang00"},"content":"                        System.out.println(\"Error\");"},{"lineNumber":75,"author":{"gitId":"xyzhang00"},"content":"                    }"},{"lineNumber":76,"author":{"gitId":"xyzhang00"},"content":"                }"},{"lineNumber":77,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":78,"author":{"gitId":"xyzhang00"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"xyzhang00"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":80,"author":{"gitId":"xyzhang00"},"content":"            System.out.println(\"Error!!\");"},{"lineNumber":81,"author":{"gitId":"xyzhang00"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"xyzhang00"},"content":"        return list;"},{"lineNumber":83,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":85,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"xyzhang00"},"content":"     * Writes tasks into .txt file"},{"lineNumber":87,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"xyzhang00"},"content":"     * @param taskList List of tasks"},{"lineNumber":89,"author":{"gitId":"xyzhang00"},"content":"     * @throws IOException If Duke is unable to write the file"},{"lineNumber":90,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"xyzhang00"},"content":"    public void writeFile(TaskList taskList) {"},{"lineNumber":92,"author":{"gitId":"xyzhang00"},"content":"        try {"},{"lineNumber":93,"author":{"gitId":"xyzhang00"},"content":"            FileWriter fw \u003d new FileWriter(path);"},{"lineNumber":94,"author":{"gitId":"xyzhang00"},"content":"            ArrayList\u003cTask\u003e list \u003d taskList.getList();"},{"lineNumber":95,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":96,"author":{"gitId":"xyzhang00"},"content":"            for (Task curr : list) {"},{"lineNumber":97,"author":{"gitId":"xyzhang00"},"content":"                String storageString \u003d curr.toStorageString();"},{"lineNumber":98,"author":{"gitId":"xyzhang00"},"content":"                fw.write(storageString + \"\\n\");"},{"lineNumber":99,"author":{"gitId":"xyzhang00"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":101,"author":{"gitId":"xyzhang00"},"content":"            fw.close();"},{"lineNumber":102,"author":{"gitId":"xyzhang00"},"content":"        } catch (IOException e) {"},{"lineNumber":103,"author":{"gitId":"xyzhang00"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":104,"author":{"gitId":"xyzhang00"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":106,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":108,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":108}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":" * Ui class to manage user input and Duke output"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"public class Ui {"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"    private static final String SPACE \u003d \"     \";"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"    private static final String DIVIDER \u003d \"    --------------------------------------------\u003e\u003e\u003e\u003e\u003e\\n\";"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"    private final Scanner sc;"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"     * Ui constructor"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"    public Ui() {"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"     * Prints welcome message"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"    public String printWelcomeText() {"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"        return DIVIDER + SPACE + \"Konichiwa~ Watashi wa Duke desu! \\n\" + SPACE"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"                + \"What can I do for you today?\\n\" + DIVIDER;"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"     * Prints exit message"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"    public String printGoodbye() {"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"        return DIVIDER + SPACE + \"Sayonara, matta ne~ \\n\" + DIVIDER;"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"     * Prints list of tasks"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":"     * @param list List of tasks"},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":"    public String printList(TaskList list) {"},{"lineNumber":44,"author":{"gitId":"xyzhang00"},"content":"        String resultString \u003d DIVIDER;"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":46,"author":{"gitId":"xyzhang00"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":47,"author":{"gitId":"xyzhang00"},"content":"            resultString \u003d resultString + SPACE + \"Ara, the list is empty right now!\\n\";"},{"lineNumber":48,"author":{"gitId":"xyzhang00"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"xyzhang00"},"content":"            resultString \u003d resultString + SPACE + \"Hai~ Current tasks are: \\n\";"},{"lineNumber":50,"author":{"gitId":"xyzhang00"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"                resultString \u003d resultString + SPACE + (i + 1) + \". \" + list.getTask(i).toString() + \"\\n\";"},{"lineNumber":52,"author":{"gitId":"xyzhang00"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"xyzhang00"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":55,"author":{"gitId":"xyzhang00"},"content":"        resultString \u003d resultString + DIVIDER;"},{"lineNumber":56,"author":{"gitId":"xyzhang00"},"content":"        return resultString;"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":59,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"xyzhang00"},"content":"     * Prints given text in output format"},{"lineNumber":61,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"xyzhang00"},"content":"     * @param text Given text"},{"lineNumber":63,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"xyzhang00"},"content":"    public String printText(String text) {"},{"lineNumber":65,"author":{"gitId":"xyzhang00"},"content":"        return DIVIDER + SPACE + text + \"\\n\" + DIVIDER;"},{"lineNumber":66,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":68,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"xyzhang00"},"content":"     * Prints message when a task is marked as done"},{"lineNumber":70,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"xyzhang00"},"content":"     * @param task Given task that is marked as done"},{"lineNumber":72,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"xyzhang00"},"content":"    public String printCompletedMsg(Task task) {"},{"lineNumber":74,"author":{"gitId":"xyzhang00"},"content":"        return DIVIDER + SPACE + \"Otsukare! I\u0027ve marked this task as done: \\n\" + SPACE + \"  \""},{"lineNumber":75,"author":{"gitId":"xyzhang00"},"content":"                + task.toString() + \"\\n\" + DIVIDER;"},{"lineNumber":76,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":78,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"xyzhang00"},"content":"     * Prints message when a task is deleted from list"},{"lineNumber":80,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"xyzhang00"},"content":"     * @param task Task to be deleted"},{"lineNumber":82,"author":{"gitId":"xyzhang00"},"content":"     * @param size Number of tasks left in list"},{"lineNumber":83,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"xyzhang00"},"content":"    public String printDeleteMsg(Task task, int size) {"},{"lineNumber":85,"author":{"gitId":"xyzhang00"},"content":"        return DIVIDER + SPACE + \"Yayyyy! I\u0027ve removed the task: \\n\" + SPACE + \"  \" + task.toString() + \"\\n\""},{"lineNumber":86,"author":{"gitId":"xyzhang00"},"content":"                + SPACE + \"Now you have \" + size + \" task(s) left!\\n\" + DIVIDER;"},{"lineNumber":87,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":89,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"xyzhang00"},"content":"     * Prints message when a task is added into list"},{"lineNumber":91,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"xyzhang00"},"content":"     * @param task Task that is added"},{"lineNumber":93,"author":{"gitId":"xyzhang00"},"content":"     * @param size Number of tasks now on list"},{"lineNumber":94,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"xyzhang00"},"content":"    public String printTask(Task task, int size) {"},{"lineNumber":96,"author":{"gitId":"xyzhang00"},"content":"        return DIVIDER + SPACE + \"Ayyyyy I\u0027ve added the task: \\n\" + SPACE + \"  \" + task.toString() + \"\\n\""},{"lineNumber":97,"author":{"gitId":"xyzhang00"},"content":"                + SPACE + \"Now you have \" + size + \" task(s) in the list.\\n\" + DIVIDER;"},{"lineNumber":98,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":100,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"xyzhang00"},"content":"     * Prints tasks in given search result list"},{"lineNumber":102,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"xyzhang00"},"content":"     * @param taskList Given list of tasks"},{"lineNumber":104,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"xyzhang00"},"content":"    public String printSearchResults(TaskList taskList) {"},{"lineNumber":106,"author":{"gitId":"xyzhang00"},"content":"        if (taskList.size() \u003d\u003d 0) {"},{"lineNumber":107,"author":{"gitId":"xyzhang00"},"content":"            return DIVIDER + SPACE + \"There are no matching results D:\\n\" + DIVIDER;"},{"lineNumber":108,"author":{"gitId":"xyzhang00"},"content":"        } else {"},{"lineNumber":109,"author":{"gitId":"xyzhang00"},"content":"            String resultString \u003d DIVIDER;"},{"lineNumber":110,"author":{"gitId":"xyzhang00"},"content":"            resultString \u003d resultString + SPACE + \"Hai~ The search results are are: \\n\";"},{"lineNumber":111,"author":{"gitId":"xyzhang00"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":112,"author":{"gitId":"xyzhang00"},"content":"                resultString \u003d resultString + SPACE + (i + 1) + \". \" + taskList.getTask(i).toString() + \"\\n\";"},{"lineNumber":113,"author":{"gitId":"xyzhang00"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"xyzhang00"},"content":"            resultString \u003d resultString + DIVIDER;"},{"lineNumber":115,"author":{"gitId":"xyzhang00"},"content":"            return resultString;"},{"lineNumber":116,"author":{"gitId":"xyzhang00"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":118,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":120,"author":{"gitId":"xyzhang00"},"content":"    public String printUnknowInputError() {"},{"lineNumber":121,"author":{"gitId":"xyzhang00"},"content":"        return DIVIDER + SPACE + \"Sorry! I do not understand what you just said. Try again pwease?\""},{"lineNumber":122,"author":{"gitId":"xyzhang00"},"content":"                + DIVIDER;"},{"lineNumber":123,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":125,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"xyzhang00"},"content":"     * Gets next line of user input"},{"lineNumber":127,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":128,"author":{"gitId":"xyzhang00"},"content":"     * @return User input"},{"lineNumber":129,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"xyzhang00"},"content":"    public String getNextCommand() {"},{"lineNumber":131,"author":{"gitId":"xyzhang00"},"content":"        return sc.nextLine();"},{"lineNumber":132,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":134,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"xyzhang00"},"content":"     * Checks if there is user input"},{"lineNumber":136,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":137,"author":{"gitId":"xyzhang00"},"content":"     * @return True if user typed a command"},{"lineNumber":138,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"xyzhang00"},"content":"    public boolean hasNextCommand() {"},{"lineNumber":140,"author":{"gitId":"xyzhang00"},"content":"        return sc.hasNext();"},{"lineNumber":141,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":143,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"xyzhang00"},"content":"     * Prints error if saved .txt file is unable to load"},{"lineNumber":145,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":146,"author":{"gitId":"xyzhang00"},"content":"    public void showLoadingError() {"},{"lineNumber":147,"author":{"gitId":"xyzhang00"},"content":"        System.out.println(\"Ehhh-- There is something wrong with the file!\");"},{"lineNumber":148,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":150,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":150}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":" * Command for adding tasks into list"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"public class AddCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"    private Task task;"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"     * Add command constructor"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"     * @param task Task to be added"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    public AddCommand(Task task) {"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"        super(CommandType.ADD);"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"        this.task \u003d task;"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"     * Adds task into given list and prints ui message"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"     * @param list List of tasks"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"    public String execute(TaskList list) {"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"        list.addTask(task);"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"        return ui.printTask(task, list.size());"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":30}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":" * Command to quit Duke"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"public class ByeCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"     * Exit command constructor"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"    public ByeCommand() {"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"        super(CommandType.EXIT);"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"     * Exits program"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"     * @param list List of tasks"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    public String execute(TaskList list) {"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"        return ui.printGoodbye();"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":24}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import duke.Ui;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":" * Abstract class for all commands"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"public abstract class Command {"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"    protected CommandType type;"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"    protected Ui ui;"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"     * Command constructor"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"     * @param type Type of command"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"    public Command(CommandType type) {"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"        this.type \u003d type;"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"     * Gets type of command"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"     * @return Command type"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"    public CommandType getType() {"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"        return type;"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"     * Abstract method for executing a command"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"     * @param list List of tasks"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"    public abstract String execute(TaskList list);"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":36}},{"path":"src/main/java/duke/commands/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"enum CommandType {"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"    ADD, DELETE, DONE, EXIT, LIST, FIND, ERROR;"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":5}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":" * Command for deleting tasks from list"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"    private int taskNum;"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"     *Delete command constructor"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"     * @param taskNum Index of task to be deleted from list"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    public DeleteCommand(int taskNum) {"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"        super(CommandType.DELETE);"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"        this.taskNum \u003d taskNum;"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"     * Deletes task from list and prints ui message"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"     * @param list List of tasks"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"    public String execute(TaskList list) {"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"        Task curr \u003d list.delete(taskNum - 1);"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"        return ui.printDeleteMsg(curr, list.size());"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":30}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":" * Command for marking a task as done"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"public class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"    private int taskNum;"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"     * Done command constructor"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"     * @param taskNum Index of task to be marked as done"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"    public DoneCommand(int taskNum) {"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"        super(CommandType.DONE);"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"        this.taskNum \u003d taskNum;"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"     * Marks a task as done and prints ui message"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"     * @param list List of tasks"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"    public String execute(TaskList list) {"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"        Task curr \u003d list.markCompleted(taskNum - 1);"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"        return ui.printCompletedMsg(curr);"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":32}},{"path":"src/main/java/duke/commands/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":" * Command to return error message for unknown input"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"public class ErrorCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"     * Error command constructor"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"    public ErrorCommand() {"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"        super(CommandType.ERROR);"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"     * Prints unknown input error message"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"     * @param list List of tasks"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    public String execute(TaskList list) {"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"        return ui.printUnknowInputError();"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":27}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":" * Command for finding tasks with name containing given text"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"public class FindCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"    private String text;"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"     * Find command constructor"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"     * @param text Search text"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    public FindCommand(String text) {"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"        super(CommandType.FIND);"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"        this.text \u003d text;"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"     * Finds tasks with name containing search text"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"     * @param list List of tasks"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"    public String execute(TaskList list) {"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"        return ui.printSearchResults(list.find(this.text));"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":30}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":" * Command for listing task out"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"public class ListCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"     * List command constructor"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"    public ListCommand() {"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"        super(CommandType.LIST);"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"     * Prints all tasks on list"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"     * @param list List of tasks"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    public String execute(TaskList list) {"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"        return ui.printList(list);"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":24}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"    public DukeException(String msg) {"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"        super(msg + \" Try again kudasai!\");"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":7}},{"path":"src/main/java/duke/exceptions/FileIoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"public class FileIoException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"    public FileIoException() {"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"        super(\"Eh? Something is wrong with the files!\");"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":8}},{"path":"src/main/java/duke/exceptions/IndexOutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"public class IndexOutOfBoundException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"    public IndexOutOfBoundException() {"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"        super(\"Yabai! There isn\u0027t so many tasks in the list right now\");"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":7}},{"path":"src/main/java/duke/exceptions/MissingTaskNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"public class MissingTaskNameException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"    public MissingTaskNameException(String taskType) {"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"        super(\"Chotto matte I need to know the name of this \" + taskType);"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":7}},{"path":"src/main/java/duke/exceptions/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"public class UnknownInputException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"    public UnknownInputException() {"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"        super(\"Sumimasen but I cannot understand what you just said.\");"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":7}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":" * Deadline task"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"    private static DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"    private LocalDate by;"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"     * Deadline constructor"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"     * @param taskName Name of task"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"     * @param isCompleted Completion status of task"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"     * @param by Time of task deadline"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"    public Deadline(String taskName, boolean isCompleted, String by) {"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"        super(taskName, isCompleted);"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"        this.by \u003d LocalDate.parse(by);"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"     * Generates string to be stored in local disk"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"     * @return String with specific format"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"    public String toStorageString() {"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"        return \"D || \" + (this.isCompleted ? \"1\" : \"0\") + \" || \" + this.taskName + \" || \""},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"                + this.by.format(OUTPUT_FORMATTER);"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(OUTPUT_FORMATTER) + \")\";"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":38}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":" * Event task"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"    private static DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"    private LocalDate at;"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"     * Event constructor"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"     * @param taskName Name of task"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"     * @param isCompleted Completion status of task"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"     * @param at Time of event"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"    public Event(String taskName, boolean isCompleted, String at) {"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"        super(taskName, isCompleted);"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"        this.at \u003d LocalDate.parse(at);"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"     * Generates string to be stored in local disk"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"     * @return String with specific format"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"    public String toStorageString() {"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"        return \"[E] || \" + (this.isCompleted ? \"1\" : \"0\") + \" || \" + this.taskName + \" || \""},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"                + this.at.format(OUTPUT_FORMATTER);"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at.format(OUTPUT_FORMATTER) + \")\";"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":38}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":" * Abstract class for all tasks"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"    protected String taskName;"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"    protected boolean isCompleted;"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"     * Task constructor"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"     * @param taskName Name of task"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"     * @param isCompleted Completion status of task"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    public Task(String taskName, boolean isCompleted) {"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"        this.isCompleted \u003d isCompleted;"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"     * Gets status"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"     * @return Status"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"    public String getStatus() {"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"        return isCompleted ? \"\\u2713\" : \"\\u2717\";"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"     * Gets task name"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"     * @return Task name"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"    public String getName() {"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"        return this.taskName;"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"     * Marks the task as completed"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"    public void setCompleted() {"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":"        this.isCompleted \u003d true;"},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":44,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"     * Abstract method for generating string to be stored in local disk"},{"lineNumber":46,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"xyzhang00"},"content":"    public abstract String toStorageString();"},{"lineNumber":48,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":49,"author":{"gitId":"xyzhang00"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"xyzhang00"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"        return \"[\" + this.getStatus() + \"] \" + this.taskName;"},{"lineNumber":52,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":53}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":" * List of tasks"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"    private ArrayList\u003cTask\u003e list;"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"     * TaskList constructor"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"    public TaskList() {"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"        this.list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"     * TaskList constructor"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"     * @param list ArrayList of tasks"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"        this.list \u003d list;"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"     * Gets task with given index"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"     * @param index Given index"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"     * @return Task with give index"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"    public Task getTask(int index) {"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"        return this.list.get(index);"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"     * Gets list of tasks"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":"     * @return ArrayList of tasks"},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":"        return this.list;"},{"lineNumber":44,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":46,"author":{"gitId":"xyzhang00"},"content":"    public void addTask(Task task) {"},{"lineNumber":47,"author":{"gitId":"xyzhang00"},"content":"        this.list.add(task);"},{"lineNumber":48,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":50,"author":{"gitId":"xyzhang00"},"content":"    public int size() {"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"        return this.list.size();"},{"lineNumber":52,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":54,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"xyzhang00"},"content":"     * Marks specific task as done"},{"lineNumber":56,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"     * @param index Index of specific task"},{"lineNumber":58,"author":{"gitId":"xyzhang00"},"content":"     * @return Task marked as done"},{"lineNumber":59,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"xyzhang00"},"content":"    public Task markCompleted(int index) {"},{"lineNumber":61,"author":{"gitId":"xyzhang00"},"content":"        Task task \u003d this.list.get(index);"},{"lineNumber":62,"author":{"gitId":"xyzhang00"},"content":"        task.setCompleted();"},{"lineNumber":63,"author":{"gitId":"xyzhang00"},"content":"        return task;"},{"lineNumber":64,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":66,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"xyzhang00"},"content":"     * Deletes specific task from TaskList"},{"lineNumber":68,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"xyzhang00"},"content":"     * @param index Index of specific task"},{"lineNumber":70,"author":{"gitId":"xyzhang00"},"content":"     * @return Task that was deleted"},{"lineNumber":71,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"xyzhang00"},"content":"    public Task delete(int index) {"},{"lineNumber":73,"author":{"gitId":"xyzhang00"},"content":"        Task task \u003d this.list.get(index);"},{"lineNumber":74,"author":{"gitId":"xyzhang00"},"content":"        this.list.remove(index);"},{"lineNumber":75,"author":{"gitId":"xyzhang00"},"content":"        return task;"},{"lineNumber":76,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":78,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"xyzhang00"},"content":"     * Finds tasks with name same as some text"},{"lineNumber":80,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"xyzhang00"},"content":"     * @param text Given text"},{"lineNumber":82,"author":{"gitId":"xyzhang00"},"content":"     * @return List of tasks"},{"lineNumber":83,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"xyzhang00"},"content":"    public TaskList find(String text) {"},{"lineNumber":85,"author":{"gitId":"xyzhang00"},"content":"        TaskList result \u003d new TaskList();"},{"lineNumber":86,"author":{"gitId":"xyzhang00"},"content":"        for(Task curr : this.list) {"},{"lineNumber":87,"author":{"gitId":"xyzhang00"},"content":"            if(curr.getName().contains(text)) {"},{"lineNumber":88,"author":{"gitId":"xyzhang00"},"content":"                result.addTask(curr);"},{"lineNumber":89,"author":{"gitId":"xyzhang00"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"xyzhang00"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"xyzhang00"},"content":"        return result;"},{"lineNumber":92,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":93}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":" * Todo task"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"     * Todo constructor"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"     * @param taskName Name of task"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"     * @param isCompleted Completion status of task"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"    public Todo(String taskName, boolean isCompleted) {"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"        super(taskName, isCompleted);"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"     * Generates string to be stored in local disk"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"     * @return String with specific format"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    public String toStorageString() {"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"        return \"T || \" + (this.isCompleted ? \"1\" : \"0\") + \" || \" + this.taskName;"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":29}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"xyzhang00":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"xyzhang00":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.Deadline;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"import duke.tasks.Todo;"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"public class DukeTest {"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"    public void testTodoString() {"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"        assertEquals(\"[T][\\u2717] sleep\", new Todo(\"sleep\", false).toString());"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"    public void testDeadlineString() {"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"        assertEquals(\"[D][\\u2717] sleep (by: Mar 29 2000)\", new Deadline(\"sleep\", false, \"2000-03-29\").toString());"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    @Test void testEventString() {"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"        assertEquals(\"[T][\\u2717] sleep (at: Mar 29 2000)\", new Deadline(\"sleep\", false, \"2000-03-29\").toString());"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":24}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"xyzhang00":1,"-":37}}]
