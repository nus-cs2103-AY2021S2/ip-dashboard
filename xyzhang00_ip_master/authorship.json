[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"public class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"    protected String by;"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"        this.by \u003d by;"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"}"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":""}],"authorContributionMap":{"xyzhang00":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        String logo \u003d \"      ____        _        \\n\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"     |  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"     | | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"     | |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"     |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        System.out.println(\"     Konichiwa~~ Watashi wa \\n\" + logo + \"     desu!\\n     What can I do for you today?\");"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"        if(sc.hasNext()){"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            String command \u003d sc.nextLine();"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":"            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"            while(!command.equals(\"bye\")){"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"                if(command.equals(\"list\")){"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"                    System.out.println(\"     Koko wa list of tasks desu~\");"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"                    for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":23,"author":{"gitId":"xyzhang00"},"content":"                        System.out.println(\"       \" + i + \". \" + tasks.get(i - 1).toString());"},{"lineNumber":24,"author":{"gitId":"xyzhang00"},"content":"                    }"},{"lineNumber":25,"author":{"gitId":"xyzhang00"},"content":"                    System.out.println(\"     Ganbatte ne!\");"},{"lineNumber":26,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":27,"author":{"gitId":"xyzhang00"},"content":"                } else if(command.startsWith(\"done\")){"},{"lineNumber":28,"author":{"gitId":"xyzhang00"},"content":"                    try {"},{"lineNumber":29,"author":{"gitId":"xyzhang00"},"content":"                        int taskNum \u003d Integer.valueOf(command.substring(5));"},{"lineNumber":30,"author":{"gitId":"xyzhang00"},"content":"                    } catch (Exception e){"},{"lineNumber":31,"author":{"gitId":"xyzhang00"},"content":"                        throw new DukeException(\":( Task number not detected! Please recheck format of command.\");"},{"lineNumber":32,"author":{"gitId":"xyzhang00"},"content":"                    }"},{"lineNumber":33,"author":{"gitId":"xyzhang00"},"content":"                    int taskNum \u003d Integer.valueOf(command.substring(5));"},{"lineNumber":34,"author":{"gitId":"xyzhang00"},"content":"                    if(taskNum \u003c\u003d 0 || taskNum \u003e tasks.size()){"},{"lineNumber":35,"author":{"gitId":"xyzhang00"},"content":"                        throw new DukeException(\":( Invalid task number! Please try again.\");"},{"lineNumber":36,"author":{"gitId":"xyzhang00"},"content":"                    }"},{"lineNumber":37,"author":{"gitId":"xyzhang00"},"content":"                    tasks.get(taskNum - 1).setCompleted();"},{"lineNumber":38,"author":{"gitId":"xyzhang00"},"content":"                    System.out.println(\"     Otsukare! I\u0027ve marked this task as done:\");"},{"lineNumber":39,"author":{"gitId":"xyzhang00"},"content":"                    System.out.println(\"       \" + tasks.get(taskNum - 1).toString());"},{"lineNumber":40,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":41,"author":{"gitId":"xyzhang00"},"content":"                } else if(command.startsWith(\"delete\")){"},{"lineNumber":42,"author":{"gitId":"xyzhang00"},"content":"                    try {"},{"lineNumber":43,"author":{"gitId":"xyzhang00"},"content":"                        int taskNum \u003d Integer.valueOf(command.substring(7));"},{"lineNumber":44,"author":{"gitId":"xyzhang00"},"content":"                    } catch (Exception e){"},{"lineNumber":45,"author":{"gitId":"xyzhang00"},"content":"                        throw new DukeException(\":( Task number not detected! Please recheck format of command.\");"},{"lineNumber":46,"author":{"gitId":"xyzhang00"},"content":"                    }"},{"lineNumber":47,"author":{"gitId":"xyzhang00"},"content":"                    int taskNum \u003d Integer.valueOf(command.substring(7));"},{"lineNumber":48,"author":{"gitId":"xyzhang00"},"content":"                    if(taskNum \u003c\u003d 0 || taskNum \u003e tasks.size()){"},{"lineNumber":49,"author":{"gitId":"xyzhang00"},"content":"                        throw new DukeException(\":( Invalid task number! Please try again.\");"},{"lineNumber":50,"author":{"gitId":"xyzhang00"},"content":"                    }"},{"lineNumber":51,"author":{"gitId":"xyzhang00"},"content":"                    System.out.println(\"     Otsukare! I\u0027ve removed the task:\");"},{"lineNumber":52,"author":{"gitId":"xyzhang00"},"content":"                    System.out.println(\"       \" + tasks.get(taskNum - 1).toString());"},{"lineNumber":53,"author":{"gitId":"xyzhang00"},"content":"                    tasks.remove(taskNum - 1);"},{"lineNumber":54,"author":{"gitId":"xyzhang00"},"content":"                    System.out.println(\"     Now you have \" + tasks.size() + \" tasks in the list.list\");"},{"lineNumber":55,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":56,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":57,"author":{"gitId":"xyzhang00"},"content":"                } else if(command.startsWith(\"todo\")){"},{"lineNumber":58,"author":{"gitId":"xyzhang00"},"content":"                    if(command.length()\u003c 5){"},{"lineNumber":59,"author":{"gitId":"xyzhang00"},"content":"                        throw new DukeException(\":( Description of ToDos cannot be empty! Please try again.\");"},{"lineNumber":60,"author":{"gitId":"xyzhang00"},"content":"                    }"},{"lineNumber":61,"author":{"gitId":"xyzhang00"},"content":"                    Todo curr \u003d new Todo(command.substring(5));"},{"lineNumber":62,"author":{"gitId":"xyzhang00"},"content":"                    tasks.add(curr);"},{"lineNumber":63,"author":{"gitId":"xyzhang00"},"content":"                    System.out.println(\"     Hai, I\u0027ve added this task:\\n       \" + curr.toString() +"},{"lineNumber":64,"author":{"gitId":"xyzhang00"},"content":"                            \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":65,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":66,"author":{"gitId":"xyzhang00"},"content":"                } else if(command.startsWith(\"deadline\")){"},{"lineNumber":67,"author":{"gitId":"xyzhang00"},"content":"                    int cut \u003d command.indexOf(\"/\");"},{"lineNumber":68,"author":{"gitId":"xyzhang00"},"content":"                    if(cut \u003d\u003d -1 || command.length()\u003c\u003d cut +4 ){"},{"lineNumber":69,"author":{"gitId":"xyzhang00"},"content":"                        throw new DukeException(\":( Deadline timing not specified! Please try again.\");"},{"lineNumber":70,"author":{"gitId":"xyzhang00"},"content":"                    }"},{"lineNumber":71,"author":{"gitId":"xyzhang00"},"content":"                    try {"},{"lineNumber":72,"author":{"gitId":"xyzhang00"},"content":"                        command.substring(9, cut-1);"},{"lineNumber":73,"author":{"gitId":"xyzhang00"},"content":"                    } catch (Exception e){"},{"lineNumber":74,"author":{"gitId":"xyzhang00"},"content":"                        throw new DukeException(\":( Task name not detected! Please try again.\");"},{"lineNumber":75,"author":{"gitId":"xyzhang00"},"content":"                    }"},{"lineNumber":76,"author":{"gitId":"xyzhang00"},"content":"                    Deadline curr \u003d new Deadline(command.substring(9, cut-1), command.substring(cut+4));"},{"lineNumber":77,"author":{"gitId":"xyzhang00"},"content":"                    tasks.add(curr);"},{"lineNumber":78,"author":{"gitId":"xyzhang00"},"content":"                    System.out.println(\"     Hai, I\u0027ve added this task:\\n       \" + curr.toString() +"},{"lineNumber":79,"author":{"gitId":"xyzhang00"},"content":"                            \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":80,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":81,"author":{"gitId":"xyzhang00"},"content":"                } else if(command.startsWith(\"event\")){"},{"lineNumber":82,"author":{"gitId":"xyzhang00"},"content":"                    int cut \u003d command.indexOf(\"/\");"},{"lineNumber":83,"author":{"gitId":"xyzhang00"},"content":"                    if(cut \u003d\u003d -1 || command.length()\u003c\u003d cut +4 ){"},{"lineNumber":84,"author":{"gitId":"xyzhang00"},"content":"                        throw new DukeException(\":( Event timing not specified! Please try again.\");"},{"lineNumber":85,"author":{"gitId":"xyzhang00"},"content":"                    }"},{"lineNumber":86,"author":{"gitId":"xyzhang00"},"content":"                    try {"},{"lineNumber":87,"author":{"gitId":"xyzhang00"},"content":"                        command.substring(6, cut-1);"},{"lineNumber":88,"author":{"gitId":"xyzhang00"},"content":"                    } catch (Exception e){"},{"lineNumber":89,"author":{"gitId":"xyzhang00"},"content":"                        throw new DukeException(\":( Task name not detected! Please try again.\");"},{"lineNumber":90,"author":{"gitId":"xyzhang00"},"content":"                    }"},{"lineNumber":91,"author":{"gitId":"xyzhang00"},"content":"                    Event curr \u003d new Event(command.substring(6, cut-1), command.substring(cut+4));"},{"lineNumber":92,"author":{"gitId":"xyzhang00"},"content":"                    tasks.add(curr);"},{"lineNumber":93,"author":{"gitId":"xyzhang00"},"content":"                    System.out.println(\"     Hai, I\u0027ve added this task:\\n       \" + curr.toString() +"},{"lineNumber":94,"author":{"gitId":"xyzhang00"},"content":"                            \"\\n     Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":95,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":96,"author":{"gitId":"xyzhang00"},"content":"                } else {"},{"lineNumber":97,"author":{"gitId":"xyzhang00"},"content":"                    throw new DukeException(\":( Sumimasen I cannot understand the command : \" + command);"},{"lineNumber":98,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":99,"author":{"gitId":"xyzhang00"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":101,"author":{"gitId":"xyzhang00"},"content":"                command \u003d sc.nextLine();"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"            System.out.println(\"     Sayonara! Mata ne~ ;)\");"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"xyzhang00":89,"-":18}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"public class DukeException extends Exception{"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"    public DukeException(String msg){"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"        super(msg);"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"    protected String at;"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"    public Event(String description, String at) {"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"        this.at \u003d at;"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"    protected String taskName;"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"    protected boolean completed;"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":"    public Task(String taskName) {"},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"        this.completed \u003d false;"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"    public String getStatus(){"},{"lineNumber":11,"author":{"gitId":"xyzhang00"},"content":"        return completed ? \"\\u2717\" : \" \";"},{"lineNumber":12,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":14,"author":{"gitId":"xyzhang00"},"content":"    public void setCompleted(){"},{"lineNumber":15,"author":{"gitId":"xyzhang00"},"content":"        this.completed \u003d true;"},{"lineNumber":16,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":18,"author":{"gitId":"xyzhang00"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"xyzhang00"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"xyzhang00"},"content":"        return \"[\"+this.getStatus()+\"] \" + this.taskName;"},{"lineNumber":21,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyzhang00"},"content":"public class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"xyzhang00"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"xyzhang00"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"xyzhang00"},"content":""},{"lineNumber":6,"author":{"gitId":"xyzhang00"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"xyzhang00"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"xyzhang00"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":9,"author":{"gitId":"xyzhang00"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"xyzhang00"},"content":"}"}],"authorContributionMap":{"xyzhang00":10}}]
