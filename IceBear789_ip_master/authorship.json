[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"    protected final String deadline;"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"    public Deadline(String deadlineInfo) throws DukeException{"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"        super((deadlineInfo.split(\"/by\")[0]).substring(0,"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"                deadlineInfo.split(\"/by\")[0].length() - 1));"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"        try {"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"            this.deadline \u003d deadlineInfo.split(\"/by\")[1].substring(1);"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"            throw new DukeException(\"Invalid input for new deadline\");"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"        if (this.isDone) {"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"            return \"[D][X] \" + this.taskName + \" (by: \" + deadline + \")\";"},{"lineNumber":18,"author":{"gitId":"IceBear789"},"content":"        } else {"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"            return \"[D][ ] \" + this.taskName + \" (by: \" + deadline + \")\";"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"IceBear789"},"content":"}"}],"authorContributionMap":{"IceBear789":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"    ArrayList\u003cTask\u003e storedTasks;"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"        Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"        Duke iceBear \u003d new Duke();"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"        while (true) {"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"            String nextCommand \u003d scan.nextLine();"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"            if (nextCommand.equals(\"bye\")) {"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"                break;"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"            } else {"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"                iceBear.performCommand(nextCommand);"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"            }"},{"lineNumber":18,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":21,"author":{"gitId":"IceBear789"},"content":"    public Duke() {"},{"lineNumber":22,"author":{"gitId":"IceBear789"},"content":"        this.storedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"IceBear789"},"content":"        System.out.println(\"Hello! I\u0027m Icebear\");"},{"lineNumber":24,"author":{"gitId":"IceBear789"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":25,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":27,"author":{"gitId":"IceBear789"},"content":"    public void performCommand(String command) {"},{"lineNumber":28,"author":{"gitId":"IceBear789"},"content":"        String commandWord \u003d command.split(\" \")[0];"},{"lineNumber":29,"author":{"gitId":"IceBear789"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"IceBear789"},"content":"            if (commandWord.equals(\"list\")) {"},{"lineNumber":31,"author":{"gitId":"IceBear789"},"content":"                this.listTask();"},{"lineNumber":32,"author":{"gitId":"IceBear789"},"content":"            } else if (commandWord.equals(\"done\")) {"},{"lineNumber":33,"author":{"gitId":"IceBear789"},"content":"                this.doneTask(command.substring(4));"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"            } else if (commandWord.equals(\"todo\")) {"},{"lineNumber":35,"author":{"gitId":"IceBear789"},"content":"                this.addToDo(command.substring(4));"},{"lineNumber":36,"author":{"gitId":"IceBear789"},"content":"            } else if (commandWord.equals(\"event\")) {"},{"lineNumber":37,"author":{"gitId":"IceBear789"},"content":"                this.addEvent(command.substring(5));"},{"lineNumber":38,"author":{"gitId":"IceBear789"},"content":"            } else if (commandWord.equals(\"deadline\")) {"},{"lineNumber":39,"author":{"gitId":"IceBear789"},"content":"                this.addDeadline(command.substring(8));"},{"lineNumber":40,"author":{"gitId":"IceBear789"},"content":"            } else if (commandWord.equals(\"delete\")) {"},{"lineNumber":41,"author":{"gitId":"IceBear789"},"content":"                this.delete(command.substring(6));"},{"lineNumber":42,"author":{"gitId":"IceBear789"},"content":"            } else {"},{"lineNumber":43,"author":{"gitId":"IceBear789"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":44,"author":{"gitId":"IceBear789"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"IceBear789"},"content":"        } catch (DukeException dukeError) {"},{"lineNumber":46,"author":{"gitId":"IceBear789"},"content":"            System.out.println(dukeError);"},{"lineNumber":47,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":50,"author":{"gitId":"IceBear789"},"content":"    public void addToDo(String taskName) throws DukeException {"},{"lineNumber":51,"author":{"gitId":"IceBear789"},"content":"        if (taskName.length() \u003d\u003d 0) {"},{"lineNumber":52,"author":{"gitId":"IceBear789"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":53,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"IceBear789"},"content":"        ToDo newTask \u003d new ToDo((taskName.substring(1)));"},{"lineNumber":55,"author":{"gitId":"IceBear789"},"content":"        this.storedTasks.add(newTask);"},{"lineNumber":56,"author":{"gitId":"IceBear789"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":57,"author":{"gitId":"IceBear789"},"content":"        System.out.println(\"  \" + newTask);"},{"lineNumber":58,"author":{"gitId":"IceBear789"},"content":"        System.out.println(this);"},{"lineNumber":59,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":61,"author":{"gitId":"IceBear789"},"content":"    public void addEvent(String taskName) throws DukeException {"},{"lineNumber":62,"author":{"gitId":"IceBear789"},"content":"        if (taskName.length() \u003d\u003d 0) {"},{"lineNumber":63,"author":{"gitId":"IceBear789"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":64,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"IceBear789"},"content":"        Event newTask \u003d new Event((taskName.substring(1)));"},{"lineNumber":66,"author":{"gitId":"IceBear789"},"content":"        this.storedTasks.add(newTask);"},{"lineNumber":67,"author":{"gitId":"IceBear789"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":68,"author":{"gitId":"IceBear789"},"content":"        System.out.println(\"  \" + newTask);"},{"lineNumber":69,"author":{"gitId":"IceBear789"},"content":"        System.out.println(this);"},{"lineNumber":70,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":72,"author":{"gitId":"IceBear789"},"content":"    public void addDeadline(String taskName) throws DukeException{"},{"lineNumber":73,"author":{"gitId":"IceBear789"},"content":"        if (taskName.length() \u003d\u003d 0) {"},{"lineNumber":74,"author":{"gitId":"IceBear789"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":75,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"IceBear789"},"content":"        Deadline newTask \u003d new Deadline((taskName.substring(1)));"},{"lineNumber":77,"author":{"gitId":"IceBear789"},"content":"        this.storedTasks.add(newTask);"},{"lineNumber":78,"author":{"gitId":"IceBear789"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":79,"author":{"gitId":"IceBear789"},"content":"        System.out.println(\"  \" + newTask);"},{"lineNumber":80,"author":{"gitId":"IceBear789"},"content":"        System.out.println(this);"},{"lineNumber":81,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":83,"author":{"gitId":"IceBear789"},"content":"    public void listTask() {"},{"lineNumber":84,"author":{"gitId":"IceBear789"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":85,"author":{"gitId":"IceBear789"},"content":"        for (int i \u003d 0; i \u003c storedTasks.size(); i++) {"},{"lineNumber":86,"author":{"gitId":"IceBear789"},"content":"            Task currTask \u003d storedTasks.get(i);"},{"lineNumber":87,"author":{"gitId":"IceBear789"},"content":"            System.out.println(i + 1 + \".\" + currTask);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":91,"author":{"gitId":"IceBear789"},"content":"    public void doneTask(String index) throws DukeException {"},{"lineNumber":92,"author":{"gitId":"IceBear789"},"content":"        if (index.length() \u003d\u003d 0) {"},{"lineNumber":93,"author":{"gitId":"IceBear789"},"content":"            throw new DukeException(\"☹ OOPS!!! The index of the task is missing.\");"},{"lineNumber":94,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"IceBear789"},"content":"        int doneIndex;"},{"lineNumber":96,"author":{"gitId":"IceBear789"},"content":"        try {"},{"lineNumber":97,"author":{"gitId":"IceBear789"},"content":"            doneIndex \u003d Integer.parseInt(index.substring(1));"},{"lineNumber":98,"author":{"gitId":"IceBear789"},"content":"        } catch (NumberFormatException error) {"},{"lineNumber":99,"author":{"gitId":"IceBear789"},"content":"            throw new DukeException(\"Index of task must be an integer\");"},{"lineNumber":100,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"IceBear789"},"content":"        if (this.storedTasks.size() \u003e\u003d doneIndex) {"},{"lineNumber":102,"author":{"gitId":"IceBear789"},"content":"            Task currTask \u003d this.storedTasks.get(doneIndex - 1);"},{"lineNumber":103,"author":{"gitId":"IceBear789"},"content":"            currTask.completeTask();"},{"lineNumber":104,"author":{"gitId":"IceBear789"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":105,"author":{"gitId":"IceBear789"},"content":"            System.out.println(\"  \" + currTask);"},{"lineNumber":106,"author":{"gitId":"IceBear789"},"content":"        } else {"},{"lineNumber":107,"author":{"gitId":"IceBear789"},"content":"            System.out.println(\"Task not found\");"},{"lineNumber":108,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":111,"author":{"gitId":"IceBear789"},"content":"    public void delete(String index) throws DukeException {"},{"lineNumber":112,"author":{"gitId":"IceBear789"},"content":"        if (index.length() \u003d\u003d 0) {"},{"lineNumber":113,"author":{"gitId":"IceBear789"},"content":"            throw new DukeException(\"☹ OOPS!!! The index to delete the task is missing.\");"},{"lineNumber":114,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"IceBear789"},"content":"        int deleteIndex;"},{"lineNumber":116,"author":{"gitId":"IceBear789"},"content":"        try {"},{"lineNumber":117,"author":{"gitId":"IceBear789"},"content":"            deleteIndex \u003d Integer.parseInt(index.substring(1));"},{"lineNumber":118,"author":{"gitId":"IceBear789"},"content":"        } catch (NumberFormatException error) {"},{"lineNumber":119,"author":{"gitId":"IceBear789"},"content":"            throw new DukeException(\"Index to delete must be an integer\");"},{"lineNumber":120,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"IceBear789"},"content":"        if (this.storedTasks.size() \u003e\u003d deleteIndex) {"},{"lineNumber":122,"author":{"gitId":"IceBear789"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":123,"author":{"gitId":"IceBear789"},"content":"            System.out.println(\"  \" + this.storedTasks.remove(deleteIndex - 1));"},{"lineNumber":124,"author":{"gitId":"IceBear789"},"content":"            System.out.println(this);"},{"lineNumber":125,"author":{"gitId":"IceBear789"},"content":"        } else {"},{"lineNumber":126,"author":{"gitId":"IceBear789"},"content":"            System.out.println(\"Task not found\");"},{"lineNumber":127,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":130,"author":{"gitId":"IceBear789"},"content":"    @Override"},{"lineNumber":131,"author":{"gitId":"IceBear789"},"content":"    public String toString() {"},{"lineNumber":132,"author":{"gitId":"IceBear789"},"content":"        if (this.storedTasks.size() \u003d\u003d 1) {"},{"lineNumber":133,"author":{"gitId":"IceBear789"},"content":"            return \"Now you have \" + this.storedTasks.size() + \" task in the list\";"},{"lineNumber":134,"author":{"gitId":"IceBear789"},"content":"        } else {"},{"lineNumber":135,"author":{"gitId":"IceBear789"},"content":"            return \"Now you have \" + this.storedTasks.size() + \" tasks in the list\";"},{"lineNumber":136,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"IceBear789":132,"-":6}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"    private final String errorMessage;"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"    public DukeException(String error) {"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"        this.errorMessage \u003d error;"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"        return this.errorMessage;"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"}"}],"authorContributionMap":{"IceBear789":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"    protected final String timing;"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"    public Event(String eventInfo) throws DukeException {"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"        super((eventInfo.split(\"/at\")[0]).substring(0,eventInfo.split(\"/at\")[0].length() - 1));"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"        try {"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"            this.timing \u003d eventInfo.split(\"/at\")[1].substring(1);"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"            throw new DukeException(\"Invalid input for new event\");"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"        if (this.isDone) {"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"            return \"[E][X] \" + this.taskName + \" (at: \" + timing + \")\";"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"IceBear789"},"content":"            return \"[E][ ] \" + this.taskName + \" (at: \" + timing + \")\";"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"IceBear789"},"content":"}"}],"authorContributionMap":{"IceBear789":21}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"abstract class Task {"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"    protected final String taskName;"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"    public Task(String taskName) {"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"    public void completeTask() {"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"        this.isDone \u003d true;"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"    public boolean isComplete() {"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"        return this.isDone;"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"}"}],"authorContributionMap":{"IceBear789":17}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"    public ToDo(String taskName) {"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"        super(taskName);"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":""},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"        if (this.isDone) {"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"            return \"[T][X] \" + this.taskName;"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"        } else {"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"            return \"[T][ ] \" + this.taskName;"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"}"}],"authorContributionMap":{"IceBear789":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"list"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"list"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"done 2"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"done 4"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"delete 3"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"list"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"bye"}],"authorContributionMap":{"IceBear789":13}}]
