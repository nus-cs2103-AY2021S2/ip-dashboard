{"authorDailyContributionsMap":{"IceBear789":[{"date":"2021-01-27","commitResults":[{"hash":"3c7bc079d5381ba6ad1438ecf2a9f5202a849b4a","messageTitle":"Add greet, echo and exit","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":7}}},{"hash":"bd1d2d0896678196a404eb5dfdaa84f49e081aec","messageTitle":"Add add and list","messageBody":"","tags":["Level-2","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":1}}},{"hash":"efb4a11ff4b338f8a4d2474dbbbfd549ab237c33","messageTitle":"Add mark as done","messageBody":"","tags":["Level-3","A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":10}}},{"hash":"f0490044156aaea755a8b4f90f90801feac9fab2","messageTitle":"Add ToDo","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":17}}},{"hash":"4e053b8618aa6286ca170fded9a5d2276681efd1","messageTitle":"Add Event","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":1}}},{"hash":"b9c3cf9dff728e58206ebfdd180a2f05be7de860","messageTitle":"Add Deadline","messageBody":"Add all three level 4 functionality\n","tags":["Level-4","A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":4}}},{"hash":"40dc6489a59170e7ad84f09ed2ef92b355a8a04c","messageTitle":"Add automated text UI testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0}}},{"hash":"4b76f0fe9e6588da6a0e2609de54d2d7345708fd","messageTitle":"Add the ability to handle errors","messageBody":"","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":55,"deletions":20}}},{"hash":"b56a93103f64754500e5d729d955b08cbdad500c","messageTitle":"Add Delete functionality","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":5},"java":{"insertions":51,"deletions":21}}},{"hash":"a4d5dc8a0a2018a6c9ca92764a96cf3802da045d","messageTitle":"Add Save functionality","messageBody":"Duke is unable to save the task list on the local computer itself.\n\nThe software might crash and cause data to be lost. Thus a backup\nis needed.\n\nSave the task list on the local computer serves as a backup in case\ndata is lost.\n\nSaving the task list on the local computer is convenient and\nalso reliable.\n","fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":9}}},{"hash":"fb2a8dd81ffa7ecb509e4f587458aa80031cbcbb","messageTitle":"Add ability to process date and times","messageBody":"Duke only sees date and time as just a string.\n\nIf duke can understand date and times properly, more advanced features\ncan be implemented.\n\nImplement date in Duke as a java.time.LocalDate object.\n\nChoose java.time.localDate as it has all the necessary features.\n","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":8}}},{"hash":"36d17a0710ede576aa8fea7d001c14e7ea1d29c9","messageTitle":"Refactor: Fixed some typos in error messages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"0feb770145227c193db0d40f9dc181b4673f4d90","messageTitle":"Add Parser class","messageBody":"Duke\u0027s ability to parse commands is very basic.\n\nMore advanced parsing features allow duke to understand commands better.\n\nImplement a new Parser class to improve Duke\u0027s parsing ability.\n\nCreating a separate Parser class adheres to OOP principles and makes\ncode more readable.\n","fileTypesAndContributionMap":{"java":{"insertions":131,"deletions":0}}},{"hash":"76380a40db69e94cee7379848bc96ba9df46bac9","messageTitle":"Add Storage and TaskList classes","messageBody":"Duke\u0027s task processing and file processing features are very basic.\n\nWe extend Duke\u0027s functionality by adding more task processing and file\nprocessing features.\n\nImplement 2 new classes Storage and TaskList.\n\nCreating separate classes for each function adheres to OOP principles\nand makes code more readable.\n","fileTypesAndContributionMap":{"java":{"insertions":174,"deletions":177}}},{"hash":"5dfd51539e03fd859a88cbdeb5f7eaace5c8bf27","messageTitle":"Add Ui class","messageBody":"Duke\u0027s Ui features are very basic.\n\nWe extend Duke\u0027s functionality by adding more Ui features.\n\nImplement a new Ui class to handle Ui features.\n\nCreating separate classes for each function adheres to OOP principles\nand makes code more readable.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":124,"deletions":28}}},{"hash":"957f56a235fb2a5bf40c06cbe086e1939feb907b","messageTitle":"refactor: Organise classes into one main package","messageBody":"Duke\u0027s classes are not organised into packages.\n\nDifficult to manage a large number of classes without packages.\n\nOrganise the classes into packages.\n\nWe can put related classes in the same package, making managing classes\neasier.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":3}}},{"hash":"0b4cc60c54ece1d2e9c839fc7a94a8500fbefa1f","messageTitle":"Add JUnit tests for Parser Class","messageBody":"Duke currently does not have tests for Parser Class.\n\nThere is a high chance a bug may occur in the Parser class in the\nfuture, when new code is added.\n\nImplement JUnit tests to ensure that the Parser class still functions\ncorrectly after future changes.\n\nJUnit tests were chosen due to their convenience.\n","tags":["v0.1"],"fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":16}}},{"hash":"3a39da9724e579e1dd868a2df3575aaf81410ea5","messageTitle":"Add more JUnit tests for Parser class","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"48ce75dd121e1b76f5bd5a933b58da00bd7a0345","messageTitle":"Add JavaDoc comments","messageBody":"The code for Dukebot have no JavaDoc comments.\n\nThis makes certain parts of the code difficult to understand.\n\nAdd JavaDoc comments for better readibility.\n","fileTypesAndContributionMap":{"java":{"insertions":199,"deletions":14}}},{"hash":"5cefd97779773db71c389217020afa789cebefe5","messageTitle":"Improve coding standard","messageBody":"Some parts of the code did not follow the standard coding style.\n\nThis makes certain parts of the code difficult to understand.\n\nStandardise coding for better readibility.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"2208ebc813ecf29a75c6d892313188bddc24aa0d","messageTitle":"Add Find","messageBody":"Duke does not have the ability to search task by keyword.\n\nWhen there are a large number of tasks, finding a specific task can be\nvery tedious.\n\nImplement find method to quickly find specific tasks by keyword.\n\nUsers can thus easily find specific tasks, even if there are a large\nnumber of tasks.\n","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":4}}},{"hash":"b938dbd230ccbd6a5a802c86bc4b63a653acac7b","messageTitle":"Fix minor bugs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2021-02-01","commitResults":[{"hash":"86a9ec936745c83acc5f25e7dbb94e7d487e1703","messageTitle":"Add Gradle","messageBody":"Duke project builds are not automated.\n\nAs the codebase gets larger, building Duke manually every single time\ngets too time-consuming.\n\nAutomate build process of Duke using Gradle.\n\nThis speeds up the build process via automation.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":42,"deletions":51},"sh":{"insertions":74,"deletions":0}}},{"hash":"cd5bbd98c60749e9ede36a51fbb7e9287d672f9b","messageTitle":"Add JavaDocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":1}}},{"hash":"c6f04ff269e21f2ca24478e60a3dccfec87de44a","messageTitle":"Refactor: Rewrote code that violates Checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":19}}},{"hash":"1acc06e98445349bfae96079b3ead2a549d6fff9","messageTitle":"Add JavaDocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2021-02-02","commitResults":[{"hash":"193a39c2f6b21dd2f6538ebcd159bb90a495a360","messageTitle":"Add GUI for Duke","messageBody":"Duke does not have currently have a GUI.\n\nDuke feels bland and boring.\n\nAdd a Graphical User Interface to Duke.\n\nMakes Duke more graphically pleasing.\n","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"java":{"insertions":259,"deletions":37}}}]},{"date":"2021-02-03","commitResults":[{"hash":"bdafe4cbca0cddd49c29e00c9c63fd269f20a76b","messageTitle":"Refactor: Implement GUI using FXML","messageBody":"The GUI for Duke is not implemented using FXML.\n\nCreating a GUI is long and tedious as it requires many lines of code.\n\nImplement GUI using FXML.\n\nMakes implementing a GUI faster and easier as FXML is more concise.\n","fileTypesAndContributionMap":{"java":{"insertions":122,"deletions":147}}},{"hash":"e7070c57c65adffbf2351a0454743386ab4e2cc7","messageTitle":"Add JavaDocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":2}}}]}]},"authorFileTypeContributionMap":{"IceBear789":{"java":987,"md":0,"fxml":35,"sh":74,"bat":0,"gradle":16,"txt":13}},"authorContributionVariance":{"IceBear789":94394.04},"authorDisplayNameMap":{"IceBear789":"CS2103-T16-1 PAN ..GBIN"}}
