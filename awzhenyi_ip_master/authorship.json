[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"test"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature 1 "},{"lineNumber":6,"author":{"gitId":"-"},"content":"Description of feature."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"Describe action and its outcome."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"`outcome`"}],"authorContributionMap":{"awzhenyi":1,"-":19}},{"path":"src/main/java/duke/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":" * A deadline task is a task which has a date it has to be done by"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"    protected String time;"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"     * Constructor for a deadline task"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"     * @param description Describes what the task is"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"     * @param time The date that the task have to be completed by"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"    public DeadlineTask(String description, String time) {"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"        this.time \u003d time;"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"     * Converts the date in the form of mm-dd-yyyy to a more natural and readable form"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"     * @return The formatted date and time in the form of E, MMM d yyyy. eg Sun, March 12 2020, 4pm"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"    public String convertDateTime() {"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"        String[] dateTime \u003d this.time.split(\"\\\\s+\");"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"        String dateOfEvent \u003d dateTime[0];"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"        String timeOfEvent \u003d dateTime[1];"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"        LocalDate parsedDate \u003d LocalDate.parse(dateOfEvent);"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"        return parsedDate.format(DateTimeFormatter.ofPattern(\"E, MMM d yyyy\")) + \" \" + timeOfEvent;"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"     * Displays the details of the task"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"     * @return Formatted string which shows the type of task, its description and its expected completion date and time"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"    public String toString() {"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + convertDateTime() + \")\";"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":43}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":" * Duke is a chatbot that helps the user to keep track of tasks that needs to be done."},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"     * main method run"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"     * @param args"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"     * @throws DukeException"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"     * @throws Exception"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"    public static void main(String[] args) throws DukeException, Exception {"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"        Ui.greet();"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"        Parser.read();"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"awzhenyi":16,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"public class DukeException extends Exception {"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"    public DukeException(String message) {"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"        super(message);"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":6}},{"path":"src/main/java/duke/EmptyArgument.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"public class EmptyArgument extends DukeException {"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"    public EmptyArgument(String message) {"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"        super(message);"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":9}},{"path":"src/main/java/duke/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":" * A event task is a task which has a date and duration of the event"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"public class EventTask extends Task {"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"    protected String time;"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"     * Constructor for a event task"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"     * @param description Describes what the task is"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"     * @param time The date and duration of time that the event is held"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"    public EventTask(String description, String time) {"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"        this.time \u003d time;"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"     * Converts the date in the form of mm-dd-yyyy to a more natural and readable form"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"     * @return The formatted date and time in the form of E, MMM d yyyy. eg Sun, March 12 2020, 4-6pm"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"    public String convertDateTime() {"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"        String[] dateTime \u003d this.time.split(\"\\\\s+\");"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"        String dateOfEvent \u003d dateTime[0];"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"        String timeOfEvent \u003d dateTime[1];"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"        LocalDate parsedDate \u003d LocalDate.parse(dateOfEvent);"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"        return parsedDate.format(DateTimeFormatter.ofPattern(\"E, MMM d yyyy\")) + \" \" + timeOfEvent;"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"     * Displays the details of the task"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"     * @return Formatted string which shows the type, description and the date and time duration of the event"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"    public String toString() {"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + convertDateTime() + \")\";"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":43}},{"path":"src/main/java/duke/InvalidArgument.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"public class InvalidArgument extends DukeException {"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"    public InvalidArgument(String message) {"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"        super(message);"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":8}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":" * Parser class which handles the parsing of user\u0027s input and delivers the expected action accordingly"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"    public Parser() {"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"     * Gets the tasklist"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"     * @return the tasklist"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"        return taskList;"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"     * Adds a new task into the existing tasklist"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"     * @param newTask Task to be added"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"    public static void addTask(Task newTask) {"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"        taskList.add(newTask);"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\" + \"\\n\" + newTask.toString()"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"                + \"\\n\" + \"Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"     * Lists out all the tasks currently in the tasklist"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"    public static void listTask() {"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"        System.out.println(\"Here are the task in your list:\");"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); ++i) {"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"            System.out.println(i + 1 + \". \" + taskList.get(i));"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"     * Deletes a specific task from the tasklist"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"     * @param i The numbering of the task to be deleted in chronological order"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"    public static void deleteTask(int i) {"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"        Task task \u003d taskList.get(i - 1);"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"        taskList.remove(i - 1);"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\" + \"\\n\" + task.toString()"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"                + \"\\n\" + \"Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"     * Marks a current task on the tasklist as done"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"     * @param i The numbering of the task to be marked as done in chronological order"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"    public static void markDone(int i) {"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"        Task task \u003d taskList.get(i - 1);"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"        task.done();"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \" + \"\\n\" + task.toString());"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"     * Reads user input and parse it accordingly so as to deliver the according action correctly"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"     * @throws DukeException if user input is empty or invalid"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"     * @throws Exception"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"    public static void read() throws DukeException, Exception {"},{"lineNumber":72,"author":{"gitId":"awzhenyi"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":73,"author":{"gitId":"awzhenyi"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":75,"author":{"gitId":"awzhenyi"},"content":"            if (input.equals(\"\")) {"},{"lineNumber":76,"author":{"gitId":"awzhenyi"},"content":"                throw new EmptyArgument(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":77,"author":{"gitId":"awzhenyi"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"awzhenyi"},"content":"            if (input.startsWith(\"done\")) {"},{"lineNumber":79,"author":{"gitId":"awzhenyi"},"content":"                String[] spiltInput \u003d input.split(\"\\\\s+\");"},{"lineNumber":80,"author":{"gitId":"awzhenyi"},"content":"                int taskNumber \u003d Integer.parseInt(spiltInput[1]);"},{"lineNumber":81,"author":{"gitId":"awzhenyi"},"content":"                markDone(taskNumber);"},{"lineNumber":82,"author":{"gitId":"awzhenyi"},"content":"            } else if (input.startsWith(\"delete\")) {"},{"lineNumber":83,"author":{"gitId":"awzhenyi"},"content":"                String[] spiltInput \u003d input.split(\"\\\\s+\");"},{"lineNumber":84,"author":{"gitId":"awzhenyi"},"content":"                int taskNumber \u003d Integer.parseInt(spiltInput[1]);"},{"lineNumber":85,"author":{"gitId":"awzhenyi"},"content":"                deleteTask(taskNumber);"},{"lineNumber":86,"author":{"gitId":"awzhenyi"},"content":"            } else if (input.startsWith(\"event\")) {"},{"lineNumber":87,"author":{"gitId":"awzhenyi"},"content":"                String[] spiltInput \u003d input.split(\"\\\\s+\");"},{"lineNumber":88,"author":{"gitId":"awzhenyi"},"content":"                String time \u003d \"\";"},{"lineNumber":89,"author":{"gitId":"awzhenyi"},"content":"                String desc \u003d \"\";"},{"lineNumber":90,"author":{"gitId":"awzhenyi"},"content":"                int start \u003d 0;"},{"lineNumber":91,"author":{"gitId":"awzhenyi"},"content":"                for (int i \u003d 1; i \u003c spiltInput.length; ++i) {"},{"lineNumber":92,"author":{"gitId":"awzhenyi"},"content":"                    if (spiltInput[i].equals(\"/at\")) {"},{"lineNumber":93,"author":{"gitId":"awzhenyi"},"content":"                        start \u003d i;"},{"lineNumber":94,"author":{"gitId":"awzhenyi"},"content":"                        break;"},{"lineNumber":95,"author":{"gitId":"awzhenyi"},"content":"                    }"},{"lineNumber":96,"author":{"gitId":"awzhenyi"},"content":"                    if (desc.equals(\"\")) {"},{"lineNumber":97,"author":{"gitId":"awzhenyi"},"content":"                        desc +\u003d spiltInput[i];"},{"lineNumber":98,"author":{"gitId":"awzhenyi"},"content":"                    } else {"},{"lineNumber":99,"author":{"gitId":"awzhenyi"},"content":"                        desc \u003d desc + \" \" + spiltInput[i];"},{"lineNumber":100,"author":{"gitId":"awzhenyi"},"content":"                    }"},{"lineNumber":101,"author":{"gitId":"awzhenyi"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"awzhenyi"},"content":"                for (int i \u003d start + 1; i \u003c spiltInput.length; ++i) {"},{"lineNumber":103,"author":{"gitId":"awzhenyi"},"content":"                    if (time.equals(\"\")) {"},{"lineNumber":104,"author":{"gitId":"awzhenyi"},"content":"                        time +\u003d spiltInput[i];"},{"lineNumber":105,"author":{"gitId":"awzhenyi"},"content":"                    } else {"},{"lineNumber":106,"author":{"gitId":"awzhenyi"},"content":"                        time \u003d time + \" \" + spiltInput[i];"},{"lineNumber":107,"author":{"gitId":"awzhenyi"},"content":"                    }"},{"lineNumber":108,"author":{"gitId":"awzhenyi"},"content":"                }"},{"lineNumber":109,"author":{"gitId":"awzhenyi"},"content":"                EventTask task \u003d new EventTask(desc, time);"},{"lineNumber":110,"author":{"gitId":"awzhenyi"},"content":"                addTask(task);"},{"lineNumber":111,"author":{"gitId":"awzhenyi"},"content":"            } else if (input.startsWith(\"deadline\")) {"},{"lineNumber":112,"author":{"gitId":"awzhenyi"},"content":"                String[] spiltInput \u003d input.split(\"\\\\s+\");"},{"lineNumber":113,"author":{"gitId":"awzhenyi"},"content":"                String time \u003d \"\";"},{"lineNumber":114,"author":{"gitId":"awzhenyi"},"content":"                String desc \u003d \"\";"},{"lineNumber":115,"author":{"gitId":"awzhenyi"},"content":"                int start \u003d 0;"},{"lineNumber":116,"author":{"gitId":"awzhenyi"},"content":"                for (int i \u003d 1; i \u003c spiltInput.length; ++i) {"},{"lineNumber":117,"author":{"gitId":"awzhenyi"},"content":"                    if (spiltInput[i].equals(\"/by\")) {"},{"lineNumber":118,"author":{"gitId":"awzhenyi"},"content":"                        start \u003d i;"},{"lineNumber":119,"author":{"gitId":"awzhenyi"},"content":"                        break;"},{"lineNumber":120,"author":{"gitId":"awzhenyi"},"content":"                    }"},{"lineNumber":121,"author":{"gitId":"awzhenyi"},"content":"                    if (desc.equals(\"\")) {"},{"lineNumber":122,"author":{"gitId":"awzhenyi"},"content":"                        desc +\u003d spiltInput[i];"},{"lineNumber":123,"author":{"gitId":"awzhenyi"},"content":"                    } else {"},{"lineNumber":124,"author":{"gitId":"awzhenyi"},"content":"                        desc \u003d desc + \" \" + spiltInput[i];"},{"lineNumber":125,"author":{"gitId":"awzhenyi"},"content":"                    }"},{"lineNumber":126,"author":{"gitId":"awzhenyi"},"content":"                }"},{"lineNumber":127,"author":{"gitId":"awzhenyi"},"content":"                for (int i \u003d start + 1; i \u003c spiltInput.length; ++i) {"},{"lineNumber":128,"author":{"gitId":"awzhenyi"},"content":"                    if (time.equals(\"\")) {"},{"lineNumber":129,"author":{"gitId":"awzhenyi"},"content":"                        time +\u003d spiltInput[i];"},{"lineNumber":130,"author":{"gitId":"awzhenyi"},"content":"                    } else {"},{"lineNumber":131,"author":{"gitId":"awzhenyi"},"content":"                        time \u003d time + \" \" + spiltInput[i];"},{"lineNumber":132,"author":{"gitId":"awzhenyi"},"content":"                    }"},{"lineNumber":133,"author":{"gitId":"awzhenyi"},"content":"                }"},{"lineNumber":134,"author":{"gitId":"awzhenyi"},"content":"                DeadlineTask task \u003d new DeadlineTask(desc, time);"},{"lineNumber":135,"author":{"gitId":"awzhenyi"},"content":"                addTask(task);"},{"lineNumber":136,"author":{"gitId":"awzhenyi"},"content":"            } else if (input.startsWith(\"todo\")) {"},{"lineNumber":137,"author":{"gitId":"awzhenyi"},"content":"                String[] spiltInput \u003d input.split(\"\\\\s+\");"},{"lineNumber":138,"author":{"gitId":"awzhenyi"},"content":"                String desc \u003d \"\";"},{"lineNumber":139,"author":{"gitId":"awzhenyi"},"content":"                for (int i \u003d 1; i \u003c spiltInput.length; ++i) {"},{"lineNumber":140,"author":{"gitId":"awzhenyi"},"content":"                    if (desc.equals(\"\")) {"},{"lineNumber":141,"author":{"gitId":"awzhenyi"},"content":"                        desc +\u003d spiltInput[i];"},{"lineNumber":142,"author":{"gitId":"awzhenyi"},"content":"                    } else {"},{"lineNumber":143,"author":{"gitId":"awzhenyi"},"content":"                        desc \u003d desc + \" \" + spiltInput[i];"},{"lineNumber":144,"author":{"gitId":"awzhenyi"},"content":"                    }"},{"lineNumber":145,"author":{"gitId":"awzhenyi"},"content":"                }"},{"lineNumber":146,"author":{"gitId":"awzhenyi"},"content":"                ToDoTask task \u003d new ToDoTask(desc);"},{"lineNumber":147,"author":{"gitId":"awzhenyi"},"content":"                addTask(task);"},{"lineNumber":148,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":149,"author":{"gitId":"awzhenyi"},"content":"            } else if (input.equals(\"bye\")) {"},{"lineNumber":150,"author":{"gitId":"awzhenyi"},"content":"                Ui.exit();"},{"lineNumber":151,"author":{"gitId":"awzhenyi"},"content":"                break;"},{"lineNumber":152,"author":{"gitId":"awzhenyi"},"content":"            } else if (input.equals(\"list\")) {"},{"lineNumber":153,"author":{"gitId":"awzhenyi"},"content":"                listTask();"},{"lineNumber":154,"author":{"gitId":"awzhenyi"},"content":"            } else if (input.equals(\"save\")) {"},{"lineNumber":155,"author":{"gitId":"awzhenyi"},"content":"                Storage.saveTaskList();"},{"lineNumber":156,"author":{"gitId":"awzhenyi"},"content":"            } else if (input.equals(\"load\")) {"},{"lineNumber":157,"author":{"gitId":"awzhenyi"},"content":"                Storage.loadTaskList();"},{"lineNumber":158,"author":{"gitId":"awzhenyi"},"content":"            } else {"},{"lineNumber":159,"author":{"gitId":"awzhenyi"},"content":"                throw new InvalidArgument(\"Your input is invalid, Please try again\");"},{"lineNumber":160,"author":{"gitId":"awzhenyi"},"content":"            }"},{"lineNumber":161,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":164,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":164}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import java.io.FileReader;"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import java.time.LocalDate;"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":" * Storage class which handles the saving and laoding of tasklist to and from a text file"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"    public Storage() {"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"     * Saves the existing tasks in the tasklist to a textfile"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"     * @throws IOException when the filename does not exist"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"    public static void saveTaskList() throws IOException {"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"            File file \u003d new File(\"src/main/java/duke/duke.txt\");"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"            FileWriter fw \u003d new FileWriter(file);"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"            for (int i \u003d 0; i \u003c Parser.getTaskList().size(); ++i) {"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"                fw.write(Parser.getTaskList().get(i).toString() + \"\\n\");"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"            fw.close();"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"        } catch (Exception ex) {"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"            System.out.println(\"error\" + ex.getMessage());"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"     * Loads the tasks from the text file back into the task list array"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"     * @throws FileNotFoundException if the specified file does not exist"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"    public static void loadTaskList() throws FileNotFoundException {"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"        String line \u003d null;"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(\"src/main/java/duke/duke.txt\"));"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"                String[] spiltLine \u003d line.split(\"\\\\s+\");"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"                char typeOfEvent \u003d spiltLine[0].charAt(1);"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"                String desc \u003d \"\";"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"                String date \u003d \"\";"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"                int start \u003d 0;"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"                for (int i \u003d 1; i \u003c spiltLine.length; ++i) {"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"                    if (spiltLine[i].equals(\"(by:\") || spiltLine[i].equals(\"(at:\")) {"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"                        start \u003d i;"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"                        break;"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"                    }"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"                    if (desc.equals(\"\")) {"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"                        desc +\u003d spiltLine[i];"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"                    } else {"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"                        desc \u003d desc + \" \" + spiltLine[i];"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"                    }"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"                for (int i \u003d start + 1; i \u003c spiltLine.length - 1; ++i) {"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"                    if (date.equals(\"\")) {"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"                        date +\u003d spiltLine[i];"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"                    } else {"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"                        date \u003d date + \" \" + spiltLine[i];"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"                    }"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"awzhenyi"},"content":"                DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"E, MMM d yyyy\");"},{"lineNumber":73,"author":{"gitId":"awzhenyi"},"content":"                DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":"                date \u003d LocalDate.parse(date, inputFormat).format(outputFormat);"},{"lineNumber":75,"author":{"gitId":"awzhenyi"},"content":"                String time \u003d spiltLine[spiltLine.length - 1].substring(0, spiltLine[spiltLine.length - 1]"},{"lineNumber":76,"author":{"gitId":"awzhenyi"},"content":"                        .length() - 1);"},{"lineNumber":77,"author":{"gitId":"awzhenyi"},"content":"                date \u003d date + \" \" + time;"},{"lineNumber":78,"author":{"gitId":"awzhenyi"},"content":"                switch (typeOfEvent) {"},{"lineNumber":79,"author":{"gitId":"awzhenyi"},"content":"                case \u0027D\u0027: {"},{"lineNumber":80,"author":{"gitId":"awzhenyi"},"content":"                    DeadlineTask task \u003d new DeadlineTask(desc, date);"},{"lineNumber":81,"author":{"gitId":"awzhenyi"},"content":"                    Parser.getTaskList().add(task);"},{"lineNumber":82,"author":{"gitId":"awzhenyi"},"content":"                    break;"},{"lineNumber":83,"author":{"gitId":"awzhenyi"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"awzhenyi"},"content":"                case \u0027E\u0027: {"},{"lineNumber":85,"author":{"gitId":"awzhenyi"},"content":"                    EventTask task \u003d new EventTask(desc, date);"},{"lineNumber":86,"author":{"gitId":"awzhenyi"},"content":"                    Parser.getTaskList().add(task);"},{"lineNumber":87,"author":{"gitId":"awzhenyi"},"content":"                    break;"},{"lineNumber":88,"author":{"gitId":"awzhenyi"},"content":"                }"},{"lineNumber":89,"author":{"gitId":"awzhenyi"},"content":"                case \u0027T\u0027: {"},{"lineNumber":90,"author":{"gitId":"awzhenyi"},"content":"                    ToDoTask task \u003d new ToDoTask(desc);"},{"lineNumber":91,"author":{"gitId":"awzhenyi"},"content":"                    break;"},{"lineNumber":92,"author":{"gitId":"awzhenyi"},"content":"                }"},{"lineNumber":93,"author":{"gitId":"awzhenyi"},"content":"                default:"},{"lineNumber":94,"author":{"gitId":"awzhenyi"},"content":"                    break;"},{"lineNumber":95,"author":{"gitId":"awzhenyi"},"content":"                }"},{"lineNumber":96,"author":{"gitId":"awzhenyi"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"awzhenyi"},"content":"        } catch (Exception ex) {"},{"lineNumber":98,"author":{"gitId":"awzhenyi"},"content":"            ex.printStackTrace();"},{"lineNumber":99,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":101}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":" * A task"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"    protected Boolean isDone;"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"     * Constructor for a task"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"     * @param description Details of the task"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"    public Task(String description) {"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"     * Marks the task as done"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"    public void done() {"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"        this.isDone \u003d true;"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"     * Displays the details of the task"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"     * @return Formatted string which shows the description and status of the task"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"        String done \u003d this.isDone ? \"\\u2713\" : \"X\";"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"        return \"[\" + done + \"] \" + this.description;"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":36}},{"path":"src/main/java/duke/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":" * A to-do task is a task which is expected to be done sometime in the future but does not have a set deadline"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"public class ToDoTask extends Task {"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"     * Constructor for a to-do task"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"     * @param description Details of the task"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"    public ToDoTask(String description) {"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"     * Displays the details of the task"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"     * @return Formatted string which shows the type, description and status of the task"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":24}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":" * Handles the welcome and exit portions of the chatbot"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"    private static final String logo \u003d \" ____        _        \\n\""},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"    public Ui() {"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"     * Greets the user when the chatbot is ran"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"    public static void greet() {"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"        System.out.println(\"Hello! I\u0027m Duke\" + \"\\n\" + \"What can I do for you?\");"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"     * Displays exit message when user exits the chatbot"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"    public static void exit() {"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":32}},{"path":"src/main/java/duke/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"[D][X] project meeting (by: Sun, Dec 1 2019 4pm)"}],"authorContributionMap":{"awzhenyi":1}},{"path":"src/test/java/duke/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"public class DeadlineTaskTest {"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"    public void TimeTest() {"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"        DeadlineTask newTask \u003d new DeadlineTask(\"deadline project meeting\", \"2019-12-01 4pm\");"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"        assertEquals(\"2019-12-01 4pm\", newTask.time);"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"    public void CorrectTimeConversionTest() {"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"        DeadlineTask newTask \u003d new DeadlineTask(\"deadline project meeting\", \"2019-12-01 4pm\");"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"        String convertedTime \u003d newTask.convertDateTime();"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"        assertEquals(\"Sun, Dec 1 2019 4pm\", convertedTime);"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":20}},{"path":"src/test/java/duke/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"public class ToDoTaskTest {"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"    public void descriptionTest() {"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"        ToDoTask newTask \u003d new ToDoTask(\"read a book\");"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"        assertEquals(\"read a book\", newTask.description);"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"    public void isDoneTest() {"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"        ToDoTask newTask \u003d new ToDoTask(\"read a book\");"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"        assertEquals(false, newTask.isDone);"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"deadline project meeting /by 2019-12-01 4pm"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"event project meeting /at 2019-12-01 2-4pm"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"delete 1"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"list"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"bye"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":""}],"authorContributionMap":{"awzhenyi":8}}]
